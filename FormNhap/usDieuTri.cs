using System;
using QLBV_Database;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Text;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using System.Linq;
using DevExpress.XtraGrid.Columns;
using DevExpress.XtraGrid.Views.Grid;
using DevExpress.XtraGrid;
using QLBV.FormThamSo;
using DevExpress.XtraEditors.DXErrorProvider;
using DevExpress.XtraEditors.Controls;
using QLBV.DungChung;
using QLBV.ChucNang;
using System.Diagnostics;
using System.Configuration;
using DevExpress.Utils;
using DevExpress.XtraBars;
using DevExpress.XtraGrid.Views.Grid.ViewInfo;
using QLBV.MoRong.FormNhap;
using System.Globalization;
using QLBV.Models.Business.TT27;
using QLBV.Utilities.Commons;
using QLBV.Models.Dictionaries.Thuoc;
using QLBV.Providers.Business.SyncMedicine;
using Newtonsoft.Json;
using static QLBV.FormNhap.usDieuTri;
using static QLBV.ChucNang.frm_DsMaBenhChon;
using QLBV.Forms.Circulars27;
using QLBV.Utilities.Helppers;

namespace QLBV.FormNhap
{
    public partial class usDieuTri : DevExpress.XtraEditors.XtraUserControl
    {
        public static string _buong = string.Empty;
        public static string _giuong = string.Empty;
        public static List<DThuocct> _ldtct = new List<DThuocct>();
        public static int iddthuocmau = 0, laydon = 0;

        private readonly SyncMedicineProvider _syncMedicineProvider;

        static string _baseURlCirculars27;
        public static string BaseURlCirculars27
        {
            get
            {
                if (string.IsNullOrEmpty(_baseURlCirculars27))
                {
                    _baseURlCirculars27 = System.Configuration.ConfigurationManager.AppSettings["Circulars27"];
                }

                return _baseURlCirculars27;
            }
        }

        public usDieuTri()
        {
            InitializeComponent();

            _syncMedicineProvider = new SyncMedicineProvider();

            if (DungChung.Bien.MaBV == "01071")
            {
                cboKieuDon.Properties.Items.RemoveAt(5);
                cboKieuDon.Properties.Items.Add("Tủ trực");
                //cboChuyenKhoa.Properties.Items.Add("Tủ trực");
            }
            if (DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24272")
            {
                grvChamSoc.Columns.Remove(colCheDoCS);//1
                colDienBienCS.Width = 77;
                colThucHienCS.Width = 81;
            }
            if (DungChung.Bien.MaBV != "14018" && DungChung.Bien.MaBV != "14017")
            {
                panelControl10.Height = panelControl10.Height - cboBacSyDT.Height;
            }
            if (DungChung.Bien.MaBV == "27022")
            {
                cboKieuDon.Properties.Items.Add("Ngoại trú");
            }
            DungChung.Bien.formInDon = "Điều trị";
        }

        string _maKPsd = ";";
        QLBV_Database.QLBVEntities DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
        //List<DThuoc> _lDonThuoc = new List<DThuoc>();
        List<DienBienNgayGio> _ldienbien = new List<DienBienNgayGio>();
        List<DienBien> _lchamsoc = new List<DienBien>();
        List<DienBien> _l15Ngaydt = new List<DienBien>();
        List<VLTL> _listVLTL = new List<VLTL>();
        int TTTab = 0;
        int TTLuu = 0;// 1 la tao moi, 2 la sua;
        bool checkMuaDonTra = false; // check mua lại đơn trả 14017
        bool isChonNhieuBenhKhac = false;

        public class status
        {
            int sta;
            string ten;
            public int Status
            {
                set { sta = value; }
                get { return sta; }
            }
            public string TenStatus
            {
                set { ten = value; }
                get { return ten; }
            }
        }

        public class VLTL
        {
            public int IDCD { get; set; }
            public string TenDV { get; set; }
            public DateTime? NgayTH { get; set; }
            public string NgayTHString { get; set; }
            public DateTime? NgayBDTH { get; set; }
            public DateTime? NgayThang { get; set; }
            public DateTime? NgayNhap { get; set; }

            public int? MaBNhan { get; set; }
            public string TGTH { get; set; }
            public string MaCB { get; set; }
            public string CBCD { get; set; }
            public string MaCBTH { get; set; }
            public string CBTH { get; set; }
            public string PHCN_DienBienBenh { get; set; }
            public string PHCN_XacNhan { get; set; }
            public int Ploai { get; set; }

            public string DienBien { get; set; }

        }

        List<status> _lstatus = new List<status>();
        List<DThuoc> _lDonThuoc = new List<DThuoc>();

        List<DThuoc> loadDsDthuoc(int mabn)
        {
            var tongdt = (from a in DaTaContext.DThuocs.Where(p => p.MaBNhan == mabn).Where(p => p.PLDV == 1).Where(o => DungChung.Bien.MaBV == "14017" ? o.MaKP == _makp : true)
                          join b in DaTaContext.DThuoccts on a.IDDon equals b.IDDon
                          join c in DaTaContext.DichVus.Where(p => (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789") ? p.IDNhom != 7 : true) on b.MaDV equals c.MaDV
                          where chkDthuocGui.Checked ? ((a.DongBo == false || a.DongBo == null) && c.MaNhom5937 == 4) : true
                          select new
                          {
                              a,
                              b
                          }).ToList();

            var _lDonThuoc = (from c in tongdt
                              group c by new { c.a } into kq
                              select new DThuocModel()
                              {
                                  IDDon = kq.Key.a.IDDon,
                                  IsMuaNgoai = (kq.Key.a.IsMuaNgoai ?? false),
                                  NgayKe = kq.Key.a.NgayKe,
                                  KieuDon = kq.Key.a.KieuDon,
                                  MaBNhan = kq.Key.a.MaBNhan,
                                  ChuaLinh = string.Join(";", kq.Where(p => p.b.Status == 0 && p.b.SoPL >= 0).Select(p => p.b.SoPL).Distinct()),
                                  DaLinh = string.Join(";", kq.Where(p => p.b.Status == 1 && p.b.SoPL >= 0).Select(p => p.b.SoPL).Distinct()),
                                  MaKXuat = kq.Key.a.MaKXuat,
                                  DongBo = kq.Key.a.DongBo == null ? false : kq.Key.a.DongBo,
                                  chon = false
                              }).OrderByDescending(p => p.IDDon).ToList();

            if (DungChung.Bien.MaBV == "14017")
                _lDonThuoc = _lDonThuoc.OrderByDescending(o => o.NgayKe).ToList();

            grcDonThuocdt.DataSource = null;
            grcDonThuocdt.DataSource = _lDonThuoc;

            List<DThuoc> _l = (from a in tongdt select a.a).OrderByDescending(p => p.IDDon).ToList();

            return _l;
        }
        List<DichVu> _ldichvucd = new List<DichVu>();
        List<ThuThuatDtADO> thuThuatDtADOs = new List<ThuThuatDtADO>();
        #region setTTTab
        public void SetTTTab()
        {
            DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);

            int makho = 0;
            if (lupKhoXuat.EditValue != null)
                makho = Convert.ToInt32(lupKhoXuat.EditValue);

            if ((change > 0 || changect > 0) && TTTab == 5)
            {
                DialogResult dialogResult = MessageBox.Show("Bạn chưa lưu dữ liệu, bạn có muốn lưu lại không ?", "Xác nhận lưu", MessageBoxButtons.YesNo);
                if (dialogResult == DialogResult.Yes)
                {
                    btnLuu_Click(null, null);
                    _maBN = 0;
                }
            }

            switch (xtraNgoaiTru.SelectedTabPage.Name)
            {
                case "xtraDieuTri":
                    {
                        TTTab = 1;
                        btnInDon.Text = "In đơn";
                        EnableButton(true);
                        EnableControlKB(false);
                        btnCopydon.Enabled = false;
                        xtraDieuTri.Text = "Chẩn đoán";
                        if (_int_maBN > 0)
                        {
                            var dtri = (from dt in DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN) select dt).OrderByDescending(p => p.IDKB).ToList();
                            if (dtri.Count > 0)
                            {
                                grcChuyenKhoa.DataSource = dtri.ToList();
                                if (DungChung.Bien.MaBV == "24009")
                                {
                                    int makp = 0;
                                    if (lupTimMaKP.EditValue != null)
                                        makp = Convert.ToInt32(lupTimMaKP.EditValue);
                                    var kttkb = dtri.OrderByDescending(p => p.IDKB).FirstOrDefault();

                                    if (kttkb != null && kttkb.MaKP == makp)
                                    {
                                        btnMoiKb.Enabled = false;
                                    }
                                }
                            }
                        }
                    }
                    break;

                case "xtraKeDon":
                    {
                        processRowClick = true;
                        TTTab = 2;
                        EnableButton(true);
                        EnableControlKD(false);
                        btnInDon.Text = "In đơn";
                        xtraKeDon.Text = "Đơn thuốc";
                        btnCopydon.Enabled = true;
                        lupKhoXuat_EditValueChanged(null, null);
                        _lstatus.Add(new status { TenStatus = "Chưa xuất", Status = 0 });
                        _lstatus.Add(new status { TenStatus = "Đã xuất", Status = 1 });
                        _lstatus.Add(new status { TenStatus = "Hủy đơn", Status = 2 });
                        lupStatus.DataSource = _lstatus;
                        if (_int_maBN > 0)
                        {
                            //var q = from donthuoc in DaTaContext.DThuocs.Where(p => p.MaBNhan== (txtMaBNhan.Text)).OrderBy(p=>p.IDDon) select donthuoc;
                            var dienbienMap = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).OrderByDescending(p => p.ID).Where(p => p.Ploai == 0).ToList();
                            _ldienbien = (from db in dienbienMap
                                          select new DienBienNgayGio(db)).ToList();
                            _lDonThuoc = loadDsDthuoc(_int_maBN);
                            if (_lDonThuoc.Count > 0)
                            {

                                txtIdDonThuoc.Text = _lDonThuoc.First().IDDon.ToString();
                                iddthuocmau = _lDonThuoc.First().IDDon_Mau ?? 0;
                                if (_lDonThuoc.First().NgayKe != null)
                                    dtNgayKe.DateTime = _lDonThuoc.First().NgayKe.Value;
                                if (_lDonThuoc.First().MaKP != null)
                                    lupBPKe.EditValue = _lDonThuoc.First().MaKP.ToString();
                                else lupBPKe.Text = "";
                                if (_lDonThuoc.First().MaCB != null)
                                    lupNguoiKe.EditValue = _lDonThuoc.First().MaCB.ToString();
                                else lupNguoiKe.Text = "";
                                if (_lDonThuoc.First().MaKXuat != null)
                                    lupKhoXuat.EditValue = _lDonThuoc.First().MaKXuat.ToString();
                                else lupKhoXuat.EditValue = 0;
                                mm_ghiChu.Text = _lDonThuoc.First().GhiChu;
                            }
                            else
                            {
                                lupKhoXuat.EditValue = 0;
                                lupNguoiKe.EditValue = "";
                                lupBPKe.EditValue = 0;
                                txtIdDonThuoc.Text = "";
                                iddthuocmau = 0;
                                mm_ghiChu.ResetText();
                            }
                            if (DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24272")
                            {
                                colHanDung.Visible = true;
                            }
                            processRowClick = false;
                        }
                    }
                    break;

                case "xtraChiDinh":
                    {
                        TTTab = 3;
                        EnableButton(true);
                        EnableControlDV(false);
                        //grvDichVu.OptionsBehavior.Editable = false;
                        int IDDon = 0;
                        btnInDon.Text = "In D.Vụ";
                        xtraChiDinh.Text = "Dịch vụ";
                        btnCopydon.Enabled = false;
                        if (_int_maBN > 0)
                        {
                            DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                            var q = DaTaContext.DThuocs.Where(p => p.MaBNhan == _int_maBN).Where(p => p.PLDV == 2).ToList();
                            var IDDTBN = DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN).Select(p => p.IDDTBN).FirstOrDefault();
                            string iddtbn = ";" + (IDDTBN == null ? "-100" : IDDTBN.ToString()) + ";";

                            if (q.Count > 0)
                            {
                                txtChiDinh.Text = q.First().IDDon.ToString();
                                IDDon = q.First().IDDon;
                            }
                            string maQDVCMau = "VM." + DungChung.Bien.MaBV; //theo công văn 5328 (vận chuyển máu)
                            _ldichvucd = _lAllDichVu.Where(p => (p.PLoai == 2 && p.DSDTBN != null && p.DSDTBN.Contains(iddtbn)) || (p.PLoai == 1 && p.MaQD == maQDVCMau) || (p.IDNhom == 7)).Where(p => p.Status == 1).OrderBy(p => p.TenDV).ToList();
                            lupMaDVdv.DataSource = _ldichvucd;
                            var _data0 = (from dt in DaTaContext.DThuoccts.Where(p => p.IDDon == IDDon)
                                          select new DonThuocct
                                          {
                                              IDDon = dt.IDDon,
                                              IDDonct = dt.IDDonct,
                                              MaDV = dt.MaDV,
                                              DonVi = dt.DonVi,
                                              DonGia = dt.DonGia,
                                              SoLuong = dt.SoLuong,
                                              ThanhTien = dt.ThanhTien,
                                              TienBN = dt.TienBN,
                                              TienBH = dt.TienBH,
                                              TrongBH = dt.TrongBH,
                                              NgayNhap = dt.NgayNhap,
                                              DuongD = dt.DuongD,
                                              SoPL = dt.SoPL,
                                              Status = dt.Status,
                                              IDCD = dt.IDCD,
                                              MaCB = dt.MaCB,
                                              MaKP = dt.MaKP,
                                              IDKB = dt.IDKB,
                                              Loai = dt.Loai,
                                              ThanhToan = dt.ThanhToan,
                                              MaKPtk = dt.MaKPtk,
                                              MaKXuat = dt.MaKXuat,
                                              TyLeTT = dt.TyLeTT,
                                              XHH = dt.XHH == 1 ? true : false
                                          }).ToList();

                            var _data = (from dt in _data0
                                         join dv in _ldichvucd on dt.MaDV equals dv.MaDV
                                         select new DonThuocct
                                         {
                                             IDDon = dt.IDDon,
                                             IDDonct = dt.IDDonct,
                                             MaDV = dt.MaDV,
                                             DonVi = dt.DonVi,
                                             DonGia = dt.DonGia,
                                             SoLuong = dt.SoLuong,
                                             ThanhTien = dt.ThanhTien,
                                             TienBN = dt.TienBN,
                                             TienBH = dt.TienBH,
                                             TrongBH = dt.TrongBH,
                                             NgayNhap = dt.NgayNhap,
                                             DuongD = dt.DuongD,
                                             SoPL = dt.SoPL,
                                             Status = dt.Status,
                                             IDCD = dt.IDCD ?? 0,
                                             MaCB = dt.MaCB,
                                             MaKP = dt.MaKP,
                                             IDKB = dt.IDKB,
                                             Loai = dt.Loai,
                                             ThanhToan = dt.ThanhToan,
                                             MaKPtk = dt.MaKPtk,
                                             MaKXuat = dt.MaKXuat,
                                             TyLeTT = dt.TyLeTT,
                                             XHH = dt.XHH,
                                             IDNhom = dv.IDNhom ?? 0,
                                             MaQD = dv.MaQD,
                                             MakpSD = dv.MaKPsd,
                                         }).ToList();
                            if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                            {
                                binSDichVuct.DataSource = _data.Where(p => p.MakpSD.Split(';').Contains(_makp.ToString())).ToList();
                            }
                            else
                            {
                                binSDichVuct.DataSource = _data.ToList();
                            }
                            grcDichVu.DataSource = binSDichVuct;
                        }
                    }
                    break;

                case "xtraDBBenh":
                    {
                        var query = DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN).OrderByDescending(p => p.IDKB).ToList();
                        if (query.Count > 0)
                        {
                            string makpth = ";" + query.First().MaKP.ToString() + ";";
                            string makpdtkh = query.First().MaKPDTKH != null ? (";" + query.First().MaKPDTKH.ToString() + ";") : "";
                            lupMaCB_dienBien.DataSource = _lCanBo.Where(p => p.MaKPsd.Contains(makpth) || (!string.IsNullOrWhiteSpace(makpdtkh) && p.MaKPsd.Contains(makpdtkh))).ToList();
                            lupMaCB_dienBien_Disable.DataSource = _lCanBo.Where(p => p.MaKPsd.Contains(makpth) || (!string.IsNullOrWhiteSpace(makpdtkh) && p.MaKPsd.Contains(makpdtkh))).ToList();
                        }
                        var dienbienMap = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.Ploai == 0).ToList();
                        _ldienbien = (from db in dienbienMap
                                      orderby db.NgayNhap
                                      select new DienBienNgayGio(db)).ToList();
                        if (DungChung.Bien.MaBV == "14017")
                            _ldienbien = _ldienbien.ToList();
                        foreach (var item in _ldienbien)
                        {
                            item.NgayNhap_24012 = item.NgayNhap.Value.ToString("dd/MM HH:mm", CultureInfo.CreateSpecificCulture("vi-VN"));
                        }

                        binsDienBien.DataSource = _ldienbien;
                        grcDienBien.DataSource = binsDienBien;
                        TTTab = 4;
                        btnInDon.Text = "In Tờ Đ.Trị";
                        btnCopydon.Enabled = false;
                    }
                    break;

                case "xtraCDChamSoc":
                    {
                        var query = DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN).OrderByDescending(p => p.IDKB).ToList();
                        if (query.Count > 0)
                        {
                            string makpth = ";" + query.First().MaKP.ToString() + ";";
                            lupCBChamSoc.DataSource = _lCanBo.Where(p => p.MaKPsd.Contains(makpth)).ToList();
                        }
                        _lchamsoc = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.Ploai == 1).ToList();
                        binsChamSoc.DataSource = _lchamsoc;
                        grcChamSoc.DataSource = binsChamSoc;
                        TTTab = 6;
                        btnInDon.Text = "In Tờ Đ.Trị";
                        btnCopydon.Enabled = false;
                    }
                    break;

                case "xtra15NgayDT":
                    {
                        var query = DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN).OrderByDescending(p => p.IDKB).ToList();
                        if (query.Count > 0)
                        {
                            string makpth = ";" + query.First().MaKP.ToString() + ";";
                            lupCanBo15.DataSource = _lCanBo.Where(p => p.MaKPsd.Contains(makpth)).ToList();
                        }
                        _l15Ngaydt = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.Ploai == 2).ToList();
                        bins15Ngaydt.DataSource = _l15Ngaydt;
                        grc15NgayDT.DataSource = bins15Ngaydt;
                        TTTab = 7;
                        btnCopydon.Enabled = false;
                    }
                    break;

                case "xtraGopDonThuoc":
                    {
                        TTTab = 5;
                        _maBN = _int_maBN;
                        btnMoiKb.Enabled = true;
                        btnSuaKb.Enabled = false;
                        btnXoaKb.Enabled = false;
                        btnKluu.Enabled = false;
                        btnInDon.Enabled = false;
                        btnCopydon.Enabled = false;
                        btnHuyDon.Enabled = false;

                        DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                        #region load kiểu đơn
                        List<KDon> lkieudon = new List<KDon>();
                        lkieudon.Add(new KDon { KieuDon = 0, TenKieuDon = "Hàng ngày" });
                        lkieudon.Add(new KDon { KieuDon = 1, TenKieuDon = "Bổ sung" });
                        lkieudon.Add(new KDon { KieuDon = 2, TenKieuDon = "Trả thuốc" });
                        lkieudon.Add(new KDon { KieuDon = 3, TenKieuDon = "Lĩnh khoa" });
                        lkieudon.Add(new KDon { KieuDon = 4, TenKieuDon = "Khoa trả thuốc" });
                        lkieudon.Add(new KDon { KieuDon = 4, TenKieuDon = "Trực" });
                        lupKieuDon.DisplayMember = "TenKieuDon";
                        lupKieuDon.ValueMember = "KieuDon";
                        lupKieuDon.DataSource = lkieudon;
                        #endregion
                        #region load bác sỹ chỉ định
                        var qbsy = DaTaContext.CanBoes.ToList();
                        lupBSKeDon.ValueMember = "MaCB";
                        lupBSKeDon.DisplayMember = "TenCB";
                        lupBSKeDon.DataSource = qbsy;
                        #endregion
                        #region load khoa phong
                        var qkhoake = _lKphongall.Where(p => p.PLoai == DungChung.Bien.st_PhanLoaiKP.PhongKham || p.PLoai == DungChung.Bien.st_PhanLoaiKP.LamSang).ToList();
                        lupKhoaKe.DisplayMember = "TenKP";
                        lupKhoaKe.ValueMember = "MaKP";
                        lupKhoaKe.DataSource = qkhoake;

                        var qkhoXuat = _lKphongall.Where(p => p.PLoai == DungChung.Bien.st_PhanLoaiKP.KhoaDuoc).ToList();
                        lupKhoXuatct.DisplayMember = "TenKP";
                        lupKhoXuatct.ValueMember = "MaKP";
                        lupKhoXuatct.DataSource = qkhoXuat;
                        #endregion
                        #region load Loại dược
                        List<MyObject> loaiduoc = new List<MyObject>();
                        loaiduoc.Add(new MyObject { Value = 0, Text = "Thuốc thường" });
                        loaiduoc.Add(new MyObject { Value = 1, Text = "Hóa chất" });
                        loaiduoc.Add(new MyObject { Value = 2, Text = "Vật tư y tế" });
                        loaiduoc.Add(new MyObject { Value = 3, Text = "Thuốc gây nghiện" });
                        loaiduoc.Add(new MyObject { Value = 4, Text = "Thuốc hướng tâm thần" });
                        loaiduoc.Add(new MyObject { Value = 5, Text = "Thuốc trẻ em" });
                        loaiduoc.Add(new MyObject { Value = 6, Text = "Thuốc đông y" });
                        lupNhomDuoc.DisplayMember = "Text";
                        lupNhomDuoc.ValueMember = "Value";
                        lupNhomDuoc.DataSource = loaiduoc;

                        #endregion
                        #region load dịch vụ
                        lThuocKeDon = (from nd in DaTaContext.NhapDs.Where(p => p.PLoai == 1)//.Where(p => p.MaKP == makhoxuat)
                                       join ndct in DaTaContext.NhapDcts on nd.IDNhap equals ndct.IDNhap
                                       join dv in DaTaContext.DichVus.Where(p => p.PLoai == 1).Where(p => p.Status == 1) on ndct.MaDV equals dv.MaDV
                                       select new ThuocKeDon { MaDV = dv.MaDV, TenDV = dv.TenDV, MaKP = nd.MaKP ?? 0, MaKPnx = nd.MaKPnx ?? 0, DonVi = dv.DonVi, DonGia = dv.DonGia }).ToList();
                        _ldvu = (from dv in lThuocKeDon group dv by new { dv.MaDV, dv.TenDV, dv.DonGia, dv.DonVi } into kq select new DichVu { MaDV = kq.Key.MaDV, TenDV = kq.Key.TenDV, DonVi = kq.Key.DonVi, DonGia = kq.Key.DonGia }).ToList();
                        // _ldvu = DaTaContext.DichVus.Where(p => p.PLoai == 1).ToList();//(from nd in DaTaContext.NhapDs join ndct in DaTaContext.NhapDcts on nd.IDNhap equals ndct.IDNhap )
                        lupDichVu.DisplayMember = "TenDV";
                        lupDichVu.ValueMember = "MaDV";
                        lupDichVu.DataSource = _ldvu;
                        #endregion
                        #region load trong bao hiem
                        List<MyObject> _ltrongbh = new List<MyObject>();
                        _ltrongbh.Add(new MyObject { Value = 0, Text = "Ngoài DM" });
                        _ltrongbh.Add(new MyObject { Value = 1, Text = "Trong DM" });
                        _ltrongbh.Add(new MyObject { Value = 2, Text = "Không thanh toán" });
                        lupTrongBH.DisplayMember = "Text";
                        lupTrongBH.ValueMember = "Value";
                        lupTrongBH.DataSource = _ltrongbh;

                        List<MyObject> _linh = new List<MyObject>();
                        _linh.Add(new MyObject { Value = -1, Text = "Không lĩnh" });
                        _linh.Add(new MyObject { Value = 0, Text = "Lĩnh" });
                        _linh.Add(new MyObject { Value = 1, Text = "Đã lĩnh" });
                        _linh.Add(new MyObject { Value = 2, Text = "Hủy" });
                        lupLinhct.DisplayMember = "Text";
                        lupLinhct.ValueMember = "Value";
                        lupLinhct.DataSource = _linh;

                        #endregion
                        loadDonThuoc();
                        loadDthuocct();
                        editable = false;
                        setEditTable(false);
                        BenhNhan bn = DaTaContext.BenhNhans.Where(p => p.MaBNhan == _maBN).FirstOrDefault();
                        if (bn != null && !String.IsNullOrEmpty(bn.SThe))
                            bnBHYT = true;
                    }
                    break;

                case "xtraVLTL":
                    {
                        lupNguoiTH.DataSource = _lCanBo;
                        _maBN = _int_maBN;
                        RemoveDuplicate(_int_maBN);
                        var _lvltl = DaTaContext.DienBiens.Where(p => p.MaBNhan == _maBN).Where(p => p.Ploai == 3).OrderBy(p => p.NgayNhap).ToList();

                        if (_lvltl.Count() > 0)
                        {
                            grcVLTL.DataSource = null;
                            TTTab = 8;

                            List<VLTL> ds = new List<VLTL>();
                            foreach (var item in _lvltl)
                            {

                                VLTL a = new VLTL();
                                a.IDCD = Convert.ToInt32(item.IDDon);
                                a.NgayTH = item.NgayNhap;
                                if (a.NgayTH != null)
                                {
                                    a.NgayTHString = a.NgayTH.Value.Day.ToString() + "/" + a.NgayTH.Value.Month.ToString() + "/" + a.NgayTH.Value.Year.ToString();
                                }
                                a.TenDV = item.YLenh;
                                a.CBCD = !string.IsNullOrEmpty(item.MaCB) ? _lCanBo.Where(p => p.MaCB == item.MaCB).Select(p => p.TenCB).FirstOrDefault().ToString() : "";
                                a.MaCBTH = item.HuongDTri;
                                a.TGTH = item.ThucHienYL.ToString();
                                a.PHCN_DienBienBenh = item.DienBien1;
                                a.PHCN_XacNhan = item.KetQua;
                                ds.Add(a);
                            }
                            btnSuaKb.Enabled = true;
                            _listVLTL = ds;
                            grcVLTL.DataSource = ds;

                            btnMoiKb.Enabled = false;
                            btnSuaKb.Enabled = true;
                            btnXoaKb.Enabled = false;
                            btnKluu.Enabled = false;
                            btnInDon.Enabled = false;
                            btnCopydon.Enabled = false;
                            btnHuyDon.Enabled = false;
                        }
                        else
                        {
                            grcVLTL.DataSource = null;
                            _maBN = _int_maBN;
                            TTTab = 8;
                            btnMoiKb.Enabled = false;
                            btnSuaKb.Enabled = false;
                            btnXoaKb.Enabled = false;
                            btnKluu.Enabled = false;
                            btnInDon.Enabled = false;
                            btnCopydon.Enabled = false;
                            btnHuyDon.Enabled = false;
                            /*                                
                            var tt = (from cls in DaTaContext.CLS.Where(p => p.NgayTH != null)
                                      join cd in DaTaContext.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                      join dv in DaTaContext.DichVus on cd.MaDV equals dv.MaDV
                                      join tn in DaTaContext.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                      where (cls.MaBNhan == _int_maBN && tn.TenTN == "Thủ thuật")
                                      select new VLTL
                                      {
                                          IDCD = cd.IDCD,
                                          TenDV = dv.TenDV,
                                          NgayTH = cls.NgayTH,
                                          MaCBTH = cls.MaCBth,
                                          MaCB = cls.MaCB,
                                          PHCN_DienBienBenh = cd.PHCN_DienBienBenh,
                                          PHCN_XacNhan = cd.PHCN_XacNhan,
                                          NgayBDTH = cd.NgayBDTH,
                                      }).OrderBy(p => p.TenDV).ToList();

                            if (tt.Count > 0)
                            {
                                if (DungChung.Bien.MaBV == "24012")
                                {
                                    var ketqua = (from a in tt
                                                  group new { a } by new { Date = a.NgayTH.Value.Day, Month = a.NgayTH.Value.Month, Year = a.NgayTH.Value.Year } into kq
                                                  select new
                                                  {
                                                      NgayTH = kq.Key.Date + "/" + kq.Key.Month + "/" + kq.Key.Year,
                                                      ngaythang = kq.Select(p => p.a.NgayTH).ToArray(),
                                                      TenDV = !string.IsNullOrEmpty((kq.Select(p => p.a.TenDV).ToString())) ? "- " + string.Join("\n- ", kq.Select(p => p.a.TenDV).ToArray()) : "",
                                                      PHCN_DienBienBenh = !string.IsNullOrEmpty((kq.Select(p => p.a.PHCN_DienBienBenh).ToString())) ? string.Join("\n ", kq.Select(p => p.a.PHCN_DienBienBenh).ToArray()) : "",
                                                      CBCD = kq.First().a.CBCD,
                                                      IDCD = kq.First().a.IDCD,
                                                      MaCB = kq.First().a.MaCB,
                                                      //NgayBDTH = kq.First().a.NgayBDTH,
                                                      NgayBDTH = kq.Select(p => p.a.NgayBDTH).ToArray(),
                                                      PHCN_XacNhan = !string.IsNullOrEmpty((kq.Select(p => p.a.PHCN_XacNhan).ToString())) ? string.Join("\n ", kq.Select(p => p.a.PHCN_XacNhan).ToArray()) : "",
                                                  }).OrderBy(p => p.NgayTH).ToList();
                                    if (ketqua.Count() > 0)
                                    {
                                        List<VLTL> ds = new List<VLTL>();
                                        foreach (var item in ketqua)
                                        {

                                            VLTL a = new VLTL();
                                            a.IDCD = item.IDCD;
                                            //DateTime.Parse(yc.yclHolidayDt.ToString("dd-MMyyyy")),
                                            a.NgayTH = DateTime.Parse(item.NgayTH);
                                            if (a.NgayTH != null)
                                            {
                                                a.NgayTHString = item.NgayTH;
                                            }
                                            a.TenDV = item.TenDV;

                                            a.CBCD = !string.IsNullOrEmpty(item.MaCB) ? _lCanBo.Where(p => p.MaCB == item.MaCB).Select(p => p.TenCB).FirstOrDefault().ToString() : "";
                                            //a.CBTH = !string.IsNullOrEmpty(item.MaCBTH) ? _lCanBo.Where(p => p.MaCB == item.MaCBTH).Select(p => p.TenCB).FirstOrDefault().ToString() : "";
                                            if (item.ngaythang != null && item.NgayBDTH != null)
                                            {
                                                string tgth = "";
                                                DateTime?[] ngayTH = item.ngaythang;
                                                DateTime?[] ngayBDTH = item.NgayBDTH;
                                                if (ngayTH.Count() > 0)
                                                {
                                                    int tong = ngayTH.Count() > ngayBDTH.Count() ? ngayTH.Count() : ngayTH.Count();
                                                    for (int i = 0; i < tong; i++)
                                                    {
                                                        TimeSpan time = Convert.ToDateTime(ngayTH[i]) - Convert.ToDateTime(ngayBDTH[i]);
                                                        tgth += Math.Round((double)(time.TotalMinutes)).ToString() + "\n";
                                                    }

                                                    a.TGTH = tgth;
                                                }
                                                //TimeSpan time = Convert.ToDateTime(item.NgayTH) - Convert.ToDateTime(item.NgayBDTH);
                                                //a.TGTH = Math.Round((double)(time.TotalMinutes));
                                            }
                                            a.PHCN_DienBienBenh = item.PHCN_DienBienBenh;
                                            a.PHCN_XacNhan = item.PHCN_XacNhan;
                                            ds.Add(a);
                                        }
                                        btnSuaKb.Enabled = true;
                                        _listVLTL = ds;
                                        grcVLTL.DataSource = ds;
                                    }
                                }
                                else
                                {
                                    List<VLTL> ds = new List<VLTL>();
                                    foreach (var item in tt)
                                    {
                                        VLTL a = new VLTL();
                                        a.IDCD = item.IDCD;
                                        a.NgayTH = item.NgayTH;
                                        a.TenDV = "- " + item.TenDV + "";
                                        a.CBCD = !string.IsNullOrEmpty(item.MaCB) ? _lCanBo.Where(p => p.MaCB == item.MaCB).Select(p => p.TenCB).FirstOrDefault().ToString() : "";
                                        a.CBTH = !string.IsNullOrEmpty(item.MaCBTH) ? _lCanBo.Where(p => p.MaCB == item.MaCBTH).Select(p => p.TenCB).FirstOrDefault().ToString() : "";
                                        if (item.NgayTH != null && item.NgayBDTH != null)
                                        {
                                            TimeSpan time = Convert.ToDateTime(item.NgayTH) - Convert.ToDateTime(item.NgayBDTH);
                                            a.TGTH = (Math.Round((double)(time.TotalMinutes))).ToString();
                                        }
                                        a.PHCN_DienBienBenh = item.PHCN_DienBienBenh;
                                        a.PHCN_XacNhan = item.PHCN_XacNhan;
                                        ds.Add(a);
                                    }
                                    btnSuaKb.Enabled = true;
                                    _listVLTL = ds;
                                    grcVLTL.DataSource = ds;
                                }

                            }*/
                        }
                    }
                    break;
            }

            if (xtraNgoaiTru.SelectedTabPage == xtraKeDon)
                btnSyncMed.Visible = true;
            else
                btnSyncMed.Visible = false;

            //if (xtraNgoaiTru.SelectedTabPage == xtraDieuTri)
            //{
            //    TTTab = 1;
            //    btnInDon.Text = "In đơn";
            //    EnableButton(true);
            //    EnableControlKB(false);
            //    btnCopydon.Enabled = false;
            //    xtraDieuTri.Text = "Chẩn đoán";
            //    if (_int_maBN > 0)
            //    {
            //        var dtri = (from dt in DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN) select dt).OrderByDescending(p => p.IDKB).ToList();
            //        if (dtri.Count > 0)
            //        {
            //            grcChuyenKhoa.DataSource = dtri.ToList();
            //            if (DungChung.Bien.MaBV == "24009")
            //            {
            //                int makp = 0;
            //                if (lupTimMaKP.EditValue != null)
            //                    makp = Convert.ToInt32(lupTimMaKP.EditValue);
            //                var kttkb = dtri.OrderByDescending(p => p.IDKB).FirstOrDefault();

            //                if (kttkb != null && kttkb.MaKP == makp)
            //                {
            //                    btnMoiKb.Enabled = false;
            //                }
            //            }
            //        }
            //    }
            //}
            //else
            //{
            //    if (xtraNgoaiTru.SelectedTabPage == xtraKeDon)
            //    {
            //        processRowClick = true;
            //        TTTab = 2;
            //        EnableButton(true);
            //        EnableControlKD(false);
            //        btnInDon.Text = "In đơn";
            //        xtraKeDon.Text = "Đơn thuốc";
            //        btnCopydon.Enabled = true;
            //        lupKhoXuat_EditValueChanged(null, null);
            //        _lstatus.Add(new status { TenStatus = "Chưa xuất", Status = 0 });
            //        _lstatus.Add(new status { TenStatus = "Đã xuất", Status = 1 });
            //        _lstatus.Add(new status { TenStatus = "Hủy đơn", Status = 2 });
            //        lupStatus.DataSource = _lstatus;
            //        if (_int_maBN > 0)
            //        {

            //            //var q = from donthuoc in DaTaContext.DThuocs.Where(p => p.MaBNhan== (txtMaBNhan.Text)).OrderBy(p=>p.IDDon) select donthuoc;
            //            var dienbienMap = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).OrderByDescending(p => p.ID).Where(p => p.Ploai == 0).ToList();
            //            _ldienbien = (from db in dienbienMap
            //                          select new DienBienNgayGio(db)).ToList();
            //            _lDonThuoc = loadDsDthuoc(_int_maBN);
            //            if (_lDonThuoc.Count > 0)
            //            {

            //                txtIdDonThuoc.Text = _lDonThuoc.First().IDDon.ToString();
            //                iddthuocmau = _lDonThuoc.First().IDDon_Mau ?? 0;
            //                if (_lDonThuoc.First().NgayKe != null)
            //                    dtNgayKe.DateTime = _lDonThuoc.First().NgayKe.Value;
            //                if (_lDonThuoc.First().MaKP != null)
            //                    lupBPKe.EditValue = _lDonThuoc.First().MaKP.ToString();
            //                else lupBPKe.Text = "";
            //                if (_lDonThuoc.First().MaCB != null)
            //                    lupNguoiKe.EditValue = _lDonThuoc.First().MaCB.ToString();
            //                else lupNguoiKe.Text = "";
            //                if (_lDonThuoc.First().MaKXuat != null)
            //                    lupKhoXuat.EditValue = _lDonThuoc.First().MaKXuat.ToString();
            //                else lupKhoXuat.EditValue = 0;
            //                mm_ghiChu.Text = _lDonThuoc.First().GhiChu;
            //            }
            //            else
            //            {
            //                lupKhoXuat.EditValue = 0;
            //                lupNguoiKe.EditValue = "";
            //                lupBPKe.EditValue = 0;
            //                txtIdDonThuoc.Text = "";
            //                iddthuocmau = 0;
            //                mm_ghiChu.ResetText();
            //            }
            //            if (DungChung.Bien.MaBV == "24012")
            //            {
            //                colHanDung.Visible = true;
            //            }
            //            processRowClick = false;
            //        }
            //    }
            //    else
            //    {
            //        if (xtraNgoaiTru.SelectedTabPage == xtraChiDinh)
            //        {
            //            TTTab = 3;
            //            EnableButton(true);
            //            EnableControlDV(false);
            //            //grvDichVu.OptionsBehavior.Editable = false;
            //            int IDDon = 0;
            //            btnInDon.Text = "In D.Vụ";
            //            xtraChiDinh.Text = "Dịch vụ";
            //            btnCopydon.Enabled = false;
            //            if (_int_maBN > 0)
            //            {
            //                DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            //                var q = DaTaContext.DThuocs.Where(p => p.MaBNhan == _int_maBN).Where(p => p.PLDV == 2).ToList();
            //                var IDDTBN = DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN).Select(p => p.IDDTBN).FirstOrDefault();
            //                string iddtbn = ";" + (IDDTBN == null ? "-100" : IDDTBN.ToString()) + ";";

            //                if (q.Count > 0)
            //                {
            //                    txtChiDinh.Text = q.First().IDDon.ToString();
            //                    IDDon = q.First().IDDon;
            //                }
            //                string maQDVCMau = "VM." + DungChung.Bien.MaBV; //theo công văn 5328 (vận chuyển máu)
            //                _ldichvucd = _lAllDichVu.Where(p => (p.PLoai == 2 && p.DSDTBN != null && p.DSDTBN.Contains(iddtbn)) || (p.PLoai == 1 && p.MaQD == maQDVCMau) || (p.IDNhom == 7)).Where(p => p.Status == 1).OrderBy(p => p.TenDV).ToList();
            //                lupMaDVdv.DataSource = _ldichvucd;
            //                var _data0 = (from dt in DaTaContext.DThuoccts.Where(p => p.IDDon == IDDon)
            //                              select new DonThuocct
            //                              {
            //                                  IDDon = dt.IDDon,
            //                                  IDDonct = dt.IDDonct,
            //                                  MaDV = dt.MaDV,
            //                                  DonVi = dt.DonVi,
            //                                  DonGia = dt.DonGia,
            //                                  SoLuong = dt.SoLuong,
            //                                  ThanhTien = dt.ThanhTien,
            //                                  TienBN = dt.TienBN,
            //                                  TienBH = dt.TienBH,
            //                                  TrongBH = dt.TrongBH,
            //                                  NgayNhap = dt.NgayNhap,
            //                                  DuongD = dt.DuongD,
            //                                  SoPL = dt.SoPL,
            //                                  Status = dt.Status,
            //                                  IDCD = dt.IDCD,
            //                                  MaCB = dt.MaCB,
            //                                  MaKP = dt.MaKP,
            //                                  IDKB = dt.IDKB,
            //                                  Loai = dt.Loai,
            //                                  ThanhToan = dt.ThanhToan,
            //                                  MaKPtk = dt.MaKPtk,
            //                                  MaKXuat = dt.MaKXuat,
            //                                  TyLeTT = dt.TyLeTT,
            //                                  XHH = dt.XHH == 1 ? true : false
            //                              }).ToList();

            //                var _data = (from dt in _data0
            //                             join dv in _ldichvucd on dt.MaDV equals dv.MaDV
            //                             select new DonThuocct
            //                             {
            //                                 IDDon = dt.IDDon,
            //                                 IDDonct = dt.IDDonct,
            //                                 MaDV = dt.MaDV,
            //                                 DonVi = dt.DonVi,
            //                                 DonGia = dt.DonGia,
            //                                 SoLuong = dt.SoLuong,
            //                                 ThanhTien = dt.ThanhTien,
            //                                 TienBN = dt.TienBN,
            //                                 TienBH = dt.TienBH,
            //                                 TrongBH = dt.TrongBH,
            //                                 NgayNhap = dt.NgayNhap,
            //                                 DuongD = dt.DuongD,
            //                                 SoPL = dt.SoPL,
            //                                 Status = dt.Status,
            //                                 IDCD = dt.IDCD ?? 0,
            //                                 MaCB = dt.MaCB,
            //                                 MaKP = dt.MaKP,
            //                                 IDKB = dt.IDKB,
            //                                 Loai = dt.Loai,
            //                                 ThanhToan = dt.ThanhToan,
            //                                 MaKPtk = dt.MaKPtk,
            //                                 MaKXuat = dt.MaKXuat,
            //                                 TyLeTT = dt.TyLeTT,
            //                                 XHH = dt.XHH,
            //                                 IDNhom = dv.IDNhom ?? 0,
            //                                 MaQD = dv.MaQD,
            //                                 MakpSD = dv.MaKPsd,
            //                             }).ToList();
            //                if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
            //                {
            //                    binSDichVuct.DataSource = _data.Where(p => p.MakpSD.Split(';').Contains(_makp.ToString())).ToList();
            //                }
            //                else
            //                {
            //                    binSDichVuct.DataSource = _data.ToList();
            //                }
            //                grcDichVu.DataSource = binSDichVuct;
            //            }
            //        }
            //        else
            //        {
            //            if (xtraNgoaiTru.SelectedTabPage == xtraDBBenh)
            //            {
            //                var query = DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN).OrderByDescending(p => p.IDKB).ToList();
            //                if (query.Count > 0)
            //                {
            //                    string makpth = ";" + query.First().MaKP.ToString() + ";";
            //                    string makpdtkh = query.First().MaKPDTKH != null ? (";" + query.First().MaKPDTKH.ToString() + ";") : "";
            //                    lupMaCB_dienBien.DataSource = _lCanBo.Where(p => p.MaKPsd.Contains(makpth) || (!string.IsNullOrWhiteSpace(makpdtkh) && p.MaKPsd.Contains(makpdtkh))).ToList();
            //                    lupMaCB_dienBien_Disable.DataSource = _lCanBo.Where(p => p.MaKPsd.Contains(makpth) || (!string.IsNullOrWhiteSpace(makpdtkh) && p.MaKPsd.Contains(makpdtkh))).ToList();
            //                }
            //                var dienbienMap = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.Ploai == 0).ToList();
            //                _ldienbien = (from db in dienbienMap
            //                              orderby db.NgayNhap
            //                              select new DienBienNgayGio(db)).ToList();
            //                if (DungChung.Bien.MaBV == "14017")
            //                    _ldienbien = _ldienbien.ToList();
            //                foreach (var item in _ldienbien)
            //                {
            //                    item.NgayNhap_24012 = item.NgayNhap.Value.ToString("dd/MM HH:mm", CultureInfo.CreateSpecificCulture("vi-VN"));
            //                }
            //                //var DB_24012 = (from db in _ldienbien
            //                //                group db by new { Day = db.NgayNhap.Value.Day, Month = db.NgayNhap.Value.Month, Year = db.NgayNhap.Value.Year } into g
            //                //                select new
            //                //                {
            //                //                    NgayNhap = g.Key.Day + "/" + g.Key.Month + "/" + g.Key.Year
            //                //                }).ToList();
            //                binsDienBien.DataSource = _ldienbien;
            //                //binsDienBien.DataSource = DB_24012;
            //                grcDienBien.DataSource = binsDienBien;
            //                TTTab = 4;
            //                btnInDon.Text = "In Tờ Đ.Trị";
            //                btnCopydon.Enabled = false;
            //            }
            //            else if (xtraNgoaiTru.SelectedTabPage == xtraCDChamSoc)
            //            {
            //                var query = DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN).OrderByDescending(p => p.IDKB).ToList();
            //                if (query.Count > 0)
            //                {
            //                    string makpth = ";" + query.First().MaKP.ToString() + ";";
            //                    lupCBChamSoc.DataSource = _lCanBo.Where(p => p.MaKPsd.Contains(makpth)).ToList();
            //                }
            //                _lchamsoc = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.Ploai == 1).ToList();
            //                binsChamSoc.DataSource = _lchamsoc;
            //                grcChamSoc.DataSource = binsChamSoc;
            //                TTTab = 6;
            //                btnInDon.Text = "In Tờ Đ.Trị";
            //                btnCopydon.Enabled = false;
            //            }
            //            else if (xtraNgoaiTru.SelectedTabPage == xtra15NgayDT)
            //            {
            //                var query = DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN).OrderByDescending(p => p.IDKB).ToList();
            //                if (query.Count > 0)
            //                {
            //                    string makpth = ";" + query.First().MaKP.ToString() + ";";
            //                    lupCanBo15.DataSource = _lCanBo.Where(p => p.MaKPsd.Contains(makpth)).ToList();
            //                }
            //                _l15Ngaydt = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.Ploai == 2).ToList();
            //                bins15Ngaydt.DataSource = _l15Ngaydt;
            //                grc15NgayDT.DataSource = bins15Ngaydt;
            //                TTTab = 7;
            //                btnCopydon.Enabled = false;
            //            }
            //            else if (xtraNgoaiTru.SelectedTabPage == xtraGopDonThuoc)
            //            {

            //                TTTab = 5;
            //                _maBN = _int_maBN;
            //                btnMoiKb.Enabled = true;
            //                btnSuaKb.Enabled = false;
            //                btnXoaKb.Enabled = false;
            //                btnKluu.Enabled = false;
            //                btnInDon.Enabled = false;
            //                btnCopydon.Enabled = false;
            //                btnHuyDon.Enabled = false;

            //                DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            //                #region load kiểu đơn
            //                List<KDon> lkieudon = new List<KDon>();
            //                lkieudon.Add(new KDon { KieuDon = 0, TenKieuDon = "Hàng ngày" });
            //                lkieudon.Add(new KDon { KieuDon = 1, TenKieuDon = "Bổ sung" });
            //                lkieudon.Add(new KDon { KieuDon = 2, TenKieuDon = "Trả thuốc" });
            //                lkieudon.Add(new KDon { KieuDon = 3, TenKieuDon = "Lĩnh khoa" });
            //                lkieudon.Add(new KDon { KieuDon = 4, TenKieuDon = "Khoa trả thuốc" });
            //                lkieudon.Add(new KDon { KieuDon = 4, TenKieuDon = "Trực" });
            //                lupKieuDon.DisplayMember = "TenKieuDon";
            //                lupKieuDon.ValueMember = "KieuDon";
            //                lupKieuDon.DataSource = lkieudon;
            //                #endregion
            //                #region load bác sỹ chỉ định
            //                var qbsy = DaTaContext.CanBoes.ToList();
            //                lupBSKeDon.ValueMember = "MaCB";
            //                lupBSKeDon.DisplayMember = "TenCB";
            //                lupBSKeDon.DataSource = qbsy;
            //                #endregion
            //                #region load khoa phong
            //                var qkhoake = _lKphongall.Where(p => p.PLoai == DungChung.Bien.st_PhanLoaiKP.PhongKham || p.PLoai == DungChung.Bien.st_PhanLoaiKP.LamSang).ToList();
            //                lupKhoaKe.DisplayMember = "TenKP";
            //                lupKhoaKe.ValueMember = "MaKP";
            //                lupKhoaKe.DataSource = qkhoake;

            //                var qkhoXuat = _lKphongall.Where(p => p.PLoai == DungChung.Bien.st_PhanLoaiKP.KhoaDuoc).ToList();
            //                lupKhoXuatct.DisplayMember = "TenKP";
            //                lupKhoXuatct.ValueMember = "MaKP";
            //                lupKhoXuatct.DataSource = qkhoXuat;
            //                #endregion
            //                #region load Loại dược
            //                List<MyObject> loaiduoc = new List<MyObject>();
            //                loaiduoc.Add(new MyObject { Value = 0, Text = "Thuốc thường" });
            //                loaiduoc.Add(new MyObject { Value = 1, Text = "Hóa chất" });
            //                loaiduoc.Add(new MyObject { Value = 2, Text = "Vật tư y tế" });
            //                loaiduoc.Add(new MyObject { Value = 3, Text = "Thuốc gây nghiện" });
            //                loaiduoc.Add(new MyObject { Value = 4, Text = "Thuốc hướng tâm thần" });
            //                loaiduoc.Add(new MyObject { Value = 5, Text = "Thuốc trẻ em" });
            //                loaiduoc.Add(new MyObject { Value = 6, Text = "Thuốc đông y" });
            //                lupNhomDuoc.DisplayMember = "Text";
            //                lupNhomDuoc.ValueMember = "Value";
            //                lupNhomDuoc.DataSource = loaiduoc;

            //                #endregion
            //                #region load dịch vụ
            //                lThuocKeDon = (from nd in DaTaContext.NhapDs.Where(p => p.PLoai == 1)//.Where(p => p.MaKP == makhoxuat)
            //                               join ndct in DaTaContext.NhapDcts on nd.IDNhap equals ndct.IDNhap
            //                               join dv in DaTaContext.DichVus.Where(p => p.PLoai == 1).Where(p => p.Status == 1) on ndct.MaDV equals dv.MaDV
            //                               select new ThuocKeDon { MaDV = dv.MaDV, TenDV = dv.TenDV, MaKP = nd.MaKP ?? 0, MaKPnx = nd.MaKPnx ?? 0, DonVi = dv.DonVi, DonGia = dv.DonGia }).ToList();
            //                _ldvu = (from dv in lThuocKeDon group dv by new { dv.MaDV, dv.TenDV, dv.DonGia, dv.DonVi } into kq select new DichVu { MaDV = kq.Key.MaDV, TenDV = kq.Key.TenDV, DonVi = kq.Key.DonVi, DonGia = kq.Key.DonGia }).ToList();
            //                // _ldvu = DaTaContext.DichVus.Where(p => p.PLoai == 1).ToList();//(from nd in DaTaContext.NhapDs join ndct in DaTaContext.NhapDcts on nd.IDNhap equals ndct.IDNhap )
            //                lupDichVu.DisplayMember = "TenDV";
            //                lupDichVu.ValueMember = "MaDV";
            //                lupDichVu.DataSource = _ldvu;
            //                #endregion
            //                #region load trong bao hiem
            //                List<MyObject> _ltrongbh = new List<MyObject>();
            //                _ltrongbh.Add(new MyObject { Value = 0, Text = "Ngoài DM" });
            //                _ltrongbh.Add(new MyObject { Value = 1, Text = "Trong DM" });
            //                _ltrongbh.Add(new MyObject { Value = 2, Text = "Không thanh toán" });
            //                lupTrongBH.DisplayMember = "Text";
            //                lupTrongBH.ValueMember = "Value";
            //                lupTrongBH.DataSource = _ltrongbh;

            //                List<MyObject> _linh = new List<MyObject>();
            //                _linh.Add(new MyObject { Value = -1, Text = "Không lĩnh" });
            //                _linh.Add(new MyObject { Value = 0, Text = "Lĩnh" });
            //                _linh.Add(new MyObject { Value = 1, Text = "Đã lĩnh" });
            //                _linh.Add(new MyObject { Value = 2, Text = "Hủy" });
            //                lupLinhct.DisplayMember = "Text";
            //                lupLinhct.ValueMember = "Value";
            //                lupLinhct.DataSource = _linh;

            //                #endregion
            //                loadDonThuoc();
            //                loadDthuocct();
            //                editable = false;
            //                setEditTable(false);
            //                BenhNhan bn = DaTaContext.BenhNhans.Where(p => p.MaBNhan == _maBN).FirstOrDefault();
            //                if (bn != null && !String.IsNullOrEmpty(bn.SThe))
            //                    bnBHYT = true;
            //            }
            //            else if (xtraNgoaiTru.SelectedTabPage == xtraVLTL)
            //            {
            //                lupNguoiTH.DataSource = _lCanBo;
            //                _maBN = _int_maBN;
            //                RemoveDuplicate(_int_maBN);
            //                var _lvltl = DaTaContext.DienBiens.Where(p => p.MaBNhan == _maBN).Where(p => p.Ploai == 3).OrderBy(p => p.NgayNhap).ToList();

            //                if (_lvltl.Count() > 0)
            //                {
            //                    grcVLTL.DataSource = null;
            //                    TTTab = 8;

            //                    List<VLTL> ds = new List<VLTL>();
            //                    foreach (var item in _lvltl)
            //                    {

            //                        VLTL a = new VLTL();
            //                        a.IDCD = Convert.ToInt32(item.IDDon);
            //                        a.NgayTH = item.NgayNhap;
            //                        if (a.NgayTH != null)
            //                        {
            //                            a.NgayTHString = a.NgayTH.Value.Day.ToString() + "/" + a.NgayTH.Value.Month.ToString() + "/" + a.NgayTH.Value.Year.ToString();
            //                        }
            //                        a.TenDV = item.YLenh;
            //                        a.CBCD = !string.IsNullOrEmpty(item.MaCB) ? _lCanBo.Where(p => p.MaCB == item.MaCB).Select(p => p.TenCB).FirstOrDefault().ToString() : "";
            //                        a.MaCBTH = item.HuongDTri;
            //                        a.TGTH = item.ThucHienYL.ToString();
            //                        a.PHCN_DienBienBenh = item.DienBien1;
            //                        a.PHCN_XacNhan = item.KetQua;
            //                        ds.Add(a);
            //                    }
            //                    btnSuaKb.Enabled = true;
            //                    _listVLTL = ds;
            //                    grcVLTL.DataSource = ds;

            //                    btnMoiKb.Enabled = false;
            //                    btnSuaKb.Enabled = true;
            //                    btnXoaKb.Enabled = false;
            //                    btnKluu.Enabled = false;
            //                    btnInDon.Enabled = false;
            //                    btnCopydon.Enabled = false;
            //                    btnHuyDon.Enabled = false;
            //                }
            //                else
            //                {
            //                    grcVLTL.DataSource = null;
            //                    _maBN = _int_maBN;
            //                    TTTab = 8;
            //                    btnMoiKb.Enabled = false;
            //                    btnSuaKb.Enabled = false;
            //                    btnXoaKb.Enabled = false;
            //                    btnKluu.Enabled = false;
            //                    btnInDon.Enabled = false;
            //                    btnCopydon.Enabled = false;
            //                    btnHuyDon.Enabled = false;
            //                    /*                                
            //                    var tt = (from cls in DaTaContext.CLS.Where(p => p.NgayTH != null)
            //                              join cd in DaTaContext.ChiDinhs on cls.IdCLS equals cd.IdCLS
            //                              join dv in DaTaContext.DichVus on cd.MaDV equals dv.MaDV
            //                              join tn in DaTaContext.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
            //                              where (cls.MaBNhan == _int_maBN && tn.TenTN == "Thủ thuật")
            //                              select new VLTL
            //                              {
            //                                  IDCD = cd.IDCD,
            //                                  TenDV = dv.TenDV,
            //                                  NgayTH = cls.NgayTH,
            //                                  MaCBTH = cls.MaCBth,
            //                                  MaCB = cls.MaCB,
            //                                  PHCN_DienBienBenh = cd.PHCN_DienBienBenh,
            //                                  PHCN_XacNhan = cd.PHCN_XacNhan,
            //                                  NgayBDTH = cd.NgayBDTH,
            //                              }).OrderBy(p => p.TenDV).ToList();

            //                    if (tt.Count > 0)
            //                    {
            //                        if (DungChung.Bien.MaBV == "24012")
            //                        {
            //                            var ketqua = (from a in tt
            //                                          group new { a } by new { Date = a.NgayTH.Value.Day, Month = a.NgayTH.Value.Month, Year = a.NgayTH.Value.Year } into kq
            //                                          select new
            //                                          {
            //                                              NgayTH = kq.Key.Date + "/" + kq.Key.Month + "/" + kq.Key.Year,
            //                                              ngaythang = kq.Select(p => p.a.NgayTH).ToArray(),
            //                                              TenDV = !string.IsNullOrEmpty((kq.Select(p => p.a.TenDV).ToString())) ? "- " + string.Join("\n- ", kq.Select(p => p.a.TenDV).ToArray()) : "",
            //                                              PHCN_DienBienBenh = !string.IsNullOrEmpty((kq.Select(p => p.a.PHCN_DienBienBenh).ToString())) ? string.Join("\n ", kq.Select(p => p.a.PHCN_DienBienBenh).ToArray()) : "",
            //                                              CBCD = kq.First().a.CBCD,
            //                                              IDCD = kq.First().a.IDCD,
            //                                              MaCB = kq.First().a.MaCB,
            //                                              //NgayBDTH = kq.First().a.NgayBDTH,
            //                                              NgayBDTH = kq.Select(p => p.a.NgayBDTH).ToArray(),
            //                                              PHCN_XacNhan = !string.IsNullOrEmpty((kq.Select(p => p.a.PHCN_XacNhan).ToString())) ? string.Join("\n ", kq.Select(p => p.a.PHCN_XacNhan).ToArray()) : "",
            //                                          }).OrderBy(p => p.NgayTH).ToList();
            //                            if (ketqua.Count() > 0)
            //                            {
            //                                List<VLTL> ds = new List<VLTL>();
            //                                foreach (var item in ketqua)
            //                                {

            //                                    VLTL a = new VLTL();
            //                                    a.IDCD = item.IDCD;
            //                                    //DateTime.Parse(yc.yclHolidayDt.ToString("dd-MMyyyy")),
            //                                    a.NgayTH = DateTime.Parse(item.NgayTH);
            //                                    if (a.NgayTH != null)
            //                                    {
            //                                        a.NgayTHString = item.NgayTH;
            //                                    }
            //                                    a.TenDV = item.TenDV;

            //                                    a.CBCD = !string.IsNullOrEmpty(item.MaCB) ? _lCanBo.Where(p => p.MaCB == item.MaCB).Select(p => p.TenCB).FirstOrDefault().ToString() : "";
            //                                    //a.CBTH = !string.IsNullOrEmpty(item.MaCBTH) ? _lCanBo.Where(p => p.MaCB == item.MaCBTH).Select(p => p.TenCB).FirstOrDefault().ToString() : "";
            //                                    if (item.ngaythang != null && item.NgayBDTH != null)
            //                                    {
            //                                        string tgth = "";
            //                                        DateTime?[] ngayTH = item.ngaythang;
            //                                        DateTime?[] ngayBDTH = item.NgayBDTH;
            //                                        if (ngayTH.Count() > 0)
            //                                        {
            //                                            int tong = ngayTH.Count() > ngayBDTH.Count() ? ngayTH.Count() : ngayTH.Count();
            //                                            for (int i = 0; i < tong; i++)
            //                                            {
            //                                                TimeSpan time = Convert.ToDateTime(ngayTH[i]) - Convert.ToDateTime(ngayBDTH[i]);
            //                                                tgth += Math.Round((double)(time.TotalMinutes)).ToString() + "\n";
            //                                            }

            //                                            a.TGTH = tgth;
            //                                        }
            //                                        //TimeSpan time = Convert.ToDateTime(item.NgayTH) - Convert.ToDateTime(item.NgayBDTH);
            //                                        //a.TGTH = Math.Round((double)(time.TotalMinutes));
            //                                    }
            //                                    a.PHCN_DienBienBenh = item.PHCN_DienBienBenh;
            //                                    a.PHCN_XacNhan = item.PHCN_XacNhan;
            //                                    ds.Add(a);
            //                                }
            //                                btnSuaKb.Enabled = true;
            //                                _listVLTL = ds;
            //                                grcVLTL.DataSource = ds;
            //                            }
            //                        }
            //                        else
            //                        {
            //                            List<VLTL> ds = new List<VLTL>();
            //                            foreach (var item in tt)
            //                            {
            //                                VLTL a = new VLTL();
            //                                a.IDCD = item.IDCD;
            //                                a.NgayTH = item.NgayTH;
            //                                a.TenDV = "- " + item.TenDV + "";
            //                                a.CBCD = !string.IsNullOrEmpty(item.MaCB) ? _lCanBo.Where(p => p.MaCB == item.MaCB).Select(p => p.TenCB).FirstOrDefault().ToString() : "";
            //                                a.CBTH = !string.IsNullOrEmpty(item.MaCBTH) ? _lCanBo.Where(p => p.MaCB == item.MaCBTH).Select(p => p.TenCB).FirstOrDefault().ToString() : "";
            //                                if (item.NgayTH != null && item.NgayBDTH != null)
            //                                {
            //                                    TimeSpan time = Convert.ToDateTime(item.NgayTH) - Convert.ToDateTime(item.NgayBDTH);
            //                                    a.TGTH = (Math.Round((double)(time.TotalMinutes))).ToString();
            //                                }
            //                                a.PHCN_DienBienBenh = item.PHCN_DienBienBenh;
            //                                a.PHCN_XacNhan = item.PHCN_XacNhan;
            //                                ds.Add(a);
            //                            }
            //                            btnSuaKb.Enabled = true;
            //                            _listVLTL = ds;
            //                            grcVLTL.DataSource = ds;
            //                        }

            //                    }*/
            //                }
            //            }
            //        }
            //    }
            //}

            xtraChiDinh.Text = "Dịch vụ";
            xtraDieuTri.Text = "Chẩn đoán";
            xtraKeDon.Text = "Đơn thuốc";
            xtra15NgayDT.Text = (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017") ? "Phiếu sơ kết 15 ngày" : "Diễn biến 15 ngày ĐT";
            xtraDBBenh.Text = "Diễn biễn bệnh";
            xtraCDChamSoc.Text = "CĐ Chăm sóc";
            btnLuuKb.Enabled = false;

        }
        #endregion
        public class DonThuocct
        {
            public int IDDonct { set; get; }
            public int? IDDon { set; get; }
            public int? MaDV { set; get; }
            public string DonVi { set; get; }
            public double DonGia { set; get; }
            public double SoLuong { set; get; }
            public double ThanhTien { set; get; }
            public double TienBN { set; get; }
            public double TienBH { set; get; }
            public int TrongBH { set; get; }
            public DateTime? NgayNhap { set; get; }
            public string DuongD { set; get; }
            public int SoPL { set; get; }
            public int? Status { set; get; }
            public int? IDCD { set; get; }
            public string MaCB { set; get; }
            public int? MaKP { set; get; }
            public int IDKB { set; get; }
            public int Loai { set; get; }
            public int ThanhToan { set; get; }
            public int MaKPtk { set; get; }
            public int? MaKXuat { set; get; }
            public double TyLeTT { set; get; }
            public bool XHH { set; get; }
            public string MaQD { get; set; }
            public int IDNhom { get; set; }
            public string MakpSD { get; set; }
        }
        #region tab5
        List<DichVu> _ldvu = new List<DichVu>();
        public class DonThuoc
        {
            public int IDDon { set; get; }
            public DateTime? NgayKe { set; get; }
            public string MaCB { set; get; }
            public int? KieuDon { set; get; }
            public string DienBien { set; get; }
            public int? MaBNhan { set; get; }


            public int MaKP { get; set; }
        }
        DonThuoc _dthuoc = new DonThuoc();//đơn thuốc đang thêm mới hoặc sửa
        List<DThuocct> _ldthuocct = new List<DThuocct>();// danh sách đơn thuốc chi tiết đang thêm mới hoặc sửa

        int change = 0;// xác định sự thay đổi đơn thuốc
        int changect = 0;// xác định sự thay đổi đơn thuốc chi tiết
        int trangthai = 0;// trạng thái: 0: mặc định, 1: thêm, 2: sửa
        bool bnBHYT = false;
        int rowDThuoc = 0;
        int rowDThuocct = 0;
        public class MyObject
        {
            public int Value { set; get; }
            public string Text { set; get; }
        }

        /// <summary>
        /// Kiểu đơn
        /// </summary>
        public class KDon
        {
            public int KieuDon { set; get; }
            public string TenKieuDon { set; get; }

        }
        //    int rowvalid = -1;
        private void grv_Dthuoc_FocusedRowChanged(object sender, DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs e)
        {
            sothangSua = 1;
            sothangOld = 1;
            string iddon = "0";
            if (grv_Dthuoc.GetRowCellValue(grv_Dthuoc.FocusedRowHandle, colIDDon) != null)
                iddon = (grv_Dthuoc.GetRowCellValue(grv_Dthuoc.FocusedRowHandle, colIDDon)).ToString();
            grv_Dthuoc.Appearance.FocusedRow.BackColor = Color.Beige;
            if (trangthai == 0 || err == false)// chưa làm gì
            {
                rowDThuoc = grv_Dthuoc.FocusedRowHandle;
                loadDthuocct();
                lblIDDon_5.Text = iddon;
                btnSuaKb.Enabled = true;
                btnXoaKb.Enabled = true;
            }
            else if (trangthai == 1)// thêm mới
            {
                if (change != 0 || changect != 0)// đã có sự thay đổi
                {
                    if (grv_Dthuoc.FocusedRowHandle < 0 || iddon != "0")// di chuyển sang dòng khác
                    {
                        DialogResult dialogResult = MessageBox.Show("Bạn chưa lưu dữ liệu, bạn có muốn lưu lại không ?", "Xác nhận lưu", MessageBoxButtons.YesNo);
                        if (dialogResult == DialogResult.Yes)
                        {
                            btnLuu_Click(null, null);
                        }
                        else
                        {
                            change = 0;
                            changect = 0;
                            loadDonThuoc();
                            trangthai = 0;
                        }
                    }
                }


                rowDThuoc = grv_Dthuoc.FocusedRowHandle;
                loadDthuocct();
                lblIDDon_5.Text = iddon;
            }
            else if (trangthai == 2) // sửa
            {
                if ((change != 0 || changect != 0) && (grv_Dthuoc.FocusedRowHandle != rowDThuoc))// đã có sự thay đổi
                {
                    DialogResult dialogResult = MessageBox.Show("Bạn chưa lưu dữ liệu, bạn có muốn lưu lại không ?", "Xác nhận lưu", MessageBoxButtons.YesNo);
                    if (dialogResult == DialogResult.Yes)
                    {
                        btnLuu_Click(null, null);
                    }
                    else
                    {
                        change = 0;
                        changect = 0;
                        loadDonThuoc();
                        trangthai = 0;
                    }
                }


                rowDThuoc = grv_Dthuoc.FocusedRowHandle;
                loadDthuocct();
                lblIDDon_5.Text = iddon;
            }
            if (rowDThuoc != rowsua && (rowDThuoc >= 0 && trangthai != 1))
                setEditTable(false);

        }


        private void setEditTable(bool rs)
        {
            grv_Dthuoc.Columns["NgayKe"].OptionsColumn.AllowEdit = rs;
            grv_Dthuoc.Columns["MaKP"].OptionsColumn.AllowEdit = rs;
            grv_Dthuoc.Columns["MaCB"].OptionsColumn.AllowEdit = rs;
            grv_Dthuoc.Columns["KieuDon"].OptionsColumn.AllowEdit = rs;
            grv_Dthuoc.Columns["DienBien"].OptionsColumn.AllowEdit = rs;


            grv_Dthuocct.Columns["SoLuong"].OptionsColumn.AllowEdit = rs;
            grv_Dthuocct.Columns["ThanhTien"].OptionsColumn.AllowEdit = rs;
            grv_Dthuocct.Columns["MaDV"].OptionsColumn.AllowEdit = rs;
            grv_Dthuocct.Columns["TrongBH"].OptionsColumn.AllowEdit = rs;
            grv_Dthuocct.Columns["Status"].OptionsColumn.AllowEdit = rs;
            grv_Dthuocct.Columns["MaKXuat"].OptionsColumn.AllowEdit = rs;
            grv_Dthuocct.Columns["TyLeTT"].OptionsColumn.AllowEdit = rs;

        }
        bool editable = false;
        private void grv_Dthuoc_InitNewRow(object sender, DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs e)
        {
            if (string.IsNullOrEmpty(grv_Dthuoc.GetRowCellDisplayText(e.RowHandle, colNgayKe).ToString()))
                grv_Dthuoc.SetRowCellValue(e.RowHandle, colNgayKe, DateTime.Now);
            grv_Dthuoc.SetRowCellValue(e.RowHandle, colBsKeDon, DungChung.Bien.MaCB);
            if (string.IsNullOrEmpty(grv_Dthuoc.GetRowCellDisplayText(e.RowHandle, colKhoaKe).ToString()))
                grv_Dthuoc.SetRowCellValue(e.RowHandle, colKhoaKe, DungChung.Bien.MaKP);
        }

        private void grv_Dthuocct_FocusedRowChanged(object sender, DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs e)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            rowDThuocct = grv_Dthuocct.FocusedRowHandle;
            if (grv_Dthuocct.FocusedRowHandle > 0)
            {
                int idct = 0; int maDV = 0; int makhoxuat = 0;
                if (grv_Dthuocct.GetRowCellValue(grv_Dthuocct.FocusedRowHandle, colIDDonct) != null)
                {
                    idct = Convert.ToInt32(grv_Dthuocct.GetRowCellValue(grv_Dthuocct.FocusedRowHandle, colIDDonct));
                    if (idct > 0)
                    {
                        var qlinh = data.DThuoccts.Where(p => p.IDDonct == idct).FirstOrDefault();
                        if (qlinh != null)
                            linh = qlinh.Status ?? 0;
                    }
                    if (grv_Dthuocct.GetRowCellValue(grv_Dthuocct.FocusedRowHandle, coltenDVct) != null)
                        maDV = Convert.ToInt32(grv_Dthuocct.GetRowCellValue(grv_Dthuocct.FocusedRowHandle, coltenDVct));
                    if (grv_Dthuocct.GetRowCellValue(grv_Dthuocct.FocusedRowHandle, colKhoXuatct) != null)
                        makhoxuat = Convert.ToInt32(grv_Dthuocct.GetRowCellValue(grv_Dthuocct.FocusedRowHandle, colKhoXuatct));

                    #region kieeur don la tra thuoc

                    if (grv_Dthuoc.GetRowCellValue(grv_Dthuoc.FocusedRowHandle, colKieuDon_kdon) != null)
                    {
                        int kieudon = Convert.ToInt32(grv_Dthuoc.GetRowCellValue(grv_Dthuoc.FocusedRowHandle, colKieuDon_kdon));
                        if (kieudon == 2)
                        {
                            var dthuoc = (from dt in DaTaContext.DThuocs.Where(p => p.MaKXuat == makhoxuat).Where(p => p.MaBNhan == _maBN).Where(p => p.KieuDon == 0 || p.KieuDon == 1 || p.KieuDon == 5)
                                          join dtct in DaTaContext.DThuoccts.Where(p => p.MaDV == maDV) on dt.IDDon equals dtct.IDDon
                                          where dt.NgayKe.Value.Day == dtNgayKe.DateTime.Day && dt.NgayKe.Value.Month == dtNgayKe.DateTime.Month
                                          group dtct by dtct.DonGia into kq
                                          select new { kq.Key }).ToList();
                            colDongiact.OptionsColumn.ReadOnly = false;
                            colDongiact.OptionsColumn.AllowEdit = true;
                            colDongiact.OptionsColumn.AllowFocus = true;
                            cboDonGiact.Items.Clear();
                            foreach (var a in dthuoc)
                            {
                                cboDonGiact.Items.Add(a.Key);
                                grv_Dthuocct.SetFocusedRowCellValue(colDongiact, a.Key);
                            }
                        }
                        else
                        {
                            colDongiact.OptionsColumn.ReadOnly = true;
                            colDongiact.OptionsColumn.AllowEdit = false;
                        }
                    }

                    #endregion
                }
            }

            //set thuốc đã có phiếu lĩnh không được xóa nhưng được sửa trong ngoài danh mục

            if (editable)
            {
                if (grv_Dthuocct.GetRowCellValue(rowDThuocct, colIDDonct) != null)
                {
                    int idct = Convert.ToInt32(grv_Dthuocct.GetRowCellValue(rowDThuocct, colIDDonct));
                    int sopl = 0;
                    int status = 0;
                    var dtct = data.DThuoccts.Where(p => p.IDDonct == idct).FirstOrDefault();
                    if (dtct != null)
                    {
                        sopl = dtct.SoPL;
                        status = dtct.Status ?? 0;
                    }

                    if (sopl > 0) // đã có số phiếu lĩnh
                    {
                        grv_Dthuocct.Columns[0].OptionsColumn.AllowEdit = false;
                        grv_Dthuocct.Columns[0].OptionsColumn.ReadOnly = true;

                        grv_Dthuocct.Columns["SoLuong"].OptionsColumn.AllowEdit = false;
                        grv_Dthuocct.Columns["ThanhTien"].OptionsColumn.AllowEdit = false;
                        grv_Dthuocct.Columns["MaDV"].OptionsColumn.AllowEdit = false;
                        grv_Dthuocct.Columns["TrongBH"].OptionsColumn.AllowEdit = true;
                        grv_Dthuocct.Columns["Status"].OptionsColumn.AllowEdit = false;
                        grv_Dthuocct.Columns["MaKXuat"].OptionsColumn.AllowEdit = false;
                        grv_Dthuocct.Columns["TyLeTT"].OptionsColumn.AllowEdit = false;
                    }
                    else
                    {
                        grv_Dthuocct.Columns[0].OptionsColumn.AllowEdit = true;
                        grv_Dthuocct.Columns[0].OptionsColumn.ReadOnly = false;

                        grv_Dthuocct.Columns["SoLuong"].OptionsColumn.AllowEdit = true;
                        grv_Dthuocct.Columns["ThanhTien"].OptionsColumn.AllowEdit = true;
                        grv_Dthuocct.Columns["MaDV"].OptionsColumn.AllowEdit = true;
                        grv_Dthuocct.Columns["TrongBH"].OptionsColumn.AllowEdit = true;
                        grv_Dthuocct.Columns["MaKXuat"].OptionsColumn.AllowEdit = true;
                        grv_Dthuocct.Columns["TyLeTT"].OptionsColumn.AllowEdit = true;
                        if (status == -1 || status == 0)
                        {
                            grv_Dthuocct.Columns["Status"].OptionsColumn.AllowEdit = true;
                        }
                        else
                            grv_Dthuocct.Columns["Status"].OptionsColumn.AllowEdit = false;
                    }

                }
                else
                {
                    grv_Dthuocct.Columns[0].OptionsColumn.AllowEdit = true;
                    grv_Dthuocct.Columns[0].OptionsColumn.ReadOnly = false;

                    grv_Dthuocct.Columns["SoLuong"].OptionsColumn.AllowEdit = true;
                    grv_Dthuocct.Columns["ThanhTien"].OptionsColumn.AllowEdit = true;
                    grv_Dthuocct.Columns["MaDV"].OptionsColumn.AllowEdit = true;
                    grv_Dthuocct.Columns["TrongBH"].OptionsColumn.AllowEdit = true;
                    grv_Dthuocct.Columns["Status"].OptionsColumn.AllowEdit = true;
                    grv_Dthuocct.Columns["MaKXuat"].OptionsColumn.AllowEdit = true;
                    grv_Dthuocct.Columns["TyLeTT"].OptionsColumn.AllowEdit = true;

                }


            }
            else
            {
                grv_Dthuocct.Columns[0].OptionsColumn.AllowEdit = false;
                grv_Dthuocct.Columns[0].OptionsColumn.ReadOnly = true;

                grv_Dthuocct.Columns["SoLuong"].OptionsColumn.AllowEdit = false;
                grv_Dthuocct.Columns["ThanhTien"].OptionsColumn.AllowEdit = false;
                grv_Dthuocct.Columns["MaDV"].OptionsColumn.AllowEdit = false;
                grv_Dthuocct.Columns["TrongBH"].OptionsColumn.AllowEdit = false;
                grv_Dthuocct.Columns["Status"].OptionsColumn.AllowEdit = false;
                grv_Dthuocct.Columns["MaKXuat"].OptionsColumn.AllowEdit = false;
                grv_Dthuocct.Columns["TyLeTT"].OptionsColumn.AllowEdit = false;
            }

        }

        private bool checkDthuoc_setColumnError(object sender, DevExpress.XtraGrid.Views.Base.ValidateRowEventArgs e)
        {
            // rowvalid = grv_Dthuoc.FocusedRowHandle;
            GridView view = sender as GridView;
            GridColumn colNgKe = view.Columns["NgayKe"];
            GridColumn colKP = view.Columns["MaKP"];
            GridColumn colBS = view.Columns["MaCB"];
            GridColumn colKDon = view.Columns["KieuDon"];
            object valNgayKe = view.GetRowCellDisplayText(e.RowHandle, colNgKe);
            object valMaKP = view.GetRowCellDisplayText(e.RowHandle, colKP);
            object valMaCB = view.GetRowCellDisplayText(e.RowHandle, colBS);
            object valKieuDon = view.GetRowCellDisplayText(e.RowHandle, colKDon);

            if (valNgayKe == null || valNgayKe.ToString() == string.Empty)
            {
                e.Valid = false;
                view.SetColumnError(colNgayKe_kdon, "Bạn chưa nhập ngày kê", ErrorType.Default);
                return false;
            }

            else if (valMaKP == null || valMaKP.ToString() == string.Empty)
            {
                e.Valid = false;
                view.SetColumnError(colKhoaKe, "Bạn chưa nhập khoa kê", ErrorType.Default);
                return false;
            }
            else if (valMaCB == null || valMaCB.ToString() == string.Empty)
            {
                e.Valid = false;
                view.SetColumnError(colBsKeDon, "Bạn chưa nhập bác sỹ kê đơn", ErrorType.Default);
                return false;
            }
            else if (valKieuDon == null || valKieuDon.ToString() == string.Empty)
            {
                e.Valid = false;
                view.SetColumnError(colKieuDon_kdon, "Bạn chưa nhập kiểu đơn", ErrorType.Default);
                return false;
            }
            else
            {
                return true;
            }


        }

        /// <summary>
        /// Kieemr tra don thuoc co validate khong 
        /// </summary>
        /// <returns></returns>
        private bool checkValidateDonThuoc()
        {
            object valNgayKe = grv_Dthuoc.GetRowCellDisplayText(rowDthuocFC, colNgayKe_kdon);
            object valMaKP = grv_Dthuoc.GetRowCellDisplayText(rowDthuocFC, colKhoaKe);
            object valMaCB = grv_Dthuoc.GetRowCellDisplayText(rowDthuocFC, colBsKeDon);
            object valKieuDon = grv_Dthuoc.GetRowCellDisplayText(rowDthuocFC, colKieuDon_kdon);

            if (valNgayKe == null || valNgayKe.ToString() == string.Empty)
            {

                return false;
            }

            else if (valMaKP == null || valMaKP.ToString() == string.Empty)
            {

                return false;
            }
            else if (valMaCB == null || valMaCB.ToString() == string.Empty)
            {

                return false;
            }
            else if (valKieuDon == null || valKieuDon.ToString() == string.Empty)
            {
                return false;
            }
            else
            {
                return true;
            }

        }
        private bool checkValidateDonThuocct(int rowct)
        {
            object valMaDV = grv_Dthuocct.GetRowCellValue(rowct, coltenDVct);
            object valSoLuong = grv_Dthuocct.GetRowCellValue(rowct, colSoLuongct);
            object valDonGia = grv_Dthuocct.GetRowCellValue(rowct, colDongiact);
            object valThanhTien = grv_Dthuocct.GetRowCellValue(rowct, colthanhtienct);
            object valLinh = grv_Dthuocct.GetRowCellValue(rowct, colLinhct);
            if (valMaDV == null || valMaDV.ToString() == string.Empty)
            {

                return false;
            }
            else if (valDonGia == null || valDonGia.ToString() == string.Empty)
            {

                return false;
            }
            else if (Convert.ToDouble((valDonGia).ToString()) <= 0)
            {

                return false;
            }
            else if (valSoLuong == null || valSoLuong.ToString() == string.Empty)
            {

                return false;
            }
            //else if (Convert.ToDouble((valSoLuong).ToString()) <= 0)
            //{

            //    return false;
            //}

            else if (valThanhTien == null || valThanhTien.ToString() == string.Empty)
            {

                return false;
            }
            //else if (Convert.ToDouble((valThanhTien).ToString()) <= 0)
            //{

            //    return false;
            //}
            else if (grv_Dthuocct.FocusedRowHandle < 0 && Convert.ToInt32((valLinh).ToString()) != 0 && Convert.ToInt32((valLinh).ToString()) != -1)
            {

                return false;
            }
            else
            {
                return true;
            }

        }

        private bool checkDThuocCT_setColumnError(object sender, DevExpress.XtraGrid.Views.Base.ValidateRowEventArgs e)
        {
            GridView view = sender as GridView;
            GridColumn colDonGia1 = view.Columns["DonGia"];
            GridColumn colSoLuong1 = view.Columns["SoLuong"];
            GridColumn colThanhTien1 = view.Columns["ThanhTien"];
            GridColumn colMaDV1 = view.Columns["MaDV"];
            GridColumn colLinh1 = view.Columns["Status"];
            object valMaDV = view.GetRowCellValue(e.RowHandle, colMaDV1);
            object valSoLuong = view.GetRowCellValue(e.RowHandle, colSoLuong1);
            object valDonGia = view.GetRowCellValue(e.RowHandle, colDonGia1);
            object valThanhTien = view.GetRowCellValue(e.RowHandle, colThanhTien1);
            object valLinh = view.GetRowCellValue(e.RowHandle, colLinh1);
            if (valMaDV == null || valMaDV.ToString() == string.Empty)
            {
                e.Valid = false;
                view.SetColumnError(coltenDVct, "Bạn chưa chọn loại thuốc", ErrorType.Default);
                return false;
            }
            else if (valDonGia == null || valDonGia.ToString() == string.Empty)
            {
                e.Valid = false;
                view.SetColumnError(colDongiact, "Bạn chưa nhập đơn giá", ErrorType.Default);
                return false;
            }
            else if (Convert.ToDouble((valDonGia).ToString()) <= 0)
            {
                e.Valid = false;
                view.SetColumnError(colDongiact, "đơn giá phải lơn hơn 0", ErrorType.Default);
                return false;
            }
            else if (valSoLuong == null || valSoLuong.ToString() == string.Empty)
            {
                e.Valid = false;
                view.SetColumnError(colSoLuongct, "Bạn chưa nhập số lượng", ErrorType.Default);
                return false;
            }
            //else if (Convert.ToDouble((valSoLuong).ToString()) <= 0)
            //{
            //    e.Valid = false;
            //    view.SetColumnError(colSoLuongct, "số lượng phải lơn hơn 0", ErrorType.Default);
            //    return false;
            //}

            else if (valThanhTien == null || valThanhTien.ToString() == string.Empty)
            {
                e.Valid = false;
                view.SetColumnError(colthanhtienct, "Bạn chưa nhập thành tiền", ErrorType.Default);
                return false;
            }
            //else if (Convert.ToDouble((valThanhTien).ToString()) <= 0)
            //{
            //    e.Valid = false;
            //    view.SetColumnError(colthanhtienct, "Thành tiền phải lớn hơn 0", ErrorType.Default);
            //    return false;
            //}
            else if (grv_Dthuocct.FocusedRowHandle < 0 && Convert.ToInt32((valLinh).ToString()) != 0 && Convert.ToInt32((valLinh).ToString()) != -1)
            {
                e.Valid = false;
                view.SetColumnError(colLinhct, "Bạn chỉ có thể chọn lĩnh hoặc không lĩnh", ErrorType.Default);
                return false;
            }
            else
            {
                return true;
            }

        }

        bool err = true;// true: không lỗi; false: lỗi
        private void grv_Dthuoc_ValidateRow(object sender, DevExpress.XtraGrid.Views.Base.ValidateRowEventArgs e)
        {
            err = checkDthuoc_setColumnError(sender, e) ? err : false;

        }

        private void grv_Dthuocct_ValidateRow(object sender, DevExpress.XtraGrid.Views.Base.ValidateRowEventArgs e)
        {
            err = checkDThuocCT_setColumnError(sender, e) ? err : false;
        }

        private void grv_Dthuoc_CellValueChanged(object sender, DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs e)
        {
            change++;
        }
        int linh = 0;
        private void grv_Dthuocct_CellValueChanged(object sender, DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs e)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            changect++;
            double dongia1 = 0, soluong = 0;
            int maDV = 0;
            string donvi = "";
            int maKhoXuat = 0;
            if (e.Column.Name == "coltenDVct")
            {
                if (e.Value != null)
                    maDV = Convert.ToInt32(e.Value.ToString());
                if (grv_Dthuocct.GetRowCellValue(e.RowHandle, colKhoXuatct) != null)
                    maKhoXuat = Convert.ToInt32(grv_Dthuocct.GetRowCellValue(e.RowHandle, colKhoXuatct));
                soluong = Convert.ToDouble(grv_Dthuocct.GetRowCellValue(e.RowHandle, colSoLuongct));

                // Lấy đơn vị trong bảng dịch vụ
                var dv = (from d in _ldvu
                          where d.MaDV == maDV
                          select new { d.DonVi }).FirstOrDefault();
                if (dv != null) donvi = dv.DonVi;

                if (dv != null)
                {

                    grv_Dthuocct.SetFocusedRowCellValue(colDonvict, donvi);
                    if (grvDonThuocct.GetFocusedRowCellValue(colSoLo) != null)
                        _solo = grvDonThuocct.GetFocusedRowCellValue(colSoLo).ToString();
                    if (grvDonThuocct.GetFocusedRowCellValue(colHanDung) != null)
                        _handung = Convert.ToDateTime(grvDonThuocct.GetFocusedRowCellValue(colHanDung).ToString());
                    double gia = DungChung.Ham._getGia(DaTaContext, maDV, maKhoXuat).Gia;
                    grKeDon.Text = "Chi tiết đơn thuốc      Tồn: " + DungChung.Bien.SoLuongTon;
                    grv_Dthuocct.SetFocusedRowCellValue(colDongiact, gia);

                }
                double tyleBHTT = 100;
                var trongBH = _lDichvu.Where(p => p.MaDV == maDV).ToList();
                if (trongBH.Count > 0)
                {
                    tyleBHTT = trongBH.First().BHTT ?? 100;
                }

                grv_Dthuocct.SetFocusedRowCellValue(colTyLeBHTT_NhieuKho, tyleBHTT);
                #region kieeur don la tra thuoc

                if (grv_Dthuoc.GetRowCellValue(grv_Dthuoc.FocusedRowHandle, colKieuDon_kdon) != null)
                {
                    int kieudon = Convert.ToInt32(grv_Dthuoc.GetRowCellValue(grv_Dthuoc.FocusedRowHandle, colKieuDon_kdon));
                    if (kieudon == 2)
                    {
                        var dthuoc = (from dt in DaTaContext.DThuocs.Where(p => p.MaKXuat == maKhoXuat).Where(p => p.MaBNhan == _maBN).Where(p => p.KieuDon == 0 || p.KieuDon == 1 || p.KieuDon == 5)
                                      join dtct in DaTaContext.DThuoccts.Where(p => p.MaDV == maDV) on dt.IDDon equals dtct.IDDon
                                      where dt.NgayKe.Value.Day == dtNgayKe.DateTime.Day && dt.NgayKe.Value.Month == dtNgayKe.DateTime.Month
                                      group dtct by dtct.DonGia into kq
                                      select new { kq.Key }).ToList();
                        colDongiact.OptionsColumn.ReadOnly = false;
                        colDongiact.OptionsColumn.AllowEdit = true;
                        colDongiact.OptionsColumn.AllowFocus = true;
                        cboDonGiact.Items.Clear();
                        foreach (var a in dthuoc)
                        {
                            cboDonGiact.Items.Add(a.Key);
                            grv_Dthuocct.SetFocusedRowCellValue(colDongiact, a.Key);
                        }
                    }
                }

                #endregion


            }
            else if (e.Column.Name == "colDongiact")
            {

                if (e.Value != null)
                {
                    dongia1 = Convert.ToDouble(e.Value);
                    if (grv_Dthuocct.GetRowCellValue(e.RowHandle, colSoLuongct) != null)
                    {
                        soluong = Convert.ToDouble(grv_Dthuocct.GetRowCellValue(e.RowHandle, colSoLuongct));
                        double tyleBHTT = 100;
                        if (grv_Dthuocct.GetFocusedRowCellValue(colTyLeBHTT_dt) != null && grv_Dthuocct.GetFocusedRowCellValue(colTyLeBHTT_dt).ToString() != "")
                            tyleBHTT = Convert.ToDouble(grv_Dthuocct.GetFocusedRowCellValue(colTyLeBHTT_dt));
                        grv_Dthuocct.SetRowCellValue(e.RowHandle, colthanhtienct, soluong * dongia1 * tyleBHTT / 100);
                    }
                }

            }
            else if (e.Column.Name == "colKhoXuatct")
            {
                grv_Dthuocct_ShownEditor(sender, null);

            }
            else if (e.Column.Name == "colSoLuongct")
            {
                int kieudon = -2;
                if (grv_Dthuoc.GetRowCellValue(grv_Dthuoc.FocusedRowHandle, colKieuDon_kdon) != null)
                {
                    kieudon = Convert.ToInt32(grv_Dthuoc.GetRowCellValue(grv_Dthuoc.FocusedRowHandle, colKieuDon_kdon));
                }

                if (e.Value != null)
                {

                    soluong = Convert.ToDouble(e.Value);
                    double soluong_old = 0;
                    int idct = 0;
                    int madv_old = 0;
                    if (grv_Dthuocct.GetRowCellValue(e.RowHandle, coliddonct_ct) != null)
                    {
                        idct = Convert.ToInt32(grv_Dthuocct.GetRowCellValue(e.RowHandle, coliddonct_ct));
                        if (idct > 0)
                        {
                            DThuocct dthuocct = data.DThuoccts.Single(p => p.IDDonct == idct);
                            soluong_old = dthuocct.SoLuong;
                            madv_old = dthuocct.MaDV ?? 0;
                        }
                    }
                    if (grv_Dthuocct.GetRowCellValue(e.RowHandle, colDongiact) != null)
                    {
                        if (grv_Dthuocct.GetRowCellValue(e.RowHandle, coltenDVct) != null)
                        {
                            maDV = Convert.ToInt32(grv_Dthuocct.GetRowCellValue(e.RowHandle, coltenDVct));
                            maKhoXuat = Convert.ToInt32(grv_Dthuocct.GetRowCellValue(e.RowHandle, colKhoXuatct));
                            dongia1 = Convert.ToDouble(grv_Dthuocct.GetRowCellValue(e.RowHandle, colDongiact));
                            if (kieudon == 2)// TRẢ THUỐC
                            {
                                #region trả thuốc

                                if (soluong > 0)
                                {
                                    MessageBox.Show("trả thuốc phải nhập số lượng < 0");

                                    grv_Dthuocct.FocusedColumn = grv_Dthuocct.VisibleColumns[6];// set focus
                                    grv_Dthuocct.SetFocusedRowCellValue(colSoLuongct, "0");
                                }
                                else
                                {
                                    var duoc = (from nduoc in DaTaContext.DThuocs.Where(p => p.MaBNhan == _maBN)
                                                join nhapduoc in DaTaContext.DThuoccts.Where(p => p.MaDV == maDV && p.MaKXuat == maKhoXuat && p.DonGia == dongia1) on nduoc.IDDon equals nhapduoc.IDDon
                                                where nduoc.KieuDon == 2 ? true : nhapduoc.Status == 1
                                                group new { nhapduoc, nduoc } by new { nhapduoc.MaDV } into kq
                                                select new { kq.Key, soluong = kq.Sum(p => p.nhapduoc.SoLuong) }
                                               ).ToList();
                                    double sluong = 0;
                                    if (duoc.Count > 0)
                                        sluong = duoc.First().soluong;
                                    if (soluong + sluong < 0)
                                    {
                                        MessageBox.Show("trả thuốc phải nhập số lượng <= số lượng đã lĩnh: " + sluong.ToString());
                                        grv_Dthuocct.FocusedColumn = grv_Dthuocct.VisibleColumns[6];// set focus
                                        grv_Dthuocct.SetFocusedRowCellValue(colSoLuongct, "0");
                                    }

                                }

                                #endregion
                            }
                            else
                            {
                                #region check ton
                                if (soluong < 0)
                                {
                                    MessageBox.Show("Số lượng phải lớn hơn 0");
                                    grv_Dthuocct.FocusedColumn = grv_Dthuocct.VisibleColumns[6];// set focus
                                    grv_Dthuocct.SetFocusedRowCellValue(colSoLuongct, "0");
                                }
                                else
                                {

                                    double sluongT = 0;// tổng số lượng của dịch vụ được kê mới

                                    for (int i = 0; i < grv_Dthuocct.RowCount; i++)
                                    {
                                        if (grv_Dthuocct.GetRowCellValue(i, colSoLuongct) != null && grv_Dthuocct.GetRowCellValue(i, colKhoXuatct) != null)
                                        {
                                            if (grv_Dthuocct.GetRowCellValue(i, colLinhct) != null)
                                            {
                                                int linh = Convert.ToInt32(grv_Dthuocct.GetRowCellValue(i, colLinhct));
                                                int khoxuat = Convert.ToInt32(grv_Dthuocct.GetRowCellValue(i, colKhoXuatct));
                                                if (linh == 0 && khoxuat == maKhoXuat)
                                                    if (grv_Dthuocct.GetRowCellValue(i, coltenDVct) != null && Convert.ToInt32(grv_Dthuocct.GetRowCellValue(i, coltenDVct)) == maDV)
                                                    {
                                                        if (Convert.ToInt32(grv_Dthuocct.GetRowCellValue(i, coliddonct_ct)) == 0)
                                                        {
                                                            sluongT += Convert.ToDouble(grv_Dthuocct.GetRowCellValue(i, colSoLuongct));
                                                        }
                                                    }
                                            }
                                        }
                                    }

                                    if (idct > 0)// sửa
                                    {
                                        if (madv_old == maDV)
                                            sluongT = sluongT + soluong - soluong_old;
                                        else
                                            sluongT = soluong;
                                    }
                                    else
                                        sluongT = sluongT + soluong;
                                    string solo = "";
                                    if (grv_Dthuocct.GetRowCellValue(e.RowHandle, colSoLo) != null)
                                        solo = grv_Dthuocct.GetRowCellValue(e.RowHandle, colSoLo).ToString();
                                    double sl_ton = DungChung.Ham._checkTon_KD(data, maDV, maKhoXuat, dongia1, sluongT, solo);
                                    if (DungChung.Bien.MaBV == "24012")
                                    {
                                        DateTime d = grvDonThuocct.GetRowCellValue(e.RowHandle, colHanDung) != null ? (DateTime)grvDonThuocct.GetRowCellValue(e.RowHandle, colHanDung) : default(DateTime);
                                        sl_ton = DungChung.Ham._checkTon_KD1(data, maDV, maKhoXuat, dongia1, sluongT, solo, d);
                                    }
                                    if (sluongT > sl_ton)
                                    {
                                        MessageBox.Show("Số lượng tồn trong kho không đủ");
                                    }
                                }

                                #endregion
                            }
                            double tyleBHTT = 100;
                            if (grv_Dthuocct.GetFocusedRowCellValue(colTyLeBHTT_dt) != null && grv_Dthuocct.GetFocusedRowCellValue(colTyLeBHTT_dt).ToString() != "")
                                tyleBHTT = Convert.ToDouble(grv_Dthuocct.GetFocusedRowCellValue(colTyLeBHTT_dt));
                            grv_Dthuocct.SetRowCellValue(e.RowHandle, colthanhtienct, soluong * dongia1 * tyleBHTT / 100);
                        }
                    }

                }
                else
                {
                    grv_Dthuocct.SetRowCellValue(e.RowHandle, colthanhtienct, null);
                }

            }


            else if (e.Column.Name == "colLinhct")
            {
                if (e.Value != null)
                {
                    int _linh = Convert.ToInt32(e.Value);
                    {
                        if (_linh == 1 || _linh == 2)
                        {
                            MessageBox.Show("Chỉ được sửa trạng thái giữa lĩnh và không lĩnh");
                            if (linh == -1 || linh == 0)
                                grv_Dthuocct.SetRowCellValue(grv_Dthuocct.FocusedRowHandle, colLinhct, linh);
                        }


                    }

                    //if (linh == -1 || linh == 0)
                    //{
                    //    int idct = Convert.ToInt32(grv_Dthuocct.GetRowCellValue(rowDThuocct, colIDDonct));
                    //    int sopl = 0;
                    //    int status = 0;
                    //    var dtct = data.DThuoccts.Where(p => p.IDDonct == idct).FirstOrDefault();
                    //    if (dtct != null)
                    //    {
                    ////        sopl = dtct.SoPL;
                    //        status = dtct.Status ?? 0;
                    //        if (status == 1 || status == 2)
                    //        {
                    //            MessageBox.Show("Chỉ được sửa trạng thái giữa lĩnh và không lĩnh");
                    //            grv_Dthuocct_FocusedRowChanged(null, null);
                    //        }

                    //    }
                    //}
                    //else
                    //{
                    //    grv_Dthuocct.SetRowCellValue(grv_Dthuocct.FocusedRowHandle, colLinhct, linh);
                    //}

                }
            }
        }

        private void grv_Dthuoc_InvalidRowException(object sender, DevExpress.XtraGrid.Views.Base.InvalidRowExceptionEventArgs e)
        {
            e.ExceptionMode = ExceptionMode.DisplayError;
        }

        private void grv_Dthuocct_InvalidRowException(object sender, DevExpress.XtraGrid.Views.Base.InvalidRowExceptionEventArgs e)
        {
            e.ExceptionMode = ExceptionMode.DisplayError;
        }

        private void grv_Dthuoc_RowCellClick(object sender, RowCellClickEventArgs e)
        {
            for (int i = 0; i < grv_Dthuocct.RowCount; i++)
            {
                if (grv_Dthuocct.GetRowCellValue(grv_Dthuocct.FocusedRowHandle, coliddonct_ct) != null && Convert.ToInt32(grv_Dthuocct.GetRowCellValue(grv_Dthuocct.FocusedRowHandle, coliddonct_ct)) > 0)
                    grv_Dthuoc.Columns["KieuDon"].OptionsColumn.AllowEdit = false;
                break;
            }
        }

        int rowsua = -1;
        private void grv_Dthuoc_Click(object sender, EventArgs e)
        {
            grv_Dthuoc_FocusedRowChanged(null, null);
        }
        private void grv_Dthuocct_InitNewRow(object sender, InitNewRowEventArgs e)
        {
            grv_Dthuocct.SetRowCellValue(e.RowHandle, colLinhct, 0);
            grv_Dthuocct.SetRowCellValue(e.RowHandle, colSoPLct, 0);
            if (bnBHYT)
                grv_Dthuocct.SetRowCellValue(e.RowHandle, colBHYTct, 1);
            else
                grv_Dthuocct.SetRowCellValue(e.RowHandle, colBHYTct, 0);
        }

        private void btnSuaPL_Click(object sender, EventArgs e)
        {

            trangthai = 2;
            editable = true;
            setEditTable(editable);
            rowsua = grv_Dthuoc.FocusedRowHandle;
            grv_Dthuoc.Appearance.FocusedRow.BackColor = Color.Aquamarine;
        }

        private void btnXoaPL_Click(object sender, EventArgs e)
        {
            //int iddon = 0;
            //int row = grv_Dthuoc.FocusedRowHandle;
            //if (grv_Dthuoc.GetRowCellValue(row, colIDDon) != null)
            //{
            //    iddon = Convert.ToInt32(grv_Dthuoc.GetRowCellValue(row, colIDDon).ToString());
            //    if (iddon > 0)
            //    {
            //        bool kt = true;
            //        for (int i = 0; i < grv_Dthuocct.RowCount; i++)
            //        {
            //            if (grv_Dthuocct.GetRowCellValue(i, colIDDonct) != null && Convert.ToInt32(grv_Dthuocct.GetRowCellValue(i, colIDDonct)) > 0)
            //            {
            //                kt = false;
            //                break;
            //            }

            //        }
            //        if (kt)
            //        {
            //            DialogResult dialogResult = MessageBox.Show("Bạn có muốn xóa đơn thuốc này không ?", "Xác nhận xóa", MessageBoxButtons.YesNo);
            //            if (dialogResult == DialogResult.Yes)
            //            {
            //                var don = data.DThuocs.Single(p => p.IDDon == iddon);
            //                List<DThuocct> ldonct = data.DThuoccts.Where(p => p.IDDon == iddon).ToList();
            //                foreach (DThuocct dt in ldonct)
            //                {
            //                    data.Remove(dt);
            //                }
            //                data.Remove(don);
            //                data.SaveChanges();
            //                grv_Dthuoc.DeleteRow(row);
            //                loadDthuocct();
            //            }
            //        }
            //        else
            //            MessageBox.Show("Đơn đã có thuốc, bạn không thể xóa");
            //    }
            //    else
            //    {
            //        GridView view = sender as GridView;
            //        view.DeleteRow(row);
            //        loadDthuocct();
            //    }
            //}
        }

        private void btnMoi_Click(object sender, EventArgs e)
        {
            trangthai = 1;
            editable = true;
            setEditTable(false);

        }

        private void btnChucNang_ButtonClick(object sender, ButtonPressedEventArgs e)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            ButtonEdit editor = (ButtonEdit)sender;
            EditorButton Button = e.Button;
            int index = editor.Properties.Buttons.IndexOf(e.Button);
            btnLuuKb.Enabled = true;
            if (index == 0)//thêm
            {
                trangthai = 1;
                editable = true;
                setEditTable(editable);
                grc_Dthuoc.ForceInitialize();
                grv_Dthuoc.FocusedRowHandle = GridControl.NewItemRowHandle;
            }
            else if (index == 1)// sửa
            {
                trangthai = 2;
                editable = true;
                setEditTable(true);
                rowsua = grv_Dthuoc.FocusedRowHandle;
                grv_Dthuoc.Appearance.FocusedRow.BackColor = Color.Aquamarine;
            }
            else if (index == 2)// xóa
            {
                int iddon = 0;
                int row = grv_Dthuoc.FocusedRowHandle;
                if (grv_Dthuoc.GetRowCellValue(row, colIDDon) != null)
                {
                    iddon = Convert.ToInt32(grv_Dthuoc.GetRowCellValue(row, colIDDon).ToString());
                    if (iddon > 0)
                    {
                        bool kt = true;
                        for (int i = 0; i < grv_Dthuocct.RowCount; i++)
                        {
                            if (grv_Dthuocct.GetRowCellValue(i, colIDDonct) != null && Convert.ToInt32(grv_Dthuocct.GetRowCellValue(i, colIDDonct)) > 0)
                            {
                                kt = false;
                                break;
                            }

                        }
                        if (kt)
                        {
                            DialogResult dialogResult = MessageBox.Show("Bạn có muốn xóa đơn thuốc này không ?", "Xác nhận xóa", MessageBoxButtons.YesNo);
                            if (dialogResult == DialogResult.Yes)
                            {
                                var don = data.DThuocs.Single(p => p.IDDon == iddon);
                                List<DThuocct> ldonct = data.DThuoccts.Where(p => p.IDDon == iddon).ToList();
                                foreach (DThuocct dt in ldonct)
                                {
                                    data.DThuoccts.Remove(dt);
                                }
                                data.DThuocs.Remove(don);
                                data.SaveChanges();
                                grv_Dthuoc.DeleteRow(row);
                                loadDthuocct();
                            }
                        }
                        else
                            MessageBox.Show("Đơn đã có thuốc, bạn không thể xóa");
                    }
                    else
                    {
                        // GridView view = sender as GridView;
                        // view.DeleteRow(row);
                        loadDthuocct();
                    }
                }
            }
        }
        public int _maBN = 0;
        public void loadDthuocct()
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            if (_maBN > 0 && grv_Dthuoc.FocusedRowHandle >= 0)
            {
                if (grv_Dthuoc.GetRowCellValue(rowDThuoc, colIDDon) != null)
                {
                    int Iddon = Convert.ToInt32(grv_Dthuoc.GetRowCellValue(rowDThuoc, colIDDon));
                    List<DThuocct> ldthuocct = (from dtct in data.DThuoccts.Where(p => Iddon != 0 && p.IDDon == Iddon)
                                                select dtct).ToList();
                    bindingSource2.DataSource = ldthuocct.OrderBy(p => p.IDDonct).ToList();
                    grc_Dthuocct.DataSource = bindingSource2;
                }
                else
                {
                    bindingSource2.DataSource = null;
                    grc_Dthuocct.DataSource = bindingSource2;
                }
            }
            else
            {
                bindingSource2.DataSource = null;
                grc_Dthuocct.DataSource = bindingSource2;
            }
        }
        private void grv_Dthuoc_ShownEditor(object sender, EventArgs e)
        {
            //    GridView view = (GridView)sender;

            //    if (view.FocusedColumn.FieldName == "MaDV")
            //    {
            //        LookUpEdit edit;

            //        if (view.ActiveEditor is LookUpEdit)
            //        {
            //            edit = view.ActiveEditor as LookUpEdit; // (LookUpEdit)view.ActiveEditor;

            //            int makhoxuat = 0;

            //            if (view.GetRowCellValue(view.FocusedRowHandle, "MaKXuat") != null)
            //            {
            //                makhoxuat = Convert.ToInt32(view.GetRowCellValue(view.FocusedRowHandle, "MaKXuat"));
            //                data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            //                var qdv = (from nd in data.NhapDs.Where(p => p.PLoai == 1).Where(p => p.MaKP == makhoxuat)
            //                           join ndct in data.NhapDcts on nd.IDNhap equals ndct.IDNhap
            //                           join dv in data.DichVus on ndct.MaDV equals dv.MaDV
            //                           group dv by dv into kq
            //                           select new { MaDV = kq.Key.MaDV, kq.Key.TenDV }).ToList();
            //                edit.Properties.DataSource = qdv;
            //                edit.Properties.DisplayMember = "TenDV";
            //                edit.Properties.ValueMember = "MaDV";
            //                edit.Properties.ForceInitialize();
            //                edit.Properties.PopulateColumns();
            //                //edit.Properties.ShowPopup();
            //            }              

            //        }
            //    }
        }

        private void grv_Dthuoc_CustomRowCellEdit(object sender, CustomRowCellEditEventArgs e)
        {
            if (e.Column == colKhoXuatct)
            {
                e.RepositoryItem = lupDichVu;
                e.RepositoryItem.NullText = "";
            }
        }

        private void grv_Dthuocct_RowCellClick(object sender, RowCellClickEventArgs e)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            int row = e.RowHandle;

            if (e.Column.Name == "colXoact")
            {
                int iddonct = 0;
                if (grv_Dthuocct.GetRowCellValue(row, colIDDonct) != null)
                {
                    iddonct = Convert.ToInt32(grv_Dthuocct.GetRowCellValue(row, colIDDonct).ToString());

                    if (iddonct > 0)
                    {
                        if (grv_Dthuocct.GetRowCellValue(row, colSoPLct) != null && Convert.ToInt32(grv_Dthuocct.GetRowCellValue(row, colSoPLct)) > 0)
                        { MessageBox.Show("Thuốc đã có số phiếu lĩnh, bạn không thể xóa"); }
                        else
                        {
                            DialogResult dialogResult = MessageBox.Show("Xóa thuốc " + grv_Dthuocct.GetRowCellDisplayText(row, coltenDVct) + " ?", "Xác nhận xóa", MessageBoxButtons.YesNo);
                            if (dialogResult == DialogResult.Yes)
                            {
                                var donct = data.DThuoccts.Single(p => p.IDDonct == iddonct);
                                data.DThuoccts.Remove(donct);
                                data.SaveChanges();
                                loadDthuocct();
                            }
                        }
                    }
                    else
                    {
                        GridView view = sender as GridView;
                        view.DeleteRow(row);
                    }
                }
            }
            else
                if (e.Column.Name == "colKhoXuatct")
            {
                // grv_Dthuocct.Columns["MaKXuat"].OptionsColumn.AllowEdit = true;
                int iddonct = 0;
                //check neu IDdonct > 0 thi ko cho sua; <= 0 thi co cho sua khoa
                //if (grv_Dthuocct.GetRowCellValue(grv_Dthuocct.FocusedRowHandle, colIdonct_ct) != null)



                if (grv_Dthuocct.Columns["MaDV"].OptionsColumn.AllowEdit == true)
                {
                    if (!string.IsNullOrEmpty(grv_Dthuocct.GetRowCellDisplayText(grv_Dthuocct.FocusedRowHandle, coltenDVct)))
                        grv_Dthuocct.Columns["MaKXuat"].OptionsColumn.AllowEdit = false;
                    else
                        grv_Dthuocct.Columns["MaKXuat"].OptionsColumn.AllowEdit = true;

                }
            }

        }
        public class ThuocKeDon
        {
            public int MaDV { set; get; }
            public string TenDV { set; get; }
            public int MaKP { set; get; }


            public int MaKPnx { get; set; }

            public string DonVi { get; set; }

            public double DonGia { get; set; }
        }
        List<ThuocKeDon> lThuocKeDon = new List<ThuocKeDon>();

        private void grv_Dthuocct_ShownEditor(object sender, EventArgs e)
        {
            GridView view = (GridView)sender;
            QLBV_Database.QLBVEntities data;
            if (view.FocusedColumn.FieldName == "MaDV")
            {
                LookUpEdit edit;

                if (view.ActiveEditor is LookUpEdit)
                {
                    edit = view.ActiveEditor as LookUpEdit; // (LookUpEdit)view.ActiveEditor;

                    int makhoxuat = 0;

                    if (view.GetRowCellValue(view.FocusedRowHandle, "MaKXuat") != null)
                    {
                        data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                        makhoxuat = Convert.ToInt32(view.GetRowCellValue(view.FocusedRowHandle, "MaKXuat"));
                        int maKhoake = 0;
                        if (grv_Dthuoc.GetRowCellValue(grv_Dthuoc.FocusedRowHandle, colKhoaKe) != null)
                            maKhoake = Convert.ToInt32(grv_Dthuoc.GetRowCellValue(grv_Dthuoc.FocusedRowHandle, colKhoaKe));
                        string _makpsd = ";" + maKhoake.ToString() + ";";
                        var kttutruc = _lKphongall.Where(p => p.MaKP == makhoxuat).Where(p => p.PLoai.Contains("Tủ trực")).ToList();
                        int kieudon = -1;
                        if (kttutruc.Count > 0)
                        {
                            var duoc = (from tenduoc in DaTaContext.DichVus.Where(p => p.PLoai == 1).Where(p => p.Status == 1).Where(p => p.MaKPsd.Contains(_makpsd))
                                        join nhapduoc in DaTaContext.NhapDcts on tenduoc.MaDV equals nhapduoc.MaDV
                                        join nduoc in DaTaContext.NhapDs.Where(p => p.PLoai == 2).Where(p => p.MaKPnx == makhoxuat) on nhapduoc.IDNhap equals nduoc.IDNhap
                                        group new { tenduoc, nhapduoc, nduoc } by new { tenduoc.TenHC, nduoc.MaKP, tenduoc.TenDV, tenduoc.MaDV, tenduoc.DonVi, tenduoc.NguonGoc } into kq
                                        select new { TenHC = DungChung.Bien.MaBV == "08602" ? kq.Key.TenDV : kq.Key.TenHC, TenDV = DungChung.Bien.MaBV == "08602" ? kq.Key.TenHC : kq.Key.TenDV, kq.Key.MaDV, kq.Key.DonVi, kq.Key.MaKP, kq.Key.NguonGoc }
                                ).OrderBy(p => p.TenDV).ToList();
                            edit.Properties.DataSource = duoc;
                            edit.Properties.DisplayMember = "TenDV";
                            edit.Properties.ValueMember = "MaDV";

                        }
                        else
                        {

                            if (grv_Dthuoc.GetRowCellValue(grv_Dthuoc.FocusedRowHandle, colKieuDon_kdon) != null)
                            {
                                kieudon = Convert.ToInt32(grv_Dthuoc.GetRowCellValue(grv_Dthuoc.FocusedRowHandle, colKieuDon_kdon));

                                if (kieudon == 2) // kiểu trả dược không cần kiểm tra mã kp sd
                                {
                                    var duoc = (from tenduoc in DaTaContext.DichVus.Where(p => p.PLoai == 1).Where(p => p.Status == 1)
                                                join nhapduoc in DaTaContext.DThuoccts.Where(p => p.Status != 0).Where(p => p.MaKXuat == makhoxuat) on tenduoc.MaDV equals nhapduoc.MaDV
                                                join nduoc in DaTaContext.DThuocs.Where(p => p.MaBNhan == _maBN).Where(p => p.MaKP == maKhoake) on nhapduoc.IDDon equals nduoc.IDDon
                                                group new { tenduoc, nhapduoc, nduoc } by new { tenduoc.TenHC, nduoc.MaKP, tenduoc.TenDV, tenduoc.MaDV, tenduoc.DonVi, tenduoc.NguonGoc } into kq
                                                select new { TenHC = DungChung.Bien.MaBV == "08602" ? kq.Key.TenDV : kq.Key.TenHC, TenDV = DungChung.Bien.MaBV == "08602" ? kq.Key.TenHC : kq.Key.TenDV, kq.Key.MaDV, kq.Key.DonVi, kq.Key.MaKP, kq.Key.NguonGoc }
                                                                   ).OrderBy(p => p.TenDV).ToList();
                                    edit.Properties.DataSource = duoc;
                                    edit.Properties.DisplayMember = "TenDV";
                                    edit.Properties.ValueMember = "MaDV";
                                }
                                else
                                {
                                    var duoc = (from tenduoc in DaTaContext.DichVus.Where(p => p.PLoai == 1).Where(p => p.Status == 1).Where(p => p.MaKPsd.Contains(_makpsd))
                                                join nhapduoc in DaTaContext.NhapDcts on tenduoc.MaDV equals nhapduoc.MaDV
                                                join nduoc in DaTaContext.NhapDs.Where(p => p.PLoai == 1).Where(p => p.MaKP == makhoxuat) on nhapduoc.IDNhap equals nduoc.IDNhap
                                                group new { tenduoc, nhapduoc, nduoc } by new { tenduoc.TenHC, nduoc.MaKP, tenduoc.TenDV, tenduoc.MaDV, tenduoc.DonVi, tenduoc.NguonGoc } into kq
                                                select new { TenHC = DungChung.Bien.MaBV == "08602" ? kq.Key.TenDV : kq.Key.TenHC, TenDV = DungChung.Bien.MaBV == "08602" ? kq.Key.TenHC : kq.Key.TenDV, kq.Key.MaDV, kq.Key.DonVi, kq.Key.MaKP, kq.Key.NguonGoc }
                                                ).OrderBy(p => p.TenDV).ToList();
                                    edit.Properties.DataSource = duoc;
                                    edit.Properties.DisplayMember = "TenDV";
                                    edit.Properties.ValueMember = "MaDV";
                                }
                            }
                        }
                    }
                    else
                    {
                        edit.Properties.DataSource = null;
                        edit.Properties.DisplayMember = "TenDV";
                        edit.Properties.ValueMember = "MaDV";
                    }

                }
            }
        }


        private void lblIDDon_TextChanged(object sender, EventArgs e)
        {

        }
        int rowDthuocFC = -1;//row donthuoc focus

        private void btnLuu_Click(object sender, EventArgs e)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            _ldthuocct = new List<DThuocct>();

            int iddon = 0;

            for (int i = 0; i < grv_Dthuoc.RowCount; i++)
            {
                if (grv_Dthuoc.GetRowCellValue(i, colIDDon_kedon) != null && grv_Dthuoc.GetRowCellValue(i, colIDDon_kedon).ToString() == lblIDDon_5.Text)
                {
                    iddon = Convert.ToInt32(lblIDDon_5.Text);
                    rowDthuocFC = i;
                    break;
                }
            }

            DThuoc dthuoc = new DThuoc();
            int makp = 0;
            DateTime? ngayke = null;
            string nguoike = "";
            int kieudon = -2;

            if (checkValidateDonThuoc())
            {
                #region cập nhật đơn thuốc
                if (iddon == 0)
                {
                    #region thêm mới
                    dthuoc.MaBNhan = _maBN;


                    dthuoc.PLDV = 1;
                    if (grv_Dthuoc.GetRowCellValue(rowDthuocFC, colNgayKe_kdon) != null)
                    {
                        ngayke = Convert.ToDateTime(grv_Dthuoc.GetRowCellValue(rowDthuocFC, colNgayKe_kdon));
                        dthuoc.NgayKe = ngayke;
                    }
                    if (grv_Dthuoc.GetRowCellValue(rowDthuocFC, colKhoaKe) != null)
                    {
                        makp = Convert.ToInt32(grv_Dthuoc.GetRowCellValue(rowDthuocFC, colKhoaKe));
                        dthuoc.MaKP = makp;
                    }
                    if (grv_Dthuoc.GetRowCellValue(rowDthuocFC, colBsKeDon) != null)
                    {
                        nguoike = grv_Dthuoc.GetRowCellValue(rowDthuocFC, colBsKeDon).ToString(); ;
                        dthuoc.MaCB = nguoike;

                    }
                    if (grv_Dthuoc.GetRowCellValue(rowDthuocFC, colKieuDon_kdon) != null)
                    {
                        kieudon = Convert.ToInt32(grv_Dthuoc.GetRowCellValue(rowDthuocFC, colKieuDon_kdon));
                        dthuoc.KieuDon = kieudon;
                    }
                    //if (grv_Dthuoc.GetRowCellValue(rowDthuocFC, colStatus) != null)
                    //{
                    //    dthuoc.Status = Convert.ToInt32(grv_Dthuoc.GetRowCellValue(rowDthuocFC, colStatus));

                    //}
                    #region kiểm tra
                    if (DungChung.Ham.CheckNgay(Convert.ToDateTime(grvBNhankb.GetFocusedRowCellValue(colNNhap)), dthuoc.NgayKe ?? new DateTime(2000, 11, 1)))
                    {

                        int _idkb = 0;
                        int _makpkb = 0;

                        var ktkpkb = (from bnkb in DaTaContext.BNKBs.Where(p => p.MaBNhan == _maBN).OrderByDescending(p => p.IDKB) select bnkb).ToList();
                        if (ktkpkb.Count > 0)
                        {
                            _idkb = ktkpkb.First().IDKB;
                            _makpkb = ktkpkb.First().MaKP == null ? 0 : ktkpkb.First().MaKP.Value;
                        }

                        bool taomoi = true;
                        var kt = (from dt in DaTaContext.DThuocs.Where(p => p.MaBNhan == _maBN)
                                  where (dt.NgayKe.Value.Day == ngayke.Value.Day && dt.NgayKe.Value.Month == ngayke.Value.Month && dt.NgayKe.Value.Year == ngayke.Value.Year)
                                  where (dt.KieuDon == kieudon)
                                  select dt.IDDon).ToList();
                        if (kt.Count > 0)
                        {
                            string kdon = grv_Dthuoc.GetRowCellDisplayText(grv_Dthuoc.FocusedRowHandle, colKieuDon_kdon);
                            string ngke = grv_Dthuoc.GetRowCellDisplayText(grv_Dthuoc.FocusedRowHandle, colNgayKe_kdon);
                            DialogResult _result = MessageBox.Show("ngày " + ngke + " Bn đã có đơn: " + kdon + " Bạn vẫn muốn kê thêm đơn?", "Hỏi lưu", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                            if (_result == DialogResult.No)
                            {
                                taomoi = false;
                            }
                        } // lấy IDKB
                        int _nhomKP = 0;
                        var benhNhanKPKH = DaTaContext.BenhNhans.FirstOrDefault(o => o.MaBNhan == _maBN);
                        if (taomoi)
                        {

                            if (_idkb <= 0)
                            {
                                MessageBox.Show("Bệnh nhân chưa có chẩn đoán, bạn không thể kê đơn");
                                taomoi = false;
                            }
                        }
                        if (taomoi)
                        {

                            var ktNhomKP = _lKphongall.Where(p => p.MaKP == makp).ToList();
                            string _chuyenkhoaKD = "";

                            if (ktNhomKP.Count > 0 && ktNhomKP.First().ChuyenKhoa != null)
                                _chuyenkhoaKD = ktNhomKP.First().ChuyenKhoa;
                            if (_chuyenkhoaKD == "Trực cấp cứu")
                            {
                                if (ktNhomKP.Count > 0 && ktNhomKP.First().NhomKP != null)
                                    _nhomKP = ktNhomKP.First().NhomKP == null ? 0 : Convert.ToInt32(ktNhomKP.First().NhomKP);
                            }
                            if ((DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017") ? (benhNhanKPKH.MaKPDTKH == makp && benhNhanKPKH.MaKPDTKH == _nhomKP && (_makpkb != makp && _makpkb != _nhomKP)) : (_makpkb != makp && _makpkb != _nhomKP) && ChuyenKhoa != "Phẫu thuật")
                            {
                                MessageBox.Show("Bệnh nhân đang được điều trị tại khoa khác, bạn không thể kê đơn");
                                taomoi = false;
                            }
                        }
                        if (taomoi && ((DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017") ? (benhNhanKPKH.MaKPDTKH == makp && benhNhanKPKH.MaKPDTKH == _nhomKP && (_makpkb != makp && _makpkb != _nhomKP)) : (_makpkb != makp && _makpkb != _nhomKP)))
                        {
                            if (ChuyenKhoa != "Phẫu thuật")
                            {
                                MessageBox.Show("Bệnh nhân đang được điều trị tại khoa khác, bạn không thể kê đơn");
                                taomoi = false;
                            }
                        }
                        #endregion
                        if (taomoi)
                        {
                            data.DThuocs.Add(dthuoc);
                            data.SaveChanges();
                            iddon = dthuoc.IDDon;
                            #region add diễn biến

                            if (grv_Dthuoc.GetRowCellValue(rowDthuocFC, colDBBenh) != null)
                            {
                                string dienbien = grv_Dthuoc.GetRowCellValue(rowDthuocFC, colDBBenh).ToString();
                                if (dienbien.Trim() != "")
                                {
                                    DienBien dbien = new DienBien();
                                    dbien.IDDon = iddon;
                                    dbien.MaBNhan = _maBN;
                                    dbien.NgayNhap = ngayke;
                                    dbien.DienBien1 = dienbien;
                                    dbien.MaCB = nguoike;
                                    data.DienBiens.Add(dbien);
                                    data.SaveChanges();

                                }
                            }
                            #endregion
                        }
                    }
                    #endregion
                }
                else
                {
                    #region sửa
                    _dthuoc = (from dt in data.DThuocs.Where(p => p.IDDon == iddon)
                               join db in data.DienBiens on dt.IDDon equals db.IDDon into kq
                               from kq1 in kq.DefaultIfEmpty()
                               select new
                               DonThuoc
                               { IDDon = dt.IDDon, MaBNhan = dt.MaBNhan, KieuDon = dt.KieuDon, MaCB = dt.MaCB, MaKP = dt.MaKP ?? 0, NgayKe = dt.NgayKe, DienBien = kq1 == null ? "" : kq1.DienBien1 })
                               .FirstOrDefault();
                    // _dthuoc.SoPL = 0;

                    dthuoc = data.DThuocs.Where(p => p.IDDon == iddon).FirstOrDefault();
                    if (grv_Dthuoc.GetRowCellValue(rowDThuoc, colNgayKe_kdon) != null)
                    {
                        ngayke = Convert.ToDateTime(grv_Dthuoc.GetRowCellValue(rowDthuocFC, colNgayKe_kdon));
                        dthuoc.NgayKe = ngayke;
                    }
                    if (grv_Dthuoc.GetRowCellValue(rowDthuocFC, colKhoaKe) != null)
                    {
                        makp = Convert.ToInt32(grv_Dthuoc.GetRowCellValue(rowDthuocFC, colKhoaKe));
                        dthuoc.MaKP = makp;
                    }
                    if (grv_Dthuoc.GetRowCellValue(rowDthuocFC, colBsKeDon) != null)
                    {
                        nguoike = grv_Dthuoc.GetRowCellValue(rowDThuoc, colBsKeDon).ToString(); ;
                        dthuoc.MaCB = nguoike;
                    }
                    if (grv_Dthuoc.GetRowCellValue(rowDthuocFC, colKieuDon_kdon) != null)
                    {
                        kieudon = Convert.ToInt32(grv_Dthuoc.GetRowCellValue(rowDthuocFC, colKieuDon_kdon));
                        dthuoc.KieuDon = kieudon;
                    }



                    if (grv_Dthuoc.GetRowCellValue(rowDThuoc, colDBBenh) != null)
                    {
                        DienBien db = data.DienBiens.Where(p => p.MaBNhan == _maBN).Where(p => p.IDDon == iddon).FirstOrDefault();

                        string dienbien = grv_Dthuoc.GetRowCellValue(rowDThuoc, colDBBenh).ToString();
                        if (db == null)
                        {
                            db = new DienBien();
                            if (dienbien.Trim() != "")
                            {
                                db.IDDon = iddon;
                                db.MaBNhan = _maBN;
                                db.NgayNhap = ngayke;
                                db.DienBien1 = dienbien;
                                db.MaCB = nguoike;
                                db.DienBien1 = dienbien;
                                data.DienBiens.Add(db);
                                data.SaveChanges();
                            }
                        }
                        else
                        {
                            db.NgayNhap = ngayke;
                            db.MaCB = nguoike;
                            db.DienBien1 = dienbien;
                            data.SaveChanges();
                        }
                    }

                    data.SaveChanges();
                    rowDThuoc = grv_Dthuoc.FocusedRowHandle;
                    #endregion
                }
                #endregion


                if (iddon > 0)// đã lưu mới cuống đơn thành công hoặc là sửa đơn
                {
                    #region cập nhật đơn thuốc chi tiết
                    for (int i = 0; i < grv_Dthuocct.RowCount; i++)
                    {
                        if (checkValidateDonThuocct(i))
                        {
                            data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                            DThuocct dthuocct = new DThuocct();
                            int iddonct = 0; int maDV = 0;
                            string tenthuoc = "";
                            if (grv_Dthuocct.GetRowCellValue(i, coliddonct_ct) != null)
                                iddonct = Convert.ToInt32(grv_Dthuocct.GetRowCellValue(i, coliddonct_ct));
                            if (grv_Dthuocct.GetRowCellValue(i, coltenDVct) != null)
                                maDV = Convert.ToInt32(grv_Dthuocct.GetRowCellValue(i, coltenDVct));
                            if (maDV > 0)
                            {
                                if (iddonct <= 0)
                                {
                                    #region thêm mới
                                    dthuocct.IDDon = iddon;
                                    dthuocct.MaDV = maDV;
                                    dthuocct.MaKP = makp;
                                    dthuocct.SoPL = 0;
                                    dthuocct.Status = 0;

                                    if (grv_Dthuocct.GetRowCellValue(i, colSoPLct) != null)
                                    {
                                        int sopl = Convert.ToInt32(grv_Dthuocct.GetRowCellValue(i, colSoPLct));
                                        dthuocct.SoPL = sopl;
                                    }

                                    if (grv_Dthuocct.GetRowCellValue(i, colKhoXuatct) != null)
                                    {
                                        int khoxuat = Convert.ToInt32(grv_Dthuocct.GetRowCellValue(i, colKhoXuatct));
                                        dthuocct.MaKXuat = khoxuat;

                                    }
                                    if (grv_Dthuocct.GetRowCellValue(i, colDongiact) != null)
                                    {
                                        dthuocct.DonGia = Convert.ToDouble(grv_Dthuocct.GetRowCellValue(i, colDongiact));
                                    }
                                    if (grv_Dthuocct.GetRowCellValue(i, colDonvict) != null)
                                    {
                                        dthuocct.DonVi = grv_Dthuocct.GetRowCellValue(i, colDonvict).ToString();

                                    }
                                    if (grv_Dthuocct.GetRowCellValue(i, colthanhtienct) != null)
                                    {
                                        dthuocct.ThanhTien = Convert.ToDouble(grv_Dthuocct.GetRowCellValue(i, colthanhtienct));

                                    }
                                    if (grv_Dthuocct.GetRowCellValue(i, colSoLuongct) != null)
                                    {
                                        dthuocct.SoLuong = Convert.ToDouble(grv_Dthuocct.GetRowCellValue(i, colSoLuongct));

                                    }
                                    if (grv_Dthuocct.GetRowCellValue(i, colBHYTct) != null)
                                    {
                                        dthuocct.TrongBH = Convert.ToInt32(grv_Dthuocct.GetRowCellValue(i, colBHYTct));

                                    }
                                    if (grv_Dthuocct.GetRowCellValue(i, colLinhct) != null)
                                    {
                                        dthuocct.Status = Convert.ToInt32(grv_Dthuocct.GetRowCellValue(i, colLinhct));

                                    }
                                    if (grvDonThuocct.GetRowCellValue(i, colTyLeBHTT_dt) != null)
                                        dthuocct.TyLeTT = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colTyLeBHTT_dt));
                                    else
                                        dthuocct.TyLeTT = 0;
                                    tenthuoc = grv_Dthuocct.GetRowCellDisplayText(i, coltenDVct);
                                    #region kieemr tra so luong ton
                                    bool tutruc = false;
                                    var qtutruc = data.KPhongs.Where(p => p.MaKP == dthuocct.MaKXuat).Where(p => p.PLoai == "Tủ trực").ToList();
                                    if (qtutruc.Count > 0)
                                        tutruc = true;
                                    string solo = "";
                                    if (grv_Dthuocct.GetRowCellValue(i, colSoLo) != null)
                                        solo = grv_Dthuocct.GetRowCellValue(i, colSoLo).ToString();
                                    double soluongton = DungChung.Ham._checkTon_KD(data, dthuocct.MaDV ?? 0, dthuocct.MaKXuat ?? 0, dthuocct.DonGia, dthuocct.SoLuong, solo);
                                    if (DungChung.Bien.MaBV == "24012")
                                    {
                                        DateTime? handung = new DateTime();
                                        if (grv_Dthuocct.GetRowCellValue(i, colHanDung) != null)
                                            solo = grv_Dthuocct.GetRowCellValue(i, colHanDung).ToString();
                                        soluongton = DungChung.Ham._checkTon_KD1(data, dthuocct.MaDV ?? 0, dthuocct.MaKXuat ?? 0, dthuocct.DonGia, dthuocct.SoLuong, solo, handung);
                                    }
                                    #endregion
                                    if (tutruc || dthuocct.Status == -1 || (soluongton - dthuocct.SoLuong) >= 0)
                                    {
                                        data.DThuoccts.Add(dthuocct);
                                        int count = data.SaveChanges();
                                    }
                                    else
                                        MessageBox.Show("Thuốc " + tenthuoc + " số lượng tồn không đủ");
                                    #endregion
                                }
                                else
                                {
                                    #region sửa

                                    dthuocct = data.DThuoccts.Where(p => p.IDDonct == iddonct).FirstOrDefault();
                                    dthuocct.MaDV = maDV;
                                    dthuocct.MaKP = makp;
                                    dthuocct.SoPL = 0;
                                    double sluong_old = dthuocct.SoLuong;
                                    int maDV_old = dthuocct.MaDV ?? 0;

                                    if (grv_Dthuocct.GetRowCellValue(i, colSoPLct) != null)
                                    {
                                        int sopl = Convert.ToInt32(grv_Dthuocct.GetRowCellValue(i, colSoPLct));
                                        dthuocct.SoPL = sopl;
                                    }

                                    //if (grv_Dthuocct.GetRowCellValue(i, colKhoXuatct) != null)
                                    //{
                                    //    int khoxuat = Convert.ToInt32(grv_Dthuocct.GetRowCellValue(i, colKhoXuatct));
                                    //    //thêm kho xuất vào đơn chi tiết
                                    //}

                                    if (grv_Dthuocct.GetRowCellValue(i, colDongiact) != null)
                                    {
                                        dthuocct.DonGia = Convert.ToDouble(grv_Dthuocct.GetRowCellValue(i, colDongiact));

                                    }
                                    if (grv_Dthuocct.GetRowCellValue(i, colDonvict) != null)
                                    {
                                        dthuocct.DonVi = grv_Dthuocct.GetRowCellValue(i, colDonvict).ToString();

                                    }
                                    if (grv_Dthuocct.GetRowCellValue(i, colthanhtienct) != null)
                                    {
                                        dthuocct.ThanhTien = Convert.ToDouble(grv_Dthuocct.GetRowCellValue(i, colthanhtienct));

                                    }
                                    if (grv_Dthuocct.GetRowCellValue(i, colSoLuongct) != null)
                                    {
                                        dthuocct.SoLuong = Convert.ToDouble(grv_Dthuocct.GetRowCellValue(i, colSoLuongct));

                                    }
                                    if (grv_Dthuocct.GetRowCellValue(i, colBHYTct) != null)
                                    {
                                        dthuocct.TrongBH = Convert.ToInt32(grv_Dthuocct.GetRowCellValue(i, colBHYTct));
                                        //thêm số lượng vào đơn chi tiết
                                    }
                                    if (grv_Dthuocct.GetRowCellValue(i, colLinhct) != null)
                                    {
                                        dthuocct.Status = Convert.ToInt32(grv_Dthuocct.GetRowCellValue(i, colLinhct));
                                        //thêm số lượng vào đơn chi tiết
                                    }
                                    if (grvDonThuocct.GetRowCellValue(i, colTyLeBHTT_dt) != null)
                                        dthuocct.TyLeTT = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colTyLeBHTT_dt));
                                    else
                                        dthuocct.TyLeTT = 0;
                                    #endregion
                                    double soluong_checkTon = dthuocct.SoLuong;
                                    if (maDV_old == dthuocct.MaDV)// vẫn là dịch vụ cũ
                                    {
                                        soluong_checkTon = dthuocct.SoLuong - sluong_old;
                                    }

                                    #region kieemr tra so luong ton
                                    bool tutruc = false;
                                    var qtutruc = data.KPhongs.Where(p => p.MaKP == dthuocct.MaKXuat).Where(p => p.PLoai == "Tủ trực").ToList();
                                    if (qtutruc.Count > 0)
                                        tutruc = true;
                                    string solo = "";
                                    if (grv_Dthuocct.GetRowCellValue(i, colSoLo) != null)
                                        solo = grv_Dthuocct.GetRowCellValue(i, colSoLo).ToString();
                                    double soluongton = DungChung.Ham._checkTon_KD(data, dthuocct.MaDV ?? 0, dthuocct.MaKXuat ?? 0, dthuocct.DonGia, soluong_checkTon, solo);
                                    if (DungChung.Bien.MaBV == "24012")
                                    {
                                        DateTime? handung = new DateTime();
                                        if (grv_Dthuocct.GetRowCellValue(i, colHanDung) != null)
                                            solo = grv_Dthuocct.GetRowCellValue(i, colHanDung).ToString();
                                        soluongton = DungChung.Ham._checkTon_KD1(data, dthuocct.MaDV ?? 0, dthuocct.MaKXuat ?? 0, dthuocct.DonGia, dthuocct.SoLuong, solo, handung);
                                    }
                                    #endregion
                                    if (tutruc || dthuocct.Status == -1 || (soluongton - soluong_checkTon) >= 0)
                                    {
                                        data.SaveChanges();
                                    }
                                    else
                                        MessageBox.Show("Thuốc " + tenthuoc + " số lượng tồn không đủ");
                                }
                            }
                        }
                    }
                    #endregion
                }


                _dthuoc = new DonThuoc();
                change = 0;
                changect = 0;
                trangthai = 0;
                loadDonThuoc();
                loadDthuocct();
                editable = false;
                setEditTable(false);
                rowsua = -1;
                err = true;
                btnLuuKb.Enabled = false;
            }

        }

        private void btnNew_Click(object sender, EventArgs e)
        {
            trangthai = 1;
            rowsua = -1;
        }


        private void loadDonThuoc()
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);

            if (_maBN > 0)
            {
                List<DonThuoc> ldthuoc = (from dt in data.DThuocs.Where(p => p.MaBNhan == _maBN).Where(p => p.PLDV == 1)
                                          join db in data.DienBiens on dt.IDDon equals db.IDDon into kq
                                          from kq1 in kq.DefaultIfEmpty()
                                          select new DonThuoc
                                          {
                                              IDDon = dt.IDDon,
                                              NgayKe = dt.NgayKe,
                                              MaKP = dt.MaKP ?? 0,
                                              MaCB = dt.MaCB,
                                              MaBNhan = dt.MaBNhan,
                                              KieuDon = dt.KieuDon,
                                              DienBien = kq1 == null ? null : kq1.DienBien1
                                          }).ToList();
                bindingSource1.DataSource = ldthuoc.OrderBy(p => p.IDDon).ToList();
                grc_Dthuoc.DataSource = bindingSource1;
            }
        }
        #endregion
        #region kiểm tra buồng giường
        private string _ktBuongGiuong(int _mkp, string _b, string _g, int _mabn)
        {
            try
            {
                string _ds = "";
                DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                if (!string.IsNullOrEmpty(_b) && !string.IsNullOrEmpty(_g))
                {
                    var _bnkb = (from bnkb in DaTaContext.BNKBs.Where(p => p.MaKP == _makp && p.MaBNhan != _mabn).Where(p => p.PhuongAn != 3)
                                 join rv in DaTaContext.RaViens on bnkb.MaBNhan equals rv.MaBNhan into r
                                 from a in r.DefaultIfEmpty()
                                 select new { bnkb.MaBNhan, MaBNhanRV = a.MaBNhan == null ? false : true, bnkb.Buong, bnkb.Giuong }
                                   ).ToList();
                    var _lbn = DaTaContext.BenhNhans.Where(p => p.MaKP == _makp && p.Status != 0 && p.Status != 2 && p.Status != 3).ToList();
                    var b = (from c in _bnkb
                             where c.MaBNhanRV == false
                             join bn in _lbn on c.MaBNhan equals bn.MaBNhan
                             select new { c.MaBNhan, bn.TenBNhan, c.Giuong, c.Buong }).ToList();
                    foreach (var item in b)
                    {
                        if (item.Buong.Contains(";") && item.Giuong.Contains(";"))
                        {
                            string[] arrB = item.Buong.Split(';');
                            string[] arrG = item.Giuong.Split(';');
                            if (arrB.LastOrDefault() == _b && arrG.LastOrDefault() == _g)
                            {
                                _ds += item.TenBNhan + "-" + item.MaBNhan.ToString() + ";\n";
                            }
                        }
                        else
                        {
                            if (item.Buong == _b && item.Giuong == _g)
                                _ds += item.TenBNhan + "-" + item.MaBNhan.ToString() + ";\n";
                        }
                    }
                }
                return _ds;
            }
            catch
            {
                return "";

            }
        }
        #endregion
        #region KtraluuKhambenh
        private bool KTraKB()
        {
            int rs;
            int _int_maBN = 0;
            QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            int MaKPMoi = 0, MaKPCu = 0;
            if (lupKhoaDT.EditValue != null)
                MaKPMoi = Convert.ToInt32(lupKhoaDT.EditValue);
            if (lupKhoaKhamkb.EditValue != null)
                MaKPCu = Convert.ToInt32(lupKhoaKhamkb.EditValue);
            var ktravv = _data.VaoViens.Where(p => p.MaBNhan == _int_maBN).ToList();
            //if (ktravv.Count < 0 && (radNoiTru.SelectedIndex == 1 || radNoiTru.SelectedIndex == 2))
            //{
            //    MessageBox.Show("Bệnh nhân chưa có khám bệnh vào viện ?");
            //    return false;
            //}
            if (MaKPMoi == MaKPCu && radGiaiQuyet.SelectedIndex == 3)
            {
                MessageBox.Show("Khoa mới không được trùng với khoa đang điều trị");
                lupKhoaDT.Focus();
                return false;
            }
            if (TTLuu == 2 && ckcchuyenBG.Checked)
            {
                if (dtTGChuyenBuongGiuong.EditValue == null)
                {
                    MessageBox.Show("Bạn chưa nhập ngày chuyển buồng giường");
                    dtTGChuyenBuongGiuong.Focus();
                    return false;
                }
                if (string.IsNullOrWhiteSpace(cboBuong.Text))
                {
                    MessageBox.Show("Bạn chưa nhập buồng");
                    cboBuong.Focus();
                    return false;
                }
                if (string.IsNullOrWhiteSpace(cboGiuong.Text))
                {
                    MessageBox.Show("Bạn chưa nhập giường");
                    cboGiuong.Focus();
                    return false;
                }
                if (dtTGChuyenBuongGiuong.EditValue == null)
                {
                    MessageBox.Show("Bạn chưa nhập ngày chuyển buồng giường");
                    dtTGChuyenBuongGiuong.Focus();
                    return false;
                }
                if (cboBuong.Text.Trim() == Buongcu)
                {
                    if (cboGiuong.Text.Trim() == Giuongcu)
                    {
                        MessageBox.Show("Chuyển Buồng|Giường ko hợp lệ, Giường mới trùng với giường cũ!");
                        cboBuong.Focus();
                        return false;
                    }
                }
            }
            if (_int_maBN <= 0)
            {
                MessageBox.Show("Bạn chưa chọn bệnh nhân");
                grcBNhankb.Focus();
                return false;
            }
            if (dtNgayKhamkb.EditValue == null)
            {
                MessageBox.Show("Bạn chưa nhập ngày khám");
                dtNgayKhamkb.Focus();
                return false;
            }
            if (string.IsNullOrEmpty(lupKhoaKhamkb.Text))
            {
                MessageBox.Show("Bạn chưa nhập khoa khám");
                lupKhoaKhamkb.Focus();
                return false;
            }
            if (string.IsNullOrEmpty(lupNguoiKhamkb.Text))
            {
                MessageBox.Show("bạn chưa nhập người khám bệnh");
                lupNguoiKhamkb.Focus();
                return false;
            }
            //if (string.IsNullOrEmpty(lupChanDoanKb.Text) && ((DungChung.Bien.MaBV != "30007" && string.IsNullOrEmpty(txtBenhKhac2.Text))))
            //{
            //    MessageBox.Show("bạn chưa nhập chẩn đoán|bệnh khác");
            //    lupChanDoanKb.Focus();
            //    return false;
            //}
            if (DungChung.Bien.MaBV == "26007")
            {
                if (radGiaiQuyet.SelectedIndex != 4)
                {
                    if (string.IsNullOrEmpty(lupMaICDkb.Text))
                    {
                        MessageBox.Show("bạn chưa nhập mã bệnh");
                        lupMaICDkb.Focus();
                        return false;
                    }
                }
            }
            else
            {
                if (string.IsNullOrEmpty(lupMaICDkb.Text) && (DungChung.Bien.MaBV != "30007" && string.IsNullOrEmpty(LupICD2.Text)))
                {
                    MessageBox.Show("bạn chưa nhập mã bệnh");
                    lupMaICDkb.Focus();
                    return false;
                }
            }
            if (!string.IsNullOrEmpty(lupKhoaKhamkb.Text) && (lupKhoaKhamkb.Text != lupTimMaKP.Text))
            {
                MessageBox.Show("Bệnh nhân được chỉ định đến: " + lupTimMaKP.Text + ", bạn không thể khám bệnh tại: " + lupKhoaKhamkb.Text);
                lupKhoaKhamkb.Focus();
                return false;
            }
            if (string.IsNullOrEmpty(cboChuyenKhoa.Text))
            {
                MessageBox.Show("Bạn chưa chọn chuyên khoa!");
                grcBNhankb.Focus();
                return false;
            }
            if (radGiaiQuyet.SelectedIndex == 3)
            {
                if (string.IsNullOrEmpty(dt_NgayChuyen.Text) && !string.IsNullOrEmpty(lupKhoaDT.Text))
                {
                    MessageBox.Show("thông tin chuyển khoa không hợp lệ!");
                    dt_NgayChuyen.Focus();
                    return false;
                }
                if (string.IsNullOrEmpty(txtSoNgaydt.Text) && DungChung.Bien.MaBV == "27023")
                {
                    MessageBox.Show("thông tin chuyển khoa không hợp lệ!");
                    txtSoNgaydt.Focus();
                    return false;
                }
                //else
                //{
                //    //if()
                //    try
                //    {
                //        double sndt = double.Parse(txtSoNgaydt.Text);
                //    }
                //    catch
                //    {
                //        MessageBox.Show("thông tin chuyển khoa không hợp lệ!");
                //        txtSoNgaydt.Focus();
                //        return false;
                //    }
                //}
                if (!string.IsNullOrEmpty(dt_NgayChuyen.Text) && string.IsNullOrEmpty(lupKhoaDT.Text))
                {
                    MessageBox.Show("thông tin chuyển khoa không hợp lệ!");
                    lupKhoaDT.Focus();
                    return false;
                }
                if (!string.IsNullOrEmpty(dt_NgayChuyen.Text))
                {
                    if ((dt_NgayChuyen.DateTime - dtNgayKhamkb.DateTime).Days < 0)
                    {
                        MessageBox.Show("Ngày chuyển không hợp lệ!");
                        dt_NgayChuyen.Focus();
                        return false;
                    }
                }
            }
            if (!string.IsNullOrEmpty(txtSoNgaydt.Text))
            {
                try
                {
                    double sndt = double.Parse(txtSoNgaydt.Text);
                }
                catch
                {
                    MessageBox.Show("thông tin chuyển khoa không hợp lệ!");
                    txtSoNgaydt.Focus();
                    return false;
                }
            }
            string _ds = _ktBuongGiuong(Convert.ToInt32(lupKhoaKhamkb.EditValue), cboBuong.Text, cboGiuong.Text, _int_maBN);
            if (!string.IsNullOrEmpty(_ds))
            {
                DialogResult _result = MessageBox.Show("Giường: " + cboGiuong.Text + " đã sử dụng cho bệnh nhân:\n" + _ds + "Bạn vẫn muốn lưu?", "Thông báo", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                if (_result == DialogResult.No)
                {
                    return false;
                }
            }
            if (dt_NgayChuyen.EditValue != null && dt_NgayChuyen.EditValue.ToString() != "" && (radGiaiQuyet.SelectedIndex == 0 || radGiaiQuyet.SelectedIndex == 1 || radGiaiQuyet.SelectedIndex == 2 || radGiaiQuyet.SelectedIndex == 3))
            {
                if (dt_NgayChuyen.DateTime > DateTime.Now && DungChung.Bien.MaBV != "24012")
                {
                    MessageBox.Show("Ngày Ra viện|Chuyển viện|Chuyển PK không được lớn hơn ngày hiện tại!");
                    dt_NgayChuyen.Focus();
                    return false;
                }
                if (dt_NgayChuyen.DateTime < dtNgayKhamkb.DateTime)
                {
                    MessageBox.Show("Ngày Ra viện|Chuyển viện|Chuyển PK không được nhỏ hơn ngày khám!");
                    dt_NgayChuyen.Focus();
                    return false;
                }
            }


            #region 12122
            if (DungChung.Bien.MaBV == "12122" && radGiaiQuyet.SelectedIndex == 3)
            {
                string tencd = DungChung.Ham.KTChiDinh(_data, _int_maBN);
                if (!string.IsNullOrEmpty(tencd))
                {

                    MessageBox.Show("Bệnh nhân có các chỉ định CLS chưa được thực hiện:\n " + tencd + "Bạn không thể chuyển khoa?", "Thông báo");

                    return false;

                }

                //kiểm tra đơn chưa lên phiếu lĩnh

                string dsdonchualenpl = CheckDonChuaLenPLinh(_int_maBN);
                if (!string.IsNullOrEmpty(dsdonchualenpl))
                {
                    MessageBox.Show("Bệnh nhân có các đơn thuốc chưa tạo phiếu lĩnh :\n " + dsdonchualenpl + "Bạn không thể chuyển khoa?", "Thông báo");
                    return false;
                }

                // kiểm tra đơn chưa lĩnh
                string dsdoncl = CheckDonChuaLinh(_int_maBN);
                if (!string.IsNullOrEmpty(dsdoncl))
                {

                    MessageBox.Show("Bệnh nhân có các đơn thuốc chưa lĩnh :\n " + dsdoncl + "Bạn không thể chuyển khoa", "Thông báo");

                    return false;

                }
            }
            #endregion
            //if (lupKhoaDT.EditValue == null)
            //{
            //    MessageBox.Show("Bạn chưa chọn khoa điều trị");
            //    lupKhoaDT.Focus();
            //    return false;
            //}
            //}

            return true;
        }
        private string CheckDonChuaLenPLinh(int mabn)
        {
            QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            string DSDon = "";
            var kt = (from dt in _data.DThuocs.Where(p => p.MaBNhan == mabn)
                      join dtct in _data.DThuoccts on dt.IDDon equals dtct.IDDon
                      join kp in _data.KPhongs.Where(p => p.PLoai != DungChung.Bien.st_PhanLoaiKP.TuTruc) on dt.MaKXuat equals kp.MaKP
                      where (dtct.Status == 0 && (dtct.SoPL == 0 || dtct.SoPL == null) && dtct.Status != -1)
                      select new { dt.IDDon, dt.NgayKe, kp.TenKP }).ToList();
            foreach (var item in kt)
                DSDon += item.IDDon + " đơn ngày: " + item.NgayKe + " kho kê: " + item.TenKP + "\n";
            return DSDon;
        }

        private string CheckDonChuaLinh(int mabn)
        {
            QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            string DSDon = "";
            var kt = (from dt in _data.DThuocs.Where(p => p.MaBNhan == mabn)
                      join dtct in _data.DThuoccts on dt.IDDon equals dtct.IDDon
                      join kp in _data.KPhongs.Where(p => p.PLoai != DungChung.Bien.st_PhanLoaiKP.TuTruc) on dt.MaKXuat equals kp.MaKP
                      where (dtct.Status == 0 && dtct.SoPL > 0 && dtct.Status != -1)
                      select new { dt.IDDon, dt.NgayKe, kp.TenKP }).ToList();
            foreach (var item in kt)
                DSDon += item.IDDon + " đơn ngày: " + item.NgayKe + " kho kê: " + item.TenKP + "\n";
            return DSDon;
        }

        #endregion
        #region KtraLuuKedon
        private bool KTraKD()
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            if (dtNgayKe.EditValue == null)
            {
                MessageBox.Show("Bạn chưa nhập ngày kê đơn!");
                dtNgayKe.Focus();
                return false;
            }
            if (string.IsNullOrEmpty(lupBPKe.Text))
            {
                MessageBox.Show("Bạn chưa chọn bộ phận kê đơn!");
                lupBPKe.Focus();
                return false;
            }
            else
            {
                DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                int makpke = Convert.ToInt32(lupBPKe.EditValue);
                var ngaykham = DaTaContext.BNKBs.Where(p => p.MaKP == makpke && p.MaBNhan == _int_maBN).OrderBy(p => p.IDKB).ToList();
                if (ngaykham.Count() > 0)
                {
                    DateTime _ngayk = Convert.ToDateTime(ngaykham.First().NgayKham);
                    if (dtNgayKe.DateTime < _ngayk)
                    {
                        MessageBox.Show("Ngày kê phải lớn hơn ngày khám");
                        dtNgayKe.Focus();
                        return false;
                    }
                }
            }

            if (string.IsNullOrEmpty(lupNguoiKe.Text))
            {
                MessageBox.Show("Bạn chưa chọn người kê đơn!");
                lupNguoiKe.Focus();
                return false;
            }
            if (string.IsNullOrEmpty(lupKhoXuat.Text))
            {
                MessageBox.Show("Bạn chưa chọn kho xuất thuốc!");
                lupKhoXuat.Focus();
                return false;
            }
            if (string.IsNullOrEmpty(cboKieuDon.Text))
            {
                MessageBox.Show("Bạn chưa chọn kiểu đơn!");
                cboKieuDon.Focus();
                return false;
            }
            else if (DungChung.Bien.MaBV == "30007")
            {
                if (cboKieuDon.SelectedIndex == 0 || cboKieuDon.SelectedIndex == 1 || cboKieuDon.SelectedIndex == 5)
                {
                    if (string.IsNullOrEmpty(memoDienBien.Text))
                    {
                        MessageBox.Show("Bạn chưa nhập diễn biến!");
                        memoDienBien.Focus();
                        return false;
                    }
                }
            }
            if (grvDonThuocct.GetRowCellValue(0, colMaDVdt) == null)
            {
                MessageBox.Show("Đơn chưa có thuốc!");
                lupKhoXuat.Focus();
                return false;
            }
            if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
            {
                if (lupBPKe.EditValue != null)
                {
                    if (_makp != Convert.ToInt32(lupBPKe.EditValue))
                    {
                        MessageBox.Show("Không thể kê đơn tại khoa khác");
                        return false;
                    }
                }
                var dataSource = (List<DThuocct>)binSDonThuocct.DataSource;
                if (dataSource.Count > 0)
                {
                    if (dataSource.Count > 0)
                    {
                        var checkEmpty = (from ct in dataSource
                                          join dv in _lAllDichVu on ct.MaDV equals dv.MaDV
                                          select new { ct.SoLuong, ct.SoLuongct, ct.SoLan, ct.Luong, dv.TenDV, dv.DongY }).ToList();
                        foreach (var item in checkEmpty)
                        {
                            if (string.IsNullOrWhiteSpace(item.Luong) && item.DongY != 1)
                            {
                                MessageBox.Show(string.Format("Thuốc/vật tư: {0} chưa nhập lượng", item.TenDV));
                                return false;
                            }
                            if (item.SoLuongct == 0)
                            {
                                MessageBox.Show(string.Format("Thuốc/vật tư: {0} chưa nhập số lượng", item.TenDV));
                                return false;
                            }
                            if (string.IsNullOrWhiteSpace(item.SoLan) && item.DongY != 1)
                            {
                                MessageBox.Show(string.Format("Thuốc/vật tư: {0} chưa nhập số lần", item.TenDV));
                                return false;
                            }
                        }
                    }
                }
            }
            //if (string.IsNullOrEmpty(cboNhomDuoc.Text))
            //{
            //    MessageBox.Show("Bạn chưa chọn nhóm dược!");
            //    cboNhomDuoc.Focus();
            //    return false;
            //}
            return true;
        }
        #endregion
        DateTime _dttu = DungChung.Ham.NgayTu(System.DateTime.Now);
        DateTime _dtden = DungChung.Ham.NgayDen(System.DateTime.Now);
        List<BenhNhan> _lTKbncho = new List<BenhNhan>();
        List<CanBo> _lCanBo = new List<CanBo>();
        List<KPhong> _listKhoaPhong = new List<KPhong>();
        private void EnableControlKB(bool T)
        {
            dtNgayKhamkb.Properties.ReadOnly = !T;
            lupKhoaKhamkb.Properties.ReadOnly = !T;
            lupChanDoanKb.Properties.ReadOnly = !T;
            lupNguoiKhamkb.Properties.ReadOnly = !T;
            lupMaICDkb.Properties.ReadOnly = !T;
            LupICD2.Properties.ReadOnly = !T;
            LupICD3.Properties.ReadOnly = !T;
            LupICD4.Properties.ReadOnly = !T;
            LupICD44.Properties.ReadOnly = !T;
            LupICD55.Properties.ReadOnly = !T;

            lupKhac.Properties.ReadOnly = !T;
            txtBenhKhac2.Properties.ReadOnly = !T;
            txtBenhKhac3.Properties.ReadOnly = !T;
            txtBenhKhac4.Properties.ReadOnly = !T;
            txtBenhKhac44.Properties.ReadOnly = !T;
            txtBenhKhac55.Properties.ReadOnly = !T;

            txtBenhChinh.Properties.ReadOnly = !T;
            txtBenhPhu2.Properties.ReadOnly = !T;
            txtBenhKhac1.Properties.ReadOnly = !T;
            txtBenhPhu3.Properties.ReadOnly = !T;
            txtBenhPhu4.Properties.ReadOnly = !T;
            txtBenhPhu5.Properties.ReadOnly = !T;

            txtBenhKhac.Properties.ReadOnly = !T;
            cboGiuong.Properties.ReadOnly = !T;
            cboBuong.Properties.ReadOnly = !T;
            dtTGChuyenBuongGiuong.Properties.ReadOnly = !T;
            ckcchuyenBG.Properties.ReadOnly = !T;
            cboChuyenKhoa.Properties.ReadOnly = !T;
            lupKhoaDT.Properties.ReadOnly = !T;
            lupKhoaDTKH.Properties.ReadOnly = !T;
            dt_NgayChuyen.Properties.ReadOnly = !T;
            txtSoNgaydt.Properties.ReadOnly = !T;
            radGiaiQuyet.Properties.ReadOnly = !T;
        }
        private void EnableControlKD(bool T)
        {
            cboSoThangNgay.Enabled = T;
            dtNgayKe.Enabled = T;
            mm_ghiChu.Enabled = T;
            lupBPKe.Enabled = T;
            lupNguoiKe.Enabled = T;
            lupKhoXuat.Enabled = T;
            cboKieuDon.Enabled = T;
            grcDonThuocdt.Enabled = !T;
            grvDonThuocct.OptionsBehavior.Editable = T;
        }
        private void EnableControlDV(bool T)
        {
            grvDichVu.OptionsBehavior.Editable = T;
        }
        private void EnableButton(bool T)
        {
            btnMoiKb.Enabled = T;
            btnXoaKb.Enabled = T;
            btnSuaKb.Enabled = T;
            btnLuuKb.Enabled = !T;
            btnPackageICDKhac.Enabled = !T;
            btnKluu.Enabled = !T;
            grcBNhankb.Enabled = true;
            grcDonThuocdt.Enabled = T;

        }
        private void resetControl()
        {
            cboSoThangNgay.Text = "1";
            dtNgayKhamkb.DateTime = System.DateTime.Now;
            lupKhoaKhamkb.EditValue = 0;
            lupChanDoanKb.EditValue = "";
            lupNguoiKhamkb.EditValue = "";
            radGiaiQuyet.SelectedIndex = 4;
            lupKhoaDT.EditValue = 0;
            lupKhoaDTKH.EditValue = 0;
            lupMaICDkb.EditValue = "";
            LupICD2.EditValue = "";
            LupICD3.EditValue = "";
            LupICD4.EditValue = "";
            LupICD44.EditValue = "";
            LupICD55.EditValue = "";
            lupKhac.EditValue = "";
            txtBenhKhac1.EditValue = "";
            txtBenhKhac2.EditValue = "";
            txtBenhKhac3.EditValue = "";
            txtBenhKhac4.EditValue = "";
            txtBenhKhac44.EditValue = "";
            txtBenhKhac55.EditValue = "";
            txtBenhChinh.EditValue = "";
            txtBenhPhu2.EditValue = "";
            txtBenhPhu3.EditValue = "";
            txtBenhPhu4.EditValue = "";
            txtBenhPhu5.EditValue = "";
            txtBenhKhac.EditValue = "";
            cboGiuong.Text = "";
            cboBuong.Text = "";
            dtTGChuyenBuongGiuong.DateTime = DateTime.Now;
            ckcchuyenBG.Checked = false;
            txtIdkb.Text = "";
            txtSoNgaydt.Text = "";
            dt_NgayChuyen.ResetText();
        }
        string trangthaiTT = string.Empty;
        private void LoadData()
        {
            var cbo_20001 = (from kp in DaTaContext.KPhongs.Where(p => (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017") ? true : (p.PLoai == ("Lâm sàng") || p.PLoai == "Phòng khám"))
                             join cb in DaTaContext.CanBoes.Where(p => p.Status == 1).Where(p => p.MaCCHN != "" && p.MaCCHN != null)
                             on kp.MaKP equals cb.MaKP
                             select cb).ToList();
            var mabnn = grvBNhankb.GetFocusedRowCellValue(colMaBNhan) == null ? 0 : Convert.ToInt32(grvBNhankb.GetFocusedRowCellValue(colMaBNhan));
            _mabnn = mabnn;
            if (DungChung.Bien.MaBV == "30372")
            {
                cbo_20001 = (from kp in DaTaContext.KPhongs.Where(p => (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017") ? true : (p.PLoai == ("Lâm sàng") || p.PLoai == "Phòng khám"))
                             join cb in DaTaContext.CanBoes.Where(p => p.Status == 1).Where(p => p.MaCCHN != "" && p.MaCCHN != null)
                             on kp.MaKP equals cb.MaKP
                             where cb.MaKP == 65 || cb.MaKPsd.Contains("65")
                             select cb).ToList();
            }
            //int _IDCL = 0;
            //var cll = DaTaContext.CLS.Where(x => x.MaBNhan == mabnn).FirstOrDefault();
            //if (cll.IdCLS > 0)
            //{
            //    _IDCL = cll.IdCLS;
            //}
            //var bnhan = DaTaContext.BenhNhans.Where(x => x.MaBNhan == mabnn).FirstOrDefault();
            //bool checkTamThu = bnhan.DTuong == "Dịch vụ" || bnhan.IDDTBN == 2 ? DungChung.Ham._checkTamThu(DaTaContext, mabnn, _IDCL) : true;
            if (trangthaiTT.ToUpper().Equals("Chưa thực hiện".ToUpper()) || trangthaiTT.ToUpper().Equals("Đã thực hiện".ToUpper()))
            {
                var lidcd = (from bn in DaTaContext.BenhNhans.Where(p => p.MaBNhan == mabnn)
                             join cl in DaTaContext.CLS on bn.MaBNhan equals cl.MaBNhan
                             join cd in DaTaContext.ChiDinhs on cl.IdCLS equals cd.IdCLS
                             join dv in DaTaContext.DichVus on cd.MaDV equals dv.MaDV
                             join tn in DaTaContext.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                             where tn.TenTN.ToLower().Equals(("Thủ thuật").ToLower())
                             select cd).Select(x => x.IDCD).ToList();
                var cls = (from cl in DaTaContext.CLS.Where(p => p.MaBNhan == mabnn)
                           join bn in DaTaContext.BenhNhans on cl.MaBNhan equals bn.MaBNhan
                           join cd in DaTaContext.ChiDinhs.Where(p => lidcd.Contains(p.IDCD)) on cl.IdCLS equals cd.IdCLS
                           join clsct in DaTaContext.CLScts on cd.IDCD equals clsct.IDCD
                           join dv in DaTaContext.DichVus.Where(o => ((DungChung.Bien.MaBV == "14018") ? o.IS_EXECUTE_CLS == true : true)) on cd.MaDV equals dv.MaDV
                           join tn in DaTaContext.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                           join nhom in DaTaContext.NhomDVs//.Where(p => p.TenNhomCT == ("Thủ thuật, phẫu thuật"))
                           on tn.IDNhom equals nhom.IDNhom
                           where (tn.TenRG == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.ThuThuat || tn.TenRG == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.PhauThuat || ((DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017") ? (tn.TenRG == "Điều trị vật lý" || tn.TenRG == "Điều trị vận động" || tn.TenRG == "Điều trị y học cổ truyền" || tn.TenRG == "Điều trị ngôn ngữ trị liệu") : false))
                           select new { cl, dv, cd, clsct, bn })
                             .ToList()
                             .Select(x => new ThuThuatDtADO
                             {
                                 Check = false,
                                 MaCBth = x.cd.MaCBth == null ? x.dv.IsAutoExecute == true ? x.cl.MaCB : x.cd.MaCBth : x.cd.MaCBth,
                                 TenDV = x.dv.TenDV,
                                 ThoiGianCD = x.cl.NgayThang == null ? null : x.cl.NgayThang.Value.ToString("dd/MM/yyyy HH:mm:ss"),
                                 ThoiGianBD = x.cd.NgayBDTH == null ? x.cl.NgayThang.Value.AddSeconds(1).ToString("dd/MM/yyyy HH:mm:ss") : x.cd.NgayBDTH.Value.ToString("dd/MM/yyyy HH:mm:ss"),
                                 SoPhutThucHien = x.cd.NgayTH == null ? x.dv.SoPhutThucHien == null || x.dv.SoPhutThucHien == 0 ? "10" : x.dv.SoPhutThucHien.Value.ToString() : x.cd.NgayBDTH == null ? Math.Round(x.cd.NgayTH.Value.Subtract(x.cl.NgayThang.Value).TotalMinutes, 0).ToString() : Math.Round(x.cd.NgayTH.Value.Subtract(x.cd.NgayBDTH.Value).TotalMinutes, 0).ToString(),
                                 ThoiGianKT = x.cd.NgayTH == null ? (x.dv.SoPhutThucHien == null || x.dv.SoPhutThucHien == 0 ? x.cl.NgayThang.Value.AddSeconds(1).AddMinutes(10).ToString("dd/MM/yyyy HH:mm:ss") : x.cl.NgayThang.Value.AddSeconds(1).AddMinutes(x.dv.SoPhutThucHien.Value).ToString("dd/MM/yyyy HH:mm:ss")) : x.cd.NgayTH.Value.ToString("dd/MM/yyyy HH:mm:ss"),
                                 KetQua = x.clsct.KetQua,
                                 TrangThai = x.cd.Status == 0 || x.cd.Status.ToString() == null || x.cd.Status.ToString() == "" ? "Chưa thực hiện" : "Đã thực hiện",
                                 ChucNang = x.cd.Status == 0 || x.cd.Status.ToString() == null || x.cd.Status.ToString() == "" ? "Thực hiện" : "Hủy thực hiện",
                                 idcd = x.cd.IDCD.ToString() == null || x.cd.IDCD.ToString() == "" ? null : x.cd.IDCD.ToString(),
                             }).Where(c => c.TrangThai == trangthaiTT).ToList();
                lupCBth.DataSource = cbo_20001;
                if (cls != null)
                {
                    grcThuThuatdt.DataSource = cls;
                    thuThuatDtADOs = cls;
                }
                else
                {
                    grcThuThuatdt.DataSource = null;
                    thuThuatDtADOs = null;
                }
                new DevExpress.XtraGrid.Selection.CheckMarksSelection(grvThuThuatdt);
            }
            else
            {
                var lidcd = (from bn in DaTaContext.BenhNhans.Where(p => p.MaBNhan == mabnn)
                             join cl in DaTaContext.CLS on bn.MaBNhan equals cl.MaBNhan
                             join cd in DaTaContext.ChiDinhs on cl.IdCLS equals cd.IdCLS
                             join dv in DaTaContext.DichVus on cd.MaDV equals dv.MaDV
                             join tn in DaTaContext.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                             where tn.TenTN.ToLower().Equals(("Thủ thuật").ToLower())
                             select cd).Select(x => x.IDCD).ToList();
                var cls = (from cl in DaTaContext.CLS.Where(p => p.MaBNhan == mabnn)
                           join bn in DaTaContext.BenhNhans on cl.MaBNhan equals bn.MaBNhan
                           join cd in DaTaContext.ChiDinhs.Where(p => lidcd.Contains(p.IDCD)) on cl.IdCLS equals cd.IdCLS
                           join clsct in DaTaContext.CLScts on cd.IDCD equals clsct.IDCD
                           join dv in DaTaContext.DichVus.Where(o => ((DungChung.Bien.MaBV == "14018") ? o.IS_EXECUTE_CLS == true : true)) on cd.MaDV equals dv.MaDV
                           join tn in DaTaContext.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                           join nhom in DaTaContext.NhomDVs//.Where(p => p.TenNhomCT == ("Thủ thuật, phẫu thuật"))
                           on tn.IDNhom equals nhom.IDNhom
                           where (tn.TenRG == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.ThuThuat || tn.TenRG == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.PhauThuat || ((DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017") ? (tn.TenRG == "Điều trị vật lý" || tn.TenRG == "Điều trị vận động" || tn.TenRG == "Điều trị y học cổ truyền" || tn.TenRG == "Điều trị ngôn ngữ trị liệu") : false))
                           select new { cl, dv, cd, clsct, bn })
                             .ToList()
                             .Select(x => new ThuThuatDtADO
                             {
                                 Check = false,
                                 MaCBth = x.cd.MaCBth == null ? x.dv.IsAutoExecute == true ? x.cl.MaCB : x.cd.MaCBth : x.cd.MaCBth,
                                 TenDV = x.dv.TenDV,
                                 ThoiGianCD = x.cl.NgayThang == null ? null : x.cl.NgayThang.Value.ToString("dd/MM/yyyy HH:mm:ss"),
                                 ThoiGianBD = x.cd.NgayBDTH == null ? x.cl.NgayThang.Value.AddSeconds(1).ToString("dd/MM/yyyy HH:mm:ss") : x.cd.NgayBDTH.Value.ToString("dd/MM/yyyy HH:mm:ss"),
                                 SoPhutThucHien = x.cd.NgayTH == null ? x.dv.SoPhutThucHien == null || x.dv.SoPhutThucHien == 0 ? "10" : x.dv.SoPhutThucHien.Value.ToString() : x.cd.NgayBDTH == null ? Math.Round(x.cd.NgayTH.Value.Subtract(x.cl.NgayThang.Value).TotalMinutes, 0).ToString() : Math.Round(x.cd.NgayTH.Value.Subtract(x.cd.NgayBDTH.Value).TotalMinutes, 0).ToString(),
                                 ThoiGianKT = x.cd.NgayTH == null ? (x.dv.SoPhutThucHien == null || x.dv.SoPhutThucHien == 0 ? x.cl.NgayThang.Value.AddSeconds(1).AddMinutes(10).ToString("dd/MM/yyyy HH:mm:ss") : x.cl.NgayThang.Value.AddSeconds(1).AddMinutes(x.dv.SoPhutThucHien.Value).ToString("dd/MM/yyyy HH:mm:ss")) : x.cd.NgayTH.Value.ToString("dd/MM/yyyy HH:mm:ss"),
                                 KetQua = x.clsct.KetQua,
                                 TrangThai = x.cd.Status == 0 || x.cd.Status.ToString() == null || x.cd.Status.ToString() == "" ? "Chưa thực hiện" : "Đã thực hiện",
                                 ChucNang = x.cd.Status == 0 || x.cd.Status.ToString() == null || x.cd.Status.ToString() == "" ? "Thực hiện" : "Hủy thực hiện",
                                 idcd = x.cd.IDCD.ToString() == null || x.cd.IDCD.ToString() == "" ? null : x.cd.IDCD.ToString(),
                             }).ToList();
                lupCBth.DataSource = cbo_20001;
                if (cls != null)
                {
                    grcThuThuatdt.DataSource = cls;
                    thuThuatDtADOs = cls;
                }
                else
                {
                    grcThuThuatdt.DataSource = null;
                    thuThuatDtADOs = null;
                }
                new DevExpress.XtraGrid.Selection.CheckMarksSelection(grvThuThuatdt);
            }
        }
        bool BothuocKoSD = false;
        class test
        {
            public string Dchi { get; set; }
        }
        private void btnMoiKb_Click(object sender, EventArgs e)
        {
            sothangSua = 1;
            sothangOld = 1;
            DTM.Enabled = true;
            chkDonMuaNgoai.Checked = false;
            BothuocKoSD = true;
            bool _themmoi = true;
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            _listGiaSua = new List<Ham.giaSoLoHSD>();
            _iddthuoc = 0;
            List<DV_GT> _lgt = new List<DV_GT>();
            _lgt = (from cls in DaTaContext.CLS.Where(p => p.MaBNhan == (int)_int_maBN)
                    join cd in DaTaContext.ChiDinhs.Where(p => p.Status == 0) on cls.IdCLS equals cd.IdCLS
                    join dv in DaTaContext.DichVus.Where(p => p.MaQD.ToLower().Contains("_GT")) on cd.MaDV equals dv.MaDV
                    select new DV_GT()
                    {
                        ThuocDVGayTe = dv.MaDV,
                        TenDV_GT = dv.TenDV
                    }).ToList();

            if (_lgt.Count() <= 0)
            {
                colGayTe.Visible = false;
            }
            if (DungChung.Ham.KT_RaVien(DaTaContext, _int_maBN) == false)
            {

                switch (TTTab)
                {

                    case 1:

                        if (DungChung.Ham.KTraTT(DaTaContext, _int_maBN) == false)
                        {
                            int makp = 0;
                            if (lupTimMaKP.EditValue != null)
                                makp = Convert.ToInt32(lupTimMaKP.EditValue);
                            var KtraNgoaiTinh = DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN).ToList();
                            bool ktrakb = true;
                            var kttkb = DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN).OrderByDescending(p => p.IDKB).FirstOrDefault();

                            if (kttkb != null && ((kttkb.MaKP == makp && kttkb.PhuongAn == 3) || (kttkb.MaKP != makp && (kttkb.PhuongAn != 3 && kttkb.MaKPdt != makp))))
                            {
                                ktrakb = false;
                                MessageBox.Show("Bệnh nhân đang được điều trị tại khoa|phòng khác,\nkhông thể thêm khám bệnh");
                            }


                            if (ktrakb)
                            {
                                grcDonThuocct.Enabled = true;
                                EnableButton(false);
                                EnableControlKB(true);
                                resetControl();
                                lupKhoaDT.EditValue = 0;
                                lupKhoaDTKH.EditValue = 0;
                                radGiaiQuyet.SelectedIndex = 4;
                                lupKhoaKhamkb.EditValue = DungChung.Bien.MaKP;
                                lupNguoiKhamkb.EditValue = DungChung.Bien.MaCB;

                                dtNgayKhamkb.Focus();
                                xtraDieuTri.Text = "Chẩn đoán*";
                                DungChung.Bien.CoTheChuyen = false;
                                TTLuu = 1;
                                if (DungChung.Bien.MaBV == "26007")
                                {


                                    if (KtraNgoaiTinh.Count > 0 && KtraNgoaiTinh.First().NoiTinh == 3)
                                    {
                                        MessageBox.Show("Bệnh nhân: " + txtTenBenhNhan.Text + " ngoại tỉnh đến");
                                    }
                                }
                            }
                        }
                        break;
                    case 2: // kê đơn
                        if (DungChung.Bien.MaBV == "30010")
                            KtraHanThe_30010(1);
                        if (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "27023" || DungChung.Bien.MaBV == "01830" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                        {
                            double TienBN = 0, TienTU = 0, TienBNTraT = 0;
                            TienBN = DungChung.Ham.SoTienCanThu(_int_maBN);
                            TienTU = DungChung.Ham.TongTienTU(DaTaContext, _int_maBN);
                            TienBNTraT = DungChung.Ham.TienBNTraThem(DaTaContext, _int_maBN);
                            if (TienBNTraT >= 500000)
                            {
                                MessageBox.Show("Bệnh nhân sắp hết tiền tạm thu " + "\n Tổng tiền tạm thu: " + TienTU.ToString("###,###") + "\n Tổng tiền bệnh nhân phải trả: " + TienBN.ToString("###,###") + "\n Tổng tiền BN phải trả thêm:" + TienBNTraT.ToString("###,###"), "Thông báo", MessageBoxButtons.OK);
                            }
                        }
                        if (DungChung.Bien.MaBV == "01071")
                        {
                            var tongcp = (from dt in DaTaContext.DThuocs.Where(p => p.MaBNhan == _int_maBN)
                                          join dtct in DaTaContext.DThuoccts.Where(p => p.TrongBH == 1) on dt.IDDon equals dtct.IDDon
                                          select new { dtct }).ToList();
                            double tongcptrbh = 0;
                            tongcptrbh = tongcp.Sum(p => p.dtct.ThanhTien);
                            if (tongcptrbh >= 10000000)
                            {
                                MessageBox.Show("Tổng chi phí điều trị trong danh mục của bệnh nhân đã vướt quá 10.000.000");
                            }
                        }
                        if (DungChung.Ham.KTraTT(DaTaContext, _int_maBN) == false)
                        {
                            grcDonThuocct.Enabled = true;
                            int _makp = 0;
                            txtSoVV2.Text = "";
                            if (lupTimMaKP.EditValue != null && lupTimMaKP.EditValue.ToString() != "")
                                _makp = Convert.ToInt32(lupTimMaKP.EditValue);
                            bool _moi = true;
                            var ktvv = DaTaContext.VaoViens.Where(p => p.MaBNhan == _int_maBN).ToList();
                            if (radNoiTru.SelectedIndex == 1 && ktvv.Count <= 0)
                            {
                                MessageBox.Show("Bệnh Nhân chưa có khám bệnh vào viện!");
                                _moi = false;
                            }
                            if (ChuyenKhoa == "Phẫu thuật")
                            {

                                var ktcls = (from cls in DaTaContext.CLS.Where(p => p.MaBNhan == _int_maBN && p.MaKPth == _makp)
                                             join cd in DaTaContext.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                             select cd.Status).ToList();
                                if (ktcls.Count > 0)
                                {
                                    if (ktcls.First() == 1)
                                    {
                                        MessageBox.Show("Bệnh nhân đã được kết thúc quá trình phẫu thuật, bạn không thể kê đơn");
                                    }
                                    else
                                    {
                                        _moi = true;
                                    }
                                }
                                else
                                {
                                    MessageBox.Show("Bệnh nhân không được chỉ định phẫu thuật đến: " + lupTimMaKP.Text);
                                    _moi = false;
                                }
                            }
                            else
                            {
                                if (DungChung.Bien.ChuyenKhoa == "Trực cấp cứu")
                                {
                                    int _nhomkp = 0;
                                    var _kp = _lKphongall.Where(p => p.MaKP == DungChung.Bien.MaKP).ToList();
                                    if (_kp.Count > 0)
                                        _nhomkp = _kp.First().NhomKP == null ? 0 : _kp.First().NhomKP.Value;
                                    var ktkb = DaTaContext.BNKBs.Where(p => p.MaKP == _nhomkp || p.MaKP == DungChung.Bien.MaKP).Where(p => p.MaBNhan == _int_maBN).ToList();
                                    if (ktkb.Count <= 0)
                                    {
                                        _moi = false;
                                        MessageBox.Show("   ` đoán " + lupTimMaKP.Text + " cho Bệnh Nhân!");

                                    }
                                }
                                else
                                {
                                    var ktkb = DaTaContext.BNKBs.Where(p => p.MaKP == _makp || ((DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017") ? p.MaKPDTKH == _makp : false)).Where(p => p.MaBNhan == _int_maBN).ToList();
                                    if (ktkb.Count <= 0)
                                    {
                                        _moi = false;
                                        MessageBox.Show("Bạn chưa nhập chẩn đoán " + lupTimMaKP.Text + " cho Bệnh Nhân!");

                                    }
                                }
                            }
                            if (_moi)
                            {
                                processRowClick = true;
                                EnableButton(false);
                                EnableControlKD(true);
                                cboSoThangNgay.Text = "1";
                                colMaDVdt.OptionsColumn.ReadOnly = false;
                                colGayTe.OptionsColumn.ReadOnly = false;
                                colSoLuong.OptionsColumn.ReadOnly = false;

                                xtraKeDon.Text = "Kê đơn*";
                                txtStatus.Text = "";
                                cboKieuDon.SelectedIndex = 0;
                                lupBPKe.EditValue = 0;
                                lupBPKe.EditValue = DungChung.Bien.MaKP;
                                memoDienBien.Text = "";
                                dtNgayKe.DateTime = System.DateTime.Now;
                                mm_ghiChu.ResetText();
                                txtIdDonThuoc.Text = "";
                                iddthuocmau = 0;
                                lupNguoiKe.EditValue = DungChung.Bien.MaCB;
                                lupKhoaDT.EditValue = 0;
                                lupKhoaDTKH.EditValue = 0;
                                lupKhoXuat.EditValue = 0;
                                processRowClick = false;
                                if (DungChung.Bien.MaTinh == "30")
                                    lupKhoXuat.EditValue = DungChung.Bien.MaKho;

                                var dthuoc = DaTaContext.DThuocs.FirstOrDefault(o => o.IDDon == idDon);
                                if (dthuoc != null)
                                {
                                    txtIdDonThuoc.Text = dthuoc.IDDon.ToString();
                                    iddthuocmau = dthuoc.IDDon_Mau ?? 0;
                                    if (dthuoc.NgayKe != null)
                                        dtNgayKe.DateTime = dthuoc.NgayKe.Value;
                                    if (dthuoc.MaKP != null)
                                        lupBPKe.EditValue = dthuoc.MaKP.Value;
                                    else lupBPKe.Text = "";
                                    if (dthuoc.MaCB != null)
                                        lupNguoiKe.EditValue = dthuoc.MaCB.ToString();
                                    else lupNguoiKe.Text = "";
                                    if (dthuoc.MaKXuat != null)
                                        lupKhoXuat.EditValue = dthuoc.MaKXuat.Value;
                                    else lupKhoXuat.EditValue = 0;

                                    if (dthuoc.SoVV != null)
                                        txtSoVV2.Text = dthuoc.SoVV.ToString();
                                    else
                                        txtSoVV2.Text = "";
                                    if (checkMuaDonTra) //mau lại đơn trả thuốc 14017
                                    {
                                        cboKieuDon.SelectedIndex = 1;
                                        cboSoThangNgay.Enabled = true;
                                        dtNgayKe.Enabled = true;
                                        mm_ghiChu.Enabled = true;
                                        lupBPKe.Enabled = true;
                                        lupNguoiKe.Enabled = true;
                                        lupKhoXuat.Enabled = true;
                                        cboKieuDon.Enabled = true;
                                    }
                                    else
                                    {
                                        cboKieuDon.SelectedIndex = 2;
                                        cboSoThangNgay.Enabled = false;
                                        dtNgayKe.Enabled = false;
                                        mm_ghiChu.Enabled = false;
                                        lupBPKe.Enabled = false;
                                        lupNguoiKe.Enabled = false;
                                        lupKhoXuat.Enabled = false;
                                        cboKieuDon.Enabled = false;
                                    }

                                }

                                var _data = DaTaContext.DThuoccts.Where(p => p.IDDon == idDon).ToList();
                                if (_data != null && _data.Count > 0)
                                {
                                    foreach (var item in _data)
                                    {
                                        var dataSource = (List<dsthuoc>)lupMaDuocdt.DataSource;
                                        if (dataSource == null || dataSource.Count == 0)
                                            item.MaDV = null;
                                        item.SoLuongct = item.SoLuongct * -1;
                                        item.SoLuong = item.SoLuong * -1;
                                        item.SoPL = 0;
                                        item.Status = 0;
                                        item.IDDonct = 0;
                                        item.ThanhTien = item.ThanhTien * -1;
                                        if (checkMuaDonTra)
                                        {
                                            item.TrongBH = 0;
                                            item.Luong = Convert.ToString(Convert.ToDouble(item.Luong) * -1);
                                        }
                                        sothangOld = item.Loai;
                                        cboSoThangNgay.Text = item.Loai.ToString();
                                    }
                                }
                                if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                                    binSDonThuocct.DataSource = _data.OrderBy(o => o.STT).ToList();
                                else
                                    binSDonThuocct.DataSource = _data;
                                grcDonThuocct.DataSource = binSDonThuocct;
                                TTLuu = 1;

                                ktraHanThe();
                            }
                        }
                        break;
                    case 3:
                        if (DungChung.Ham.KTraTT(DaTaContext, _int_maBN) == false)
                        {
                            var dtct = DaTaContext.DThuocs.Where(p => p.MaBNhan == _int_maBN).Where(p => p.PLDV == 2).ToList();
                            if (dtct.Count > 0)
                            {
                                MessageBox.Show("Bệnh nhân đã có dịch vụ, bạn không thể tạo mới");
                            }
                            else
                            {
                                grcDonThuocct.Enabled = true;

                                EnableButton(false);
                                EnableControlDV(true);
                                xtraChiDinh.Text = "Dịch vụ*";
                                grvDichVu.Focus();
                                TTLuu = 1;
                                lupMaDVdv.DataSource = _ldichvucd.Where(p => DungChung.Bien.MaBV == "27183" ? p.IDNhom != 8 : true).Where(p => p.MaKPsd.Contains(_maKPsd));
                            }
                        }
                        break;
                    case 4:
                        if (DungChung.Ham.KTraTT(DaTaContext, _int_maBN) == false)
                        {
                            var kt = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.Ploai == 0).ToList();

                            if (kt.Count > 0)
                            {
                                grcDonThuocct.Enabled = true;
                                TTLuu = 2;
                                EnableButton(false);

                                grvDienBien.OptionsBehavior.ReadOnly = false;

                                List<DienBienNgayGio> _listDB = new List<DienBienNgayGio>();

                                var q = (from db in DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.Ploai == 0 && ((DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017") ? p.MaKP == _makp : true)).OrderByDescending(p => p.ID) select db).ToList();
                                if (q.Count > 0)
                                {
                                    foreach (var item in q)
                                    {
                                        DienBien _defaultDB1 = new DienBien();
                                        _defaultDB1.ID = item.ID;
                                        _defaultDB1.HuongDTri = item.HuongDTri;
                                        _defaultDB1.IDDon = item.IDDon;
                                        _defaultDB1.MaBNhan = item.MaBNhan;
                                        _defaultDB1.KetQua = item.KetQua;
                                        _defaultDB1.MaCB = item.MaCB;
                                        _defaultDB1.ThucHienYL = item.ThucHienYL;
                                        _defaultDB1.YLenh = item.YLenh;
                                        _defaultDB1.DienBien1 = item.DienBien1;
                                        _defaultDB1.NgayNhap = item.NgayNhap;
                                        _defaultDB1.MaKP = item.MaKP;
                                        _defaultDB1.TenKP = item.TenKP;
                                        DienBienNgayGio dbNgayGio = new DienBienNgayGio(_defaultDB1);
                                        dbNgayGio.Loai = item.Loai;
                                        _listDB.Add(dbNgayGio);
                                    }
                                }
                                if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                                {
                                    binsDienBien.DataSource = _listDB;
                                }
                                xtraDBBenh.Text = "Diễn biễn bệnh*";
                            }
                            else
                            {
                                grcDonThuocct.Enabled = true;
                                EnableButton(false);
                                grvDienBien.OptionsBehavior.ReadOnly = false;
                                List<DienBienNgayGio> _listDB = new List<DienBienNgayGio>();
                                var dienbienMap = DaTaContext.DienBiens.Where(p => p.ID == 0).ToList();
                                _ldienbien = (from db in dienbienMap
                                              select new DienBienNgayGio(db)).ToList();
                                var q = (from db in DaTaContext.DienBiens.Where(p => p.ID == 0) select db).ToList();
                                if (q.Count > 0)
                                {
                                    foreach (var item in q)
                                    {
                                        DienBien _defaultDB1 = new DienBien();
                                        _defaultDB1.ID = item.ID;
                                        _defaultDB1.HuongDTri = item.HuongDTri;
                                        _defaultDB1.IDDon = item.IDDon;
                                        _defaultDB1.MaBNhan = item.MaBNhan;
                                        _defaultDB1.KetQua = item.KetQua;
                                        _defaultDB1.MaCB = item.MaCB;
                                        _defaultDB1.ThucHienYL = item.ThucHienYL;
                                        _defaultDB1.YLenh = item.YLenh;
                                        _defaultDB1.DienBien1 = item.DienBien1;
                                        _defaultDB1.NgayNhap = item.NgayNhap;
                                        _defaultDB1.MaKP = _makp;
                                        _defaultDB1.TenKP = item.TenKP;
                                        DienBienNgayGio dbNgayGio = new DienBienNgayGio(_defaultDB1);
                                        dbNgayGio.Loai = item.Loai;
                                        _listDB.Add(dbNgayGio);
                                    }
                                }
                                if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                                {
                                    binsDienBien.DataSource = _listDB;
                                }
                                else
                                    binsDienBien.DataSource = _ldienbien;
                                grcDienBien.DataSource = binsDienBien;
                                grvDienBien.Focus();
                                xtraDBBenh.Text = "Diễn biễn bệnh*";
                                TTLuu = 1;
                            }
                        }

                        break;
                    case 5:
                        grcDonThuocct.Enabled = true;
                        trangthai = 1;
                        editable = true;
                        setEditTable(editable);
                        grc_Dthuoc.ForceInitialize();
                        grv_Dthuoc.FocusedRowHandle = GridControl.NewItemRowHandle;
                        btnLuuKb.Enabled = true;
                        btnSuaKb.Enabled = false;
                        btnXoaKb.Enabled = false;
                        break;
                    case 6:
                        if (DungChung.Ham.KTraTT(DaTaContext, _int_maBN) == false)
                        {
                            var kt = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.Ploai == 1).ToList();
                            if (kt.Count > 0)
                            {
                                grcDonThuocct.Enabled = true;
                                TTLuu = 2;
                                EnableButton(false);
                                grvChamSoc.OptionsBehavior.Editable = true;
                                xtraCDChamSoc.Text = "CĐ Chăm sóc*";
                            }
                            else
                            {
                                grcDonThuocct.Enabled = true;
                                EnableButton(false);
                                grvChamSoc.OptionsBehavior.Editable = true;
                                _lchamsoc = DaTaContext.DienBiens.Where(p => p.ID == 0).ToList();
                                binsChamSoc.DataSource = _lchamsoc;
                                grcChamSoc.DataSource = binsChamSoc;
                                grvChamSoc.Focus();
                                xtraCDChamSoc.Text = "CĐ Chăm sóc*";
                                TTLuu = 1;
                            }
                        }
                        break;
                    case 7:
                        if (DungChung.Ham.KTraTT(DaTaContext, _int_maBN) == false)
                        {
                            var kt = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.Ploai == 2).ToList();
                            if (kt.Count > 0)
                            {
                                grcDonThuocct.Enabled = true;
                                TTLuu = 2;
                                EnableButton(false);
                                List<string> listColExcept = new List<string>();
                                listColExcept.Add(colPrint.Name);
                                SetEditColumnForGrid(grv15NgayDT, true, listColExcept);
                                xtra15NgayDT.Text = (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017") ? "Phiếu sơ kết 15 ngày*" : "Diễn biến 15 ngày ĐT*";
                            }
                            else
                            {
                                grcDonThuocct.Enabled = true;
                                EnableButton(false);
                                List<string> listColExcept = new List<string>();
                                listColExcept.Add(colPrint.Name);
                                SetEditColumnForGrid(grv15NgayDT, true, listColExcept);
                                _l15Ngaydt = DaTaContext.DienBiens.Where(p => p.ID == 0).ToList();
                                bins15Ngaydt.DataSource = _l15Ngaydt;
                                grc15NgayDT.DataSource = bins15Ngaydt;
                                grv15NgayDT.Focus();
                                xtra15NgayDT.Text = (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017") ? "Phiếu sơ kết 15 ngày*" : "Diễn biến 15 ngày ĐT*";
                                TTLuu = 1;
                            }
                        }
                        break;
                }
            }
        }

        private void SetEditColumnForGrid(GridView view, bool editable, List<string> columnNameExcept)
        {
            foreach (GridColumn col in view.Columns)
            {
                if (columnNameExcept.Exists(o => o == col.Name))
                    col.OptionsColumn.AllowEdit = true;
                else
                    col.OptionsColumn.AllowEdit = editable;
            }
        }

        List<ChuyenKhoa> _lChuyenKhoa = new List<ChuyenKhoa>();
        List<DungChung.Ham.TrongDMBHYT> _lTrongDMBH = new List<DungChung.Ham.TrongDMBHYT>();
        private class LinhThuoc
        {
            string ten;
            int _value;
            public string Ten_Status
            {
                set { ten = value; }
                get { return ten; }
            }
            public int Status
            {
                set { _value = value; }
                get { return _value; }
            }
        }

        private class DV_GT
        {
            string ten;
            string tenqd;
            int _value;
            public string TenDV_GT
            {
                set { ten = value; }
                get { return ten; }
            }
            public string MaQD
            {
                set { tenqd = value; }
                get { return tenqd; }
            }
            public int ThuocDVGayTe
            {
                set { _value = value; }
                get { return _value; }
            }
        }


        List<LinhThuoc> _lLinhThuoc = new List<LinhThuoc>();
        private void xtraNgoaiTru_SelectedPageChanged(object sender, DevExpress.XtraTab.TabPageChangedEventArgs e)
        {
            SetTTTab();
        }
        bool _timKiem = false;
        List<KPhong> _lkp = new List<KPhong>();
        List<c_ICD> lICD = new List<c_ICD>();
        List<ICD10> _licd10 = new List<ICD10>();
        List<KPhong> _lkho = new List<KPhong>();
        static string _maCQCQ = "";
        public class c_ICD
        {

            public string TenICD { set; get; }
            public string MaICD { set; get; }
        }
        void _setHDSDThuoc()
        {

            string HD = "6 giờ 10UI;6 giờ 7UI, 18 giờ 17UI;Chia 2 lần: 11 giờ, 18 giờ;Chia 2 lần: 6 giờ, 18 giờ;Chiều;Nhai trước ăn;Nhai trước ăn sáng;Sau ăn;Sau ăn 1 giờ" +
   ";Sau ăn no;Sau ăn sáng;Sau ăn sáng, trưa, Tối;Sau ăn tối;Sáng;Sáng 1/2 V, chiều 1/2 V;Sáng 1V, Chiều 1V;Sáng 1V, Chiều 1V, sau ăn;Sáng 1V, Chiều 1V, trước ăn;Sáng 1V, Chiều 2V" +
   ";Sáng 2V, Chiều 1V;Sáng 2V, Chiều 2V;Sáng 2V, Chiều 2V, sau ăn;Sáng 1V, Chiều 1V, trước ăn;Sáng 3V, Chiều 3V;Sáng 3V, Chiều 3V, sau ăn;Sáng 3V, Chiều 3V, sau ăn;Thủy châm;Trưa 1V, Chiều 2V, Sau ăn;Trưa 1V, Chiều 2V, Trước ăn;" +
   "Trưa 1V, Tối 1V, trước ăn;-	Trưa 1V, Tối 1V, sau ăn;Trưa 2V, Chiều 1V, trước ăn;Trước ăn sáng;Trước ăn sáng 1 giờ;Tối;Uống sau 1 giờ;Uống sau 2 giờ;Uống sau ăn;Uống trong bữa ăn;-	Uống trước bữa ăn;Uống trước bữa ăn 1 giờ;Nhai sau ăn;6h - 8h";
            if (DungChung.Bien.MaBV == "30303")
            {
                HD = "Sáng-chiều-Tối (sau ăn);Sáng-Chiều-Tối (trước ăn);Sáng-Chiều (trước ăn);Sáng-Chiều (sau ăn);Sáng-Tối (trước ăn);Sáng-Tối (sau ăn);Chiều-Tối (sau ăn);Chiều-Tối (trước ăn);Sáng (trước ăn);Sáng (sau ăn);Trưa (trước ăn);Trưa (Sau ăn);Chiều (trước ăn);Chiều (sau ăn);Tối (trước ăn);Tối (sau ăn)";
            }
            _sHDSDThuoc = HD.Split(';');
        }
        string[] _sHDSDThuoc = new string[1000];

        private void usDieuTri_Load(object sender, EventArgs e)
        {
            if (DungChung.Bien.MaBV == "30009")
            {
                pan30009.Visible = true;
            }
            else
            {
                panel3.Location = new Point(0, 94);
                panelControlChanDoan.Size = new Size(1058, 146);
                groupControl7.Size = new Size(1062, 291);
            }
            //if(DungChung.Bien.MaBV == "24272")
            //{
            //    xtraVLTL.PageVisible = true;
            //    xtraCDChamSoc.PageVisible = true;
            //    xtraDBBenh.PageVisible = true;
            //}
            if (DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24272")
            {
                detungaydb.Size = new Size(114, 20);
                dedenngaydb.Size = new Size(114, 20);
                xtraVLTL.PageVisible = true;
                txtBenhChinh.Visible = txtBenhPhu2.Visible = txtBenhPhu3.Visible = true;
                colNgayNhapdb.Width = 87;
                colNgayNhapdb.FieldName = "NgayNhap_24012";
            }
            _lCanBo = DaTaContext.CanBoes.OrderBy(p => p.TenCB).ToList();
            lupBSTH.DataSource = _lCanBo.ToList();
            lupMaCB_dienBien.DataSource = _lCanBo;
            lupCBChamSoc.DataSource = _lCanBo;
            {
                lupNguoiKhamkb.Properties.DataSource = _lCanBo.Where(p => p.MaKP == DungChung.Bien.MaKP).ToList();
                lupNguoiKe.Properties.DataSource = _lCanBo.Where(p => p.MaKP == DungChung.Bien.MaKP).ToList();
                cboBacSyDT.Properties.DataSource = _lCanBo;
            }
            grcDienBien.ForceInitialize();
            grcDonThuocct.ForceInitialize();
            if (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "24297")
            {
                txtBenhChinh.Visible = txtBenhPhu2.Visible = txtBenhPhu3.Visible = true;
            }
            if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
            {
                lblKDTKH.Visible = true;
                lupKhoaDTKH.Visible = true;
                xtra15NgayDT.Text = "Phiếu sơ kết 15 ngày";
                lblTyLeTT.Location = lbltongTien.Location;
                txtTyLeTT.Location = txtTongTien.Location;
                radNoiTru.Properties.Items[0].Enabled = false;
                colUp.Visible = true;
                colDown.Visible = true;
                txtBenhChinh.Visible = txtBenhPhu2.Visible = txtBenhPhu3.Visible = true;
                //Sắp xếp thứ tự các cột trên grid donthuocct

                STT.VisibleIndex = 0;
                colUp.VisibleIndex = 1;
                colDown.VisibleIndex = 2;
                colMaDVdt.VisibleIndex = 3;
                colDonVi.VisibleIndex = 4;
                colSoLuongctdt.VisibleIndex = 5;
                colDuongD.VisibleIndex = 6;
                collan.VisibleIndex = 7;
                colmoilan.VisibleIndex = 8;
                colLuong.VisibleIndex = 9;
                colGhiChu.VisibleIndex = 10;
                colGhiChu.OptionsColumn.TabStop = true;


                int i = 11;
                foreach (GridColumn column in grvDonThuocct.Columns)
                {
                    if (column != STT && column != colUp && column != colDown && column != colMaDVdt && column != colDonVi && column != colSoLuongctdt && column != colDuongD && column != collan && column != colmoilan && column != colLuong && column != colGhiChu)
                    {
                        if (column.Visible)
                        {
                            column.VisibleIndex = i;
                            i++;
                        }
                    }
                }

                //Sắp xếp thứ tự các cột trong grvBNhanKB
                colTenBNhan.VisibleIndex = 0;
                colTuoi.VisibleIndex = 1;
                colNNhap.VisibleIndex = 2;
                colDChi.VisibleIndex = 3;
                colDTuong.VisibleIndex = 4;

                int x = 5;
                foreach (GridColumn column in grvBNhankb.Columns)
                {
                    if (column != colTenBNhan && column != colTuoi && column != colNNhap && column != colDChi && column != colDTuong)
                    {
                        if (column.Visible)
                        {
                            column.VisibleIndex = x;
                            x++;
                        }
                    }
                }

                grvDienBien.BestFitColumns();
                colNgayNhapdb.Width = colNgayNhapdb.VisibleWidth;
                colDienBien.Width = colDienBien.VisibleWidth + 175;
                colYlenh.Width = colYlenh.VisibleWidth + 175;
                txtSoThe.Visible = true;
                txtTyLeTT.Visible = true;
                lblTyLeTT.Visible = true;
                lblSoThe.Visible = true;
                cboBacSyDT.Visible = true;
                lblBacSyDT.Visible = true;
                panelControlInfo.Visible = false;
                panelControlInfo14018.Visible = true;
            }
            else
            {
                colUp.Visible = false;
                colDown.Visible = false;
                cboBacSyDT.Visible = false;
                lblBacSyDT.Visible = false;
                radNoiTru.Location = new Point(lblBacSyDT.Location.X, lblBacSyDT.Location.Y - 3);
                //panelControl10.Height = panelControl10.Height - cboBacSyDT.Height;
                cboBacSyDT.EditValue = null;
                panelControlInfo.Visible = true;
                panelControlInfo14018.Visible = false;
                groupControl7.Height = groupControl7.Height - panelControlInfo14018.Height;
            }

            txtBenhKhac.Visible = true;

            dedenngaydb.DateTime = DungChung.Ham.NgayDen(DateTime.Now);
            detungaydb.DateTime = DungChung.Ham.NgayTu(DateTime.Now);
            dedenngaycs.DateTime = DungChung.Ham.NgayDen(DateTime.Now);
            detungaycs.DateTime = DungChung.Ham.NgayTu(DateTime.Now);
            if (DungChung.Bien.MaBV == "27023")
            {
                txtSoNgaydt.Visible = true;
                labelControl31.Visible = true;
            }
            int widthListBN = 377;
            if (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
            {
                colHuongDtri.Visible = true;
                colHuongDtri.VisibleIndex = 3;
                simpleButton2.Visible = true;
            }
            else
                colDuongD.Visible = false;
            if (DungChung.Bien.MaBV == "24297")
            {
                simpleButton2.Visible = true;
            }
            if (DungChung.Bien.MaBV == "27023" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                btnKiemTraCP.Visible = true;
            else
                btnKiemTraCP.Visible = false;
            if (DungChung.Bien.MaBV == "27021")
            {
                lbltongTien.Visible = true;
                txtTongTien.Visible = true;
            }
            else
            {
                lbltongTien.Visible = false;
                txtTongTien.Visible = false;
            }
            if (DungChung.Bien.MaBV == "30009")
                lupMaDuocdt.Columns[1].Visible = true;
            else if (DungChung.Bien.MaBV == "12001")
            {
                lupMaDuocdt.Columns[1].Visible = false;
                lupMaDuocdt.Columns[4].Visible = false;
                lupMaDuocdt.Columns[6].Visible = false;
                lupMaDuocdt.Columns[7].Visible = false;
                lupMaDuocdt.Columns[8].Visible = false;
                lupMaDuocdt.Columns[9].Visible = false;
                lupMaDuocdt.Columns[10].Visible = true;
            }
            else
                lupMaDuocdt.Columns[1].Visible = false;

            try
            {
                widthListBN = Convert.ToInt32(ConfigurationManager.AppSettings["withListBN"]);

            }
            catch
            {

            }

            if (DungChung.Bien.PPXuat == 3)
            {
                colSoLo.Visible = true;
                colHanDung.Visible = true;
            }
            if (DungChung.Bien.MaBV.Substring(0, 2) != "24")
                colXHH.Visible = false;
            _lAllDichVu = DaTaContext.DichVus.ToList();
            var qCQCQ = DaTaContext.BenhViens.Where(panelControl1 => panelControl1.MaBV == DungChung.Bien.MaBV).FirstOrDefault();
            if (qCQCQ != null)
                _maCQCQ = qCQCQ.MaChuQuan;
            List<NhomDV> _lNhom = new List<NhomDV>();
            _lNhom = DaTaContext.NhomDVs.ToList();
            _lNhom.Insert(0, new NhomDV { IDNhom = 0, TenNhom = "" });
            lupNhomDV.DataSource = _lNhom;
            this.panelControl9.Size = new System.Drawing.Size(widthListBN, 502);
            #region update soPL vaf MaKxuat trong bang dthuocct = soPl, MaKXuat trong bang dthuoc
            //if (DateTime.Now < new DateTime(2017, 1, 1)) // Convert.ToDateTime("01/01/2017"))
            //{
            //    var update = (from a in DaTaContext.DThuocs.Where(p => p.PLDV == 1 && p.NgayKe >= new DateTime(2016, 11, 1))// Convert.ToDateTime("01/11/2016")) 
            //                  join b in DaTaContext.DThuoccts.Where(p => p.MaKXuat == null || p.MaKXuat <= 0) on a.IDDon equals b.IDDon
            //                  select new { a.MaKXuat, a.SoPL, a.IDDon, b }).ToList();
            //    foreach (var item in update)
            //    {
            //        var c = DaTaContext.DThuoccts.Single(p => p.IDDonct == item.b.IDDonct);
            //        c.MaKXuat = item.MaKXuat;
            //        c.SoPL = item.SoPL;
            //        DaTaContext.SaveChanges();
            //    }
            //}
            #endregion
            _lkp = new List<KPhong>();
            //1. Khám bệnh
            if (DungChung.Bien.keNhieuKho)
                xtraKeDon.PageVisible = false;
            else
                xtraGopDonThuoc.PageVisible = false;
            if (DungChung.Bien.MaBV == "01830" || DungChung.Bien.MaBV == "30010")
                bar_BNMoi.Enabled = false;

            EnableButton(true);
            EnableControlKD(true);
            EnableControlKB(false);
            if (DungChung.Bien.PLoaiKP != "Admin")
                _maKPsd = ";" + DungChung.Bien.MaKP + ";";
            _setHDSDThuoc();
            if (_sHDSDThuoc != null)
                cboGhiChu.Items.AddRange(_sHDSDThuoc);
            if (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
            {
                foreach (var item in _ldichvucd)
                {
                    if (!string.IsNullOrEmpty(item.TenRG))
                    {
                        string ten = item.TenDV;
                        item.TenDV = item.TenRG;
                        item.TenRG = ten;
                    }
                }
            }
            dtTimTuNgay.DateTime = System.DateTime.Now;
            dtTimDenNgay.DateTime = System.DateTime.Now;
            _dttu = DungChung.Ham.NgayTu(dtTimTuNgay.DateTime);
            _dtden = DungChung.Ham.NgayDen(dtTimDenNgay.DateTime);
            radGiaiQuyet.Properties.Items.AddRange(DungChung.Bien._phuongAn);
            _licd10 = DaTaContext.ICD10.ToList();
            if (DungChung.Bien.MaBV == "14017")
            {
                labelControl7.Text = "Bệnh khác:";
                labelControl17.Text = "Mã ICD:";
                labelControl23.Visible = labelControl22.Visible = labelControl23.Visible = txtBenhKhac4.Visible = labelControl21.Visible = labelControl24.Visible = false;
                btnPackageICD2.Visible = btnPackageICD3.Visible = false;
                txtBenhKhac2.Visible = txtBenhPhu2.Visible = txtBenhPhu3.Visible = txtBenhKhac3.Visible = txtBenhKhac4.Visible = txtBenhKhac.Visible = false;
                LupICD2.Visible = LupICD3.Visible = LupICD4.Visible = false;
                simpleButton2.Visible = false;
                lICD = (from ICD in _licd10.Where(p => p.MaYHCT != null) select new c_ICD { MaICD = ICD.MaYHCT ?? "", TenICD = ICD.TenYHCT + "[" + ICD.TenICD + "]" ?? "" }).OrderBy(p => p.MaICD).ToList();
            }
            else
            {
                txtBenhKhac1.Visible = lupKhac.Visible = false;
                lICD = ((from ICD in _licd10 select new c_ICD { MaICD = ICD.MaICD, TenICD = ICD.TenICD, }).OrderBy(p => p.TenICD)).ToList();
            }

            lupChanDoanKb.Properties.DataSource = lICD;
            lupMaICDkb.Properties.DataSource = lICD;
            LupICD2.Properties.DataSource = lICD;
            LupICD3.Properties.DataSource = lICD;
            LupICD44.Properties.DataSource = lICD;
            LupICD55.Properties.DataSource = lICD;
            string[] arrICD = lICD.Where(p => p.TenICD != null).Select(p => p.TenICD).ToArray();
            string[] arrMaICD = lICD.Where(p => p.TenICD != null).Select(p => p.MaICD).ToArray();
            LupICD4.Properties.Items.AddRange(arrMaICD);
            txtBenhKhac2.Properties.DataSource = lICD;
            txtBenhKhac3.Properties.DataSource = lICD;
            txtBenhKhac44.Properties.DataSource = lICD;
            txtBenhKhac55.Properties.DataSource = lICD;
            txtBenhKhac4.Properties.Items.AddRange(arrICD);
            txtBenhKhac1.Properties.DataSource = lICD.Select(p => p.TenICD).ToList();
            lupKhac.Properties.DataSource = lICD.Select(p => p.MaICD).ToList();

            _lKphongall = (from kp in DaTaContext.KPhongs.Where(p => p.Status == 1)

                           select kp).OrderBy(p => p.TenKP).ToList();


            var kpkhamdt = _lKphongall.Where(p => p.PLoai == ("Lâm sàng") || (p.PLoai == ("Phòng khám"))).ToList();
            _lkho = _lKphongall.ToList();
            if (kpkhamdt.Count > 0)
            {
                lup_MaKPtk.DataSource = kpkhamdt.ToList();
                lupPhongKham.DataSource = kpkhamdt.ToList();
                lupMaKPdt.DataSource = kpkhamdt.ToList();
                List<KPhong> kpnew = new List<KPhong>();
                kpnew = _lKphongall.Where(p => p.PLoai == DungChung.Bien.st_PhanLoaiKP.HanhChinh).ToList();
                if (DungChung.Bien.PLoaiKP == "Admin" || DungChung.Bien.MaBV == "24009")
                {
                    kpnew.AddRange(kpkhamdt);
                    lupMaKPdv.DataSource = DungChung.Bien.MaBV == "01071" ? kpnew : kpkhamdt.ToList();
                    lupBPKe.Properties.DataSource = kpkhamdt.ToList();
                }
                else
                {
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "27183")
                    {
                        kpnew.AddRange(kpkhamdt);
                        lupMaKPdv.DataSource = DungChung.Bien.MaBV == "01071" ? kpnew : kpkhamdt.ToList();
                        lupBPKe.Properties.DataSource = kpkhamdt.ToList();
                    }
                    else
                    {
                        var _lkpdv = (from kp in kpkhamdt
                                      join kp1 in DungChung.Bien.listKPHoatDong on kp.MaKP equals kp1
                                      select kp).ToList();
                        kpnew.AddRange(_lkpdv);
                        lupMaKPdv.DataSource = DungChung.Bien.MaBV == "01071" ? kpnew : _lkpdv;
                        lupBPKe.Properties.DataSource = _lkpdv;
                    }
                }
                _lkp.AddRange(kpkhamdt);
                _lkp.Add(new KPhong { TenKP = "", MaKP = 0, ChuyenKhoa = "", PLoai = "Lâm sàng" });
                lupKhoaDT.Properties.DataSource = _lkp.Where(p => p.PLoai == "Lâm sàng").OrderBy(p => p.TenKP).ToList();
                lupKhoaDTKH.Properties.DataSource = _lkp.Where(p => p.PLoai == "Lâm sàng").OrderBy(p => p.TenKP).ToList();
                if (DungChung.Bien.PLoaiKP == DungChung.Bien.st_PhanLoaiKP.Admin)
                {
                    lupTimMaKP.Properties.DataSource = kpkhamdt;
                    lupKhoaKhamkb.Properties.DataSource = kpkhamdt;
                }
                else
                {

                    kpkhamdt = (from a in kpkhamdt
                                join b in DungChung.Bien.listKPHoatDong on a.MaKP equals b
                                select a).ToList();
                    lupTimMaKP.Properties.DataSource = kpkhamdt;
                    lupKhoaKhamkb.Properties.DataSource = kpkhamdt;
                }
            }
            if (DungChung.Bien.ChuyenKhoa == "Trực cấp cứu")
            {
                int _nhomKP = 0;
                var nhomKP = _lKphongall.Where(p => p.MaKP == DungChung.Bien.MaKP).Select(p => p.NhomKP).ToList();
                if (nhomKP.Count > 0)
                    _nhomKP = nhomKP.First() == null ? 0 : Convert.ToInt32(nhomKP.First());
                lupTimMaKP.Properties.DataSource = kpkhamdt.Where(p => DungChung.Bien.MaBV != "30007" || (DungChung.Bien.MaBV == "30007" && p.PLoai == DungChung.Bien.st_PhanLoaiKP.LamSang)).Where(p => p.MaKP == DungChung.Bien.MaKP || p.MaKP == _nhomKP).ToList();
                lupBPKe.Properties.DataSource = kpkhamdt.Where(p => p.MaKP == DungChung.Bien.MaKP || p.MaKP == _nhomKP).ToList();
                lupKhoaKhamkb.Properties.DataSource = kpkhamdt.Where(p => p.MaKP == DungChung.Bien.MaKP || p.MaKP == _nhomKP).ToList();
            }
            _listKhoaPhong = DaTaContext.KPhongs.OrderBy(p => p.MaKP).ToList();
            lupKhoaPhongGrvDienbien.DataSource = _listKhoaPhong;
            if (grvBNhankb.GetFocusedRowCellValue(colMaKP) != null && grvBNhankb.GetFocusedRowCellValue(colMaKP).ToString() != "")
            {
                txtTenBenhNhan.Text = grvBNhankb.GetFocusedRowCellValue(colTenBNhan).ToString();
                txtIdbn.Text = grvBNhankb.GetFocusedRowCellValue(colMaBNhan).ToString();
                txtMaBNhan.Text = grvBNhankb.GetFocusedRowCellValue(colMaBNhan).ToString();
                txtTenBenhNhan1.Text = grvBNhankb.GetFocusedRowCellValue(colTenBNhan).ToString();
                txtMaBNhan1.Text = grvBNhankb.GetFocusedRowCellValue(colMaBNhan).ToString();
            }

            cboChuyenKhoa.Properties.DataSource = DungChung.Bien._lChuyenKhoa.Where(p => p.LoaiCK == 1).ToList();
            _lTrongDMBH = DungChung.Ham._SetValue_TrongDMBH();
            _lLinhThuoc = new List<LinhThuoc>();
            lupTimMaKP.EditValue = DungChung.Bien.MaKP;
            _lLinhThuoc.Add(new LinhThuoc { Status = 0, Ten_Status = "Lĩnh" });
            _lLinhThuoc.Add(new LinhThuoc { Status = -1, Ten_Status = "K.Lĩnh" });
            _lLinhThuoc.Add(new LinhThuoc { Status = 1, Ten_Status = "Đã Lĩnh" });
            _lLinhThuoc.Add(new LinhThuoc { Status = 2, Ten_Status = "Hủy" });
            Lup_TrongDMBH.DataSource = _lTrongDMBH;
            lup_TrongDMBH_DV.DataSource = _lTrongDMBH;
            LupLinh.DataSource = _lLinhThuoc;
            _lDichvu = DaTaContext.DichVus.ToList();
            if (DungChung.Bien.MaBV == "30007")
            {
                detungaydb.Properties.DisplayFormat.FormatString = "dd/MM/yyy HH:mm";
                detungaydb.Properties.DisplayFormat.FormatType = DevExpress.Utils.FormatType.DateTime;
                detungaydb.Properties.EditFormat.FormatString = "dd/MM/yyy HH:mm";
                detungaydb.Properties.EditFormat.FormatType = DevExpress.Utils.FormatType.DateTime;
                detungaydb.Properties.Mask.EditMask = "dd/MM/yyy HH:mm";
                dedenngaydb.Properties.DisplayFormat.FormatString = "dd/MM/yyy HH:mm";
                dedenngaydb.Properties.DisplayFormat.FormatType = DevExpress.Utils.FormatType.DateTime;
                dedenngaydb.Properties.EditFormat.FormatString = "dd/MM/yyy HH:mm";
                dedenngaydb.Properties.EditFormat.FormatType = DevExpress.Utils.FormatType.DateTime;
                dedenngaydb.Properties.Mask.EditMask = "dd/MM/yyy HH:mm";
            }
            SetTTTab();
            _timKiem = true;
            //Tránh gọi hàm tìm kiếm nhiều lần
            if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                cboBacSyDT.EditValue = DungChung.Bien.MaCB;
            else
            {
                TimKiem();
            }
            if (DungChung.Bien.MaBV == "20001")
            {
                xtraCDChamSoc.PageVisible = true;
                colHuongDtri.Visible = true;
                colHuongDtri.VisibleIndex = 3;
                xtra15NgayDT.PageVisible = true;
                this.cboInToDieuTri.Properties.Items.Clear();
                this.cboInToDieuTri.Properties.Items.AddRange(new object[] {
                "Tờ điều trị (MS: 39/BV-01)",
                "Phiếu điều trị(mẫu YHCT)",
                "Phiếu điều trị(mẫu YHCT QĐ 1941)",
                "Phiếu điều trị(mẫu YHCT QĐ 1941)(In Gộp)",
                "Tờ điều trị (Bổ sung)",
                "Tờ điều trị (Ra viện)"});
            }
            else if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
            {
                xtraCDChamSoc.PageVisible = true;
                grcDienBien.ForceInitialize();
                colHuongDtri.Visible = true;
                colHuongDtri.VisibleIndex = 3;

                xtra15NgayDT.PageVisible = true;
                this.cboInToDieuTri.Properties.Items.Clear();
                this.cboInToDieuTri.Properties.Items.AddRange(new object[] {
                "Tờ điều trị (MS: 39/BV-01)",
                "Phiếu điều trị YHCT"});
            }
            else
            {
                if (ChuyenKhoa == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.CKDongY)
                {
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                        xtraCDChamSoc.PageVisible = true;
                    else
                        xtraCDChamSoc.PageVisible = false;
                    colHuongDtri.Visible = true;
                    colHuongDtri.VisibleIndex = 3;
                }
                else
                {
                    xtraCDChamSoc.PageVisible = true;
                    colHuongDtri.Visible = false;
                }
                if (DungChung.Bien.MaBV == "24009")
                    xtra15NgayDT.PageVisible = true;
                else
                    xtra15NgayDT.PageVisible = false;
            }
            if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
            {
                colNgayNhapdb.DisplayFormat.FormatType = FormatType.Custom;
                colNgayNhapdb.DisplayFormat.FormatString = "HH:mm";
                colNgay.GroupIndex = 0;
                barButtonItem4.Visibility = BarItemVisibility.Always;

                grvDienBien.OptionsView.NewItemRowPosition = NewItemRowPosition.Top;

                DienBienNgayGio _defaultDB = new DienBienNgayGio();
                _defaultDB.HuongDTri = "Dinh dưỡng:\r\nLoại chăm sóc:\r\nQuản lý:";
                List<DienBienNgayGio> _listDB = new List<DienBienNgayGio>();
                _listDB.Add(_defaultDB);
                binsDienBien.DataSource = _listDB;
            }
            else
            {
                colNgay.GroupIndex = -1;
                barButtonItem4.Visibility = BarItemVisibility.Never;
                colTenMaKPgrvDienBien.Visible = false;
                grvDienBien.OptionsView.NewItemRowPosition = NewItemRowPosition.Bottom;
            }

            if (DungChung.Bien.MaBV == "24297")
            {
                colNgayNhapdb.DisplayFormat.FormatType = FormatType.Custom;
                colNgayNhapdb.DisplayFormat.FormatString = "dd/MM/yyyy HH:mm";
                repositoryItemDateEdit2.DisplayFormat.FormatType = FormatType.DateTime;
                repositoryItemDateEdit2.DisplayFormat.FormatString = "dd/MM/yyyy HH:mm";
                repositoryItemDateEdit2.EditFormat.FormatType = FormatType.DateTime;
                repositoryItemDateEdit2.EditFormat.FormatString = "dd/MM/yyyy HH:mm";
                repositoryItemDateEdit2.Mask.EditMask = "dd/MM/yyyy HH:mm";
            }

            trangthaiTT = "Chưa thực hiện";
            chkCheckAll.Visible = colSelect.Visible = chkDthuocGui.Checked;
        }
        List<KPhong> _lKphongall = new List<KPhong>();
        int _iddthuoc = 0;
        List<DichVu> _lDichvu = new List<DichVu>();
        bool processRowClick = false;
        List<Ham.giaSoLoHSD> _listGiaSua = new List<Ham.giaSoLoHSD>();// DS thuốc xóa
        private void grvBNhankb_FocusedRowChanged(object sender, DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs e)
        {
            sothangSua = 1;
            sothangOld = 1;
            ckcchuyenBG.Checked = false;
            _iddthuoc = 0;
            if (process)
                return;
            grcDichVu.DataSource = null;

            if (xtraDieuTri.Text.Contains("*") || xtraChiDinh.Text.Contains("*") || xtraKeDon.Text.Contains("*") || xtraCDChamSoc.Text.Contains("*") || xtraDBBenh.Text.Contains("*") || xtra15NgayDT.Text.Contains("*"))
            {
                DialogResult _result = MessageBox.Show("Bạn chưa lưu dữ liệu, Bạn có muốn lưu không?", "thông báo!", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                if (_result == DialogResult.Yes)
                {
                    btnLuuKb_Click(sender, e);
                }
                TTLuu = 0;
                SetTTTab();
            }
            else if ((change > 0 || changect > 0) && xtraNgoaiTru.SelectedTabPage == xtraGopDonThuoc)
            {
                DialogResult dialogResult = MessageBox.Show("Bạn chưa lưu dữ liệu, bạn có muốn lưu lại không ?", "Xác nhận lưu", MessageBoxButtons.YesNo);
                if (dialogResult == DialogResult.Yes)
                {
                    btnLuu_Click(null, null);
                    _maBN = 0;
                }

            }
            if (grvBNhankb.GetFocusedRowCellValue(colMaBNhan) != null)
            {
                processRowClick = true;
                txtMaBNhan.Text = grvBNhankb.GetFocusedRowCellValue(colMaBNhan).ToString();
                txtMaBNhan1.Text = grvBNhankb.GetFocusedRowCellValue(colMaBNhan).ToString();
                int _int_maBN = grvBNhankb.GetFocusedRowCellValue(colMaBNhan) == null ? 0 : Convert.ToInt32(grvBNhankb.GetFocusedRowCellValue(colMaBNhan));
                int _int_makp = Convert.ToInt32(lupTimMaKP.EditValue);
                var bnkb = DaTaContext.BNKBs.FirstOrDefault(p => p.MaBNhan == _int_maBN && p.MaKP == _int_makp);
                if (bnkb != null)
                {
                    txtIdkb.Text = bnkb.IDKB.ToString();
                }
                if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                {
                    string _TenDVCHuaTH = DungChung.Ham._KiemTraThoiGianCDCLS(DaTaContext, _int_maBN);
                    if (_TenDVCHuaTH != "")
                    {
                        MessageBox.Show("Bệnh nhân có các dịch vụ sau chưa thực hiện sau 4 tiếng chỉ định" + "\n" + _TenDVCHuaTH.ToString(), "Thông báo", MessageBoxButtons.OK);
                    }
                }

                var mucTT = DaTaContext.MucTTs.ToList();
                var benhNhan = DaTaContext.BenhNhans.Where(o => o.MaBNhan == _int_maBN).ToList();
                var benhVien = DaTaContext.BenhViens.FirstOrDefault(o => o.MaBV == DungChung.Bien.MaBV);

                var ttbnhan = (from bn in benhNhan
                               join mtt in mucTT on bn.MucHuong.ToString() equals mtt.MaMuc into k
                               from mh in k.DefaultIfEmpty()
                               select new { bn.Tuyen, bn.SThe, PTTT = mh != null ? mh.PTTT : null, bn.MucHuong, KhuVuc = (bn.KhuVuc ?? "") }).FirstOrDefault();
                if (ttbnhan != null)
                {
                    txtSoThe.Text = ttbnhan.SThe;
                    txtTyLeTT.Text = DungChung.Ham.TinhMucHuong(ttbnhan.Tuyen ?? 0, (ttbnhan.MucHuong ?? 0).ToString(), ttbnhan.KhuVuc, null, benhVien.HangBV ?? 0, benhNhan.First().NoiTru ?? 0, benhNhan.First().SThe, benhNhan.First().MaCS) + "%";
                    txtSoThe1.Text = ttbnhan.SThe;
                    txtTyLeTT1.Text = DungChung.Ham.TinhMucHuong(ttbnhan.Tuyen ?? 0, (ttbnhan.MucHuong ?? 0).ToString(), ttbnhan.KhuVuc, null, benhVien.HangBV ?? 0, benhNhan.First().NoiTru ?? 0, benhNhan.First().SThe, benhNhan.First().MaCS) + "%";
                }
                if (benhNhan.Count > 0)
                {
                    txtTuoi1.Text = DungChung.Ham.CalculateAge(benhNhan.FirstOrDefault().NgaySinh, benhNhan.FirstOrDefault().ThangSinh, benhNhan.FirstOrDefault().NamSinh, "tháng");
                    txtDiaChi1.Text = benhNhan.FirstOrDefault().DChi;
                }
                txtTenBenhNhan.Text = grvBNhankb.GetFocusedRowCellValue(colTenBNhan).ToString();
                txtTenBenhNhan1.Text = grvBNhankb.GetFocusedRowCellValue(colTenBNhan).ToString();
                if (grvBNhankb.GetFocusedRowCellValue(colTuoi) != null)
                    txtTuoi.Text = grvBNhankb.GetFocusedRowCellValue(colTuoi).ToString();
                else
                    txtTuoi.Text = "";
                if (grvBNhankb.GetFocusedRowCellValue(colNNhap) != null)
                {
                    detungaydb.DateTime = Convert.ToDateTime(grvBNhankb.GetFocusedRowCellValue(colNNhap));
                    detungaycs.DateTime = Convert.ToDateTime(grvBNhankb.GetFocusedRowCellValue(colNNhap));
                }
                txtIdbn.Text = grvBNhankb.GetFocusedRowCellValue(colMaBNhan).ToString();
                if (_int_maBN > 0)
                {

                    // 1. khám bệnh
                    int _makpkb = 0;
                    if (xtraNgoaiTru.SelectedTabPageIndex == 0)
                    {
                        DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                        var query = DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN).OrderByDescending(p => p.IDKB).ToList();

                        grcChuyenKhoa.DataSource = query.ToList();
                        if (DungChung.Bien.MaBV == "26007")
                        {
                            int makp = 0;
                            if (lupKhoaKhamkb.EditValue != null)
                                makp = Convert.ToInt32(lupKhoaKhamkb.EditValue);
                            var Ktrakb = query.Where(p => p.MaKP == makp).ToList();
                            if (Ktrakb.Count == 0)
                            {
                                var KtraNgoaiTinh = DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN).ToList();
                                if (KtraNgoaiTinh.Count > 0 && KtraNgoaiTinh.First().NoiTinh == 3)
                                {
                                    MessageBox.Show("Bệnh nhân: " + txtTenBenhNhan.Text + " ngoại tỉnh đến");
                                }
                            }
                        }
                        if (DungChung.Bien.MaBV == "27023")
                        {
                            KtraHanThe_30010(2);
                        }
                    }
                    if (xtraNgoaiTru.SelectedTabPageIndex == 1)
                    {


                    }
                    if (xtraNgoaiTru.SelectedTabPageIndex == 2)
                    {
                        int idcd = 0;
                        if (_int_maBN > 0)
                        {
                            var q = DaTaContext.DThuocs.Where(p => p.MaBNhan == _int_maBN).Where(p => p.PLDV == 2).ToList();
                            if (q.Count > 0)
                            {
                                txtChiDinh.Text = q.First().IDDon.ToString();
                                idcd = q.First().IDDon;
                            }
                            else
                            {
                                txtChiDinh.Text = "";
                            }
                            var _data0 = (from dt in DaTaContext.DThuoccts.Where(p => p.IDDon == idcd)
                                          select new DonThuocct
                                          {
                                              IDDon = dt.IDDon,
                                              IDDonct = dt.IDDonct,
                                              MaDV = dt.MaDV,
                                              DonVi = dt.DonVi,
                                              DonGia = dt.DonGia,
                                              SoLuong = dt.SoLuong,
                                              ThanhTien = dt.ThanhTien,
                                              TienBN = dt.TienBN,
                                              TienBH = dt.TienBH,
                                              TrongBH = dt.TrongBH,
                                              NgayNhap = dt.NgayNhap,
                                              DuongD = dt.DuongD,
                                              SoPL = dt.SoPL,
                                              Status = dt.Status,
                                              IDCD = dt.IDCD,
                                              MaCB = dt.MaCB,
                                              MaKP = dt.MaKP,
                                              IDKB = dt.IDKB,
                                              Loai = dt.Loai,
                                              ThanhToan = dt.ThanhToan,
                                              MaKPtk = dt.MaKPtk,
                                              MaKXuat = dt.MaKXuat,
                                              TyLeTT = dt.TyLeTT,
                                              XHH = dt.XHH == 1 ? true : false
                                          }).ToList();
                            var _data = (from dt in _data0
                                         join dv in _lAllDichVu on dt.MaDV equals dv.MaDV
                                         select new DonThuocct
                                         {
                                             IDDon = dt.IDDon,
                                             IDDonct = dt.IDDonct,
                                             MaDV = dt.MaDV,
                                             DonVi = dt.DonVi,
                                             DonGia = dt.DonGia,
                                             SoLuong = dt.SoLuong,
                                             ThanhTien = dt.ThanhTien,
                                             TienBN = dt.TienBN,
                                             TienBH = dt.TienBH,
                                             TrongBH = dt.TrongBH,
                                             NgayNhap = dt.NgayNhap,
                                             DuongD = dt.DuongD,
                                             SoPL = dt.SoPL,
                                             Status = dt.Status,
                                             IDCD = dt.IDCD ?? 0,
                                             MaCB = dt.MaCB,
                                             MaKP = dt.MaKP,
                                             IDKB = dt.IDKB,
                                             Loai = dt.Loai,
                                             ThanhToan = dt.ThanhToan,
                                             MaKPtk = dt.MaKPtk,
                                             MaKXuat = dt.MaKXuat,
                                             TyLeTT = dt.TyLeTT,
                                             XHH = dt.XHH,
                                             IDNhom = dv.IDNhom ?? 0,
                                             MaQD = dv.MaQD,
                                             MakpSD = dv.MaKPsd,
                                         }).ToList();
                            if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                            {
                                binSDichVuct.DataSource = _data.Where(p => p.MakpSD.Split(';').Contains(_makp.ToString())).ToList();
                            }
                            else
                            {
                                binSDichVuct.DataSource = _data.ToList();
                            }

                            grcDichVu.DataSource = binSDichVuct;
                        }
                    }
                    //kt lai

                    //dien bien benh
                    if (xtraNgoaiTru.SelectedTabPageIndex == 3)
                    {
                        var dienbienMap = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.Ploai == 0).OrderByDescending(p => p.ID).ToList();

                        _ldienbien = (from db in dienbienMap
                                      select new DienBienNgayGio(db)).ToList();

                        DienBienNgayGio _defaultDB = new DienBienNgayGio();
                        _defaultDB.HuongDTri = "Dinh dưỡng:\r\nLoại chăm sóc:\r\nQuản lý:";
                        List<DienBienNgayGio> _listDB = new List<DienBienNgayGio>();
                        _listDB.Add(_defaultDB);

                        var q = (from db in DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.Ploai == 0).OrderByDescending(p => p.ID) select db).ToList();
                        if (q.Count > 0)
                        {
                            foreach (var item in q)
                            {
                                DienBienNgayGio _defaultDB1 = new DienBienNgayGio();
                                _defaultDB1.ID = item.ID;
                                _defaultDB1.HuongDTri = item.HuongDTri;
                                _defaultDB1.IDDon = item.IDDon;
                                _defaultDB1.MaBNhan = item.MaBNhan;
                                _defaultDB1.KetQua = item.KetQua;
                                _defaultDB1.MaCB = item.MaCB;
                                _defaultDB1.ThucHienYL = item.ThucHienYL;
                                _defaultDB1.YLenh = item.YLenh;
                                _defaultDB1.DienBien1 = item.DienBien1;
                                _defaultDB1.NgayNhap = item.NgayNhap;
                                _defaultDB1.MaKP = item.MaKP;
                                _defaultDB1.TenKP = item.TenKP;
                                DienBienNgayGio dbNgayGio = new DienBienNgayGio(_defaultDB1);
                                _listDB.Add(dbNgayGio);
                            }
                        }
                        if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                        {
                            binsDienBien.DataSource = _listDB;
                        }
                        else
                        { binsDienBien.DataSource = _ldienbien; }
                        grcDienBien.DataSource = binsDienBien;
                    }
                    if (xtraNgoaiTru.SelectedTabPageIndex == 6)
                    {
                        DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                        var query = DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN).OrderByDescending(p => p.IDKB).ToList();
                        if (query.Count > 0)
                        {
                            string makpth = ";" + query.First().MaKP.ToString() + ";";
                            lupCBChamSoc.DataSource = _lCanBo.Where(p => p.MaKPsd.Contains(makpth)).ToList();
                        }
                        _lchamsoc = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.Ploai == 1).OrderByDescending(p => p.ID).ToList();
                        binsChamSoc.DataSource = _lchamsoc;
                        grcChamSoc.DataSource = binsChamSoc;
                    }
                    //tab5

                    if (xtraNgoaiTru.SelectedTabPageIndex == 4)
                    {
                        loadDonThuoc();
                        loadDthuocct();
                    }
                    _maBN = _int_maBN;
                    change = 0;
                    changect = 0;

                    btnMoiKb.Enabled = true;
                    trangthai = 0;
                    LoadData();

                }

                else
                {
                    //tab5
                    _maBN = 0;
                    change = 0;
                    changect = 0;
                    loadDonThuoc();
                    loadDthuocct();
                    trangthai = 0;
                    btnMoiKb.Enabled = true;
                }

                SetTTTab();
                processRowClick = false;
                grcDonThuocct.Enabled = false;
                var thuocct = DaTaContext.DThuocs.Where(x => x.MaBNhan == _maBN).ToList();
                if (thuocct != null)
                {
                    grcDonThuocct.DataSource = null;
                }
            }
            else
            {
                grcDonThuocdt.DataSource = null;
                grcChuyenKhoa.DataSource = null;
                binsDienBien.DataSource = null;
                grcDienBien.DataSource = binsDienBien;
                binsChamSoc.DataSource = null;
                grcChamSoc.DataSource = binsChamSoc;
                txtTuoi1.Text = "";
                txtDiaChi1.Text = "";
                txtMaBNhan.Text = "";
                txtMaBNhan1.Text = "";
                txtTenBenhNhan.Text = "";
                txtTenBenhNhan1.Text = "";
                txtSoThe.Text = "";
                txtSoThe1.Text = "";
                txtTyLeTT.Text = "";
                txtTyLeTT1.Text = "";
                txtIdbn.Text = "";
                txtIdkb.Text = "";
                txtChiDinh.Text = "";
                txtTongTien.Text = "";
                //tab 5
                _maBN = 0;
                change = 0;
                changect = 0;
                loadDonThuoc();
                trangthai = 0;
                btnMoiKb.Enabled = true;
            }
            xtraDieuTri.Text = "Chẩn đoán";
            xtraKeDon.Text = "Kê đơn";
        }
        private void EnableTrongBHYT(bool t)
        {
            grvDonThuocct.OptionsBehavior.ReadOnly = !t;
            grvDonThuocct.OptionsBehavior.Editable = t;
            colMaDVdt.OptionsColumn.ReadOnly = t;
            colGayTe.OptionsColumn.ReadOnly = t;
            colSoLuong.OptionsColumn.ReadOnly = t;
            colSoLuongctdt.OptionsColumn.ReadOnly = t;
            colStatusct.OptionsColumn.ReadOnly = t;
            colTyLeBHTT_dt.OptionsColumn.ReadOnly = !t;
            coltrongBH.OptionsColumn.ReadOnly = !t;
        }
        string Buongcu = "", Giuongcu = "";
        DateTime? ngayChuyenBG;
        private void btnSuaKb_Click(object sender, EventArgs e)
        {
            macbTH.OptionsColumn.AllowEdit = true;
            macbTH.OptionsColumn.ReadOnly = false;
            VLTLcolDienBienVLTL.OptionsColumn.AllowEdit = true;
            VLTLcolDienBienVLTL.OptionsColumn.ReadOnly = false;
            if (DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24272")
            {
                colNgayNhapdb.FieldName = "NgayNhap";
                colNgayNhapdb.OptionsColumn.AllowEdit = true;
            }
            grvDonThuocdt_FocusedRowChanged(null, null);
            BothuocKoSD = true;
            lupKhoXuat_EditValueChanged(null, null);
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            List<DV_GT> _lgt = new List<DV_GT>();
            _lgt = (from cls in DaTaContext.CLS.Where(p => p.MaBNhan == (int)_int_maBN)
                    join cd in DaTaContext.ChiDinhs.Where(p => p.Status == 0) on cls.IdCLS equals cd.IdCLS
                    join dv in DaTaContext.DichVus.Where(p => p.MaQD.ToLower().Contains("_GT")) on cd.MaDV equals dv.MaDV
                    select new DV_GT()
                    {
                        ThuocDVGayTe = dv.MaDV,
                        TenDV_GT = dv.TenDV
                    }).ToList();

            if (_lgt.Count() <= 0)
            {
                colGayTe.Visible = false;
            }
            else
            {
                _lgt.Add(new DV_GT { MaQD = "Không chọn", TenDV_GT = "", ThuocDVGayTe = 0 });
                colGayTe.Visible = true;
                lupDVGayTe.DataSource = _lgt;
            }
            if (DungChung.Ham.KT_RaVien(DaTaContext, _int_maBN) == false)
            {
                switch (TTTab)
                {
                    case 1:
                        DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                        if (DungChung.Ham.KTraTT(DaTaContext, _int_maBN) == false)
                        {

                            if (string.IsNullOrEmpty(txtIdkb.Text))
                            {
                                MessageBox.Show("Không có quá trình điều trị");
                            }
                            else
                            {
                                string makp = "";
                                string makptim = "";
                                int makpd = 0;
                                if (lupKhoaKhamkb.EditValue != null && lupKhoaKhamkb.EditValue.ToString() != "")
                                    makp = lupKhoaKhamkb.EditValue.ToString();
                                if (lupTimMaKP.EditValue != null && lupTimMaKP.EditValue.ToString() != "")
                                {
                                    makptim = lupTimMaKP.EditValue.ToString();
                                    makpd = Convert.ToInt32(makptim);
                                }
                                int id2 = int.Parse(txtIdkb.Text.Trim());


                                if (makptim == makp)
                                {
                                    var ktkb = DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN).OrderByDescending(p => p.IDKB).ToList();
                                    if (id2 == ktkb.First().IDKB)
                                    {
                                        TTLuu = 2;
                                        EnableControlKB(true);
                                        EnableButton(false);
                                        Buongcu = cboBuong.Text.Trim();
                                        Giuongcu = cboGiuong.Text.Trim();
                                        ngayChuyenBG = dtTGChuyenBuongGiuong.DateTime;

                                        ckcchuyenBG.ReadOnly = false;
                                        xtraDieuTri.Text = "Chẩn đoán*";
                                        DungChung.Bien.CoTheChuyen = false;
                                    }
                                    else
                                    {
                                        EnableControlKB(false);
                                        MessageBox.Show("Bạn không thể sửa khám bệnh vì không phải chẩn đoán mới nhất");
                                    }
                                }
                                else
                                {
                                    EnableControlKB(false);
                                    MessageBox.Show("Bạn không thể sửa khám bệnh của khoa|phòng khác");
                                }


                            }
                        }
                        break;
                    case 2:
                        DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                        if (DungChung.Ham.KTraTT(DaTaContext, _int_maBN) == false)
                        {

                            if (string.IsNullOrEmpty(txtIdDonThuoc.Text))
                            {
                                MessageBox.Show("Không có đơn thuốc");
                            }
                            else
                            {
                                int _mabp = 0;
                                if (lupBPKe.EditValue != null)
                                    _mabp = Convert.ToInt32(lupBPKe.EditValue);

                                if (DungChung.Bien.listKPHoatDong.Where(p => p == _makp).Count() > 0 || DungChung.Bien.PLoaiKP == "Admin")
                                {
                                    int id = Convert.ToInt32(txtIdDonThuoc.Text);
                                    var dthuocSua = DaTaContext.DThuocs.FirstOrDefault(o => o.IDDon == id);
                                    if (dthuocSua != null && dthuocSua.MaKP != _makp)
                                    {
                                        MessageBox.Show("Không thể sửa đơn thuốc của khoa khác");
                                        return;
                                    }
                                    var a = DaTaContext.DThuoccts.Where(p => p.IDDon == id && (p.Status == 1 || p.SoPL > 0)).ToList();
                                    if (a.Count > 0 && cboKieuDon.SelectedIndex != 2)
                                    {

                                        MessageBox.Show("Đơn thuốc đã được lên phiếu lĩnh, bạn chỉ có thể sửa trường trong DM BHYT và Tỷ lệ TT");
                                        TTLuu = 2;
                                        EnableButton(false);
                                        EnableTrongBHYT(true);
                                        xtraKeDon.Text = "Đơn thuốc*";
                                    }
                                    else
                                    {

                                        TTLuu = 2;
                                        EnableButton(false);
                                        EnableControlKD(true);
                                        colMaDVdt.OptionsColumn.ReadOnly = false;
                                        colGayTe.OptionsColumn.ReadOnly = false;
                                        colSoLuong.OptionsColumn.ReadOnly = false;
                                        colSoLuongctdt.OptionsColumn.ReadOnly = false;
                                        colStatusct.OptionsColumn.ReadOnly = false;
                                        xtraKeDon.Text = "Đơn thuốc*";
                                    }
                                }
                                else
                                {
                                    MessageBox.Show("Mã KP không khớp");
                                }
                            }
                        }
                        break;
                    case 3:
                        DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                        if (DungChung.Ham.KTraTT(DaTaContext, _int_maBN) == false)
                        {
                            if (string.IsNullOrEmpty(txtChiDinh.Text))
                            {
                                MessageBox.Show("Không có dịch vụ để sửa");
                            }
                            else
                            {
                                TTLuu = 2;
                                EnableButton(false);
                                xtraChiDinh.Text = "Dịch vụ*";
                                EnableControlDV(true);
                                lupMaDVdv.DataSource = _ldichvucd.Where(p => DungChung.Bien.MaBV == "27183" ? p.IDNhom != 8 : true).Where(p => p.MaKPsd.Contains(_maKPsd));
                            }
                        }
                        break;

                    case 4:
                        if (DungChung.Ham.KTraTT(DaTaContext, _int_maBN) == false || (DungChung.Bien.MaBV == "30007" && radNoiTru.SelectedIndex == 0))
                        {
                            var dataSource = (List<DienBienNgayGio>)binsDienBien.DataSource;
                            if (dataSource != null && dataSource.Count > 0)
                            {
                                EnableButton(false);
                                TTLuu = 2;
                                grvDienBien.OptionsBehavior.ReadOnly = false;
                                if ((DungChung.Bien.MaBV == "30007" && radNoiTru.SelectedIndex == 0))
                                {
                                    colNgayNhapdb.OptionsColumn.AllowEdit = false;
                                    colNgayNhapdb.OptionsColumn.AllowFocus = false;
                                    colYlenh.OptionsColumn.AllowEdit = false;
                                    colYlenh.OptionsColumn.AllowFocus = false;
                                    colXoadb.OptionsColumn.AllowEdit = false;
                                    colXoadb.OptionsColumn.AllowFocus = false;
                                    colMaCB_db.OptionsColumn.AllowEdit = false;
                                    colMaCB_db.OptionsColumn.AllowFocus = false;
                                }
                                grvDienBien.Focus();
                                grvDienBien.OptionsBehavior.ReadOnly = false;

                                List<DienBienNgayGio> _listDB = new List<DienBienNgayGio>();

                                var q = (from db in DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.Ploai == 0).OrderByDescending(p => p.ID) select db).ToList();
                                if (q.Count > 0)
                                {
                                    foreach (var item in q)
                                    {
                                        DienBien _defaultDB1 = new DienBien();
                                        _defaultDB1.ID = item.ID;
                                        _defaultDB1.HuongDTri = item.HuongDTri;
                                        _defaultDB1.IDDon = item.IDDon;
                                        _defaultDB1.MaBNhan = item.MaBNhan;
                                        _defaultDB1.KetQua = item.KetQua;
                                        _defaultDB1.MaCB = item.MaCB;
                                        _defaultDB1.ThucHienYL = item.ThucHienYL;
                                        _defaultDB1.YLenh = item.YLenh;
                                        _defaultDB1.DienBien1 = item.DienBien1;
                                        _defaultDB1.NgayNhap = item.NgayNhap;
                                        _defaultDB1.MaKP = item.MaKP;
                                        _defaultDB1.TenKP = item.TenKP;
                                        DienBienNgayGio dbNgayGio = new DienBienNgayGio(_defaultDB1);
                                        dbNgayGio.NgayNhap_24012 = item.NgayNhap.Value.ToString("dd/MM HH:mm", CultureInfo.CreateSpecificCulture("vi-VN"));
                                        dbNgayGio.Loai = item.Loai;
                                        _listDB.Add(dbNgayGio);
                                    }
                                }
                                xtraDBBenh.Text = "Diễn biễn bệnh*";
                            }
                            else
                            {
                                grcDonThuocct.Enabled = true;
                                EnableButton(false);
                                grvDienBien.OptionsBehavior.ReadOnly = false;
                                List<DienBienNgayGio> _listDB = new List<DienBienNgayGio>();
                                var dienbienMap = DaTaContext.DienBiens.Where(p => p.ID == 0).ToList();
                                _ldienbien = (from db in dienbienMap
                                              select new DienBienNgayGio(db)).ToList();
                                var q = (from db in DaTaContext.DienBiens.Where(p => p.ID == 0) select db).ToList();
                                if (q.Count > 0)
                                {
                                    foreach (var item in q)
                                    {
                                        DienBien _defaultDB1 = new DienBien();
                                        _defaultDB1.ID = item.ID;
                                        _defaultDB1.HuongDTri = item.HuongDTri;
                                        _defaultDB1.IDDon = item.IDDon;
                                        _defaultDB1.MaBNhan = item.MaBNhan;
                                        _defaultDB1.KetQua = item.KetQua;
                                        _defaultDB1.MaCB = item.MaCB;
                                        _defaultDB1.ThucHienYL = item.ThucHienYL;
                                        _defaultDB1.YLenh = item.YLenh;
                                        _defaultDB1.DienBien1 = item.DienBien1;
                                        _defaultDB1.NgayNhap = item.NgayNhap;
                                        _defaultDB1.MaKP = _makp;
                                        _defaultDB1.TenKP = item.TenKP;
                                        DienBienNgayGio dbNgayGio = new DienBienNgayGio(_defaultDB1);
                                        dbNgayGio.NgayNhap_24012 = item.NgayNhap.Value.ToString("dd/MM HH:mm", CultureInfo.CreateSpecificCulture("vi-VN"));
                                        dbNgayGio.Loai = item.Loai;
                                        _listDB.Add(dbNgayGio);
                                    }
                                }
                                binsDienBien.DataSource = _ldienbien;
                                grcDienBien.DataSource = binsDienBien;
                                grvDienBien.Focus();
                                xtraDBBenh.Text = "Diễn biễn bệnh*";
                                TTLuu = 1;
                            }
                        }
                        break;
                    case 5:
                        QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                        trangthai = 2;

                        editable = true;
                        setEditTable(true);
                        rowsua = grv_Dthuoc.FocusedRowHandle;
                        if (grv_Dthuoc.GetRowCellValue(rowsua, colIDDon_kedon) != null && Convert.ToInt32(grv_Dthuoc.GetRowCellValue(rowsua, colIDDon_kedon)) > 0)
                        {
                            grv_Dthuoc.Columns["MaKP"].OptionsColumn.AllowEdit = false;
                            int iddon = Convert.ToInt32(grv_Dthuoc.GetRowCellValue(rowsua, colIDDon_kedon));
                            var dtct = data.DThuoccts.Where(p => p.IDDon == iddon).Where(p => p.SoPL > 0).ToList();
                            if (dtct.Count > 0)
                            {
                                grv_Dthuoc.Columns["NgayKe"].OptionsColumn.AllowEdit = false;
                                grv_Dthuoc.Columns["MaKP"].OptionsColumn.AllowEdit = false;
                                grv_Dthuoc.Columns["MaCB"].OptionsColumn.AllowEdit = false;
                                grv_Dthuoc.Columns["KieuDon"].OptionsColumn.AllowEdit = false;
                                grv_Dthuoc.Columns["DienBien"].OptionsColumn.AllowEdit = false;
                            }
                        }
                        grv_Dthuoc.Appearance.FocusedRow.BackColor = Color.Aquamarine;
                        btnLuuKb.Enabled = true;
                        break;
                    case 6:
                        if (DungChung.Ham.KTraTT(DaTaContext, _int_maBN) == false)
                        {
                            if (grvChamSoc.RowCount > 0)
                            {
                                EnableButton(false);
                                TTLuu = 2;
                                grvChamSoc.OptionsBehavior.Editable = true;
                                grvChamSoc.Focus();
                            }
                            else
                            {
                                MessageBox.Show("Không có chế độ chăm sóc");
                            }
                        }
                        break;
                    case 7:
                        if (DungChung.Ham.KTraTT(DaTaContext, _int_maBN) == false)
                        {
                            if (grv15NgayDT.RowCount > 0)
                            {
                                EnableButton(false);
                                TTLuu = 2;
                                List<string> listColExcept = new List<string>();
                                listColExcept.Add(colPrint.Name);
                                SetEditColumnForGrid(grv15NgayDT, true, listColExcept);
                                grv15NgayDT.Focus();
                            }
                            else
                            {
                                MessageBox.Show("Không có diện biến 15 ngày ĐT");
                            }
                        }
                        break;
                    case 8:
                        if (DungChung.Ham.KTraTT(DaTaContext, _int_maBN) == false)
                        {
                            if (grvVLTL.RowCount > 0)
                            {
                                EnableButton(false);
                                TTLuu = 2;
                                grvVLTL.OptionsBehavior.Editable = true;
                                //VLTLcolCanBoTH.OptionsColumn.AllowEdit = true;
                                //VLTLcolNgayTH.OptionsColumn.AllowEdit = false;
                                VLTLcolNgayTH.OptionsColumn.AllowFocus = false;
                                //VLTLcolTenDV.OptionsColumn.AllowEdit = false;
                                VLTLcolTenDV.OptionsColumn.AllowFocus = false;
                                //VLTLcolThoiGianTH.OptionsColumn.AllowEdit = false;
                                VLTLcolThoiGianTH.OptionsColumn.AllowFocus = false;
                                //VLTLcolThoiGianTH.OptionsColumn.AllowEdit = false;
                                VLTLcolCanBoCD.OptionsColumn.AllowFocus = false;
                            }
                            else
                            {
                                MessageBox.Show("Không có diện biến 15 ngày ĐT");
                            }
                        }
                        break;
                }
            }

            #region enable cell đơn thuốc
            int status = 0;
            if (grvDonThuocct.GetFocusedRowCellValue(colStatusct) != null)
            {
                status = Convert.ToInt32(grvDonThuocct.GetFocusedRowCellValue(colStatusct));
            }
            if (status == 1)
            {
                EnableTrongBHYT(true);
            }
            else
            {
                int sopl = 0;
                if (grvDonThuocct.GetFocusedRowCellValue(colSoPhieuLinhCt) != null)
                {
                    sopl = Convert.ToInt32(grvDonThuocct.GetFocusedRowCellValue(colSoPhieuLinhCt));
                }
                if (sopl > 0)
                {
                    EnableTrongBHYT(true);
                }
                else
                {
                    grvDonThuocct.OptionsBehavior.ReadOnly = false;
                    grvDonThuocct.OptionsBehavior.Editable = true;
                    colMaDVdt.OptionsColumn.ReadOnly = false;
                    colGayTe.OptionsColumn.ReadOnly = false;
                    colSoLuong.OptionsColumn.ReadOnly = false;
                    colSoLuongctdt.OptionsColumn.ReadOnly = false;
                    coltrongBH.OptionsColumn.ReadOnly = false;
                    colTyLeBHTT.OptionsColumn.ReadOnly = false;
                }
            }
            #endregion
        }

        private void grcvChuyenKhoa_FocusedRowChanged(object sender, DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs e)
        {
            if (xtraDieuTri.Text.Contains("*"))
            {
                DialogResult _result = MessageBox.Show("Bạn chưa lưu dữ liệu, Bạn có muốn lưu không?", "thông báo!", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                if (_result == DialogResult.Yes)
                {
                    btnLuuKb_Click(sender, e);
                }
                TTLuu = 0;
                SetTTTab();
            }
            int idkb = 0;
            if (grvChuyenKhoa.GetFocusedRowCellValue(colID) != null)
            {
                idkb = int.Parse(grvChuyenKhoa.GetFocusedRowCellValue(colID).ToString());
                var query = DaTaContext.BNKBs.Where(p => p.IDKB == (idkb)).ToList();
                if (query.Count > 0)
                {
                    txtIdkb.Text = query.First().IDKB.ToString();
                    if (query.First().NgayKham != null)
                        dtNgayKhamkb.DateTime = Convert.ToDateTime(query.First().NgayKham);
                    if (query.First().MaKP != null && query.First().MaKP.ToString() != "")
                    {
                        lupKhoaKhamkb.EditValue = query.First().MaKP;
                    }
                    else
                    {
                        lupKhoaKhamkb.EditValue = 0;
                    }

                    lupNguoiKhamkb.EditValue = query.First().MaCB;
                    lupChanDoanKb.EditValue = query.First().ChanDoan;
                    txtBenhChinh.EditValue = query.First().ChanDoan;
                    lupKhac.EditValue = query.First().MaICD2;
                    lupMaICDkb.EditValue = query.First().MaICD;
                    string[] icd = new string[4] { "", "", "", "" };
                    if (!string.IsNullOrEmpty(query.First().MaICD2))
                    {
                        if (DungChung.Bien.MaBV == "30009")
                        {
                            icd = new string[6] { "", "", "", "", "", "" };
                            string[] icd2 = query.First().MaICD2.Split(';');
                            for (int i = 0; i < icd2.Length; i++)
                            {
                                if (icd2[i] != null)
                                {
                                    icd[i] = icd2[i];
                                }
                            }
                        }
                        else
                        {
                            string[] icd2 = query.First().MaICD2.Split(';');
                            for (int i = 0; i < icd2.Length; i++)
                            {
                                if (icd2[i] != null)
                                {
                                    if (i == 2)
                                        icd[i] += icd2[i];
                                    else
                                        if (i > 2)
                                        icd[2] += ";" + icd2[i];
                                    else
                                        icd[i] = icd2[i];
                                }

                            }
                        }
                    }
                    txtBenhKhac1.EditValue = query.First().BenhKhac;

                    LupICD2.EditValue = icd[0];
                    LupICD3.EditValue = icd[1];
                    LupICD4.EditValue = icd[2];
                    if (DungChung.Bien.MaBV == "30009")
                    {
                        LupICD44.EditValue = icd[3];
                        LupICD55.EditValue = icd[4];
                    }
                    string[] benhkhac = new string[4] { "", "", "", "" };

                    if (DungChung.Bien.MaBV != "30007")
                    {
                        if (!string.IsNullOrEmpty(query.First().BenhKhac))
                        {
                            if (DungChung.Bien.MaBV == "30009")
                            {
                                benhkhac = new string[6] { "", "", "", "", "", "" };
                                if (!string.IsNullOrEmpty(query.First().BenhKhac))
                                {
                                    string[] icd2 = query.First().BenhKhac.Split(';');
                                    for (int i = 0; i < icd2.Length; i++)
                                    {
                                        if (icd2[i] != null)
                                        {
                                            benhkhac[i] = icd2[i];
                                        }
                                    }
                                }
                            }
                            else
                            {
                                string[] icd2 = query.First().BenhKhac.Split(';');
                                for (int i = 0; i < icd2.Length; i++)
                                {
                                    if (icd2[i] != null)
                                    {
                                        if (i == 2)
                                            benhkhac[i] += icd2[i];
                                        else if (i > 2)
                                        {
                                            if (icd2[i].Length > 2)
                                                benhkhac[2] += ";" + icd2[i];
                                        }

                                        else
                                            benhkhac[i] = icd2[i];
                                    }
                                }
                            }
                        }


                        if (!string.IsNullOrEmpty(benhkhac[0]) && benhkhac[0].Contains("(Bệnh phụ)"))
                        {
                            txtBenhKhac2.EditValue = benhkhac[0].Replace("(Bệnh phụ)", "");
                            txtBenhKhac1.EditValue = benhkhac[0].Replace("(Bệnh phụ)", "");
                            txtBenhPhu2.EditValue = benhkhac[0];
                        }
                        else
                        {
                            txtBenhKhac2.EditValue = benhkhac[0];
                            txtBenhKhac1.EditValue = benhkhac[0];
                            txtBenhPhu2.EditValue = benhkhac[0];
                        }

                        if (!string.IsNullOrEmpty(benhkhac[1]) && benhkhac[1].Contains("(Bệnh phụ)"))
                        {
                            txtBenhKhac3.EditValue = benhkhac[1].Replace("(Bệnh phụ)", "");
                            txtBenhPhu3.EditValue = benhkhac[1];
                        }
                        else
                        {
                            txtBenhPhu3.EditValue = benhkhac[1];
                            txtBenhKhac3.EditValue = benhkhac[1];
                        }


                        if (!string.IsNullOrEmpty(benhkhac[2]) && benhkhac[2].Contains("(Bệnh phụ)"))
                        {
                            txtBenhKhac4.EditValue = benhkhac[2].Replace("(Bệnh phụ)", "");
                            txtBenhKhac.EditValue = benhkhac[2];
                        }

                        else
                        {
                            txtBenhKhac4.EditValue = benhkhac[2];
                            txtBenhKhac.EditValue = benhkhac[2];
                        }

                        if (!string.IsNullOrEmpty(benhkhac[3]) && benhkhac[3].Contains("(Bệnh phụ)"))
                        {
                            txtBenhKhac44.EditValue = benhkhac[3].Replace("(Bệnh phụ)", "");
                            txtBenhPhu4.EditValue = benhkhac[3];
                        }
                        else
                        {
                            txtBenhPhu4.EditValue = benhkhac[3];
                            txtBenhKhac44.EditValue = benhkhac[3];
                        }
                        if (DungChung.Bien.MaBV == "30009")
                        {
                            if (!string.IsNullOrEmpty(benhkhac[4]) && benhkhac[4].Contains("(Bệnh phụ)"))
                            {
                                txtBenhKhac55.EditValue = benhkhac[4].Replace("(Bệnh phụ)", "");
                                txtBenhPhu5.EditValue = benhkhac[4];
                            }
                            else
                            {
                                txtBenhPhu5.EditValue = benhkhac[4];
                                txtBenhKhac55.EditValue = benhkhac[4];
                            }
                        }
                    }
                    if (query.First().NgayChuyenBG != null)
                    {
                        string[] arrNgayChuyen = query.First().NgayChuyenBG.Split(';');
                        if (arrNgayChuyen.Count() > 0)
                        {
                            DateTime ngayChuyen = DateTime.MinValue;
                            if (DateTime.TryParse(arrNgayChuyen.LastOrDefault(), out ngayChuyen))
                            {
                                dtTGChuyenBuongGiuong.EditValue = ngayChuyen;
                            }
                        }
                    }
                    else
                        dtTGChuyenBuongGiuong.EditValue = null;
                    if (query.First().Buong != null && query.First().Giuong != null)
                    {
                        if (query.First().Buong.Contains(";") && query.First().Giuong.Contains(";"))
                        {
                            string[] arrBuong = query.First().Buong.Split(';');
                            cboBuong.Text = arrBuong.LastOrDefault();
                            string[] arrGiuong = query.First().Giuong.Split(';');
                            cboGiuong.Text = arrGiuong.LastOrDefault();
                        }
                        else
                        {
                            cboGiuong.Text = query.First().Giuong;
                            cboBuong.Text = query.First().Buong;
                        }
                    }
                    else
                    {
                        cboGiuong.Text = "";
                        cboBuong.Text = "";
                    }
                    cboChuyenKhoa.EditValue = query.First().MaCK;
                    if (query.First().NgayNghi != null)
                    {
                        DateTime test = query.First().NgayNghi.Value;
                        dt_NgayChuyen.DateTime = test;
                    }
                    else
                        dt_NgayChuyen.ResetText();
                    if (query.First().SoNgaydt != null)
                    {
                        txtSoNgaydt.Text = query.First().SoNgaydt.ToString();
                    }
                    else
                        txtSoNgaydt.Text = "";
                    lupKhoaDT.EditValue = query.First().MaKPdt;
                    lupKhoaDTKH.EditValue = query.First().MaKPDTKH;
                    if (query.First().PhuongAn != null)
                        radGiaiQuyet.SelectedIndex = query.First().PhuongAn.Value;
                    else
                        radGiaiQuyet.SelectedIndex = -1;
                }
                else
                {//Khám bệnh
                    resetControl();
                }

            }
            else
            {//Khám bệnh
                resetControl();
            }
            xtraDieuTri.Text = "Điều trị";
            btnLuuKb.Enabled = false;
        }

        double SoTienTamUng = 0;
        public bool KtraChiPhi(QLBV_Database.QLBVEntities _data, int _mabn, double TongTienThuoc, int id)
        {
            var _lcpcd = (from cls in _data.CLS.Where(p => p.MaBNhan == _mabn)
                          join cd in _data.ChiDinhs.Where(p => p.SoPhieu <= 0 || p.SoPhieu == null).Where(p => p.Status == 0) on cls.IdCLS equals cd.IdCLS
                          select new { cd.IDCD, cd.MaDV, cd.DonGia }).ToList();
            var _dthuoc = (from dt in _data.DThuocs.Where(p => p.MaBNhan == _mabn)
                           join dtct in _data.DThuoccts.Where(p => p.ThanhToan == 0) on dt.IDDon equals dtct.IDDon
                           select new { dtct.IDDonct, dtct.ThanhTien, dt.PLDV, dt.IDDon }).ToList();
            double Tiencd = _lcpcd.Sum(p => p.DonGia);
            double Tiendv = _dthuoc.Where(p => p.PLDV == 2).Sum(p => p.ThanhTien);
            double Tienthuoc = _dthuoc.Where(p => p.PLDV == 1).Where(p => p.IDDon != id).Sum(p => p.ThanhTien);
            double a = Tiencd + Tienthuoc + Tiendv + TongTienThuoc;// +tienthuocchenh;
            var _tung = _data.TamUngs.Where(p => p.MaBNhan == _mabn).Where(p => p.PhanLoai == 0).ToList();
            double TienTU = _tung.Count > 0 ? _tung.Sum(p => p.SoTien ?? 0) : 0;
            if (a > TienTU)
                return false;
            else
                return true;
        }
        public bool KTraChiPhiTabDV(QLBV_Database.QLBVEntities _data, int _mabn, double TongTienThuoc)
        {
            var _lcpcd = (from cls in _data.CLS.Where(p => p.MaBNhan == _mabn)
                          join cd in _data.ChiDinhs.Where(p => p.SoPhieu <= 0 || p.SoPhieu == null).Where(p => p.Status == 0) on cls.IdCLS equals cd.IdCLS
                          select new { cd.IDCD, cd.MaDV, cd.DonGia }).ToList();
            var _dthuoc = (from dt in _data.DThuocs.Where(p => p.MaBNhan == _mabn)
                           join dtct in _data.DThuoccts on dt.IDDon equals dtct.IDDon
                           select new { dtct.IDDonct, dtct.ThanhTien, dt.PLDV, dt.IDDon, dtct.ThanhToan }).ToList();
            double Tiencd = _lcpcd.Sum(p => p.DonGia);
            double Tienthuoc = _dthuoc.Where(p => p.PLDV == 1).Where(p => p.ThanhToan == 0).Sum(p => p.ThanhTien);
            double Tienthuoc1 = _dthuoc.Where(p => p.PLDV == 2).Where(p => p.ThanhToan == 1).Sum(p => p.ThanhTien);
            double tienthuocchenh = TongTienThuoc - Tienthuoc1;
            double a = Tiencd + Tienthuoc + tienthuocchenh;
            var _tung = _data.TamUngs.Where(p => p.MaBNhan == _mabn).Where(p => p.PhanLoai == 0).ToList();
            double TienTU = _tung.Count > 0 ? _tung.Sum(p => p.SoTien ?? 0) : 0;
            if (a > TienTU)
                return false;
            else
                return true;
        }
        public void UpdateDTM(QLBV_Database.QLBVEntities _data, int _iddon, int _iddtm)
        {
            try
            {
                var dthuoc = _data.DThuocs.Where(p => p.IDDon == _iddon).FirstOrDefault();
                var dthuocmau = _data.DThuocMaus.Where(p => p.IDDonMau == _iddtm).FirstOrDefault();
                dthuocmau.MaCB = dthuoc.MaCB;
                if (_data.SaveChanges() > 0)
                {
                    List<DThuocMauct> sl = new List<DThuocMauct>();
                    sl = (from iddct in _data.DThuocMaucts.Where(p => p.IDDonMau == _iddtm) select iddct).ToList();
                    foreach (var s in sl)
                    {
                        var dtmctx = _data.DThuocMaucts.Single(p => p.IDDonMauct == (s.IDDonMauct));
                        _data.DThuocMaucts.Remove(dtmctx);
                        _data.SaveChanges();
                    }
                    List<DThuocct> dtct = new List<DThuocct>();
                    dtct = _data.DThuoccts.Where(p => p.IDDon == _iddon).ToList();
                    foreach (var item in dtct)
                    {
                        DThuocMauct moi = new DThuocMauct();
                        moi.IDDonMau = dthuocmau.IDDonMau;
                        moi.MaDV = item.MaDV;
                        moi.DonVi = item.DonVi;
                        moi.SoLan = item.SoLan;
                        moi.DuongD = item.DuongD;
                        moi.MoiLan = item.MoiLan;
                        moi.DviUong = item.DviUong;
                        moi.Luong = item.Luong;
                        moi.GhiChu = item.GhiChu;
                        moi.SoLuong = item.SoLuong;
                        _data.DThuocMaucts.Add(moi);
                        _data.SaveChanges();

                    }
                    MessageBox.Show("Cập nhật đơn thuốc mẫu: " + dthuocmau.TenDTM + ", thành công!");
                }
                else
                    MessageBox.Show("Lỗi cập nhật đơn thuốc mẫu!");
            }
            catch (Exception ex)
            {
                MessageBox.Show("Lỗi cập nhật đơn thuốc mẫu: " + ex.Message.ToString());
            }

        }

        double sothangOld = 1;
        double sothangSua = 1;
        bool isSave = false;
        bool isNotVatTu;
        bool isLuuDienBien;
        private void btnLuuKb_Click(object sender, EventArgs e)
        {
            try
            {
                isSave = true;
                grvDienBien.PostEditor();
                DTM.Enabled = false;

                macbTH.OptionsColumn.AllowEdit = false;
                macbTH.OptionsColumn.ReadOnly = true;
                VLTLcolDienBienVLTL.OptionsColumn.AllowEdit = false;
                VLTLcolDienBienVLTL.OptionsColumn.ReadOnly = true;

                int rs;
                int _int_maBN = 0;
                //tổng tiền kê đơn chưa thanh toán

                if (Int32.TryParse(txtMaBNhan.Text, out rs))
                    _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
                int iddtbn = 0;
                if (grvBNhankb.GetFocusedRowCellValue(colIDDTBNhan) != null)
                    iddtbn = Convert.ToInt32(grvBNhankb.GetFocusedRowCellValue(colIDDTBNhan));
                var TTBn = DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN).ToList();
                switch (TTTab)
                {
                    // lưu điều trị
                    #region lưu điều trị
                    case 1:
                        DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                        if (KTraKB() && ktTienSuDiUng(_int_maBN) && DungChung.Ham.CheckNgay(Convert.ToDateTime(grvBNhankb.GetFocusedRowCellValue(colNNhap)), dtNgayKhamkb.DateTime))
                        {
                            var kttt = DaTaContext.VienPhis.Where(p => p.MaBNhan == _int_maBN).ToList();
                            if (kttt.Count > 0)
                            {
                                MessageBox.Show("BN đã thanh toán, Bạn không thể sửa");
                            }
                            else
                            {

                                string[] icd = new string[4] { "", "", "", "" };
                                string[] benhkhac = new string[4] { "", "", "", "" };
                                if (DungChung.Bien.MaBV == "30009")
                                {
                                    icd = new string[6] { "", "", "", "", "", "" };
                                    benhkhac = new string[6] { "", "", "", "", "", "" };
                                }
                                #region tạo mới
                                if (TTLuu == 1) //tao moi
                                {
                                    int ktkb1 = DungChung.Ham.KTQuaSoLanKB(DaTaContext, lupNguoiKhamkb.EditValue.ToString(), 65, dtNgayKhamkb.DateTime);
                                    if (ktkb1 == 2)
                                    {
                                        MessageBox.Show("Bác sĩ: " + lupNguoiKhamkb.Text + ", đã khám quá số lần giới hạn: 65 lần/ngày");
                                    }
                                    else if (ktkb1 == 0 && DungChung.Bien.MaBV == "24009")
                                    {
                                        MessageBox.Show("Bác sĩ: " + lupNguoiKhamkb.Text + ", chưa có chứng chỉ hành nghề, không thể lưu!");
                                        return;
                                    }
                                    //if (!DungChung.Ham.KTQuaSoLanKB(DaTaContext, lupNguoiKhamkb.EditValue.ToString(), 65, dtNgayKhamkb.DateTime))
                                    //    MessageBox.Show("Bác sĩ: " + lupNguoiKhamkb.Text + ", đã khám quá số lần giới hạn: 65 lần/ngày");
                                    int makp = 0;
                                    if (lupKhoaKhamkb.EditValue != null)
                                        makp = Convert.ToInt32(lupKhoaKhamkb.EditValue);
                                    int _makpdt = 0;
                                    DateTime ngaychuyen = DateTime.Now;
                                    var ktkpkb = (from bnkb in DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN).OrderByDescending(p => p.IDKB) select new { bnkb.MaKP, bnkb.NgayNghi }).ToList();
                                    if (ktkpkb.Count > 0)
                                    {
                                        _makpdt = ktkpkb.First().MaKP == null ? 0 : ktkpkb.First().MaKP.Value;
                                        //if(ktkpkb.First().NgayNghi!=null)
                                    }
                                    if (ktkpkb.Count > 0 && ktkpkb.First().NgayNghi != null)
                                    {
                                        ngaychuyen = Convert.ToDateTime(ktkpkb.First().NgayNghi);
                                        if (ngaychuyen > dtNgayKhamkb.DateTime)
                                        {
                                            MessageBox.Show("Ngày khám không được lớn hơn ngày chuyển: " + ngaychuyen.ToString());
                                            dtNgayKhamkb.Focus();
                                            return;
                                        }
                                    }

                                    if (_makpdt == _makp)
                                    {
                                        MessageBox.Show("Bệnh nhân đang được điều trị tại: '" + lupKhoaKhamkb.Text + "' bạn không thể tạo mới được");
                                        xtraDieuTri.Text = "Điều trị";
                                    }
                                    else
                                    {

                                        BNKB KhamBenh = new BNKB();
                                        KhamBenh.MaBNhan = _int_maBN;
                                        KhamBenh.NgayKham = dtNgayKhamkb.DateTime;
                                        KhamBenh.MaKP = lupKhoaKhamkb.EditValue == null ? 0 : Convert.ToInt32(lupKhoaKhamkb.EditValue);
                                        if (lupMaICDkb.EditValue != null)
                                            KhamBenh.MaICD = lupMaICDkb.EditValue.ToString();
                                        else
                                            KhamBenh.MaICD = "";
                                        if (DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14017" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "24272")
                                        {
                                            KhamBenh.ChanDoan = txtBenhChinh.Text;
                                        }
                                        else
                                        {
                                            KhamBenh.ChanDoan = lupChanDoanKb.Text;

                                        }

                                        if (DungChung.Bien.MaBV == "14017")
                                        {
                                            KhamBenh.MaICD2 = lupKhac.EditValue.ToString().Trim();//.Replace(", ", ";");
                                        }
                                        else if (DungChung.Bien.MaBV == "30009")
                                        {
                                            if (LupICD2.EditValue != null)
                                                icd[0] = LupICD2.EditValue.ToString();
                                            if (LupICD3.EditValue != null)
                                                icd[1] = LupICD3.EditValue.ToString();
                                            if (LupICD4.EditValue != null)
                                                icd[2] = LupICD4.Text.ToString();//benh khac
                                            if (LupICD4.EditValue != null)
                                                icd[3] = LupICD44.Text.ToString();
                                            if (LupICD4.EditValue != null)
                                                icd[4] = LupICD55.Text.ToString();
                                            string maicd = string.Join(";", icd);
                                            KhamBenh.MaICD2 = maicd;
                                        }
                                        else
                                        {
                                            if (LupICD2.EditValue != null)
                                                icd[0] = LupICD2.EditValue.ToString();
                                            if (LupICD3.EditValue != null)
                                                icd[1] = LupICD3.EditValue.ToString();
                                            if (LupICD4.EditValue != null)
                                                icd[2] = LupICD4.Text.ToString();
                                            string maicd = string.Join(";", icd);
                                            KhamBenh.MaICD2 = maicd;
                                        }

                                        string _benhphu = "";
                                        if (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                                        {
                                            KhamBenh.MaYHCT = DungChung.Ham.GetMaYHCT(lupMaICDkb.Text, _licd10)[0];
                                            KhamBenh.ChanDoanYHCT = DungChung.Ham.GetMaYHCT(lupMaICDkb.Text, _licd10)[1];
                                            KhamBenh.MaYHCT2 = DungChung.Ham.GetMaYHCT(KhamBenh.MaICD2, _licd10)[0];
                                            KhamBenh.BenhKhacYHCT = DungChung.Ham.GetMaYHCT(KhamBenh.MaICD2, _licd10)[1];
                                        }

                                        if (DungChung.Bien.MaBV == "30002")
                                        {
                                            _benhphu = "(Bệnh phụ)";
                                            if (txtBenhKhac2.Text.Trim().Length > 0)
                                                benhkhac[0] = txtBenhKhac2.Text.Trim() + _benhphu;
                                            if (txtBenhKhac3.Text.Trim().Length > 0)
                                                benhkhac[1] = txtBenhKhac3.Text.Trim() + _benhphu;
                                            if (txtBenhKhac4.Text.Trim().Length > 0)
                                                benhkhac[2] = txtBenhKhac.Text.Trim() + _benhphu;
                                        }

                                        else if (DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "24272")
                                        {
                                            _benhphu = " ";
                                            if (txtBenhPhu2.Text.Trim().Length > 0)
                                                benhkhac[0] = txtBenhPhu2.Text.Trim() + _benhphu;
                                            if (txtBenhPhu3.Text.Trim().Length > 0)
                                                benhkhac[1] = txtBenhPhu3.Text.Trim() + _benhphu;
                                            if (txtBenhKhac.Text.Trim().Length > 0)
                                                benhkhac[2] = txtBenhKhac.Text.Trim() + _benhphu;
                                        }
                                        else if (DungChung.Bien.MaBV == "30009")
                                        {
                                            if (txtBenhPhu2.Text.Trim().Length > 0)
                                                benhkhac[0] = txtBenhPhu2.Text + _benhphu;
                                            if (txtBenhPhu3.Text.Trim().Length > 0)
                                                benhkhac[1] = txtBenhPhu3.Text + _benhphu;
                                            if (txtBenhKhac.Text.Trim().Length > 0)
                                                benhkhac[2] = txtBenhKhac.Text + _benhphu;
                                            if (txtBenhPhu4.Text.Trim().Length > 0)
                                                benhkhac[3] = txtBenhPhu4.Text + _benhphu;
                                            if (txtBenhPhu5.Text.Trim().Length > 0)
                                                benhkhac[4] = txtBenhPhu5.Text + _benhphu;
                                        }
                                        else
                                        {

                                            benhkhac[0] = txtBenhKhac2.Text.Trim() + _benhphu;
                                            benhkhac[1] = txtBenhKhac3.Text.Trim() + _benhphu;
                                            benhkhac[2] = txtBenhKhac.Text.Trim() + _benhphu;
                                        }


                                        string maicd1 = string.Join(";", benhkhac);
                                        KhamBenh.BenhKhac = DungChung.Bien.MaBV == "14017" ? txtBenhKhac1.Text.Trim() : maicd1;
                                        int status = 1;
                                        KhamBenh.PhuongAn = radGiaiQuyet.SelectedIndex;
                                        if (!string.IsNullOrEmpty(lupKhoaDT.Text))
                                        {
                                            KhamBenh.MaKPdt = lupKhoaDT.EditValue == null ? 0 : Convert.ToInt32(lupKhoaDT.EditValue);

                                            //status = 0;
                                            //Ham._setStatus(Convert.ToInt32(txtMaBNhan.Text.Trim()), 1, Convert.ToInt32(lupKhoaDT.EditValue));
                                        }
                                        else
                                        {
                                            KhamBenh.MaKPdt = 0;

                                        }

                                        if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                                        {
                                            if (lupKhoaDTKH.EditValue != null || lupKhoaDTKH.EditValue != "0")
                                                KhamBenh.MaKPDTKH = int.Parse(lupKhoaDTKH.EditValue.ToString());
                                            else
                                                KhamBenh.MaKPDTKH = null;
                                        }

                                        KhamBenh.MaCB = lupNguoiKhamkb.EditValue.ToString();

                                        KhamBenh.Buong = cboBuong.Text.Trim();
                                        KhamBenh.Giuong = cboGiuong.Text.Trim();
                                        if (!string.IsNullOrEmpty(KhamBenh.Buong) && !string.IsNullOrEmpty(KhamBenh.Giuong))
                                        {
                                            var qbnkb = DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN && p.Buong == KhamBenh.Buong && p.Giuong == KhamBenh.Giuong).ToList();
                                            if (qbnkb.Count > 0)
                                                MessageBox.Show("Buồng " + KhamBenh.Buong + ", giường " + KhamBenh.Giuong + " đã được sử dụng cho bệnh nhân này, bạn không cần kê lại");
                                        }

                                        if (cboChuyenKhoa.EditValue != null)
                                            KhamBenh.MaCK = Convert.ToInt16(cboChuyenKhoa.EditValue);
                                        if (!string.IsNullOrEmpty(dt_NgayChuyen.Text))
                                            KhamBenh.NgayNghi = dt_NgayChuyen.DateTime;
                                        else
                                            KhamBenh.NgayNghi = null;
                                        if (!string.IsNullOrEmpty(txtSoNgaydt.Text))
                                            KhamBenh.SoNgaydt = Convert.ToDouble(txtSoNgaydt.Text);
                                        else
                                            KhamBenh.SoNgaydt = null;
                                        //if (lupKhoaDT.EditValue != null && lupKhoaDT.EditValue.ToString() != "")
                                        //{
                                        //    KhamBenh.MaKPdt = lupKhoaDT.EditValue.ToString();
                                        //}
                                        //if (!string.IsNullOrEmpty(txtLoiDan.Text))
                                        //    KhamBenh.LoiGian = txtLoiDan.Text;

                                        DaTaContext.BNKBs.Add(KhamBenh);
                                        if (DaTaContext.SaveChanges() >= 0)
                                        {
                                            if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                                            {
                                                DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);

                                                //Lưu khoa đt kết hợp vào BenhNhan
                                                var ttbnSave = DaTaContext.BenhNhans.FirstOrDefault(p => p.MaBNhan == _int_maBN);
                                                if (ttbnSave != null)
                                                {
                                                    if (lupKhoaDTKH.EditValue != null || lupKhoaDTKH.EditValue != "0")
                                                        ttbnSave.MaKPDTKH = int.Parse(lupKhoaDTKH.EditValue.ToString());
                                                    else
                                                        ttbnSave.MaKPDTKH = null;
                                                    DaTaContext.SaveChanges();
                                                }
                                            }
                                            DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                                            int _chuyenkhoa = 0;
                                            if (lupKhoaKhamkb.EditValue != null)
                                                _chuyenkhoa = Convert.ToInt32(lupKhoaKhamkb.EditValue);
                                            if (lupKhoaDT.EditValue != null)
                                                _chuyenkhoa = Convert.ToInt32(lupKhoaDT.EditValue);
                                            // tính công khám 
                                            // theo TT37 áp dụng ngàu 01/03/2016
                                            if (dtNgayKhamkb.DateTime > Convert.ToDateTime("29/02/2016"))
                                            {
                                                int maxidKB = KhamBenh.IDKB;
                                                var ttbn = DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN && p.NoiTru == 0 && p.DTNT == false).ToList();
                                                if (ttbn.Count >= 1)
                                                {
                                                    DungChung.Ham.Update_Delete_CongKham(_int_maBN, maxidKB, true, dtNgayKhamkb.DateTime);
                                                }
                                            }
                                            DungChung.Ham._setStatus(_int_maBN, status, _chuyenkhoa);
                                            if (radGiaiQuyet.SelectedIndex == 3)
                                            {
                                                TimeSpan aaa = dt_NgayChuyen.DateTime - dtNgayKhamkb.DateTime;
                                                if (aaa.TotalHours >= 4)
                                                {
                                                    DialogResult Result = MessageBox.Show("Bệnh nhân chuyển khoa điều trị, bạn có muốn chỉ định ngày giường?", "Thông báo", MessageBoxButtons.YesNo);
                                                    if (Result == DialogResult.Yes)
                                                    {
                                                        frm_CapNhatNgayGiuong frm = new frm_CapNhatNgayGiuong(_int_maBN, dt_NgayChuyen.DateTime, 1);
                                                        frm.ShowDialog();
                                                    }
                                                }
                                                //if(DungChung.Bien.MaBV=="27022")
                                                //{
                                                //    DateTime _ngay1 = DateTime.Now;
                                                //    DateTime _ngay2 = dt_NgayChuyen.DateTime;
                                                //}
                                            }
                                            else if (radGiaiQuyet.SelectedIndex == 0)
                                            {
                                                var ktrv = DaTaContext.RaViens.Where(p => p.MaBNhan == _int_maBN).ToList();
                                                if (ktrv.Count <= 0)
                                                {
                                                    barRaVien_ItemClick(null, null);
                                                }
                                            }
                                            else if (radGiaiQuyet.SelectedIndex == 2)
                                            {
                                                var ktrv = DaTaContext.RaViens.Where(p => p.MaBNhan == _int_maBN).ToList();
                                                if (ktrv.Count <= 0)
                                                {
                                                    barChuyenVien_ItemClick(null, null);
                                                }
                                            }
                                            // kt
                                            //

                                            #region sửa thành trạng thái đã khám nếu xóa hết các chỉ định
                                            //dung310516


                                            #endregion




                                            // set chi phí phòng khám cho khoa điều trị bv tứ kỳ 30007
                                            //  string _mabn = txtMaBNhan.Text;
                                            if (DungChung.Bien.MaBV == "30007" || DungChung.Bien.MaBV == "30010")
                                            {
                                                int _idkb = 0;
                                                var _getIDKB = DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN).OrderByDescending(p => p.IDKB).ToList();
                                                if (_getIDKB.Count > 0)
                                                    _idkb = _getIDKB.First().IDKB;

                                                var kt2 = (from
                                                            dt in DaTaContext.DThuocs.Where(p => p.MaBNhan == _int_maBN)
                                                           join dtct in DaTaContext.DThuoccts on dt.IDDon equals dtct.IDDon
                                                           where dtct.IDKB == null || dtct.IDKB <= 0
                                                           select dtct).ToList();

                                                int makpnt = lupKhoaKhamkb.EditValue == null ? 0 : Convert.ToInt32(lupKhoaKhamkb.EditValue);
                                                foreach (var b in kt2)
                                                {
                                                    var kp = DaTaContext.VaoViens.Where(p => p.MaBNhan == _int_maBN).ToList();
                                                    if (kp.Count > 0 && kp.First().MaKP != null && kp.First().MaKP.ToString() != "")
                                                    {

                                                        b.MaKP = makpnt;
                                                        b.IDKB = _idkb;
                                                        DaTaContext.SaveChanges();
                                                    }

                                                }
                                                var kt3 = (from
                                                           dt in DaTaContext.DThuocs.Where(p => p.MaBNhan == _int_maBN)
                                                           join dtct in DaTaContext.DThuoccts on dt.IDDon equals dtct.IDDon
                                                           join kp in DaTaContext.KPhongs.Where(p => p.PLoai == "Phòng khám") on dtct.MaKP equals kp.MaKP
                                                           select dtct).ToList();

                                                foreach (var b in kt3)
                                                {
                                                    var kp = DaTaContext.VaoViens.Where(p => p.MaBNhan == _int_maBN).ToList();
                                                    if (kp.Count > 0 && kp.First().MaKP != null && kp.First().MaKP.ToString() != "")
                                                    {

                                                        b.MaKP = makpnt;
                                                        b.IDKB = _idkb;
                                                        DaTaContext.SaveChanges();
                                                    }

                                                }
                                            }
                                            xtraDieuTri.Text = "Chẩn đoán";
                                            DungChung.Bien.CoTheChuyen = true;
                                            TTLuu = 0;
                                            EnableControlKB(false);
                                            EnableButton(true);
                                            grcChuyenKhoa.DataSource = null;
                                            var query = DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN).OrderByDescending(p => p.IDKB).ToList();
                                            grcChuyenKhoa.DataSource = query.ToList();
                                            labThongBaoBNCP.Text = ThongBaoBNChuyenPK();
                                            switch (radGiaiQuyet.SelectedIndex)
                                            {
                                                case 0:
                                                    barRaVien_ItemClick(null, null);
                                                    break;
                                                case 2:
                                                    barChuyenVien_ItemClick(null, null);
                                                    break;
                                            }
                                            //TimKiem();
                                        }
                                    }
                                }
                                #endregion
                                #region
                                else
                                {
                                    if (TTLuu == 2) // Sửa
                                    {
                                        if (!string.IsNullOrEmpty(txtIdkb.Text))
                                        {
                                            //if (!DungChung.Ham.KTQuaSoLanKB(DaTaContext, lupNguoiKhamkb.EditValue.ToString(), 65, dtNgayKhamkb.DateTime))
                                            //    MessageBox.Show("Bác sĩ: " + lupNguoiKhamkb.Text + ", đã khám quá số lần giới hạn: 65 lần/ngày");
                                            int id = Int32.Parse(txtIdkb.Text);
                                            BNKB KhamBenh = DaTaContext.BNKBs.Single(p => p.IDKB == id);
                                            KhamBenh.MaBNhan = _int_maBN;
                                            KhamBenh.NgayKham = dtNgayKhamkb.DateTime;
                                            KhamBenh.MaKP = lupKhoaKhamkb.EditValue == null ? 0 : Convert.ToInt32(lupKhoaKhamkb.EditValue);
                                            //if (!string.IsNullOrEmpty(txtSoVV.Text))
                                            //    KhamBenh.SoVV = Convert.ToInt32(txtSoVV.Text);
                                            if (lupMaICDkb.EditValue != null)
                                                KhamBenh.MaICD = lupMaICDkb.EditValue.ToString();
                                            else
                                                KhamBenh.MaICD = "";

                                            if (DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14017" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "24272")
                                            {
                                                KhamBenh.ChanDoan = txtBenhChinh.Text;
                                            }
                                            else
                                            {
                                                KhamBenh.ChanDoan = lupChanDoanKb.Text;

                                            }
                                            if (DungChung.Bien.MaBV == "14017")
                                            {
                                                KhamBenh.MaICD2 = lupKhac.EditValue.ToString().Trim();//.Replace(", ", ";");
                                            }
                                            else if (DungChung.Bien.MaBV == "30009")
                                            {
                                                if (LupICD2.EditValue != null)
                                                    icd[0] = LupICD2.EditValue.ToString();
                                                if (LupICD3.EditValue != null)
                                                    icd[1] = LupICD3.EditValue.ToString();
                                                if (LupICD4.EditValue != null)
                                                    icd[2] = LupICD4.Text.ToString();//benh khac
                                                if (LupICD4.EditValue != null)
                                                    icd[3] = LupICD44.Text.ToString();
                                                if (LupICD4.EditValue != null)
                                                    icd[4] = LupICD55.Text.ToString();
                                                string maicd = string.Join(";", icd);
                                                KhamBenh.MaICD2 = maicd;
                                            }
                                            else
                                            {
                                                if (LupICD2.EditValue != null)
                                                    icd[0] = LupICD2.EditValue.ToString();
                                                if (LupICD3.EditValue != null)
                                                    icd[1] = LupICD3.EditValue.ToString();
                                                if (LupICD4.EditValue != null)
                                                    icd[2] = LupICD4.Text.ToString();
                                                string maicd = string.Join(";", icd);
                                                KhamBenh.MaICD2 = maicd;
                                            }

                                            string _benhphu = "";

                                            if (DungChung.Bien.MaBV == "30002")
                                            {
                                                _benhphu = "(Bệnh phụ)";
                                                if (txtBenhKhac2.Text.Trim().Length > 0)
                                                    benhkhac[0] = txtBenhKhac2.Text.Trim() + _benhphu;
                                                if (txtBenhKhac3.Text.Trim().Length > 0)
                                                    benhkhac[1] = txtBenhKhac3.Text.Trim() + _benhphu;
                                                if (txtBenhKhac4.Text.Trim().Length > 0)
                                                    benhkhac[2] = txtBenhKhac.Text.Trim() + _benhphu;
                                            }
                                            else if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "24297")
                                            {
                                                _benhphu = " ";
                                                if (txtBenhPhu2.Text.Trim().Length > 0)
                                                    benhkhac[0] = txtBenhPhu2.Text.Trim() + _benhphu;
                                                if (txtBenhPhu3.Text.Trim().Length > 0)
                                                    benhkhac[1] = txtBenhPhu3.Text.Trim() + _benhphu;
                                                if (txtBenhKhac.Text.Trim().Length > 0)
                                                    benhkhac[2] = txtBenhKhac.Text.Trim() + _benhphu;
                                            }
                                            else if (DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24272")
                                            {
                                                benhkhac[0] = txtBenhPhu2.Text.Trim() + _benhphu;
                                                benhkhac[1] = txtBenhPhu3.Text.Trim() + _benhphu;
                                                benhkhac[2] = txtBenhKhac.Text.Trim() + _benhphu;
                                            }
                                            else if (DungChung.Bien.MaBV == "30009")
                                            {
                                                if (txtBenhPhu2.Text.Trim().Length > 0)
                                                    benhkhac[0] = txtBenhPhu2.Text + _benhphu;
                                                if (txtBenhPhu3.Text.Trim().Length > 0)
                                                    benhkhac[1] = txtBenhPhu3.Text + _benhphu;
                                                if (txtBenhKhac.Text.Trim().Length > 0)
                                                    benhkhac[2] = txtBenhKhac.Text + _benhphu;
                                                if (txtBenhPhu4.Text.Trim().Length > 0)
                                                    benhkhac[3] = txtBenhPhu4.Text + _benhphu;
                                                if (txtBenhPhu5.Text.Trim().Length > 0)
                                                    benhkhac[4] = txtBenhPhu5.Text + _benhphu;
                                            }
                                            else
                                            {

                                                benhkhac[0] = txtBenhKhac2.Text.Trim() + _benhphu;
                                                benhkhac[1] = txtBenhKhac3.Text.Trim() + _benhphu;
                                                benhkhac[2] = txtBenhKhac.Text.Trim() + _benhphu;
                                            }


                                            string maicd1 = string.Join(";", benhkhac);
                                            if (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017" || DungChung.Bien.MaBV == "24297")
                                            {
                                                KhamBenh.MaYHCT = DungChung.Ham.GetMaYHCT(lupMaICDkb.Text, _licd10)[0];
                                                KhamBenh.ChanDoanYHCT = DungChung.Ham.GetMaYHCT(lupMaICDkb.Text, _licd10)[1];
                                                KhamBenh.MaYHCT2 = DungChung.Ham.GetMaYHCT(KhamBenh.MaICD2, _licd10)[0];
                                                KhamBenh.BenhKhacYHCT = DungChung.Ham.GetMaYHCT(KhamBenh.MaICD2, _licd10)[1];
                                            }
                                            KhamBenh.BenhKhac = DungChung.Bien.MaBV == "14017" ? txtBenhKhac1.Text.Trim() : maicd1;
                                            int status = 1;
                                            KhamBenh.PhuongAn = radGiaiQuyet.SelectedIndex;
                                            if (!string.IsNullOrEmpty(lupKhoaDT.Text))
                                            {
                                                KhamBenh.MaKPdt = lupKhoaDT.EditValue == null ? 0 : Convert.ToInt32(lupKhoaDT.EditValue);

                                                //status = 0;
                                                //Ham._setStatus(Convert.ToInt32(txtMaBNhan.Text.Trim()), 1, Convert.ToInt32(lupKhoaDT.EditValue));
                                            }
                                            else
                                            {
                                                KhamBenh.MaKPdt = 0;

                                            }
                                            if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                                            {
                                                if (lupKhoaDTKH.EditValue != null || lupKhoaDTKH.EditValue != "0")
                                                    KhamBenh.MaKPDTKH = int.Parse(lupKhoaDTKH.EditValue.ToString());
                                                else
                                                    KhamBenh.MaKPDTKH = null;
                                            }
                                            //if (!string.IsNullOrEmpty(lupKhoaDT.Text))
                                            //{
                                            //    KhamBenh.MaKPdt = lupKhoaDT.EditValue == null ? 0 : Convert.ToInt32(lupKhoaDT.EditValue);
                                            //    KhamBenh.PhuongAn = 3;
                                            //    //status = 0;
                                            //    //DungChung.Ham._setStatus(txtMaBNhan.Text.Trim(), 1, lupKhoaDT.EditValue.ToString());
                                            //}
                                            //else
                                            //{
                                            //    KhamBenh.MaKPdt = 0;
                                            //    KhamBenh.PhuongAn = -1;
                                            //}

                                            KhamBenh.MaCB = lupNguoiKhamkb.EditValue.ToString();
                                            string b = cboBuong.Text.Trim();
                                            string g = cboGiuong.Text.Trim();
                                            if (!string.IsNullOrEmpty(b) && !string.IsNullOrEmpty(g))
                                            {
                                                var qbnkb = DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN && p.IDKB != id && p.Buong == b && p.Giuong == g).ToList();
                                                if (qbnkb.Count > 0)
                                                    MessageBox.Show("Buồng " + b + ", giường " + g + " đã được sử dụng cho bệnh nhân này, bạn không cần kê lại");
                                            }

                                            if (ckcchuyenBG.Checked)
                                            {
                                                KhamBenh.Buong += cboBuong.Text.Trim() != "" ? (";" + cboBuong.Text.Trim()) : "";
                                                KhamBenh.Giuong += cboGiuong.Text.Trim() != "" ? (";" + cboGiuong.Text.Trim()) : "";
                                                KhamBenh.NgayChuyenBG += ";" + dtTGChuyenBuongGiuong.DateTime.ToString("dd/MM/yyyy HH:mm:ss");
                                            }
                                            else
                                            {
                                                if (KhamBenh.Buong.Contains(";") && KhamBenh.Giuong.Contains(";"))
                                                {
                                                    string[] arrBuong = KhamBenh.Buong.Split(';');
                                                    string BuongNew = "", GiuongNew = "";
                                                    for (int i = 0; i < arrBuong.Length - 1; i++)
                                                    {
                                                        BuongNew += ";" + arrBuong[i];
                                                    }
                                                    string[] arrGiuong = KhamBenh.Giuong.Split(';');
                                                    for (int i = 0; i < arrGiuong.Length - 1; i++)
                                                    {
                                                        GiuongNew += ";" + arrGiuong[i];
                                                    }
                                                    KhamBenh.Buong = BuongNew.Remove(0, 1) + ";" + cboBuong.Text.Trim();
                                                    KhamBenh.Giuong = GiuongNew.Remove(0, 1) + ";" + cboGiuong.Text.Trim();
                                                }
                                                else
                                                {
                                                    KhamBenh.Buong = cboBuong.Text.Trim();
                                                    KhamBenh.Giuong = cboGiuong.Text.Trim();
                                                }

                                                if (!string.IsNullOrWhiteSpace(KhamBenh.NgayChuyenBG) && dtTGChuyenBuongGiuong.EditValue != null)
                                                {
                                                    var ngay = KhamBenh.NgayChuyenBG.Split(';');
                                                    ngay[ngay.Count() - 1] = dtTGChuyenBuongGiuong.DateTime.ToString("dd/MM/yyyy HH:mm:ss");
                                                    KhamBenh.NgayChuyenBG = string.Join(";", ngay);
                                                }
                                            }
                                            if (cboChuyenKhoa.EditValue != null)
                                                KhamBenh.MaCK = Convert.ToInt16(cboChuyenKhoa.EditValue);
                                            if (!string.IsNullOrEmpty(dt_NgayChuyen.Text) && radGiaiQuyet.SelectedIndex == 3)
                                                KhamBenh.NgayNghi = dt_NgayChuyen.DateTime;
                                            else
                                                KhamBenh.NgayNghi = null;
                                            if (!string.IsNullOrEmpty(txtSoNgaydt.Text))
                                                KhamBenh.SoNgaydt = Convert.ToDouble(txtSoNgaydt.Text);
                                            else
                                                KhamBenh.SoNgaydt = null;
                                            if (DaTaContext.SaveChanges() >= 0)
                                            {
                                                if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                                                {
                                                    DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);

                                                    //Lưu khoa đt kết hợp vào BenhNhan
                                                    var ttbnSave = DaTaContext.BenhNhans.FirstOrDefault(p => p.MaBNhan == _int_maBN);
                                                    if (ttbnSave != null)
                                                    {
                                                        if (lupKhoaDTKH.EditValue != null || lupKhoaDTKH.EditValue != "0")
                                                            ttbnSave.MaKPDTKH = int.Parse(lupKhoaDTKH.EditValue.ToString());
                                                        else
                                                            ttbnSave.MaKPDTKH = null;
                                                        DaTaContext.SaveChanges();
                                                    }
                                                }
                                                //MessageBox.Show("Lưu thành công");
                                                int _chuyenkhoa = 0;
                                                if (lupKhoaKhamkb.EditValue != null)
                                                    _chuyenkhoa = Convert.ToInt32(lupKhoaKhamkb.EditValue);
                                                if (lupKhoaDT.EditValue != null)
                                                    _chuyenkhoa = Convert.ToInt32(lupKhoaDT.EditValue);
                                                if (radGiaiQuyet.SelectedIndex == 3)
                                                {
                                                    TimeSpan aaa = dt_NgayChuyen.DateTime - dtNgayKhamkb.DateTime;
                                                    if (aaa.TotalHours >= 4)
                                                    {
                                                        DialogResult Result = MessageBox.Show("Bệnh nhân chuyển khoa điều trị, bạn có muốn chỉ định ngày giường?", "Thông báo", MessageBoxButtons.YesNo);
                                                        if (Result == DialogResult.Yes)
                                                        {
                                                            frm_CapNhatNgayGiuong frm = new frm_CapNhatNgayGiuong(_int_maBN, dt_NgayChuyen.DateTime, 1);
                                                            frm.ShowDialog();
                                                        }
                                                    }
                                                }
                                                else if (radGiaiQuyet.SelectedIndex == 0)
                                                {
                                                    var ktrv = DaTaContext.RaViens.Where(p => p.MaBNhan == _int_maBN).ToList();
                                                    if (ktrv.Count <= 0)
                                                    {
                                                        barRaVien_ItemClick(null, null);
                                                    }
                                                }
                                                else if (radGiaiQuyet.SelectedIndex == 2)
                                                {
                                                    var ktrv = DaTaContext.RaViens.Where(p => p.MaBNhan == _int_maBN).ToList();
                                                    if (ktrv.Count <= 0)
                                                    {
                                                        barChuyenVien_ItemClick(null, null);
                                                    }
                                                }
                                                #region sửa thành trạng thái đã khám nếu xóa hết các chỉ định
                                                //dung310516
                                                DungChung.Ham._setStatus(_int_maBN, status, _chuyenkhoa);

                                                #endregion

                                                //test
                                                //var kphong = _lKphongall.Where(p => p.MaKP == _chuyenkhoa).ToList();
                                                //if (kphong.Count > 0)
                                                //    MessageBox.Show(kphong.First().TenKP.ToString());
                                                //
                                                // set trang thai cho benh nhân 1. đã khám bệnh


                                                DungChung.Bien.CoTheChuyen = true;
                                                ckcchuyenBG.Checked = false;
                                                ckcchuyenBG.ReadOnly = true;
                                                TTLuu = 0;
                                                EnableControlKB(false);
                                                EnableButton(true);
                                                xtraDieuTri.Text = "Chẩn đoán";
                                                var query = DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN).OrderByDescending(p => p.IDKB).ToList();
                                                grcChuyenKhoa.DataSource = query.ToList();
                                                labThongBaoBNCP.Text = ThongBaoBNChuyenPK();
                                                //switch (radGiaiQuyet.SelectedIndex)
                                                //{
                                                //    case 0:
                                                //        barRaVien_ItemClick(null, null);
                                                //        break;
                                                //    case 2:
                                                //        barChuyenVien_ItemClick(null, null);
                                                //        break;
                                                //}
                                                //usDieuTri_Load(sender, e);
                                                //TimKiem();
                                            }
                                        }
                                        grcvChuyenKhoa_FocusedRowChanged(null, null);
                                    }
                                }
                                #endregion
                            }

                        }
                        else
                        {
                            xtraDieuTri.Text = "Chẩn đoán";
                        }
                        break;
                    #endregion lưu điều trị
                    //lưu kê đơn
                    #region lưu kê đơn
                    case 2:
                        if (KTraKD() && DungChung.Ham.CheckNgay(Convert.ToDateTime(grvBNhankb.GetFocusedRowCellValue(colNNhap)), dtNgayKe.DateTime))
                        {
                            DateTime _tungay = DungChung.Ham.NgayTu(dtNgayKe.DateTime);
                            DateTime _ngayden = DungChung.Ham.NgayDen(dtNgayKe.DateTime);
                            bool _dy = false;
                            sothang = 1;
                            int _makho = Convert.ToInt32(lupKhoXuat.EditValue);
                            var khoKe = DaTaContext.KPhongs.FirstOrDefault(o => o.MaKP == _makho);
                            string _cbke = lupNguoiKe.EditValue.ToString();
                            int kieudon = cboKieuDon.SelectedIndex;
                            if (cboKieuDon.SelectedItem.ToString() == "Ngoại trú")
                            {
                                kieudon = -1;
                            }
                            if (int.TryParse(cboSoThangNgay.Text, out sothang))
                                sothang = int.Parse(cboSoThangNgay.Text);
                            int _idkb = 0;
                            int _makpKD = 0, _makpkb = 0;
                            bool checkton = true;
                            bool checktrongbh = true;
                            _makpKD = lupBPKe.EditValue == null ? 0 : Convert.ToInt32(lupBPKe.EditValue);

                            var ktkpkb = (from bnkb in DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN).OrderByDescending(p => p.IDKB) select bnkb).ToList();
                            if (ktkpkb.Count > 0)
                            {
                                _idkb = ktkpkb.First().IDKB;
                                _makpkb = ktkpkb.First().MaKP == null ? 0 : ktkpkb.First().MaKP.Value;
                            }
                            for (int i = 0; i < grvDonThuocct.DataRowCount; i++)
                            {
                                if (grvDonThuocct.GetRowCellValue(i, colMaDVdt) != null && grvDonThuocct.GetRowCellValue(i, colMaDVdt).ToString() != "")
                                {
                                    int mdv = grvDonThuocct.GetRowCellValue(i, colMaDVdt) == null ? 0 : Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, colMaDVdt));
                                    if (DungChung.Bien.MaBV == "24272" || DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "27021" || DungChung.Bien.MaBV == "30007" || DungChung.Bien.MaBV == "14017")
                                    {
                                        var ktdy = _lDichvu.Where(p => p.MaDV == mdv && p.DongY == 1).ToList();
                                        if (ktdy.Count > 0)
                                            _dy = true;
                                    }
                                }
                                if (grvDonThuocct.GetRowCellValue(i, coltrongBH) != null && grvDonThuocct.GetRowCellValue(i, coltrongBH).ToString() != "")
                                {
                                    int mdv = Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, coltrongBH));
                                    if (mdv < 0 || mdv > 3)
                                        checktrongbh = false;
                                }
                                else
                                    checktrongbh = false;
                            }
                            if (!checktrongbh)
                            {
                                MessageBox.Show("một số thuốc chưa chọn trong, ngoài danh mục BH \nhoặc chưa thiết lập trong danh mục dịch vụ!");
                                return;
                            }
                            if (sothang > 1)
                            {
                                //FormThamSo.frm_checkThuocThang frm = new FormThamSo.frm_checkThuocThang();
                                //frm.getdata = new FormThamSo.frm_checkThuocThang.getString(GetValueSoThang);
                                //frm.ShowDialog();
                                DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                                BNKB bnhankb = DaTaContext.BNKBs.Where(p => p.IDKB == _idkb).FirstOrDefault();
                                _lydodongy = "Từ ngày " + dtNgayKe.DateTime.ToShortDateString() + " đến ngày " + dtNgayKe.DateTime.Date.AddDays(sothang - 1).ToShortDateString(); ;
                                if (bnhankb != null)
                                {
                                    bnhankb.GhiChu = _lydodongy;
                                    DaTaContext.SaveChanges();
                                    DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                                }
                                //for (int i = 0; i < grvDonThuocct.DataRowCount; i++)
                                //{
                                //    grvDonThuocct.SetRowCellValue(i, colLoai, sothang);
                                //    double soluongct = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colSoLuongctdt));
                                //    grvDonThuocct.SetRowCellValue(i, colSoLuong, sothang * soluongct);
                                //}
                            }
                            else
                            {

                            }

                            if (_dy)
                            {
                                ThuocThang thuocThang = new ThuocThang();
                                if (!string.IsNullOrEmpty(mm_ghiChu.Text) && mm_ghiChu.Text.Contains(";"))
                                {
                                    string[] arghichu = mm_ghiChu.Text.Split(';');
                                    thuocThang.SoThang = sothangSua;
                                    if (arghichu.Count() > 1)
                                        thuocThang.TuNgay = Convert.ToDateTime(arghichu[1]);
                                    if (arghichu.Count() > 2)
                                        thuocThang.DenNgay = Convert.ToDateTime(arghichu[2]);
                                    if (arghichu.Count() > 3)
                                        thuocThang.GhiChu = arghichu[3];
                                    if (arghichu.Count() > 4)
                                        thuocThang.CachSac = arghichu[4];
                                    if (arghichu.Count() > 5)
                                        thuocThang.CachUong = arghichu[5];
                                }
                                FormThamSo.frm_checkThuocThang frm = new FormThamSo.frm_checkThuocThang(thuocThang);
                                frm.getdata = new FormThamSo.frm_checkThuocThang.getString(GetValueSoThang);
                                frm.ShowDialog();
                                if (sothangOld < sothangSua && kieudon == 2)// thay đổi số thang => sửa số lượng
                                {
                                    MessageBox.Show("Không thể trả quá số lượng thang cho phép");
                                    return;
                                }
                                if (sothangOld != sothangSua)// thay đổi số thang => sửa số lượng
                                {
                                    bool kt = ktCellChange;
                                    for (int i = 0; i < grvDonThuocct.DataRowCount; i++)
                                    {
                                        grvDonThuocct.SetRowCellValue(i, colLoai, sothangSua);
                                        if (grvDonThuocct.GetRowCellValue(i, colSoLuongct) != null && grvDonThuocct.GetRowCellValue(i, colSoLuongct).ToString() != "" && grvDonThuocct.GetRowCellValue(i, colSoLuongct).ToString() != string.Empty)
                                        {
                                            double soluong = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colSoLuongctdt));
                                            ktCellChange = true;
                                            grvDonThuocct.SetRowCellValue(i, colSoLuongctdt, 0);
                                            grvDonThuocct.SetRowCellValue(i, colSoLuongctdt, soluong);
                                        }
                                    }

                                }
                                //DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                                //BNKB bnhankb = DaTaContext.BNKBs.Where(p => p.IDKB == idbnkb).FirstOrDefault();
                                //if (bnhankb != null)
                                //{
                                //    bnhankb.GhiChu = txtGhiChu.Text;
                                //    DaTaContext.SaveChanges();
                                //    DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                                //}
                            }

                            #region tạo đơn mới
                            if (TTLuu == 1)//tạo đơn mới
                            {
                                bool taomoi = true;
                                var kt = (from dt in DaTaContext.DThuocs.Where(p => p.MaBNhan == _int_maBN)
                                          where (dt.NgayKe.Value.Day == dtNgayKe.DateTime.Day && dt.NgayKe.Value.Month == dtNgayKe.DateTime.Month && dt.NgayKe.Value.Year == dtNgayKe.DateTime.Year)
                                          where (dt.KieuDon == kieudon)
                                          select dt.IDDon).ToList();
                                if (kt.Count > 0)
                                {
                                    DialogResult _result = MessageBox.Show("ngày " + dtNgayKe.DateTime.ToString().Substring(0, 10) + " Bn đã có đơn: " + cboKieuDon.Text + " Bạn vẫn muốn kê thêm đơn?", "Hỏi lưu", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                                    if (_result == DialogResult.No)
                                    {
                                        taomoi = false;
                                    }
                                } // lấy IDKB


                                _makpKD = lupBPKe.EditValue == null ? 0 : Convert.ToInt32(lupBPKe.EditValue);
                                var benhNhanKPKH = DaTaContext.BenhNhans.FirstOrDefault(o => o.MaBNhan == _int_maBN);
                                int _nhomKP = 0;
                                if (taomoi)
                                {

                                    if (_idkb <= 0)
                                    {
                                        MessageBox.Show("Bệnh nhân chưa có chẩn đoán, bạn không thể kê đơn");
                                        taomoi = false;
                                    }
                                }
                                string _chuyenkhoaKD = "";
                                if (taomoi)
                                {
                                    var ktNhomKP = _lKphongall.Where(p => p.MaKP == _makpKD).ToList();

                                    if (ktNhomKP.Count > 0 && ktNhomKP.First().ChuyenKhoa != null)
                                        _chuyenkhoaKD = ktNhomKP.First().ChuyenKhoa;
                                    if (_chuyenkhoaKD == "Trực cấp cứu")
                                    {
                                        if (ktNhomKP.Count > 0 && ktNhomKP.First().NhomKP != null)
                                            _nhomKP = ktNhomKP.First().NhomKP == null ? 0 : Convert.ToInt32(ktNhomKP.First().NhomKP);
                                    }
                                    if (DungChung.Bien.MaBV == "30009*")
                                    {
                                        if (_makpkb != _makpKD && _makpkb != _nhomKP && ChuyenKhoa != "Phẫu thuật" && _chuyenkhoaKD != "Trực cấp cứu")
                                        {
                                            MessageBox.Show("Bệnh nhân đang được điều trị tại khoa khác, bạn không thể kê đơn");
                                            taomoi = false;
                                        }
                                    }
                                    else
                                    {
                                        if ((DungChung.Bien.MaBV == "14017" ? (benhNhanKPKH.MaKPDTKH != _makpKD && benhNhanKPKH.MaKPDTKH != _nhomKP && _makpkb != _makpKD && _makpkb != _nhomKP) : (_makpkb != _makpKD && _makpkb != _nhomKP)) && ChuyenKhoa != "Phẫu thuật")
                                        {
                                            MessageBox.Show("Bệnh nhân đang được điều trị tại khoa khác, bạn không thể kê đơn");
                                            taomoi = false;
                                        }
                                    }
                                }
                                //if()
                                if (taomoi && (DungChung.Bien.MaBV == "14017" ? (benhNhanKPKH.MaKPDTKH != _makpKD && benhNhanKPKH.MaKPDTKH != _nhomKP && (_makpkb != _makpKD && _makpkb != _nhomKP)) : (_makpkb != _makpKD && _makpkb != _nhomKP)))
                                {
                                    if (DungChung.Bien.MaBV == "30009")
                                    {
                                        if (ChuyenKhoa != "Phẫu thuật" && _chuyenkhoaKD != "Trực cấp cứu")
                                        {
                                            MessageBox.Show("Bệnh nhân đang được điều trị tại khoa khác, bạn không thể kê đơn");
                                            taomoi = false;
                                        }
                                    }
                                    else
                                    {
                                        if (ChuyenKhoa != "Phẫu thuật")
                                        {
                                            MessageBox.Show("Bệnh nhân đang được điều trị tại khoa khác, bạn không thể kê đơn");
                                            taomoi = false;
                                        }
                                    }

                                }
                                //string _tenthuockogia = "";
                                //for (int i = 0; i < grvDonThuocct.DataRowCount; i++)
                                //{
                                //    double gia = 0;
                                //    if (grvDonThuocct.GetRowCellValue(i, colDonGia) != null && grvDonThuocct.GetRowCellValue(i, colDonGia).ToString() != "")
                                //    {
                                //        gia = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colDonGia).ToString());

                                //    }
                                //    if (gia <= 0) _tenthuockogia += grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + "; ";
                                //}
                                //if (!string.IsNullOrEmpty(_tenthuockogia))
                                //{
                                //    MessageBox.Show(string.Format("Các thuốc: {0} chưa có giá", _tenthuockogia));
                                //    return;
                                //}
                                //int iddtbn = 0;
                                //if (grvBNhankb.GetFocusedRowCellValue(colIDDTBNhan) != null)
                                //    iddtbn = Convert.ToInt32(grvBNhankb.GetFocusedRowCellValue(colIDDTBNhan));
                                if ((DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24389") && iddtbn == 2)
                                {
                                    double TongTienT = 0;
                                    for (int i = 0; i < grvDonThuocct.DataRowCount; i++)
                                    {
                                        if (grvDonThuocct.GetRowCellValue(i, colMaDVdt) != null)
                                        {
                                            if (DungChung.Bien.MaBV == "27022")
                                            {
                                                TongTienT += Math.Round(Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colThanhTien)), DungChung.Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                            }
                                            else
                                            {
                                                TongTienT += Math.Round(Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colThanhTien)), DungChung.Bien.LamTronSo);
                                            }

                                        }
                                    }
                                    bool checkKtraCP = true;
                                    if (DungChung.Bien.MaBV == "01049")
                                    {
                                        var benhnhan = DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN && p.NoiTru == 0).FirstOrDefault();
                                        if (benhnhan != null && benhnhan.NNhap != null)
                                        {

                                            if (DungChung.Ham.CheckNGioHC(benhnhan.NNhap.Value))
                                                checkKtraCP = false;
                                        }
                                    }

                                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                                    {
                                        var ttbs = DaTaContext.TTboXungs.FirstOrDefault(p => p.MaBNhan == _int_maBN);
                                        if (ttbs != null && ttbs.HTThanhToan == 1)
                                        {
                                            checkKtraCP = false;
                                        }
                                    }
                                    if (DungChung.Bien.MaBV == "24012" && TTBn.FirstOrDefault().CapCuu == 1)
                                    {
                                        checkKtraCP = false;
                                    }
                                    if (checkKtraCP)
                                    {
                                        if (!KtraChiPhi(DaTaContext, _int_maBN, TongTienT, -1))
                                        {
                                            taomoi = false;
                                            MessageBox.Show("Tổng chi phí vượt quá tổng tạm thu");
                                        }
                                    }
                                }
                                //kt
                                if (taomoi)
                                {
                                    double _soluongton = 0;
                                    double _soluongkt = 0;
                                    for (int i = 0; i < grvDonThuocct.DataRowCount; i++)
                                    {
                                        if (grvDonThuocct.GetRowCellValue(i, colMaDVdt) != null)
                                        {
                                            if (grvDonThuocct.GetRowCellValue(i, colDonGia) != null && grvDonThuocct.GetRowCellValue(i, colDonGia).ToString() != "" && Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colDonGia)) >= 0)
                                            {
                                                if (grvDonThuocct.GetRowCellValue(i, colSoLuong) != null && grvDonThuocct.GetRowCellValue(i, colSoLuong).ToString() != "")
                                                {
                                                    _soluongkt = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colSoLuong));
                                                    //int mdv = Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, colMaDVdt));
                                                    //var dvKe = _lAllDichVu.FirstOrDefault(o => o.MaDV == mdv);
                                                    if (_soluongkt == 0)
                                                    {
                                                        MessageBox.Show("thuốc: " + grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + " số lượng bằng 0");
                                                        return;
                                                    }
                                                    else if (grvDonThuocct.GetRowCellValue(i, collan) == null)//(grvDonThuocct.GetRowCellValue(i, collan) == null && DungChung.Bien.MaBV != "14017") || (DungChung.Bien.MaBV == "14017" && dvKe != null && dvKe.DongY != 1 && grvDonThuocct.GetRowCellValue(i, collan) == null))
                                                    {
                                                        MessageBox.Show("thuốc: " + grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + " chưa nhập số lần uống");
                                                        return;
                                                    }
                                                    else if (grvDonThuocct.GetRowCellValue(i, colLuong) == null)//(grvDonThuocct.GetRowCellValue(i, colLuong) == null && DungChung.Bien.MaBV != "14017") || (DungChung.Bien.MaBV == "14017" && dvKe != null && dvKe.DongY != 1 && grvDonThuocct.GetRowCellValue(i, colLuong) == null))
                                                    {
                                                        MessageBox.Show("thuốc: " + grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + " chưa nhập số lần lượng uống");
                                                        return;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    //tạo trên DonThuoc
                                    DThuoc dthuoc = new DThuoc();
                                    dthuoc.MaBNhan = _int_maBN;
                                    dthuoc.NgayKe = dtNgayKe.DateTime;
                                    dthuoc.GhiChu = mm_ghiChu.Text;
                                    dthuoc.MaKP = lupBPKe.EditValue == null ? 0 : Convert.ToInt32(lupBPKe.EditValue);
                                    dthuoc.MaCB = _cbke;
                                    dthuoc.MaKXuat = _makho;
                                    dthuoc.IDDon_Mau = iddthuocmau > 0 ? (int?)iddthuocmau : null;
                                    dthuoc.IsMuaNgoai = (khoKe != null && khoKe.IsMuaNgoai == true);
                                    dthuoc.PLDV = 1;
                                    if (sothang > 1)
                                    {
                                        dthuoc.GhiChu = mm_ghiChu.Text;
                                    }
                                    if (!string.IsNullOrEmpty(cboKieuDon.Text))
                                    {
                                        dthuoc.KieuDon = kieudon;
                                    }
                                    // dthuoc.LoaiDuoc = cboNhomDuoc.SelectedIndex;
                                    if (!string.IsNullOrEmpty(txtSoVV2.Text))
                                    {
                                        bool ktra = false;
                                        int sovaovien = 0;
                                        if (Int32.TryParse(txtSoVV2.Text, out rs))
                                        {
                                            sovaovien = Convert.ToInt32(txtSoVV2.Text);
                                        }
                                        dthuoc.SoVV = sovaovien;
                                        // int makpvv = DungChung.Bien.PP_SoVV == 1 ? (dthuoc.MaKP ?? 0) : 0;  
                                        if (DungChung.Bien.PP_SoVV == 1 || DungChung.Bien.PP_SoVV == 2)
                                            ktra = true;
                                        //var qsopl = DaTaContext.SoPLs.Where(panelControl1 => panelControl1.PhanLoai == 2 && panelControl1.MaKP == makpvv).Where(p => p.SoPL1 >= sovaovien).ToList();
                                        //if(qsopl.Count == 0)
                                        //    DungChung.Ham.SetSoPL(makpvv, sovaovien, 2);
                                        int makpvv = DungChung.Bien.PP_SoVV == 1 ? (dthuoc.MaKP ?? 0) : 0;
                                        if (ktra)
                                        {
                                            if (!DungChung.Ham.checkSoPL(makpvv, sovaovien, 2, -1))
                                            {
                                                DungChung.Ham.SetSoPL(makpvv, sovaovien, 2, -1);

                                            }
                                            else
                                            {
                                                DungChung.Ham.SetSoPL(makpvv, 1, 2, -1);
                                                setSoVV();
                                                // btnLuu_Click(sender, e);
                                            }
                                        }
                                    }
                                    else
                                        dthuoc.SoVV = null;

                                    DaTaContext.DThuocs.Add(dthuoc);
                                    //Tạo trên đơn thuốc chi tiết (donthuocct)
                                    if (DaTaContext.SaveChanges() >= 0)
                                    {
                                        bool _Ketutruc = false;
                                        //int makho = lupKhoXuat.EditValue == null ? 0 : Convert.ToInt32(lupKhoXuat.EditValue);
                                        var kttutruc = _lKphongall.Where(p => p.MaKP == _makho).Where(p => p.PLoai.Contains("Tủ trực")).ToList();
                                        if (kttutruc.Count > 0)// kiểm tra tủ trực
                                        {
                                            _Ketutruc = true;
                                        }
                                        string _ylenh = "";
                                        bool DTNT = false;
                                        if (TTBn.Count() > 0 && TTBn.First().DTNT == true)
                                            DTNT = true;
                                        int maxid = dthuoc.IDDon;
                                        int sttyl = 1;
                                        string message = "";
                                        for (int i = 0; i < grvDonThuocct.DataRowCount; i++)
                                        {
                                            if (DungChung.Bien.MaBV == "24009")
                                            {
                                                if (grvDonThuocct.GetRowCellValue(i, colMaDVdt) != null)
                                                {
                                                    isNotVatTu = false;
                                                    int madv = Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, colMaDVdt));
                                                    var idnhom = (from dv in DaTaContext.DichVus.Where(p => p.MaDV == madv)
                                                                  join tn in DaTaContext.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                                                  select tn.IDNhom).FirstOrDefault();
                                                    if (idnhom != 10 && idnhom != 11)
                                                    {
                                                        isLuuDienBien = true;
                                                        isNotVatTu = true;
                                                    }
                                                }
                                            }
                                            //if (grvDonThuocct.GetRowCellDisplayText(i, colTTLuu) != null && grvDonThuocct.GetRowCellDisplayText(i, colTTLuu).ToString() == "1")
                                            //{
                                            if (grvDonThuocct.GetRowCellValue(i, colMaDVdt) != null)
                                            {
                                                if (grvDonThuocct.GetRowCellValue(i, colDonGia) != null && grvDonThuocct.GetRowCellValue(i, colDonGia).ToString() != "" && Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colDonGia)) >= 0)
                                                {
                                                    if (grvDonThuocct.GetRowCellValue(i, colSoLuong) != null && grvDonThuocct.GetRowCellValue(i, colSoLuong).ToString() != "")
                                                    {
                                                        int mdv = Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, colMaDVdt));
                                                        //int _makho = lupKhoXuat.EditValue == null ? 0 : Convert.ToInt32(lupKhoXuat.EditValue);
                                                        double _dongia = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colDonGia).ToString());
                                                        // kiểm tra tồn trước khi lưu
                                                        _soluongkt = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colSoLuong));
                                                        string solo = "";
                                                        if (grvDonThuocct.GetRowCellValue(i, colSoLo) != null)
                                                            solo = grvDonThuocct.GetRowCellValue(i, colSoLo).ToString();
                                                        //string _macbke = lupNguoiKe.EditValue.ToString();

                                                        //if (DungChung.Bien.MaBV == "01071")
                                                        //{
                                                        //    int trongBH = 0;
                                                        //    if (grvDonThuocct.GetRowCellValue(i, coltrongBH) != null && grvDonThuocct.GetRowCellValue(i, coltrongBH).ToString() != "")
                                                        //    {
                                                        //        trongBH = Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, coltrongBH));
                                                        //    }
                                                        //    DungChung.Ham._getGiaSD(DaTaContext, mdv, _dongia, trongBH, 2, makho, dtNgayKe.DateTime);//(DaTaContext, mdv, makho, 1, gia, 0, macc);
                                                        //    _soluongton = DungChung.Bien.SoLuongTon;

                                                        //}
                                                        //else
                                                        //{
                                                        if (kieudon != 2)
                                                        {

                                                            _soluongton = DungChung.Ham._checkTon_KD(DaTaContext, mdv, _makho, _dongia, 0, solo);
                                                            if (DungChung.Bien.MaBV == "24012")
                                                            {
                                                                DateTime? handung = new DateTime();
                                                                if (grvDonThuocct.GetRowCellValue(i, colHanDung) != null && grvDonThuocct.GetRowCellValue(i, colHanDung).ToString() != "")
                                                                    handung = Convert.ToDateTime(grvDonThuocct.GetRowCellValue(i, colHanDung));
                                                                _soluongton = DungChung.Ham._checkTon_KD1(DaTaContext, mdv, _makho, _dongia, 0, solo, handung);
                                                            }
                                                        }
                                                        else
                                                        {
                                                            var duoc = (from nduoc in DaTaContext.DThuocs.Where(p => p.MaBNhan == _int_maBN && p.MaKXuat == _makho).Where(p => p.MaCB == _cbke)//&& ((ktratt && p.Status == 0) || (p.KieuDon == 2 ? true : p.Status == 1)))//  )
                                                                        join nhapduoc in DaTaContext.DThuoccts.Where(p => p.MaDV == mdv && p.DonGia == _dongia).Where(p => p.NgayNhap >= _tungay && p.NgayNhap <= _ngayden) on nduoc.IDDon equals nhapduoc.IDDon
                                                                        where ((nhapduoc.Status == 0) || (nduoc.KieuDon == 2 ? true : nhapduoc.Status == 1))//  )
                                                                        group new { nhapduoc, nduoc } by new { nhapduoc.MaDV } into kq
                                                                        select new { kq.Key, soluong = kq.Sum(p => p.nhapduoc.SoLuong) }).ToList();
                                                            _soluongton = duoc.Sum(p => p.soluong);
                                                            _soluongkt = _soluongkt * (-1);
                                                        }

                                                        // kiểm tra thuốc kê tủ trực và không lĩnh
                                                        int _linh = 0;
                                                        if (grvDonThuocct.GetRowCellValue(i, colStatusct) != null)
                                                            _linh = Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, colStatusct));
                                                        if (_Ketutruc || _linh == -1)
                                                            _soluongton = 100000;

                                                        string mdv_GT = "";
                                                        if (grvDonThuocct.GetRowCellValue(i, colGayTe) != null)
                                                            mdv_GT = Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, colGayTe)) > 0 ? grvDonThuocct.GetRowCellValue(i, colGayTe).ToString() : "";

                                                        //}
                                                        if ((_soluongkt) <= _soluongton || (khoKe != null && khoKe.IsMuaNgoai == true))
                                                        {

                                                            DThuocct dthuocct = new DThuocct();
                                                            dthuocct.IDDon = maxid;
                                                            dthuocct.IDKB = _idkb;
                                                            dthuocct.ThuocDVGayTe = "";
                                                            dthuocct.NgayNhap = dtNgayKe.DateTime;
                                                            dthuocct.MaDV = grvDonThuocct.GetRowCellValue(i, colMaDVdt) == null ? 0 : Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, colMaDVdt));
                                                            var qtenRG = (from dv in DaTaContext.DichVus.Where(p => p.MaDV == dthuocct.MaDV)
                                                                          join tn in DaTaContext.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                                                          select new { tn.TenRG, dv.DongY, }).FirstOrDefault();

                                                            if (DungChung.Bien.MaBV == "30007")
                                                            {
                                                                if (kieudon != 2)
                                                                    _ylenh += grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + " x " + ((DungChung.Bien.MaBV == "30007" && DTNT == true) ? grvDonThuocct.GetRowCellDisplayText(i, colSoLuongctdt) : grvDonThuocct.GetRowCellDisplayText(i, colSoLuong)) + "  " + grvDonThuocct.GetRowCellDisplayText(i, colDonVi) + ((_dy == false && grvDonThuocct.GetRowCellDisplayText(i, colGhiChu) != "") ? (", " + grvDonThuocct.GetRowCellDisplayText(i, colGhiChu)) : "") + ", \n";

                                                            }
                                                            else
                                                            {
                                                                if (qtenRG.TenRG.Contains("Thuốc"))
                                                                {
                                                                    if (kieudon != 2)
                                                                    {
                                                                        if (DungChung.Bien.MaBV == "30005")
                                                                        {
                                                                            _ylenh += grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + " x " + ((grvDonThuocct.GetRowCellDisplayText(i, colGhiChu) != "" && grvDonThuocct.GetRowCellDisplayText(i, colGhiChu) != null) ? (", " + grvDonThuocct.GetRowCellDisplayText(i, colGhiChu)) : "") + ", \n";
                                                                        }
                                                                        else if (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "27023" || DungChung.Bien.MaBV == "14017")
                                                                        {
                                                                            string lieudung = "", duongd = "";
                                                                            if (grvDonThuocct.GetRowCellDisplayText(i, collan) != "")
                                                                                lieudung += " " + grvDonThuocct.GetRowCellDisplayText(i, collan).Trim().ToString();
                                                                            if (grvDonThuocct.GetRowCellDisplayText(i, colmoilan) != "")
                                                                                lieudung += " " + grvDonThuocct.GetRowCellDisplayText(i, colmoilan).Trim().ToString();
                                                                            if (grvDonThuocct.GetRowCellDisplayText(i, colLuong) != "")
                                                                                lieudung += " " + grvDonThuocct.GetRowCellDisplayText(i, colLuong).Trim().ToString();
                                                                            if (grvDonThuocct.GetRowCellDisplayText(i, coldviuong) != "")
                                                                                lieudung += " " + grvDonThuocct.GetRowCellDisplayText(i, coldviuong).Trim().ToString();
                                                                            if (grvDonThuocct.GetRowCellDisplayText(i, colDuongD) != "")
                                                                                duongd = grvDonThuocct.GetRowCellDisplayText(i, colDuongD).Trim().ToString();
                                                                            if (qtenRG.DongY == 1)
                                                                            {
                                                                                _ylenh += grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + " x " + grvDonThuocct.GetRowCellDisplayText(i, colSoLuongctdt) + " " + grvDonThuocct.GetRowCellDisplayText(i, colDonVi) + ((grvDonThuocct.GetRowCellDisplayText(i, colGhiChu) != "" && grvDonThuocct.GetRowCellDisplayText(i, colGhiChu) != null) ? (", " + grvDonThuocct.GetRowCellDisplayText(i, colGhiChu)) : "") + ", \n";
                                                                            }
                                                                            else
                                                                            {
                                                                                if (DungChung.Bien.MaBV == "27023")
                                                                                {
                                                                                    _ylenh += grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + " x " + grvDonThuocct.GetRowCellDisplayText(i, colSoLuongctdt) + " " + grvDonThuocct.GetRowCellDisplayText(i, colDonVi) + ", " + duongd + lieudung + ((grvDonThuocct.GetRowCellDisplayText(i, colGhiChu) != "" && grvDonThuocct.GetRowCellDisplayText(i, colGhiChu) != null) ? ("(" + grvDonThuocct.GetRowCellDisplayText(i, colGhiChu) + ")") : "") + "\n";
                                                                                    sttyl++;
                                                                                }
                                                                                else
                                                                                {
                                                                                    _ylenh += sttyl.ToString() + ". " + grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + " x " + grvDonThuocct.GetRowCellDisplayText(i, colSoLuongctdt) + " " + grvDonThuocct.GetRowCellDisplayText(i, colDonVi) + ": " + duongd + lieudung + ((grvDonThuocct.GetRowCellDisplayText(i, colGhiChu) != "" && grvDonThuocct.GetRowCellDisplayText(i, colGhiChu) != null) ? (", " + grvDonThuocct.GetRowCellDisplayText(i, colGhiChu)) : "") + ", \n";
                                                                                    sttyl++;
                                                                                }

                                                                            }
                                                                        }
                                                                        else if (DungChung.Bien.MaBV == "27001")
                                                                        {
                                                                            _ylenh += grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + " x " + grvDonThuocct.GetRowCellDisplayText(i, colSoLuong) + " " + grvDonThuocct.GetRowCellDisplayText(i, colDonVi) + ((grvDonThuocct.GetRowCellDisplayText(i, colGhiChu) != "" && grvDonThuocct.GetRowCellDisplayText(i, colGhiChu) != null) ? (", \n" + grvDonThuocct.GetRowCellDisplayText(i, colGhiChu)) : "") + ", \n";
                                                                        }
                                                                        else if ((DungChung.Bien.MaBV == "24009" && isNotVatTu) || DungChung.Bien.MaBV != "24009")
                                                                            _ylenh += grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + " x " + grvDonThuocct.GetRowCellDisplayText(i, colSoLuong) + " " + grvDonThuocct.GetRowCellDisplayText(i, colDonVi) + ((grvDonThuocct.GetRowCellDisplayText(i, colGhiChu) != "" && grvDonThuocct.GetRowCellDisplayText(i, colGhiChu) != null) ? (", " + grvDonThuocct.GetRowCellDisplayText(i, colGhiChu)) : "") + ", \n";
                                                                        // _ylenh += grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + " X " + ((DungChung.Bien.MaBV == "30007" && DTNT == true) ? grvDonThuocct.GetRowCellDisplayText(i, colSoLuongctdt) : grvDonThuocct.GetRowCellDisplayText(i, colSoLuong)) + "  " + grvDonThuocct.GetRowCellDisplayText(i, colDonVi) + (((DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "30005") && grvDonThuocct.GetRowCellDisplayText(i, colGhiChu) != "") ? (", " + grvDonThuocct.GetRowCellDisplayText(i, colGhiChu)) : "") + ", \n";
                                                                    }
                                                                }
                                                                if (qtenRG.TenRG.Contains("Hóa chất") && DungChung.Bien.MaBV == "14017")
                                                                {
                                                                    if (kieudon != 2)
                                                                    {
                                                                        string lieudung = "", duongd = "";
                                                                        if (grvDonThuocct.GetRowCellDisplayText(i, collan) != "")
                                                                            lieudung += " " + grvDonThuocct.GetRowCellDisplayText(i, collan).Trim().ToString();
                                                                        if (grvDonThuocct.GetRowCellDisplayText(i, colmoilan) != "")
                                                                            lieudung += " " + grvDonThuocct.GetRowCellDisplayText(i, colmoilan).Trim().ToString();
                                                                        if (grvDonThuocct.GetRowCellDisplayText(i, colLuong) != "")
                                                                            lieudung += " " + grvDonThuocct.GetRowCellDisplayText(i, colLuong).Trim().ToString();
                                                                        if (grvDonThuocct.GetRowCellDisplayText(i, coldviuong) != "")
                                                                            lieudung += " " + grvDonThuocct.GetRowCellDisplayText(i, coldviuong).Trim().ToString();
                                                                        if (grvDonThuocct.GetRowCellDisplayText(i, colDuongD) != "")
                                                                            duongd = grvDonThuocct.GetRowCellDisplayText(i, colDuongD).Trim().ToString();
                                                                        if (qtenRG.DongY == 1)
                                                                        {
                                                                            _ylenh += grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + " x " + grvDonThuocct.GetRowCellDisplayText(i, colSoLuongctdt) + " " + grvDonThuocct.GetRowCellDisplayText(i, colDonVi) + ((grvDonThuocct.GetRowCellDisplayText(i, colGhiChu) != "" && grvDonThuocct.GetRowCellDisplayText(i, colGhiChu) != null) ? (", " + grvDonThuocct.GetRowCellDisplayText(i, colGhiChu)) : "") + ", \n";
                                                                        }
                                                                        else
                                                                        {
                                                                            _ylenh += grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + " x " + grvDonThuocct.GetRowCellDisplayText(i, colSoLuongctdt) + " " + grvDonThuocct.GetRowCellDisplayText(i, colDonVi) + ", " + duongd + lieudung + ((grvDonThuocct.GetRowCellDisplayText(i, colGhiChu) != "" && grvDonThuocct.GetRowCellDisplayText(i, colGhiChu) != null) ? ("(" + grvDonThuocct.GetRowCellDisplayText(i, colGhiChu) + ")") : "") + "\n";
                                                                            sttyl++;
                                                                        }
                                                                    }
                                                                }
                                                                if (qtenRG.TenRG.Contains("Vật tư") && DungChung.Bien.MaBV == "14017")
                                                                {
                                                                    if (kieudon != 2)
                                                                    {
                                                                        string lieudung = "", duongd = "";
                                                                        if (grvDonThuocct.GetRowCellDisplayText(i, collan) != "")
                                                                            lieudung += " " + grvDonThuocct.GetRowCellDisplayText(i, collan).Trim().ToString();
                                                                        if (grvDonThuocct.GetRowCellDisplayText(i, colmoilan) != "")
                                                                            lieudung += " " + grvDonThuocct.GetRowCellDisplayText(i, colmoilan).Trim().ToString();
                                                                        if (grvDonThuocct.GetRowCellDisplayText(i, colLuong) != "")
                                                                            lieudung += " " + grvDonThuocct.GetRowCellDisplayText(i, colLuong).Trim().ToString();
                                                                        if (grvDonThuocct.GetRowCellDisplayText(i, coldviuong) != "")
                                                                            lieudung += " " + grvDonThuocct.GetRowCellDisplayText(i, coldviuong).Trim().ToString();
                                                                        if (grvDonThuocct.GetRowCellDisplayText(i, colDuongD) != "")
                                                                            duongd = grvDonThuocct.GetRowCellDisplayText(i, colDuongD).Trim().ToString();
                                                                        if (qtenRG.DongY == 1)
                                                                        {
                                                                            _ylenh += grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + " x " + grvDonThuocct.GetRowCellDisplayText(i, colSoLuongctdt) + " " + grvDonThuocct.GetRowCellDisplayText(i, colDonVi) + ((grvDonThuocct.GetRowCellDisplayText(i, colGhiChu) != "" && grvDonThuocct.GetRowCellDisplayText(i, colGhiChu) != null) ? (", " + grvDonThuocct.GetRowCellDisplayText(i, colGhiChu)) : "") + ", \n";
                                                                        }
                                                                        else
                                                                        {
                                                                            _ylenh += grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + " x " + grvDonThuocct.GetRowCellDisplayText(i, colSoLuongctdt) + " " + grvDonThuocct.GetRowCellDisplayText(i, colDonVi) + ", " + duongd + lieudung + ((grvDonThuocct.GetRowCellDisplayText(i, colGhiChu) != "" && grvDonThuocct.GetRowCellDisplayText(i, colGhiChu) != null) ? ("(" + grvDonThuocct.GetRowCellDisplayText(i, colGhiChu) + ")") : "") + "\n";
                                                                            sttyl++;
                                                                        }
                                                                    }
                                                                }
                                                            }

                                                            dthuocct.SoLuong = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colSoLuong));
                                                            dthuocct.SoLuongct = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colSoLuongctdt));
                                                            dthuocct.Loai = Convert.ToByte(grvDonThuocct.GetRowCellValue(i, colLoai));

                                                            if (grvDonThuocct.GetRowCellValue(i, colTyLeBHTT_dt) != null)
                                                                dthuocct.TyLeTT = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colTyLeBHTT_dt));
                                                            else
                                                                dthuocct.TyLeTT = 0;
                                                            dthuocct.DonVi = grvDonThuocct.GetRowCellValue(i, colDonVi).ToString().Trim();
                                                            dthuocct.DonGia = _dongia;
                                                            //colSoLuong)) * _dongia * dthuocct.TyLeTT / 100
                                                            if (DungChung.Bien.MaBV == "27022")
                                                            {
                                                                dthuocct.ThanhTien = Math.Round(Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colThanhTien)), DungChung.Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                            }
                                                            else
                                                            {
                                                                dthuocct.ThanhTien = Math.Round(Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colThanhTien)), DungChung.Bien.LamTronSo);
                                                            }

                                                            dthuocct.MaKXuat = _makho;
                                                            dthuocct.IsMuaNgoai = (khoKe != null && khoKe.IsMuaNgoai == true);
                                                            if (grvDonThuocct.GetRowCellValue(i, colSoLo) != null)
                                                                dthuocct.SoLo = grvDonThuocct.GetRowCellValue(i, colSoLo).ToString();
                                                            if (grvDonThuocct.GetRowCellValue(i, colHanDung) != null)
                                                                dthuocct.HanDung = Convert.ToDateTime(grvDonThuocct.GetRowCellValue(i, colHanDung).ToString());
                                                            if (grvDonThuocct.GetRowCellValue(i, colMaCC) != null)
                                                                dthuocct.MaCC = grvDonThuocct.GetRowCellValue(i, colMaCC).ToString();
                                                            if (grvDonThuocct.GetRowCellValue(i, coltrongBH) != null)
                                                                dthuocct.TrongBH = Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, coltrongBH));
                                                            else
                                                                dthuocct.TrongBH = 0;
                                                            int statusct = dthuocct.Status ?? 0;
                                                            if (grvDonThuocct.GetRowCellValue(i, colStatusct) != null)
                                                                statusct = Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, colStatusct));

                                                            dthuocct.Status = statusct;
                                                            if (grvDonThuocct.GetRowCellValue(i, colGhiChu) != null)
                                                                dthuocct.GhiChu = grvDonThuocct.GetRowCellValue(i, colGhiChu).ToString();

                                                            dthuocct.MaKP = lupBPKe.EditValue == null ? 0 : Convert.ToInt32(lupBPKe.EditValue);
                                                            dthuocct.MaKPtk = lupBPKe.EditValue == null ? 0 : Convert.ToInt32(lupBPKe.EditValue);
                                                            if (grvDonThuocct.GetRowCellValue(i, colLuong) != null)
                                                                dthuocct.Luong = grvDonThuocct.GetRowCellValue(i, colLuong).ToString();
                                                            if (grvDonThuocct.GetRowCellValue(i, collan) != null)
                                                                dthuocct.SoLan = Convert.ToString(grvDonThuocct.GetRowCellValue(i, collan)).Trim();
                                                            if (grvDonThuocct.GetRowCellValue(i, colmoilan) != null)
                                                                dthuocct.MoiLan = Convert.ToString(grvDonThuocct.GetRowCellValue(i, colmoilan)).Trim();
                                                            if (grvDonThuocct.GetRowCellValue(i, coldviuong) != null)
                                                                dthuocct.DviUong = Convert.ToString(grvDonThuocct.GetRowCellValue(i, coldviuong)).Trim();
                                                            if (grvDonThuocct.GetRowCellValue(i, colDuongD) != null)
                                                                dthuocct.DuongD = Convert.ToString(grvDonThuocct.GetRowCellValue(i, colDuongD)).Trim();
                                                            if (grvDonThuocct.GetRowCellValue(i, colMienCT) != null)
                                                                dthuocct.Mien = Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, colMienCT));
                                                            dthuocct.MaCB = _cbke;
                                                            dthuocct.STT = i + 1;
                                                            DaTaContext.DThuoccts.Add(dthuocct);
                                                            DaTaContext.SaveChanges();

                                                        }
                                                        else
                                                        {
                                                            if (DungChung.Bien.MaBV == "14017")
                                                            {
                                                                message += "Thuốc: " + grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + " số lượng không đủ" + Environment.NewLine; ;
                                                                continue;
                                                            }
                                                            else
                                                            {
                                                                MessageBox.Show("Thuốc: " + grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + " số lượng không đủ");
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            //}
                                        }

                                        if (!string.IsNullOrWhiteSpace(message))
                                            MessageBox.Show(message);
                                        // lưu diễn biến
                                        if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                                        {
                                            var maKP = lupBPKe.EditValue == null ? 0 : Convert.ToInt32(lupBPKe.EditValue);
                                            if (kieudon == 1 || kieudon == 0)
                                                DungChung.Ham.Update_STT_ThuocGNHT(DaTaContext, _int_maBN);
                                            UpdateDienBien_DonThuoc_CLS(DaTaContext, _int_maBN, DungChung.Bien.MaCB, kieudon, dtNgayKe.DateTime, memoDienBien.Text, maKP, false, false);
                                        }
                                        else
                                        {

                                            if (_ylenh.Length > 0)
                                            {
                                                if (kieudon != 2)
                                                {
                                                    //if (DungChung.Bien.MaBV == "30007")
                                                    //{
                                                    //    DateTime NgayKetu = DungChung.Ham.NgayTu(dtNgayKe.DateTime);
                                                    //    DateTime NgayKeden = DungChung.Ham.NgayDen(dtNgayKe.DateTime);
                                                    //    var ktdb = DaTaContext.DienBiens.Where(p => p.NgayNhap >= NgayKetu && p.NgayNhap <= NgayKeden).Where(p => p.MaBNhan == _int_maBN).FirstOrDefault();
                                                    //    if (ktdb != null)
                                                    //    {
                                                    //        ktdb.YLenh += _ylenh;
                                                    //        ktdb.DienBien1 += "\n" + memoDienBien.Text;
                                                    //        DaTaContext.SaveChanges();
                                                    //    }
                                                    //    else
                                                    //    {
                                                    //        DienBien dbmoi = new DienBien();
                                                    //        dbmoi.NgayNhap = dtNgayKe.DateTime;
                                                    //        dbmoi.IDDon = maxid;
                                                    //        dbmoi.YLenh = _ylenh;
                                                    //        dbmoi.DienBien1 = memoDienBien.Text;
                                                    //        dbmoi.MaCB = _cbke;
                                                    //        dbmoi.MaBNhan = _int_maBN;
                                                    //        DaTaContext.DienBiens.Add(dbmoi);
                                                    //        DaTaContext.SaveChanges();
                                                    //    }
                                                    //}
                                                    //else
                                                    //{
                                                    var ktdb = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.IDDon == maxid).ToList();
                                                    if (ktdb.Count > 0)
                                                    {
                                                        int id = ktdb.First().ID;
                                                        var sua = DaTaContext.DienBiens.Single(p => p.ID == id);
                                                        sua.NgayNhap = dtNgayKe.DateTime;
                                                        sua.IDDon = maxid;
                                                        sua.YLenh = _ylenh;
                                                        sua.DienBien1 = memoDienBien.Text;
                                                        sua.MaCB = _cbke;
                                                        sua.MaBNhan = _int_maBN;
                                                        DaTaContext.SaveChanges();
                                                    }
                                                    else
                                                    {
                                                        //string tenkho = DaTaContext.KPhongs.Where(p => p.MaCK == _makho).FirstOrDefault().TenKP;

                                                        DienBien dbmoi = new DienBien();
                                                        dbmoi.NgayNhap = dtNgayKe.DateTime;
                                                        dbmoi.IDDon = maxid;
                                                        dbmoi.YLenh = _ylenh;
                                                        //if(DungChung.Bien.MaBV == "20001" && tenkho == "Kho thuốc tân dược") // namnt diễn biến lấy theo đơn tân dược 20001
                                                        dbmoi.DienBien1 = memoDienBien.Text;
                                                        dbmoi.MaCB = _cbke;
                                                        dbmoi.MaBNhan = _int_maBN;
                                                        if (DungChung.Bien.MaBV != "24009" || (isLuuDienBien && DungChung.Bien.MaBV == "24009"))
                                                            DaTaContext.DienBiens.Add(dbmoi);
                                                        DaTaContext.SaveChanges();
                                                    }
                                                    //}
                                                }
                                            }
                                        }
                                        //
                                        //MessageBox.Show("Tạo đơn thành công!");
                                        if (iddthuocmau > 0 && ckcCapNhatDTM.Checked)
                                        {
                                            UpdateDTM(DaTaContext, dthuoc.IDDon, iddthuocmau);
                                            ckcCapNhatDTM.Checked = false;
                                            ckcCapNhatDTM.Visible = false;
                                            iddthuocmau = 0;
                                        }
                                        xtraKeDon.Text = "Đơn thuốc";
                                        TTLuu = 0;
                                        EnableButton(true);
                                        EnableControlKD(false);

                                        _lDonThuoc = loadDsDthuoc(_int_maBN);
                                        if (_lDonThuoc.FirstOrDefault(o => o.IDDon == dthuoc.IDDon) != null)
                                        {
                                            _lDonThuoc.FirstOrDefault(o => o.IDDon == dthuoc.IDDon).GhiChu = dthuoc.GhiChu;
                                        }

                                        //usDieuTri_Load(sender, e);
                                    }

                                    //} //dfdfdf

                                    //}
                                }
                                else
                                {
                                    xtraKeDon.Text = "Đơn thuốc";
                                    TTLuu = 0;
                                    EnableButton(true);
                                    EnableControlKD(false);
                                    TimKiem();
                                }
                            }
                            #endregion
                            else if (checkton)
                            {
                                if (TTLuu == 2) //Sửa đơn
                                {
                                    int _nhomKP = 0;
                                    bool taomoi = true;
                                    if (taomoi)
                                    {

                                        if (DungChung.Bien.ChuyenKhoa == "Trực cấp cứu")
                                        {
                                            var ktNhomKP = _lKphongall.Where(p => p.MaKP == _makpKD).ToList();
                                            if (ktNhomKP.Count > 0 && ktNhomKP.First().NhomKP != null)
                                                _nhomKP = ktNhomKP.First().NhomKP == null ? 0 : Convert.ToInt32(ktNhomKP.First().NhomKP);
                                        }
                                        if (!DungChung.Bien.listKPHoatDong.Contains(_makpKD) && _nhomKP != _makpKD && DungChung.Bien.PLoaiKP != "Admin")
                                        {
                                            MessageBox.Show("Khoa phòng không hợp lệ");
                                            taomoi = false;
                                        }


                                    }
                                    //int iddtbn = 0;
                                    //if (grvBNhankb.GetFocusedRowCellValue(colIDDTBNhan) != null)
                                    //    iddtbn = Convert.ToInt32(grvBNhankb.GetFocusedRowCellValue(colIDDTBNhan));
                                    if ((DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24389") && iddtbn == 2)
                                    {
                                        double TongTienT = 0;
                                        for (int i = 0; i < grvDonThuocct.DataRowCount; i++)
                                        {
                                            if (grvDonThuocct.GetRowCellValue(i, colMaDVdt) != null)
                                            {
                                                if (DungChung.Bien.MaBV == "27022")
                                                {
                                                    TongTienT += Math.Round(Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colThanhTien)), DungChung.Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                }
                                                else
                                                {
                                                    TongTienT += Math.Round(Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colThanhTien)), DungChung.Bien.LamTronSo);
                                                }
                                            }
                                        }
                                        int idd = 0;
                                        if (!string.IsNullOrEmpty(txtIdDonThuoc.Text))

                                            idd = int.Parse(txtIdDonThuoc.Text.Trim());
                                        bool checkKtraCP = true;
                                        if (DungChung.Bien.MaBV == "01049")
                                        {
                                            var benhnhan = DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN && p.NoiTru == 0).FirstOrDefault();
                                            if (benhnhan != null && benhnhan.NNhap != null)
                                            {

                                                if (DungChung.Ham.CheckNGioHC(benhnhan.NNhap.Value))
                                                    checkKtraCP = false;
                                            }
                                        }
                                        if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                                        {
                                            var ttbs = DaTaContext.TTboXungs.FirstOrDefault(p => p.MaBNhan == _int_maBN);
                                            if (ttbs != null && ttbs.HTThanhToan == 1)
                                            {
                                                checkKtraCP = false;
                                            }
                                        }
                                        if (checkKtraCP)
                                        {
                                            if (!KtraChiPhi(DaTaContext, _int_maBN, TongTienT, idd))
                                            {
                                                taomoi = false;
                                                MessageBox.Show("Tổng chi phí vượt quá tổng tạm thu");
                                            }
                                        }


                                    }
                                    if (taomoi)
                                    {
                                        if (!string.IsNullOrEmpty(txtIdDonThuoc.Text))
                                        {
                                            int id = int.Parse(txtIdDonThuoc.Text.Trim());
                                            //if (!DungChung.Ham._checkSoPL(DaTaContext, id)) // kiểm tra đã có sô pl thì không cho sửa
                                            //{
                                            int? sovv = null;
                                            if (DungChung.Bien.MaTinh == "12")
                                            {
                                                try
                                                {
                                                    if (!string.IsNullOrEmpty(txtSoVV2.Text))
                                                    {
                                                        bool ktra = false;
                                                        int sovaovien = 0;
                                                        if (Int32.TryParse(txtSoVV2.Text, out rs))
                                                        {
                                                            sovaovien = Convert.ToInt32(txtSoVV2.Text);
                                                        }
                                                        sovv = sovaovien;
                                                        // int makpvv = DungChung.Bien.PP_SoVV == 1 ? (dthuoc.MaKP ?? 0) : 0;  
                                                        if (DungChung.Bien.PP_SoVV == 1 || DungChung.Bien.PP_SoVV == 2)
                                                            ktra = true;
                                                        //var qsopl = DaTaContext.SoPLs.Where(panelControl1 => panelControl1.PhanLoai == 2 && panelControl1.MaKP == makpvv).Where(p => p.SoPL1 >= sovaovien).ToList();
                                                        //if(qsopl.Count == 0)
                                                        //    DungChung.Ham.SetSoPL(makpvv, sovaovien, 2);
                                                        int makpvv = DungChung.Bien.PP_SoVV == 1 ? (Convert.ToInt32(lupBPKe.EditValue)) : 0;
                                                        if (ktra)
                                                        {

                                                            if (!DungChung.Ham.checkSoPL(makpvv, sovaovien, 2, -1))
                                                            {
                                                                DungChung.Ham.SetSoPL(makpvv, sovaovien, 2, -1);
                                                                ktra = false;
                                                            }
                                                            else
                                                            {
                                                                DungChung.Ham.SetSoPL(makpvv, 1, 2, -1);
                                                                setSoVV();
                                                                ktra = true;
                                                                // btnLuu_Click(sender, e);
                                                            }
                                                        }
                                                    }
                                                    else
                                                        sovv = null;
                                                }
                                                catch
                                                {
                                                    sovv = null;
                                                }

                                            }

                                            DThuoc dthuoc = DaTaContext.DThuocs.Single(p => p.IDDon == id);
                                            DateTime? ngayKeSua = dthuoc.NgayKe;
                                            dthuoc.MaBNhan = _int_maBN;
                                            dthuoc.NgayKe = dtNgayKe.DateTime;
                                            dthuoc.GhiChu = mm_ghiChu.Text;
                                            dthuoc.IDDon_Mau = (iddthuocmau > 0 && iddthuocmau != dthuoc.IDDon_Mau) ? iddthuocmau : dthuoc.IDDon_Mau;
                                            dthuoc.SoVV = sovv;
                                            int abc = 0;
                                            if (int.TryParse(dthuoc.GhiChu, out abc))
                                                dthuoc.GhiChu = cboSoThangNgay.Text;

                                            dthuoc.MaKP = lupBPKe.EditValue == null ? 0 : Convert.ToInt32(lupBPKe.EditValue);
                                            dthuoc.MaCB = _cbke;
                                            //int MAKHOXUAT = lupKhoXuat.EditValue == null ? 0 : Convert.ToInt32(lupKhoXuat.EditValue);
                                            dthuoc.MaKXuat = _makho;
                                            dthuoc.IsMuaNgoai = (khoKe != null && khoKe.IsMuaNgoai == true);
                                            if (!string.IsNullOrEmpty(cboKieuDon.Text))
                                            {
                                                dthuoc.KieuDon = kieudon;
                                            }
                                            // dthuoc.LoaiDuoc = cboNhomDuoc.SelectedIndex;

                                            // List<DThuocct> _ldonSua = new List<DThuocct>();// danh sách đơn chi tiết 
                                            //MessageBox.Show(DaTaContext.SaveChanges().ToString());
                                            string _ylenhsuwa = "";
                                            bool DTNT = false;
                                            var Ktrabn = DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN).FirstOrDefault();
                                            if (Ktrabn != null && Ktrabn.DTNT == true)
                                                DTNT = true;
                                            int save = DaTaContext.SaveChanges();
                                            if (save >= 0)
                                            {
                                                string message = "";
                                                // lưu chi tiết đơn
                                                for (int i = 0; i < grvDonThuocct.DataRowCount; i++)
                                                {
                                                    if (grvDonThuocct.GetRowCellValue(i, colMaDVdt) != null && grvDonThuocct.GetRowCellValue(i, colMaDVdt).ToString() != "")
                                                    {
                                                        if (grvDonThuocct.GetRowCellValue(i, colSoLuong) != null && grvDonThuocct.GetRowCellValue(i, colSoLuong).ToString() != "")
                                                        {
                                                            if (grvDonThuocct.GetRowCellValue(i, colDonGia) != null && grvDonThuocct.GetRowCellValue(i, colDonGia).ToString() != "" && Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colDonGia)) >= 0)
                                                            {
                                                                if (grvDonThuocct.GetRowCellValue(i, colIDDonct) != null && grvDonThuocct.GetRowCellValue(i, colIDDonct).ToString() != "")
                                                                {
                                                                    double _dongia = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colDonGia).ToString());
                                                                    double _soluongkt = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colSoLuong).ToString());
                                                                    int idct = int.Parse(grvDonThuocct.GetRowCellValue(i, colIDDonct).ToString());
                                                                    int madv = Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, colMaDVdt));
                                                                    var dvKe = _lAllDichVu.FirstOrDefault(o => o.MaDV == madv);
                                                                    if (idct > 0)// sửa row
                                                                    {

                                                                        //if (grvDonThuocct.GetRowCellValue(i, colTTLuu) != null && grvDonThuocct.GetRowCellValue(i, colTTLuu).ToString() != "2")
                                                                        //{
                                                                        if (_soluongkt == 0)
                                                                        {
                                                                            MessageBox.Show("thuốc: " + grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + " số lượng bằng 0");
                                                                            break;
                                                                        }
                                                                        else if ((grvDonThuocct.GetRowCellValue(i, collan) == null && DungChung.Bien.MaBV != "14017") || (DungChung.Bien.MaBV == "14017" && dvKe != null && dvKe.DongY != 1 && grvDonThuocct.GetRowCellValue(i, collan) == null))
                                                                        {
                                                                            MessageBox.Show("thuốc: " + grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + " chưa nhập số lần uống");
                                                                            return;
                                                                        }
                                                                        else if ((grvDonThuocct.GetRowCellValue(i, colLuong) == null && DungChung.Bien.MaBV != "14017") || (DungChung.Bien.MaBV == "14017" && dvKe != null && dvKe.DongY != 1 && grvDonThuocct.GetRowCellValue(i, colLuong) == null))
                                                                        {
                                                                            MessageBox.Show("thuốc: " + grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + " chưa nhập số lần lượng uống");
                                                                            return;
                                                                        }
                                                                        else
                                                                        {

                                                                            //string _bske = lupNguoiKe.EditValue.ToString();
                                                                            #region


                                                                            DThuocct dthuocct = DaTaContext.DThuoccts.Single(p => p.IDDonct == idct);
                                                                            dthuocct.MaDV = grvDonThuocct.GetRowCellValue(i, colMaDVdt) == null ? 0 : Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, colMaDVdt));
                                                                            if (grvDonThuocct.GetRowCellValue(i, colSoLo) != null)
                                                                                dthuocct.SoLo = grvDonThuocct.GetRowCellValue(i, colSoLo).ToString();
                                                                            if (grvDonThuocct.GetRowCellValue(i, colHanDung) != null)
                                                                                dthuocct.HanDung = Convert.ToDateTime(grvDonThuocct.GetRowCellValue(i, colHanDung).ToString());
                                                                            double soluongkeold = dthuocct.SoLuong;
                                                                            double _soluongton = 0;

                                                                            if (kieudon != 2)
                                                                            {
                                                                                _soluongton = DungChung.Ham._checkTon_KD(DaTaContext, dthuocct.MaDV ?? 0, _makho, _dongia, 0, dthuocct.SoLo);
                                                                                if (DungChung.Bien.MaBV == "24012")
                                                                                {
                                                                                    _soluongton = DungChung.Ham._checkTon_KD1(DaTaContext, dthuocct.MaDV ?? 0, _makho, _dongia, 0, dthuocct.SoLo, dthuocct.HanDung);
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                var duoc = (from nduoc in DaTaContext.DThuocs.Where(p => p.MaBNhan == _int_maBN && p.MaKXuat == _makho).Where(p => p.MaCB == _cbke)//&& ((ktratt && p.Status == 0) || (p.KieuDon == 2 ? true : p.Status == 1)))//  )
                                                                                            join nhapduoc in DaTaContext.DThuoccts.Where(p => p.MaDV == madv && p.DonGia == _dongia).Where(p => p.NgayNhap >= _tungay && p.NgayNhap <= _ngayden) on nduoc.IDDon equals nhapduoc.IDDon
                                                                                            where ((nhapduoc.Status == 0) || (nduoc.KieuDon == 2 ? true : nhapduoc.Status == 1))//  )
                                                                                            group new { nhapduoc, nduoc } by new { nhapduoc.MaDV } into kq
                                                                                            select new { kq.Key, soluong = kq.Sum(p => p.nhapduoc.SoLuong) }).ToList();
                                                                                _soluongkt = _soluongkt * (-1);
                                                                                soluongkeold = soluongkeold * (-1);
                                                                                _soluongton = duoc.Sum(p => p.soluong);

                                                                            }
                                                                            if ((_soluongton + soluongkeold < _soluongkt) && khoKe != null && (khoKe.IsMuaNgoai == null || khoKe.IsMuaNgoai == false))
                                                                            {
                                                                                if (DungChung.Bien.MaBV == "14017")
                                                                                {
                                                                                    message += "Thuốc " + grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + ", đơn giá : " + _dongia + " số lượng không đủ" + Environment.NewLine; ;
                                                                                    continue;
                                                                                }
                                                                                else
                                                                                {
                                                                                    checkton = false;
                                                                                    MessageBox.Show("Thuốc " + grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + ", đơn giá : " + _dongia + " số lượng không đủ");
                                                                                    break;
                                                                                }
                                                                            }
                                                                            dthuocct.IDDon = id;
                                                                            dthuocct.MaKXuat = _makho;
                                                                            if (grvDonThuocct.GetRowCellValue(i, colGayTe) != null)
                                                                            {
                                                                                string _mgt = grvDonThuocct.GetRowCellValue(i, colGayTe).ToString();
                                                                                if (!string.IsNullOrEmpty(_mgt))
                                                                                {
                                                                                    if (int.Parse(_mgt) > 0)
                                                                                        dthuocct.ThuocDVGayTe = "";
                                                                                    else
                                                                                        dthuocct.ThuocDVGayTe = "";
                                                                                }
                                                                                else
                                                                                    dthuocct.ThuocDVGayTe = "";
                                                                            }
                                                                            dthuocct.NgayNhap = dtNgayKe.DateTime;
                                                                            if (grvDonThuocct.GetRowCellValue(i, colTyLeBHTT_dt) != null)
                                                                                dthuocct.TyLeTT = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colTyLeBHTT_dt));
                                                                            else
                                                                                dthuocct.TyLeTT = 0;
                                                                            dthuocct.DonVi = grvDonThuocct.GetRowCellValue(i, colDonVi).ToString().Trim();
                                                                            dthuocct.DonGia = _dongia;
                                                                            dthuocct.SoLuong = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colSoLuong).ToString());
                                                                            dthuocct.SoLuongct = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colSoLuongctdt));
                                                                            dthuocct.Loai = Convert.ToByte(grvDonThuocct.GetRowCellValue(i, colLoai));
                                                                            dthuocct.ThanhTien = Math.Round(Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colThanhTien)), DungChung.Bien.LamTronSo, MidpointRounding.AwayFromZero);//Math.Round(Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colSoLuong)) * _dongia * dthuocct.TyLeTT / 100, DungChung.Bien.LamTronSo);
                                                                            dthuocct.IsMuaNgoai = (khoKe != null && khoKe.IsMuaNgoai == true);
                                                                            if (grvDonThuocct.GetRowCellValue(i, colMaCC) != null)
                                                                                dthuocct.MaCC = grvDonThuocct.GetRowCellValue(i, colMaCC).ToString();

                                                                            if (grvDonThuocct.GetRowCellValue(i, coltrongBH) != null)
                                                                                dthuocct.TrongBH = Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, coltrongBH));
                                                                            else
                                                                                dthuocct.TrongBH = 0;
                                                                            if (grvDonThuocct.GetRowCellValue(i, colStatusct) != null)
                                                                                dthuocct.Status = Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, colStatusct));
                                                                            else
                                                                                dthuocct.Status = 0;
                                                                            dthuocct.MaKP = lupBPKe.EditValue == null ? 0 : Convert.ToInt32(lupBPKe.EditValue);
                                                                            dthuocct.MaKPtk = lupBPKe.EditValue == null ? 0 : Convert.ToInt32(lupBPKe.EditValue);
                                                                            if (grvDonThuocct.GetRowCellValue(i, colGhiChu) != null)
                                                                                dthuocct.GhiChu = grvDonThuocct.GetRowCellValue(i, colGhiChu).ToString();

                                                                            if (grvDonThuocct.GetRowCellValue(i, colLuong) != null)
                                                                                dthuocct.Luong = grvDonThuocct.GetRowCellValue(i, colLuong).ToString();
                                                                            if (grvDonThuocct.GetRowCellValue(i, collan) != null)
                                                                                dthuocct.SoLan = Convert.ToString(grvDonThuocct.GetRowCellValue(i, collan));
                                                                            if (grvDonThuocct.GetRowCellValue(i, colmoilan) != null)
                                                                                dthuocct.MoiLan = Convert.ToString(grvDonThuocct.GetRowCellValue(i, colmoilan));
                                                                            if (grvDonThuocct.GetRowCellValue(i, coldviuong) != null)
                                                                                dthuocct.DviUong = Convert.ToString(grvDonThuocct.GetRowCellValue(i, coldviuong));
                                                                            if (grvDonThuocct.GetRowCellValue(i, colMienCT) != null)
                                                                                dthuocct.Mien = Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, colMienCT));
                                                                            if (grvDonThuocct.GetRowCellValue(i, colDuongD) != null)
                                                                                dthuocct.DuongD = Convert.ToString(grvDonThuocct.GetRowCellValue(i, colDuongD));
                                                                            dthuocct.MaCB = _cbke;
                                                                            dthuocct.STT = i + 1;
                                                                            // DaTaContext.SaveChanges();
                                                                            #endregion
                                                                        }
                                                                        // }
                                                                    }
                                                                    else
                                                                    {
                                                                        // lưu row mới 


                                                                        if (_soluongkt == 0)
                                                                        {
                                                                            MessageBox.Show("thuốc: " + grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + " số lượng bằng 0");
                                                                        }
                                                                        else if ((grvDonThuocct.GetRowCellValue(i, collan) == null && DungChung.Bien.MaBV != "14017") || (DungChung.Bien.MaBV == "14017" && dvKe != null && dvKe.DongY != 1 && grvDonThuocct.GetRowCellValue(i, collan) == null))
                                                                        {
                                                                            MessageBox.Show("thuốc: " + grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + " chưa nhập số lần uống");
                                                                            return;
                                                                        }
                                                                        else if ((grvDonThuocct.GetRowCellValue(i, colLuong) == null && DungChung.Bien.MaBV != "14017") || (DungChung.Bien.MaBV == "14017" && dvKe != null && dvKe.DongY != 1 && grvDonThuocct.GetRowCellValue(i, colLuong) == null))
                                                                        {
                                                                            MessageBox.Show("thuốc: " + grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + " chưa nhập số lần lượng uống");
                                                                            return;
                                                                        }
                                                                        else
                                                                        {

                                                                            #region
                                                                            DThuocct dthuocct = new DThuocct();
                                                                            dthuocct.MaDV = grvDonThuocct.GetRowCellValue(i, colMaDVdt) == null ? 0 : Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, colMaDVdt));
                                                                            #region loại dược 01071
                                                                            //if (DungChung.Bien.MaBV == "01071" && cboNhomDuoc.SelectedIndex == 0)// chọn loại thuốc thường
                                                                            //{
                                                                            //var qtenRG = (from dv in DaTaContext.DichVus.Where(p => p.MaDV == dthuocct.MaDV)
                                                                            //              join tn in DaTaContext.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                                                            //              select tn.TenRG).FirstOrDefault();
                                                                            //if (qtenRG != null)
                                                                            //{
                                                                            //    if (qtenRG.Contains("Thuốc gây nghiện"))
                                                                            //        dthuocct.LoaiDV = 3;
                                                                            //    else if (qtenRG.Contains("Thuốc hướng tâm thần"))
                                                                            //        dthuocct.LoaiDV = 4;
                                                                            //    else if (qtenRG.Contains("Thuốc trẻ em"))
                                                                            //        dthuocct.LoaiDV = 5;
                                                                            //    else if (qtenRG.Contains("Hóa chất"))
                                                                            //        dthuocct.LoaiDV = 1;
                                                                            //    else
                                                                            //        dthuocct.LoaiDV = 0;

                                                                            //}
                                                                            // }

                                                                            #endregion

                                                                            if (grvDonThuocct.GetRowCellValue(i, colSoLo) != null)
                                                                                dthuocct.SoLo = grvDonThuocct.GetRowCellValue(i, colSoLo).ToString();
                                                                            if (grvDonThuocct.GetRowCellValue(i, colHanDung) != null)
                                                                                dthuocct.HanDung = Convert.ToDateTime(grvDonThuocct.GetRowCellValue(i, colHanDung).ToString());
                                                                            if (grvDonThuocct.GetRowCellValue(i, colGayTe) != null)
                                                                            {
                                                                                string _mgt = grvDonThuocct.GetRowCellValue(i, colGayTe).ToString();
                                                                                if (!string.IsNullOrEmpty(_mgt))
                                                                                {
                                                                                    if (int.Parse(_mgt) > 0)
                                                                                        dthuocct.ThuocDVGayTe = "";
                                                                                    else
                                                                                        dthuocct.ThuocDVGayTe = "";
                                                                                }
                                                                                else
                                                                                    dthuocct.ThuocDVGayTe = "";
                                                                            }
                                                                            double _soluongton = 0;
                                                                            if (kieudon != 2)
                                                                            {
                                                                                _soluongton = DungChung.Ham._checkTon_KD(DaTaContext, dthuocct.MaDV ?? 0, _makho, _dongia, 0, dthuocct.SoLo);
                                                                                if (DungChung.Bien.MaBV == "24012")
                                                                                {
                                                                                    _soluongton = DungChung.Ham._checkTon_KD1(DaTaContext, dthuocct.MaDV ?? 0, _makho, _dongia, 0, dthuocct.SoLo, dthuocct.HanDung);
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                var duoc = (from nduoc in DaTaContext.DThuocs.Where(p => p.MaBNhan == _int_maBN && p.MaKXuat == _makho).Where(p => p.MaCB == _cbke)//&& ((ktratt && p.Status == 0) || (p.KieuDon == 2 ? true : p.Status == 1)))//  )
                                                                                            join nhapduoc in DaTaContext.DThuoccts.Where(p => p.MaDV == madv && p.DonGia == _dongia).Where(p => p.NgayNhap >= _tungay && p.NgayNhap <= _ngayden) on nduoc.IDDon equals nhapduoc.IDDon
                                                                                            where ((nhapduoc.Status == 0) || (nduoc.KieuDon == 2 ? true : nhapduoc.Status == 1))//  )
                                                                                            group new { nhapduoc, nduoc } by new { nhapduoc.MaDV } into kq
                                                                                            select new { kq.Key, soluong = kq.Sum(p => p.nhapduoc.SoLuong) }).ToList();
                                                                                _soluongton = duoc.Sum(p => p.soluong);
                                                                                _soluongkt = _soluongkt * (-1);
                                                                            }
                                                                            if (_soluongton < _soluongkt && khoKe != null && (khoKe.IsMuaNgoai == null || khoKe.IsMuaNgoai == false))
                                                                            {
                                                                                if (DungChung.Bien.MaBV == "14017")
                                                                                {
                                                                                    message += "Thuốc " + grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + ", đơn giá : " + _dongia + " số lượng không đủ" + Environment.NewLine; ;
                                                                                    continue;
                                                                                }
                                                                                else
                                                                                {
                                                                                    checkton = false;
                                                                                    MessageBox.Show("Thuốc " + grvDonThuocct.GetRowCellDisplayText(i, colMaDVdt) + ", đơn giá : " + _dongia + " số lượng không đủ");
                                                                                    break;
                                                                                }
                                                                            }

                                                                            dthuocct.IDDon = id;
                                                                            dthuocct.IDKB = _idkb;
                                                                            dthuocct.MaKXuat = _makho;
                                                                            dthuocct.NgayNhap = dtNgayKe.DateTime;
                                                                            if (grvDonThuocct.GetRowCellValue(i, colTyLeBHTT_dt) != null)
                                                                                dthuocct.TyLeTT = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colTyLeBHTT_dt));
                                                                            else
                                                                                dthuocct.TyLeTT = 0;
                                                                            dthuocct.DonVi = grvDonThuocct.GetRowCellValue(i, colDonVi).ToString().Trim();
                                                                            dthuocct.DonGia = _dongia;
                                                                            dthuocct.SoLuong = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colSoLuong).ToString());
                                                                            dthuocct.SoLuongct = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colSoLuongctdt));
                                                                            dthuocct.Loai = Convert.ToByte(grvDonThuocct.GetRowCellValue(i, colLoai));
                                                                            dthuocct.ThanhTien = Math.Round(Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colThanhTien)), DungChung.Bien.LamTronSo, MidpointRounding.AwayFromZero);//Math.Round(_dongia * Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colSoLuong).ToString()) * dthuocct.TyLeTT / 100, DungChung.Bien.LamTronSo);
                                                                            dthuocct.IsMuaNgoai = (khoKe != null && khoKe.IsMuaNgoai == true);
                                                                            if (grvDonThuocct.GetRowCellValue(i, colMaCC) != null)
                                                                                dthuocct.MaCC = grvDonThuocct.GetRowCellValue(i, colMaCC).ToString();
                                                                            if (grvDonThuocct.GetRowCellValue(i, coltrongBH) != null)
                                                                                dthuocct.TrongBH = Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, coltrongBH));
                                                                            else
                                                                                dthuocct.TrongBH = 0;
                                                                            if (grvDonThuocct.GetRowCellValue(i, colStatusct) != null)
                                                                                dthuocct.Status = Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, colStatusct));
                                                                            else
                                                                                dthuocct.Status = 0;
                                                                            dthuocct.MaKP = lupBPKe.EditValue == null ? 0 : Convert.ToInt32(lupBPKe.EditValue);
                                                                            dthuocct.MaKPtk = lupBPKe.EditValue == null ? 0 : Convert.ToInt32(lupBPKe.EditValue);
                                                                            if (grvDonThuocct.GetRowCellValue(i, colGhiChu) != null)
                                                                                dthuocct.GhiChu = grvDonThuocct.GetRowCellValue(i, colGhiChu).ToString();
                                                                            if (grvDonThuocct.GetRowCellValue(i, colLuong) != null)
                                                                                dthuocct.Luong = grvDonThuocct.GetRowCellValue(i, colLuong).ToString();
                                                                            if (grvDonThuocct.GetRowCellValue(i, collan) != null)
                                                                                dthuocct.SoLan = grvDonThuocct.GetRowCellValue(i, collan).ToString();
                                                                            if (grvDonThuocct.GetRowCellValue(i, colmoilan) != null)
                                                                                dthuocct.MoiLan = Convert.ToString(grvDonThuocct.GetRowCellValue(i, colmoilan));
                                                                            if (grvDonThuocct.GetRowCellValue(i, coldviuong) != null)
                                                                                dthuocct.DviUong = Convert.ToString(grvDonThuocct.GetRowCellValue(i, coldviuong));
                                                                            if (grvDonThuocct.GetRowCellValue(i, colMienCT) != null)
                                                                                dthuocct.Mien = Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, colMienCT));
                                                                            if (grvDonThuocct.GetRowCellValue(i, colDuongD) != null)
                                                                                dthuocct.DuongD = Convert.ToString(grvDonThuocct.GetRowCellValue(i, colDuongD));
                                                                            dthuocct.MaCB = _cbke;
                                                                            dthuocct.STT = i + 1;
                                                                            DaTaContext.DThuoccts.Add(dthuocct);
                                                                            #endregion
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                if (!string.IsNullOrWhiteSpace(message))
                                                    MessageBox.Show(message);
                                                if (checkton == true)
                                                    DaTaContext.SaveChanges();
                                                else
                                                    DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);

                                                //MessageBox.Show("Sửa thành công!");
                                                xtraKeDon.Text = "Đơn thuốc";
                                                TTLuu = 0;
                                                EnableButton(true);
                                                EnableControlKD(false);
                                                txtSoVV2.Text = "";


                                                // lưu diễn biến
                                                //if (DungChung.Bien.MaBV == "30007")//30007 1 ngày chỉ có 1 bản ghi diễn biến, nếu sửa đơn chỉ có thể thêm thuốc nhập mới vào y lệnh,ko sửa diễn biến cũng như thuốc đã có 1107
                                                //{
                                                //    DateTime NgayKetu = DungChung.Ham.NgayTu(dtNgayKe.DateTime);
                                                //    DateTime NgayKeden = DungChung.Ham.NgayDen(dtNgayKe.DateTime);
                                                //    var ktdb = DaTaContext.DienBiens.Where(p => p.NgayNhap >= NgayKetu && p.NgayNhap <= NgayKeden).Where(p => p.MaBNhan == _int_maBN).FirstOrDefault();
                                                //    if (ktdb != null)
                                                //    {
                                                //        ktdb.YLenh += _ylenhsuwa;
                                                //        DaTaContext.SaveChanges();
                                                //    }
                                                //}
                                                //else
                                                //{
                                                bool _ThayDoiDB = true;
                                                if (DungChung.Bien.MaBV == "30007")
                                                {
                                                    DialogResult result = MessageBox.Show("Lưu diễn biến, y lệnh mới?", "Thông báo", MessageBoxButtons.OKCancel, MessageBoxIcon.Question);
                                                    if (result == DialogResult.Cancel)
                                                        _ThayDoiDB = false;
                                                }
                                                if (_ThayDoiDB)
                                                {
                                                    string _ylenh = "";
                                                    var _ldthuocyl = (from dv in DaTaContext.DichVus
                                                                      join dt in DaTaContext.DThuoccts.Where(p => p.IDDon == id) on dv.MaDV equals dt.MaDV
                                                                      select new { dv.IDNhom, dv.TenDV, dt.DonVi, dt.SoLuong, dt.SoLuongct, dt.DuongD, dt.GhiChu, dv.HamLuong, dt.SoLan, dt.MoiLan, dt.Luong, dt.DviUong, dv.DongY, dt.STT }).OrderBy(o => o.STT).ToList();
                                                    int dttyl = 1;
                                                    foreach (var a in _ldthuocyl)
                                                    {
                                                        if (DungChung.Bien.MaBV == "24009")
                                                        {
                                                            isNotVatTu = false;
                                                            if (a.IDNhom != 10 && a.IDNhom != 11)
                                                            {
                                                                isNotVatTu = true;
                                                                isLuuDienBien = true;
                                                            }
                                                        }
                                                        if (DungChung.Bien.MaBV == "30007")
                                                        {
                                                            _ylenh += a.TenDV + (":" + a.HamLuong) + " x " + (DTNT == true ? a.SoLuongct : a.SoLuong) + " " + a.DonVi + ", " + ((_dy == false && a.GhiChu != null) ? a.GhiChu : "") + "\n";
                                                        }
                                                        else if (DungChung.Bien.MaBV == "30005")
                                                        {
                                                            _ylenh += a.TenDV + " x " + a.SoLuong + " " + a.DonVi + ", " + (_dy == false && a.GhiChu != null ? a.GhiChu : "") + "\n";
                                                        }
                                                        else if (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "27023" || DungChung.Bien.MaBV == "14017")
                                                        {
                                                            string lieudung = "";
                                                            if (a.SoLan != "")
                                                                lieudung += " " + a.SoLan;
                                                            if (a.MoiLan != "")
                                                                lieudung += " " + a.MoiLan;
                                                            if (a.Luong != "")
                                                                lieudung += " " + a.Luong;
                                                            if (a.DviUong != "")
                                                                lieudung += " " + a.DviUong;
                                                            if (a.DongY == 1)
                                                            {
                                                                _ylenh += a.TenDV + " x " + a.SoLuongct + " " + a.DonVi + (string.IsNullOrWhiteSpace(a.GhiChu) ? "" : ("," + a.GhiChu)) + ", \n";
                                                            }
                                                            else
                                                            {
                                                                if (DungChung.Bien.MaBV == "27023")
                                                                {
                                                                    _ylenh += a.TenDV + " x " + a.SoLuongct + " " + a.DonVi + ", " + a.DuongD + lieudung + (string.IsNullOrWhiteSpace(a.GhiChu) ? "" : ("(" + a.GhiChu + ")")) + "\n";
                                                                    dttyl++;
                                                                }
                                                                else
                                                                {
                                                                    _ylenh += dttyl.ToString() + ". " + a.TenDV + " x " + a.SoLuongct + " " + a.DonVi + ": " + a.DuongD + lieudung + (string.IsNullOrWhiteSpace(a.GhiChu) ? "" : ("," + a.GhiChu)) + ", \n";
                                                                    dttyl++;
                                                                }
                                                            }
                                                        }
                                                        else if ((DungChung.Bien.MaBV == "24009" && isNotVatTu) || DungChung.Bien.MaBV != "24009")
                                                        {
                                                            _ylenh += a.TenDV + " x " + a.SoLuong + " " + a.DonVi + ", " + "\n";
                                                        }

                                                        // _ylenh += a.TenDV + (DungChung.Bien.MaBV == "30007" ? (":" + a.HamLuong) : "") + " X " + ((DungChung.Bien.MaBV == "30007" && DTNT == true) ? a.SoLuongct : a.SoLuong) + " " + a.DonVi + ", " + ((DungChung.Bien.MaBV == "30007" || DungChung.Bien.MaBV == "30005") && _dy == false && a.GhiChu != null ? a.GhiChu : "") + "\n";
                                                    }
                                                    if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                                                    {
                                                        var maKP = lupBPKe.EditValue == null ? 0 : Convert.ToInt32(lupBPKe.EditValue);
                                                        if (kieudon == 1 || kieudon == 0)
                                                            DungChung.Ham.Update_STT_ThuocGNHT(DaTaContext, _int_maBN);
                                                        if (dtNgayKe.DateTime.Date != ngayKeSua.Value.Date)
                                                        {
                                                            UpdateDienBien_DonThuoc_CLS(DaTaContext, _int_maBN, DungChung.Bien.MaCB, kieudon, dtNgayKe.DateTime, memoDienBien.Text, maKP, false, false);
                                                            UpdateDienBien_DonThuoc_CLS(DaTaContext, _int_maBN, DungChung.Bien.MaCB, kieudon, ngayKeSua.Value, memoDienBien.Text, maKP, false, false);
                                                        }
                                                        else
                                                        {
                                                            UpdateDienBien_DonThuoc_CLS(DaTaContext, _int_maBN, DungChung.Bien.MaCB, kieudon, dtNgayKe.DateTime, memoDienBien.Text, maKP, false, false);
                                                        }

                                                    }
                                                    else
                                                    {
                                                        if (DungChung.Bien.MaBV == "24009" && _ylenh.Length == 0 && kieudon != 2)
                                                        {
                                                            var ktdb2 = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.IDDon == id).ToList();
                                                            if (ktdb2.Count > 0)
                                                            {
                                                                int id2 = ktdb2.First().ID;
                                                                var dbxoa = DaTaContext.DienBiens.Single(p => p.ID == id2);
                                                                DaTaContext.DienBiens.Remove(dbxoa);
                                                                DaTaContext.SaveChanges();
                                                            }
                                                        }
                                                        if (_ylenh.Length > 0 && kieudon != 2)
                                                        {
                                                            // case normal
                                                            var ktdb2 = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.IDDon == id).ToList();
                                                            if (ktdb2.Count > 0)
                                                            {
                                                                int id2 = ktdb2.First().ID;
                                                                var dbmoi = DaTaContext.DienBiens.Single(p => p.ID == id2);
                                                                dbmoi.NgayNhap = dtNgayKe.DateTime;
                                                                dbmoi.YLenh = _ylenh;
                                                                dbmoi.DienBien1 = memoDienBien.Text;
                                                                dbmoi.MaCB = _cbke;
                                                                dbmoi.MaBNhan = _int_maBN;
                                                                DaTaContext.SaveChanges();
                                                            }
                                                            //tao moi db neu don truoc do chi co VT
                                                            else if (DungChung.Bien.MaBV == "24009" && isLuuDienBien)
                                                            {
                                                                DienBien dbmoi = new DienBien();
                                                                dbmoi.NgayNhap = dtNgayKe.DateTime;
                                                                dbmoi.IDDon = id;
                                                                dbmoi.YLenh = _ylenh;
                                                                dbmoi.DienBien1 = memoDienBien.Text;
                                                                dbmoi.MaCB = _cbke;
                                                                dbmoi.MaBNhan = _int_maBN;
                                                                DaTaContext.DienBiens.Add(dbmoi);
                                                                DaTaContext.SaveChanges();
                                                            }
                                                        }
                                                    }
                                                }
                                                //}
                                                _lDonThuoc = loadDsDthuoc(_int_maBN);
                                                if (_lDonThuoc.FirstOrDefault(o => o.IDDon == id) != null)
                                                {
                                                    _lDonThuoc.FirstOrDefault(o => o.IDDon == id).GhiChu = dthuoc.GhiChu;
                                                }
                                                //
                                            }
                                            //}
                                            //else
                                            //{
                                            //    MessageBox.Show("đơn thuốc đã được in phiếu lĩnh, bạn không thể sửa");
                                            //}
                                        }/////dfd
                                    }
                                }
                            }
                            if (DungChung.Bien.MaBV == "14017")
                                grvDonThuocdt_FocusedRowChanged(null, null);
                            //}
                        }
                        else
                        {
                            xtraKeDon.Text = "Đơn thuốc";
                        }
                        if (DungChung.Bien.MaBV == "27021")
                            TongTien();
                        break;
                    #endregion kê đơn
                    #region dịch vụ
                    case 3:
                        //var ktdv = DaTaContext.DThuocs.Where(p => p.MaBNhan== (txtMaBNhan.Text)).Where(p => p.PLDV == 2).ToList();
                        //if (ktdv.Count <= 0)
                        //    TTLuu = 1;
                        //else TTLuu =2;
                        bool ktraluu = true;
                        string _loingaynhap = "", loikp = "", loisoluong = "", loikokp = "";
                        int dem1 = 0, dem2 = 0, dem3 = 0, dem4 = 0;
                        for (int i = 0; i < grvDichVu.DataRowCount; i++)
                        {
                            int _iddonct = -1;
                            if (grvDichVu.GetRowCellValue(i, colIDctdv) != null && grvDichVu.GetRowCellValue(i, colIDctdv).ToString() != "")
                            {
                                _iddonct = Convert.ToInt32(grvDichVu.GetRowCellValue(i, colIDctdv));
                            }
                            if (grvDichVu.GetRowCellValue(i, colNgayNhapdv) != null && grvDichVu.GetRowCellValue(i, colNgayNhapdv).ToString() != "")
                            {
                                //if (_iddonct <= 0)
                                //{
                                if (grvDichVu.GetRowCellValue(i, colMaDVdv) != null && grvDichVu.GetRowCellValue(i, colMaDVdv).ToString() != "")
                                {
                                    DateTime _ngaynhap = Convert.ToDateTime(grvDichVu.GetRowCellValue(i, colNgayNhapdv));
                                    if (grvDichVu.GetRowCellValue(i, colKhoaPhongDV) != null && grvDichVu.GetRowCellValue(i, colKhoaPhongDV).ToString() != "")
                                    {
                                        int _makp = Convert.ToInt32(grvDichVu.GetRowCellValue(i, colKhoaPhongDV));
                                        bool ktra = true;
                                        if (DungChung.Bien.MaBV == "01071")
                                        {
                                            var kttt = _lKphongall.Where(p => p.MaKP == _makp && p.PLoai == DungChung.Bien.st_PhanLoaiKP.HanhChinh).ToList();
                                            if (kttt.Count > 0)
                                                ktra = false;
                                        }
                                        if (ktra)
                                        {
                                            var ngaykham = DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN && p.MaKP == _makp).Select(p => p.NgayKham).FirstOrDefault();
                                            if (ngaykham != null)
                                            {
                                                if (_iddonct <= 0 && (ngaykham.Value > _ngaynhap))
                                                {
                                                    dem1++;
                                                    _loingaynhap += grvDichVu.GetRowCellDisplayText(i, colMaDVdv) + ";\n";
                                                }
                                            }
                                            else
                                            {
                                                dem2++;
                                                loikp += grvDichVu.GetRowCellDisplayText(i, colMaDVdv) + ";\n";
                                            }
                                        }
                                    }
                                    else
                                    {
                                        dem4++;
                                        loikokp += grvDichVu.GetRowCellDisplayText(i, colMaDVdv) + ";\n";
                                    }
                                    if (grvDichVu.GetRowCellValue(i, colSoLuongdv) != null && grvDichVu.GetRowCellValue(i, colSoLuongdv).ToString() != "")
                                    {
                                        Double _soluong = Convert.ToDouble(grvDichVu.GetRowCellValue(i, colSoLuongdv));
                                        if (_soluong <= 0)
                                        {
                                            dem3++;
                                            loisoluong += grvDichVu.GetRowCellDisplayText(i, colMaDVdv) + ";\n";
                                        }
                                    }
                                }
                                //}
                            }
                            else
                            {
                                dem1++;
                                _loingaynhap += grvDichVu.GetRowCellDisplayText(i, colMaDVdv) + ";\n";
                            }
                        }
                        if (dem1 > 0)
                        {
                            MessageBox.Show("các dịch vụ: " + _loingaynhap.ToString() + "\n có ngày nhập không hợp lệ nhỏ hơn ngày khám hoặc lớn hơn ngày hiện tại");
                            ktraluu = false;
                        }
                        if (dem2 > 0)
                        {
                            MessageBox.Show("các dịch vụ: " + loikp.ToString() + "\n có khoa|phòng không hợp lệ");
                            ktraluu = false;
                        }
                        if (dem3 > 0)
                        {
                            MessageBox.Show("các dịch vụ: " + loikp.ToString() + "\n có số lượng không hợp lệ");
                            ktraluu = false;
                        }
                        if (dem4 > 0)
                        {
                            MessageBox.Show("các dịch vụ: " + loikokp.ToString() + "\n chưa có Khoa|Phòng");
                            ktraluu = false;
                        }


                        if ((DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24389") && iddtbn == 2)
                        {
                            double TongTienT = 0;
                            for (int i = 0; i < grvDichVu.DataRowCount; i++)
                            {
                                if (grvDichVu.GetRowCellValue(i, colMaDVdv) != null)
                                {
                                    TongTienT += Math.Round(Convert.ToDouble(grvDichVu.GetRowCellValue(i, colThanhTiendv)), DungChung.Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                }
                            }


                            bool checkKtraCP = true;
                            if (DungChung.Bien.MaBV == "01049")
                            {
                                var benhnhan = DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN && p.NoiTru == 0).FirstOrDefault();
                                if (benhnhan != null && benhnhan.NNhap != null)
                                {

                                    if (DungChung.Ham.CheckNGioHC(benhnhan.NNhap.Value))
                                        checkKtraCP = false;
                                }
                            }
                            if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                            {
                                var ttbs = DaTaContext.TTboXungs.FirstOrDefault(p => p.MaBNhan == _int_maBN);
                                if (ttbs != null && ttbs.HTThanhToan == 1)
                                {
                                    checkKtraCP = false;
                                }
                            }
                            if (checkKtraCP)
                            {
                                if (!KTraChiPhiTabDV(DaTaContext, _int_maBN, TongTienT))
                                {
                                    ktraluu = false;
                                    MessageBox.Show("Tổng chi phí vượt quá tổng tạm thu");
                                }
                            }

                            //if (!KTraChiPhiTabDV(DaTaContext, _int_maBN, TongTienT))
                            //{
                            //    ktraluu = false;
                            //    MessageBox.Show("Tổng chi phí vượt quá tổng tạm thu");
                            //}
                        }
                        if (ktraluu)
                        {
                            if (TTLuu == 1)
                            {
                                DThuoc dthuoccd = new DThuoc();
                                dthuoccd.MaBNhan = _int_maBN;
                                dthuoccd.PLDV = 2;
                                var bnkb = DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN).OrderByDescending(p => p.IDKB).ToList();
                                if (bnkb.Count > 0)
                                {
                                    dthuoccd.MaKP = bnkb.First().MaKP;
                                    dthuoccd.MaCB = bnkb.First().MaCB;
                                }
                                else
                                {
                                    dthuoccd.MaKP = DungChung.Bien.MaKP;
                                    dthuoccd.MaCB = DungChung.Bien.MaCB;
                                }
                                if (bnkb.Count > 0)
                                    dthuoccd.NgayKe = bnkb.First().NgayKham;
                                else
                                    dthuoccd.NgayKe = System.DateTime.Now;
                                dthuoccd.KieuDon = -1;
                                DaTaContext.DThuocs.Add(dthuoccd);

                                if (DaTaContext.SaveChanges() >= 0)
                                {
                                    var maxid = dthuoccd.IDDon;
                                    for (int i = 0; i < grvDichVu.DataRowCount; i++)
                                    {
                                        if (grvDichVu.GetRowCellValue(i, colMaDVdv) != null)
                                        {
                                            if (grvDichVu.GetRowCellValue(i, colSoLuongdv) != null && grvDichVu.GetRowCellValue(i, colSoLuongdv).ToString() != "")
                                            {
                                                // lấy IDKB
                                                int _makp = DungChung.Bien.MaKP;
                                                if (grvDichVu.GetRowCellValue(i, colKhoaPhongDV) != null)
                                                    _makp = Convert.ToInt32(grvDichVu.GetRowCellValue(i, colKhoaPhongDV));
                                                int _idkb = 0;
                                                if (bnkb.Where(p => p.MaKP == _makp).ToList().Count > 0)
                                                    _idkb = bnkb.Where(p => p.MaKP == _makp).ToList().First().IDKB;
                                                //
                                                //if (grvDichVu.GetRowCellValue(i, colBSTH) == null)
                                                //{
                                                //    MessageBox.Show("bạn chưa nhập bác sĩ thực hiện theo CV4210");
                                                //    return;
                                                //}
                                                //else
                                                //{
                                                // lưu row mới 

                                                DThuocct dthuocct = new DThuocct();
                                                dthuocct.IDDon = maxid;
                                                dthuocct.IDKB = _idkb;
                                                if (grvDichVu.GetRowCellValue(i, colNgayNhapdv) != null && grvDichVu.GetRowCellValue(i, colNgayNhapdv).ToString() != "")
                                                    dthuocct.NgayNhap = Convert.ToDateTime(grvDichVu.GetRowCellValue(i, colNgayNhapdv).ToString());
                                                dthuocct.MaDV = grvDichVu.GetRowCellValue(i, colMaDVdv) == null ? 0 : Convert.ToInt32(grvDichVu.GetRowCellValue(i, colMaDVdv));
                                                dthuocct.DonVi = grvDichVu.GetRowCellValue(i, colDonVidv).ToString().Trim();
                                                dthuocct.SoLuong = Convert.ToDouble(grvDichVu.GetRowCellValue(i, colSoLuongdv).ToString().Trim());
                                                dthuocct.DonGia = Convert.ToDouble(grvDichVu.GetRowCellValue(i, colDonGiadv).ToString());
                                                dthuocct.ThanhTien = Math.Round(Convert.ToDouble(grvDichVu.GetRowCellValue(i, colThanhTiendv)), DungChung.Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                if (grvDichVu.GetRowCellValue(i, colXHH) != null)
                                                {
                                                    bool xhh = Convert.ToBoolean(grvDichVu.GetRowCellValue(i, colXHH));
                                                    dthuocct.XHH = xhh == true ? 1 : 0;
                                                }
                                                if (grvDichVu.GetRowCellValue(i, colTrongBHdv) != null)
                                                    dthuocct.TrongBH = Convert.ToInt32(grvDichVu.GetRowCellValue(i, colTrongBHdv));
                                                else
                                                    dthuocct.TrongBH = 0;
                                                if (grvDichVu.GetRowCellValue(i, colBSTH) != null)
                                                    dthuocct.MaCB = grvDichVu.GetRowCellValue(i, colBSTH).ToString();
                                                //else
                                                //    dthuocct.MaCB = "";
                                                if (grvDichVu.GetRowCellValue(i, colKhoaPhongDV) != null)
                                                    dthuocct.MaKP = grvDichVu.GetRowCellValue(i, colKhoaPhongDV) == null ? 0 : Convert.ToInt32(grvDichVu.GetRowCellValue(i, colKhoaPhongDV));
                                                else
                                                    dthuocct.MaKP = 0;
                                                if (grvDichVu.GetRowCellValue(i, colTyLeBHTT) != null)
                                                    dthuocct.TyLeTT = Convert.ToInt32(grvDichVu.GetRowCellValue(i, colTyLeBHTT));
                                                else
                                                    dthuocct.TyLeTT = 100;
                                                DaTaContext.DThuoccts.Add(dthuocct);
                                                DaTaContext.SaveChanges();
                                                //}
                                            }
                                        }
                                    }

                                    xtraChiDinh.Text = "Dịch vụ";
                                    //MessageBox.Show("Tạo mới thành công");
                                    xtraChiDinh.Refresh();
                                    TTLuu = 0;
                                    EnableButton(true);
                                    EnableControlDV(false);
                                    //grvDichVu.OptionsBehavior.Editable = false;

                                    //usDieuTri_Load(sender, e);
                                    int idcd = 0;
                                    var q = DaTaContext.DThuocs.Where(p => p.MaBNhan == _int_maBN).Where(p => p.PLDV == 2).ToList();
                                    if (q.Count > 0)
                                    {
                                        txtChiDinh.Text = q.First().IDDon.ToString();
                                        idcd = q.First().IDDon;
                                    }
                                    var _data0 = (from dt in DaTaContext.DThuoccts.Where(p => p.IDDon == idcd)
                                                  select new DonThuocct
                                                  {
                                                      IDDon = dt.IDDon,
                                                      IDDonct = dt.IDDonct,
                                                      MaDV = dt.MaDV,
                                                      DonVi = dt.DonVi,
                                                      DonGia = dt.DonGia,
                                                      SoLuong = dt.SoLuong,
                                                      ThanhTien = dt.ThanhTien,
                                                      TienBN = dt.TienBN,
                                                      TienBH = dt.TienBH,
                                                      TrongBH = dt.TrongBH,
                                                      NgayNhap = dt.NgayNhap,
                                                      DuongD = dt.DuongD,
                                                      SoPL = dt.SoPL,
                                                      Status = dt.Status,
                                                      IDCD = dt.IDCD,
                                                      MaCB = dt.MaCB,
                                                      MaKP = dt.MaKP,
                                                      IDKB = dt.IDKB,
                                                      Loai = dt.Loai,
                                                      ThanhToan = dt.ThanhToan,
                                                      MaKPtk = dt.MaKPtk,
                                                      MaKXuat = dt.MaKXuat,
                                                      TyLeTT = dt.TyLeTT,
                                                      XHH = dt.XHH == 1 ? true : false
                                                  }).ToList();

                                    var _data = (from dt in _data0
                                                 join dv in _lAllDichVu on dt.MaDV equals dv.MaDV
                                                 select new DonThuocct
                                                 {
                                                     IDDon = dt.IDDon,
                                                     IDDonct = dt.IDDonct,
                                                     MaDV = dt.MaDV,
                                                     DonVi = dt.DonVi,
                                                     DonGia = dt.DonGia,
                                                     SoLuong = dt.SoLuong,
                                                     ThanhTien = dt.ThanhTien,
                                                     TienBN = dt.TienBN,
                                                     TienBH = dt.TienBH,
                                                     TrongBH = dt.TrongBH,
                                                     NgayNhap = dt.NgayNhap,
                                                     DuongD = dt.DuongD,
                                                     SoPL = dt.SoPL,
                                                     Status = dt.Status,
                                                     IDCD = dt.IDCD ?? 0,
                                                     MaCB = dt.MaCB,
                                                     MaKP = dt.MaKP,
                                                     IDKB = dt.IDKB,
                                                     Loai = dt.Loai,
                                                     ThanhToan = dt.ThanhToan,
                                                     MaKPtk = dt.MaKPtk,
                                                     MaKXuat = dt.MaKXuat,
                                                     TyLeTT = dt.TyLeTT,
                                                     XHH = dt.XHH,
                                                     IDNhom = dv.IDNhom ?? 0,
                                                     MaQD = dv.MaQD,
                                                     MakpSD = dv.MaKPsd,
                                                 }).ToList();
                                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                                    {
                                        binSDichVuct.DataSource = _data.Where(p => p.MakpSD.Split(';').Contains(_makp.ToString())).ToList();
                                    }
                                    else
                                    {
                                        binSDichVuct.DataSource = _data.ToList();
                                    }
                                    grcDichVu.DataSource = binSDichVuct;
                                }
                            }
                            else
                            {
                                if (TTLuu == 2)
                                {
                                    if (!string.IsNullOrEmpty(txtChiDinh.Text))
                                    {
                                        //
                                        int _iddoncd = Convert.ToInt32(txtChiDinh.Text);
                                        var dthuoccd = DaTaContext.DThuocs.Single(p => p.IDDon == _iddoncd);
                                        var bnkb = DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN).OrderByDescending(p => p.IDKB).ToList();
                                        if (bnkb.Count > 0)
                                        {
                                            dthuoccd.MaKP = bnkb.First().MaKP;
                                            dthuoccd.MaCB = bnkb.First().MaCB;
                                        }
                                        else
                                        {
                                            dthuoccd.MaKP = DungChung.Bien.MaKP;
                                            dthuoccd.MaCB = DungChung.Bien.MaCB;
                                        }
                                        if (bnkb.Count > 0)
                                            dthuoccd.NgayKe = bnkb.First().NgayKham;
                                        dthuoccd.KieuDon = -1;
                                        DaTaContext.SaveChanges();
                                        // lưu chi tiết dịch vụ
                                        for (int i = 0; i < grvDichVu.DataRowCount; i++)
                                        {
                                            if (grvDichVu.GetRowCellValue(i, colMaDVdv) != null && grvDichVu.GetRowCellValue(i, colMaDVdv).ToString() != "")
                                            {
                                                if (grvDichVu.GetRowCellValue(i, colSoLuongdv) != null && grvDichVu.GetRowCellValue(i, colSoLuongdv).ToString() != "")
                                                {
                                                    if (grvDichVu.GetRowCellValue(i, colIDctdv) != null && grvDichVu.GetRowCellValue(i, colIDctdv).ToString() != "")
                                                    {
                                                        int idct = int.Parse(grvDichVu.GetRowCellValue(i, colIDctdv).ToString());
                                                        if (idct > 0)// sửa row
                                                        {
                                                            //if (grvDichVu.GetRowCellValue(i, colTTLuudv) != null && grvDichVu.GetRowCellValue(i, colTTLuudv).ToString() != "2")
                                                            //{
                                                            //if (grvDichVu.GetRowCellValue(i, colBSTH) == null)
                                                            //{
                                                            //    MessageBox.Show("bạn chưa nhập bác sĩ thực hiện theo CV4210");
                                                            //    return;
                                                            //}
                                                            //else
                                                            //{
                                                            DThuocct dthuocct = DaTaContext.DThuoccts.Single(p => p.IDDonct == idct);
                                                            if (grvDichVu.GetRowCellValue(i, colNgayNhapdv) != null && grvDichVu.GetRowCellValue(i, colNgayNhapdv).ToString() != "")
                                                                dthuocct.NgayNhap = Convert.ToDateTime(grvDichVu.GetRowCellValue(i, colNgayNhapdv).ToString());
                                                            dthuocct.MaDV = grvDichVu.GetRowCellValue(i, colMaDVdv) == null ? 0 : Convert.ToInt32(grvDichVu.GetRowCellValue(i, colMaDVdv));
                                                            dthuocct.DonVi = grvDichVu.GetRowCellValue(i, colDonVidv).ToString();
                                                            dthuocct.DonGia = Convert.ToDouble(grvDichVu.GetRowCellValue(i, colDonGiadv).ToString());
                                                            dthuocct.SoLuong = Convert.ToDouble(grvDichVu.GetRowCellValue(i, colSoLuongdv).ToString());
                                                            dthuocct.ThanhTien = Math.Round(Convert.ToDouble(grvDichVu.GetRowCellValue(i, colThanhTiendv)), DungChung.Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                            if (grvDichVu.GetRowCellValue(i, colTrongBHdv) != null)
                                                                dthuocct.TrongBH = Convert.ToInt32(grvDichVu.GetRowCellValue(i, colTrongBHdv));
                                                            else
                                                                dthuocct.TrongBH = 0;
                                                            if (grvDichVu.GetRowCellValue(i, colBSTH) != null)
                                                                dthuocct.MaCB = grvDichVu.GetRowCellValue(i, colBSTH).ToString();
                                                            //else
                                                            //    dthuocct.MaCB = "";
                                                            if (grvDichVu.GetRowCellValue(i, colKhoaPhongDV) != null)
                                                                dthuocct.MaKP = grvDichVu.GetRowCellValue(i, colKhoaPhongDV) == null ? 0 : Convert.ToInt32(grvDichVu.GetRowCellValue(i, colKhoaPhongDV));
                                                            else
                                                                dthuocct.MaKP = 0;
                                                            if (grvDichVu.GetRowCellValue(i, colTyLeBHTT) != null)
                                                                dthuocct.TyLeTT = Convert.ToInt32(grvDichVu.GetRowCellValue(i, colTyLeBHTT));
                                                            else
                                                                dthuocct.TyLeTT = 100;
                                                            if (grvDichVu.GetRowCellValue(i, colXHH) != null)
                                                            {
                                                                bool xhh = Convert.ToBoolean(grvDichVu.GetRowCellValue(i, colXHH));
                                                                dthuocct.XHH = xhh == true ? 1 : 0;
                                                            }


                                                            DaTaContext.SaveChanges();

                                                            //}
                                                        }
                                                        else
                                                        {// lưu row mới 
                                                            // lấy IDKB
                                                            //if (grvDichVu.GetRowCellValue(i, colBSTH) == null)
                                                            //{
                                                            //    MessageBox.Show("bạn chưa nhập bác sĩ thực hiện theo CV4210");
                                                            //    return;
                                                            //}
                                                            //else
                                                            //{
                                                            int _makp = DungChung.Bien.MaKP;
                                                            if (grvDichVu.GetRowCellValue(i, colKhoaPhongDV) != null)
                                                                _makp = Convert.ToInt32(grvDichVu.GetRowCellValue(i, colKhoaPhongDV));
                                                            int _idkb = 0;
                                                            if (bnkb.Where(p => p.MaKP == _makp).ToList().Count > 0)
                                                                _idkb = bnkb.Where(p => p.MaKP == _makp).ToList().First().IDKB;
                                                            //
                                                            DThuocct dthuocct = new DThuocct();
                                                            if (grvDichVu.GetRowCellValue(i, colNgayNhapdv) != null && grvDichVu.GetRowCellValue(i, colNgayNhapdv).ToString() != "")
                                                                dthuocct.NgayNhap = Convert.ToDateTime(grvDichVu.GetRowCellValue(i, colNgayNhapdv).ToString());
                                                            dthuocct.IDDon = int.Parse(txtChiDinh.Text.Trim());
                                                            dthuocct.IDKB = _idkb;
                                                            dthuocct.MaDV = grvDichVu.GetRowCellValue(i, colMaDVdv) == null ? 0 : Convert.ToInt32(grvDichVu.GetRowCellValue(i, colMaDVdv));
                                                            dthuocct.DonVi = grvDichVu.GetRowCellValue(i, colDonVidv).ToString().Trim();
                                                            dthuocct.DonGia = Convert.ToDouble(grvDichVu.GetRowCellValue(i, colDonGiadv).ToString());
                                                            dthuocct.SoLuong = Convert.ToDouble(grvDichVu.GetRowCellValue(i, colSoLuongdv).ToString().Trim());
                                                            if (grvDichVu.GetRowCellValue(i, colTrongBHdv) != null)
                                                                dthuocct.TrongBH = Convert.ToInt32(grvDichVu.GetRowCellValue(i, colTrongBHdv));
                                                            else
                                                                dthuocct.TrongBH = 0;
                                                            dthuocct.ThanhTien = Math.Round(Convert.ToDouble(grvDichVu.GetRowCellValue(i, colThanhTiendv)), DungChung.Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                            if (grvDichVu.GetRowCellValue(i, colBSTH) != null)
                                                                dthuocct.MaCB = grvDichVu.GetRowCellValue(i, colBSTH).ToString();
                                                            //else
                                                            //    dthuocct.MaCB = "";
                                                            if (grvDichVu.GetRowCellValue(i, colKhoaPhongDV) != null)
                                                                dthuocct.MaKP = Convert.ToInt32(grvDichVu.GetRowCellValue(i, colKhoaPhongDV));
                                                            else
                                                                dthuocct.MaKP = 0;
                                                            if (grvDichVu.GetRowCellValue(i, colTyLeBHTT) != null)
                                                                dthuocct.TyLeTT = Convert.ToInt32(grvDichVu.GetRowCellValue(i, colTyLeBHTT));
                                                            else
                                                                dthuocct.TyLeTT = 100;
                                                            if (grvDichVu.GetRowCellValue(i, colXHH) != null)
                                                            {
                                                                bool xhh = Convert.ToBoolean(grvDichVu.GetRowCellValue(i, colXHH));
                                                                dthuocct.XHH = xhh == true ? 1 : 0;
                                                            }
                                                            DaTaContext.DThuoccts.Add(dthuocct);
                                                            DaTaContext.SaveChanges();

                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        xtraChiDinh.Text = "Dịch vụ";
                                        //MessageBox.Show("Sửa thành công");
                                        TTLuu = 0;
                                        EnableButton(true);
                                        EnableControlDV(false);
                                        //grvDichVu.OptionsBehavior.Editable = false;
                                        xtraChiDinh.Refresh();
                                        int idcd = 0;
                                        var q = DaTaContext.DThuocs.Where(p => p.MaBNhan == _int_maBN).Where(p => p.PLDV == 2).ToList();
                                        if (q.Count > 0)
                                        {
                                            txtChiDinh.Text = q.First().IDDon.ToString();
                                            idcd = q.First().IDDon;
                                        }
                                        var _data0 = (from dt in DaTaContext.DThuoccts.Where(p => p.IDDon == idcd)
                                                      select new DonThuocct
                                                      {
                                                          IDDon = dt.IDDon,
                                                          IDDonct = dt.IDDonct,
                                                          MaDV = dt.MaDV,
                                                          DonVi = dt.DonVi,
                                                          DonGia = dt.DonGia,
                                                          SoLuong = dt.SoLuong,
                                                          ThanhTien = dt.ThanhTien,
                                                          TienBN = dt.TienBN,
                                                          TienBH = dt.TienBH,
                                                          TrongBH = dt.TrongBH,
                                                          NgayNhap = dt.NgayNhap,
                                                          DuongD = dt.DuongD,
                                                          SoPL = dt.SoPL,
                                                          Status = dt.Status,
                                                          IDCD = dt.IDCD,
                                                          MaCB = dt.MaCB,
                                                          MaKP = dt.MaKP,
                                                          IDKB = dt.IDKB,
                                                          Loai = dt.Loai,
                                                          ThanhToan = dt.ThanhToan,
                                                          MaKPtk = dt.MaKPtk,
                                                          MaKXuat = dt.MaKXuat,
                                                          TyLeTT = dt.TyLeTT,
                                                          XHH = dt.XHH == 1 ? true : false
                                                      }).ToList();

                                        var _data = (from dt in _data0
                                                     join dv in _lAllDichVu on dt.MaDV equals dv.MaDV
                                                     select new DonThuocct
                                                     {
                                                         IDDon = dt.IDDon,
                                                         IDDonct = dt.IDDonct,
                                                         MaDV = dt.MaDV,
                                                         DonVi = dt.DonVi,
                                                         DonGia = dt.DonGia,
                                                         SoLuong = dt.SoLuong,
                                                         ThanhTien = dt.ThanhTien,
                                                         TienBN = dt.TienBN,
                                                         TienBH = dt.TienBH,
                                                         TrongBH = dt.TrongBH,
                                                         NgayNhap = dt.NgayNhap,
                                                         DuongD = dt.DuongD,
                                                         SoPL = dt.SoPL,
                                                         Status = dt.Status,
                                                         IDCD = dt.IDCD,
                                                         MaCB = dt.MaCB,
                                                         MaKP = dt.MaKP,
                                                         IDKB = dt.IDKB,
                                                         Loai = dt.Loai,
                                                         ThanhToan = dt.ThanhToan,
                                                         MaKPtk = dt.MaKPtk,
                                                         MaKXuat = dt.MaKXuat,
                                                         TyLeTT = dt.TyLeTT,
                                                         XHH = dt.XHH,
                                                         IDNhom = dv.IDNhom ?? 0,
                                                         MaQD = dv.MaQD,
                                                         MakpSD = dv.MaKPsd
                                                     }).ToList();
                                        if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                                        {
                                            binSDichVuct.DataSource = _data.Where(p => p.MakpSD.Split(';').Contains(_makp.ToString())).ToList();
                                        }
                                        else
                                        {
                                            binSDichVuct.DataSource = _data.ToList();
                                        }
                                        grcDichVu.DataSource = binSDichVuct;

                                    }
                                }
                            }
                        }
                        break;
                    #endregion dịch vụ

                    #region diễn biến
                    case 4:
                        var dienbienMap = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.Ploai == 0 && ((DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017") ? p.MaKP == _makp : true)).ToList();
                        _ldienbien = (from db in dienbienMap
                                      select new DienBienNgayGio(db)).ToList();
                        foreach (var item in _ldienbien)
                        {
                            item.NgayNhap_24012 = item.NgayNhap.Value.ToString("dd/MM HH:mm", CultureInfo.CreateSpecificCulture("vi-VN"));
                        }
                        if (_ldienbien.Count > 0)
                            TTLuu = 2;
                        else
                            TTLuu = 1;

                        var dataSource = (List<DienBienNgayGio>)binsDienBien.DataSource;

                        switch (TTLuu)
                        {
                            case 1:
                                for (int i = 0; i < dataSource.Count; i++)
                                {
                                    if (grvDienBien.GetRowCellValue(i, colNgayNhapdb) != null && grvDienBien.GetRowCellValue(i, colNgayNhapdb).ToString() != "")
                                    {
                                        DienBien dbmoi = new DienBien();
                                        dbmoi.MaBNhan = _int_maBN;
                                        dbmoi.NgayNhap = dataSource[i].NgayNhap == null ? Convert.ToDateTime(dataSource[i].NgayNhap_24012) : dataSource[i].NgayNhap;
                                        dbmoi.DienBien1 = dataSource[i].DienBien1;
                                        dbmoi.YLenh = dataSource[i].YLenh;
                                        dbmoi.MaCB = dataSource[i].MaCB;
                                        dbmoi.HuongDTri = dataSource[i].HuongDTri;
                                        dbmoi.ThucHienYL = dataSource[i].ThucHienYL;
                                        dbmoi.TenKP = dataSource[i].TenKP;
                                        dbmoi.MaKP = dataSource[i].MaKP;

                                        dbmoi.Ploai = 0;
                                        DaTaContext.DienBiens.Add(dbmoi);
                                        DaTaContext.SaveChanges();
                                    }
                                }
                                TTLuu = 0;
                                break;
                            case 2:
                                for (int i = 0; i < dataSource.Count; i++)
                                {
                                    int id = 0;
                                    id = dataSource[i].ID;
                                    if (id > 0)
                                    {
                                        if (dataSource[i].NgayNhap != null || dataSource[i].NgayNhap_24012 != null)
                                        {
                                            var dbmoi = DaTaContext.DienBiens.Single(p => p.ID == id);
                                            dbmoi.MaBNhan = _int_maBN;
                                            dbmoi.NgayNhap = dataSource[i].NgayNhap == null ? Convert.ToDateTime(dataSource[i].NgayNhap_24012) : dataSource[i].NgayNhap;
                                            dbmoi.DienBien1 = dataSource[i].DienBien1;
                                            dbmoi.YLenh = dataSource[i].YLenh;
                                            dbmoi.MaCB = dataSource[i].MaCB;
                                            dbmoi.HuongDTri = dataSource[i].HuongDTri;
                                            dbmoi.ThucHienYL = dataSource[i].ThucHienYL;
                                            dbmoi.TenKP = dataSource[i].TenKP;
                                            dbmoi.MaKP = dataSource[i].MaKP;
                                            DaTaContext.SaveChanges();
                                        }
                                    }
                                    else
                                    {
                                        if (dataSource[i].NgayNhap != null || dataSource[i].NgayNhap_24012 != null)
                                        {
                                            DienBien dbmoi = new DienBien();
                                            dbmoi.MaBNhan = _int_maBN;
                                            dbmoi.NgayNhap = dataSource[i].NgayNhap == null ? Convert.ToDateTime(dataSource[i].NgayNhap_24012) : dataSource[i].NgayNhap;
                                            dbmoi.DienBien1 = dataSource[i].DienBien1;
                                            dbmoi.YLenh = dataSource[i].YLenh;
                                            dbmoi.MaCB = dataSource[i].MaCB;
                                            dbmoi.HuongDTri = dataSource[i].HuongDTri;
                                            dbmoi.ThucHienYL = dataSource[i].ThucHienYL;
                                            dbmoi.TenKP = dataSource[i].TenKP;
                                            dbmoi.MaKP = dataSource[i].MaKP;
                                            dbmoi.Ploai = 0;
                                            DaTaContext.DienBiens.Add(dbmoi);
                                            DaTaContext.SaveChanges();
                                        }
                                    }
                                    TTLuu = 0;
                                }
                                break;

                        }
                        xtraDBBenh.Text = "Diễn biễn bệnh";
                        grvDienBien.OptionsBehavior.ReadOnly = true;
                        EnableButton(true);
                        var dienbienMap1 = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.Ploai == 0 && ((DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017") ? p.MaKP == _makp : true)).ToList();
                        _ldienbien = (from db in dienbienMap1
                                      select new DienBienNgayGio(db)).ToList();
                        foreach (var item in _ldienbien)
                        {
                            item.NgayNhap_24012 = item.NgayNhap.Value.ToString("dd/MM HH:mm", CultureInfo.CreateSpecificCulture("vi-VN"));
                        }
                        binsDienBien.DataSource = _ldienbien;
                        grcDienBien.DataSource = binsDienBien;
                        break;
                    #endregion
                    case 5:
                        btnLuu_Click(sender, e);

                        break;
                    case 6:
                        _lchamsoc = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.Ploai == 1).ToList();
                        if (_lchamsoc.Count > 0)
                            TTLuu = 2;
                        else
                            TTLuu = 1;

                        switch (TTLuu)
                        {
                            case 1:
                                for (int i = 0; i < grvChamSoc.RowCount; i++)
                                {
                                    if (grvChamSoc.GetRowCellValue(i, colNgayCS) != null && grvChamSoc.GetRowCellValue(i, colNgayCS).ToString() != "")
                                    {
                                        DienBien dbmoi = new DienBien();
                                        dbmoi.MaBNhan = _int_maBN;

                                        dbmoi.NgayNhap = grvChamSoc.GetRowCellValue(i, colNgayCS) != null ? (DateTime?)(Convert.ToDateTime(grvChamSoc.GetRowCellValue(i, colNgayCS))) : null;
                                        dbmoi.DienBien1 = grvChamSoc.GetRowCellValue(i, colDienBienCS) != null ? grvChamSoc.GetRowCellValue(i, colDienBienCS).ToString() : "";
                                        dbmoi.YLenh = grvChamSoc.GetRowCellValue(i, colYlenh) != null ? grvChamSoc.GetRowCellValue(i, colYlenh).ToString() : "";
                                        dbmoi.MaCB = grvChamSoc.GetRowCellValue(i, colCBoCS) != null ? grvChamSoc.GetRowCellValue(i, colCBoCS).ToString() : "";
                                        dbmoi.HuongDTri = grvChamSoc.GetRowCellValue(i, colCheDoCS) != null ? grvChamSoc.GetRowCellValue(i, colCheDoCS).ToString() : "";
                                        dbmoi.ThucHienYL = grvChamSoc.GetRowCellValue(i, colThucHienCS) != null ? grvChamSoc.GetRowCellValue(i, colThucHienCS).ToString() : "";
                                        dbmoi.TenKP = grvChamSoc.GetRowCellValue(i, colTenMaKPgrvDienBien) != null ? grvChamSoc.GetRowCellValue(i, colTenMaKPgrvDienBien).ToString() : "";
                                        if (grvChamSoc.GetRowCellValue(i, colMaKPgrvDienBien) != null)
                                            dbmoi.MaKP = Convert.ToInt32(grvChamSoc.GetRowCellValue(i, colMaKPgrvDienBien));
                                        else
                                            dbmoi.MaKP = null;
                                        dbmoi.Ploai = 1;
                                        DaTaContext.DienBiens.Add(dbmoi);
                                        DaTaContext.SaveChanges();
                                    }
                                }
                                TTLuu = 0;
                                break;
                            case 2:
                                for (int i = 0; i < grvChamSoc.RowCount; i++)
                                {
                                    int id = 0;
                                    if (grvChamSoc.GetRowCellValue(i, colIDdb) != null && grvChamSoc.GetRowCellValue(i, colIDdb).ToString() != "")
                                        id = Convert.ToInt32(grvChamSoc.GetRowCellValue(i, colIDdb).ToString());
                                    if (id > 0)
                                    {
                                        if (grvChamSoc.GetRowCellValue(i, colNgayCS) != null && grvChamSoc.GetRowCellValue(i, colNgayCS).ToString() != "")
                                        {
                                            var dbmoi = DaTaContext.DienBiens.Single(p => p.ID == id);
                                            dbmoi.MaBNhan = _int_maBN;
                                            dbmoi.NgayNhap = grvChamSoc.GetRowCellValue(i, colNgayCS) != null ? (DateTime?)(Convert.ToDateTime(grvChamSoc.GetRowCellValue(i, colNgayCS))) : null;
                                            dbmoi.DienBien1 = grvChamSoc.GetRowCellValue(i, colDienBienCS) != null ? grvChamSoc.GetRowCellValue(i, colDienBienCS).ToString() : "";
                                            dbmoi.YLenh = grvChamSoc.GetRowCellValue(i, colYlenh) != null ? grvChamSoc.GetRowCellValue(i, colYlenh).ToString() : "";
                                            dbmoi.MaCB = grvChamSoc.GetRowCellValue(i, colCBoCS) != null ? grvChamSoc.GetRowCellValue(i, colCBoCS).ToString() : "";
                                            dbmoi.HuongDTri = grvChamSoc.GetRowCellValue(i, colCheDoCS) != null ? grvChamSoc.GetRowCellValue(i, colCheDoCS).ToString() : "";
                                            dbmoi.ThucHienYL = grvChamSoc.GetRowCellValue(i, colThucHienCS) != null ? grvChamSoc.GetRowCellValue(i, colThucHienCS).ToString() : "";
                                            dbmoi.TenKP = grvChamSoc.GetRowCellValue(i, colTenMaKPgrvDienBien) != null ? grvChamSoc.GetRowCellValue(i, colTenMaKPgrvDienBien).ToString() : "";
                                            if (grvChamSoc.GetRowCellValue(i, colMaKPgrvDienBien) != null)
                                                dbmoi.MaKP = Convert.ToInt32(grvChamSoc.GetRowCellValue(i, colMaKPgrvDienBien));
                                            else
                                                dbmoi.MaKP = null;
                                            DaTaContext.SaveChanges();

                                        }
                                    }
                                    else
                                    {
                                        if (grvChamSoc.GetRowCellValue(i, colNgayCS) != null && grvChamSoc.GetRowCellValue(i, colNgayCS).ToString() != "")
                                        {
                                            DienBien dbmoi = new DienBien();
                                            dbmoi.MaBNhan = _int_maBN;
                                            dbmoi.NgayNhap = grvChamSoc.GetRowCellValue(i, colNgayCS) != null ? (DateTime?)(Convert.ToDateTime(grvChamSoc.GetRowCellValue(i, colNgayCS))) : null;
                                            dbmoi.DienBien1 = grvChamSoc.GetRowCellValue(i, colDienBienCS) != null ? grvChamSoc.GetRowCellValue(i, colDienBienCS).ToString() : "";
                                            dbmoi.YLenh = grvChamSoc.GetRowCellValue(i, colYlenh) != null ? grvChamSoc.GetRowCellValue(i, colYlenh).ToString() : "";
                                            dbmoi.MaCB = grvChamSoc.GetRowCellValue(i, colCBoCS) != null ? grvChamSoc.GetRowCellValue(i, colCBoCS).ToString() : "";
                                            dbmoi.HuongDTri = grvChamSoc.GetRowCellValue(i, colCheDoCS) != null ? grvChamSoc.GetRowCellValue(i, colCheDoCS).ToString() : "";
                                            dbmoi.ThucHienYL = grvChamSoc.GetRowCellValue(i, colThucHienCS) != null ? grvChamSoc.GetRowCellValue(i, colThucHienCS).ToString() : "";
                                            dbmoi.TenKP = grvChamSoc.GetRowCellValue(i, colTenMaKPgrvDienBien) != null ? grvChamSoc.GetRowCellValue(i, colTenMaKPgrvDienBien).ToString() : "";
                                            if (grvChamSoc.GetRowCellValue(i, colMaKPgrvDienBien) != null)
                                                dbmoi.MaKP = Convert.ToInt32(grvChamSoc.GetRowCellValue(i, colMaKPgrvDienBien));
                                            else
                                                dbmoi.MaKP = null;
                                            dbmoi.Ploai = 1;
                                            DaTaContext.DienBiens.Add(dbmoi);
                                            DaTaContext.SaveChanges();
                                        }
                                    }
                                    TTLuu = 0;

                                }

                                break;

                        }
                        xtraCDChamSoc.Text = "CĐ Chăm sóc";
                        grvChamSoc.OptionsBehavior.Editable = false;
                        EnableButton(true);
                        _lchamsoc = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.Ploai == 1).ToList();
                        binsChamSoc.DataSource = _lchamsoc;
                        grcChamSoc.DataSource = binsChamSoc;
                        break;

                    case 7:
                        _lchamsoc = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.Ploai == 2).ToList();
                        if (_lchamsoc.Count > 0)
                            TTLuu = 2;
                        else
                            TTLuu = 1;

                        switch (TTLuu)
                        {
                            case 1:
                                for (int i = 0; i < grv15NgayDT.RowCount; i++)
                                {
                                    if (grv15NgayDT.GetRowCellValue(i, colNgayCS) != null && grv15NgayDT.GetRowCellValue(i, colNgayCS).ToString() != "")
                                    {
                                        DienBien dbmoi = new DienBien();
                                        dbmoi.MaBNhan = _int_maBN;

                                        dbmoi.NgayNhap = grv15NgayDT.GetRowCellValue(i, colNgayNhap15) != null ? (DateTime?)(Convert.ToDateTime(grv15NgayDT.GetRowCellValue(i, colNgayNhap15))) : null;
                                        dbmoi.DienBien1 = grv15NgayDT.GetRowCellValue(i, colDienBien15) != null ? grv15NgayDT.GetRowCellValue(i, colDienBien15).ToString() : "";
                                        dbmoi.YLenh = grv15NgayDT.GetRowCellValue(i, colYLenh15) != null ? grv15NgayDT.GetRowCellValue(i, colYLenh15).ToString() : "";
                                        dbmoi.MaCB = grv15NgayDT.GetRowCellValue(i, colCanBo15) != null ? grv15NgayDT.GetRowCellValue(i, colCanBo15).ToString() : "";
                                        dbmoi.HuongDTri = grv15NgayDT.GetRowCellValue(i, colHuongDTri15) != null ? grv15NgayDT.GetRowCellValue(i, colHuongDTri15).ToString() : "";
                                        dbmoi.ThucHienYL = grv15NgayDT.GetRowCellValue(i, colThucHienYLenh15) != null ? grv15NgayDT.GetRowCellValue(i, colThucHienYLenh15).ToString() : "";
                                        dbmoi.TenKP = grv15NgayDT.GetRowCellValue(i, colTenMaKPgrvDienBien) != null ? grv15NgayDT.GetRowCellValue(i, colTenMaKPgrvDienBien).ToString() : "";
                                        dbmoi.KetQua = grv15NgayDT.GetRowCellValue(i, colKetQua15) != null ? grv15NgayDT.GetRowCellValue(i, colKetQua15).ToString() : "";
                                        if (grv15NgayDT.GetRowCellValue(i, colMaKPgrvDienBien) != null)
                                            dbmoi.MaKP = Convert.ToInt32(grv15NgayDT.GetRowCellValue(i, colMaKPgrvDienBien));
                                        else
                                            dbmoi.MaKP = null;

                                        dbmoi.Ploai = 2;
                                        DaTaContext.DienBiens.Add(dbmoi);
                                        DaTaContext.SaveChanges();
                                    }
                                }
                                TTLuu = 0;
                                break;
                            case 2:
                                for (int i = 0; i < grv15NgayDT.RowCount; i++)
                                {
                                    int id = 0;
                                    if (grv15NgayDT.GetRowCellValue(i, colIDdb) != null && grv15NgayDT.GetRowCellValue(i, colIDdb).ToString() != "")
                                        id = Convert.ToInt32(grv15NgayDT.GetRowCellValue(i, colIDdb).ToString());
                                    if (id > 0)
                                    {
                                        if (grv15NgayDT.GetRowCellValue(i, colNgayCS) != null && grv15NgayDT.GetRowCellValue(i, colNgayCS).ToString() != "")
                                        {
                                            var dbmoi = DaTaContext.DienBiens.Single(p => p.ID == id);
                                            dbmoi.MaBNhan = _int_maBN;
                                            dbmoi.NgayNhap = grv15NgayDT.GetRowCellValue(i, colNgayNhap15) != null ? (DateTime?)(Convert.ToDateTime(grv15NgayDT.GetRowCellValue(i, colNgayNhap15))) : null;
                                            dbmoi.DienBien1 = grv15NgayDT.GetRowCellValue(i, colDienBien15) != null ? grv15NgayDT.GetRowCellValue(i, colDienBien15).ToString() : "";
                                            dbmoi.YLenh = grv15NgayDT.GetRowCellValue(i, colYLenh15) != null ? grv15NgayDT.GetRowCellValue(i, colYLenh15).ToString() : "";
                                            dbmoi.MaCB = grv15NgayDT.GetRowCellValue(i, colCanBo15) != null ? grv15NgayDT.GetRowCellValue(i, colCanBo15).ToString() : "";
                                            dbmoi.HuongDTri = grv15NgayDT.GetRowCellValue(i, colHuongDTri15) != null ? grv15NgayDT.GetRowCellValue(i, colHuongDTri15).ToString() : "";
                                            dbmoi.ThucHienYL = grv15NgayDT.GetRowCellValue(i, colThucHienYLenh15) != null ? grv15NgayDT.GetRowCellValue(i, colThucHienYLenh15).ToString() : "";
                                            dbmoi.TenKP = grv15NgayDT.GetRowCellValue(i, colTenMaKPgrvDienBien) != null ? grv15NgayDT.GetRowCellValue(i, colTenMaKPgrvDienBien).ToString() : "";
                                            dbmoi.KetQua = grv15NgayDT.GetRowCellValue(i, colKetQua15) != null ? grv15NgayDT.GetRowCellValue(i, colKetQua15).ToString() : "";
                                            if (grv15NgayDT.GetRowCellValue(i, colMaKPgrvDienBien) != null)
                                                dbmoi.MaKP = Convert.ToInt32(grv15NgayDT.GetRowCellValue(i, colMaKPgrvDienBien));
                                            else
                                                dbmoi.MaKP = null;
                                            DaTaContext.SaveChanges();

                                        }
                                    }
                                    else
                                    {
                                        if (grv15NgayDT.GetRowCellValue(i, colNgayCS) != null && grv15NgayDT.GetRowCellValue(i, colNgayCS).ToString() != "")
                                        {
                                            DienBien dbmoi = new DienBien();
                                            dbmoi.MaBNhan = _int_maBN;
                                            dbmoi.NgayNhap = grv15NgayDT.GetRowCellValue(i, colNgayNhap15) != null ? (DateTime?)(Convert.ToDateTime(grv15NgayDT.GetRowCellValue(i, colNgayNhap15))) : null;
                                            dbmoi.DienBien1 = grv15NgayDT.GetRowCellValue(i, colDienBien15) != null ? grv15NgayDT.GetRowCellValue(i, colDienBien15).ToString() : "";
                                            dbmoi.YLenh = grv15NgayDT.GetRowCellValue(i, colYLenh15) != null ? grv15NgayDT.GetRowCellValue(i, colYLenh15).ToString() : "";
                                            dbmoi.MaCB = grv15NgayDT.GetRowCellValue(i, colCanBo15) != null ? grv15NgayDT.GetRowCellValue(i, colCanBo15).ToString() : "";
                                            dbmoi.HuongDTri = grv15NgayDT.GetRowCellValue(i, colHuongDTri15) != null ? grv15NgayDT.GetRowCellValue(i, colHuongDTri15).ToString() : "";
                                            dbmoi.ThucHienYL = grv15NgayDT.GetRowCellValue(i, colThucHienYLenh15) != null ? grv15NgayDT.GetRowCellValue(i, colThucHienYLenh15).ToString() : "";
                                            dbmoi.TenKP = grv15NgayDT.GetRowCellValue(i, colTenMaKPgrvDienBien) != null ? grv15NgayDT.GetRowCellValue(i, colTenMaKPgrvDienBien).ToString() : "";
                                            dbmoi.KetQua = grv15NgayDT.GetRowCellValue(i, colKetQua15) != null ? grv15NgayDT.GetRowCellValue(i, colKetQua15).ToString() : "";
                                            if (grv15NgayDT.GetRowCellValue(i, colMaKPgrvDienBien) != null)
                                                dbmoi.MaKP = Convert.ToInt32(grv15NgayDT.GetRowCellValue(i, colMaKPgrvDienBien));
                                            else
                                                dbmoi.MaKP = null;
                                            dbmoi.Ploai = 2;
                                            DaTaContext.DienBiens.Add(dbmoi);
                                            DaTaContext.SaveChanges();
                                        }
                                    }
                                    TTLuu = 0;

                                }

                                break;

                        }
                        xtra15NgayDT.Text = DungChung.Bien.MaBV == "14018" ? "Phiếu sơ kết 15 ngày" : "Diễn biến 15 ngày ĐT";
                        List<string> listColExcept = new List<string>();
                        listColExcept.Add(colPrint.Name);
                        SetEditColumnForGrid(grv15NgayDT, false, listColExcept);
                        EnableButton(true);
                        _l15Ngaydt = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.Ploai == 2).ToList();
                        bins15Ngaydt.DataSource = _l15Ngaydt;
                        grc15NgayDT.DataSource = bins15Ngaydt;
                        break;
                    case 8:
                        var edit = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.Ploai == 3).OrderBy(p => p.NgayNhap).ToList();
                        List<DienBien> dienbien = new List<DienBien>();
                        if (edit.Count > 0)
                        {
                            for (int i = 0; i < grvVLTL.RowCount; i++)
                            {
                                int id = 0;
                                if (grvVLTL.GetRowCellValue(i, VLTLcolIDCD) != null && grvVLTL.GetRowCellValue(i, VLTLcolIDCD).ToString() != "")
                                    id = Convert.ToInt32(grvVLTL.GetRowCellValue(i, VLTLcolIDCD).ToString());
                                if (id > 0)
                                {
                                    var item = DaTaContext.DienBiens.FirstOrDefault(p => p.IDDon == id);
                                    item.IDDon = Convert.ToInt32(grvVLTL.GetRowCellValue(i, VLTLcolIDCD).ToString());
                                    item.DienBien1 = grvVLTL.GetRowCellValue(i, VLTLcolDienBienVLTL) != null ? grvVLTL.GetRowCellValue(i, VLTLcolDienBienVLTL).ToString() : "";

                                    item.KetQua = grvVLTL.GetRowCellValue(i, VLTLcolXacNhanBN) != null ? grvVLTL.GetRowCellValue(i, VLTLcolXacNhanBN).ToString() : "";
                                    string a = grvVLTL.GetRowCellValue(i, VLTLcolCanBoCD).ToString();
                                    var cb = (from c in DaTaContext.CanBoes.Where(p => p.TenCB == a)
                                              select new { c.TenCB, c.MaCB }).ToList();
                                    if (cb.Count() > 0)
                                    {
                                        item.MaCB = cb.First().MaCB;
                                    }

                                    item.HuongDTri = grvVLTL.GetRowCellValue(i, macbTH) != null ? grvVLTL.GetRowCellValue(i, macbTH).ToString() : "";

                                    if (grvVLTL.GetRowCellValue(i, VLTLcolNgayTH) != null)
                                    {
                                        item.NgayNhap = Convert.ToDateTime(grvVLTL.GetRowCellValue(i, VLTLcolNgayTH));
                                    }
                                    item.YLenh = grvVLTL.GetRowCellValue(i, VLTLcolTenDV) != null ? grvVLTL.GetRowCellValue(i, VLTLcolTenDV).ToString() : "";
                                    item.MaBNhan = _int_maBN;
                                    item.ThucHienYL = grvVLTL.GetRowCellValue(i, VLTLcolThoiGianTH) != null ? grvVLTL.GetRowCellValue(i, VLTLcolThoiGianTH).ToString() : "";
                                    item.Ploai = 3;
                                    DaTaContext.SaveChanges();
                                }
                            }
                        }
                        else
                        {//thêm mới
                            for (int i = 0; i < grvVLTL.RowCount; i++)
                            {
                                DienBien a = new DienBien();
                                if (grvVLTL.GetRowCellValue(i, VLTLcolIDCD).ToString() != null)
                                {
                                    a.IDDon = Convert.ToInt32(grvVLTL.GetRowCellValue(i, VLTLcolIDCD).ToString());
                                }
                                a.DienBien1 = grvVLTL.GetRowCellValue(i, VLTLcolDienBienVLTL) != null ? grvVLTL.GetRowCellValue(i, VLTLcolDienBienVLTL).ToString() : "";
                                a.KetQua = grvVLTL.GetRowCellValue(i, VLTLcolXacNhanBN) != null ? grvVLTL.GetRowCellValue(i, VLTLcolXacNhanBN).ToString() : "";
                                string b = grvVLTL.GetRowCellValue(i, VLTLcolCanBoCD).ToString();
                                var cb = (from c in DaTaContext.CanBoes.Where(p => p.TenCB == b)
                                          select new { c.TenCB, c.MaCB }).ToList();
                                if (cb.Count() > 0)
                                {
                                    a.MaCB = cb.First().MaCB;
                                }
                                if (grvVLTL.GetRowCellValue(i, VLTLcolNgayTH) != null)
                                {
                                    a.NgayNhap = Convert.ToDateTime(grvVLTL.GetRowCellValue(i, VLTLcolNgayTH));
                                }
                                a.MaBNhan = _int_maBN;
                                a.HuongDTri = grvVLTL.GetRowCellValue(i, macbTH) != null ? grvVLTL.GetRowCellValue(i, macbTH).ToString() : "";
                                a.Ploai = 3;
                                a.ThucHienYL = grvVLTL.GetRowCellValue(i, VLTLcolThoiGianTH) != null ? grvVLTL.GetRowCellValue(i, VLTLcolThoiGianTH).ToString() : "";
                                a.YLenh = grvVLTL.GetRowCellValue(i, VLTLcolTenDV) != null ? grvVLTL.GetRowCellValue(i, VLTLcolTenDV).ToString() : "";
                                DaTaContext.DienBiens.Add(a);
                                DaTaContext.SaveChanges();
                            }
                        }
                        SetTTTab();
                        break;
                }

                txtMaBNhan_TextChanged(null, null);
                #region check tiền tạm ứng - tiền CP <500 (27023) bỏ đức 15-09
                //if (DungChung.Bien.MaBV == "27023")
                //{
                //    #region bỏ
                //    //string _muc = "";
                //    //double _tienBH = 0;
                //    //int _pttt = 0;
                //    //int _tuyen = 1;               
                //    //string _DTuong = "";
                //    //int _HangBV = 3;
                //    //int _tyle = 0;
                //    //int noitru = radNoiTru.SelectedIndex;
                //    //_HangBV = DungChung.Ham.hangBV(DungChung.Bien.MaBV);
                //    //switch (_HangBV)
                //    //{
                //    //    case 1:
                //    //        if (noitru == 0)
                //    //            _tyle = 0;
                //    //        else
                //    //            _tyle = 40;
                //    //        break;
                //    //    case 2:
                //    //        if (DungChung.Bien.MaBV == "01830")// dinhpv yêu cầu
                //    //            _tyle = 70;
                //    //        else
                //    //        {
                //    //            if (noitru == 0)
                //    //                _tyle = 0;
                //    //            else
                //    //                _tyle = 60;
                //    //        }
                //    //        break;
                //    //    case 3:

                //    //        _tyle = 70;
                //    //        break;
                //    //    case 4:
                //    //        _tyle = 100;
                //    //        _pttt = 100;
                //    //        break;
                //    //}

                //    //var vienphi = (from kd in DaTaContext.DThuocs
                //    //               join kdct in DaTaContext.DThuoccts.OrderBy(p => p.IDDonct) on kd.IDDon equals kdct.IDDon
                //    //               join dv in DaTaContext.DichVus on kdct.MaDV equals dv.MaDV
                //    //               where (kd.MaBNhan == _int_maBN)
                //    //               group new { kdct, dv } by new { dv.TenDV, kdct.TyLeTT, kdct.Mien,  kdct.MaDV, kdct.DonGia, kdct.DonVi, kdct.ThanhToan, kdct.TrongBH, kdct.XHH } into kq
                //    //               select new { kq.Key.TenDV, kq.Key.TyLeTT, kq.Key.Mien, kq.Key.ThanhToan, kq.Key.XHH,  madv = kq.Key.MaDV, dongia = kq.Key.DonGia, donvi = kq.Key.DonVi, trongBH = kq.Key.TrongBH, soluong = kq.Sum(p => p.kdct.SoLuong), thanhtien = kq.Sum(p => p.kdct.ThanhTien) }).OrderBy(p => p.donvi).ToList();
                //    //// kiểm tra vận chuyển

                //    //foreach (var item in vienphi)
                //    //{
                //    //    //MessageBox.Show(Math.Round(89999.7, 0).ToString() + " _   " +  Math.Round(44999.85 * 2 * 100 * 0.01, 0) );
                //    //    double a = Math.Round(Math.Round(item.thanhtien, 2), 0);
                //    //    double ttien = (double)item.soluong * (double)item.dongia * (100 - item.Mien) * (double)item.TyLeTT * 0.0001;
                //    //    double b = Math.Round(Math.Round(ttien, 2), 0);

                //    //}

                //    #endregion
                //    //tính chi phí không phải tiền ngày giường
                //    double sotienchuaTT = Math.Round(ktraChiPhi(Convert.ToInt32(_int_maBN)), 0);
                //    if (SoTienTamUng - sotienchuaTT < 500000)
                //        MessageBox.Show("Số tiền tạm ứng - số tiền chưa thanh toán = " + (SoTienTamUng - sotienchuaTT).ToString("#,##0"));
                //}
                #endregion
            }
            finally
            {
                if (DungChung.Bien.MaBV == "24012")
                {
                    colNgayNhapdb.FieldName = "NgayNhap_24012";
                }
                isSave = false;
            }

        }

        public static void UpdateDienBien_DonThuoc_CLS(QLBV_Database.QLBVEntities dataContext, int _int_maBN, string _cbke, int kieudon, DateTime ngayKe, string dienBienNhap, int? maKP, bool updateDienBien = false, bool isCLS = false, bool updateDBAllAfter = true)//UpdateDienBien = true khi muoons update cán bộ kê và dienBienNhap //Ngày sửa để update khi sửa ngày kê là bản ghi diễn biến cũ  //updateDBAllAfter : Update diễn biến sau ngày kê
        {
            dataContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);

            var dienBienUpdate = dataContext.DienBiens.FirstOrDefault(o => o.MaBNhan == _int_maBN && o.NgayNhap.Value.Day == ngayKe.Day && o.NgayNhap.Value.Month == ngayKe.Month && o.NgayNhap.Value.Year == ngayKe.Year && o.Loai == ((kieudon == 0 || kieudon == 2) ? 1 : 2) && o.MaKP == maKP);
            if (dienBienUpdate != null)
            {
                dienBienUpdate.NgayNhap = ngayKe;
                dienBienUpdate.MaKP = maKP;
                dienBienUpdate.YLenh = "";
                dienBienUpdate.DienBien1 = updateDienBien ? dienBienNhap : dienBienUpdate.DienBien1;
                dienBienUpdate.MaCB = updateDienBien ? _cbke : dienBienUpdate.MaCB;
                dienBienUpdate.MaBNhan = _int_maBN;
                dienBienUpdate.Loai = ((kieudon == 0 || kieudon == 2) ? 1 : 2);
                dataContext.SaveChanges();
            }
            else
            {
                DienBien dienBienNew = new DienBien();
                dienBienNew.NgayNhap = ngayKe;
                dienBienNew.YLenh = "";
                dienBienNew.MaKP = maKP;
                dienBienNew.DienBien1 = dienBienNhap;
                dienBienNew.Ploai = 0;
                dienBienNew.MaCB = _cbke;
                dienBienNew.Loai = ((kieudon == 0 || kieudon == 2) ? 1 : 2);
                dienBienNew.MaBNhan = _int_maBN;
                dataContext.DienBiens.Add(dienBienNew);
                dataContext.SaveChanges();
            }
            if (isCLS)
                DungChung.Ham.Update_CLS_DienBienct(_int_maBN, ngayKe.Date, maKP);
            else
            {
                var ngayKeDate = ngayKe.Date;
                if (updateDBAllAfter)
                {
                    var dienBienctUpdate = dataContext.DienBiencts.Where(o => o.MaBNhan == _int_maBN && o.MaKP == maKP && o.NgayThang >= ngayKeDate).Select(p => p.NgayThang).ToList();
                    var dienBienNgayKe = dienBienctUpdate.FirstOrDefault(o => o == ngayKeDate);
                    if (dienBienctUpdate != null && dienBienctUpdate.Count > 0 && dienBienNgayKe != null && dienBienNgayKe != DateTime.MinValue)
                    {
                        foreach (var item in dienBienctUpdate)
                        {
                            DungChung.Ham.Update_DonThuoc_DienBienct(_int_maBN, item, maKP);
                        }
                    }
                    else
                        DungChung.Ham.Update_DonThuoc_DienBienct(_int_maBN, ngayKeDate, maKP);
                }
                else
                    DungChung.Ham.Update_DonThuoc_DienBienct(_int_maBN, ngayKeDate, maKP);
            }
            dataContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            var dateNgayKe = ngayKe.Date;
            if (kieudon == 0 || kieudon == 1 || kieudon == 2)
            {
                var dienBiens = dataContext.DienBiens.Where(o => o.MaBNhan == _int_maBN && (updateDBAllAfter ? (o.NgayNhap.Value > dateNgayKe) : (o.NgayNhap.Value.Day == ngayKe.Day && o.NgayNhap.Value.Month == ngayKe.Month && o.NgayNhap.Value.Year == ngayKe.Year)) && (isCLS ? o.Loai == 1 : true) && o.MaKP == maKP);
                if (dienBiens != null && dienBiens.Count() > 0)
                {
                    foreach (var item in dienBiens)
                    {
                        DungChung.Ham.Update_DienBien_All(item.ID, maKP, null, true);
                    }
                }
            }
        }

        private bool ktTienSuDiUng(int _int_maBN)
        {
            if (DungChung.Bien.MaBV == "30007")
            {
                DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                var qtiensu = DaTaContext.TienSuDiUngs.Where(p => p.MaBNhan == _int_maBN).FirstOrDefault();
                if (qtiensu != null)
                    return true;
                else
                {
                    MessageBox.Show("Bệnh nhân chưa được nhập tiền sử dị ứng");
                    int _makp = lupTimMaKP.EditValue != null ? Convert.ToInt32(lupTimMaKP.EditValue) : 0;

                    if (DungChung.Ham.KTraKB(DaTaContext, _int_maBN))
                    {
                        frmKBVaoVien frm = new frmKBVaoVien(_int_maBN, _makp);
                        frm.ShowDialog();
                    }
                    return false;
                }
            }
            else
                return true;
        }
        int sothang = 1;
        /// <summary>
        /// Lưu thông tin số thang, ngày tháng hiển thị trên phiếu đông y
        /// </summary>
        string _lydodongy = "";
        void GetValueSoThang(ThuocThang data)
        {
            cboSoThangNgay.Text = data.SoThang.ToString();
            sothang = Convert.ToInt32(data.SoThang);
            sothangSua = data.SoThang;
            mm_ghiChu.Text = data.SoThang + ";" + data.TuNgay.ToString("dd/MM/yyyy") + ";" + data.DenNgay.ToString("dd/MM/yyyy") + ";" + data.GhiChu + ";" + data.CachSac + ";" + data.CachUong;
            _lydodongy = "từ ngày " + data.TuNgay.ToString("dd/MM/yyyy") + " đến ngày " + data.DenNgay.ToString("dd/MM/yyyy") + " Số thang: " + sothang;
        }


        private void lupChanDoanKb_EditValueChanged(object sender, EventArgs e)
        {
            if (TTLuu == 1 || TTLuu == 2)
                if (!string.IsNullOrEmpty(lupChanDoanKb.Text))
                {
                    if (lupChanDoanKb.EditValue.ToString() == "0")
                    {
                        lupChanDoanKb.EditValue = "";
                        txtBenhChinh.EditValue = "";
                    }
                    else
                    {
                        lupMaICDkb.EditValue = lICD.Where(p => p.TenICD == lupChanDoanKb.EditValue.ToString()).Select(p => p.MaICD).FirstOrDefault();
                        txtBenhChinh.EditValue = lICD.Where(p => p.TenICD == lupChanDoanKb.EditValue.ToString()).Select(p => p.TenICD).FirstOrDefault();
                    }

                }
                else
                {
                    lupMaICDkb.EditValue = "";
                    txtBenhChinh.Text = "";
                }
            xtraDieuTri.Text = "Điều trị*";
            btnLuuKb.Enabled = true;
        }

        private void lupMaICDkb_EditValueChanged(object sender, EventArgs e)
        {
            if (TTLuu == 1 || TTLuu == 2)
                if (!string.IsNullOrEmpty(lupMaICDkb.Text))
                {
                    if (lupMaICDkb.EditValue.ToString() == "0")
                    {
                        lupChanDoanKb.EditValue = "";
                        lupMaICDkb.EditValue = "";
                        txtBenhChinh.Text = "";
                    }
                    else
                    {
                        lupChanDoanKb.EditValue = lICD.Where(p => p.MaICD == lupMaICDkb.EditValue.ToString()).Select(p => p.TenICD).FirstOrDefault();
                        txtBenhChinh.Text = lICD.Where(p => p.MaICD == lupMaICDkb.EditValue.ToString()).Select(p => p.TenICD).FirstOrDefault();
                    }


                }
                else
                {
                    lupChanDoanKb.EditValue = "";
                    txtBenhChinh.Text = "";
                }

            if ((DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049") && lupMaICDkb.EditValue != null && lupMaICDkb.EditValue != "")
            {
                btnPackageICD1.Enabled = true;
            }
            else
                btnPackageICD1.Enabled = false;
        }

        private void grvDonThuocct_InitNewRow(object sender, DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs e)
        {
            grvDonThuocct.SetRowCellValue(e.RowHandle, colThanhTien, 0);
            grvDonThuocct.SetRowCellValue(e.RowHandle, colTTLuu, "1");
            int loai = 1;
            if (int.TryParse(cboSoThangNgay.Text, out loai))
                loai = int.Parse(cboSoThangNgay.Text);
            grvDonThuocct.SetRowCellValue(e.RowHandle, colLoai, loai);
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            int _int_maBN = 0;
            int rs = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            var bn = data.BenhNhans.FirstOrDefault(o => o.MaBNhan == _int_maBN);
            if (DungChung.Bien.MaBV == "20001" && bn != null && bn.DTuong == "Khám miễn phí")
            {
                grvDonThuocct.SetFocusedRowCellValue(colTrongBHdv, 2);
            }
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="tongSL">Tổng số lượng đã kê trong 1 đơn, trừ số lượng dòng hiện tại</param>
        /// <param name="dsgia">danh sách giá, số lượng tồn của mã dịch vụ hiện tại</param>
        /// <param name="soluongke">số lượng kê trong dòng hiện tại</param>

        /// <returns></returns>
        private List<Ham.giaSoLoHSD> LayDSGiaHT(List<Ham.giaSoLoHSD> tongSL, List<Ham.giaSoLoHSD> dsgia, double soluongke, double gia)
        {
            List<Ham.giaSoLoHSD> _Rlist = new List<Ham.giaSoLoHSD>();
            if (gia == 0)// kê số lượng mới
            {
                foreach (var a in tongSL)
                {
                    foreach (var b in dsgia)
                    {
                        if (a.Gia == b.Gia && a.SoLo == b.SoLo && a.HanDung == b.HanDung)
                        {
                            if (a.SoLuong <= b.SoLuong)
                            {
                                b.SoLuong = b.SoLuong - a.SoLuong;
                                a.SoLuong = 0;

                                break;
                            }
                            else
                            {
                                a.SoLuong = a.SoLuong - b.SoLuong;
                                b.SoLuong = 0;
                            }
                        }
                    }
                }

                dsgia = dsgia.Where(p => p.SoLuong != 0).ToList();
                foreach (var a in dsgia)
                {
                    QLBV.DungChung.Ham.giaSoLoHSD moi = new QLBV.DungChung.Ham.giaSoLoHSD();
                    moi.Gia = a.Gia;
                    moi.HanDung = a.HanDung;
                    moi.SoLo = a.SoLo;
                    if (soluongke <= a.SoLuong || (DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24389" || DungChung.Bien.MaBV == "24009" || DungChung.Bien.MaBV == "24303" || DungChung.Bien.MaBV == "24388" || DungChung.Bien.MaBV == "24272"))
                    {
                        if (soluongke == 0) // TH mới chọn dịch vụ
                            moi.SoLuong = a.SoLuong;
                        else
                            moi.SoLuong = soluongke;
                        _Rlist.Add(moi);
                        break;
                    }
                    else
                    {
                        soluongke = soluongke - a.SoLuong;
                        moi.SoLuong = a.SoLuong;
                        _Rlist.Add(moi);
                    }

                }
            }
            else// sửa số lượng
            {
                foreach (var a in tongSL)
                {
                    foreach (var b in dsgia)
                    {
                        if (a.Gia == b.Gia && a.SoLo == b.SoLo && a.HanDung == b.HanDung)
                        {
                            if (a.SoLuong <= b.SoLuong)
                            {
                                b.SoLuong = b.SoLuong - a.SoLuong;
                                a.SoLuong = 0;

                                break;
                            }
                            else
                            {
                                a.SoLuong = a.SoLuong - b.SoLuong;
                                b.SoLuong = 0;
                            }
                        }
                    }
                }

                dsgia = dsgia.Where(p => p.SoLuong != 0).ToList();
                foreach (var a in dsgia)
                {
                    if (a.Gia == gia)
                    {
                        QLBV.DungChung.Ham.giaSoLoHSD moi = new QLBV.DungChung.Ham.giaSoLoHSD();
                        moi.Gia = a.Gia;
                        moi.HanDung = a.HanDung;
                        moi.SoLo = a.SoLo;
                        if (soluongke <= a.SoLuong)
                        {
                            if (soluongke == 0) // TH mới chọn dịch vụ
                                moi.SoLuong = a.SoLuong;
                            else
                                moi.SoLuong = soluongke;
                            _Rlist.Add(moi);
                            a.SoLuong = a.SoLuong - soluongke;
                            break;
                        }
                        else
                        {
                            soluongke = soluongke - a.SoLuong;
                            moi.SoLuong = a.SoLuong;
                            a.SoLuong = 0;
                            _Rlist.Add(moi);
                        }
                    }
                }
                if (soluongke > 0)
                {
                    dsgia = dsgia.Where(p => p.SoLuong != 0).ToList();
                    foreach (var a in dsgia)
                    {

                        QLBV.DungChung.Ham.giaSoLoHSD moi = new QLBV.DungChung.Ham.giaSoLoHSD();
                        moi.Gia = a.Gia;
                        moi.HanDung = a.HanDung;
                        moi.SoLo = a.SoLo;
                        if (soluongke <= a.SoLuong)
                        {
                            if (soluongke == 0) // TH mới chọn dịch vụ
                                moi.SoLuong = a.SoLuong;
                            else
                                moi.SoLuong = soluongke;
                            _Rlist.Add(moi);
                            break;
                        }
                        else
                        {
                            soluongke = soluongke - a.SoLuong;
                            moi.SoLuong = a.SoLuong;
                            _Rlist.Add(moi);
                        }

                    }
                }

            }

            _Rlist = _Rlist.Where(p => p.SoLuong > 0).ToList();
            return RefreshList(_Rlist);

        }
        public List<Ham.giaSoLoHSD> RefreshList(List<Ham.giaSoLoHSD> _Rlist)
        {
            List<Ham.giaSoLoHSD> _FreshList = new List<Ham.giaSoLoHSD>();
            Ham.giaSoLoHSD tem = new Ham.giaSoLoHSD();

            foreach (var a in _Rlist)
            {
                if (_FreshList.Count == 0)
                    _FreshList.Add(a);
                else
                {
                    tem = _FreshList.Last();
                    if (a.Gia == tem.Gia && a.SoLo == tem.SoLo && a.HanDung == tem.HanDung)
                        tem.SoLuong = tem.SoLuong + a.SoLuong;
                    else
                        _FreshList.Add(a);
                }
            }

            return _FreshList;
        }
        private string _getDDung(int madv)
        {
            //try
            //{
            //    if (connect.isConnect)
            //    {
            //        string strSQL = "SELECT DuongD FROM dbo.DichVu WHERE MaDV = '" + madv + "'";

            //        DataTable dtTble = connect.FillDatatable(strSQL, CommandType.Text);
            //        if (dtTble.Rows.Count > 0)
            //        {
            //            if (!string.IsNullOrEmpty(dtTble.Rows[0]["DuongD"].ToString()))
            //                return dtTble.Rows[0]["DuongD"].ToString() + " ngày ";
            //            else
            //                return "";
            //        }
            //        else
            //            return "";
            //    }
            //    else
            //    {
            //        MessageBox.Show("Lỗi kết nối CSDL");
            //        return "";
            //    }
            //}
            //catch (Exception ex)
            //{
            //    MessageBox.Show("Lỗi kết nối CSDL");
            //    return "";
            //}
            try
            {
                string dd = "";
                var ddung = _lDichvu.Where(p => p.MaDV == madv).Select(p => p.DuongD).ToList();
                if (ddung.Count > 0)
                {
                    if (ddung.First() != null)
                        dd = ddung.First().ToString() + " ngày ";
                    else
                        dd = "";
                }
                return dd;
            }
            catch (Exception)
            {
                MessageBox.Show("Thuốc chưa có đường dùng");
                return "";
            }
        }
        static double tonthuoc = 0;
        static double soluongt = 0;// số lượng một loại thuốc được kê trên cùng 1 đơn thuốc 
        double _slTonDaLuu = 0, _slTonChuaLuu = 0;// số lượng một loại thuốc đã lưu trên cùng 1 đơn thuốc của row dang sửa 
        string _solo = "";// số lo của thuốc được focus
        DateTime? _handung = null;// hạn dùng của thuốc được focus
        int ppxuat = -1;
        bool ktCellChange = true;// kiểm tra là thêm mới thủ công hay tự nhảy khi hết số lượng theo giá đó và nhảy sang giá khác
        List<int> slKhongDu_MaDV = new List<int>();
        private void grvDonThuocct_CellValueChanged(object sender, DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs e)
        {
            bool kt = true;
            List<DungChung.Ham.giaSoLoHSD> dsgia = new List<Ham.giaSoLoHSD>();
            List<DungChung.Ham.giaSoLoHSD> dsgiaHT = new List<Ham.giaSoLoHSD>(); // lấy ra danh sách giá đã trừ đi số lượng kê hiện tại
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            xtraKeDon.Text = "Đơn thuốc*";
            btnLuuKb.Enabled = true;
            string _macbke = "";
            int madv = 0;
            int _trongBH = 1;
            int _mien = 0;
            int _linh = 0;
            int makho = 0;
            if (lupKhoXuat.EditValue != null)
                makho = Convert.ToInt32(lupKhoXuat.EditValue);
            int _makho = Convert.ToInt32(lupKhoXuat.EditValue);
            var khoKe = DaTaContext.KPhongs.FirstOrDefault(o => o.MaKP == _makho);
            switch (e.Column.Name)
            {
                case "colMaDVdt":
                    #region colMaDVdt
                    int _mak = 0;
                    if (lupKhoXuat.EditValue != null)
                    {
                        cboDonGia.Items.Clear();
                        _mak = Convert.ToInt32(lupKhoXuat.EditValue);
                        if (grvDonThuocct.GetRowCellValue(e.RowHandle, colMaDVdt) != null)
                        {

                            madv = Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle, colMaDVdt));
                            var dichVuKe = DaTaContext.DichVus.FirstOrDefault(p => p.MaDV == madv);
                            //set dv gay tê
                            if (dichVuKe != null && dichVuKe.isGayTe == true)
                            {
                                List<DV_GT> _lgt = new List<DV_GT>();
                                _lgt = (from cls in DaTaContext.CLS.Where(p => p.MaBNhan == (int)_int_maBN)
                                        join cd in DaTaContext.ChiDinhs.Where(p => p.Status == 0) on cls.IdCLS equals cd.IdCLS
                                        join dv in DaTaContext.DichVus.Where(p => p.MaQD.ToLower().Contains("_GT")) on cd.MaDV equals dv.MaDV
                                        select new DV_GT()
                                        {
                                            ThuocDVGayTe = dv.MaDV,
                                            TenDV_GT = dv.TenDV
                                        }).ToList();

                                if (_lgt.Count() > 0)
                                {
                                    _lgt.Add(new DV_GT { MaQD = "Không chọn", TenDV_GT = "", ThuocDVGayTe = 0 });
                                    colGayTe.Visible = true;
                                    lupDVGayTe.DataSource = _lgt;
                                    int _mdv = _lgt.First().ThuocDVGayTe;
                                    grvDonThuocct.SetRowCellValue(e.RowHandle, colGayTe, _mdv);
                                    //grvDonThuocct.SetRowCellValue(e.RowHandle, colGayTe, _mdv);
                                }
                            }
                            //set trong danh mục
                            _trongBH = 1;
                            int _statusKL = 0;
                            double tyleBHTT = 100;
                            if (dichVuKe != null)
                            {
                                tyleBHTT = dichVuKe.BHTT ?? 100;
                                _trongBH = dichVuKe.TrongDM.Value;
                                if (DungChung.Bien.MaBV == "34019")
                                    _mien = dichVuKe.Mien;
                            }
                            grvDonThuocct.SetRowCellValue(e.RowHandle, colTyLeBHTT_dt, tyleBHTT);
                            grvDonThuocct.SetRowCellValue(e.RowHandle, colMienCT, _mien);
                            int iddtbn = -10;
                            if (grvBNhankb.GetFocusedRowCellValue(colIDDTBNhan) != null)
                                iddtbn = Convert.ToInt32(grvBNhankb.GetFocusedRowCellValue(colIDDTBNhan));
                            if (DungChung.Bien._idDTBHYT != iddtbn && _trongBH == 1)
                                _trongBH = 0;
                            //if (DungChung.Bien.MaBV == "01071") //Req-1509 27-10,đức tạm bỏ 05/11
                            //{
                            //    var TTBN = DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN).FirstOrDefault();
                            //    var KtraVTYT = (from n in DaTaContext.NhomDVs
                            //                    join tn in DaTaContext.TieuNhomDVs.Where(p=>p.TenTN.Contains("nhóm tuổi")) on n.IDNhom equals tn.IDNhom
                            //                    join dv in DaTaContext.DichVus.Where(p => p.MaDV == madv) on tn.IdTieuNhom equals dv.IdTieuNhom
                            //                    select dv).ToList();
                            //    if (TTBN != null && TTBN.Tuoi > 6 && TTBN.Tuoi < 70 && _trongBH == 1 && KtraVTYT.Count > 0)
                            //        _trongBH = 0;
                            //}
                            //
                            // phòng mổ _trongBH ==2, trạng thai thuốc =-1 không lĩnh (BV thanh hà - 30009)

                            if (DungChung.Bien.MaBV == "30009" || DungChung.Bien.MaBV == "30005" || DungChung.Bien.MaBV == "30004")
                            {
                                var kp = _lKphongall.Where(p => p.MaKP == DungChung.Bien.MaKP).ToList();
                                if (kp.Count > 0)
                                {
                                    int mack = kp.First().MaCK;
                                    if (DungChung.Bien._lChuyenKhoa.Where(p => p.MaCK == mack).Select(p => p.ChuyenKhoa).FirstOrDefault() == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.PhauThuat)
                                    {
                                        //if (DungChung.Bien.MaBV == "30009") ngày 05-01 anh quý thanh hà y/c
                                        //    _statusKL = -1;
                                        _trongBH = 2;
                                    }
                                }
                            }
                            //
                            // TT

                            grvDonThuocct.SetRowCellValue(e.RowHandle, coltrongBH, _trongBH);
                            try
                            {
                                grvDonThuocct.SetRowCellValue(e.RowHandle, colStatusct, _statusKL);
                            }
                            catch (Exception) { }
                            grvDonThuocct.SetRowCellValue(e.RowHandle, colDonVi, DungChung.Ham._getDonVi(DaTaContext, madv));
                            if (DungChung.Bien.HDSDDonThuoc == 0)
                            {
                                grvDonThuocct.SetRowCellValue(e.RowHandle, colDuongD, _getDDung(madv));
                                if (dichVuKe.DongY != 1 || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24272")
                                {
                                    grvDonThuocct.SetRowCellValue(e.RowHandle, collan, "1");
                                    grvDonThuocct.SetRowCellValue(e.RowHandle, colLuong, "1");
                                }
                                grvDonThuocct.SetRowCellValue(e.RowHandle, colmoilan, " lần, mỗi lần ");
                                grvDonThuocct.SetRowCellValue(e.RowHandle, coldviuong, " " + Ham._getDonVi(DaTaContext, madv));
                            }
                            if (DungChung.Bien.MaBV == "00000")// || DungChung.Bien.MaBV == "01071")//bỏ đơn vị 30340 kê giá theo giá trong ds giá
                            {
                                double dongia = DungChung.Ham._getGiaSD(DaTaContext, madv, 0, _trongBH, 2, _mak, dtNgayKe.DateTime);
                                if (dongia > 0)
                                    grvDonThuocct.SetRowCellValue(e.RowHandle, colDonGia, dongia);
                                else
                                    MessageBox.Show("Thuốc chưa có giá trong danh mục");
                            }
                            else
                            {
                                dsgia = Ham._getDSGia(DaTaContext, madv, makho);
                                // lấy tổng số lượng thuốc đã kê
                                //double tongSL = 0;
                                List<Ham.giaSoLoHSD> tongSL = new List<Ham.giaSoLoHSD>();
                                double SLKe = 0;//sl kê hiện tại

                                for (int i = 0; i <= grvDonThuocct.RowCount; i++)
                                {

                                    if (i != e.RowHandle && grvDonThuocct.GetRowCellValue(i, colMaDVdt) != null && grvDonThuocct.GetRowCellValue(i, colSoLuong) != null)
                                    {
                                        if (Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colMaDVdt)) == madv)
                                        {
                                            Ham.giaSoLoHSD moi = new Ham.giaSoLoHSD();
                                            // tongSL = tongSL + Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colSoLuong));
                                            moi.SoLuong = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colSoLuong));
                                            if (grvDonThuocct.GetRowCellValue(i, colDonGia) != null)
                                                moi.Gia = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colDonGia));
                                            if (grvDonThuocct.GetRowCellValue(i, colSoLo) != null)
                                                moi.SoLo = grvDonThuocct.GetRowCellValue(i, colSoLo).ToString();
                                            if (grvDonThuocct.GetRowCellValue(i, colHanDung) != null)
                                                moi.HanDung = Convert.ToDateTime(grvDonThuocct.GetRowCellValue(i, colHanDung));
                                            tongSL.Add(moi);
                                        }
                                    }
                                }
                                if (grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLuong) != null)
                                    SLKe = Convert.ToDouble(grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLuong));
                                foreach (var dct in _listGiaSua)
                                {
                                    if (dct.MaDV > 0 && dct.MaDV == madv)
                                        dsgia.Insert(0, new Ham.giaSoLoHSD { MaDV = dct.MaDV, Gia = dct.Gia, SoLuong = dct.SoLuong, SoLo = dct.SoLo, HanDung = dct.HanDung });
                                }

                                if (DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24272")
                                {
                                    dsgiaHT = LayDSGiaHT(tongSL, dsgia, SLKe, 0);
                                    if (dsgiaHT.Count > 0)
                                    {
                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colDonGia, dsgiaHT.First().Gia);
                                        kt = ktCellChange;
                                        ktCellChange = false;
                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLo, dsgiaHT.First().SoLo);
                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colHanDung, dsgiaHT.First().HanDung);
                                        ktCellChange = kt;
                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuongct, 0);
                                    }
                                }
                                else
                                {
                                    dsgiaHT = dsgia.Where(p => p.SoLuong > 0).ToList();

                                    if (dsgiaHT.Count > 0)
                                    {
                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colDonGia, dsgiaHT.First().Gia);
                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLo, dsgiaHT.First().SoLo);
                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colHanDung, dsgiaHT.First().HanDung);
                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuong, 0);
                                    }
                                }



                                //dsgia = DungChung.Ham._getGia(DaTaContext, madv, _mak);
                                //grvDonThuocct.SetRowCellValue(e.RowHandle,colDonGia, dsgia.Gia);
                                //grvDonThuocct.SetRowCellValue(e.RowHandle,colSoLo, dsgia.SoLo);
                                //grvDonThuocct.SetRowCellValue(e.RowHandle,colHanDung, dsgia.HanDung);
                                ////if (_solo == "")
                                ////    grvDonThuocct.SetRowCellValue(e.RowHandle,colSoLo, DungChung.Bien._solo);
                                ////if (_handung == null)
                                ////    grvDonThuocct.SetRowCellValue(e.RowHandle,colHanDung, DungChung.Bien.HanDung);
                            }
                            if (cboKieuDon.SelectedIndex == 2)
                            {

                                if (lupNguoiKe.EditValue != null)
                                    _macbke = lupNguoiKe.EditValue.ToString();
                                var dthuoc = (from dt in DaTaContext.DThuocs.Where(p => p.MaKXuat == _mak).Where(p => p.MaCB == _macbke).Where(p => p.MaBNhan == _int_maBN).Where(p => p.KieuDon == 0 || p.KieuDon == 1 || p.KieuDon == 5 || (DungChung.Bien.MaBV != "27022" ? true : p.KieuDon == -1))
                                              join dtct in DaTaContext.DThuoccts.Where(p => p.MaDV == madv) on dt.IDDon equals dtct.IDDon
                                              where dt.NgayKe.Value.Day == dtNgayKe.DateTime.Day && dt.NgayKe.Value.Month == dtNgayKe.DateTime.Month
                                              group dtct by new { dtct.DonGia, dtct.SoLo } into kq
                                              select new { kq.Key.SoLo, kq.Key.DonGia, SL = kq.Sum(p => p.SoLuong), TrongBH = kq.FirstOrDefault().TrongBH }).ToList();
                                colDonGia.OptionsColumn.ReadOnly = false;
                                colDonGia.OptionsColumn.AllowEdit = true;
                                colDonGia.OptionsColumn.AllowFocus = true;
                                cboDonGia.Items.Clear();
                                grvDonThuocct.SetRowCellValue(e.RowHandle, colDonGia, "0");

                                if (DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24272")
                                {
                                    var dthuoc24012 = (from dt in DaTaContext.DThuocs.Where(p => p.MaKXuat == _mak).Where(p => p.MaCB == _macbke).Where(p => p.MaBNhan == _int_maBN).Where(p => p.KieuDon == 0 || p.KieuDon == 1 || p.KieuDon == 5 || (DungChung.Bien.MaBV != "27022" ? true : p.KieuDon == -1))
                                                       join dtct in DaTaContext.DThuoccts.Where(p => p.MaDV == madv) on dt.IDDon equals dtct.IDDon
                                                       where dt.NgayKe.Value.Day == dtNgayKe.DateTime.Day && dt.NgayKe.Value.Month == dtNgayKe.DateTime.Month
                                                       group dtct by new { dtct.DonGia, dtct.SoLo, dtct.HanDung } into kq
                                                       select new { kq.Key.SoLo, kq.Key.DonGia, kq.Key.HanDung, SL = kq.Sum(p => p.SoLuong), TrongBH = kq.FirstOrDefault().TrongBH }).ToList();
                                    foreach (var a in dthuoc24012)
                                    {
                                        cboDonGia.Items.Add(a.DonGia);
                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colDonGia, a.DonGia);
                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLo, a.SoLo);
                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuong, a.SL * (-1));
                                        grvDonThuocct.SetRowCellValue(e.RowHandle, coltrongBH, a.TrongBH);
                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colHanDung, a.HanDung);
                                        if (khoKe != null && (khoKe.IsMuaNgoai == null || khoKe.IsMuaNgoai == false))
                                        {
                                            if (ppxuat == 3)
                                            {
                                                double b = DungChung.Ham._checkTon_KD1(DaTaContext, madv, _mak, a.DonGia, 0, a.SoLo, a.HanDung);
                                                grpDThuocct.Text = "Số lượng tồn: " + b.ToString();
                                            }
                                            else
                                            {
                                                grpDThuocct.Text = "Số lượng tồn: " + (a.SL * (-1)).ToString();
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    foreach (var a in dthuoc)
                                    {
                                        cboDonGia.Items.Add(a.DonGia);
                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colDonGia, a.DonGia);
                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLo, a.SoLo);
                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuong, a.SL * (-1));
                                        grvDonThuocct.SetRowCellValue(e.RowHandle, coltrongBH, a.TrongBH);
                                        if (khoKe != null && (khoKe.IsMuaNgoai == null || khoKe.IsMuaNgoai == false))
                                        {
                                            if (ppxuat == 3)
                                            {
                                                double b = DungChung.Ham._checkTon_KD(DaTaContext, madv, _mak, a.DonGia, 0, a.SoLo);
                                                grpDThuocct.Text = "Số lượng tồn: " + b.ToString();
                                            }
                                            else
                                            {
                                                grpDThuocct.Text = "Số lượng tồn: " + (a.SL * (-1)).ToString();
                                            }
                                        }
                                    }
                                }
                            }
                            // et colum colTTluu để biết là tạo mới row hay sửa row trên chi tiết đơn
                            if (TTLuu == 2)
                            {
                                if (grvDonThuocct.GetRowCellValue(e.RowHandle, colIDDonct) != null && grvDonThuocct.GetRowCellValue(e.RowHandle, colIDDonct).ToString() != "")
                                {
                                    if (int.Parse(grvDonThuocct.GetRowCellValue(e.RowHandle, colIDDonct).ToString()) > 0)
                                    {

                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colTTLuu, "2");
                                    }
                                }
                            }
                            grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuongctdt, "0");
                            grvDonThuocct.SetRowCellValue(e.RowHandle, colThanhTien, "0");
                            if (ktCellChange)
                            {
                                tonthuoc = DungChung.Bien.SoLuongTon;// dsgia.SoLuong;
                                grvDonThuocct.SetRowCellValue(e.RowHandle, colMaCC, DungChung.Bien._maCC);
                                soluongt = 0;
                                int thuocTrung = 0;

                                for (int i = 0; i <= grvDonThuocct.RowCount; i++)
                                {
                                    if (grvDonThuocct.GetRowCellValue(i, colMaDVdt) != null)
                                        if (grvDonThuocct.GetRowCellValue(i, colSoLuong) != null)
                                        {
                                            if (madv == Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, colMaDVdt)))
                                            {
                                                if (i != e.RowHandle)
                                                    thuocTrung++;
                                                if (grvDonThuocct.GetRowCellValue(i, colIDDonct) != null && Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, colIDDonct)) <= 0)
                                                //DungChung.Bien.SoLuongTon = 0;
                                                {
                                                    if (grvDonThuocct.GetRowCellValue(i, colStatusct) != null && grvDonThuocct.GetRowCellValue(i, colStatusct).ToString() != "")
                                                        _linh = Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, colStatusct));
                                                    else
                                                        _linh = 0;
                                                    if (_linh == 0)
                                                        soluongt += Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colSoLuong));
                                                }
                                            }
                                        }
                                }
                                if (thuocTrung > 0)
                                    MessageBox.Show("Thuốc đã được kê " + thuocTrung + " lần");
                                if (ppxuat == 3)
                                {
                                    List<Ham.giaSoLoHSD> tongSL = new List<Ham.giaSoLoHSD>();
                                    for (int i = 0; i <= grvDonThuocct.RowCount; i++)
                                    {
                                        if (i != e.RowHandle && grvDonThuocct.GetRowCellValue(i, colMaDVdt) != null && grvDonThuocct.GetRowCellValue(i, colSoLuong) != null && grvDonThuocct.GetRowCellValue(i, colMaDVdt).ToString() != "" && grvDonThuocct.GetRowCellValue(i, colSoLuong).ToString() != "")
                                        {
                                            if (Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colMaDVdt)) == madv)
                                            {
                                                Ham.giaSoLoHSD moi = new Ham.giaSoLoHSD();
                                                moi.SoLuong = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colSoLuong));
                                                if (grvDonThuocct.GetRowCellValue(i, colDonGia) != null && grvDonThuocct.GetRowCellValue(i, colDonGia).ToString() != "")
                                                    moi.Gia = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colDonGia));
                                                if (grvDonThuocct.GetRowCellValue(i, colSoLo) != null)
                                                    moi.SoLo = grvDonThuocct.GetRowCellValue(i, colSoLo).ToString();
                                                if (grvDonThuocct.GetRowCellValue(i, colHanDung) != null && grvDonThuocct.GetRowCellValue(i, colHanDung).ToString() != "")
                                                    moi.HanDung = Convert.ToDateTime(grvDonThuocct.GetRowCellValue(i, colHanDung));
                                                tongSL.Add(moi);
                                            }
                                        }
                                    }
                                    double b = grvDonThuocct.GetRowCellValue(e.RowHandle, colDonGia) != null ? (double)grvDonThuocct.GetRowCellValue(e.RowHandle, colDonGia) : 0;
                                    string c = grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLo) != null ? (string)grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLo) : "";
                                    tonthuoc = DungChung.Ham._checkTon_KD(DaTaContext, madv, _mak, b, 0, c);
                                    if (DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24272")
                                    {
                                        DateTime d = grvDonThuocct.GetRowCellValue(e.RowHandle, colHanDung) != null ? (DateTime)grvDonThuocct.GetRowCellValue(e.RowHandle, colHanDung) : default(DateTime);
                                        tonthuoc = DungChung.Ham._checkTon_KD1(DaTaContext, madv, _mak, b, 0, c, d);
                                    }
                                    if (cboKieuDon.SelectedIndex != 2)
                                        if (khoKe != null && (khoKe.IsMuaNgoai == null || khoKe.IsMuaNgoai == false))
                                            grpDThuocct.Text = "Số lượng tồn: " + (tonthuoc - tongSL.Where(p => p.SoLo == c).Sum(p => p.SoLuong)).ToString();
                                    if (DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24272")
                                    {
                                        DateTime d = grvDonThuocct.GetRowCellValue(e.RowHandle, colHanDung) != null ? (DateTime)grvDonThuocct.GetRowCellValue(e.RowHandle, colHanDung) : default(DateTime);
                                        grpDThuocct.Text = "Số lượng tồn: " + (tonthuoc - tongSL.Where(p => p.SoLo == c && p.HanDung == d).Sum(p => p.SoLuong)).ToString();
                                    }
                                }
                                else
                                {
                                    soluongt += DungChung.Ham._getSL_DongY(DaTaContext, madv, soluongt, _mak);

                                    if (cboKieuDon.SelectedIndex != 2)
                                        if (khoKe != null && (khoKe.IsMuaNgoai == null || khoKe.IsMuaNgoai == false))
                                            grpDThuocct.Text = "Số lượng tồn: " + (tonthuoc - soluongt).ToString();
                                }
                            }

                        }
                    }
                    else
                    {
                        MessageBox.Show("Bạn chưa chọn kho xuất");
                    }
                    break;
                #endregion
                #region colStatusct
                case "colStatusct":

                    double dgia = 0;
                    double sl = 0;
                    string solo1 = "";
                    int makp = 0, iddonct1 = 0;
                    if (grvDonThuocct.GetRowCellValue(e.RowHandle, colIDDonct) != null && grvDonThuocct.GetRowCellValue(e.RowHandle, colIDDonct).ToString() != "")
                        iddonct1 = Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle, colIDDonct));
                    if (grvDonThuocct.GetRowCellValue(e.RowHandle, colStatusct) != null && grvDonThuocct.GetRowCellValue(e.RowHandle, colStatusct).ToString() != "")
                        _linh = Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle, colStatusct));
                    if (_linh == 0)
                    {
                        if (grvDonThuocct.GetRowCellValue(e.RowHandle, colMaDVdt) != null)
                            madv = Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle, colMaDVdt));
                        if (grvDonThuocct.GetRowCellValue(e.RowHandle, colDonGia) != null && grvDonThuocct.GetRowCellValue(e.RowHandle, colDonGia).ToString() != "")
                            dgia = Convert.ToDouble(grvDonThuocct.GetRowCellValue(e.RowHandle, colDonGia));
                        if (grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLuong) != null && grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLuong).ToString() != "")
                            sl = Convert.ToDouble(grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLuong));
                        if (lupKhoXuat.EditValue != null)
                            makp = Convert.ToInt32(lupKhoXuat.EditValue);
                        if (grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLo) != null)
                            solo1 = (grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLo)).ToString();
                        if (DungChung.Ham._checkTon(DaTaContext, madv, makp, dgia, sl, solo1) <= 0)
                        {
                            grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuong, "0");
                            grvDonThuocct.Columns["SoLuong"].OptionsColumn.AllowEdit = true;
                        }
                    }
                    else
                    {
                        //  DungChung.Ham._checkTon(  
                    }
                    //grvDonThuocct.SetRowCellValue(e.RowHandle,coltrongBH, _trongBH);
                    if (_linh == 1 || _linh == 2)
                    {

                        MessageBox.Show("Bạn chỉ có thể chọn 'K.Lĩnh' hoặc 'Lĩnh'");
                        var statusold = DaTaContext.DThuoccts.Where(p => p.IDDonct == iddonct1).Select(p => p.Status).FirstOrDefault();
                        if (statusold != null)
                            grvDonThuocct.SetRowCellValue(e.RowHandle, colStatusct, statusold);
                        else
                            grvDonThuocct.SetRowCellValue(e.RowHandle, colStatusct, 0);
                        //grvDonThuocdt_FocusedRowChanged(null, null);

                        //grvchiDinh.SetRowCellValue(e.RowHandle,e.Column.Name, grvchiDinh.GetRowCellValue(e.RowHandle,e.Column.Name));
                    }

                    break;
                #endregion

                case "colSoLuongctdt":
                    #region colSoLuongctdt
                    if (ktCellChange)
                    {
                        if (grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLuongctdt) != null && grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLuongctdt).ToString() != "")
                        {//
                            if (grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLuongctdt).ToString() != "0")
                            {
                                double slct = Convert.ToDouble(grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLuongctdt));
                                double soluong = 0;
                                if (DungChung.Bien.MaBV != "14017")
                                {
                                    int loai = 1;
                                    if (grvDonThuocct.GetRowCellValue(e.RowHandle, colLoai) != null)
                                        loai = Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle, colLoai));
                                    if (loai <= 0)
                                        loai = 1;
                                    soluong = slct * loai;
                                    grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuong, soluong);
                                }
                                else
                                {
                                    if (ktCellChange)
                                    {
                                        if (grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLuongct) != null && grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLuongct).ToString() != "")
                                        {
                                            soluong = slct * sothangSua;
                                            grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuong, soluong);
                                        }
                                        else
                                        {
                                            grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuong, "0");
                                        }
                                    }
                                }
                                if (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                                {
                                    madv = Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle, colMaDVdt));
                                    var ktdongy = _lDichvu.Where(p => p.MaDV == madv && p.DongY == 1).ToList();
                                    if (ktdongy.Count > 0)
                                    {
                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colLuong, "1");
                                        // grvDonThuocct.SetRowCellValue(e.RowHandle,colLuong, soluong);
                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colLuong, slct);
                                    }
                                }
                            }
                            else
                            {
                                grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuong, "0");
                            }
                        }
                    }
                    //else
                    //{
                    //    if (grvDonThuocct.GetRowCellValue(e.RowHandle,colSoLuongctdt) == null || grvDonThuocct.GetRowCellValue(e.RowHandle,colSoLuongctdt).ToString() == "" || grvDonThuocct.GetRowCellValue(e.RowHandle,colSoLuongctdt).ToString() == "0")
                    //    {//
                    //        if (grvDonThuocct.GetRowCellValue(e.RowHandle,colSoLuong).ToString() != "0")
                    //        {
                    //            int loai = 1;
                    //            if (grvDonThuocct.GetRowCellValue(e.RowHandle,colLoai) != null)
                    //                loai = Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle,colLoai));
                    //            if (loai <= 0)
                    //                loai = 1;
                    //            double sluong = Convert.ToDouble(grvDonThuocct.GetRowCellValue(e.RowHandle,colSoLuong));
                    //            double slct = (double)sluong / loai;
                    //            grvDonThuocct.SetRowCellValue(e.RowHandle,colSoLuongctdt, slct);
                    //        }
                    //    }
                    //}

                    break;
                #endregion
                case "colSoLuong":
                    #region colSoLuong
                    if (ktCellChange)
                    {
                        if (grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLuong) != null && grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLuong).ToString() != "")
                        {
                            if (grvDonThuocct.GetRowCellValue(e.RowHandle, colStatusct) != null && grvDonThuocct.GetRowCellValue(e.RowHandle, colStatusct).ToString() != "")
                                _linh = Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle, colStatusct));

                            double _slkedon = Convert.ToDouble(grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLuong));
                            if (_slkedon == 0)
                                return;
                            double tyleBHTT = 100;
                            if (grvDonThuocct.GetRowCellValue(e.RowHandle, colTyLeBHTT_dt) != null && grvDonThuocct.GetRowCellValue(e.RowHandle, colTyLeBHTT_dt).ToString() != "")
                                tyleBHTT = Convert.ToDouble(grvDonThuocct.GetRowCellValue(e.RowHandle, colTyLeBHTT_dt));

                            if (grvDonThuocct.GetRowCellValue(e.RowHandle, colMaDVdt) != null)
                                madv = Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle, colMaDVdt));
                            string solo = "";
                            if (grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLo) != null)
                                solo = grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLo).ToString();
                            double gia = 0;
                            if (grvDonThuocct.GetRowCellValue(e.RowHandle, colDonGia) != null && grvDonThuocct.GetRowCellValue(e.RowHandle, colDonGia).ToString() != "")
                            {
                                gia = Convert.ToDouble(grvDonThuocct.GetRowCellValue(e.RowHandle, colDonGia));


                            }
                            if (grvDonThuocct.GetRowCellValue(e.RowHandle, colMienCT) != null)
                                _mien = Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle, colMienCT));
                            if (lupNguoiKe.EditValue != null)
                                _macbke = lupNguoiKe.EditValue.ToString();
                            int _kieudon = 0;
                            if (!string.IsNullOrEmpty(cboKieuDon.Text))
                                _kieudon = cboKieuDon.SelectedIndex;
                            #region trả thuốc
                            if (_kieudon == 2)
                            {
                                DateTime _tungay = DungChung.Ham.NgayTu(dtNgayKe.DateTime);
                                DateTime _ngayden = DungChung.Ham.NgayDen(dtNgayKe.DateTime);
                                if (_slkedon > 0)
                                {
                                    MessageBox.Show("Trả thuốc phải nhập số lượng < 0");
                                    grvDonThuocct.FocusedColumn = grvDonThuocct.VisibleColumns[2];// set focus
                                    grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuongctdt, "0");
                                }
                                else
                                {
                                    double soluongSua = 0;// số lượng của cả đơn sửa (của mã dịch vụ đó)
                                    if (_iddthuoc > 0)
                                    {
                                        var qslSua = DaTaContext.DThuoccts.Where(p => p.IDDon == _iddthuoc).Where(p => p.MaDV == madv).ToList();
                                        if (qslSua.Count > 0)
                                            soluongSua = qslSua.Sum(p => p.SoLuong);
                                    }
                                    var kttutruc = _lKphongall.Where(p => p.MaKP == makho).Where(p => p.PLoai.Contains("Tủ trực")).ToList();
                                    bool ktratt = kttutruc.Count > 0;
                                    var duoc = (from nduoc in DaTaContext.DThuocs.Where(p => p.MaBNhan == _int_maBN && p.MaKXuat == makho).Where(p => p.MaCB == _macbke)//&& ((ktratt && p.Status == 0) || (p.KieuDon == 2 ? true : p.Status == 1)))//  )
                                                join nhapduoc in DaTaContext.DThuoccts.Where(p => p.MaDV == madv && p.DonGia == gia).Where(p => p.NgayNhap >= _tungay && p.NgayNhap <= _ngayden) on nduoc.IDDon equals nhapduoc.IDDon
                                                where ((ktratt && nhapduoc.Status == 0) || (nduoc.KieuDon == 2 ? true : nhapduoc.Status == 1) || (DungChung.Bien.MaBV == "27022" ? nhapduoc.Status == 1 : true))//  )
                                                group new { nhapduoc, nduoc } by new { nhapduoc.MaDV } into kq
                                                select new { kq.Key, soluong = kq.Sum(p => p.nhapduoc.SoLuong) }
                                               ).ToList();
                                    double sluong = 0;

                                    if (duoc.Count() > 0)
                                        sluong = duoc.First().soluong;

                                    if (_slkedon - soluongSua + sluong < 0)
                                    {
                                        MessageBox.Show("trả thuốc phải nhập số lượng<= số lượng đã lĩnh: " + (sluong - soluongSua).ToString());
                                        grvDonThuocct.FocusedColumn = grvDonThuocct.VisibleColumns[2];// set focus
                                        // grvDonThuocct.SetRowCellValue(e.RowHandle,colSoLuong, "0");
                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuongctdt, "0");
                                    }
                                    else
                                    {

                                        if (grvDonThuocct.GetRowCellValue(e.RowHandle, colTyLeBHTT_dt) != null && grvDonThuocct.GetRowCellValue(e.RowHandle, colTyLeBHTT_dt).ToString() != "")
                                            tyleBHTT = Convert.ToDouble(grvDonThuocct.GetRowCellValue(e.RowHandle, colTyLeBHTT_dt));
                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colThanhTien, _mien == 1 ? 0 : _slkedon * gia * tyleBHTT / 100);
                                        if (khoKe != null && (khoKe.IsMuaNgoai == null || khoKe.IsMuaNgoai == false))
                                            grpDThuocct.Text = "Số lượng tồn: " + DungChung.Bien.SoLuongTon.ToString();
                                    }
                                }
                            }
                            #endregion
                            else
                            {
                                //#region 01071
                                //if (DungChung.Bien.MaBV == "01071")
                                //{
                                //      _mak = 0;
                                //     if (lupKhoXuat.EditValue != null)
                                //     {                                        
                                //         _mak = Convert.ToInt32(lupKhoXuat.EditValue);
                                //     }
                                //     if (grvDonThuocct.GetRowCellValue(e.RowHandle,coltrongBH) != null)
                                //     {
                                //         _trongBH = Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle,coltrongBH));
                                //     }
                                //    double dongia = DungChung.Ham._getGiaSD(DaTaContext, madv, 0, _trongBH, 2, _mak, dtNgayKe.DateTime);
                                //    double soluongSua = 0;// số lượng của cả đơn sửa (của mã dịch vụ đó)
                                //    if (_iddthuoc > 0)
                                //    {
                                //        var qslSua = DaTaContext.DThuoccts.Where(p => p.IDDon == _iddthuoc).Where(p => p.MaDV == madv).ToList();
                                //        if (qslSua.Count > 0)
                                //            soluongSua = qslSua.Sum(p => p.SoLuong);
                                //    }
                                //    double soluongtong = 0; // số lượng trên đơn hiện tại trừ dòng đang focus
                                //    for (int i = 0; i <= grvDonThuocct.RowCount; i++)
                                //    {

                                //        if (i != grvDonThuocct.FocusedRowHandle && grvDonThuocct.GetRowCellValue(i, colMaDVdt) != null && grvDonThuocct.GetRowCellValue(i, colSoLuong) != null && grvDonThuocct.GetRowCellValue(i, colDonGia) != null && grvDonThuocct.GetRowCellValue(i, coltrongBH) != null)
                                //        {
                                //            if (Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colMaDVdt)) == madv)
                                //            {
                                //                // lấy ra giá nhập, đối chiếu với giá nhập hiện tại
                                //                soluongtong += Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colSoLuong));

                                //            }
                                //        }
                                //    }
                                //    double _sluongton = DungChung.Bien.SoLuongTon   + soluongSua - soluongtong - _slkedon; //- _slkedon;
                                //    double soluonghhdy = DungChung.Ham._getSL_DongY(DaTaContext, madv, _slkedon, _mak);
                                //    grpDThuocct.Text = "Số lượng tồn: " + (_sluongton - soluonghhdy).ToString("##,###.###");
                                //   // grvDonThuocct.ViewCaption = "Số lượng tồn: " + (_sluongton - soluonghhdy).ToString("##,###.###");
                                //    if (_sluongton < 0)
                                //    {
                                //        MessageBox.Show("Số lượng không đủ");
                                //        grvDonThuocct.FocusedColumn = grvDonThuocct.VisibleColumns[2];
                                //        grvDonThuocct.SetRowCellValue(e.RowHandle,colSoLuongctdt, "0");
                                //    }
                                //    else
                                //        grvDonThuocct.SetRowCellValue(e.RowHandle,colThanhTien, _slkedon * gia * tyleBHTT / 100);
                                //}
                                //#endregion
                                #region bv khác
                                //else
                                //{

                                double soluongSua = 0;// số lượng của cả đơn sửa (của mã dịch vụ đó)
                                if (_iddthuoc > 0)
                                {
                                    var qslSua = DaTaContext.DThuoccts.Where(p => p.IDDon == _iddthuoc).Where(p => p.MaDV == madv).ToList();
                                    if (qslSua.Count > 0)
                                        soluongSua = qslSua.Sum(p => p.SoLuong);
                                }
                                double _sluongton = 0; double soluonghhdy = 0;
                                //double _sluongton = DungChung.Ham._checkTon_KD(DaTaContext, madv, makho, gia, 0, solo);
                                ////cộng hư hao
                                //double soluonghhdy = DungChung.Ham._getSL_DongY(DaTaContext, madv, soluongt, makho);
                                //_sluongton = _sluongton - soluonghhdy;
                                dsgia = Ham._getDSGia(DaTaContext, madv, makho);
                                // lấy tổng số lượng thuốc đã kê
                                List<Ham.giaSoLoHSD> tongSL = new List<Ham.giaSoLoHSD>();

                                for (int i = 0; i <= grvDonThuocct.RowCount; i++)
                                {

                                    if (i != e.RowHandle && grvDonThuocct.GetRowCellValue(i, colMaDVdt) != null && grvDonThuocct.GetRowCellValue(i, colSoLuong) != null)
                                    {
                                        if (Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colMaDVdt)) == madv)
                                        {
                                            Ham.giaSoLoHSD moi = new Ham.giaSoLoHSD();
                                            moi.SoLuong = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colSoLuong));
                                            if (grvDonThuocct.GetRowCellValue(i, colDonGia) != null)
                                                moi.Gia = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colDonGia));
                                            if (grvDonThuocct.GetRowCellValue(i, colSoLo) != null)
                                                moi.SoLo = grvDonThuocct.GetRowCellValue(i, colSoLo).ToString();
                                            if (grvDonThuocct.GetRowCellValue(i, colHanDung) != null)
                                                moi.HanDung = Convert.ToDateTime(grvDonThuocct.GetRowCellValue(i, colHanDung));
                                            tongSL.Add(moi);
                                        }
                                    }
                                }

                                foreach (var dct in _listGiaSua)
                                {
                                    if (dct.MaDV > 0 && dct.MaDV == madv)
                                        dsgia.Insert(0, new Ham.giaSoLoHSD { Gia = dct.Gia, SoLuong = dct.SoLuong, SoLo = dct.SoLo, HanDung = dct.HanDung });
                                }
                                _sluongton = DungChung.Bien.SoLuongTon + soluongSua - tongSL.Sum(p => p.SoLuong); //- _slkedon;
                                if (ppxuat == 3)
                                {
                                    double b = grvDonThuocct.GetRowCellValue(e.RowHandle, colDonGia) != null ? (double)grvDonThuocct.GetRowCellValue(e.RowHandle, colDonGia) : 0;
                                    string c = grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLo) != null ? (string)grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLo) : "";
                                    _sluongton = DungChung.Ham._checkTon_KD(DaTaContext, madv, makho, b, 0, c) + soluongSua - tongSL.Where(p => p.SoLo == c).Sum(p => p.SoLuong);
                                    if (DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24272")
                                    {
                                        DateTime d = grvDonThuocct.GetRowCellValue(e.RowHandle, colHanDung) != null ? (DateTime)grvDonThuocct.GetRowCellValue(e.RowHandle, colHanDung) : default(DateTime);
                                        _sluongton = DungChung.Ham._checkTon_KD1(DaTaContext, madv, makho, b, 0, c, d) + soluongSua - tongSL.Where(p => p.SoLo == c && p.HanDung == d).Sum(p => p.SoLuong);
                                    }
                                }
                                else
                                {
                                    soluonghhdy = DungChung.Ham._getSL_DongY(DaTaContext, madv, _sluongton, makho);
                                    _sluongton = _sluongton - soluonghhdy;
                                }
                                int loai = 1;
                                if (grvDonThuocct.GetRowCellValue(e.RowHandle, colLoai) != null)
                                    loai = Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle, colLoai));
                                if (loai <= 0)
                                    loai = 1;
                                dsgiaHT = LayDSGiaHT(tongSL, dsgia, _slkedon, gia);


                                int iddonct = 0;
                                if (grvDonThuocct.GetRowCellValue(e.RowHandle, colIDDonct) != null)
                                    iddonct = Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle, colIDDonct));
                                if (iddonct > 0)
                                {

                                    double soluongkeold = DaTaContext.DThuoccts.Where(p => p.IDDonct == iddonct).Select(p => p.SoLuong).FirstOrDefault();
                                    //grvDonThuocct.ViewCaption = "Số lượng tồn: " + (_sluongton + soluongkeold).ToString("##,###.###");
                                    //if (_slkedon - (_sluongton + soluongkeold) > 0)
                                    if (khoKe != null && (khoKe.IsMuaNgoai == null || khoKe.IsMuaNgoai == false))
                                        grpDThuocct.Text = "Số lượng tồn: " + (_sluongton - _slkedon).ToString("##,###.###");
                                    if (_slkedon - _sluongton > 0 && khoKe != null && (khoKe.IsMuaNgoai == null || khoKe.IsMuaNgoai == false))
                                    {
                                        if (isDTM)
                                        {
                                            slKhongDu_MaDV.Add(madv);
                                        }
                                        else
                                        {
                                            if (!isSave)
                                                MessageBox.Show("Số lượng không đủ");
                                        }

                                        grvDonThuocct.FocusedColumn = grvDonThuocct.VisibleColumns[2];
                                        if (DungChung.Bien.MaBV == "14017")
                                        {
                                            //grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuong, "0");
                                            //grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuongctdt, _sluongton / sothangSua);
                                        }
                                        else
                                        {
                                            grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuongctdt, "0");
                                            grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuong, "0");
                                        }
                                    }
                                    else
                                    {

                                        if (dsgiaHT.Count > 0 && _slkedon > dsgiaHT.First().SoLuong && (khoKe.IsMuaNgoai == null || khoKe.IsMuaNgoai == false))
                                        {
                                            //phải thêm dòng để add số lượng
                                            int count = 0;
                                            int _madv = Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle, colMaDVdt));

                                            foreach (var a in dsgiaHT)
                                            {
                                                count++;
                                                ktCellChange = false;
                                                if (count == 1)
                                                {
                                                    grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuong, a.SoLuong);
                                                    double slct = (double)a.SoLuong / loai;
                                                    grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuongctdt, slct);
                                                    grvDonThuocct.SetRowCellValue(e.RowHandle, colThanhTien, _mien == 1 ? 0 : a.SoLuong * gia * tyleBHTT / 100);
                                                }
                                                else
                                                {

                                                    grvDonThuocct.AddNewRow();
                                                    int row = grvDonThuocct.GetRowHandle(grvDonThuocct.DataRowCount);
                                                    if (grvDonThuocct.IsNewItemRow(row))
                                                    {
                                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colMaDVdt, _madv);
                                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLo, a.SoLo);
                                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colHanDung, a.HanDung);
                                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colDonGia, a.Gia);
                                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuong, a.SoLuong);
                                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colThanhTien, _mien == 1 ? 0 : a.SoLuong * a.Gia * tyleBHTT / 100);
                                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuongctdt, (double)a.SoLuong / loai);

                                                    }
                                                }
                                            }
                                            ktCellChange = true;
                                        }
                                        else
                                        {
                                            grvDonThuocct.SetRowCellValue(e.RowHandle, colThanhTien, _mien == 1 ? 0 : _slkedon * gia * tyleBHTT / 100);
                                        }
                                    }

                                }
                                else
                                {
                                    if (ppxuat == 3)
                                    {
                                        string c = grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLo) != null ? (string)grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLo) : "";
                                        if (khoKe != null && (khoKe.IsMuaNgoai == null || khoKe.IsMuaNgoai == false))
                                            grpDThuocct.Text = "Số lượng tồn: " + (_sluongton - _slkedon).ToString("##,###.###");
                                    }
                                    else
                                    {

                                        if (khoKe != null && (khoKe.IsMuaNgoai == null || khoKe.IsMuaNgoai == false))
                                            grpDThuocct.Text = "Số lượng tồn: " + (_sluongton - _slkedon).ToString("##,###.###");
                                    }
                                    if (_slkedon < 0)
                                    {
                                        MessageBox.Show("Số lượng phải >0");
                                        grvDonThuocct.FocusedColumn = grvDonThuocct.VisibleColumns[2];
                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuongctdt, "0");
                                    }
                                    else
                                    {
                                        if ((_sluongton - _slkedon >= 0) || _linh == -1)
                                        {
                                            if (dsgiaHT.Count > 0 && _slkedon > dsgiaHT.First().SoLuong && (khoKe.IsMuaNgoai == null || khoKe.IsMuaNgoai == false))
                                            {
                                                //add thêm dòng
                                                int count = 0;
                                                int _madv = Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle, colMaDVdt));
                                                foreach (var a in dsgiaHT)
                                                {
                                                    count++;
                                                    ktCellChange = false;
                                                    if (count == 1)
                                                    {
                                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuong, a.SoLuong);
                                                        double slct = (double)a.SoLuong / loai;
                                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuongctdt, slct);
                                                        grvDonThuocct.SetRowCellValue(e.RowHandle, colThanhTien, _mien == 1 ? 0 : a.SoLuong * gia * tyleBHTT / 100);
                                                    }
                                                    else
                                                    {
                                                        grvDonThuocct.AddNewRow();
                                                        int row = grvDonThuocct.GetRowHandle(grvDonThuocct.DataRowCount);
                                                        if (grvDonThuocct.IsNewItemRow(row))
                                                        {
                                                            grvDonThuocct.SetRowCellValue(e.RowHandle, colMaDVdt, _madv);
                                                            grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLo, a.SoLo);
                                                            grvDonThuocct.SetRowCellValue(e.RowHandle, colHanDung, a.HanDung);
                                                            grvDonThuocct.SetRowCellValue(e.RowHandle, colDonGia, a.Gia);
                                                            grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuong, a.SoLuong);
                                                            grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuongctdt, (double)a.SoLuong / loai);
                                                            grvDonThuocct.SetRowCellValue(e.RowHandle, colThanhTien, _mien == 1 ? 0 : a.SoLuong * a.Gia * tyleBHTT / 100);
                                                        }
                                                    }
                                                }
                                                ktCellChange = true;
                                            }
                                            else
                                            {
                                                grvDonThuocct.SetRowCellValue(e.RowHandle, colThanhTien, _mien == 1 ? 0 : _slkedon * gia * tyleBHTT / 100);
                                            }
                                            // grvDonThuocct.SetRowCellValue(e.RowHandle,colThanhTien, _slkedon * gia * tyleBHTT / 100);
                                        }
                                        else
                                        {
                                            if (khoKe != null && (khoKe.IsMuaNgoai == null || khoKe.IsMuaNgoai == false))
                                            {
                                                if (isDTM)
                                                {
                                                    slKhongDu_MaDV.Add(madv);
                                                }
                                                else
                                                {
                                                    if (!isSave)
                                                        MessageBox.Show("Số lượng không đủ");
                                                }

                                                grvDonThuocct.FocusedColumn = grvDonThuocct.VisibleColumns[2];
                                                if (DungChung.Bien.MaBV == "14017")
                                                {
                                                    //grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuong, "0");
                                                    //grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuongctdt, _sluongton / sothangSua);
                                                }
                                                else
                                                {
                                                    grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuongctdt, "0");
                                                    grvDonThuocct.SetRowCellValue(e.RowHandle, colSoLuong, "0");
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            #endregion
                            //}

                        }
                        else
                        {
                            MessageBox.Show("Bạn chưa nhập số lượng ");
                        }
                        #region colSoLuong
                        //if (grvDonThuocct.GetRowCellValue(e.RowHandle,colMaDVdt) != null && Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle,colMaDVdt)) > 0)
                        //    if (grvDonThuocct.GetRowCellValue(e.RowHandle,colSoLuong) != null && grvDonThuocct.GetRowCellValue(e.RowHandle,colSoLuong).ToString() != "")
                        //    {//
                        //        if (grvDonThuocct.GetRowCellValue(e.RowHandle,colSoLuong).ToString() != "0")
                        //        {
                        //            soluongt = 0;
                        //            madv = Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle,colMaDVdt));
                        //            for (int i = 0; i <= grvDonThuocct.RowCount; i++)
                        //            {
                        //                if (grvDonThuocct.GetRowCellValue(i, colMaDVdt) != null)
                        //                    if (grvDonThuocct.GetRowCellValue(i, colSoLuong) != null)
                        //                    {
                        //                        if (madv == Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, colMaDVdt)))
                        //                        {
                        //                            if (grvDonThuocct.GetRowCellValue(i, colIDDonct) != null && Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, colIDDonct)) <= 0)
                        //                            //DungChung.Bien.SoLuongTon = 0;
                        //                            {
                        //                                if (grvDonThuocct.GetRowCellValue(i, colStatusct) != null && grvDonThuocct.GetRowCellValue(i, colStatusct).ToString() != "")
                        //                                    _linh = Convert.ToInt32(grvDonThuocct.GetRowCellValue(i, colStatusct));
                        //                                else
                        //                                    _linh = 0;
                        //                                if (_linh == 0)
                        //                                    soluongt += Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colSoLuong));
                        //                            }
                        //                        }
                        //                    }
                        //            }
                        //            int _mak2 = Convert.ToInt32(lupKhoXuat.EditValue);

                        //            if (grvDonThuocct.GetRowCellValue(e.RowHandle,colSoLo) != null)
                        //                _solo = grvDonThuocct.GetRowCellValue(e.RowHandle,colSoLo).ToString();
                        //            if (grvDonThuocct.GetRowCellValue(e.RowHandle,colHanDung) != null)
                        //                _handung = Convert.ToDateTime(grvDonThuocct.GetRowCellValue(e.RowHandle,colHanDung).ToString());
                        //            DungChung.Ham._getGia(DaTaContext, madv, _mak2);
                        //            //if (_solo == "")
                        //            //    grvDonThuocct.SetRowCellValue(e.RowHandle,colSoLo, DungChung.Bien._solo);
                        //            //if (_handung == null)
                        //            //    grvDonThuocct.SetRowCellValue(e.RowHandle,colHanDung, DungChung.Bien.HanDung);
                        //            tonthuoc = DungChung.Bien.SoLuongTon;
                        //            //string _madvt = grvDonThuocct.GetRowCellValue(e.RowHandle,colMaDVdt).ToString();

                        //            double a = double.Parse(grvDonThuocct.GetRowCellValue(e.RowHandle,colSoLuong).ToString());
                        //            double b = 0;
                        //            if (grvDonThuocct.GetRowCellValue(e.RowHandle,colDonGia) != null && grvDonThuocct.GetRowCellValue(e.RowHandle,colDonGia).ToString() != "")
                        //            {
                        //                b = Convert.ToDouble(grvDonThuocct.GetRowCellValue(e.RowHandle,colDonGia));
                        //            }
                        //            //if (grvDonThuocct.GetRowCellValue(e.RowHandle,colMaDVdt) != null)
                        //            //madv = grvDonThuocct.GetRowCellValue(e.RowHandle,colMaDVdt).ToString();
                        //            a = a + DungChung.Ham._getSL_DongY(DaTaContext, madv, a, _mak2);
                        //            double _slkedon = Convert.ToDouble(grvDonThuocct.GetRowCellValue(e.RowHandle,colSoLuong));
                        //            int _kieudon = 0;
                        //            if (!string.IsNullOrEmpty(cboKieuDon.Text))
                        //                _kieudon = cboKieuDon.SelectedIndex;
                        //            if (grvDonThuocct.GetRowCellValue(e.RowHandle,colStatusct) != null && grvDonThuocct.GetRowCellValue(e.RowHandle,colStatusct).ToString() != "")
                        //                _linh = Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle,colStatusct));
                        //            switch (TTLuu)
                        //            {
                        //                case 1: // khi tao don moi
                        //                    if (_kieudon == 2)
                        //                    {
                        //                        if (a > 0)
                        //                        {
                        //                            MessageBox.Show("trả thuốc phải nhập số lượng<0");
                        //                            grvDonThuocct.FocusedColumn = grvDonThuocct.VisibleColumns[2];// set focus
                        //                            grvDonThuocct.SetRowCellValue(e.RowHandle,colSoLuong, "0");
                        //                        }
                        //                        else
                        //                        {
                        //                            DungChung.Bien.SoLuongTon = tonthuoc - soluongt - a;
                        //                            int _makho = 0, _madv = 0;
                        //                            if (lupKhoXuat.EditValue != null)
                        //                                _makho = Convert.ToInt32(lupKhoXuat.EditValue);
                        //                            if (grvDonThuocct.GetRowCellValue(e.RowHandle,colMaDVdt) != null)
                        //                                _madv = Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle,colMaDVdt));
                        //                            var kttutruc = _lKphongall.Where(p => p.MaKP == _makho).Where(p => p.PLoai.Contains("Tủ trực")).ToList();
                        //                            bool ktratt = kttutruc.Count > 0;
                        //                            var duoc = (from nduoc in DaTaContext.DThuocs.Where(p => p.MaBNhan == _int_maBN && p.MaKXuat == _makho && ((ktratt && p.Status == 0) || (p.KieuDon == 2 ? true : p.Status == 1)))//  )
                        //                                        join nhapduoc in DaTaContext.DThuoccts.Where(p => p.MaDV == _madv && p.DonGia == b) on nduoc.IDDon equals nhapduoc.IDDon
                        //                                        group new { nhapduoc, nduoc } by new { nhapduoc.MaDV } into kq
                        //                                        select new { kq.Key, soluong = kq.Sum(p => p.nhapduoc.SoLuong) }
                        //                                       ).ToList();
                        //                            double sluong = 0;
                        //                            if (duoc.Count > 0)
                        //                                sluong = duoc.First().soluong;

                        //                            if (a + sluong < 0)
                        //                            {
                        //                                MessageBox.Show("trả thuốc phải nhập số lượng<= số lượng đã lĩnh: " + sluong.ToString());
                        //                                grvDonThuocct.FocusedColumn = grvDonThuocct.VisibleColumns[2];// set focus
                        //                                grvDonThuocct.SetRowCellValue(e.RowHandle,colSoLuong, "0");
                        //                            }
                        //                            else
                        //                            {
                        //                                double tyleBHTT = 100;
                        //                                if (grvDonThuocct.GetRowCellValue(e.RowHandle,colTyLeBHTT_dt) != null && grvDonThuocct.GetRowCellValue(e.RowHandle,colTyLeBHTT_dt).ToString() != "")
                        //                                    tyleBHTT = Convert.ToDouble(grvDonThuocct.GetRowCellValue(e.RowHandle,colTyLeBHTT_dt));
                        //                                grvDonThuocct.SetRowCellValue(e.RowHandle,colThanhTien, _slkedon * b * tyleBHTT / 100);

                        //                                grpDThuocct.Text = "Số lượng tồn: " + DungChung.Bien.SoLuongTon.ToString();
                        //                            }
                        //                        }
                        //                    }
                        //                    else
                        //                    {
                        //                        if (a < 0)
                        //                        {
                        //                            MessageBox.Show(" số lượng> 0");
                        //                            grvDonThuocct.FocusedColumn = grvDonThuocct.VisibleColumns[2];// set focus
                        //                            grvDonThuocct.SetRowCellValue(e.RowHandle,colSoLuong, "0");
                        //                        }
                        //                        else
                        //                        {
                        //                            double ton = 0;
                        //                            ton = DungChung.Bien.SoLuongTon;
                        //                            if (a <= ton || _linh == -1)
                        //                            {
                        //                                if (_linh == 0)
                        //                                    DungChung.Bien.SoLuongTon = tonthuoc - soluongt - a;
                        //                                else
                        //                                    DungChung.Bien.SoLuongTon = tonthuoc - soluongt;
                        //                                double tyleBHTT = 100;
                        //                                if (grvDonThuocct.GetRowCellValue(e.RowHandle,colTyLeBHTT_dt) != null && grvDonThuocct.GetRowCellValue(e.RowHandle,colTyLeBHTT_dt).ToString() != "")
                        //                                    tyleBHTT = Convert.ToDouble(grvDonThuocct.GetRowCellValue(e.RowHandle,colTyLeBHTT_dt));
                        //                                grvDonThuocct.SetRowCellValue(e.RowHandle,colThanhTien, _slkedon * b * tyleBHTT / 100);
                        //                                grpDThuocct.Text = "Số lượng tồn: " + DungChung.Bien.SoLuongTon.ToString();
                        //                                if (_linh == -1)
                        //                                    grvDonThuocct.ViewCaption = "Số lượng tồn: 0";
                        //                            }
                        //                            else
                        //                            {
                        //                                MessageBox.Show("Số lượng trong kho không đủ");
                        //                                grvDonThuocct.SetRowCellValue(e.RowHandle,colSoLuong, "0");
                        //                                grvDonThuocct.FocusedColumn = grvDonThuocct.VisibleColumns[2];// set focus
                        //                                //DungChung.Bien.SoLuongTon = 0;
                        //                                grpDThuocct.Text = "Số lượng tồn: " + DungChung.Bien.SoLuongTon.ToString();
                        //                            }
                        //                        }
                        //                    }
                        //                    break;

                        //                case 2:// khi sua don
                        //                    //soluongt = a;
                        //                    if (_kieudon == 2) // trả thuốc
                        //                    {
                        //                        if (a > 0)
                        //                        {
                        //                            MessageBox.Show("trả thuốc phải nhập số lượng<0");
                        //                            grvDonThuocct.FocusedColumn = grvDonThuocct.VisibleColumns[2];// set focus
                        //                            grvDonThuocct.SetRowCellValue(e.RowHandle,colSoLuong, "0");
                        //                        }
                        //                        else
                        //                        {
                        //                            if (_linh == 0)
                        //                                DungChung.Bien.SoLuongTon = tonthuoc - soluongt - a;
                        //                            else
                        //                                DungChung.Bien.SoLuongTon = tonthuoc - soluongt;
                        //                            int _makho = 0, _madv = 0;
                        //                            if (lupKhoXuat.EditValue != null)
                        //                                _makho = Convert.ToInt32(lupKhoXuat.EditValue);
                        //                            if (grvDonThuocct.GetRowCellValue(e.RowHandle,colMaDVdt) != null)
                        //                                _madv = Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle,colMaDVdt));
                        //                            var duoc = (from nduoc in DaTaContext.DThuocs.Where(p => p.MaBNhan == _int_maBN && p.Status == 1 && p.MaKXuat == _makho)
                        //                                        join nhapduoc in DaTaContext.DThuoccts.Where(p => p.MaDV == _madv && p.DonGia == b) on nduoc.IDDon equals nhapduoc.IDDon
                        //                                        group new { nhapduoc, nduoc } by new { nhapduoc.MaDV } into kq
                        //                                        select new { kq.Key, soluong = kq.Sum(p => p.nhapduoc.SoLuong) }
                        //                                       ).ToList();
                        //                            double sluong = 0;
                        //                            if (duoc.Count > 0)
                        //                                sluong = duoc.First().soluong;
                        //                            if (a + sluong < 0)
                        //                            {
                        //                                MessageBox.Show("trả thuốc phải nhập số lượng<= số lượng đã lĩnh");
                        //                                grvDonThuocct.FocusedColumn = grvDonThuocct.VisibleColumns[2];// set focus
                        //                                grvDonThuocct.SetRowCellValue(e.RowHandle,colSoLuong, "0");
                        //                            }
                        //                            else
                        //                            {
                        //                                double tyleBHTT = 100;
                        //                                if (grvDonThuocct.GetRowCellValue(e.RowHandle,colTyLeBHTT_dt) != null && grvDonThuocct.GetRowCellValue(e.RowHandle,colTyLeBHTT_dt).ToString() != "")
                        //                                    tyleBHTT = Convert.ToDouble(grvDonThuocct.GetRowCellValue(e.RowHandle,colTyLeBHTT_dt));
                        //                                grvDonThuocct.SetRowCellValue(e.RowHandle,colThanhTien, _slkedon * b * tyleBHTT / 100);
                        //                                grpDThuocct.Text = "Số lượng tồn: " + DungChung.Bien.SoLuongTon.ToString();

                        //                            }
                        //                        }
                        //                    }
                        //                    else
                        //                    {
                        //                        if (a < 0)
                        //                        {
                        //                            MessageBox.Show("Số lượng phải >0");
                        //                            grvDonThuocct.FocusedColumn = grvDonThuocct.VisibleColumns[2];
                        //                            grvDonThuocct.SetRowCellValue(e.RowHandle,colSoLuong, "0");
                        //                        }
                        //                        else
                        //                        {
                        //                            double ton = 0;



                        //                            ton = DungChung.Bien.SoLuongTon;
                        //                            ton = ton + _slTonChuaLuu;
                        //                            if (a <= ton - soluongt || _linh == -1)
                        //                            {
                        //                                if (_linh == 0)
                        //                                    DungChung.Bien.SoLuongTon = tonthuoc - soluongt - a;
                        //                                else
                        //                                    DungChung.Bien.SoLuongTon = tonthuoc - soluongt;
                        //                                double tyleBHTT = 100;
                        //                                if (grvDonThuocct.GetRowCellValue(e.RowHandle,colTyLeBHTT_dt) != null && grvDonThuocct.GetRowCellValue(e.RowHandle,colTyLeBHTT_dt).ToString() != "")
                        //                                    tyleBHTT = Convert.ToDouble(grvDonThuocct.GetRowCellValue(e.RowHandle,colTyLeBHTT_dt));
                        //                                grvDonThuocct.SetRowCellValue(e.RowHandle,colThanhTien, _slkedon * b * tyleBHTT / 100);
                        //                                grpDThuocct.Text = "Số lượng tồn: " + DungChung.Bien.SoLuongTon.ToString();
                        //                            }
                        //                            else
                        //                            {
                        //                                MessageBox.Show("Số lượng trong kho không đủ");
                        //                                grvDonThuocct.SetRowCellValue(e.RowHandle,colSoLuong, "0");
                        //                                grvDonThuocct.FocusedColumn = grvDonThuocct.VisibleColumns[2];// set focus
                        //                                //DungChung.Bien.SoLuongTon = 0;
                        //                                grpDThuocct.Text = "Số lượng tồn: " + DungChung.Bien.SoLuongTon.ToString();
                        //                                if (_linh == -1)
                        //                                    grvDonThuocct.ViewCaption = "Số lượng tồn: 0";
                        //                            }
                        //                        }
                        //                    }
                        //                    //xem lại lượng tồn
                        //                    break;

                        //            }
                        //            _slTonChuaLuu = 0;
                        //        }
                        //        //else
                        //        //    MessageBox.Show("Số lượng phải khác 0");
                        //    }
                        //    else
                        //    {
                        //        MessageBox.Show("Bạn chưa nhập số lượng ");
                        //    }
                        #endregion
                    }
                    break;
                #endregion

                case "colDonGia":
                    double _dongia = 0;
                    double tyleTT = 100;
                    double _soluong = 0;
                    if (grvDonThuocct.GetRowCellValue(e.RowHandle, colDonGia) != null && grvDonThuocct.GetRowCellValue(e.RowHandle, colDonGia).ToString() != "")
                        _dongia = Convert.ToDouble(grvDonThuocct.GetRowCellValue(e.RowHandle, colDonGia));
                    if (grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLuong) != null && grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLuong).ToString() != "")
                        _soluong = Convert.ToDouble(grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLuong));
                    if (grvDonThuocct.GetRowCellValue(e.RowHandle, colMienCT) != null)
                    {
                        _mien = Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle, colMienCT));
                    }
                    if (grvDonThuocct.GetRowCellValue(e.RowHandle, colTyLeBHTT_dt) != null && grvDonThuocct.GetRowCellValue(e.RowHandle, colTyLeBHTT_dt).ToString() != "")
                        tyleTT = Convert.ToDouble(grvDonThuocct.GetRowCellValue(e.RowHandle, colTyLeBHTT_dt));
                    grvDonThuocct.SetRowCellValue(e.RowHandle, colThanhTien, _mien == 1 ? 0 : _dongia * _soluong * tyleTT / 100);
                    break;
                case "coltrongBH":
                    if (grvDonThuocct.GetRowCellValue(e.RowHandle, colMaDVdt) != null)
                    {
                        madv = Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle, colMaDVdt));
                    }
                    if (grvDonThuocct.GetRowCellValue(e.RowHandle, coltrongBH) != null)
                    {
                        _trongBH = Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle, coltrongBH));
                    }
                    int bhyt = -1;
                    if (madv <= 0)
                        break;
                    else
                    {
                        var trongBH = _lDichvu.Where(p => p.MaDV == madv).ToList();
                        if (trongBH.Count > 0)
                        {
                            bhyt = trongBH.First().TrongDM.Value;
                        }
                        if (grvBNhankb.GetRowCellValue(e.RowHandle, colDTuong) != null && grvBNhankb.GetRowCellValue(e.RowHandle, colDTuong).ToString() != "BHYT" && _trongBH == 1)
                        {
                            MessageBox.Show("Bệnh nhân không có Thẻ BHYT, chí phí không được quyết toán trong DMBH");
                            grvDonThuocct.SetRowCellValue(e.RowHandle, coltrongBH, 0);
                            break;
                        }
                    }

                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                    {
                        if (bhyt == 0 && (_trongBH == 1))
                        {
                            MessageBox.Show("Dịch vụ ngoài danh mục bảo hiểm, chí phí không được quyết toán trong DMBH");
                            grvDonThuocct.SetRowCellValue(e.RowHandle, coltrongBH, 0);
                            break;
                        }
                    }
                    if (DungChung.Bien.MaBV == "00000")
                    {
                        if (grvDonThuocct.GetRowCellValue(e.RowHandle, colMaDVdt) != null)
                        {
                            madv = Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle, colMaDVdt));
                        }
                        _mak = 0;
                        if (lupKhoXuat.EditValue != null)
                        {
                            _mak = Convert.ToInt32(lupKhoXuat.EditValue);
                        }


                        double dongia = DungChung.Ham._getGiaSD(DaTaContext, madv, 0, _trongBH, 2, _mak, dtNgayKe.DateTime);
                        if (dongia > 0)
                            grvDonThuocct.SetRowCellValue(e.RowHandle, colDonGia, dongia);
                        else
                            MessageBox.Show("Thuốc chưa có giá trong danh mục");
                        double soluong = 0;
                        if (grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLuong) != null)
                        {
                            soluong = Convert.ToDouble(grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLuong));
                        }
                        if (grvDonThuocct.GetRowCellValue(e.RowHandle, colMienCT) != null)
                        {
                            _mien = Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle, colMienCT));
                        }
                        if (soluong > 0)
                            grvDonThuocct.SetRowCellValue(e.RowHandle, colThanhTien, _mien == 1 ? 0 : soluong * dongia);

                    }
                    break;
                case "colTyLeBHTT_dt":
                    double tylett = 0, dongianew = 0, solgnew = 0;
                    if (grvDonThuocct.GetRowCellValue(e.RowHandle, colTyLeBHTT_dt) != null && grvDonThuocct.GetRowCellValue(e.RowHandle, colTyLeBHTT_dt).ToString() != "")
                        tylett = Convert.ToDouble(grvDonThuocct.GetRowCellValue(e.RowHandle, colTyLeBHTT_dt));
                    if (tylett <= 100 && tylett >= 0)
                    {
                        if (grvDonThuocct.GetRowCellValue(e.RowHandle, colDonGia) != null)
                            dongianew = Convert.ToDouble(grvDonThuocct.GetRowCellValue(e.RowHandle, colDonGia));
                        if (grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLuong) != null)
                            solgnew = Convert.ToDouble(grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLuong));
                        if (grvDonThuocct.GetRowCellValue(e.RowHandle, colMienCT) != null)
                        {
                            _mien = Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle, colMienCT));
                        }
                        double thanhtiennew = (dongianew * solgnew * tylett) / 100;
                        grvDonThuocct.SetRowCellValue(e.RowHandle, colThanhTien, _mien == 1 ? 0 : thanhtiennew);
                    }
                    else
                    {
                        MessageBox.Show("tỷ lệ thanh toán không hợp lệ");
                        grvDonThuocct.SetRowCellValue(e.RowHandle, colTyLeBHTT_dt, 100);
                    }
                    break;
                case "colMienCT":
                    double tylett1 = 0, dongianew1 = 0, solgnew1 = 0;
                    if (grvDonThuocct.GetRowCellValue(e.RowHandle, colMienCT) != null)
                    {
                        if (grvDonThuocct.GetRowCellValue(e.RowHandle, colTyLeBHTT_dt) != null)
                            tylett1 = Convert.ToDouble(grvDonThuocct.GetRowCellValue(e.RowHandle, colTyLeBHTT_dt));
                        if (grvDonThuocct.GetRowCellValue(e.RowHandle, colDonGia) != null)
                            dongianew1 = Convert.ToDouble(grvDonThuocct.GetRowCellValue(e.RowHandle, colDonGia));
                        if (grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLuong) != null)
                            solgnew1 = Convert.ToDouble(grvDonThuocct.GetRowCellValue(e.RowHandle, colSoLuong));
                        if (grvDonThuocct.GetRowCellValue(e.RowHandle, colMienCT) != null)
                        {
                            _mien = Convert.ToInt32(grvDonThuocct.GetRowCellValue(e.RowHandle, colMienCT));
                        }
                        double thanhtiennew = (dongianew1 * solgnew1 * tylett1) / 100;
                        grvDonThuocct.SetRowCellValue(e.RowHandle, colThanhTien, _mien == 1 ? 0 : thanhtiennew);
                    }
                    break;
            }

            if (e.Column.Name != "coltrongBH" && DungChung.Bien.MaBV == "20001")
            {
                var bn = data.BenhNhans.FirstOrDefault(o => o.MaBNhan == _int_maBN);
                if (bn != null && bn.DTuong == "Khám miễn phí")
                {
                    grvDonThuocct.SetRowCellValue(e.RowHandle, coltrongBH, 2);
                }
            }
        }

        bool clickDtct = false;

        private void grvDonThuocdt_FocusedRowChanged(object sender, DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs e)
        {
            try
            {
                int makx;
                clickDtct = true;
                List<DThuocct> _ldonthuocct = new List<DThuocct>();
                _listGiaSua = new List<Ham.giaSoLoHSD>();
                if (processRowClick)
                    return;
                if (grvDonThuocdt.GetFocusedRowCellValue(colIDDon) != null && grvDonThuocdt.GetFocusedRowCellValue(colIDDon).ToString() != "")
                {
                    DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);

                    int id = int.Parse(grvDonThuocdt.GetFocusedRowCellValue(colIDDon).ToString());

                    List<DV_GT> _lgt = new List<DV_GT>();
                    _lgt = (from cls in DaTaContext.CLS.Where(p => p.MaBNhan == _maBN)
                            join cd in DaTaContext.ChiDinhs on cls.IdCLS equals cd.IdCLS
                            join dv in DaTaContext.DichVus.Where(p => p.MaQD.ToLower().Contains("_GT")) on cd.MaDV equals dv.MaDV
                            select new DV_GT()
                            {
                                ThuocDVGayTe = dv.MaDV,
                                TenDV_GT = dv.TenDV,
                                MaQD = dv.MaQD
                            }).ToList();

                    if (_lgt.Count() > 0)
                    {
                        _lgt.Add(new DV_GT { MaQD = "Không chọn", TenDV_GT = "", ThuocDVGayTe = 0 });
                        colGayTe.Visible = true;
                        lupDVGayTe.DataSource = _lgt;
                    }

                    else
                        colGayTe.Visible = false;

                    _ldonthuocct = DaTaContext.DThuoccts.Where(p => p.IDDon == id).ToList();
                    if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                        binSDonThuocct.DataSource = _ldonthuocct.OrderBy(o => o.STT).ThenBy(p => p.SoPL).ThenBy(p => p.IDDonct).ToList();
                    else
                        binSDonThuocct.DataSource = _ldonthuocct.OrderBy(p => p.SoPL).ThenBy(p => p.IDDonct).ToList();
                    grcDonThuocct.DataSource = binSDonThuocct;

                    _iddthuoc = id;

                    if (_ldonthuocct.Count > 0)
                        sothangOld = _ldonthuocct.First().SoLuong / _ldonthuocct.First().SoLuongct;
                    sothangSua = sothangOld;

                    var qGiaSua = _ldonthuocct.OrderByDescending(p => p.IDDonct).ToList();
                    foreach (var a in qGiaSua)
                    {
                        _listGiaSua.Add(new Ham.giaSoLoHSD { MaDV = a.MaDV ?? 0, Gia = a.DonGia, SoLuong = a.SoLuong, HanDung = a.HanDung, SoLo = a.SoLo });
                    }
                    if (_ldonthuocct.Count > 0)
                        cboSoThangNgay.Text = _ldonthuocct.First().Loai.ToString();

                    var load = _lDonThuoc.Where(p => p.IDDon == id).ToList();
                    if (load.Count() > 0)
                    {
                        btnSyncMed.Enabled = !load.FirstOrDefault().DongBo.GetValueOrDefault();

                        txtIdDonThuoc.Text = load.First().IDDon.ToString();
                        iddthuocmau = load.First().IDDon_Mau ?? 0;
                        if (load.First().NgayKe != null)
                            dtNgayKe.DateTime = load.First().NgayKe.Value;
                        if (load.First().MaKP != null)
                            lupBPKe.EditValue = load.First().MaKP.Value;
                        else lupBPKe.Text = "";
                        if (load.First().MaCB != null)
                            lupNguoiKe.EditValue = load.First().MaCB.ToString();
                        else lupNguoiKe.Text = "";
                        if (load.First().MaKXuat != null)
                        {
                            makx = (int)load.First().MaKXuat;
                            lupKhoXuat.EditValue = makx;
                        }
                        else lupKhoXuat.EditValue = 0;

                        if (load.First().SoVV != null)
                            txtSoVV2.Text = load.First().SoVV.ToString();
                        else
                            txtSoVV2.Text = "";
                        mm_ghiChu.Text = load.First().GhiChu;
                        chkDonMuaNgoai.Checked = load.First().IsMuaNgoai ?? false;
                        if (load.First().KieuDon != null)
                            if (load.First().KieuDon.Value == -1 && DungChung.Bien.MaBV == "27022")
                            {
                                cboKieuDon.SelectedIndex = 6;
                            }
                            else
                            {
                                cboKieuDon.SelectedIndex = load.First().KieuDon.Value;
                            }

                        else cboKieuDon.SelectedIndex = -1;
                        var dienbien = DaTaContext.DienBiens.Where(p => p.IDDon == id).FirstOrDefault();
                        if (dienbien != null)
                            memoDienBien.Text = dienbien.DienBien1;
                        else
                            memoDienBien.Text = "";
                    }
                    else
                    {
                        btnSyncMed.Enabled = false;

                        memoDienBien.Text = "";
                        if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                            binSDonThuocct.DataSource = _ldonthuocct.Where(p => p.IDDon == -1).OrderBy(o => o.STT).ToList();
                        else
                            binSDonThuocct.DataSource = _ldonthuocct.Where(p => p.IDDon == -1).ToList();
                        grcDonThuocct.DataSource = binSDonThuocct;
                        lupKhoXuat.EditValue = 0;
                        lupNguoiKe.EditValue = "";
                        lupBPKe.EditValue = 0;
                        txtIdDonThuoc.Text = "";
                        iddthuocmau = 0;
                        cboKieuDon.SelectedIndex = -1;
                        dtNgayKe.DateTime = System.DateTime.Now;
                        mm_ghiChu.ResetText();
                        chkDonMuaNgoai.Checked = false;
                    }
                }
                else
                {
                    if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                        binSDonThuocct.DataSource = _ldonthuocct.Where(p => p.IDDon == -1).OrderBy(o => o.STT).ToList();
                    else
                        binSDonThuocct.DataSource = _ldonthuocct.Where(p => p.IDDon == -1).ToList();
                    grcDonThuocct.DataSource = binSDonThuocct;
                    lupKhoXuat.EditValue = 0;
                    lupNguoiKe.EditValue = "";
                    lupBPKe.EditValue = 0;
                    txtIdDonThuoc.Text = "";
                    iddthuocmau = 0;
                    cboKieuDon.SelectedIndex = -1;
                    dtNgayKe.DateTime = System.DateTime.Now;
                }
                xtraKeDon.Text = "Đơn thuốc";
                btnLuuKb.Enabled = false;
            }
            finally
            {
                clickDtct = false;
            }
        }

        private void btnXoaKb_Click(object sender, EventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            switch (TTTab)
            {
                case 1:
                    DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                    if (!string.IsNullOrEmpty(txtIdkb.Text))
                    {
                        int id = int.Parse(txtIdkb.Text.Trim());
                        bool _dongyxoa = true;
                        int _makp = 0;
                        if (lupKhoaKhamkb.EditValue != null)
                            _makp = Convert.ToInt32(lupKhoaKhamkb.EditValue);
                        var ktrv = DaTaContext.RaViens.Where(p => p.MaBNhan == _int_maBN).ToList();
                        if (ktrv.Count > 0)
                        {
                            _dongyxoa = false;
                            MessageBox.Show("Bệnh nhân đã ra viện, bạn không được xóa");
                        }
                        if (_dongyxoa)
                        {
                            var kt = (from bn in DaTaContext.VienPhis.Where(p => p.MaBNhan == _int_maBN) select bn).ToList();
                            if (kt.Count > 0)
                            {
                                _dongyxoa = false;
                                MessageBox.Show("Bệnh nhân đã thanh toán, Bạn không được xóa");
                            }
                        }
                        if (_dongyxoa)
                        {

                            int idkbmax = -1;
                            var bnkb = DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN).OrderBy(p => p.IDKB).ToList();
                            if (bnkb.Count > 0)
                                idkbmax = bnkb.Max(p => p.IDKB);
                            var kt2 = DaTaContext.BNKBs.Where(p => p.IDKB == id).OrderBy(p => p.IDKB).ToList();
                            if (kt2.Count > 0 && id >= idkbmax)
                            {

                            }
                            else
                            {
                                _dongyxoa = false;
                                MessageBox.Show("Bạn không thể xóa vì khám bệnh này không phải là khám bệnh cuối cùng");
                            }
                            if (kt2.First().MaKP != DungChung.Bien.MaKP && DungChung.Bien.PLoaiKP != "Admin")
                            {
                                _dongyxoa = false;
                                MessageBox.Show("Bạn không thể xóa khám bệnh của khoa khác");
                            }

                        }

                        // kiểm tra lại, có số phiếu lĩnh nhưng vẫn xóa được
                        if (_dongyxoa)
                        {
                            var ktcls = DaTaContext.CLS.Where(p => p.MaBNhan == _int_maBN && p.MaKP == _makp).ToList();
                            if (ktcls.Count > 0)
                            {
                                var ktcd = DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN && p.MaKP == _makp).ToList();
                                if (ktcd.Count <= 1)
                                {
                                    _dongyxoa = false;
                                    MessageBox.Show("BN đã có chỉ định cận lâm sàng, bạn không thể xóa");
                                }
                            }
                        }
                        if (_dongyxoa)
                        {
                            var ktdt = (from dt in DaTaContext.DThuocs.Where(p => p.MaBNhan == _int_maBN)
                                        join dtct in DaTaContext.DThuoccts.Where(p => p.IDKB == id) on dt.IDDon equals dtct.IDDon
                                        select dtct
                                          ).ToList();
                            if (ktdt.Count > 0)
                            {
                                _dongyxoa = false;
                                MessageBox.Show("BN có phát sinh dịch vụ tại khoa, bạn không thể xóa");
                            }
                        }
                        if (_dongyxoa)
                        {
                            DialogResult result;
                            result = MessageBox.Show("Bạn muốn xóa khám bệnh của BN: " + txtTenBenhNhan.Text, "xóa khám bệnh!", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                            if (result == DialogResult.No)
                                _dongyxoa = false;
                        }
                        if (_dongyxoa) // xóa khám bệnh
                        {
                            var kb = DaTaContext.BNKBs.Single(p => p.IDKB == (id));
                            DaTaContext.BNKBs.Remove(kb);
                            if (DaTaContext.SaveChanges() >= 0)
                            {
                                // xóa công khám
                                DungChung.Ham.Update_Delete_CongKham(_int_maBN, id, false, dtNgayKhamkb.DateTime);
                                //
                                DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                                var ktslkb2 = DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN).OrderByDescending(p => p.IDKB).ToList();
                                if (ktslkb2.Count > 0)
                                {
                                    int _chuyenkhoa = 0;
                                    if (ktslkb2.First().MaKPdt != null)
                                        _chuyenkhoa = Convert.ToInt32(ktslkb2.First().MaKPdt);
                                    else
                                        if (ktslkb2.First().MaKP != null)
                                        _chuyenkhoa = Convert.ToInt32(ktslkb2.First().MaKP);
                                    DungChung.Ham._setMaKP_BenhNhan(DaTaContext, _int_maBN, _chuyenkhoa, 2);
                                }
                                else
                                {
                                    DungChung.Ham._setMaKP_BenhNhan(DaTaContext, _int_maBN, 0, 2);
                                    DungChung.Ham._setStatus(_int_maBN, 0);
                                }
                                grvBNhankb_FocusedRowChanged(null, null);
                                labThongBaoBNCP.Text = ThongBaoBNChuyenPK();
                            }
                        }
                    }
                    else
                    {
                        MessageBox.Show("Bệnh nhân không có khám bệnh");
                    }
                    break;
                case 2:
                    DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                    if (!string.IsNullOrEmpty(txtIdDonThuoc.Text))
                    {
                        int id = int.Parse(txtIdDonThuoc.Text);
                        var dthuocXoa = DaTaContext.DThuocs.FirstOrDefault(o => o.IDDon == id);
                        if (dthuocXoa != null && dthuocXoa.MaKP != _makp)
                        {
                            MessageBox.Show("Không thể xóa đơn thuốc của khoa khác");
                            return;
                        }
                        var kt = (from bn in DaTaContext.VienPhis.Where(p => p.MaBNhan == _int_maBN) select bn).ToList();
                        if (kt.Count > 0)
                        {
                            MessageBox.Show("Bệnh nhân đã thanh toán, Bạn không được xóa");
                        }
                        else
                        {

                            var xoa = (DaTaContext.DThuoccts.Where(p => p.IDDon == (id) && (p.Status == 1 || p.SoPL > 0))).ToList();
                            if (xoa.Count > 0)
                            {
                                MessageBox.Show("Đơn này đã được xuất dược, Bạn không được xóa!");
                            }
                            else
                            {
                                DialogResult result;
                                result = MessageBox.Show("Bạn muốn xóa đơn ngày: " + dtNgayKe.DateTime.Date, "Thông báo!", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                                if (result == DialogResult.Yes)
                                {
                                    List<DThuocct> sl = new List<DThuocct>();
                                    sl = (from iddct in DaTaContext.DThuoccts.Where(p => p.IDDon == id) select iddct).ToList();
                                    foreach (var s in sl)
                                    {
                                        var dtct = DaTaContext.DThuoccts.Single(p => p.IDDonct == (s.IDDonct));
                                        DaTaContext.DThuoccts.Remove(dtct);
                                        if (DaTaContext.SaveChanges() > 0)
                                        {
                                            var ttdt = DaTaContext.TTTruyenDiches.Where(p => p.IdDonct == s.IDDonct).FirstOrDefault();
                                            if (ttdt != null)
                                            {
                                                DaTaContext.TTTruyenDiches.Remove(ttdt);
                                                DaTaContext.SaveChanges();
                                            }
                                        }

                                    }

                                    var xoad = DaTaContext.DThuocs.FirstOrDefault(p => p.IDDon == (id));
                                    var kieuDon = xoad.KieuDon ?? 99;
                                    DaTaContext.DThuocs.Remove(xoad);
                                    DaTaContext.SaveChanges();
                                    try
                                    {
                                        if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                                        {
                                            if (kieuDon == 1 || kieuDon == 0)
                                                DungChung.Ham.Update_STT_ThuocGNHT(DaTaContext, _int_maBN);
                                            UpdateDienBien_DonThuoc_CLS(DaTaContext, _int_maBN, DungChung.Bien.MaCB, kieuDon, xoad.NgayKe ?? DateTime.Now, memoDienBien.Text, xoad.MaKP);
                                        }
                                        else
                                        {
                                            var xoadb = DaTaContext.DienBiens.Single(p => p.IDDon == id);
                                            DaTaContext.DienBiens.Remove(xoadb);
                                            DaTaContext.SaveChanges();
                                        }
                                    }
                                    catch
                                    {
                                        MessageBox.Show("Lỗi xóa diễn biến bệnh");
                                    }
                                    grvBNhankb_FocusedRowChanged(null, null);
                                }
                            }
                        }
                    }
                    break;
                case 3:
                    DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                    if (!string.IsNullOrEmpty(txtChiDinh.Text))
                    {
                        int id = int.Parse(txtChiDinh.Text);
                        var kt = (from bn in DaTaContext.VienPhis.Where(p => p.MaBNhan == _int_maBN) select bn).ToList();
                        if (kt.Count > 0)
                        {
                            MessageBox.Show("Bệnh nhân đã thanh toán, Bạn không được xóa");
                        }
                        else
                        {
                            DialogResult _result;
                            _result = MessageBox.Show("Bạn muốn xóa dịch vụ của BN: " + txtTenBenhNhan.Text, "Xóa dịch vụ", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                            if (_result == DialogResult.Yes)
                            {

                                List<DThuocct> sl = new List<DThuocct>();
                                sl = (from iddct in DaTaContext.DThuoccts.Where(p => p.IDDon == id) select iddct).ToList();
                                bool _xoa = true;
                                foreach (var a in sl)
                                {
                                    var ktcd = DaTaContext.ChiDinhs.Where(p => p.IDCD == a.IDCD).ToList();
                                    if (ktcd.Count > 0)
                                    {
                                        _xoa = false;
                                        break;
                                    }
                                }
                                if (_xoa == true)
                                {
                                    foreach (var s in sl)
                                    {
                                        var dtct = DaTaContext.DThuoccts.Single(p => p.IDDonct == (s.IDDonct));
                                        DaTaContext.DThuoccts.Remove(dtct);
                                        DaTaContext.SaveChanges();
                                    }
                                    var xoad = DaTaContext.DThuocs.Single(p => p.IDDon == (id));
                                    DaTaContext.DThuocs.Remove(xoad);
                                    DaTaContext.SaveChanges();
                                    grvBNhankb_FocusedRowChanged(null, null);
                                }
                                else
                                {
                                    MessageBox.Show("Có các dịch vụ cls đã được thực hiện, bạn không thể xóa");
                                }
                            }
                        }
                    }
                    else
                    {
                        MessageBox.Show("không có dịch vụ để xóa");
                    }
                    break;
                case 5:
                    int iddon = 0;
                    int row = grv_Dthuoc.FocusedRowHandle;
                    if (grv_Dthuoc.GetRowCellValue(row, colIDDon) != null)
                    {
                        iddon = Convert.ToInt32(grv_Dthuoc.GetRowCellValue(row, colIDDon).ToString());
                        if (iddon > 0)
                        {
                            bool kt = true;
                            for (int i = 0; i < grv_Dthuocct.RowCount; i++)
                            {
                                if (grv_Dthuocct.GetRowCellValue(i, colIDDonct) != null && Convert.ToInt32(grv_Dthuocct.GetRowCellValue(i, colIDDonct)) > 0)
                                {
                                    kt = false;
                                    break;
                                }

                            }
                            if (kt)
                            {
                                DialogResult dialogResult = MessageBox.Show("Bạn có muốn xóa đơn thuốc này không ?", "Xác nhận xóa", MessageBoxButtons.YesNo);
                                if (dialogResult == DialogResult.Yes)
                                {
                                    var don = DaTaContext.DThuocs.Single(p => p.IDDon == iddon);
                                    List<DThuocct> ldonct = DaTaContext.DThuoccts.Where(p => p.IDDon == iddon).ToList();
                                    foreach (DThuocct dt in ldonct)
                                    {
                                        DaTaContext.DThuoccts.Remove(dt);
                                    }
                                    DaTaContext.DThuocs.Remove(don);
                                    DaTaContext.SaveChanges();
                                    grv_Dthuoc.DeleteRow(row);
                                    loadDthuocct();
                                }
                            }
                            else
                                MessageBox.Show("Đơn đã có thuốc, bạn không thể xóa");
                        }
                        else
                        {
                            loadDthuocct();
                        }
                    }
                    break;
            }
        }

        List<DichVu> _lAllDichVu = new List<DichVu>();

        private void grvDichVu_CellValueChanged(object sender, DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs e)
        {
            xtraChiDinh.Text = "Dich vụ*";
            btnLuuKb.Enabled = true;
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            int _int_maBN = 0;
            int rs = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            var bn = data.BenhNhans.FirstOrDefault(o => o.MaBNhan == _int_maBN);
            switch (e.Column.Name)
            {
                case "colNgayNhap":
                    if (grvDichVu.GetFocusedRowCellValue(colNgayNhapdv) == null)
                    {
                        MessageBox.Show("Bạn chưa nhập ngày tháng!");
                    }
                    break;
                case "colKhoaPhongDV":
                    if (grvDichVu.GetFocusedRowCellValue(colKhoaPhongDV) == null || grvDichVu.GetFocusedRowCellValue(colKhoaPhongDV).ToString() == "")
                    {
                        MessageBox.Show("Bạn chưa nhập khoa phòng!");

                    }
                    break;
                case "colTrongBHdv":
                    if (grvDichVu.GetFocusedRowCellValue(colTrongBHdv) != null)
                    {
                        int ma = 0;
                        if (grvDichVu.GetFocusedRowCellValue(colMaDVdv) != null)
                        {
                            ma = Convert.ToInt32(grvDichVu.GetFocusedRowCellValue(colMaDVdv));
                        }
                        int trongBH = Convert.ToInt32(grvDichVu.GetFocusedRowCellValue(colTrongBHdv));
                        DateTime ngaynhap = DateTime.Now;
                        if (grvDichVu.GetFocusedRowCellValue(colNgayNhapdv) != null && grvDichVu.GetFocusedRowCellValue(colNgayNhapdv).ToString() != "")
                            ngaynhap = Convert.ToDateTime(grvDichVu.GetFocusedRowCellValue(colNgayNhapdv).ToString());
                        grvDichVu.SetFocusedRowCellValue(colDonGia, DungChung.Ham._getGiaDM(DaTaContext, ma, trongBH, string.IsNullOrEmpty(txtMaBNhan.Text) ? 0 : Convert.ToInt32(txtMaBNhan.Text), ngaynhap));
                        // set thanh tien
                        if (grvDichVu.GetFocusedRowCellValue(colSoLuongdv) != null && grvDichVu.GetFocusedRowCellValue(colSoLuongdv).ToString() != "")
                        {
                            double sl = 0;
                            sl = Convert.ToDouble(grvDichVu.GetFocusedRowCellValue(colSoLuongdv).ToString());
                            double dg = 0;
                            if (grvDichVu.GetFocusedRowCellValue(colDonGiadv) != null && grvDichVu.GetFocusedRowCellValue(colDonGiadv).ToString() != "")
                                dg = Convert.ToDouble(grvDichVu.GetFocusedRowCellValue(colDonGiadv).ToString());
                            grvDichVu.SetFocusedRowCellValue(colThanhTien, sl * dg);
                        }
                    }
                    break;
                case "colMaDVdv":
                    int _trongBH = 1;
                    if (grvDichVu.GetFocusedRowCellValue(colKhoaPhongDV) == null || grvDichVu.GetFocusedRowCellValue(colKhoaPhongDV).ToString() == "")
                    {
                        MessageBox.Show("Bạn chưa nhập khoa phòng!");
                        grvDichVu.FocusedColumn.VisibleIndex = 1;

                    }
                    if (grvDichVu.GetFocusedRowCellValue(colMaDVdv) != null)
                    {

                        int ma = Convert.ToInt32(grvDichVu.GetFocusedRowCellValue(colMaDVdv));
                        int dvtrung = 0;

                        for (int i = 0; i < grvDichVu.RowCount; i++)
                        {
                            int madv = -10;
                            if (grvDichVu.GetRowCellValue(i, colMaDVdv) != null && grvDichVu.GetRowCellValue(i, colMaDVdv).ToString() != "")
                                madv = Convert.ToInt32(grvDichVu.GetRowCellValue(i, colMaDVdv));
                            if (ma == madv)
                            {
                                if (DungChung.Bien.MaBV != "30003" && i != grvDichVu.FocusedRowHandle)
                                {
                                    dvtrung++;
                                }
                            }
                        }
                        if (dvtrung > 0)
                        {
                            DialogResult _result = MessageBox.Show(grvDichVu.GetFocusedRowCellDisplayText(colMaDVdv) + " đã được chỉ định " + dvtrung + " lần, bạn vẫn muốn thêm?", "thêm dịch vụ", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                            if (_result == DialogResult.No)
                            {
                                grvDichVu.DeleteSelectedRows();
                                return;
                            }
                        }
                        var trongBH = _lAllDichVu.Where(p => p.MaDV == ma).ToList();
                        double TyLeTT = 100;
                        if (trongBH.Count > 0)
                        {
                            TyLeTT = trongBH.First().BHTT ?? 100;
                            _trongBH = trongBH.First().TrongDM.Value;
                        }
                        int iddtbn = -10;
                        if (grvBNhankb.GetFocusedRowCellValue(colIDDTBNhan) != null)
                            iddtbn = Convert.ToInt32(grvBNhankb.GetFocusedRowCellValue(colIDDTBNhan));
                        if (DungChung.Bien._idDTBHYT != iddtbn && _trongBH == 1)
                            _trongBH = 0;
                        DateTime ngaynhap = DateTime.Now;
                        if (grvDichVu.GetFocusedRowCellValue(colNgayNhapdv) != null && grvDichVu.GetFocusedRowCellValue(colNgayNhapdv).ToString() != "")
                            ngaynhap = Convert.ToDateTime(grvDichVu.GetFocusedRowCellValue(colNgayNhapdv).ToString());
                        grvDichVu.SetFocusedRowCellValue(colDonGia, DungChung.Ham._getGiaDM(DaTaContext, ma, _trongBH, string.IsNullOrEmpty(txtMaBNhan.Text) ? 0 : Convert.ToInt32(txtMaBNhan.Text), ngaynhap));
                        if (DungChung.Bien.MaBV == "20001" && bn != null && bn.DTuong == "Khám miễn phí")
                        {
                            _trongBH = 2; ;
                        }
                        grvDichVu.SetFocusedRowCellValue(colDonVi, DungChung.Ham._getDonVi(DaTaContext, ma));
                        grvDichVu.SetFocusedRowCellValue(colKhoaPhongDV, DungChung.Bien.MaKP);
                        grvDichVu.SetFocusedRowCellValue(colTyLeBHTT, TyLeTT);
                        grvDichVu.SetFocusedRowCellValue(colTrongBHdv, _trongBH);
                        if (grvDichVu.GetFocusedRowCellValue(colSoLuongdv) != null && grvDichVu.GetFocusedRowCellValue(colSoLuongdv).ToString() != "")
                        {
                            double sl = 0;
                            sl = Convert.ToDouble(grvDichVu.GetFocusedRowCellValue(colSoLuongdv).ToString());
                            double dg = 0;
                            if (grvDichVu.GetFocusedRowCellValue(colDonGiadv) != null && grvDichVu.GetFocusedRowCellValue(colDonGiadv).ToString() != "")
                                dg = Convert.ToDouble(grvDichVu.GetFocusedRowCellValue(colDonGiadv).ToString());
                            grvDichVu.SetFocusedRowCellValue(colThanhTien, sl * dg);
                        }
                    }
                    break;
                case "colSoLuongdv":
                    if (grvDichVu.GetFocusedRowCellValue(colSoLuongdv) != null && grvDichVu.GetFocusedRowCellValue(colSoLuongdv).ToString() != "")
                    {
                        double sl = 0;
                        sl = Convert.ToDouble(grvDichVu.GetFocusedRowCellValue(colSoLuongdv).ToString());
                        double dg = 0;
                        double tyleBHTT = 100;
                        if (grvDichVu.GetFocusedRowCellValue(colTyLeBHTT) != null)
                            tyleBHTT = Convert.ToDouble(grvDichVu.GetFocusedRowCellValue(colTyLeBHTT));
                        if (grvDichVu.GetFocusedRowCellValue(colDonGiadv) != null && grvDichVu.GetFocusedRowCellValue(colDonGiadv).ToString() != "")
                            dg = Convert.ToDouble(grvDichVu.GetFocusedRowCellValue(colDonGiadv).ToString());
                        grvDichVu.SetFocusedRowCellValue(colThanhTien, sl * dg * tyleBHTT / 100);
                    }
                    break;
                case "colTyLeBHTT":
                    if (grvDichVu.GetFocusedRowCellValue(colSoLuongdv) != null && grvDichVu.GetFocusedRowCellValue(colSoLuongdv).ToString() != "")
                    {
                        double sl = 0;
                        sl = Convert.ToDouble(grvDichVu.GetFocusedRowCellValue(colSoLuongdv).ToString());
                        double dg = 0;
                        double tyleBHTT = 100;
                        if (grvDichVu.GetFocusedRowCellValue(colTyLeBHTT) != null)
                            tyleBHTT = Convert.ToDouble(grvDichVu.GetFocusedRowCellValue(colTyLeBHTT));
                        if (grvDichVu.GetFocusedRowCellValue(colDonGiadv) != null && grvDichVu.GetFocusedRowCellValue(colDonGiadv).ToString() != "")
                            dg = Convert.ToDouble(grvDichVu.GetFocusedRowCellValue(colDonGiadv).ToString());
                        grvDichVu.SetFocusedRowCellValue(colThanhTien, sl * dg * tyleBHTT / 100);
                    }
                    break;
                case "colXHH":
                    if (grvDichVu.GetFocusedRowCellValue(colXHH) != null && grvDichVu.GetFocusedRowCellValue(colXHH).ToString() == "True")
                    {
                        grvDichVu.SetFocusedRowCellValue(colTrongBHdv, 0);
                    }
                    break;
            }
        }

        private void grvDichVu_InitNewRow(object sender, DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs e)
        {
            grvDichVu.SetFocusedRowCellValue(colNgayNhapdv, System.DateTime.Now);// kiểm tra lại
            grvDichVu.SetFocusedRowCellValue(colThanhTiendv, 0); ;
            grvDichVu.SetFocusedRowCellValue(colTTLuudv, 1);
            grvDichVu.SetFocusedRowCellValue(colKhoaPhongDV, DungChung.Bien.MaKP);
            int mabn = 0;
            if (!string.IsNullOrEmpty(txtMaBNhan.Text))
                mabn = Convert.ToInt32(txtMaBNhan.Text);
            var bsdt = (from bn in DaTaContext.BNKBs.Where(p => p.MaBNhan == mabn)
                        select new
                        {
                            bn.IDKB,
                            bn.MaCB
                        }).OrderByDescending(p => p.IDKB).ToList();
            if (bsdt.Count() > 0)
            {
                string MaCB = bsdt.First().MaCB;
                grvDichVu.SetFocusedRowCellValue(colBSTH, MaCB);
            }
            var benhNhan = DaTaContext.BenhNhans.FirstOrDefault(o => o.MaBNhan == mabn);
            if (DungChung.Bien.MaBV == "20001" && benhNhan != null && benhNhan.DTuong == "Khám miễn phí")
            {
                grvDichVu.SetFocusedRowCellValue(colTrongBHdv, 2);
            }
        }
        private class LBNKB
        {
            public int idkb;
            public int mabnhan;
            //public DateTime ngay;
            public int IDKB
            {
                set { idkb = value; }
                get { return idkb; }
            }
            public int MaBNhan
            {
                set { mabnhan = value; }
                get { return mabnhan; }
            }
        }
        int _makp = 0;
        List<LBNKB> _lBNKB = new List<LBNKB>();
        private string ThongBaoBNChuyenPK()
        {
            _lBNKB = (from kb in DaTaContext.BNKBs
                      where ((DungChung.Bien.MaBV != "14018" && DungChung.Bien.MaBV != "14017") ? (kb.NgayKham <= _dtden && kb.NgayKham >= _dttu) : true)
                      group kb by new { kb.MaBNhan } into kq
                      select new LBNKB()
                      {
                          MaBNhan = kq.Key.MaBNhan == null ? 0 : kq.Key.MaBNhan.Value,
                          IDKB = kq.Max(p => p.IDKB),
                      }).ToList();
            List<int> idkbs = _lBNKB.Select(o => o.IDKB).ToList();
            _lTKbncho = (
                from bn in DaTaContext.BenhNhans.Where(o => radNoiTru.SelectedIndex == 1 ? o.NoiTru == 1 : (o.NoiTru == 0 && o.DTNT == true)) // on kb.MaBNhan equals bn.MaBNhan
                join bnkbenh in DaTaContext.BNKBs.Where(p => idkbs.Contains(p.IDKB)) on bn.MaBNhan equals bnkbenh.MaBNhan//kb.IDKB equals bnkbenh.IDKB
                where ((bnkbenh.MaKPdt == _makp || ((DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017") && bnkbenh.MaKPDTKH == _makp)) && bnkbenh.MaKP != _makp && (bnkbenh.PhuongAn == 3 || bnkbenh.PhuongAn == 1) && bn.Status <= 1)
                select bn).Distinct().ToList();
            int id = 0;
            id = _lTKbncho.Count;
            if (id > 0)
            {
                string a = "Có: " + id + " bệnh nhân được chuyển vào khoa đang chờ...";
                return a;
            }
            else
            {
                return "";
            }
        }
        string ChuyenKhoa = "";
        bool process = false;
        List<BenhNhan> _lTKbn = new List<BenhNhan>();
        private void TimKiem()
        {
            if (_timKiem)
            {
                ckcchuyenBG.Checked = false;
                process = true;
                _lTKbn.Clear();
                _dttu = DungChung.Ham.NgayTu(dtTimTuNgay.DateTime);
                _dtden = DungChung.Ham.NgayDen(dtTimDenNgay.DateTime);
                if (lupTimMaKP.EditValue != null)
                {
                    _makp = Convert.ToInt32(lupTimMaKP.EditValue);
                }

                if (_lkp.Where(p => p.MaKP == _makp).ToList().Count > 0)
                {
                    ChuyenKhoa = _lkp.Where(p => p.MaKP == _makp).First().ChuyenKhoa;

                }
                else
                {
                    ChuyenKhoa = "";

                }
                string _tk = "";
                int _mabnTK = 0;// ma benh nhan tim kiem nhao theo o text txtTimKiem
                if (!string.IsNullOrEmpty(txtTimKiem.Text) && txtTimKiem.Text != "Nhập tên|Mã số|Số thẻ BN")
                {
                    _tk = txtTimKiem.Text;
                    int rs;

                    if (Int32.TryParse(txtTimKiem.Text, out rs))
                        _mabnTK = Convert.ToInt32(txtTimKiem.Text);
                }
                if (chkBNcho.Checked)
                {
                    labThongBaoBNCP.Text = ThongBaoBNChuyenPK();
                    _lTKbn = _lTKbncho;
                }
                else
                {
                    int noitru = radNoiTru.SelectedIndex;
                    string maCB = (cboBacSyDT.EditValue != null && !string.IsNullOrWhiteSpace(cboBacSyDT.Text)) ? cboBacSyDT.EditValue.ToString() : "";

                    switch (cboTimRaVien.SelectedIndex)
                    {
                        case 0: //chưa ra
                            if (ChuyenKhoa == "Phẫu thuật" || ChuyenKhoa == "Thủ thuật")
                            {
                                _lTKbn = (from bn in DaTaContext.BenhNhans.Where(p => noitru == 2 ? (p.NoiTru == 0 && p.DTNT) : p.NoiTru == noitru).Where(p => p.MaKCB == DungChung.Bien.MaBV)
                                          join cls in DaTaContext.CLS.Where(p => p.MaKPth == _makp && ((DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017") ? (maCB != "" ? p.MaCB == maCB : true) : true)).Where(p => p.NgayThang >= _dttu && p.NgayThang <= _dtden).Where(p => p.Status == 0) on bn.MaBNhan equals cls.MaBNhan
                                          select bn).Distinct().OrderBy(p => p.NNhap).ToList();

                            }
                            else
                            {
                                var bnChuaRa = (from bn in DaTaContext.BenhNhans.Where(p => (p.Status == 1 || p.Status == 4 || p.Status == 5)).Where(p => noitru == 2 ? (p.NoiTru == 0 && p.DTNT) : p.NoiTru == noitru)
                                                join bnkb in DaTaContext.BNKBs.Where(o => (o.MaKP == _makp || o.MaKPDTKH == _makp)) on bn.MaBNhan equals bnkb.MaBNhan into kq
                                                from bkkbc in kq.DefaultIfEmpty()
                                                where (bn.MaKP == _makp || bn.MaKPDTKH == _makp)
                                                where (bn.MaKCB == DungChung.Bien.MaBV)
                                                select new { bkkbc, bn }).OrderBy(p => p.bn.MaBNhan).OrderBy(p => p.bn.TenBNhan).ToList();


                                _lTKbn = (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017") ? bnChuaRa.Where(o => o.bkkbc != null && (maCB != "" ? o.bkkbc.MaCB == maCB : true)).Select(o => o.bn).Distinct().ToList() : bnChuaRa.Select(o => o.bn).Distinct().ToList();

                            }
                            break;
                        case 1: //ra viện chưa TT
                            if (ChuyenKhoa == "Phẫu thuật" || ChuyenKhoa == "Thủ thuật")
                            {
                                _lTKbn = (from bn in DaTaContext.BenhNhans.Where(p => noitru == 2 ? (p.NoiTru == 0 && p.DTNT) : p.NoiTru == noitru)
                                          join cls in DaTaContext.CLS.Where(p => p.MaKPth == _makp) on bn.MaBNhan equals cls.MaBNhan
                                          where (cls.NgayThang >= _dttu && cls.NgayThang <= _dtden)
                                          where (cls.Status == 1)
                                          where (bn.MaKCB == DungChung.Bien.MaBV)
                                          select bn).OrderBy(p => p.MaBNhan).OrderBy(p => p.TenBNhan).ToList();
                            }
                            else
                            {
                                _lTKbn = (from bn in DaTaContext.BenhNhans.Where(p => noitru == 2 ? (p.NoiTru == 0 && p.DTNT) : p.NoiTru == noitru).Where(p => (p.Status <= 2 || p.Status == 4 || p.Status == 5)).Where(p => (p.MaKP == _makp || p.MaKPDTKH == _makp))
                                          join kb in DaTaContext.RaViens.Where(p => p.Status == 2 || p.Status == 4) on bn.MaBNhan equals kb.MaBNhan
                                          where (bn.MaKCB == DungChung.Bien.MaBV)

                                          where (kb.NgayRa >= _dttu && kb.NgayRa <= _dtden)
                                          select bn).OrderBy(p => p.MaBNhan).OrderBy(p => p.TenBNhan).ToList();

                            }

                            break;
                        case 2: // chuyển viện
                            {
                                _lTKbn = (from bn in DaTaContext.BenhNhans.Where(p => noitru == 2 ? (p.NoiTru == 0 && p.DTNT) : p.NoiTru == noitru).Where(p => (p.MaKP == _makp || p.MaKPDTKH == _makp))
                                          join kb in DaTaContext.RaViens.Where(p => p.Status == 1) on bn.MaBNhan equals kb.MaBNhan

                                          where (kb.NgayRa >= _dttu && kb.NgayRa <= _dtden)
                                          where (bn.MaKCB == DungChung.Bien.MaBV)
                                          select bn).OrderBy(p => p.MaBNhan).OrderBy(p => p.TenBNhan).ToList();


                            }
                            break;
                        case 3: // vào khoa trực tiếp
                            {
                                _lTKbn = (from bn in DaTaContext.BenhNhans.Where(p => p.Status == 0).Where(p => (p.MaKP == _makp || p.MaKPDTKH == _makp))

                                          where (bn.MaKCB == DungChung.Bien.MaBV)
                                          select bn).OrderBy(p => p.MaBNhan).OrderBy(p => p.SoTT).ToList();

                            }
                            break;
                        case 4: // chuyển khoa điều trị
                            {
                                _lTKbn = (from bn in DaTaContext.BenhNhans.Where(p => p.Status >= 1)
                                          join kb in DaTaContext.BNKBs.Where(p => (p.MaKP == _makp || p.MaKPDTKH == _makp) && p.PhuongAn == 3) on bn.MaBNhan equals kb.MaBNhan

                                          where (bn.MaKCB == DungChung.Bien.MaBV)
                                          select bn).Distinct().OrderBy(p => p.MaBNhan).OrderBy(p => p.SoTT).ToList();

                            }
                            break;
                        case 5: //đã TT
                            if (ChuyenKhoa == "Phẫu thuật" || ChuyenKhoa == "Thủ thuật")
                            {
                                _lTKbn = (from bn in DaTaContext.BenhNhans.Where(p => p.NoiTru == 1)
                                          join cls in DaTaContext.CLS.Where(p => p.MaKPth == _makp) on bn.MaBNhan equals cls.MaBNhan
                                          where (cls.NgayThang >= _dttu && cls.NgayThang <= _dtden)
                                          where (bn.MaKCB == DungChung.Bien.MaBV)
                                          where (cls.Status == 1)
                                          select bn).Distinct().OrderBy(p => p.NNhap).ToList();

                            }
                            else
                            {
                                _lTKbn = (from bn in DaTaContext.BenhNhans.Where(p => noitru == 2 ? (p.NoiTru == 0 && p.DTNT) : p.NoiTru == noitru).Where(p => (p.MaKP == _makp || p.MaKPDTKH == _makp))
                                          join kb in DaTaContext.VienPhis on bn.MaBNhan equals kb.MaBNhan
                                          where (bn.MaKCB == DungChung.Bien.MaBV)
                                          where (kb.NgayTT >= _dttu && kb.NgayTT <= _dtden)
                                          select bn).OrderBy(p => p.MaBNhan).OrderBy(p => p.TenBNhan).ToList();

                            }

                            break;
                        case 6: // trốn viện
                            {
                                _lTKbn = (from bn in DaTaContext.BenhNhans.Where(p => noitru == 2 ? (p.NoiTru == 0 && p.DTNT) : p.NoiTru == noitru).Where(p => (p.MaKP == _makp || p.MaKPDTKH == _makp))
                                          join kb in DaTaContext.RaViens.Where(p => p.Status == 3) on bn.MaBNhan equals kb.MaBNhan

                                          where (kb.NgayRa >= _dttu && kb.NgayRa <= _dtden)
                                          where (bn.MaKCB == DungChung.Bien.MaBV)
                                          select bn).OrderBy(p => p.MaBNhan).OrderBy(p => p.TenBNhan).ToList();

                            }

                            break;
                        case 7: //ra viện chưa TT
                            {
                                _lTKbn = (from bn in DaTaContext.BenhNhans.Where(p => noitru == 2 ? (p.NoiTru == 0 && p.DTNT) : p.NoiTru == noitru).Where(p => (p.MaKP == _makp || p.MaKPDTKH == _makp))
                                          join kb in DaTaContext.RaViens.Where(p => p.Status == 4) on bn.MaBNhan equals kb.MaBNhan
                                          where (kb.NgayRa >= _dttu && kb.NgayRa <= _dtden)
                                          where (bn.MaKCB == DungChung.Bien.MaBV)
                                          select bn).OrderBy(p => p.MaBNhan).OrderBy(p => p.TenBNhan).ToList();

                            }
                            break;
                    }// swith
                    if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                        _lTKbn = _lTKbn.OrderByDescending(o => o.NNhap).ToList();
                    grcBNhankb.DataSource = null;
                    grcBNhankb.DataSource = _lTKbn.ToList();

                    int soBNBH = _lTKbn.Where(p => p.DTuong == "BHYT").Count();
                    int soBNDV = _lTKbn.Where(p => p.DTuong.ToLower() == "dịch vụ").Count();
                    int soBNKMP = _lTKbn.Where(p => p.DTuong.ToLower() == "khám miễn phí").Count();
                    lblTSBN.Text = "TS: " + _lTKbn.Count() + " (" + soBNBH + " BN BHYT, " + soBNDV + " BN Dịch vụ" + (DungChung.Bien.MaBV == "20001" ? (", " + soBNKMP + " BN Khám miễn phí") : "") + ")";

                }
                process = false;
                timkiem2();
            }
        }
        void timkiem2()
        {
            process = true;
            bool all = false;
            xtraNgoaiTru.Enabled = false;
            bool ChuaKD = chkChuaKe.Checked;
            bool chuakham = chkChuaKham.Checked;
            bool chidinhcls = chkChiDinhCLS.Checked;
            bool ketqua = chkKetQuaCLS.Checked;
            if (ChuaKD && chuakham && chidinhcls && ketqua)
                all = true;
            if (!ChuaKD && !chuakham && !chidinhcls && !ketqua)
                all = true;
            string _tk = "";
            int _mabnTK = 0;// ma benh nhan tim kiem nhao theo o text txtTimKiem
            if (!string.IsNullOrEmpty(txtTimKiem.Text) && txtTimKiem.Text != "Nhập tên|Mã số|Số thẻ BN")
            {
                _tk = txtTimKiem.Text.Trim().ToLower();
                int rs;

                if (Int32.TryParse(txtTimKiem.Text, out rs))
                    _mabnTK = Convert.ToInt32(txtTimKiem.Text);
            }
            DateTime ngaytu = DungChung.Ham.NgayTu(DateTime.Now);
            DateTime ngayden = DungChung.Ham.NgayDen(DateTime.Now);
            grcBNhankb.DataSource = null;
            grcBNhankb.DataSource = (from a in _lTKbn
                                     where (a.TenBNhan.ToLower().Contains(_tk) || a.MaBNhan == _mabnTK)
                                     select a).ToList();
            process = false;

        }
        private void dtTimTuNgay_Leave(object sender, EventArgs e)
        {
            TimKiem();
        }

        private void dtTimDenNgay_Leave(object sender, EventArgs e)
        {
            TimKiem();
        }

        private void grvBNhankb_DataSourceChanged(object sender, EventArgs e)
        {
            //
            grvBNhankb_FocusedRowChanged(null, null);
        }

        private void cboTimRaVien_EditValueChanged(object sender, EventArgs e)
        {
            TimKiem();
        }
        private void Enable_PhauThuat(bool t)
        {
            barRaVien.Enabled = t;
            barChuyenVien.Enabled = t;
            barChiPhi.Enabled = t;
            this.xtraDBBenh.PageEnabled = t;
        }
        private void lupTimMaKP_EditValueChanged(object sender, EventArgs e)
        {
            int makp = 0;
            makp = Convert.ToInt32(lupTimMaKP.EditValue);
            if (lupTimMaKP.EditValue != null && !string.IsNullOrWhiteSpace(lupTimMaKP.Text))
            {
                string _makp = "";
                _makp = ";" + makp.ToString() + ";";
                if ((DungChung.Bien.ChuyenKhoa).Contains("trực"))
                    cboBacSyDT.Properties.DataSource = _lCanBo.Where(p => p.Status == 1).Where(p => p.CapBac.ToLower().Contains("bs") || p.CapBac.ToLower().Contains("bác sĩ") || p.CapBac.ToLower().Contains("bác sỹ") || p.CapBac.ToLower().Contains("ys") || p.CapBac.ToLower().Contains("y sĩ") || p.CapBac.ToLower().Contains("y sỹ") || p.CapBac.ToLower().Contains("giáo sư") || p.CapBac.ToLower().Contains("gs") || p.CapBac.ToLower().Contains("tiến sĩ") || p.CapBac.ToLower().Contains("ts")).ToList();
                else
                    cboBacSyDT.Properties.DataSource = _lCanBo.Where(p => p.Status == 1).Where(p => p.MaKPsd.Contains(_makp)).Where(p => p.CapBac.ToLower().Contains("bs") || p.CapBac.ToLower().Contains("bác sĩ") || p.CapBac.ToLower().Contains("bác sỹ") || p.CapBac.ToLower().Contains("ys") || p.CapBac.ToLower().Contains("y sĩ") || p.CapBac.ToLower().Contains("y sỹ") || p.CapBac.ToLower().Contains("giáo sư") || p.CapBac.ToLower().Contains("gs") || p.CapBac.ToLower().Contains("tiến sĩ") || p.CapBac.ToLower().Contains("ts")).ToList();
            }
            TimKiem();
            if (ChuyenKhoa == "Phẫu thuật")
                Enable_PhauThuat(false);
            else
                Enable_PhauThuat(true);

            if (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
            {
                xtraCDChamSoc.PageVisible = true;
                grcDienBien.ForceInitialize();
                colHuongDtri.Visible = true;
                colHuongDtri.VisibleIndex = 3;
                xtra15NgayDT.PageVisible = true;
            }
            else
            {
                if (ChuyenKhoa == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.CKDongY)
                {
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                        xtraCDChamSoc.PageVisible = true;
                    else
                        xtraCDChamSoc.PageVisible = false;
                    colHuongDtri.Visible = true;
                    colHuongDtri.VisibleIndex = 3;
                }
                else
                {
                    xtraCDChamSoc.PageVisible = true;
                    colHuongDtri.Visible = false;
                }
                if (DungChung.Bien.MaBV == "24009")
                    xtra15NgayDT.PageVisible = true;
                else
                    xtra15NgayDT.PageVisible = false;
            }

            var qkp = _lkp.Where(p => p.MaKP == makp).Where(p => p.PLoai == DungChung.Bien.st_PhanLoaiKP.PhongKham).FirstOrDefault();
            if (qkp != null)
                xtraDieuTri.PageVisible = false;
            else
                xtraDieuTri.PageVisible = true;


        }

        private void txtTimKiem_Leave(object sender, EventArgs e)
        {
            TimKiem();

        }

        private void grvDonThuocct_CustomDrawCell(object sender, DevExpress.XtraGrid.Views.Base.RowCellCustomDrawEventArgs e)
        {
            //Tạo số thự tự
            if (e.Column == STT)
            {
                e.DisplayText = Convert.ToString(e.RowHandle + 1);
            }
        }

        private void grvDonThuocdt_DataSourceChanged(object sender, EventArgs e)
        {
            grvDonThuocdt_FocusedRowChanged(null, null);
        }

        private void btnRaVien_Click(object sender, EventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            frm_Ravien frm = new frm_Ravien(_int_maBN);
            frm.ShowDialog();
        }

        private void btnChuyenVien_Click(object sender, EventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            frm_CVienNoiTru frm = new frm_CVienNoiTru(_int_maBN);
            frm.ShowDialog();
        }

        private void btnCopydon_Click(object sender, EventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            int _iddon = 0;
            if (grvDonThuocdt.GetFocusedRowCellValue(colIDDon) != null && grvDonThuocdt.GetFocusedRowCellValue(colIDDon).ToString() != "")
                _iddon = Convert.ToInt32(grvDonThuocdt.GetFocusedRowCellValue(colIDDon));
            int makp = 0;
            if (lupTimMaKP.EditValue != null)
                makp = Convert.ToInt32(lupTimMaKP.EditValue);

            frm_CopyDon frm = new frm_CopyDon(_int_maBN, _iddon, true, makp);
            frm.ShowDialog();
            SetTTTab();
        }

        private void grvDonThuocct_RowCellClick(object sender, DevExpress.XtraGrid.Views.Grid.RowCellClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            switch (e.Column.Name)
            {
                case "colXoactdt":
                    int xoaid = 0;
                    if (!DungChung.Ham.KT_RaVien(DaTaContext, _int_maBN))
                    {

                        int iddon = String.IsNullOrEmpty(txtIdDonThuoc.Text) ? 0 : Convert.ToInt32(txtIdDonThuoc.Text);
                        var ktxd = DaTaContext.DThuocs.FirstOrDefault(p => p.IDDon == iddon);


                        if (ktxd == null)
                        { grvDonThuocct.DeleteSelectedRows(); }
                        else
                        {
                            if (grvDonThuocct.GetFocusedRowCellValue(colIDDonct) != null && grvDonThuocct.GetFocusedRowCellValue(colIDDonct).ToString() != "")
                                xoaid = Convert.ToInt32(grvDonThuocct.GetFocusedRowCellValue(colIDDonct));
                            if (xoaid > 0)
                            {
                                var xoa = DaTaContext.DThuoccts.Single(p => p.IDDonct == xoaid);
                                if (xoa.Status == 1)
                                    MessageBox.Show("Đơn thuốc đã được xuất dược, bạn không thể xóa");
                                else
                                {
                                    if (xoa.SoPL > 0)
                                        MessageBox.Show("Thuốc đã được lên phiếu lĩnh, bạn không thể xóa");
                                    else
                                    {
                                        if (grvDonThuocct.GetFocusedRowCellValue(colMaDVdt) != null && grvDonThuocct.GetFocusedRowCellValue(colMaDVdt).ToString() != "")
                                        {
                                            DialogResult _result = MessageBox.Show("Xóa thuốc: " + grvDonThuocct.GetFocusedRowCellDisplayText(colMaDVdt), "xóa chi tiết!", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                                            if (_result == DialogResult.Yes)
                                            {
                                                DaTaContext.DThuoccts.Remove(xoa);
                                                if (DaTaContext.SaveChanges() > 0)
                                                {
                                                    if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                                                    {
                                                        if (ktxd.KieuDon == 1 || ktxd.KieuDon == 0)
                                                            DungChung.Ham.Update_STT_ThuocGNHT(DaTaContext, _int_maBN);
                                                        UpdateDienBien_DonThuoc_CLS(DaTaContext, _int_maBN, DungChung.Bien.MaCB, ktxd.KieuDon ?? 0, ktxd.NgayKe ?? DateTime.Now, memoDienBien.Text, ktxd.MaKP);
                                                    }
                                                    var ttdt = DaTaContext.TTTruyenDiches.Where(p => p.IdDonct == xoaid).FirstOrDefault();
                                                    if (ttdt != null)
                                                    {
                                                        DaTaContext.TTTruyenDiches.Remove(ttdt);
                                                        DaTaContext.SaveChanges();
                                                    }
                                                }
                                                grvDonThuocct.DeleteSelectedRows();

                                            }
                                        }
                                    }
                                }
                            }
                            else
                            {
                                grvDonThuocct.DeleteSelectedRows();
                            }
                        }

                    }
                    else
                    {
                        MessageBox.Show("Bệnh nhân đã thanh toán, Bạn không thể xóa!");
                    }
                    break;
                case "htpxoa":
                    MessageBox.Show("htp");
                    break;
                case "colTTTruyendich":
                    int iddonct = 0, madv = 0;
                    if (grvDonThuocct.GetFocusedRowCellValue(colIDDonct) != null && grvDonThuocct.GetFocusedRowCellValue(colIDDonct).ToString() != "")
                        iddonct = Convert.ToInt32(grvDonThuocct.GetFocusedRowCellValue(colIDDonct));
                    if (grvDonThuocct.GetFocusedRowCellValue(colMaDVdt) != null && grvDonThuocct.GetFocusedRowCellValue(colMaDVdt).ToString() != "")
                        madv = Convert.ToInt32(grvDonThuocct.GetFocusedRowCellValue(colMaDVdt));
                    if (iddonct >= 0)
                    {
                        if (madv > 0)
                        {
                            var kt = (from dv in DaTaContext.DichVus.Where(p => p.MaDV == madv)
                                      join tn in DaTaContext.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                      select new { tn.TenTN }).ToList();
                            if (kt.Count > 0 && kt.First().TenTN.ToLower().Contains("dịch truyền"))
                            {
                                QLBV.FormNhap.frm_TTTruyenDich frm = new QLBV.FormNhap.frm_TTTruyenDich(iddonct, _int_maBN);
                                frm.ShowDialog();
                            }
                            else
                            {
                                MessageBox.Show("Thông tin truyền dịch chỉ dùng cho dịch vụ thuộc nhóm: Dịch truyền");
                            }
                        }
                    }
                    else
                    {
                        MessageBox.Show("Cần lưu lại đơn thuốc trước khi nhập thông tin truyền dịch");
                    }
                    break;
            }
        }

        List<dsthuoc> _lConTon = new List<dsthuoc>();
        /// <summary>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
        /// Tất cả những thuốc xuất nhập trong kho đó
        /// </summary>
        List<dsthuoc> _lDvTheoKho = new List<dsthuoc>();

        private void lupKhoXuat_EditValueChanged(object sender, EventArgs e)
        {
            if (processRowClick || clickDtct)
            {
                LoadComboThuoc();
                return;
            }
            _lDvTheoKho = new List<dsthuoc>();
            _lConTon = new List<dsthuoc>();
            List<int> lTon = new List<int>();
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            int makho = 0;
            int _makpKD = 0;
            if (lupKhoXuat.EditValue != null)
                makho = Convert.ToInt32(lupKhoXuat.EditValue);
            var TenKP = _lkp.Where(p => p.MaKP == makho).Select(p => p.TenKP).FirstOrDefault();
            if (TenKP != null)
            {
                if (TenKP.Contains("Tủ trực") && cboKieuDon.SelectedIndex == 2)
                {
                    MessageBox.Show("Không thể trả thuốc về tủ trực", "Thông báo", MessageBoxButtons.OK);
                    cboKieuDon.SelectedIndex = 0;
                }
            }

            if (lupBPKe.EditValue != null)
                _makpKD = Convert.ToInt32(lupBPKe.EditValue);
            string _makpsd = ";" + _makpKD.ToString() + ";";
            string _makhoxuatsd = ";" + makho.ToString() + ";";

            var getppxuat = _lkho.Where(p => p.MaKP == makho).Select(p => p.PPXuat).FirstOrDefault();

            if (getppxuat != null)
                ppxuat = getppxuat.Value;
            if (ppxuat == 3)
            {
                colSoLo.Visible = true;
                colSoLo.VisibleIndex = 17;
                colHanDung.Visible = true;
                colHanDung.VisibleIndex = 18;
            }
            else
                colSoLo.Visible = false;
            var ppHuHao = _lkho.Where(p => p.MaKP == makho).Select(p => p.PPHHDY).FirstOrDefault();
            var khoKe = _lkho.FirstOrDefault(p => p.MaKP == makho);


            if (makho <= 0)
                return;

            var dvu = (from tenduoc in DaTaContext.DichVus.Where(p => p.PLoai == 1).Where(p => BothuocKoSD == true ? p.Status == 1 : true).Where(p => p.MaKPsd.Contains(_makpsd) && p.MaKPsd.Contains(_makhoxuatsd))
                       join tieun in DaTaContext.TieuNhomDVs on tenduoc.IdTieuNhom equals tieun.IdTieuNhom
                       join dvEx in DaTaContext.DichVuExes on tenduoc.MaDV equals dvEx.MaDV into kq
                       from kq1 in kq.DefaultIfEmpty()
                       select new { tenduoc.TyLeBQ, tenduoc.DonGia, tenduoc.GhiChu, tenduoc.MaTam, tenduoc.MaDV, tenduoc.TenDV, tenduoc.DongY, tenduoc.TenHC, tenduoc.HamLuong, tenduoc.NguonGoc, tenduoc.DonVi, TenThuocRG = tenduoc.TenRG, tieun.TenRG, TenThau2017 = kq1 == null ? "" : kq1.TenThau2017 }).ToList();



            var kttutruc = _lKphongall.Where(p => p.MaKP == makho).Where(p => p.PLoai.Contains("Tủ trực")).ToList();
            if (kttutruc.Count > 0)
            {
                var nhapdc = (from nhapduoc in DaTaContext.NhapDcts
                              join nduoc in DaTaContext.NhapDs.Where(p => p.PLoai == 2).Where(p => p.MaKPnx == makho) on nhapduoc.IDNhap equals nduoc.IDNhap
                              select new
                              {
                                  nhapduoc.MaDV,
                                  nhapduoc.SoLo,
                                  nhapduoc.HanDung
                              }).Distinct().ToList();
                _lDvTheoKho = (from tenduoc in dvu
                               join nhapduoc in nhapdc on tenduoc.MaDV equals nhapduoc.MaDV
                               group new { tenduoc, nhapduoc } by new { nhapduoc.SoLo, nhapduoc.HanDung, tenduoc.TyLeBQ, tenduoc.DonGia, tenduoc.GhiChu, tenduoc.TenThuocRG, tenduoc.TenHC, tenduoc.TenDV, tenduoc.MaDV, tenduoc.DonVi, tenduoc.NguonGoc, tenduoc.HamLuong, tenduoc.TenRG, tenduoc.TenThau2017 } into kq
                               select new dsthuoc { DonGia = kq.Key.DonGia, TenRG = kq.Key.TenRG, TenThau2017 = kq.Key.TenThau2017, TenThuocRG = kq.Key.TenThuocRG, TenHC = kq.Key.TenHC, TenDV = kq.Key.TenDV, MaDV = kq.Key.MaDV, DonVi = kq.Key.DonVi, NguonGoc = kq.Key.NguonGoc, HamLuong = kq.Key.HamLuong, GhiChu = kq.Key.GhiChu, SoLo = kq.Key.SoLo, HanDung = kq.Key.HanDung }
                                ).OrderBy(p => p.TenDV).ToList();

            }
            else
            {
                if (cboKieuDon.SelectedIndex == 2) // kiểu trả dược không cần kiểm tra mã kp sd
                {
                    var dvu2 = (from tenduoc in DaTaContext.DichVus.Where(p => p.PLoai == 1).Where(p => BothuocKoSD == true ? p.Status == 1 : true)
                                join tieun in DaTaContext.TieuNhomDVs on tenduoc.IdTieuNhom equals tieun.IdTieuNhom
                                join dvEx in DaTaContext.DichVuExes on tenduoc.MaDV equals dvEx.MaDV into kq
                                from kq1 in kq.DefaultIfEmpty()
                                select new { tenduoc.DonGia, tenduoc.GhiChu, TenThuocRG = tenduoc.TenRG, tenduoc.MaDV, tenduoc.TenDV, tenduoc.TenHC, tenduoc.HamLuong, tenduoc.NguonGoc, tenduoc.DonVi, tieun.TenRG, TenThau2017 = kq1 == null ? "" : kq1.TenThau2017 }).ToList();
                    var thuock = (from nhapduoc in DaTaContext.DThuoccts.Where(p => p.Status != 0)
                                  join nduoc in DaTaContext.DThuocs.Where(p => p.MaBNhan == _int_maBN).Where(p => p.MaKXuat == makho && p.MaKP == _makpKD) on nhapduoc.IDDon equals nduoc.IDDon
                                  select new { nhapduoc.SoLuong, nhapduoc.DonGia, nhapduoc.DonVi, nhapduoc.MaDV, nhapduoc.MaKP, nhapduoc.TrongBH }).ToList();
                    _lDvTheoKho = (from tenduoc in dvu2
                                   join nhapduoc in thuock on tenduoc.MaDV equals nhapduoc.MaDV
                                   group new { tenduoc, nhapduoc } by new { tenduoc.DonGia, tenduoc.GhiChu, tenduoc.TenThuocRG, tenduoc.TenThau2017, tenduoc.TenRG, tenduoc.TenHC, nhapduoc.MaKP, tenduoc.TenDV, tenduoc.MaDV, tenduoc.DonVi, tenduoc.NguonGoc, tenduoc.HamLuong, nhapduoc.TrongBH } into kq
                                   select new dsthuoc { DonGia = kq.Key.DonGia, TenRG = kq.Key.TenRG, TenThau2017 = kq.Key.TenThau2017, TenThuocRG = kq.Key.TenThuocRG, TenHC = kq.Key.TenHC, TenDV = kq.Key.TenDV, MaDV = kq.Key.MaDV, DonVi = kq.Key.DonVi, MaKP = kq.Key.MaKP ?? 0, NguonGoc = kq.Key.NguonGoc, HamLuong = kq.Key.HamLuong, GhiChu = kq.Key.GhiChu, TrongBH = kq.Key.TrongBH }
                                                   ).OrderBy(p => p.TenDV).ToList();


                }
                else
                {
                    if (ppxuat == 3)
                    {
                        var nhapdc = (from nduoc in DaTaContext.NhapDs.Where(p => p.MaKP == makho).Where(p => p.PLoai == 1 || p.PLoai == 2 || p.PLoai == 3)
                                      join nhapduoc in DaTaContext.NhapDcts on nduoc.IDNhap equals nhapduoc.IDNhap
                                      select new { MaDV = nhapduoc.MaDV ?? 0, nhapduoc.SoLuongN, nhapduoc.SoLuongX, nhapduoc.SoLo, nhapduoc.HanDung, nduoc.PLoai, nduoc.KieuDon, nhapduoc.SoLuongDY }
                                      ).ToList();
                        var thuoc = (from tenduoc in dvu
                                     join nhapduoc in nhapdc on tenduoc.MaDV equals nhapduoc.MaDV
                                     group new { tenduoc, nhapduoc } by new { nhapduoc.SoLo, nhapduoc.HanDung, tenduoc.GhiChu, tenduoc.TenThuocRG, tenduoc.TenRG, tenduoc.MaTam, tenduoc.TenThau2017, tenduoc.TenHC, tenduoc.TenDV, tenduoc.MaDV, tenduoc.DonVi, tenduoc.NguonGoc, tenduoc.HamLuong, tenduoc.DonGia, tenduoc.TyLeBQ } into kq
                                     select new { TyLeBQ = Convert.ToInt32(kq.Key.TyLeBQ), DonGia = kq.Key.DonGia, TenRG = kq.Key.TenRG, TenThuocRG = kq.Key.TenThuocRG, MaTam = kq.Key.MaTam, TenThau2017 = kq.Key.TenThau2017, TenHC = kq.Key.TenHC, TenDV = kq.Key.TenDV, MaDV = kq.Key.MaDV, DonVi = kq.Key.DonVi, NguonGoc = kq.Key.NguonGoc, HamLuong = kq.Key.HamLuong, GhiChu = kq.Key.GhiChu, SoLo = kq.Key.SoLo, HanDung = kq.Key.HanDung, }
                                ).OrderBy(p => p.TenDV).ToList();

                        if (khoKe != null && khoKe.IsMuaNgoai == true)
                            thuoc = (from tenduoc in dvu
                                     join nhapduoc in nhapdc on tenduoc.MaDV equals nhapduoc.MaDV
                                     group new { tenduoc } by new { nhapduoc.SoLo, nhapduoc.HanDung, tenduoc.GhiChu, tenduoc.TenThuocRG, tenduoc.TenRG, tenduoc.MaTam, tenduoc.TenThau2017, tenduoc.TenHC, tenduoc.TenDV, tenduoc.MaDV, tenduoc.DonVi, tenduoc.NguonGoc, tenduoc.HamLuong, tenduoc.DonGia, tenduoc.TyLeBQ } into kq
                                     select new { TyLeBQ = Convert.ToInt32(kq.Key.TyLeBQ), DonGia = kq.Key.DonGia, TenRG = kq.Key.TenRG, TenThuocRG = kq.Key.TenThuocRG, MaTam = kq.Key.MaTam, TenThau2017 = kq.Key.TenThau2017, TenHC = kq.Key.TenHC, TenDV = kq.Key.TenDV, MaDV = kq.Key.MaDV, DonVi = kq.Key.DonVi, NguonGoc = kq.Key.NguonGoc, HamLuong = kq.Key.HamLuong, GhiChu = kq.Key.GhiChu, SoLo = kq.Key.SoLo, HanDung = kq.Key.HanDung, }
                                    ).OrderBy(p => p.TenDV).ToList();
                        foreach (var item in thuoc)
                        {
                            dsthuoc moi = new dsthuoc();
                            moi.MaTam = item.MaTam;
                            moi.TenDV = item.TenDV;
                            moi.MaDV = item.MaDV;
                            moi.HamLuong = item.HamLuong;
                            moi.NguonGoc = item.NguonGoc;
                            moi.TenHC = item.TenHC;
                            moi.DonVi = item.DonVi;
                            moi.NguonGoc = item.NguonGoc;
                            moi.TenRG = item.TenRG;
                            moi.TenThuocRG = item.TenThuocRG;
                            moi.TenThau2017 = item.TenThau2017;
                            moi.GhiChu = item.GhiChu;
                            moi.DonGia = item.TyLeBQ != null ? (item.DonGia + item.DonGia * item.TyLeBQ / 100) : item.DonGia; // his 1747
                            if (ppxuat == 3)
                            {
                                moi.SoLo = item.SoLo;
                                moi.HanDung = item.HanDung;
                            }
                            _lDvTheoKho.Add(moi);
                        }
                        var duoc2 = (from d in nhapdc
                                     join dv in dvu on d.MaDV equals dv.MaDV
                                     group new { d, dv } by new { d.MaDV, dv.DongY } into kq
                                     select new
                                     {
                                         kq.Key.MaDV,
                                         Nhap = kq.Where(p => p.d.PLoai == 1).Sum(p => p.d.SoLuongN) == null ? 0 : kq.Where(p => p.d.PLoai == 1).Sum(p => p.d.SoLuongN),
                                         NhapDY = kq.Key.DongY == 1 ? (kq.Where(p => p.d.PLoai == 1 && p.d.KieuDon == 2).Sum(p => p.d.SoLuongDY) == null ? 0 : kq.Where(p => p.d.PLoai == 1 && p.d.KieuDon == 2).Sum(p => p.d.SoLuongDY)) : 0,
                                         Xuat = kq.Sum(p => p.d.SoLuongX) == null ? 0 : kq.Sum(p => p.d.SoLuongX),
                                         XuatDY = (ppHuHao != null && ppHuHao == 0) ? (kq.Key.DongY == 1 ? (kq.Where(p => p.d.PLoai == 2).Sum(p => p.d.SoLuongDY) == null ? 0 : kq.Where(p => p.d.PLoai == 2).Sum(p => p.d.SoLuongDY)) : 0) : 0
                                     }).ToList();

                        lTon = (from nd in duoc2
                                select new
                                {
                                    nd.MaDV,
                                    Ton = nd.Nhap + nd.NhapDY - nd.Xuat - nd.XuatDY
                                }).Where(p => p.Ton > 0).Select(p => p.MaDV).Where(p => p != null).Distinct().ToList();
                    }
                    else
                    {
                        var nhapdc = (from nduoc in DaTaContext.NhapDs.Where(p => p.MaKP == makho).Where(p => p.PLoai == 1 || p.PLoai == 2 || p.PLoai == 3)
                                      join nhapduoc in DaTaContext.NhapDcts on nduoc.IDNhap equals nhapduoc.IDNhap
                                      select new { MaDV = nhapduoc.MaDV ?? 0, nhapduoc.SoLuongN, nhapduoc.SoLuongX, nduoc.PLoai, nduoc.KieuDon, nhapduoc.SoLuongDY, nhapduoc.DonGia }
                                      ).ToList();
                        var thuoc = (from tenduoc in dvu
                                     join nhapduoc in nhapdc on tenduoc.MaDV equals nhapduoc.MaDV
                                     group new { tenduoc, nhapduoc } by new { tenduoc.GhiChu, tenduoc.TenThuocRG, tenduoc.TenRG, tenduoc.MaTam, tenduoc.TenThau2017, tenduoc.TenHC, tenduoc.TenDV, tenduoc.MaDV, tenduoc.DonVi, tenduoc.NguonGoc, tenduoc.HamLuong, nhapduoc.DonGia, tenduoc.TyLeBQ } into kq
                                     select new { TyLeBQ = Convert.ToInt32(kq.Key.TyLeBQ), DonGia = kq.Key.DonGia, TenRG = kq.Key.TenRG, TenThuocRG = kq.Key.TenThuocRG, MaTam = kq.Key.MaTam, TenThau2017 = kq.Key.TenThau2017, TenHC = kq.Key.TenHC, TenDV = kq.Key.TenDV, MaDV = kq.Key.MaDV, DonVi = kq.Key.DonVi, NguonGoc = kq.Key.NguonGoc, HamLuong = kq.Key.HamLuong, GhiChu = kq.Key.GhiChu }
                                ).OrderBy(p => p.TenDV).ToList();

                        if (khoKe != null && khoKe.IsMuaNgoai == true)
                            thuoc = (from tenduoc in dvu
                                     join nhapduoc in nhapdc on tenduoc.MaDV equals nhapduoc.MaDV
                                     group new { tenduoc } by new { tenduoc.GhiChu, tenduoc.TenThuocRG, tenduoc.TenRG, tenduoc.MaTam, tenduoc.TenThau2017, tenduoc.TenHC, tenduoc.TenDV, tenduoc.MaDV, tenduoc.DonVi, tenduoc.NguonGoc, tenduoc.HamLuong, nhapduoc.DonGia, tenduoc.TyLeBQ } into kq
                                     select new { TyLeBQ = Convert.ToInt32(kq.Key.TyLeBQ), DonGia = kq.Key.DonGia, TenRG = kq.Key.TenRG, TenThuocRG = kq.Key.TenThuocRG, MaTam = kq.Key.MaTam, TenThau2017 = kq.Key.TenThau2017, TenHC = kq.Key.TenHC, TenDV = kq.Key.TenDV, MaDV = kq.Key.MaDV, DonVi = kq.Key.DonVi, NguonGoc = kq.Key.NguonGoc, HamLuong = kq.Key.HamLuong, GhiChu = kq.Key.GhiChu }
                                    ).OrderBy(p => p.TenDV).ToList();
                        foreach (var item in thuoc)
                        {
                            dsthuoc moi = new dsthuoc();
                            moi.MaTam = item.MaTam;
                            moi.TenDV = item.TenDV;
                            moi.MaDV = item.MaDV;
                            moi.HamLuong = item.HamLuong;
                            moi.NguonGoc = item.NguonGoc;
                            moi.TenHC = item.TenHC;
                            moi.DonVi = item.DonVi;
                            moi.NguonGoc = item.NguonGoc;
                            moi.TenRG = item.TenRG;
                            moi.TenThuocRG = item.TenThuocRG;
                            moi.TenThau2017 = item.TenThau2017;
                            moi.GhiChu = item.GhiChu;
                            moi.DonGia = item.TyLeBQ != null ? (item.DonGia + item.DonGia * item.TyLeBQ / 100) : item.DonGia; // his 1747
                            _lDvTheoKho.Add(moi);
                        }


                        var duoc2 = (from d in nhapdc
                                     join dv in dvu on d.MaDV equals dv.MaDV
                                     group new { d, dv } by new { d.MaDV, dv.DongY } into kq
                                     select new
                                     {
                                         kq.Key.MaDV,
                                         Nhap = kq.Where(p => p.d.PLoai == 1).Sum(p => p.d.SoLuongN) == null ? 0 : kq.Where(p => p.d.PLoai == 1).Sum(p => p.d.SoLuongN),
                                         NhapDY = kq.Key.DongY == 1 ? (kq.Where(p => p.d.PLoai == 1 && p.d.KieuDon == 2).Sum(p => p.d.SoLuongDY) == null ? 0 : kq.Where(p => p.d.PLoai == 1 && p.d.KieuDon == 2).Sum(p => p.d.SoLuongDY)) : 0,
                                         Xuat = kq.Sum(p => p.d.SoLuongX) == null ? 0 : kq.Sum(p => p.d.SoLuongX),
                                         XuatDY = (ppHuHao != null && ppHuHao == 0) ? (kq.Key.DongY == 1 ? (kq.Where(p => p.d.PLoai == 2).Sum(p => p.d.SoLuongDY) == null ? 0 : kq.Where(p => p.d.PLoai == 2).Sum(p => p.d.SoLuongDY)) : 0) : 0
                                     }).ToList();

                        lTon = (from nd in duoc2
                                select new
                                {
                                    nd.MaDV,
                                    Ton = nd.Nhap + nd.NhapDY - nd.Xuat - nd.XuatDY
                                }).Where(p => p.Ton > 0).Select(p => p.MaDV).Where(p => p != null).Distinct().ToList();
                    }
                }
            }


            #region tạm bỏ 28-09
            //if (TTLuu == 1 && cboKieuDon.SelectedIndex != 2 && qkp.Count == 0)//tính tồn : thêm mới, tồn nhỏ hơn 0 thì không hiển thị
            //{
            //var qnxt0 = (from nd in DaTaContext.NhapDs.Where(p => p.MaKP == makho)
            //             join ndct in DaTaContext.NhapDcts
            //             on nd.IDNhap equals ndct.IDNhap
            //             group new { nd, ndct } by new { ndct.MaDV, ndct.DonGia } into kq
            //             select new
            //             {
            //                 kq.Key.MaDV,
            //                 kq.Key.DonGia,
            //                 Nhap = kq.Where(p => p.nd.PLoai == 1).Sum(p => p.ndct.SoLuongN) == null ? 0 : kq.Where(p => p.nd.PLoai == 1).Sum(p => p.ndct.SoLuongN),
            //                 NhapDY = kq.Where(p => p.nd.PLoai == 1 && p.nd.KieuDon == 2).Sum(p => p.ndct.SoLuongDY) == null ? 0 : kq.Where(p => p.nd.PLoai == 1 && p.nd.KieuDon == 2).Sum(p => p.ndct.SoLuongDY),
            //                 Xuat = kq.Sum(p => p.ndct.SoLuongX) == null ? 0 : kq.Sum(p => p.ndct.SoLuongX),
            //                 XuatDY = kq.Where(p => p.nd.PLoai == 2).Sum(p => p.ndct.SoLuongDY) == null ? 0 : kq.Where(p => p.nd.PLoai == 2).Sum(p => p.ndct.SoLuongDY)
            //             }).ToList();
            //var qnxt1 = (from nd in qnxt0
            //             select new
            //             {
            //                 nd.MaDV,
            //                 nd.DonGia,
            //                 Ton = nd.Nhap + nd.NhapDY - nd.Xuat - nd.XuatDY

            //             }).ToList();
            //var qnxt2 = qnxt1.Where(p => p.Ton > 0).Select(p => p.MaDV).Where(p => p != null).Distinct().ToList();

            //_ldsthuoc = _ldsthuoc.Where(p => qnxt2.Count > 0 && qnxt2.Contains(p.MaDV)).ToList();
            // }

            #endregion

            bool bnDieuTriNoiNgoaiTru = true;//dùng cho bv 20001
            var qbn = DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN).FirstOrDefault();
            if (qbn != null && qbn.NoiTru == 0 && qbn.DTNT == false)
                bnDieuTriNoiNgoaiTru = false;
            foreach (var item in _lDvTheoKho)
            {
                if (DungChung.Bien.MaBV == "04011" || DungChung.Bien.MaBV == "24009" || _maCQCQ == "24009" || DungChung.Bien.MaBV == "26062" || ((DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017") && bnDieuTriNoiNgoaiTru)) //|| DungChung.Bien.MaBV == "01830" bỏ 17-11, anh quý
                {
                    if (!string.IsNullOrEmpty(item.TenThuocRG))
                    {
                        item.TenDV = item.TenThuocRG;
                    }
                    else
                        item.TenDV = item.TenDV;
                }
                if (DungChung.Bien.MaBV == "12001")
                {

                    if (!string.IsNullOrEmpty(item.TenThuocRG))
                    {
                        item.TenDV = item.TenThuocRG;
                    }
                    else
                        item.TenDV = item.TenDV;
                    item.GhiChu = item.GhiChu;


                }
                else if (DungChung.Bien.MaBV == "26007")
                {
                    item.TenDV = item.TenDV + " " + item.HamLuong;
                }
                else if (DungChung.Bien.MaBV == "30007")
                    item.TenDV = item.TenDV + ":" + item.HamLuong;

                if (DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24272" && item.TenRG.ToLower().Contains("thuốc"))// HIS - 1114 26042022
                {
                    var dsgia = Ham._getDSGia(DaTaContext, item.MaDV, makho);
                    var soton = Ham._checkTon_KD1(DaTaContext, item.MaDV, makho, item.DonGia, 0, item.SoLo, item.HanDung);
                    if (soton > 0)
                        item.SLTon = true;
                    else
                        item.SLTon = false;
                }
                else
                {
                    item.SLTon = true;
                }
            }
            if (kttutruc.Count > 0 || cboKieuDon.SelectedIndex == 2)
                _lConTon = _lDvTheoKho;
            else
            {
                _lConTon = (khoKe != null && khoKe.IsMuaNgoai == true) ? _lDvTheoKho : (from a in lTon join b in _lDvTheoKho on a equals b.MaDV select b).ToList();
                if (DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24272")
                {
                    _lConTon = _lConTon.Where(p => p.SLTon == true).ToList();
                }
            }

            lupMaDuocdt.DataSource = null;
            lupHamLuong.DataSource = null;
            if (DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24272")
            {
                var _l = _lDvTheoKho.Where(p => p.SLTon == true).ToList();
                lupMaDuocdt.DataSource = _l;
                lupHamLuong.DataSource = _l;
            }
            else
            {
                lupMaDuocdt.DataSource = _lDvTheoKho.Distinct().ToList();
                lupHamLuong.DataSource = _lDvTheoKho.Distinct().ToList();
            }
        }

        private void LoadComboThuoc()
        {
            var listThuoc = (from tenduoc in DaTaContext.DichVus.Where(p => p.PLoai == 1)
                             join tn in DaTaContext.TieuNhomDVs on tenduoc.IdTieuNhom equals tn.IdTieuNhom
                             join dvEx in DaTaContext.DichVuExes on tenduoc.MaDV equals dvEx.MaDV into kq
                             from kq1 in kq.DefaultIfEmpty()
                             select new dsthuoc { TenRG = tn.TenRG, TenThau2017 = (kq1 != null ? kq1.TenThau2017 : ""), TenThuocRG = tenduoc.TenRG, TenHC = tenduoc.TenHC, TenDV = tenduoc.TenDV, MaDV = tenduoc.MaDV, DonVi = tenduoc.DonVi, NguonGoc = tenduoc.NguonGoc, HamLuong = tenduoc.HamLuong, GhiChu = tenduoc.GhiChu }).ToList();
            foreach (var item in listThuoc)
            {
                if (DungChung.Bien.MaBV == "04011" || DungChung.Bien.MaBV == "24009" || _maCQCQ == "24009" || DungChung.Bien.MaBV == "26062" || ((DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017"))) //|| DungChung.Bien.MaBV == "01830" bỏ 17-11, anh quý
                {
                    if (!string.IsNullOrEmpty(item.TenThuocRG))
                    {
                        item.TenDV = item.TenThuocRG;
                    }
                    else
                        item.TenDV = item.TenDV;
                }
                if (DungChung.Bien.MaBV == "12001")
                {

                    if (!string.IsNullOrEmpty(item.TenThuocRG))
                    {
                        item.TenDV = item.TenThuocRG;
                    }
                    else
                        item.TenDV = item.TenDV;
                    item.GhiChu = item.GhiChu;


                }
                else if (DungChung.Bien.MaBV == "26007")
                {
                    item.TenDV = item.TenDV + " " + item.HamLuong;
                }
                else if (DungChung.Bien.MaBV == "30007")
                    item.TenDV = item.TenDV + ":" + item.HamLuong;
            }
            lupMaDuocdt.DataSource = null;
            lupMaDuocdt.DataSource = listThuoc.ToList();
        }

        private void xtraNgoaiTru_SelectedPageChanging(object sender, DevExpress.XtraTab.TabPageChangingEventArgs e)
        {
            if (xtraDieuTri.Text.Contains("*"))
            {
                DialogResult result;
                result = MessageBox.Show("Bạn chưa lưu khám bệnh - Kê đơn, Bạn có muốn lưu không?", "Thông báo!", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                if (result == DialogResult.No)
                {
                    SetTTTab();
                }
                else
                {
                    btnLuuKb_Click(sender, e);
                }
            }
            if (xtraKeDon.Text.Contains("*"))
            {
                DialogResult result;
                result = MessageBox.Show("Bạn chưa lưu đơn thuốc, Bạn có muốn lưu không?", "Thông báo!", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                if (result == DialogResult.No)
                {
                    SetTTTab();
                }
                else
                {

                    btnLuuKb_Click(sender, e);

                }
            }
            if (xtraChiDinh.Text.Contains("*"))
            {
                DialogResult result;
                result = MessageBox.Show("Bạn chưa lưu dịch vụ, Bạn có muốn lưu không?", "Thông báo!", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                if (result == DialogResult.No)
                {
                    SetTTTab();
                }
                else
                {
                    btnLuuKb_Click(sender, e);
                }
            }
        }

        private void dtNgayKhamkb_EditValueChanged(object sender, EventArgs e)
        {
            xtraDieuTri.Text = "Điều trị*";
            btnLuuKb.Enabled = true;
        }
        string buonggiuong = "";
        private void lupKhoaKhamkb_EditValueChanged(object sender, EventArgs e)
        {
            int makp = 0; string _makp = "";
            DateTime Ngayke = System.DateTime.Now.Date;
            Ngayke = DungChung.Ham.NgayTu(dtNgayKhamkb.DateTime);
            if (lupKhoaKhamkb.EditValue != null)
            {
                makp = Convert.ToInt32(lupKhoaKhamkb.EditValue);
                _makp = ";" + makp.ToString() + ";";
            }
            string ckhoa = "";
            var chuyenkhoa = _lKphongall.Where(p => p.MaKP == makp).ToList();
            if (chuyenkhoa.Count > 0)
            {
                ckhoa = chuyenkhoa.First().ChuyenKhoa;
                cboChuyenKhoa.Text = chuyenkhoa.First().ChuyenKhoa;
                buonggiuong = chuyenkhoa.First().BuongGiuong;
            }
            else
            {
                cboChuyenKhoa.Text = "";
                buonggiuong = "";
            }

            if ((DungChung.Bien.ChuyenKhoa).Contains("trực"))
                lupNguoiKhamkb.Properties.DataSource = _lCanBo.Where(p => p.Status == 1).Where(p => p.CapBac.ToLower().Contains("bs") || p.CapBac.ToLower().Contains("bác sĩ") || p.CapBac.ToLower().Contains("bác sỹ") || p.CapBac.ToLower().Contains("ys") || p.CapBac.ToLower().Contains("y sĩ") || p.CapBac.ToLower().Contains("y sỹ") || p.CapBac.ToLower().Contains("giáo sư") || p.CapBac.ToLower().Contains("gs") || p.CapBac.ToLower().Contains("tiến sĩ") || p.CapBac.ToLower().Contains("ts")).ToList();
            else
                lupNguoiKhamkb.Properties.DataSource = _lCanBo.Where(p => p.Status == 1).Where(p => p.MaKPsd.Contains(_makp)).Where(p => p.CapBac.ToLower().Contains("bs") || p.CapBac.ToLower().Contains("bác sĩ") || p.CapBac.ToLower().Contains("bác sỹ") || p.CapBac.ToLower().Contains("ys") || p.CapBac.ToLower().Contains("y sĩ") || p.CapBac.ToLower().Contains("y sỹ") || p.CapBac.ToLower().Contains("giáo sư") || p.CapBac.ToLower().Contains("gs") || p.CapBac.ToLower().Contains("tiến sĩ") || p.CapBac.ToLower().Contains("ts")).ToList();
            if (DungChung.Bien.MaBV == "30007")
            {
                if (DungChung.Bien.PLoaiKP != DungChung.Bien.st_PhanLoaiKP.Admin)
                {
                    if (_lCanBo.Where(p => p.Status == 1).Where(p => p.MaKPsd.Contains(_makp)).Where(p => p.MaCB == DungChung.Bien.MaCB).Count() > 0)
                        lupNguoiKhamkb.EditValue = DungChung.Bien.MaCB;
                }
            }
            // add buồng, giường
            if (!string.IsNullOrEmpty(buonggiuong))
            {
                List<QLBV.FormThamSo.frm_NhapBuongGiuongKeKoach.dsBuongGiuong> _lBuongG = new List<QLBV.FormThamSo.frm_NhapBuongGiuongKeKoach.dsBuongGiuong>();
                string nam = Convert.ToString(Ngayke.Year);
                if (DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24272")
                {
                    nam = DateTime.Now.Year.ToString();
                }
                _lBuongG = QLBV.FormThamSo.frm_NhapBuongGiuongKeKoach.getBuongGiuong(DaTaContext, makp, nam);
                var lBuong = (from b in _lBuongG
                              group b by new { b.buong } into kq
                              select kq.Key.buong).ToList();
                var lGiuong = (from b in _lBuongG
                               group b by new { b.giuongTT } into kq
                               select kq.Key.giuongTT).ToList();
                cboBuong.Properties.Items.Clear();
                cboBuong.Properties.Items.Add("");

                cboBuong.Properties.Items.AddRange(lBuong);
                cboBuong.Properties.Items.AddRange(lGiuong);
            }
            else
            {
                cboBuong.Properties.Items.Clear();
                cboBuong.Properties.Items.Add("");
            }
            xtraDieuTri.Text = "Điều trị*";
            btnLuuKb.Enabled = true;
        }

        private void lupNguoiKhamkb_EditValueChanged(object sender, EventArgs e)
        {
            xtraDieuTri.Text = "Điều trị*";
            btnLuuKb.Enabled = true;
        }

        private void txtBenhKhac_EditValueChanged(object sender, EventArgs e)
        {
            xtraDieuTri.Text = "Điều trị*";
            btnLuuKb.Enabled = true;

        }

        private void txtBuong_EditValueChanged(object sender, EventArgs e)
        {
            xtraDieuTri.Text = "Điều trị*";
            btnLuuKb.Enabled = true;
        }

        private void txtGiuong_EditValueChanged(object sender, EventArgs e)
        {
            xtraDieuTri.Text = "Điều trị*";
            btnLuuKb.Enabled = true;
        }

        private void TongTien()
        {
            #region tính tổng tiền thuốc kê đơn được thanh toán BV 27021
            if (lupBPKe.EditValue != null)
            {
                DateTime tungay = DungChung.Ham.NgayTu(dtNgayKe.DateTime);
                DateTime denngay = DungChung.Ham.NgayDen(dtNgayKe.DateTime);
                int makp = Convert.ToInt32(lupBPKe.EditValue);
                QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                var qtt = (from dt in data.DThuocs.Where(p => p.NgayKe >= tungay && p.NgayKe <= denngay).Where(p => p.MaKP == makp) join dtct in data.DThuoccts.Where(p => p.Status == 1) on dt.IDDon equals dtct.IDDon select dtct.ThanhTien).ToList();
                double tt = 0;
                if (qtt.Count > 0)
                    tt = qtt.Sum(p => p);
                txtTongTien.Text = tt.ToString();
            }
            #endregion

        }
        private void dtNgayKe_EditValueChanged(object sender, EventArgs e)
        {
            xtraKeDon.Text = "Đơn thuốc*";
            btnLuuKb.Enabled = true;
            if (DungChung.Bien.MaBV == "27021")
                TongTien();

        }

        private void lupBPKe_EditValueChanged(object sender, EventArgs e)
        {
            int makp = 0; string _makp = "";
            if (lupBPKe.EditValue != null)
            {
                makp = Convert.ToInt32(lupBPKe.EditValue);
                _makp = ";" + makp.ToString() + ";";
            }
            if ((DungChung.Bien.ChuyenKhoa).Contains("trực"))
                lupNguoiKe.Properties.DataSource = _lCanBo.Where(p => p.Status == 1).Where(p => p.CapBac.ToLower().Contains("bs") || p.CapBac.ToLower().Contains("bác sĩ") || p.CapBac.ToLower().Contains("bác sỹ") || p.CapBac.ToLower().Contains("ys") || p.CapBac.ToLower().Contains("y sĩ") || p.CapBac.ToLower().Contains("y sỹ") || p.CapBac.ToLower().Contains("giáo sư") || p.CapBac.ToLower().Contains("gs") || p.CapBac.ToLower().Contains("tiến sĩ") || p.CapBac.ToLower().Contains("ts")).ToList();
            else
                lupNguoiKe.Properties.DataSource = _lCanBo.Where(p => p.Status == 1).Where(p => p.MaKPsd.Contains(_makp)).Where(p => p.CapBac.ToLower().Contains("bs") || p.CapBac.ToLower().Contains("bác sĩ") || p.CapBac.ToLower().Contains("bác sỹ") || p.CapBac.ToLower().Contains("ys") || p.CapBac.ToLower().Contains("y sĩ") || p.CapBac.ToLower().Contains("y sỹ") || p.CapBac.ToLower().Contains("giáo sư") || p.CapBac.ToLower().Contains("gs") || p.CapBac.ToLower().Contains("tiến sĩ") || p.CapBac.ToLower().Contains("ts")).ToList();
            if (DungChung.Bien.MaBV == "30007")
            {
                if (DungChung.Bien.PLoaiKP != DungChung.Bien.st_PhanLoaiKP.Admin)
                {
                    if (_lCanBo.Where(p => p.Status == 1).Where(p => p.MaKPsd.Contains(_makp)).Where(p => p.MaCB == DungChung.Bien.MaCB).Count() > 0)
                        lupNguoiKe.EditValue = DungChung.Bien.MaCB;
                }
            }
            List<int> lmakp = new List<int>();
            if (DungChung.Bien.MaBV == "30303" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
            {
                var qdskpsd = DaTaContext.KPhongs.Where(p => p.MaKP == makp).FirstOrDefault();
                if (qdskpsd != null && qdskpsd.MaKPsd != null)
                {

                    List<string> lstr = new List<string>();
                    lstr = qdskpsd.MaKPsd.Split(';').ToList();
                    foreach (var a in lstr)
                    {
                        int ot;
                        if (int.TryParse(a, out ot))
                            lmakp.Add(Convert.ToInt32(a));
                    }
                }
            }
            string MKP = makp.ToString();
            var kd = (from kp in _lkho.Where(p => p.Status == 1)
                      where (kp.PLoai == ("Khoa dược") || (kp.PLoai == ("Tủ trực") && DungChung.Bien.MaBV == "24012" ? kp.MaKPsd.Contains(MKP) : kp.NhomKP == makp)) && kp.MaBVsd == DungChung.Bien.MaBV && ((DungChung.Bien.MaBV == "30303" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017") ? (lmakp.Contains(kp.MaKP)) : true)
                      select kp).ToList();


            lupKhoXuat.Properties.DataSource = kd.Where(p => p.ChuyenKhoa != DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.NhaThuoc || (DungChung.Bien.MaBV == "24012" ? p.MaKPsd.Contains(MKP) : true)).ToList();
            lupKhoXuat_EditValueChanged(sender, e);
            xtraKeDon.Text = "Đơn thuốc*";
            btnLuuKb.Enabled = true;
        }

        private void lupNguoiKe_EditValueChanged(object sender, EventArgs e)
        {
            xtraKeDon.Text = "Đơn thuốc*";
            btnLuuKb.Enabled = true;
        }

        private void cboKieuDon_SelectedIndexChanged(object sender, EventArgs e)
        {
            int makho = 0;
            if (lupKhoXuat.EditValue != null)
            {
                makho = Convert.ToInt32(lupKhoXuat.EditValue);
                var TenKP = _lKphongall.Where(p => p.MaKP == makho).Select(p => p.TenKP).FirstOrDefault();
                if (TenKP != null)
                {
                    if (TenKP.Contains("Tủ trực") && cboKieuDon.SelectedIndex == 2)
                    {
                        MessageBox.Show("Không thể trả thuốc về tủ trực", "Thông báo", MessageBoxButtons.OK);
                        cboKieuDon.SelectedIndex = 0;
                    }
                }
            }
            if (TTLuu == 1 || TTLuu == 2)
            {
                if (cboKieuDon.SelectedIndex == 3 || cboKieuDon.SelectedIndex == 4)
                {
                    MessageBox.Show("Bạn phải chọn kiểu đơn khác");
                    cboKieuDon.SelectedIndex = 0;
                }
            }
            coltrongBH.OptionsColumn.ReadOnly = false;
            colTyLeBHTT.OptionsColumn.ReadOnly = false;
            lupKhoXuat_EditValueChanged(null, null);

        }

        private void cboNhomDuoc_SelectedIndexChanged(object sender, EventArgs e)
        {
            lupKhoXuat_EditValueChanged(null, null);
        }

        private void grvBNhankb_DoubleClick(object sender, EventArgs e)
        {
            string tenbn = "";
            if (grvBNhankb.GetFocusedRowCellValue(colTenBNhan) != null && grvBNhankb.GetFocusedRowCellValue(colTenBNhan).ToString() != "")
                tenbn = grvBNhankb.GetFocusedRowCellValue(colTenBNhan).ToString();
            if (grvBNhankb.GetFocusedRowCellValue(colMaBNhan) != null)
            {
                int mabn = Convert.ToInt32(grvBNhankb.GetFocusedRowCellValue(colMaBNhan));
                frmHSBNNhapMoi frm = new frmHSBNNhapMoi(2, mabn);
                frm.ShowDialog();
            }
        }

        private void btnTTBN_Click(object sender, EventArgs e)
        {
            if (xtraDieuTri.Text.Contains("*") || xtraChiDinh.Text.Contains("*") || xtraKeDon.Text.Contains("*"))
            {
                DialogResult _result = MessageBox.Show("Bạn chưa lưu dữ liệu, Bạn có muốn lưu không?", "thông báo!", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                if (_result == DialogResult.Yes)
                {
                    btnLuuKb_Click(sender, e);
                }
                TTLuu = 0;
                SetTTTab();
            }
            frmHSBNNhapMoi frm = new frmHSBNNhapMoi(0);
            frm.ShowDialog();
            TimKiem();
        }

        private void btnVaoVien_Click(object sender, EventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            FormThamSo.frm_XemChiPhi frm = new FormThamSo.frm_XemChiPhi(_int_maBN, txtTenBenhNhan.Text);
            frm.ShowDialog();
        }

        private void grvDichVu_RowCellClick(object sender, DevExpress.XtraGrid.Views.Grid.RowCellClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            if (e.Column.Name == "colXoactdv")
            {
                int xoaid = 0, _IDCD = 0; ;
                if (!DungChung.Ham.KT_RaVien(DaTaContext, _int_maBN))
                {
                    if (grvDichVu.GetFocusedRowCellValue(colIDctdv) != null)
                        xoaid = Convert.ToInt32(grvDichVu.GetFocusedRowCellValue(colIDctdv));
                    if (grvDichVu.GetFocusedRowCellValue(colIDCD) != null)
                        _IDCD = Convert.ToInt32(grvDichVu.GetFocusedRowCellValue(colIDCD));
                    if (xoaid > 0)
                    {

                        if (grvDichVu.GetFocusedRowCellValue(colMaDVdt) != null)
                        {
                            var ktcd = DaTaContext.ChiDinhs.Where(p => p.IDCD == _IDCD).ToList();
                            if (_IDCD > 0 && ktcd.Count > 0)
                            {
                                MessageBox.Show("Dịch vụ CLS đã được thực hiện, bạn không thể xóa");
                            }
                            else
                            {
                                DialogResult _result = MessageBox.Show("Xóa dịch vụ: " + grvDichVu.GetFocusedRowCellDisplayText(colMaDVdv), "xóa chi tiết!", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                                if (_result == DialogResult.Yes)
                                {
                                    if (xoaid > 0)
                                    {
                                        var xoa = DaTaContext.DThuoccts.Single(p => p.IDDonct == xoaid);
                                        DaTaContext.DThuoccts.Remove(xoa);
                                        DaTaContext.SaveChanges();
                                        grvDichVu.DeleteSelectedRows();
                                    }
                                }
                            }
                        }
                    }
                    else
                    {
                        grvDichVu.DeleteSelectedRows();
                    }

                }
                else
                {
                    MessageBox.Show("Bệnh nhân đã thanh toán, Bạn không thể xóa!");
                }
            }
        }

        private void btnKBVV_Click(object sender, EventArgs e)
        {
            int rs = -1;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            if (DungChung.Ham.KTraKB(DaTaContext, _int_maBN))
            {
                frmKBVaoVien frm = new frmKBVaoVien(_int_maBN);
                frm.ShowDialog();
            }
            else
            {
                MessageBox.Show("Bạn phải nhập thông tin bệnh của BN");
                lupChanDoanKb.Focus();
            }
        }

        private void radNoiTru_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (DungChung.Bien.MaBV == "12122" && radNoiTru.SelectedIndex == 2)
            {
                btnLaySoVV.Visible = true;
                txtSoVV2.Visible = true;
                txtSoVV2.Text = string.Empty;
            }
            else
            {
                btnLaySoVV.Visible = false;
                txtSoVV2.Visible = false;
                txtSoVV2.Text = string.Empty;
            }

            TimKiem();
        }
        public class l_CTThuoc
        {
            public string tenCBth { set; get; }
            public string tendv, donvi;
            int trongbh, madv, mabn, idn;
            double soluong, dongia;
            DateTime ngay;
            public string TenDV
            {
                set { tendv = value; }
                get { return tendv; }
            }
            public int IDNhom
            {
                set { idn = value; }
                get { return idn; }
            }
            public int MaDV
            {
                set { madv = value; }
                get { return madv; }
            }
            public string DonVi
            {
                set { donvi = value; }
                get { return donvi; }
            }
            public int MaBNhan
            {
                set { mabn = value; }
                get { return mabn; }
            }
            public int TrongBH
            {
                set { trongbh = value; }
                get { return trongbh; }
            }
            public double SoLuong
            {
                set { soluong = value; }
                get { return soluong; }
            }
            public double DonGia
            {
                set { dongia = value; }
                get { return dongia; }
            }
            public DateTime NgayKe
            {
                set { ngay = value; }
                get { return ngay; }
            }
        }

        private void simpleButton21_Click(object sender, EventArgs e, double thuoc)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            int ngay = 1;
            DialogResult _result = MessageBox.Show("Hiển thị ngày thực hiện dịch vụ", "Hiển thị ngày", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
            if (_result == DialogResult.Yes)
                ngay = 0;

            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            frmIn frm = new frmIn();
            double tienthuoc = thuoc;
            List<BaoCao.repDTNoiTruHangNgay_HL01b.THDV> _LTHDV2 = new List<BaoCao.repDTNoiTruHangNgay_HL01b.THDV>();
            List<BaoCao.repDTNoiTruHangNgay_HL01b.THDV> _LTHDV3 = new List<BaoCao.repDTNoiTruHangNgay_HL01b.THDV>();
            // List<THDV> _LTHDV = new List<THDV>();

            var q2 = (from bn in data.BenhNhans
                      join dt in data.DThuocs on bn.MaBNhan equals dt.MaBNhan
                      join dtct in data.DThuoccts.Where(p => p.TrongBH == 1) on dt.IDDon equals dtct.IDDon
                      join dv in data.DichVus on dtct.MaDV equals dv.MaDV
                      join nhomdv in data.NhomDVs on dv.IDNhom equals nhomdv.IDNhom
                      where (dv.PLoai == 2)
                      //where (dt.MaKP== (DungChung.Bien.MaKP))
                      where (bn.MaBNhan == _int_maBN)
                      group new { nhomdv, dt, dtct } by new { dtct.NgayNhap, nhomdv.TenNhom, dv.TenDV, dtct.DonGia } into kq
                      select new
                      {
                          kq.Key.NgayNhap,
                          TenNhomDV = kq.Key.TenNhom.ToUpper(),
                          TenDV = kq.Key.TenDV,
                          kq.Key.DonGia,
                          SoLuongT = kq.Sum(p => p.dtct.SoLuong),
                          ThanhTienT = kq.Sum(p => p.dtct.ThanhTien)
                      }).ToList().OrderBy(p => p.TenNhomDV).ToList();
            int i = 0;
            int j = 1;
            bool _l1 = true;
            string tennhom = "";
            foreach (var a in q2)
            {
                i++;
                if (i == 1)
                    tennhom = a.TenNhomDV;
                if (i <= 10 && _l1)
                {
                    if (tennhom != a.TenNhomDV)
                    {
                        j++;
                        tennhom = a.TenNhomDV;

                    }
                    if (j <= 3)
                    {
                        BaoCao.repDTNoiTruHangNgay_HL01b.THDV moi = new BaoCao.repDTNoiTruHangNgay_HL01b.THDV();

                        moi.STT = i;
                        moi.TenDV = a.TenDV;
                        moi.SoLuong = a.SoLuongT;
                        moi.DonGia = a.DonGia;
                        moi.ThanhTien = a.ThanhTienT;
                        moi.TenNhomDV = a.TenNhomDV;
                        if (a.NgayNhap != null && a.NgayNhap.Value.Day > 0)
                            moi.ngaynhap = a.NgayNhap.ToString().Substring(0, 10);
                        _LTHDV2.Add(moi);
                    }
                    else
                    {
                        _l1 = false;
                        // i--;
                        BaoCao.repDTNoiTruHangNgay_HL01b.THDV moi = new BaoCao.repDTNoiTruHangNgay_HL01b.THDV();
                        moi.STT = i;
                        moi.TenDV = a.TenDV;
                        moi.SoLuong = a.SoLuongT;
                        moi.DonGia = a.DonGia;
                        moi.ThanhTien = a.ThanhTienT;
                        moi.TenNhomDV = a.TenNhomDV;
                        if (a.NgayNhap != null && a.NgayNhap.Value.Day > 0)
                            moi.ngaynhap = a.NgayNhap.ToString().Substring(0, 10);
                        _LTHDV3.Add(moi);
                    }


                }
                else
                {
                    BaoCao.repDTNoiTruHangNgay_HL01b.THDV moi = new BaoCao.repDTNoiTruHangNgay_HL01b.THDV();
                    moi.STT = i;
                    moi.TenDV = a.TenDV;
                    moi.SoLuong = a.SoLuongT;
                    moi.DonGia = a.DonGia;
                    moi.ThanhTien = a.ThanhTienT;
                    moi.TenNhomDV = a.TenNhomDV;
                    if (a.NgayNhap != null && a.NgayNhap.Value.Day > 0)
                        moi.ngaynhap = a.NgayNhap.ToString().Substring(0, 10);
                    _LTHDV3.Add(moi);
                }

            }
            // if(q2.Count>0)
            BaoCao.repDTNoiTruHangNgay_HL01b rep = new BaoCao.repDTNoiTruHangNgay_HL01b(_LTHDV2, _LTHDV3);
            rep.Ngay.Value = ngay;
            tienthuoc = q2.Sum(p => p.ThanhTienT) + thuoc;
            rep.TongTien.Value = tienthuoc;
            rep.TenBN.Value = txtTenBenhNhan.Text;
            //rep.DataSource = _LTHDV.ToList();
            //rep.BindingData();
            rep.CreateDocument();
            frm.prcIN.PrintingSystem = rep.PrintingSystem;
            frm.ShowDialog();

        }

        private void lupKhoXuat_EditValueChanging(object sender, DevExpress.XtraEditors.Controls.ChangingEventArgs e)
        {
            if (TTLuu == 2 || TTLuu == 1)
            {
                if (grvDonThuocct.RowCount > 0)
                {
                    if (grvDonThuocct.RowCount == 1)
                    {
                        if (grvDonThuocct.GetRowCellValue(1, colMaDVdt) != null)
                        {
                            if (lupKhoXuat.Focus())
                                MessageBox.Show("Đơn đã có thuốc, bạn không thể sửa kho kê");
                            e.Cancel = true;
                        }
                    }
                    else
                    {
                        if (lupKhoXuat.Focus())
                            MessageBox.Show("Đơn đã có thuốc, bạn không thể sửa kho kê");
                        e.Cancel = true;
                    }
                }
            }
        }

        private void btnKluu_Click(object sender, EventArgs e)
        {
            DTM.Enabled = false;
            TTLuu = 0;
            this.usDieuTri_Load(sender, e);
            if (DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24272")
            {
                colNgayNhapdb.OptionsColumn.AllowEdit = false;
            }
        }

        private void cboKieuDon_EditValueChanging(object sender, DevExpress.XtraEditors.Controls.ChangingEventArgs e)
        {
            if (TTLuu == 2 || TTLuu == 1)
            {
                if (grvDonThuocct.RowCount > 0)
                {
                    if (grvDonThuocct.RowCount == 1)
                    {
                        if (grvDonThuocct.GetRowCellValue(1, colMaDVdt) != null)
                        {
                            if (cboKieuDon.Focus())
                                MessageBox.Show("Đơn đã có thuốc, bạn không thể sửa kiểu đơn");
                            e.Cancel = true;
                        }
                    }
                    else
                    {
                        if (cboKieuDon.Focus())
                            MessageBox.Show("Đơn đã có thuốc, bạn không thể sửa kiểu đơn");
                        e.Cancel = true;
                    }
                }
            }
        }

        private void txtMaBNhan_EditValueChanged(object sender, EventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            SoTienTamUng = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            if (_int_maBN > 0)
            {
                if (DungChung.Bien.MaBV == "27023")
                {
                    var qtu = DaTaContext.TamUngs.Where(p => p.MaBNhan == _int_maBN).Where(p => p.PhanLoai == 0).Where(p => p.SoTien != null).ToList();
                    if (qtu.Count > 0)
                        SoTienTamUng = qtu.Sum(p => p.SoTien ?? 0);

                }
                DateTime ngayvao = new DateTime();
                var vaovien = DaTaContext.VaoViens.Where(p => p.MaBNhan == _int_maBN).Select(p => p.NgayVao).ToList();
                var ravien = DaTaContext.RaViens.Where(p => p.MaBNhan == _int_maBN).Select(p => p.SoNgaydt).ToList();
                if (ravien.Count > 0)
                {
                    labSoNgayDT.Text = "Tổng số ngày điều trị: " + ravien.First().Value + "ngày"; // kiểm tra lại 11/09
                }
                else
                {
                    //try
                    //{
                    if (vaovien.Count > 0)
                    {

                        ngayvao = vaovien.First().Value.Date;

                        int ngay = (System.DateTime.Now.Date - ngayvao.Date).Days;
                        if (ngay == 0)
                            labSoNgayDT.Text = "Tổng số ngày điều trị đến ngày:" + System.DateTime.Now.ToShortDateString() + ": 1 ngày";
                        else
                            labSoNgayDT.Text = "Tổng số ngày điều trị đến ngày: " + System.DateTime.Now.ToShortDateString() + ": " + (ngay).ToString() + " ngày";
                    }
                    else
                    {
                        labSoNgayDT.Text = "";
                    }
                    //}
                    //catch {
                    //    MessageBox.Show("BN chưa có ngày vào viện");
                    //}
                }

            }
        }
        #region PhieuDieuTri
        public class DienBienYHCT
        {
            public string ThucHienYL { get; set; }
            public string HuongDtri { get; set; }
            public string DienBien1 { get; set; }
            public string MaCB { get; set; }
            public string YLenh { get; set; }
            public string TenCB { get; set; }
            public DateTime NgayNhap { get; set; }
            public string NgayNhapHT { get; set; }
            public string GioNhap { get; set; }
            public bool NullIdDon { get; set; }
            public DateTime ThoiGianNhap { get; set; }

            public int Count { get; set; }
        }
        public string formatstring(string _string)
        {
            string[] _arr = _string.Split('\n');
            string kq = "";
            foreach (var item in _arr)
            {
                if (!string.IsNullOrEmpty(item))
                    kq += item + "\n";

            }
            return kq;
        }
        public bool _PhieuDieuTri_YHCT_QD1941(int _int_maBN)
        {
            try
            {
                if (_int_maBN > 0)
                {
                    DateTime tungay = DungChung.Bien.MaBV == "24012" ? detungaydb.DateTime : DungChung.Ham.NgayTu(detungaydb.DateTime);
                    DateTime Denngay = DungChung.Bien.MaBV == "24012" ? dedenngaydb.DateTime : DungChung.Ham.NgayDen(dedenngaydb.DateTime);
                    List<DienBienYHCT> _lkq = new List<DienBienYHCT>();
                    List<CanBo> _lcb = new List<CanBo>();
                    _lcb = DaTaContext.CanBoes.ToList();
                    frmIn frm = new frmIn();
                    Phieu.rep_ToDieuTri_YHCT_20001_QD1941 rep = new Phieu.rep_ToDieuTri_YHCT_20001_QD1941();
                    var dienbienT = DaTaContext.DienBiens.Where(p => p.Ploai == 0).Where(p => p.MaBNhan == _int_maBN).Where(p => p.NgayNhap >= tungay && p.NgayNhap <= Denngay).ToList();
                    var dt = (from a in DaTaContext.DThuocs.Where(p => p.MaBNhan == _int_maBN)
                              join b in DaTaContext.DThuoccts on a.IDDon equals b.IDDon
                              join c in DaTaContext.DichVus on b.MaDV equals c.MaDV
                              select new { a.IDDon, Loai = c.DongY == 1 ? 1 : 0, }).Distinct().ToList();//DienBien1 = a.Loai == 0 ? db.DienBien1 : ""
                    var dienbien1 = (from a in dt
                                     join db in DaTaContext.DienBiens.Where(p => p.Ploai == 0).Where(p => p.IDDon != null && p.IDDon >= 0).Where(p => p.MaBNhan == _int_maBN).Where(p => p.NgayNhap >= tungay && p.NgayNhap <= Denngay) on a.IDDon equals db.IDDon
                                     join cb in DaTaContext.CanBoes on db.MaCB equals cb.MaCB
                                     select new { a.Loai, db.ID, db.IDDon, db.ThucHienYL, db.HuongDTri, db.MaBNhan, DienBien1 = db.DienBien1, db.MaCB, db.YLenh, db.NgayNhap, TenCB = cb.CapBac + ": " + cb.TenCB }).OrderBy(p => p.Loai).ToList();
                    var dienbien2 = (from a in dienbien1
                                     group a by new { a.MaBNhan, NgayNhapN = a.NgayNhap.Value.Date, a.ID, a.IDDon, a.ThucHienYL, a.HuongDTri, a.DienBien1, a.MaCB, a.YLenh, a.TenCB } into kq//, a.TenCB
                                     select new { kq.Key.MaBNhan, NgayNhapN = kq.Key.NgayNhapN, kq.Key.ID, kq.Key.IDDon, kq.Key.TenCB, kq.Key.ThucHienYL, kq.Key.YLenh, kq.Key.DienBien1, kq.Key.HuongDTri, kq.Key.MaCB }).ToList();
                    var dienbien3 = (from a in dienbien2
                                     group a by new { a.MaBNhan, a.NgayNhapN, a.MaCB, a.TenCB } into kq
                                     select new DienBienYHCT
                                     {
                                         ThucHienYL = string.Join("\n", kq.Select(p => (p.ThucHienYL != "" && p.ThucHienYL != null) ? (p.ThucHienYL) : "").ToArray()),
                                         HuongDtri = string.Join("\n", kq.Select(p => (p.HuongDTri != "" && p.HuongDTri != null) ? (p.HuongDTri) : "").ToArray()),
                                         //MaBNhan = _int_maBN,
                                         DienBien1 = string.Join("\n", kq.Select(p => (p.DienBien1 != "" && p.DienBien1 != null) ? (p.DienBien1) : "").ToArray()),
                                         MaCB = kq.Key.MaCB,//string.Join("\n", kq.Select(p => (p.MaCB != "" && p.MaCB != null) ? (p.MaCB) : "").ToArray()),
                                         YLenh = string.Join("\n", kq.Select(p => (p.YLenh != "" && p.YLenh != null) ? ("\n" + p.YLenh) : "").ToArray()),
                                         NgayNhap = kq.Key.NgayNhapN,
                                         TenCB = kq.Key.TenCB//string.Join("\n", kq.Select(p => p.YLenh.Contains("Chỉ định") ? (p.TenCB) : "").ToArray()),
                                     }).OrderBy(p => p.NgayNhap).ToList();

                    var q1 = (from db in DaTaContext.DienBiens.Where(p => p.Ploai == 0).Where(p => p.MaBNhan == _int_maBN).Where(p => p.IDDon == null || p.IDDon <= 0).Where(p => p.NgayNhap >= tungay && p.NgayNhap <= Denngay)
                              join cb in DaTaContext.CanBoes on db.MaCB equals cb.MaCB
                              select new { db.ID, db.IDDon, db.ThucHienYL, db.HuongDTri, db.MaBNhan, DienBien1 = db.DienBien1, db.MaCB, db.YLenh, db.NgayNhap, TenCB = cb.CapBac + ": " + cb.TenCB }).ToList();
                    var q2 = (from a in q1
                              group a by new { a.MaBNhan, NgayNhap = a.NgayNhap.Value.Date, a.ID, a.IDDon, a.ThucHienYL, a.HuongDTri, a.DienBien1, a.MaCB, a.YLenh, a.TenCB } into kq//, a.TenCB
                              select new { kq.Key.MaBNhan, NgayNhap = kq.Key.NgayNhap, kq.Key.ID, kq.Key.IDDon, kq.Key.TenCB, kq.Key.ThucHienYL, kq.Key.YLenh, kq.Key.DienBien1, kq.Key.HuongDTri, kq.Key.MaCB }).ToList();
                    var q3 = (from a in q2
                              group a by new { a.MaBNhan, a.NgayNhap, a.MaCB, a.TenCB } into kq
                              select new DienBienYHCT
                              {
                                  ThucHienYL = string.Join("\n", kq.Select(p => (p.ThucHienYL != "" && p.ThucHienYL != null) ? (p.ThucHienYL) : "").ToArray()),
                                  HuongDtri = string.Join("\n", kq.Select(p => (p.HuongDTri != "" && p.HuongDTri != null) ? (p.HuongDTri) : "").ToArray()),
                                  //MaBNhan = _int_maBN,
                                  DienBien1 = string.Join("\n", kq.Select(p => (p.DienBien1 != "" && p.DienBien1 != null) ? (p.DienBien1) : "").ToArray()),
                                  MaCB = kq.Key.MaCB,//string.Join("\n", kq.Select(p => (p.MaCB != "" && p.MaCB != null) ? (p.MaCB) : "").ToArray()),
                                  YLenh = string.Join("\n", kq.Select(p => (p.YLenh != "" && p.YLenh != null) ? ("\n" + p.YLenh) : "").ToArray()),
                                  NgayNhap = kq.Key.NgayNhap,
                                  TenCB = kq.Key.TenCB//string.Join("\n", kq.Select(p => p.YLenh.Contains("Chỉ định") ? (p.TenCB) : "").ToArray()),
                              }).OrderBy(p => p.NgayNhap).ToList();
                    foreach (var item in q3)
                    {
                        if (item.YLenh.Contains("\n\nChỉ định thủ thuật - phẫu thuật:") && !item.YLenh.Contains("Chỉ định xét nghiệm:") && !item.YLenh.Contains("Chỉ định chẩn đoán hình ảnh:"))
                        {
                            item.YLenh = item.YLenh.Replace("\n\nChỉ định thủ thuật - phẫu thuật:", "");// "Chỉ định thủ thuật - phẫu thuật:" + 
                        }
                        if (item.YLenh.Contains("\n\nChỉ định xét nghiệm:") && !item.YLenh.Contains("Chỉ định thủ thuật - phẫu thuật:") && !item.YLenh.Contains("Chỉ định chẩn đoán hình ảnh:"))
                        {
                            item.YLenh = item.YLenh.Replace("\n\nChỉ định xét nghiệm:", "");// "Chỉ định xét nghiệm:" +
                        }
                        if (item.YLenh.Contains("\n\nChỉ định chẩn đoán hình ảnh:") && !item.YLenh.Contains("Chỉ định thủ thuật - phẫu thuật:") && !item.YLenh.Contains("Chỉ định xét nghiệm:"))
                        {
                            item.YLenh = item.YLenh.Replace("\n\nChỉ định chẩn đoán hình ảnh:", "");//"Chỉ định chẩn đoán hình ảnh:" + 
                        }
                    }
                    _lkq.AddRange(dienbien3);
                    _lkq.AddRange(q3);
                    var q5 = (from a in _lkq
                              group a by new { NgayNhap = a.NgayNhap.Date, a.ThucHienYL, a.DienBien1, a.MaCB, a.YLenh, a.TenCB, a.HuongDtri } into kq//, a.TenCB
                              select new { NgayNhap = kq.Key.NgayNhap, kq.Key.TenCB, kq.Key.ThucHienYL, kq.Key.YLenh, kq.Key.DienBien1, kq.Key.HuongDtri, kq.Key.MaCB }).ToList();
                    var q4 = (from a in q5
                              group a by new { a.TenCB, a.MaCB, a.NgayNhap } into kq
                              select new DienBienYHCT
                              {
                                  ThucHienYL = string.Join("\n", kq.Select(p => (p.ThucHienYL != "" && p.ThucHienYL != null) ? (p.ThucHienYL) : "").ToArray()),
                                  HuongDtri = string.Join("\n", kq.Select(p => (p.HuongDtri != "" && p.HuongDtri != null) ? (p.HuongDtri) : "").ToArray()),
                                  //MaBNhan = _int_maBN,
                                  DienBien1 = string.Join("\n", kq.Select(p => (p.DienBien1 != "" && p.DienBien1 != null) ? (p.DienBien1) : "").ToArray()),
                                  MaCB = kq.Key.MaCB,//string.Join("\n", kq.Select(p => (p.MaCB != "" && p.MaCB != null) ? (p.MaCB) : "").ToArray()),
                                  YLenh = string.Join("\n", kq.Select(p => (p.YLenh != "" && p.YLenh != null) ? ("\n" + p.YLenh) : "").ToArray()),
                                  NgayNhap = kq.Key.NgayNhap,
                                  TenCB = kq.Key.TenCB//string.Join("\n", kq.Select(p => p.YLenh.Contains("Chỉ định") ? (p.TenCB) : "").ToArray()),
                              }).ToList();
                    foreach (var item in q4)
                    {
                        DateTime tungay1 = DungChung.Ham.NgayTu(item.NgayNhap);
                        DateTime Denngay1 = DungChung.Ham.NgayDen(item.NgayNhap);
                        var dsngay = dienbienT.Where(p => p.NgayNhap >= tungay1 && p.NgayNhap <= Denngay1).OrderByDescending(p => p.NgayNhap).ToList();
                        if (dsngay.Count > 0)
                        {
                            item.NgayNhapHT = dsngay.First().NgayNhap.Value.ToString("dd/MM/yyyy HH:mm");
                        }
                        if (item.YLenh.Contains("\n"))
                            item.YLenh = formatstring(item.YLenh);
                        if (!string.IsNullOrEmpty(item.HuongDtri))
                        {
                            item.YLenh += "Chế độ dinh dưỡng, chăm sóc:\n" + item.HuongDtri;
                        }

                        if (DungChung.Bien.MaBV == "24297")
                        {
                            item.YLenh += Environment.NewLine + Environment.NewLine + Environment.NewLine;
                            item.DienBien1 += Environment.NewLine + Environment.NewLine + Environment.NewLine;
                        }
                    }

                    var ttbn = (from bn in DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN)
                                join bnkb in DaTaContext.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                                join kp in DaTaContext.KPhongs on bnkb.MaKP equals kp.MaKP
                                select new { bn.TenBNhan, bn.Tuoi, bn.GTinh, kp.TenKP, bnkb.ChanDoanYHCT, bnkb.BenhKhacYHCT, bnkb.Buong, bnkb.Giuong, bnkb.ChanDoan, bnkb.BenhKhac, bnkb.IDKB, bnkb.MaICD2, bnkb.MaICD }).OrderByDescending(p => p.IDKB).ToList();
                    if (ttbn.Count > 0)
                    {
                        rep.TenBNhan.Value = ttbn.First().TenBNhan.ToUpper();
                        rep.Tuoi.Value = DungChung.Bien.MaBV == "24012" ? DungChung.Ham.TuoitheoThang(DaTaContext, _int_maBN, DungChung.Bien.formatAge_24012) : ttbn.First().Tuoi.ToString();
                        int gt = -1;
                        gt = ttbn.First().GTinh.Value;
                        if (gt == 0)
                            rep.GioiTinh.Value = "Nữ";
                        else
                            rep.GioiTinh.Value = "Nam";
                        rep.KhoaDT.Value = ttbn.First().TenKP.ToUpper();

                        var icd = DaTaContext.ICD10.Where(o => true).ToList();

                        rep.ChanDoan.Value = DungChung.Ham.GhepChuoiChanDoanYHCT(icd, ttbn.First().MaICD, ttbn.First().MaICD2);
                        if (!string.IsNullOrEmpty(ttbn.First().Buong))
                            rep.Buong.Value = "Buồng: " + ttbn.First().Buong;
                        else
                            rep.Buong.Value = "Buồng:........";
                        if (!string.IsNullOrEmpty(ttbn.First().Giuong))
                            rep.Giuong.Value = "Giường: " + ttbn.First().Giuong;
                        else
                            rep.Giuong.Value = "Giường:........";
                    }
                    var ktvv = DaTaContext.VaoViens.Where(p => p.MaBNhan == _int_maBN).ToList();
                    if (ktvv.Count > 0)
                        rep.SoVV.Value = "Số vào viện: " + ktvv.First().SoVV;
                    else
                        rep.SoVV.Value = "Số vào viện: ..........";
                    // if (dienbien.Count > 0)
                    rep.DataSource = q4.OrderBy(p => p.NgayNhap).ToList();
                    rep.BindingData();
                    rep.CreateDocument();
                    frm.prcIN.PrintingSystem = rep.PrintingSystem;
                    frm.ShowDialog();
                    return true;


                }
                else
                {
                    MessageBox.Show("Bạn chưa chọn BN");
                    return false;
                }
            }
            catch (Exception ex)
            {

                MessageBox.Show("lỗi: " + ex.Message);
                return false;
            }
        }

        public bool _PhieuDieuTri_Gop_BoSung(int _int_maBN, List<QLBV.FormNhap.frm_usDieuTri_NhapNgayDieuTri.ThoiGianDieuTri> _thoigianDT)
        {
            try
            {
                if (_int_maBN > 0)
                {
                    List<DienBienYHCT> dienbienTH = new List<DienBienYHCT>();
                    List<CanBo> _lcb = new List<CanBo>();
                    _lcb = DaTaContext.CanBoes.ToList();
                    frmIn frm = new frmIn();
                    Phieu.rep_ToDieuTri_20001 rep = new Phieu.rep_ToDieuTri_20001();
                    foreach (var tg in _thoigianDT)
                    {
                        DateTime tungay = tg.TimeFrom.Value;
                        DateTime Denngay = tg.TimeTo.Value;

                        List<DienBienYHCT> _lkq = new List<DienBienYHCT>();

                        var dienbienT = DaTaContext.DienBiens.Where(p => p.Ploai == 0).Where(p => p.MaBNhan == _int_maBN).Where(p => p.NgayNhap >= tungay && p.NgayNhap <= Denngay).ToList();
                        var dt = (from a in DaTaContext.DThuocs.Where(p => p.MaBNhan == _int_maBN)
                                  join b in DaTaContext.DThuoccts on a.IDDon equals b.IDDon
                                  join c in DaTaContext.DichVus on b.MaDV equals c.MaDV
                                  select new { a.IDDon, a.IDDienBien, Loai = c.DongY == 1 ? 1 : 0, }).Distinct().ToList();//DienBien1 = a.Loai == 0 ? db.DienBien1 : ""
                        var dienbien1 = (from a in dt.Where(p => p.IDDienBien != null && p.IDDienBien > 0)
                                         join db in DaTaContext.DienBiens.Where(p => p.Ploai == 0).Where(p => p.MaBNhan == _int_maBN).Where(p => p.NgayNhap >= tungay && p.NgayNhap <= Denngay) on a.IDDienBien equals db.ID
                                         join cb in DaTaContext.CanBoes on db.MaCB equals cb.MaCB
                                         select new { a.Loai, db.ID, db.IDDon, db.ThucHienYL, db.HuongDTri, db.MaBNhan, DienBien1 = db.DienBien1, db.MaCB, db.YLenh, db.NgayNhap, TenCB = cb.CapBac + "." + cb.TenCB }).OrderBy(p => p.Loai).ToList();
                        var dienbien2 = (from a in dienbien1
                                         group a by new { a.MaBNhan, NgayNhapN = a.NgayNhap.Value, a.ID, a.IDDon, a.ThucHienYL, a.HuongDTri, a.DienBien1, a.MaCB, a.YLenh, a.TenCB } into kq//, a.TenCB
                                         select new { kq.Key.MaBNhan, NgayNhapN = kq.Key.NgayNhapN, kq.Key.ID, kq.Key.IDDon, kq.Key.TenCB, kq.Key.ThucHienYL, kq.Key.YLenh, kq.Key.DienBien1, kq.Key.HuongDTri, kq.Key.MaCB }).ToList();
                        var dienbien3 = (from a in dienbien2
                                         group a by new { a.MaBNhan, a.NgayNhapN, a.MaCB, a.TenCB } into kq
                                         select new DienBienYHCT
                                         {
                                             ThucHienYL = string.Join("\n", kq.Select(p => (p.ThucHienYL != "" && p.ThucHienYL != null) ? (p.ThucHienYL) : "").ToArray()),
                                             HuongDtri = string.Join("\n", kq.Select(p => (p.HuongDTri != "" && p.HuongDTri != null) ? (p.HuongDTri) : "").ToArray()),
                                             DienBien1 = string.Join("\n", kq.Select(p => (p.DienBien1 != "" && p.DienBien1 != null) ? (p.DienBien1) : "").ToArray()),
                                             MaCB = kq.Key.MaCB,//string.Join("\n", kq.Select(p => (p.MaCB != "" && p.MaCB != null) ? (p.MaCB) : "").ToArray()),
                                             YLenh = string.Join("\n", kq.Select(p => (p.YLenh != "" && p.YLenh != null) ? ("\n" + p.YLenh) : "").ToArray()),
                                             NgayNhap = kq.Key.NgayNhapN,
                                             TenCB = kq.Key.TenCB//string.Join("\n", kq.Select(p => p.YLenh.Contains("Chỉ định") ? (p.TenCB) : "").ToArray()),
                                         }).OrderBy(p => p.NgayNhap).ToList();

                        List<int> liddb = dienbien1.Select(p => p.ID).Distinct().ToList();
                        var q1 = (from db in DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.Ploai == 0).Where(p => p.NgayNhap >= tungay && p.NgayNhap <= Denngay).Where(p => liddb.Count == 0 || !liddb.Contains(p.ID))
                                  join cb in DaTaContext.CanBoes on db.MaCB equals cb.MaCB
                                  select new { db.ID, db.IDDon, db.ThucHienYL, db.HuongDTri, db.MaBNhan, DienBien1 = db.DienBien1, db.MaCB, db.YLenh, db.NgayNhap, TenCB = cb.CapBac + "." + cb.TenCB }).ToList();
                        var q2 = (from a in q1
                                  group a by new { a.MaBNhan, NgayNhap = a.NgayNhap.Value, a.ID, a.IDDon, a.ThucHienYL, a.HuongDTri, a.DienBien1, a.MaCB, a.YLenh, a.TenCB } into kq//, a.TenCB
                                  select new { kq.Key.MaBNhan, NgayNhap = kq.Key.NgayNhap, kq.Key.ID, kq.Key.IDDon, kq.Key.TenCB, kq.Key.ThucHienYL, kq.Key.YLenh, kq.Key.DienBien1, kq.Key.HuongDTri, kq.Key.MaCB }).ToList();


                        var q3 = (from a in q2
                                  group a by new { a.MaBNhan, a.NgayNhap, a.MaCB, a.TenCB } into kq
                                  select new DienBienYHCT
                                  {
                                      ThucHienYL = string.Join("\n", kq.Select(p => (p.ThucHienYL != "" && p.ThucHienYL != null) ? (p.ThucHienYL) : "").ToArray()),
                                      HuongDtri = string.Join("\n", kq.Select(p => (p.HuongDTri != "" && p.HuongDTri != null) ? (p.HuongDTri) : "").ToArray()),
                                      //MaBNhan = _int_maBN,
                                      DienBien1 = string.Join("\n", kq.Select(p => (p.DienBien1 != "" && p.DienBien1 != null) ? (p.DienBien1) : "").ToArray()),
                                      MaCB = kq.Key.MaCB,//string.Join("\n", kq.Select(p => (p.MaCB != "" && p.MaCB != null) ? (p.MaCB) : "").ToArray()),
                                      YLenh = string.Join("\n", kq.Select(p => (p.YLenh != "" && p.YLenh != null) ? ("\n" + p.YLenh) : "").ToArray()),
                                      NgayNhap = kq.Key.NgayNhap,
                                      TenCB = kq.Key.TenCB//string.Join("\n", kq.Select(p => p.YLenh.Contains("Chỉ định") ? (p.TenCB) : "").ToArray()),
                                  }).OrderBy(p => p.NgayNhap).ToList();

                        _lkq.AddRange(dienbien3);
                        _lkq.AddRange(q3);
                        var q5 = (from a in _lkq
                                  group a by new { NgayNhap = a.NgayNhap.Date, ThoiGianNhap = a.NgayNhap, a.ThucHienYL, a.DienBien1, a.MaCB, a.YLenh, a.TenCB, a.HuongDtri } into kq//, a.TenCB
                                  select new { NgayNhap = kq.Key.NgayNhap, kq.Key.TenCB, kq.Key.ThucHienYL, kq.Key.YLenh, kq.Key.DienBien1, kq.Key.HuongDtri, kq.Key.MaCB, kq.Key.ThoiGianNhap }).ToList();
                        var q4 = (from a in q5
                                  group a by new { a.TenCB, a.MaCB, a.NgayNhap, a.ThoiGianNhap } into kq
                                  select new DienBienYHCT
                                  {
                                      ThucHienYL = string.Join("\n", kq.Select(p => (p.ThucHienYL != "" && p.ThucHienYL != null) ? (p.ThucHienYL) : "").ToArray()),
                                      HuongDtri = string.Join("\n", kq.Select(p => (p.HuongDtri != "" && p.HuongDtri != null) ? (p.HuongDtri) : "").ToArray()),
                                      //MaBNhan = _int_maBN,
                                      DienBien1 = string.Join("\n", kq.Select(p => (p.DienBien1 != "" && p.DienBien1 != null) ? (p.DienBien1) : "").ToArray()),
                                      MaCB = kq.Key.MaCB,//string.Join("\n", kq.Select(p => (p.MaCB != "" && p.MaCB != null) ? (p.MaCB) : "").ToArray()),
                                      YLenh = string.Join("\n", kq.Select(p => (p.YLenh != "" && p.YLenh != null) ? ("\n" + p.YLenh) : "").ToArray()),
                                      NgayNhap = kq.Key.NgayNhap,
                                      ThoiGianNhap = kq.Key.ThoiGianNhap,
                                      TenCB = kq.Key.TenCB//string.Join("\n", kq.Select(p => p.YLenh.Contains("Chỉ định") ? (p.TenCB) : "").ToArray()),
                                  }).ToList();

                        var qcount = (from c in q4 group c by c.NgayNhap into kq1 select new { NgayNhap = kq1.Key, Count = kq1.Count() }).ToList();
                        foreach (var item in q4)
                        {
                            DateTime tungay1 = DungChung.Ham.NgayTu(item.NgayNhap);
                            DateTime Denngay1 = DungChung.Ham.NgayDen(item.NgayNhap);
                            var dsngay = dienbienT.Where(p => p.NgayNhap >= tungay1 && p.NgayNhap <= Denngay1).OrderByDescending(p => p.NgayNhap).ToList();

                            if (dsngay.Count > 0)
                            {
                                if (cboInToDieuTri.SelectedIndex == 5)
                                {
                                    item.NgayNhapHT = dsngay.First().NgayNhap.Value.ToString("dd/MM/yyyy HH:mm");
                                }
                                else
                                    item.NgayNhapHT = dsngay.First().NgayNhap.Value.ToString("dd/MM/yyyy HH:mm");
                            }
                            if (item.YLenh.Contains("\n"))
                                item.YLenh = formatstring(item.YLenh);
                            if (!string.IsNullOrEmpty(item.HuongDtri))
                            {
                                item.YLenh += item.HuongDtri;
                            }
                            //item.YLenh += Environment.NewLine + "Bác sĩ điều trị: " + item.TenCB;
                            item.YLenh = item.YLenh.Replace(Environment.NewLine, "<br />");
                            item.Count = qcount.Single(p => p.NgayNhap == item.NgayNhap).Count;
                        }
                        dienbienTH.AddRange(q4);
                    }
                    var ttbn = (from bn in DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN)
                                join bnkb in DaTaContext.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                                join kp in DaTaContext.KPhongs on bnkb.MaKP equals kp.MaKP
                                select new { bn.TenBNhan, bn.Tuoi, bn.GTinh, bn.DChi, bnkb.ChanDoanYHCT, bnkb.BenhKhacYHCT, bnkb.BenhKhac, kp.TenKP, bnkb.Buong, bnkb.Giuong, bnkb.ChanDoan, bnkb.IDKB, bnkb.MaICD, bnkb.MaICD2 }).OrderByDescending(p => p.IDKB).ToList();
                    if (ttbn.Count > 0)
                    {
                        rep.TenBNhan.Value = ttbn.First().TenBNhan.ToUpper();
                        rep.Tuoi.Value = ttbn.First().Tuoi;
                        rep.MaBN.Value = _int_maBN.ToString("D10");
                        rep.DChi.Value = ttbn.First().DChi;
                        int gt = -1;
                        gt = ttbn.First().GTinh.Value;
                        if (gt == 0)
                            rep.GioiTinh.Value = "Nữ";
                        else
                            rep.GioiTinh.Value = "Nam";
                        rep.KhoaDT.Value = ttbn.First().TenKP.ToUpper();
                        var icd = DaTaContext.ICD10.Where(o => true).ToList();

                        rep.ChanDoan.Value = DungChung.Ham.GhepChuoiChanDoanYHCT(icd, ttbn.First().MaICD, ttbn.First().MaICD2);
                        rep.BenhKhac.Value = DungChung.Ham.FreshString(ttbn.First().BenhKhac);
                        if (!string.IsNullOrEmpty(ttbn.First().Buong))
                            rep.Buong.Value = "Buồng: " + ttbn.First().Buong;
                        else
                            rep.Buong.Value = "Buồng:........";
                        if (!string.IsNullOrEmpty(ttbn.First().Giuong))
                            rep.Giuong.Value = "Giường: " + ttbn.First().Giuong;
                        else
                            rep.Giuong.Value = "Giường:........";
                    }
                    var ktvv = DaTaContext.VaoViens.Where(p => p.MaBNhan == _int_maBN).ToList();
                    if (ktvv.Count > 0)
                        rep.SoVV.Value = "Số vào viện: " + ktvv.First().SoVV;
                    else
                        rep.SoVV.Value = "Số vào viện: ..........";

                    if (cboInToDieuTri.SelectedIndex == 4)
                        rep.isDTBS = true;
                    // if (dienbien.Count > 0)
                    rep.DataSource = dienbienTH.OrderBy(p => p.NgayNhap).ToList();
                    rep.BindingData();
                    rep.CreateDocument();
                    frm.prcIN.PrintingSystem = rep.PrintingSystem;
                    frm.ShowDialog();
                }
                else
                {
                    MessageBox.Show("Bạn chưa chọn BN");
                    return false;
                }
                return true;
            }
            catch (Exception ex)
            {
                DungChung.WriteLog.Warn(ex);
                return false;
            }
        }

        #region Tờ điều trị ra viện
        //public bool _PhieuDieutri_Ravien(int _int_mabn,List<QLBV.FormNhap.frm_usDieuTri_NhapNgayDieuTri> _thoigianDT)
        //{


        //}
        #endregion

        public bool _PhieuDieuTri_YHCT_QD1941_Gop(int _int_maBN, List<QLBV.FormNhap.frm_usDieuTri_NhapNgayDieuTri.ThoiGianDieuTri> _thoigianDT)
        {
            try
            {
                if (_int_maBN > 0)
                {
                    List<CanBo> _lcb = new List<CanBo>();
                    List<DienBienYHCT> dbien = new List<DienBienYHCT>();
                    _lcb = DaTaContext.CanBoes.ToList();
                    frmIn frm = new frmIn();
                    Phieu.rep_ToDieuTri_YHCT_20001_QD1941 rep = new Phieu.rep_ToDieuTri_YHCT_20001_QD1941();
                    foreach (var tg in _thoigianDT)
                    {
                        DateTime tungay = DungChung.Ham.NgayTu(tg.TimeFrom ?? new DateTime());
                        DateTime Denngay = DungChung.Ham.NgayDen(tg.TimeTo ?? new DateTime());
                        List<DienBienYHCT> _lkq = new List<DienBienYHCT>();

                        var dienbienT = DaTaContext.DienBiens.Where(p => p.Ploai == 0).Where(p => p.MaBNhan == _int_maBN).Where(p => p.NgayNhap >= tungay && p.NgayNhap <= Denngay).ToList();
                        var dienbien1 = (from db in DaTaContext.DienBiens.Where(p => p.Ploai == 0).Where(p => p.MaBNhan == _int_maBN).Where(p => p.NgayNhap >= tungay && p.NgayNhap <= Denngay)
                                         join cb in DaTaContext.CanBoes on db.MaCB equals cb.MaCB
                                         select new { db.ID, db.IDDon, db.ThucHienYL, db.HuongDTri, db.MaBNhan, DienBien1 = db.DienBien1, db.MaCB, db.YLenh, db.NgayNhap, TenCB = cb.CapBac + ": " + cb.TenCB }).ToList();
                        var dienbien2 = (from a in dienbien1
                                         group a by new { NgayNhapN = a.NgayNhap.Value.Date } into kq//, a.TenCB
                                         select new DienBienYHCT
                                         {
                                             NgayNhap = kq.FirstOrDefault(o => o.NgayNhap == kq.Min(p => p.NgayNhap)).NgayNhap ?? new DateTime(),
                                             TenCB = kq.FirstOrDefault(o => o.NgayNhap == kq.Min(p => p.NgayNhap)).TenCB,
                                             ThucHienYL = kq.FirstOrDefault(o => o.NgayNhap == kq.Min(p => p.NgayNhap)).ThucHienYL,
                                             YLenh = kq.FirstOrDefault(o => o.NgayNhap == kq.Min(p => p.NgayNhap)).YLenh,
                                             DienBien1 = kq.FirstOrDefault(o => o.NgayNhap == kq.Min(p => p.NgayNhap)).DienBien1,
                                             HuongDtri = kq.FirstOrDefault(o => o.NgayNhap == kq.Min(p => p.NgayNhap)).HuongDTri,
                                             MaCB = kq.FirstOrDefault(o => o.NgayNhap == kq.Min(p => p.NgayNhap)).MaCB,
                                             NullIdDon = kq.FirstOrDefault(o => o.NgayNhap == kq.Min(p => p.NgayNhap)).IDDon == null ? true : false
                                         }).OrderBy(o => o.NgayNhap).ToList();

                        foreach (var item in dienbien2)
                        {
                            item.ThucHienYL = string.Join("\n", item.ThucHienYL);
                            item.HuongDtri = string.Join("\n", item.HuongDtri);
                            //MaBNhan = _int_maBN,
                            item.DienBien1 = string.Join("\n", item.DienBien1);
                            item.MaCB = item.MaCB;//string.Join("\n", kq.Select(p => (p.MaCB != "" && p.MaCB != null) ? (p.MaCB) : "").ToArray()),
                            item.YLenh = string.Join("\n", item.YLenh);
                            item.NgayNhap = item.NgayNhap;
                            item.TenCB = item.TenCB;//string.Join("\n", kq.Select(p => p.YLenh.Contains("Chỉ định") ? (p.TenCB) : "").ToArray()),
                            if (item.NullIdDon)
                            {
                                if (item.YLenh.Contains("\n\nChỉ định thủ thuật - phẫu thuật:") && !item.YLenh.Contains("Chỉ định xét nghiệm:") && !item.YLenh.Contains("Chỉ định chẩn đoán hình ảnh:"))
                                {
                                    item.YLenh = item.YLenh.Replace("\n\nChỉ định thủ thuật - phẫu thuật:", "");// "Chỉ định thủ thuật - phẫu thuật:" + 
                                }
                                if (item.YLenh.Contains("\n\nChỉ định xét nghiệm:") && !item.YLenh.Contains("Chỉ định thủ thuật - phẫu thuật:") && !item.YLenh.Contains("Chỉ định chẩn đoán hình ảnh:"))
                                {
                                    item.YLenh = item.YLenh.Replace("\n\nChỉ định xét nghiệm:", "");// "Chỉ định xét nghiệm:" +
                                }
                                if (item.YLenh.Contains("\n\nChỉ định chẩn đoán hình ảnh:") && !item.YLenh.Contains("Chỉ định thủ thuật - phẫu thuật:") && !item.YLenh.Contains("Chỉ định xét nghiệm:"))
                                {
                                    item.YLenh = item.YLenh.Replace("\n\nChỉ định chẩn đoán hình ảnh:", "");//"Chỉ định chẩn đoán hình ảnh:" + 
                                }
                            }
                        }
                        _lkq.AddRange(dienbien2);

                        if (_lkq != null && _lkq.Count > 0)
                        {
                            var data = _lkq.First();
                            var ngayNhap = "";
                            foreach (var item in _lkq)
                            {
                                item.NgayNhapHT = item.NgayNhap.ToString("dd/MM/yyyy");
                                ngayNhap += item.NgayNhapHT + "\n";
                                item.GioNhap = item.NgayNhap.ToString("HH:mm") + "\n";
                                if (item.YLenh.Contains("\n"))
                                    item.YLenh = formatstring(item.YLenh);
                                if (!string.IsNullOrEmpty(item.HuongDtri))
                                {
                                    item.YLenh += "Chế độ dinh dưỡng, chăm sóc:\n" + item.HuongDtri;
                                }

                            }
                            if (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                            {
                                data.NgayNhapHT = data.GioNhap + ngayNhap;
                            }
                            else data.NgayNhapHT = ngayNhap + data.GioNhap;

                            dbien.Add(data);
                        }
                    }

                    var ttbn = (from bn in DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN)
                                join bnkb in DaTaContext.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                                join kp in DaTaContext.KPhongs on bnkb.MaKP equals kp.MaKP
                                select new { bn.TenBNhan, bn.Tuoi, bn.GTinh, kp.TenKP, bnkb.ChanDoanYHCT, bnkb.BenhKhacYHCT, bnkb.Buong, bnkb.Giuong, bnkb.ChanDoan, bnkb.BenhKhac, bnkb.IDKB, bnkb.MaICD, bnkb.MaICD2 }).OrderByDescending(p => p.IDKB).ToList();
                    if (ttbn.Count > 0)
                    {
                        rep.TenBNhan.Value = ttbn.First().TenBNhan.ToUpper();
                        rep.Tuoi.Value = ttbn.First().Tuoi;
                        int gt = -1;
                        gt = ttbn.First().GTinh.Value;
                        if (gt == 0)
                            rep.GioiTinh.Value = "Nữ";
                        else
                            rep.GioiTinh.Value = "Nam";
                        rep.KhoaDT.Value = ttbn.First().TenKP.ToUpper();
                        var icd = DaTaContext.ICD10.Where(o => true).ToList();
                        rep.ChanDoan.Value = DungChung.Ham.GhepChuoiChanDoanYHCT(icd, ttbn.First().MaICD, ttbn.First().MaICD2); //DungChung.Ham.FreshString(ttbn.First().ChanDoanYHCT + ";" + ttbn.First().BenhKhacYHCT) + "[" + DungChung.Ham.FreshString(ttbn.First().ChanDoan + ";" + ttbn.First().BenhKhac) + "]";
                        if (!string.IsNullOrEmpty(ttbn.First().Buong))
                            rep.Buong.Value = "Buồng: " + ttbn.First().Buong;
                        else
                            rep.Buong.Value = "Buồng:........";
                        if (!string.IsNullOrEmpty(ttbn.First().Giuong))
                            rep.Giuong.Value = "Giường: " + ttbn.First().Giuong;
                        else
                            rep.Giuong.Value = "Giường:........";
                    }
                    var ktvv = DaTaContext.VaoViens.Where(p => p.MaBNhan == _int_maBN).ToList();
                    if (ktvv.Count > 0)
                        rep.SoVV.Value = "Số vào viện: " + ktvv.First().SoVV;
                    else
                        rep.SoVV.Value = "Số vào viện: ..........";
                    // if (dienbien.Count > 0)
                    rep.DataSource = dbien;
                    rep.BindingData();
                    rep.CreateDocument();
                    frm.prcIN.PrintingSystem = rep.PrintingSystem;
                    frm.ShowDialog();
                    return true;

                }
                else
                {
                    MessageBox.Show("Bạn chưa chọn BN");
                    return false;
                }
            }
            catch (Exception ex)
            {

                MessageBox.Show("lỗi: " + ex.Message);
                return false;
            }
        }
        public bool _PhieuDieuTri_YHCT(int _int_maBN)
        {
            try
            {
                if (_int_maBN > 0)
                {
                    DateTime tungay = DungChung.Bien.MaBV == "24012" ? detungaydb.DateTime : DungChung.Ham.NgayTu(detungaydb.DateTime);
                    DateTime Denngay = DungChung.Bien.MaBV == "24012" ? dedenngaydb.DateTime : DungChung.Ham.NgayDen(dedenngaydb.DateTime);
                    if (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                    {
                        List<DienBienYHCT> _lkq = new List<DienBienYHCT>();
                        List<CanBo> _lcb = new List<CanBo>();
                        _lcb = DaTaContext.CanBoes.ToList();
                        frmIn frm = new frmIn();
                        Phieu.rep_ToDieuTri_YHCT_20001 rep = new Phieu.rep_ToDieuTri_YHCT_20001();
                        var dienbienT = DaTaContext.DienBiens.Where(p => p.Ploai == 0).Where(p => p.MaBNhan == _int_maBN).Where(p => p.NgayNhap >= tungay && p.NgayNhap <= Denngay).ToList();
                        var dt = (from a in DaTaContext.DThuocs.Where(p => p.MaBNhan == _int_maBN)
                                  join b in DaTaContext.DThuoccts on a.IDDon equals b.IDDon
                                  join c in DaTaContext.DichVus on b.MaDV equals c.MaDV
                                  select new { a.IDDon, Loai = c.DongY == 1 ? 1 : 0, }).Distinct().ToList();//DienBien1 = a.Loai == 0 ? db.DienBien1 : ""
                        var dienbien1 = (from a in dt
                                         join db in DaTaContext.DienBiens.Where(p => p.Ploai == 0).Where(p => p.IDDon != null && p.IDDon >= 0).Where(p => p.MaBNhan == _int_maBN).Where(p => p.NgayNhap >= tungay && p.NgayNhap <= Denngay) on a.IDDon equals db.IDDon
                                         join cb in DaTaContext.CanBoes on db.MaCB equals cb.MaCB
                                         select new { a.Loai, db.ID, db.IDDon, db.ThucHienYL, db.HuongDTri, db.MaBNhan, DienBien1 = db.DienBien1, db.MaCB, db.YLenh, db.NgayNhap, TenCB = cb.CapBac + ": " + cb.TenCB }).OrderBy(p => p.Loai).ToList();
                        var dienbien2 = (from a in dienbien1
                                         group a by new { a.MaBNhan, NgayNhapN = a.NgayNhap.Value.Date, a.ID, a.IDDon, a.ThucHienYL, a.HuongDTri, a.DienBien1, a.MaCB, a.YLenh, a.TenCB } into kq//, a.TenCB
                                         select new { kq.Key.MaBNhan, NgayNhapN = kq.Key.NgayNhapN, kq.Key.ID, kq.Key.IDDon, kq.Key.TenCB, kq.Key.ThucHienYL, kq.Key.YLenh, kq.Key.DienBien1, kq.Key.HuongDTri, kq.Key.MaCB }).ToList();
                        var dienbien3 = (from a in dienbien2
                                         group a by new { a.MaBNhan, a.NgayNhapN, a.MaCB, a.TenCB } into kq
                                         select new DienBienYHCT
                                         {
                                             ThucHienYL = string.Join("\n", kq.Select(p => (p.ThucHienYL != "" && p.ThucHienYL != null) ? (p.ThucHienYL) : "").ToArray()),
                                             HuongDtri = string.Join("\n", kq.Select(p => (p.HuongDTri != "" && p.HuongDTri != null) ? (p.HuongDTri) : "").ToArray()),
                                             //MaBNhan = _int_maBN,
                                             DienBien1 = string.Join("\n", kq.Select(p => (p.DienBien1 != "" && p.DienBien1 != null) ? (p.DienBien1) : "").ToArray()),
                                             MaCB = kq.Key.MaCB,//string.Join("\n", kq.Select(p => (p.MaCB != "" && p.MaCB != null) ? (p.MaCB) : "").ToArray()),
                                             YLenh = string.Join("\n", kq.Select(p => (p.YLenh != "" && p.YLenh != null) ? ("\n" + p.YLenh) : "").ToArray()),
                                             NgayNhap = kq.Key.NgayNhapN,
                                             TenCB = kq.Key.TenCB//string.Join("\n", kq.Select(p => p.YLenh.Contains("Chỉ định") ? (p.TenCB) : "").ToArray()),
                                         }).OrderBy(p => p.NgayNhap).ToList();

                        var q1 = (from db in DaTaContext.DienBiens.Where(p => p.Ploai == 0).Where(p => p.MaBNhan == _int_maBN).Where(p => p.IDDon == null || p.IDDon <= 0).Where(p => p.NgayNhap >= tungay && p.NgayNhap <= Denngay)
                                  join cb in DaTaContext.CanBoes on db.MaCB equals cb.MaCB
                                  select new { db.ID, db.IDDon, db.ThucHienYL, db.HuongDTri, db.MaBNhan, DienBien1 = db.DienBien1, db.MaCB, db.YLenh, db.NgayNhap, TenCB = cb.CapBac + ": " + cb.TenCB }).ToList();
                        var q2 = (from a in q1
                                  group a by new { a.MaBNhan, NgayNhap = a.NgayNhap.Value.Date, a.ID, a.IDDon, a.ThucHienYL, a.HuongDTri, a.DienBien1, a.MaCB, a.YLenh, a.TenCB } into kq//, a.TenCB
                                  select new { kq.Key.MaBNhan, NgayNhap = kq.Key.NgayNhap, kq.Key.ID, kq.Key.IDDon, kq.Key.TenCB, kq.Key.ThucHienYL, kq.Key.YLenh, kq.Key.DienBien1, kq.Key.HuongDTri, kq.Key.MaCB }).ToList();
                        var q3 = (from a in q2
                                  group a by new { a.MaBNhan, a.NgayNhap, a.MaCB, a.TenCB } into kq
                                  select new DienBienYHCT
                                  {
                                      ThucHienYL = string.Join("\n", kq.Select(p => (p.ThucHienYL != "" && p.ThucHienYL != null) ? (p.ThucHienYL) : "").ToArray()),
                                      HuongDtri = string.Join("\n", kq.Select(p => (p.HuongDTri != "" && p.HuongDTri != null) ? (p.HuongDTri) : "").ToArray()),
                                      //MaBNhan = _int_maBN,
                                      DienBien1 = string.Join("\n", kq.Select(p => (p.DienBien1 != "" && p.DienBien1 != null) ? (p.DienBien1) : "").ToArray()),
                                      MaCB = kq.Key.MaCB,//string.Join("\n", kq.Select(p => (p.MaCB != "" && p.MaCB != null) ? (p.MaCB) : "").ToArray()),
                                      YLenh = string.Join("\n", kq.Select(p => (p.YLenh != "" && p.YLenh != null) ? ("\n" + p.YLenh) : "").ToArray()),
                                      NgayNhap = kq.Key.NgayNhap,
                                      TenCB = kq.Key.TenCB//string.Join("\n", kq.Select(p => p.YLenh.Contains("Chỉ định") ? (p.TenCB) : "").ToArray()),
                                  }).OrderBy(p => p.NgayNhap).ToList();
                        foreach (var item in q3)
                        {
                            if (item.YLenh.Contains("\n\nChỉ định thủ thuật - phẫu thuật:") && !item.YLenh.Contains("Chỉ định xét nghiệm:") && !item.YLenh.Contains("Chỉ định chẩn đoán hình ảnh:"))
                            {
                                item.YLenh = item.YLenh.Replace("\n\nChỉ định thủ thuật - phẫu thuật:", "");// "Chỉ định thủ thuật - phẫu thuật:" + 
                            }
                            if (item.YLenh.Contains("\n\nChỉ định xét nghiệm:") && !item.YLenh.Contains("Chỉ định thủ thuật - phẫu thuật:") && !item.YLenh.Contains("Chỉ định chẩn đoán hình ảnh:"))
                            {
                                item.YLenh = item.YLenh.Replace("\n\nChỉ định xét nghiệm:", "");// "Chỉ định xét nghiệm:" +
                            }
                            if (item.YLenh.Contains("\n\nChỉ định chẩn đoán hình ảnh:") && !item.YLenh.Contains("Chỉ định thủ thuật - phẫu thuật:") && !item.YLenh.Contains("Chỉ định xét nghiệm:"))
                            {
                                item.YLenh = item.YLenh.Replace("\n\nChỉ định chẩn đoán hình ảnh:", "");//"Chỉ định chẩn đoán hình ảnh:" + 
                            }
                        }
                        _lkq.AddRange(dienbien3);
                        _lkq.AddRange(q3);


                        var q5 = (from a in _lkq
                                  group a by new { NgayNhap = a.NgayNhap.Date, a.ThucHienYL, a.DienBien1, a.MaCB, a.YLenh, a.TenCB, a.HuongDtri } into kq//, a.TenCB
                                  select new { NgayNhap = kq.Key.NgayNhap, kq.Key.TenCB, kq.Key.ThucHienYL, kq.Key.YLenh, kq.Key.DienBien1, kq.Key.HuongDtri, kq.Key.MaCB }).ToList();
                        var q4 = (from a in q5
                                  group a by new { a.TenCB, a.MaCB, a.NgayNhap } into kq
                                  select new DienBienYHCT
                                  {
                                      ThucHienYL = string.Join("\n", kq.Select(p => (p.ThucHienYL != "" && p.ThucHienYL != null) ? (p.ThucHienYL) : "").ToArray()),
                                      HuongDtri = string.Join("\n", kq.Select(p => (p.HuongDtri != "" && p.HuongDtri != null) ? (p.HuongDtri) : "").ToArray()),
                                      //MaBNhan = _int_maBN,
                                      DienBien1 = string.Join("\n", kq.Select(p => (p.DienBien1 != "" && p.DienBien1 != null) ? (p.DienBien1) : "").ToArray()),
                                      MaCB = kq.Key.MaCB,//string.Join("\n", kq.Select(p => (p.MaCB != "" && p.MaCB != null) ? (p.MaCB) : "").ToArray()),
                                      YLenh = string.Join("\n", kq.Select(p => (p.YLenh != "" && p.YLenh != null) ? ("\n" + p.YLenh) : "").ToArray()),
                                      NgayNhap = kq.Key.NgayNhap,
                                      TenCB = kq.Key.TenCB//string.Join("\n", kq.Select(p => p.YLenh.Contains("Chỉ định") ? (p.TenCB) : "").ToArray()),
                                  }).ToList();
                        foreach (var item in q4)
                        {
                            DateTime tungay1 = DungChung.Ham.NgayTu(item.NgayNhap);
                            DateTime Denngay1 = DungChung.Ham.NgayDen(item.NgayNhap);
                            var dsngay = dienbienT.Where(p => p.NgayNhap >= tungay1 && p.NgayNhap <= Denngay1).OrderByDescending(p => p.NgayNhap).ToList();
                            if (dsngay.Count > 0)
                            {
                                item.NgayNhapHT = dsngay.First().NgayNhap.Value.ToString("dd/MM/yyyy HH:mm");
                            }
                            if (item.YLenh.Contains("\n"))
                                item.YLenh = formatstring(item.YLenh);

                            if (DungChung.Bien.MaBV == "24297")
                            {
                                item.YLenh += Environment.NewLine + Environment.NewLine + Environment.NewLine + item.TenCB;
                                item.DienBien1 += Environment.NewLine + Environment.NewLine + Environment.NewLine + item.TenCB;
                            }
                        }
                        var ttbn = (from bn in DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN)
                                    join bnkb in DaTaContext.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                                    join kp in DaTaContext.KPhongs on bnkb.MaKP equals kp.MaKP
                                    select new { bn.TenBNhan, bn.Tuoi, bn.GTinh, kp.TenKP, bnkb.Buong, bnkb.Giuong, bnkb.ChanDoanYHCT, bnkb.BenhKhacYHCT, bnkb.ChanDoan, bnkb.BenhKhac, bnkb.IDKB, bnkb.MaICD2, bnkb.MaICD }).OrderByDescending(p => p.IDKB).ToList();
                        if (ttbn.Count > 0)
                        {
                            rep.TenBNhan.Value = ttbn.First().TenBNhan.ToUpper();
                            rep.Tuoi.Value = DungChung.Bien.MaBV == "24012" ? DungChung.Ham.TuoitheoThang(DaTaContext, _int_maBN, DungChung.Bien.formatAge_24012) : ttbn.First().Tuoi.ToString();
                            int gt = -1;
                            gt = ttbn.First().GTinh.Value;
                            if (gt == 0)
                                rep.GioiTinh.Value = "Nữ";
                            else
                                rep.GioiTinh.Value = "Nam";
                            rep.KhoaDT.Value = ttbn.First().TenKP;

                            var icd = DaTaContext.ICD10.Where(o => true).ToList();

                            rep.ChanDoan.Value = DungChung.Ham.GhepChuoiChanDoanYHCT(icd, ttbn.First().MaICD, ttbn.First().MaICD2);
                            rep.Buong.Value = ttbn.First().Buong;
                            rep.Giuong.Value = ttbn.First().Giuong;
                        }
                        var ktvv = DaTaContext.VaoViens.Where(p => p.MaBNhan == _int_maBN).ToList();
                        if (ktvv.Count > 0)
                            rep.SoVV.Value = "Số vào viện: " + ktvv.First().SoVV;
                        else
                            rep.SoVV.Value = "Số vào viện: ..........";
                        // if (dienbien.Count > 0)
                        rep.DataSource = q4.OrderBy(p => p.NgayNhap).ToList();
                        rep.BindingData();
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                        return true;
                    }

                    if (DungChung.Bien.MaBV == "24012")
                    {
                        List<DienBienYHCT> _lkq = new List<DienBienYHCT>();
                        DateTime tungay1 = DungChung.Bien.MaBV == "24012" ? detungaydb.DateTime : DungChung.Ham.NgayTu(detungaydb.DateTime);
                        DateTime Denngay1 = DungChung.Bien.MaBV == "24012" ? dedenngaydb.DateTime : DungChung.Ham.NgayDen(dedenngaydb.DateTime);
                        _lkq.Clear();
                        var dienbien1 = (from db in DaTaContext.DienBiens.Where(p => p.Ploai == 0).Where(p => p.MaBNhan == _int_maBN).Where(p => p.NgayNhap >= tungay1 && p.NgayNhap <= Denngay1)
                                         join cb in DaTaContext.CanBoes on db.MaCB equals cb.MaCB into k1
                                         from k2 in k1.DefaultIfEmpty()
                                         select new DienBienYHCT { ThucHienYL = db.ThucHienYL, HuongDtri = db.HuongDTri, DienBien1 = db.DienBien1, MaCB = db.MaCB, YLenh = db.YLenh, NgayNhap = db.NgayNhap.Value, TenCB = k2 != null ? k2.CapBac + ": " + k2.TenCB : "" }
                                           ).OrderBy(p => p.NgayNhap).ToList();

                        _lkq.AddRange(dienbien1);
                        var ttbn = (from bn in DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN)
                                    join bnkb in DaTaContext.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                                    join kp in DaTaContext.KPhongs on bnkb.MaKP equals kp.MaKP
                                    select new { bn.TenBNhan, bn.Tuoi, bn.GTinh, kp.TenKP, bnkb.Buong, bnkb.Giuong, bnkb.ChanDoan, bnkb.BenhKhac, bnkb.IDKB, bn.NoiTru }).OrderByDescending(p => p.IDKB).ToList();

                        frmIn frm = new frmIn();
                        Phieu.rep_ToDieuTri_YHCT rep = new Phieu.rep_ToDieuTri_YHCT();
                        if (ttbn.Count > 0)
                        {
                            rep.TenBNhan.Value = ttbn.First().TenBNhan.ToUpper();
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(DaTaContext, _int_maBN, DungChung.Bien.formatAge_24012);
                            int gt = -1;
                            gt = ttbn.First().GTinh.Value;
                            if (gt == 0)
                                rep.GioiTinh.Value = "Nữ";
                            else
                                rep.GioiTinh.Value = "Nam";
                            rep.KhoaDT.Value = ttbn.First().TenKP;
                            rep.ChanDoan.Value = ttbn.First().ChanDoan + ";" + DungChung.Ham.FreshString(ttbn.First().BenhKhac);
                            rep.Buong.Value = ttbn.First().Buong;
                            rep.Giuong.Value = ttbn.First().Giuong;

                            for (int i = 0; i < _lkq.Count; i++)
                            {
                                if (!string.IsNullOrEmpty(_lkq[i].DienBien1))
                                {
                                    _lkq[i].DienBien1 += "\n\n\n\t" + _lkq[i].TenCB;
                                }
                                if (!string.IsNullOrEmpty(_lkq[i].YLenh))
                                {
                                    _lkq[i].YLenh += "\n\n\n\t" + _lkq[i].TenCB;
                                }
                                else
                                {
                                    _lkq[i].TenCB = "";
                                }
                            }
                        }



                        var ktvv = DaTaContext.VaoViens.Where(p => p.MaBNhan == _int_maBN).ToList();
                        if (ktvv.Count > 0)
                            rep.SoVV.Value = "Số vào viện: " + ktvv.First().SoVV;
                        else
                            rep.SoVV.Value = "Số vào viện: ..........";
                        // if (dienbien.Count > 0)


                        rep.DataSource = _lkq.OrderBy(p => p.NgayNhap).ToList();
                        rep.BindingData();
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                        return true;

                    }
                    else
                    {
                        frmIn frm = new frmIn();
                        Phieu.rep_ToDieuTri_YHCT rep = new Phieu.rep_ToDieuTri_YHCT();
                        var dienbien0 = (from db in DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.NgayNhap >= tungay && p.NgayNhap <= Denngay)
                                         join cb in DaTaContext.CanBoes on db.MaCB equals cb.MaCB
                                         select new { db.ID, IDDon = db.IDDon ?? 0, db.ThucHienYL, MaBNhan = db.MaBNhan ?? 0, db.DienBien1, db.MaCB, db.YLenh, db.HuongDTri, NgayNhap = db.NgayNhap, TenCB = cb.CapBac + ": " + cb.TenCB }
                                           ).OrderBy(p => p.NgayNhap).ToList();
                        var dienbien = (from db in dienbien0
                                        select new { db.ID, IDDon = db.IDDon, db.ThucHienYL, MaBNhan = db.MaBNhan, db.DienBien1, db.MaCB, db.YLenh, db.HuongDTri, NgayNhap = db.NgayNhap.Value.ToString("HH") + "h" + db.NgayNhap.Value.Minute + Environment.NewLine + db.NgayNhap.Value.ToString("dd/MM/yyyy"), NN = db.NgayNhap.Value, TenCB = db.TenCB }
                                          ).OrderBy(p => p.NN).ToList();
                        var ttbn = (from bn in DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN)
                                    join bnkb in DaTaContext.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                                    join kp in DaTaContext.KPhongs on bnkb.MaKP equals kp.MaKP
                                    select new { bn.TenBNhan, bn.Tuoi, bn.GTinh, kp.TenKP, bnkb.Buong, bnkb.Giuong, bnkb.ChanDoan, bnkb.BenhKhac, bnkb.IDKB, bnkb.ChanDoanYHCT, bnkb.BenhKhacYHCT }).OrderByDescending(p => p.IDKB).ToList();
                        if (ttbn.Count > 0)
                        {
                            rep.TenBNhan.Value = ttbn.First().TenBNhan.ToUpper();
                            rep.Tuoi.Value = ttbn.First().Tuoi;
                            int gt = -1;
                            gt = ttbn.First().GTinh.Value;
                            if (gt == 0)
                                rep.GioiTinh.Value = "Nữ";
                            else
                                rep.GioiTinh.Value = "Nam";
                            rep.KhoaDT.Value = ttbn.First().TenKP;
                            rep.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(ttbn.First().ChanDoan + ";" + ttbn.First().BenhKhac), DungChung.Ham.FreshString(ttbn.First().ChanDoanYHCT + ";" + ttbn.First().BenhKhacYHCT));// DungChung.Ham.FreshString(ttbn.First().ChanDoan + ";" + ttbn.First().BenhKhac);
                            rep.Buong.Value = ttbn.First().Buong;
                            rep.Giuong.Value = ttbn.First().Giuong;
                        }

                        var ktvv = DaTaContext.VaoViens.Where(p => p.MaBNhan == _int_maBN).ToList();
                        if (ktvv.Count > 0)
                            rep.SoVV.Value = "Số vào viện: " + ktvv.First().SoVV;
                        else
                            rep.SoVV.Value = "Số vào viện: ..........";


                        // if (dienbien.Count > 0)
                        rep.DataSource = dienbien.ToList();
                        rep.BindingData();
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                        return true;
                    }

                }
                else
                {
                    MessageBox.Show("Bạn chưa chọn BN");
                    return false;
                }
            }
            catch (Exception ex)
            {

                MessageBox.Show("lỗi: " + ex.Message);
                return false;
            }
        }
        #endregion

        #region PhieuDieuTri
        public class DienBien30007
        {
            DateTime ngayNhap;

            public DateTime NgayNhap
            {
                get { return ngayNhap; }
                set { ngayNhap = value; }
            }
            String ngayNhap_24012;

            public string NgayNhap_24012
            {
                get { return ngayNhap_24012; }
                set { ngayNhap_24012 = value; }
            }
            string dienBien1;

            public string DienBien1
            {
                get { return dienBien1; }
                set { dienBien1 = value; }
            }
            string yLenh;

            public string YLenh
            {
                get { return yLenh; }
                set { yLenh = value; }
            }
            string huongDTri;

            public string HuongDTri
            {
                get { return huongDTri; }
                set { huongDTri = value; }
            }

            string tenCB;

            public string TenCB
            {
                get { return tenCB; }
                set { tenCB = value; }
            }
            int? maBNhan;

            public int? MaBNhan
            {
                get { return maBNhan; }
                set { maBNhan = value; }
            }
            string maCB;

            public string MaCB
            {
                get { return maCB; }
                set { maCB = value; }
            }
            int? iDDon;

            public int? IDDon
            {
                get { return iDDon; }
                set { iDDon = value; }
            }
            int iD;

            public int ID
            {
                get { return iD; }
                set { iD = value; }
            }
        }
        List<DienBien30007> db1 = new List<DienBien30007>();
        public bool _PhieuDieuTri(int _int_maBN)
        {

            try
            {

                if (_int_maBN > 0)
                {
                    DateTime tungay = DungChung.Bien.MaBV == "30007" || DungChung.Bien.MaBV == "24012" ? detungaydb.DateTime : DungChung.Ham.NgayTu(detungaydb.DateTime);
                    DateTime Denngay = DungChung.Bien.MaBV == "30007" || DungChung.Bien.MaBV == "24012" ? dedenngaydb.DateTime : DungChung.Ham.NgayDen(dedenngaydb.DateTime);
                    db1.Clear();
                    int noitru = 0;
                    var dienbien = (from db in DaTaContext.DienBiens.Where(p => p.Ploai == 0).Where(p => p.MaBNhan == _int_maBN).Where(p => p.NgayNhap >= tungay && p.NgayNhap <= Denngay)
                                    join cb in DaTaContext.CanBoes on db.MaCB equals cb.MaCB into k1
                                    from k2 in k1.DefaultIfEmpty()
                                    select new DienBien30007
                                    {
                                        ID = db.ID,
                                        IDDon = db.IDDon,
                                        MaBNhan = db.MaBNhan,
                                        DienBien1 = db.DienBien1,
                                        MaCB = db.MaCB,
                                        YLenh = db.YLenh,
                                        HuongDTri = db.SLThuoc,
                                        NgayNhap = db.NgayNhap.Value,
                                        TenCB = k2 != null ? k2.CapBac + ": " + k2.TenCB : "",
                                    }).OrderBy(p => p.NgayNhap).ToList();
                    if (DungChung.Bien.MaBV == "24012")
                    {
                        foreach (var item in dienbien)
                        {
                            item.NgayNhap_24012 = item.NgayNhap.ToString("dd/MM HH:mm", CultureInfo.CreateSpecificCulture("vi-VN"));
                        }
                    }
                    db1.AddRange(dienbien);
                    var ttbn = (from bn in DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN)
                                join bnkb in DaTaContext.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                                join kp in DaTaContext.KPhongs on bnkb.MaKP equals kp.MaKP
                                select new { bn.TenBNhan, bn.Tuoi, bn.GTinh, kp.TenKP, bnkb.Buong, bnkb.Giuong, bnkb.ChanDoan, bnkb.BenhKhac, bnkb.IDKB, bn.NoiTru }).OrderByDescending(p => p.IDKB).ToList();
                    if (ttbn.Count > 0)
                        noitru = Convert.ToInt32(ttbn.First().NoiTru);
                    frmIn frm = new frmIn();
                    Phieu.rep_ToDieuTri rep = new Phieu.rep_ToDieuTri(noitru);
                    if (ttbn.Count > 0)
                    {
                        rep.TenBNhan.Value = ttbn.First().TenBNhan.ToUpper();
                        rep.Tuoi.Value = DungChung.Bien.MaBV == "24012" ? DungChung.Ham.TuoitheoThang(DaTaContext, _int_maBN, DungChung.Bien.formatAge_24012) : ttbn.First().Tuoi.ToString();
                        int gt = -1;
                        gt = ttbn.First().GTinh.Value;
                        if (gt == 0)
                            rep.GioiTinh.Value = "Nữ";
                        else
                            rep.GioiTinh.Value = "Nam";
                        rep.KhoaDT.Value = ttbn.First().TenKP;
                        rep.ChanDoan.Value = DungChung.Bien.MaBV == "27001" ? ttbn.First().ChanDoan + ";" + DungChung.Ham.FreshString(ttbn.First().BenhKhac) : ttbn.First().ChanDoan + "; " + DungChung.Ham.FreshString(ttbn.First().BenhKhac);
                        rep.Buong.Value = ttbn.First().Buong;
                        rep.Giuong.Value = ttbn.First().Giuong;


                        var ketluan = (from cls in DaTaContext.CLS.Where(p => p.MaBNhan == _int_maBN)
                                       join cd in DaTaContext.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                       select new { DienBien2 = cd.KetLuan }).ToList();
                        string ketluan1 = "CĐHA: \r";

                        if (DungChung.Bien.MaBV == "27001")
                        {
                            for (int i = 0; i < ketluan.Count; i++)
                            {
                                //rep.KetLuan.Value = rep.KetLuan.Value + "\r" +  ketluan.First().DienBien2;
                                ketluan1 += ketluan[i].DienBien2 + "\r";
                            }
                            rep.KetLuan.Value = ketluan1;
                        }



                        if (DungChung.Bien.MaBV == "24012")
                        {
                            for (int i = 0; i < db1.Count; i++)
                            {
                                if (!string.IsNullOrEmpty(db1[i].DienBien1))
                                {
                                    db1[i].DienBien1 += "\n\n\n\t" + db1[i].TenCB;
                                }

                                if (!string.IsNullOrEmpty(db1[i].YLenh))
                                {
                                    db1[i].YLenh += "\n\n\n\t" + db1[i].TenCB;
                                }
                                else
                                {
                                    db1[i].TenCB = "";
                                }
                            }
                        }
                    }

                    var ktvv = DaTaContext.VaoViens.Where(p => p.MaBNhan == _int_maBN).ToList();
                    if (ktvv.Count > 0)
                        rep.SoVV.Value = "Số vào viện: " + ktvv.First().SoVV;
                    else
                        rep.SoVV.Value = "Số vào viện: ..........";
                    // if (dienbien.Count > 0)


                    rep.DataSource = db1.OrderBy(p => p.NgayNhap).ToList();
                    rep.BindingData();
                    rep.CreateDocument();
                    frm.prcIN.PrintingSystem = rep.PrintingSystem;
                    frm.ShowDialog();
                    return true;
                    //}
                }/*
                if (_int_maBN > 0)
                {
                    DateTime tungay = DungChung.Bien.MaBV == "30007" || DungChung.Bien.MaBV == "24012" ? detungaydb.DateTime : DungChung.Ham.NgayTu(detungaydb.DateTime);
                    DateTime Denngay = DungChung.Bien.MaBV == "30007" || DungChung.Bien.MaBV == "24012" ? dedenngaydb.DateTime : DungChung.Ham.NgayDen(dedenngaydb.DateTime);
                    db1.Clear();
                    int noitru = 0;
                    var dienbien = (from db in DaTaContext.DienBiens.Where(p => p.Ploai == 0).Where(p => p.MaBNhan == _int_maBN).Where(p => p.NgayNhap >= tungay && p.NgayNhap <= Denngay)
                                    join cb in DaTaContext.CanBoes on db.MaCB equals cb.MaCB into k1
                                    from k2 in k1.DefaultIfEmpty()
                                    select new DienBien30007
                                    {
                                        ID = db.ID,
                                        IDDon = db.IDDon,
                                        MaBNhan = db.MaBNhan,
                                        DienBien1 = db.DienBien1,
                                        MaCB = db.MaCB,
                                        YLenh = db.YLenh,
                                        HuongDTri = db.SLThuoc,
                                        NgayNhap = db.NgayNhap.Value,
                                        TenCB = k2 != null ? k2.CapBac + ": " + k2.TenCB : ""
                                    }).OrderBy(p => p.NgayNhap).ToList();

                    db1.AddRange(dienbien);
                    var ttbn = (from bn in DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN)
                                join bnkb in DaTaContext.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                                join kp in DaTaContext.KPhongs on bnkb.MaKP equals kp.MaKP
                                select new { bn.TenBNhan, bn.Tuoi, bn.GTinh, kp.TenKP, bnkb.Buong, bnkb.Giuong, bnkb.ChanDoan, bnkb.BenhKhac, bnkb.IDKB, bn.NoiTru }).OrderByDescending(p => p.IDKB).ToList();
                    if (ttbn.Count > 0)
                        noitru = Convert.ToInt32(ttbn.First().NoiTru);
                    frmIn frm = new frmIn();
                    Phieu.rep_ToDieuTri rep = new Phieu.rep_ToDieuTri(noitru);
                    if (ttbn.Count > 0)
                    {
                        rep.TenBNhan.Value = ttbn.First().TenBNhan.ToUpper();
                        rep.Tuoi.Value = ttbn.First().Tuoi;
                        int gt = -1;
                        gt = ttbn.First().GTinh.Value;
                        if (gt == 0)
                            rep.GioiTinh.Value = "Nữ";
                        else
                            rep.GioiTinh.Value = "Nam";
                        rep.KhoaDT.Value = ttbn.First().TenKP;
                        rep.ChanDoan.Value = ttbn.First().ChanDoan + ";" + DungChung.Ham.FreshString(ttbn.First().BenhKhac);
                        rep.Buong.Value = ttbn.First().Buong;
                        rep.Giuong.Value = ttbn.First().Giuong;
                    }
                    var ktvv = DaTaContext.VaoViens.Where(p => p.MaBNhan == _int_maBN).ToList();
                    if (ktvv.Count > 0)
                        rep.SoVV.Value = "Số vào viện: " + ktvv.First().SoVV;
                    else
                        rep.SoVV.Value = "Số vào viện: ..........";
                    // if (dienbien.Count > 0)
                    List<DienBien30007> source = new List<DienBien30007>();
                    for (int i = 0; i < dienbien.Count; i++)
                    {
                        DienBien30007 db = new DienBien30007();
                        db.NgayNhap = dienbien[i].NgayNhap;
                        db.YLenh = dienbien[i].YLenh;
                        db.DienBien1 = dienbien[i].DienBien1;
                        db.HuongDTri = dienbien[i].HuongDTri;
                        if (!string.IsNullOrEmpty(dienbien[i].DienBien1))
                        {
                            db.TenCB = dienbien[i].TenCB;
                        }
                        else
                        {
                            db.TenCB = "";
                        }
                        if (dienbien[i].YLenh != null)
                        {
                            db.TenCB = dienbien[i].TenCB;
                        }
                        source.Add(db);
                    }
                    if (DungChung.Bien.MaBV == "24012")
                    {
                        for (int i = 0; i < db1.Count; i++)
                        {
                            if (!string.IsNullOrEmpty(db1[i].DienBien1))
                            {
                                db1[i].DienBien1 += "\n\n\n\t" + db1[i].TenCB;
                            }

                            if (!string.IsNullOrEmpty(db1[i].YLenh))
                            {
                                db1[i].YLenh += "\n\n\n\t" + db1[i].TenCB;
                            }
                            else
                            {
                                db1[i].TenCB = "";
                            }
                        }
                    }
                    rep.DataSource = db1.OrderBy(p => p.NgayNhap).ToList();
                    rep.DataSource = source.OrderBy(p => p.NgayNhap).ToList();
                    rep.BindingData();
                    rep.CreateDocument();
                    frm.prcIN.PrintingSystem = rep.PrintingSystem;
                    frm.ShowDialog();
                    return true;
                    //}
                }*/
                else
                {
                    MessageBox.Show("Bạn chưa chọn BN");
                    return false;
                }
            }
            catch (Exception ex)
            {

                MessageBox.Show("lỗi: " + ex.Message);
                return false;
            }
        }
        #endregion

        private void grvDonThuocct_FocusedRowChanged(object sender, DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            int madv = 0, _mak = 0;
            if (lupKhoXuat.EditValue != null)
            {
                _mak = Convert.ToInt32(lupKhoXuat.EditValue);
                if (grvDonThuocct.GetFocusedRowCellValue(colMaDVdt) != null)
                {
                    madv = Convert.ToInt32(grvDonThuocct.GetFocusedRowCellValue(colMaDVdt));
                }
            }
            int _linh = 0;
            if (grvDonThuocct.GetFocusedRowCellValue(colSoLo) != null)
                _solo = grvDonThuocct.GetFocusedRowCellValue(colSoLo).ToString();
            if (grvDonThuocct.GetFocusedRowCellValue(colHanDung) != null)
                _handung = Convert.ToDateTime(grvDonThuocct.GetFocusedRowCellValue(colHanDung).ToString());
            if (cboKieuDon.SelectedIndex == 2)
            {
                cboDonGia.Items.Clear();
                var dthuoc = (from dt in DaTaContext.DThuocs.Where(p => p.MaKXuat == _mak).Where(p => p.MaBNhan == _int_maBN).Where(p => p.KieuDon == 0 || p.KieuDon == 1)
                              join dtct in DaTaContext.DThuoccts.Where(p => p.MaDV == madv) on dt.IDDon equals dtct.IDDon
                              where dt.NgayKe.Value.Day == dtNgayKe.DateTime.Day && dt.NgayKe.Value.Month == dtNgayKe.DateTime.Month
                              group dtct by dtct.DonGia into kq
                              select new { kq.Key }).ToList();
                colDonGia.OptionsColumn.ReadOnly = false;
                colDonGia.OptionsColumn.AllowEdit = true;
                colDonGia.OptionsColumn.AllowFocus = true;
                foreach (var a in dthuoc)
                {
                    cboDonGia.Items.Add(a.Key);
                }

            }
            if (TTLuu == 2)
            {
                #region enable cell
                int status = 0;
                if (grvDonThuocct.GetFocusedRowCellValue(colStatusct) != null)
                {
                    status = Convert.ToInt32(grvDonThuocct.GetFocusedRowCellValue(colStatusct));
                }
                if (status == 1)
                {
                    EnableTrongBHYT(true);
                }
                else
                {
                    int sopl = 0;
                    if (grvDonThuocct.GetFocusedRowCellValue(colSoPhieuLinhCt) != null)
                    {
                        sopl = Convert.ToInt32(grvDonThuocct.GetFocusedRowCellValue(colSoPhieuLinhCt));
                    }
                    if (sopl > 0)
                    {
                        EnableTrongBHYT(true);
                    }
                    else
                    {
                        grvDonThuocct.OptionsBehavior.ReadOnly = false;
                        grvDonThuocct.OptionsBehavior.Editable = true;
                        colMaDVdt.OptionsColumn.ReadOnly = false;
                        colGayTe.OptionsColumn.ReadOnly = false;
                        colSoLuong.OptionsColumn.ReadOnly = false;
                        colSoLuongctdt.OptionsColumn.ReadOnly = false;
                        coltrongBH.OptionsColumn.ReadOnly = false;
                        colTyLeBHTT.OptionsColumn.ReadOnly = false;
                    }
                }
                #endregion
            }


        }

        private void btnChiDinh_Click(object sender, EventArgs e)
        {
            if (!string.IsNullOrEmpty(txtTenBenhNhan.Text))
            {
                int rs;
                int _int_maBN = 0;
                if (Int32.TryParse(txtMaBNhan.Text, out rs))
                    _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
                FormThamSo.FRM_chidinh_Moi frm = new FormThamSo.FRM_chidinh_Moi(_int_maBN, txtTenBenhNhan.Text);
                frm.ShowDialog();

            }
            else
            {
                MessageBox.Show("Bạn chưa chọn BN");
            }
        }

        private void grvDienBien_RowCellClick(object sender, DevExpress.XtraGrid.Views.Grid.RowCellClickEventArgs e)
        {
            try
            {
                if (e.Column.Name == "colXoadb")
                {
                    var row = (DienBien)grvDienBien.GetFocusedRow();
                    if (row != null && (row.Loai == 1 || row.Loai == 2) && (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017"))
                    {
                        if (!string.IsNullOrWhiteSpace(row.YLenh) || !string.IsNullOrWhiteSpace(row.DienBien1) || !string.IsNullOrWhiteSpace(row.HuongDTri) || !string.IsNullOrWhiteSpace(row.DienBien1))
                        {
                            MessageBox.Show("Bạn không thể xóa diễn biến này");
                            return;
                        }
                    }
                    int rs;
                    int _int_maBN = 0;
                    if (Int32.TryParse(txtMaBNhan.Text, out rs))
                        _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
                    var ktrarv = DaTaContext.RaViens.Where(p => p.MaBNhan == _int_maBN).ToList();
                    if (ktrarv.Count <= 0)
                    {
                        int id = 0;
                        if (grvDienBien.GetFocusedRowCellValue(colIDdb) != null && grvDienBien.GetFocusedRowCellValue(colIDdb).ToString() != "")
                            id = Convert.ToInt32(grvDienBien.GetFocusedRowCellValue(colIDdb));
                        string macb = "";
                        if (grvDienBien.GetFocusedRowCellValue(colMaCB) != null && grvDienBien.GetFocusedRowCellValue(colMaCB).ToString() != "")
                            macb = grvDienBien.GetFocusedRowCellValue(colMaCB).ToString();
                        var xoa = DaTaContext.DienBiens.Where(p => p.ID == id).FirstOrDefault();
                        if (xoa != null)
                        {
                            if (DungChung.Bien.MaBV == "30007")
                            {
                                if (DungChung.Bien.MaCB == macb || DungChung.Bien.PLoaiKP == "Admin")
                                {
                                    DialogResult Result = MessageBox.Show("Bạn muốn xóa diễn biến ngày: " + xoa.NgayNhap.Value.ToShortDateString(), "Hỏi xóa", MessageBoxButtons.OKCancel, MessageBoxIcon.Question);
                                    if (Result == DialogResult.OK)
                                    {
                                        DaTaContext.DienBiens.Remove(xoa);
                                        DaTaContext.SaveChanges();
                                        grvDienBien.DeleteSelectedRows();
                                        MessageBox.Show("Xóa thành công");
                                    }
                                }
                                else
                                {
                                    var ad = DaTaContext.ADMINs.Where(p => p.MaCB == macb).ToList().FirstOrDefault();
                                    if (ad != null)
                                        MessageBox.Show("Không phải bác sĩ kê không được xóa! \n Tài khoản: " + ad.TenDN + " đã tạo diễn biến này.");
                                    else
                                        MessageBox.Show("Không phải bác sĩ kê không được xóa!\n Tài khoản tạo không còn tồn tại liên hệ Admin để được hỗ trợ!");
                                }

                            }
                            else
                            {
                                DialogResult Result = MessageBox.Show("Bạn muốn xóa diễn biến ngày: " + xoa.NgayNhap.Value.ToShortDateString(), "Hỏi xóa", MessageBoxButtons.OKCancel, MessageBoxIcon.Question);
                                if (Result == DialogResult.OK)
                                {
                                    DaTaContext.DienBiens.Remove(xoa);
                                    DaTaContext.SaveChanges();
                                    grvDienBien.DeleteSelectedRows();
                                    MessageBox.Show("Xóa thành công");
                                }
                            }
                        }
                    }
                    else
                    {
                        MessageBox.Show("Bệnh nhân đã ra viện, không thể xóa !");
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Lỗi xóa diễn biến:" + ex.Message);
            }
        }
        public class DienBien_24012
        {
            public int ID { get; set; }
            public int? IDDon { get; set; }
            public int? MaBNhan { get; set; }
            public string DienBien1 { get; set; }
            public string MaCB { get; set; }
            public string YLenh { get; set; }
            public DateTime NgayNhap { get; set; }
            public string TenCB { get; set; }
            public string NgayNhap_24012 { get; set; }

        }

        private void btnInDon_Click(object sender, EventArgs e)
        {
            DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            DungChung.Bien.formInDon = "Điều trị";
            int rs;
            int _idDon = 0, _int_maBN = 0;
            if (Int32.TryParse(txtIdDonThuoc.Text, out rs))
                _idDon = Convert.ToInt32(txtIdDonThuoc.Text);
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            int makp = 0;
            if (lupBPKe.EditValue != null)
                makp = Convert.ToInt32(lupBPKe.EditValue);
            int id = 0;

            if (grvChuyenKhoa.GetFocusedRowCellValue(colID) != null && grvChuyenKhoa.GetFocusedRowCellValue(colID).ToString() != "")
            {
                id = Convert.ToInt32(txtIdkb.Text);
            }
            if (btnInDon.Text == "In đơn")
            {
                #region bệnh viện 27022,12122
                if ((DungChung.Bien.MaBV == "27022" || DungChung.Bien.MaBV == "12122") || (DungChung.Bien.MaBV == "27001" && makp == 56))
                {
                    var dthuoc = (from dt in DaTaContext.DThuocs.Where(p => p.IDDon == _idDon)
                                  join dtct in DaTaContext.DThuoccts on dt.IDDon equals dtct.IDDon
                                  select dtct
                                     ).FirstOrDefault();
                    if (dthuoc == null)
                    {
                        MessageBox.Show("Không tìm thấy đơn!");
                        return;
                    }
                    if (dthuoc.SoPL == 0)
                    {
                        if (DungChung.Bien.MaBV != "27022")
                        {
                            DialogResult _result = MessageBox.Show("Bạn muốn in đơn xuất ngoại trú?", "In đơn xuất ngoại trú", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                            if (_result == DialogResult.Yes)
                            {
                                dthuoc.SoPL = -1;
                                List<DThuocct> _ldthuocct = DaTaContext.DThuoccts.Where(p => p.IDDon == _idDon).Where(p => p.Status != -1).ToList();
                                foreach (DThuocct dtct in _ldthuocct)
                                {
                                    dtct.SoPL = -1;
                                    if (DungChung.Bien.MaBV == "27001" && makp == 56)
                                    {
                                        var dt = DaTaContext.DThuocs.Where(p => p.IDDon == dtct.IDDon).ToList();
                                        if (dt.Count > 0)
                                        {
                                            dt.First().KieuDon = -1;
                                        }
                                    }
                                }
                                DaTaContext.SaveChanges();
                                if (DungChung.Bien.MaBV == "12122" || DungChung.Bien.MaBV == "27001")
                                    DungChung.Ham.InDon(_idDon, _int_maBN, makp, 0);
                            }
                        }
                        else
                        {
                            InPhieuCapTHuoc(_idDon);
                        }
                    }
                    else if (dthuoc.SoPL == -1)
                    {
                        DialogResult _result = MessageBox.Show("Bạn muốn hủy đơn xuất ngoại trú?", "Hủy đơn xuất ngoại trú", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                        if (_result == DialogResult.Yes)
                        {
                            if (dthuoc != null && ((dthuoc.Status != null && dthuoc.Status.Value < 1) || dthuoc.Status == null))
                            {
                                dthuoc.SoPL = 0;
                                List<DThuocct> _ldthuocct = DaTaContext.DThuoccts.Where(p => p.IDDon == _idDon).Where(p => p.Status != -1).ToList();
                                foreach (DThuocct dtct in _ldthuocct)
                                {
                                    dtct.SoPL = 0;
                                    if (DungChung.Bien.MaBV == "27001" && makp == 56)
                                    {
                                        var dt = DaTaContext.DThuocs.Where(p => p.IDDon == dtct.IDDon).ToList();
                                        if (dt.Count > 0)
                                        {
                                            dt.First().KieuDon = 0;
                                        }
                                    }
                                }
                                DaTaContext.SaveChanges();
                            }
                            else
                            {
                                MessageBox.Show("Đơn đã xuất dược hoặc không có đơn, bạn không thể hủy");
                            }
                        }
                        else
                        {
                            if (DungChung.Bien.MaBV == "27022")
                                InPhieuCapTHuoc(_idDon);
                            else if (DungChung.Bien.MaBV == "27001")
                                DungChung.Ham.InDon(_idDon, _int_maBN, makp, 0);
                        }
                    }
                    else
                    {
                        if (DungChung.Bien.MaBV == "12122")
                            DungChung.Ham.InDon(_idDon, _int_maBN, makp, 0);
                        else if (DungChung.Bien.MaBV == "27022")
                            InPhieuCapTHuoc(_idDon);
                        else if (DungChung.Bien.MaBV == "27001")
                            DungChung.Ham.InDon(_idDon, _int_maBN, makp, 0);
                    }
                    grvBNhankb_FocusedRowChanged(null, null);
                }

                #endregion
                #region bệnh viện khác
                else
                {
                    DungChung.Ham.InDon(_idDon, _int_maBN, makp, id);
                }
            }
            else
            {
                if (btnInDon.Text == "In D.Vụ")
                {
                    frmIn frm = new frmIn();
                    BaoCao.Rep_PhieuTHCD rep = new BaoCao.Rep_PhieuTHCD();
                    var k = (from bnkb in DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN) select new { bnkb.ChanDoan, bnkb.BenhKhac, bnkb.IDKB }).OrderByDescending(p => p.IDKB).ToList();
                    if (k.Count > 0)
                    {
                        rep.Chuandoan.Value = (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017") ? DungChung.Ham.GetChanDoanKB(DaTaContext, _maBN) : k.First().ChanDoan + " /" + k.First().BenhKhac;
                    }
                    var bn2 = (from bn in DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN)

                               select new { bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.CapCuu, bn.Tuoi, bn.SThe }).ToList();
                    if (bn2.Count > 0)
                    {

                        rep.Diachi.Value = bn2.First().DChi;
                        rep.Tuoi.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.TinhTuoiBenhNhan(DaTaContext, _int_maBN) : DungChung.Ham.TuoitheoThang(DaTaContext, _int_maBN, DungChung.Bien.formatAge);
                        rep.TenBN.Value = bn2.First().TenBNhan;
                        int gioiTinh = int.Parse(bn2.First().GTinh.ToString());
                        if (gioiTinh == 1)
                        {
                            rep.Nu.Value = "/";
                            rep.Nam.Value = "";
                        }
                        else
                        {
                            rep.Nu.Value = "";
                            rep.Nam.Value = "/";
                        }
                        if (bn2.First().SThe.Length == 15)
                        {
                            rep.Sthe1.Value = bn2.First().SThe.Substring(0, 3);
                            rep.Sthe2.Value = bn2.First().SThe.Substring(3, 2);
                            rep.Sthe3.Value = bn2.First().SThe.Substring(5, 2);
                            rep.Sthe4.Value = bn2.First().SThe.Substring(7, 3);
                            rep.Sthe5.Value = bn2.First().SThe.Substring(10, 5);
                        }
                    }
                    var XQ = (
                          from canls in DaTaContext.DThuocs.Where(p => p.MaBNhan == _int_maBN).Where(p => p.PLDV == 2)
                          join kp in DaTaContext.KPhongs on canls.MaKP equals kp.MaKP
                          join cb in DaTaContext.CanBoes on canls.MaCB equals cb.MaCB
                          join chidinh in DaTaContext.DThuoccts on canls.IDDon equals chidinh.IDDon
                          join dichvu in DaTaContext.DichVus on chidinh.MaDV equals dichvu.MaDV
                          join tn in DaTaContext.TieuNhomDVs on dichvu.IdTieuNhom equals tn.IdTieuNhom
                          join Nhom in DaTaContext.NhomDVs on tn.IDNhom equals Nhom.IDNhom
                          where (Nhom.TenNhomCT.Contains("Thủ thuật, phẫu thuật") || Nhom.TenNhomCT.Contains("DVKT thanh toán theo tỷ lệ"))
                          group new { canls, cb, kp, dichvu, tn, chidinh } by new { NgayThang = canls.NgayKe, cb.TenCB, kp.TenKP, TenDV = dichvu.TenDV, tn.TenTN } into kq
                          select new { kq.Key.NgayThang, kq.Key.TenCB, kq.Key.TenKP, kq.Key.TenDV, kq.Key.TenTN, SoLuong = kq.Sum(p => p.chidinh.SoLuong) }
                          ).ToList();
                    if (XQ.Count > 0)
                    {
                        DateTime _dt = System.DateTime.Now;
                        if (XQ.First().NgayThang != null)
                            _dt = XQ.First().NgayThang.Value;
                        rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, 2);
                        rep.BSCD.Value = XQ.First().TenCB;
                        rep.TenKP.Value = XQ.First().TenKP;
                        rep.DataSource = XQ;
                        rep.BindingData();
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    else
                    {
                        MessageBox.Show("Không có chỉ định nào!");
                    }
                }
                else
                {
                    if (_int_maBN > 0)
                    {
                        DateTime ngaytu = detungaydb.DateTime;
                        DateTime ngayden = dedenngaydb.DateTime;
                        frmIn frm = new frmIn();
                        Phieu.rep_ToDieuTri rep = new Phieu.rep_ToDieuTri(1);
                        var dienbien = (from db in DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => DungChung.Bien.MaBV == "30007" ? (p.NgayNhap >= ngaytu && p.NgayNhap <= ngayden) : true)
                                        join cb in DaTaContext.CanBoes on db.MaCB equals cb.MaCB
                                        select new { db.ID, db.IDDon, db.MaBNhan, db.DienBien1, db.MaCB, db.YLenh, db.NgayNhap, TenCB = cb.CapBac + ": " + cb.TenCB }
                                           ).OrderBy(p => p.NgayNhap).ToList();
                        List<DienBien_24012> dienbien_24012 = new List<DienBien_24012>();
                        foreach (var item in dienbien)
                        {
                            var db = new DienBien_24012();
                            db.ID = item.ID;
                            db.IDDon = item.IDDon;
                            db.MaBNhan = item.MaBNhan;
                            db.DienBien1 = item.DienBien1;
                            db.MaCB = item.MaCB;
                            db.YLenh = item.YLenh;
                            db.NgayNhap = item.NgayNhap.Value;
                            db.TenCB = item.TenCB;
                            db.NgayNhap_24012 = item.NgayNhap.Value.ToString("dd/MM HH:mm", CultureInfo.CreateSpecificCulture("vi-VN"));
                            dienbien_24012.Add(db);
                        }

                        var ttbn = (from bn in DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN)
                                    join bnkb in DaTaContext.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                                    join kp in DaTaContext.KPhongs on bnkb.MaKP equals kp.MaKP
                                    select new { bn.TenBNhan, bn.Tuoi, bn.GTinh, kp.TenKP, bnkb.Buong, bnkb.Giuong, bnkb.ChanDoan, bnkb.BenhKhac, bnkb.IDKB }).OrderByDescending(p => p.IDKB).ToList();
                        if (ttbn.Count > 0)
                        {
                            rep.TenBNhan.Value = ttbn.First().TenBNhan;
                            rep.Tuoi.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.TinhTuoiBenhNhan(DaTaContext, _int_maBN) : DungChung.Ham.TuoitheoThang(DaTaContext, _int_maBN, DungChung.Bien.formatAge);
                            int gt = -1;
                            gt = ttbn.First().GTinh.Value;
                            if (gt == 0)
                                rep.GioiTinh.Value = "Nữ";
                            else
                                rep.GioiTinh.Value = "Nam";
                            rep.KhoaDT.Value = ttbn.First().TenKP;
                            rep.ChanDoan.Value = (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017") ? DungChung.Ham.GetChanDoanKB(DaTaContext, _maBN) : ttbn.First().ChanDoan + "; " + DungChung.Ham.FreshString(ttbn.First().BenhKhac);
                            rep.Buong.Value = ttbn.First().Buong;
                            rep.Giuong.Value = ttbn.First().Giuong;
                        }
                        var ktvv = DaTaContext.VaoViens.Where(p => p.MaBNhan == _int_maBN).ToList();
                        if (ktvv.Count > 0)
                            rep.SoVV.Value = "Số vào viện: " + ktvv.First().SoVV;
                        else
                            rep.SoVV.Value = "Số vào viện: ..........";
                        if (DungChung.Bien.MaBV == "24012")
                        {
                            rep.DataSource = dienbien_24012.ToList();
                        }
                        else
                            rep.DataSource = dienbien.ToList();
                        rep.BindingData();
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    else
                    {
                        MessageBox.Show("Bạn chưa chọn BN");
                    }
                }

            }
            #endregion
        }

        private void btnPhieuTamT_Click(object sender, EventArgs e)
        {
            FormThamSo.Frm_TamTraThuoc frm = new FormThamSo.Frm_TamTraThuoc();
            frm.ShowDialog();
        }

        private void grvDichVu_CellValueChanging(object sender, DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs e)
        {
            if (e.Column.Name != "colTrongBHdv")
            {
                int ma = 0, madv = 0;
                if (grvDichVu.GetFocusedRowCellValue(colIDCD) != null && grvDichVu.GetFocusedRowCellValue(colIDCD).ToString() != "")
                    ma = Convert.ToInt32(grvDichVu.GetFocusedRowCellValue(colIDCD).ToString());
                if (grvDichVu.GetFocusedRowCellValue(colMaDVdv) != null && grvDichVu.GetFocusedRowCellValue(colMaDVdv).ToString() != "")
                    madv = Convert.ToInt32(grvDichVu.GetFocusedRowCellValue(colMaDVdv).ToString());
                if (ma > 0)
                {
                    if (DungChung.Bien.MaBV == "27022")//thur thuật , phẫu thuật sau khi thực hiện vẫn cho sửa tỷ lệ TT 1306
                    {
                        var ktranhom = _lAllDichVu.Where(p => p.MaDV == madv).Select(p => p.IDNhom).FirstOrDefault();
                        if (ktranhom != null && ktranhom != 8)
                        {
                            MessageBox.Show("Dịch vụ đã được lưu kết quả CLS, bạn không thể sửa");
                            xtraChiDinh.Text = "Chỉ định";

                            grvBNhankb_FocusedRowChanged(null, null);
                            EnableButton(true);
                        }
                    }
                    else
                    {
                        MessageBox.Show("Dịch vụ đã được lưu kết quả CLS, bạn không thể sửa");
                        xtraChiDinh.Text = "Chỉ định";

                        grvBNhankb_FocusedRowChanged(null, null);
                        EnableButton(true);
                    }
                }
            }
        }

        private void chkBNcho_CheckedChanged(object sender, EventArgs e)
        {
            TimKiem();
        }

        private void btnref_Click(object sender, EventArgs e)
        {
            labThongBaoBNCP.Text = ThongBaoBNChuyenPK();
        }

        private void grvChuyenKhoa_DataSourceChanged(object sender, EventArgs e)
        {
            grcvChuyenKhoa_FocusedRowChanged(null, null);
        }
        public void _getValue(bool a)
        {
            _ktmatkhau = a;
        }
        public bool _ktmatkhau = false;
        private void btnHuyDon_Click(object sender, EventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            if (!string.IsNullOrEmpty(txtIdDonThuoc.Text) && !DungChung.Ham.KT_RaVien(DaTaContext, _int_maBN))
            {
                int sta = 0;
                if (!string.IsNullOrEmpty(txtStatus.Text))
                    sta = Convert.ToInt32(txtStatus.Text);
                if (sta == 0)
                {
                    ChucNang.frm_CheckPass frm = new ChucNang.frm_CheckPass();
                    frm.ok = new ChucNang.frm_CheckPass._getdata(_getValue);
                    frm.ShowDialog();
                    if (_ktmatkhau)
                    {
                        try
                        {
                            int id = Convert.ToInt32(txtIdDonThuoc.Text);

                            var suact = DaTaContext.DThuoccts.Where(p => p.IDDon == id).ToList();
                            foreach (var item in suact)
                                item.Status = 2;
                            DaTaContext.SaveChanges();
                        }
                        catch (Exception ex)
                        {
                            MessageBox.Show("Lỗi hủy đơn: " + ex.Message);
                        }
                    }
                }
                else
                {
                    if (sta == 2)
                    {
                        ChucNang.frm_CheckPass frm = new ChucNang.frm_CheckPass();
                        frm.ok = new ChucNang.frm_CheckPass._getdata(_getValue);
                        frm.ShowDialog();
                        if (_ktmatkhau)
                        {
                            try
                            {
                                int id = Convert.ToInt32(txtIdDonThuoc.Text);

                                var suact = DaTaContext.DThuoccts.Where(p => p.IDDon == id).ToList();
                                foreach (var item in suact)
                                    item.Status = 0;
                                DaTaContext.SaveChanges();
                            }
                            catch (Exception ex)
                            {
                                MessageBox.Show("Lỗi bỏ hủy : " + ex.Message);
                            }
                        }
                    }
                    else
                    {
                        MessageBox.Show("Đơn đã được xuất, bạn không thể hủy");
                    }
                }
            }
        }

        private void lupKhoaDT_EditValueChanging(object sender, DevExpress.XtraEditors.Controls.ChangingEventArgs e)
        {

        }

        private void btnXNhanNGhiOm_Click(object sender, EventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            if (!string.IsNullOrEmpty(txtIdkb.Text))
            {
                QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                int id = Convert.ToInt32(txtIdkb.Text);
                var idkb = _data.BNKBs.Where(p => p.MaBNhan == _int_maBN).OrderByDescending(p => p.IDKB).ToList();
                if (idkb.Count > 0)
                {
                    if (id >= idkb.First().IDKB)
                    {
                        ChucNang.frm_NhapNghiOm frm = new ChucNang.frm_NhapNghiOm(id);
                        frm.ShowDialog();
                    }
                    else
                    {
                        MessageBox.Show("Chỉ Khoa khám bệnh cuối cùng của BN mới có quyền xác nhận");
                    }
                }
            }

        }

        private void btnBBHoiChan_Click(object sender, EventArgs e)
        {

            int idkb = 0;

            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            if (txtIdkb.Text != "" && !String.IsNullOrEmpty(txtIdkb.Text))
            {
                idkb = Convert.ToInt32(txtIdkb.Text);
            }
            else idkb = 0;
            FormNhap.Frm_BbHoiChan frm = new FormNhap.Frm_BbHoiChan(_int_maBN, idkb);
            frm.ShowDialog();
        }

        private void cboBuong_SelectedIndexChanged(object sender, EventArgs e)
        {
            // add buồng, giường
            int makp = 0;
            if (lupKhoaKhamkb.EditValue != null)
                makp = Convert.ToInt32(lupTimMaKP.EditValue);
            DateTime Ngayke = System.DateTime.Now.Date;
            Ngayke = DungChung.Ham.NgayTu(dtNgayKhamkb.DateTime);
            if (!string.IsNullOrEmpty(buonggiuong))
            {
                string _tenbuong = "-1";
                if (!string.IsNullOrEmpty(cboBuong.Text))
                    _tenbuong = cboBuong.Text;
                #region bỏ
                //string[] _bg = new string[20];
                //_bg = buonggiuong.Split(';');
                //int k = 0;
                //k = _bg.Length;
                //string[] _buong = new string[k];
                //for (int i = 0; i < k; i++)
                //{
                //    _buong[i] = "";
                //}

                //if (buonggiuong != null)
                //    _buong = buonggiuong.Split(';');
                //string _sobuong = "";
                //for (int i = 0; i < _buong.Length; i++)
                //{
                //    int l = _buong[i].IndexOf('{');
                //    string ktbuong = "";
                //    if (l > 0)
                //    {
                //        ktbuong = _buong[i].Remove(l);
                //    }

                //    if (ktbuong == (_tenbuong))
                //    {
                //        _sobuong = _buong[i];
                //        break;
                //    }
                //}

                //int j = _sobuong.IndexOf('{');
                //int m = _sobuong.IndexOf('}');
                //string _sogiuong = "";
                //if (j > 0)
                //{
                //    _sogiuong = _sobuong.Substring(j + 1, m - j - 1);
                //}
                //k = 0;
                //string[] _bg2 = new string[20];
                //if (!string.IsNullOrEmpty(_sogiuong))
                //{
                //    _bg2 = _sogiuong.Split(',');
                //    k = _bg2.Length;
                //}
                //else
                //{
                //    k = 0;
                //}
                //string[] _giuong = new string[k];
                //for (int i = 0; i < k; i++)
                //{
                //    _giuong[i] = "";

                //}
                //_giuong = _sogiuong.Split(',');
                #endregion
                List<QLBV.FormThamSo.frm_NhapBuongGiuongKeKoach.dsBuongGiuong> _lBuongG = new List<QLBV.FormThamSo.frm_NhapBuongGiuongKeKoach.dsBuongGiuong>();
                string nam = Convert.ToString(Ngayke.Year);
                _lBuongG = QLBV.FormThamSo.frm_NhapBuongGiuongKeKoach.getBuongGiuong(DaTaContext, makp, nam);
                var _lGiuong = _lBuongG.Where(p => p.buong == _tenbuong).Select(p => p.giuongTT).ToList();
                cboGiuong.Properties.Items.Clear();
                cboGiuong.Properties.Items.Add("");
                cboGiuong.Properties.Items.AddRange(_lGiuong);
            }
            else
            {
                cboBuong.Properties.Items.Clear();
                cboBuong.Properties.Items.Add("");
            }
        }

        private void labelControl6_Click(object sender, EventArgs e)
        {

        }

        private void labelControl10_Click(object sender, EventArgs e)
        {

        }
        int _Statusct = 0;
        private void grvDonThuocct_CellValueChanging(object sender, DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs e)
        {
            _slTonChuaLuu = 0;
            _slTonDaLuu = 0;
            if (grvDonThuocct.GetFocusedRowCellValue(colIDDonct) == null || (grvDonThuocct.GetFocusedRowCellValue(colIDDonct) != null && Convert.ToInt32(grvDonThuocct.GetFocusedRowCellValue(colIDDonct)) <= 0))
            {
                if (grvDonThuocct.GetFocusedRowCellValue(colSoLuong) != null)
                    _slTonChuaLuu = Convert.ToDouble(grvDonThuocct.GetFocusedRowCellValue(colSoLuong));
            }
            else
            {
                if (grvDonThuocct.GetFocusedRowCellValue(colIDDonct) != null && Convert.ToInt32(grvDonThuocct.GetFocusedRowCellValue(colIDDonct)) <= 0)
                {
                    if (grvDonThuocct.GetFocusedRowCellValue(colSoLuong) != null)
                        _slTonDaLuu = Convert.ToDouble(grvDonThuocct.GetFocusedRowCellValue(colSoLuong));
                }
            }
            _Statusct = 0;
            if (e.Column.Name == "colStatusct" && xtraKeDon.Text.Contains("*"))
            {

                if (grvDonThuocct.GetFocusedRowCellValue(colStatusct) != null)
                    _Statusct = Convert.ToInt32(grvDonThuocct.GetFocusedRowCellValue(colStatusct));

            }

        }

        private void btnInPKCB_Click(object sender, EventArgs e)
        {

        }
        #region In phiếu công khai(tạm bỏ)
        //private void _InPhieuCKhai(int _int_maBN)
        //{

        //    List<l_CTThuoc> _ldthuocct = new List<l_CTThuoc>();
        //    DateTime ngayvao = System.DateTime.Now.Date;
        //    DateTime ngayra = System.DateTime.Now.Date;
        //    QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
        //    frmIn frm = new frmIn();
        //    int _idnhomthuoc = 4, _idnhomVT = 10;
        //    //var nhom = data.NhomDVs.ToList();
        //    //if (nhom.Where(p => p.TenNhomCT == ("Thuốc trong danh mục BHYT")).ToList().Count > 0)
        //    //    _idnhomthuoc = nhom.Where(p => p.TenNhomCT == ("Thuốc trong danh mục BHYT")).ToList().First().IDNhom;
        //    //if (nhom.Where(p => p.TenNhomCT == ("Vật tư y tế trong danh mục BHYT")).ToList().Count > 0)
        //    //    _idnhomVT = nhom.Where(p => p.TenNhomCT == ("Vật tư y tế trong danh mục BHYT")).ToList().First().IDNhom;

        //    if (DungChung.Bien.MaBV != "20001")
        //    {
        //        DialogResult _result = MessageBox.Show("Thống kê cả VTYT tiêu hao trên 1 mẫu?", "Phiếu công khai thuốc", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
        //        if (_result == DialogResult.No)
        //            _idnhomVT = _idnhomthuoc;
        //    }
        //    var qtong = (from dthc in data.DThuocs.Where(p => p.MaBNhan == _int_maBN)
        //                 join dtct in data.DThuoccts on dthc.IDDon equals dtct.IDDon
        //                 join dv in data.DichVus on dtct.MaDV equals dv.MaDV
        //                 join tn in data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
        //                 join nhomdv in data.NhomDVs on tn.IDNhom equals nhomdv.IDNhom
        //                 where (tn.IDNhom == _idnhomthuoc || tn.IDNhom == _idnhomVT)
        //                 select new {nhomdv.IDNhom, dthc, dtct, dv.TenDV, dv.DonVi, nhomdv.TenNhom, dv.TenRG }).ToList();

        //    int sonhom = qtong.Select(p => p.IDNhom).Distinct().ToList().Count;

        //    for (int f = 0;f<sonhom; f++)
        //    {
        //        if (_int_maBN > 0)
        //        {
        //            var dt_rep = (from dt in qtong.Where(p=>f==0? p.IDNhom==_idnhomthuoc: p.IDNhom==_idnhomVT)
        //                          group dt by new { dt.dtct.DonGia, dt.dthc.NgayKe, dt.dtct.DonVi, dt.dtct.MaDV } into kq
        //                          select new { kq.Key.DonGia, kq.Key.DonVi, kq.Key.NgayKe, kq.Key.MaDV, SoLuong = kq.Sum(p => p.dtct.SoLuong) }).Where(p => p.SoLuong != 0).ToList();

        //            foreach (var a in dt_rep)
        //            {
        //                l_CTThuoc moi = new l_CTThuoc();
        //                moi.MaDV = a.MaDV == null ? 0 : a.MaDV.Value;
        //                moi.NgayKe = a.NgayKe.Value;
        //                moi.SoLuong = a.SoLuong;
        //                moi.DonGia = a.DonGia;
        //                moi.DonVi = a.DonVi;
        //                _ldthuocct.Add(moi);
        //            }
        //            string[] _songay;


        //            var ngaykd = (from nk in qtong.Where(p => p.dthc.PLDV == 1).Where(p => f == 0 ? p.IDNhom == _idnhomthuoc : p.IDNhom == _idnhomVT)

        //                          where nk.dthc.NgayKe != null
        //                          select nk.dthc.NgayKe).ToList().Select(x => new { x.Value.Date }).Distinct().OrderBy(p => p.Date).ToList();
        //            int i = 0;
        //            _songay = new string[ngaykd.Count];
        //            foreach (var a in ngaykd)
        //            {
        //                _songay[i] = a.Date.ToShortDateString();
        //                i++;
        //            }
        //            var par = (from bn in data.BenhNhans.Where(p => p.MaBNhan == _int_maBN)
        //                       join kb in data.BNKBs.OrderByDescending(p => p.IDKB) on bn.MaBNhan equals kb.MaBNhan
        //                       join vv in data.VaoViens on bn.MaBNhan equals vv.MaBNhan
        //                       //join rv in data.RaViens on bn.MaBNhan equals rv.MaBNhan
        //                       select new
        //                       {
        //                           GTinh = bn.GTinh == 0 ? "Nữ" : "Nam",
        //                           kb.Buong,
        //                           kb.Giuong,
        //                           bn.DTuong,
        //                           bn.MaBNhan,
        //                           bn.DChi,
        //                           bn.Tuoi,
        //                           bn.SThe,
        //                           bn.MaCS,
        //                           bn.NoiTru,
        //                           bn.HanBHTu,
        //                           bn.HanBHDen,
        //                           kb.MaICD,
        //                           kb.ChanDoan,
        //                           vv.NgayVao,
        //                           kb.IDKB,
        //                           kb.BenhKhac,
        //                           bn.NgaySinh,
        //                           bn.ThangSinh,
        //                           bn.NamSinh,
        //                           bn.NNhap,
        //                       }).OrderByDescending(p => p.IDKB).ToList();



        //            for (int j = 0; j < _songay.Length; j += 17)
        //            {
        //                bool _InCongKhoan = false;
        //                if (j > _songay.Length - 2)
        //                    _InCongKhoan = true;
        //                int m = 0;
        //                string[] _songayT1 = new string[18];
        //                for (int l = 0; l < 18; l++)
        //                {
        //                    _songayT1[l] = "";
        //                }
        //                for (int k = j; k < _songay.Length; k++)
        //                {
        //                    if (m < 17)
        //                    {
        //                        _songayT1[m] = _songay[k];
        //                        m++;
        //                    }
        //                    else
        //                    {
        //                        break;
        //                    }
        //                }
        //                #region Mẫu cho 20001: bỏ mã ICD, thanh tiền, đơn giá, ghi chú
        //                if (DungChung.Bien.MaBV == "20001")
        //                {
        //                    BaoCao.rep_PhieuCongKhaiThuoc_TT23_20001 rep = new BaoCao.rep_PhieuCongKhaiThuoc_TT23_20001(_songayT1, _int_maBN, _ldthuocct, _InCongKhoan);
        //                    if (f == 1)
        //                        rep.cellTitle.Text = "Tên VTYT tiêu hao";
        //                    if (par.Count > 0)
        //                    {
        //                        ngayvao = DungChung.Ham.NgayTu(par.First().NgayVao.Value);
        //                        if (f == 1)
        //                            rep.colMauSo.Text = "Ms: 10/YHCT-2014";
        //                        rep.So.Value = "Số: ...........";
        //                        var khoa = (from kp in data.KPhongs join bnkb in data.BNKBs.Where(p => p.MaBNhan == _int_maBN) on kp.MaKP equals bnkb.MaKP select new { kp.TenKP, bnkb.IDKB }).OrderByDescending(p => p.IDKB).ToList();
        //                        if (khoa.Count > 0)
        //                            rep.Khoa.Value = khoa.First().TenKP.ToUpper();
        //                        rep.TenBN.Value = txtTenBenhNhan.Text.ToUpper();
        //                        rep.TuoiBN.Value = DungChung.Ham.TuoitheoThang(data, _int_maBN, DungChung.Bien.formatAge);

        //                        rep.TieuDe.Value =f==0? "PHIẾU CÔNG KHAI THUỐC":"PHIẾU CÔNG KHAI VẬT TƯ Y TẾ TIÊU HAO";
        //                        rep.GioiTinh.Value = par.First().GTinh;
        //                        rep.DiaChi.Value = par.First().DChi;
        //                        rep.SoThe.Value = par.First().SThe + " - " + par.First().MaCS;
        //                        if (par.First().DTuong == "BHYT")
        //                        {
        //                            rep.GTTu.Value = par.First().HanBHTu;
        //                            rep.GTDen.Value = par.First().HanBHDen;
        //                        }
        //                        else
        //                        {
        //                            rep.GTTu.Value = null;
        //                            rep.GTDen.Value = null;
        //                        }
        //                        rep.Buong.Value = par.First().Buong;
        //                        rep.Giuong.Value = par.First().Giuong;
        //                        rep.NgayVV.Value = par.First().NgayVao;
        //                        rep.DiaChi.Value = DungChung.Ham.GetICDstr(par.First().ChanDoan + par.First().BenhKhac);
        //                        //rep.MaChanDoan.Value = par.First().MaICD;
        //                        var rvien = data.RaViens.Where(p => p.MaBNhan == _int_maBN).ToList();
        //                        if (rvien.Count > 0)
        //                        {
        //                            rep.NgayRV.Value = rvien.First().NgayRa;
        //                        }
        //                        double thuoc = 0;
        //                        var q = (from dt in qtong.Where(p => p.dthc.PLDV == 1).Where(p => f == 0 ? p.IDNhom == _idnhomthuoc : p.IDNhom == _idnhomVT)

        //                                 //where (dt.MaKP== (DungChung.Bien.MaKP))
        //                                 group dt by new { dt.TenNhom, dt.dtct.MaDV, dt.TenDV, dt.TenRG, dt.dtct.DonVi, dt.dtct.DonGia } into kq
        //                                 select new
        //                                 {
        //                                     MaDV = kq.Key.MaDV,
        //                                     kq.Key.DonGia,
        //                                     TenNhomDV = kq.Key.TenNhom.ToUpper(),
        //                                     TenDV =  kq.Key.TenDV,
        //                                     DonVi = kq.Key.DonVi,
        //                                     SoLuongT = kq.Sum(p => p.dtct.SoLuong),
        //                                     ThanhTienT = kq.Sum(p => p.dtct.ThanhTien)
        //                                 }).Where(p => p.SoLuongT != 0).ToList();
        //                        if (q.Count > 0)
        //                            thuoc = q.Sum(p => p.ThanhTienT);
        //                        rep.DataSource = q.ToList();
        //                        rep.BindingData();
        //                        rep.CreateDocument();
        //                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
        //                        frm.ShowDialog();

        //                    }
        //                    else
        //                    {
        //                        MessageBox.Show("Bệnh nhân chưa có khám bệnh vào viện");
        //                    }

        //                }
        //                #endregion
        //                #region BV khác
        //                else
        //                {
        //                    BaoCao.rep_PhieuCongKhaiThuoc_TT23 rep = new BaoCao.rep_PhieuCongKhaiThuoc_TT23(_songayT1, _int_maBN, _ldthuocct, _InCongKhoan);

        //                    if (par.Count > 0)
        //                    {
        //                        ngayvao = DungChung.Ham.NgayTu(par.First().NgayVao.Value);

        //                        var khoa = (from kp in data.KPhongs join bnkb in data.BNKBs.Where(p => p.MaBNhan == _int_maBN) on kp.MaKP equals bnkb.MaKP select new { kp.TenKP, bnkb.IDKB }).OrderByDescending(p => p.IDKB).ToList();
        //                        if (khoa.Count > 0)
        //                            rep.Khoa.Value = khoa.First().TenKP.ToUpper();
        //                        rep.TenBN.Value = txtTenBenhNhan.Text.ToUpper();
        //                        rep.TuoiBN.Value = DungChung.Ham.TuoitheoThang(data, _int_maBN, DungChung.Bien.formatAge);

        //                        rep.TieuDe.Value = f == 0 ? "PHIẾU CÔNG KHAI THUỐC" : "PHIẾU CÔNG KHAI VẬT TƯ Y TẾ TIÊU HAO";
        //                        rep.GioiTinh.Value = par.First().GTinh;
        //                        rep.DiaChi.Value = par.First().DChi;
        //                        rep.SoThe.Value = par.First().SThe + " - " + par.First().MaCS;
        //                        if (par.First().DTuong == "BHYT")
        //                        {
        //                            rep.GTTu.Value = par.First().HanBHTu;
        //                            rep.GTDen.Value = par.First().HanBHDen;
        //                        }
        //                        else
        //                        {
        //                            rep.GTTu.Value = null;
        //                            rep.GTDen.Value = null;
        //                        }
        //                        rep.Buong.Value = par.First().Buong;
        //                        rep.Giuong.Value = par.First().Giuong;
        //                        rep.NgayVV.Value = par.First().NgayVao;
        //                        rep.ChanDoan.Value = DungChung.Ham.GetICDstr(par.First().ChanDoan + par.First().BenhKhac);
        //                        rep.MaChanDoan.Value = par.First().MaICD;
        //                        var rvien = data.RaViens.Where(p => p.MaBNhan == _int_maBN).ToList();
        //                        if (rvien.Count > 0)
        //                        {
        //                            rep.NgayRV.Value = rvien.First().NgayRa;
        //                        }
        //                        double thuoc = 0;
        //                        var q = (from dt in qtong.Where(p => p.dthc.PLDV == 1).Where(p => f == 0 ? p.IDNhom == _idnhomthuoc : p.IDNhom == _idnhomVT)

        //                                 //where (dt.MaKP== (DungChung.Bien.MaKP))
        //                                 group dt by new { dt.TenNhom, dt.dtct.MaDV, dt.TenDV, dt.TenRG, dt.dtct.DonVi, dt.dtct.DonGia } into kq
        //                                 select new
        //                                 {
        //                                     MaDV = kq.Key.MaDV,
        //                                     kq.Key.DonGia,
        //                                     TenNhomDV = kq.Key.TenNhom.ToUpper(),
        //                                     TenDV = (DungChung.Bien.MaBV == "24009" || _maCQCQ == "24009" || DungChung.Bien.MaBV == "01830") ? (kq.Key.TenRG ?? "") : kq.Key.TenDV,
        //                                     DonVi = kq.Key.DonVi,
        //                                     SoLuongT = kq.Sum(p => p.dtct.SoLuong),
        //                                     ThanhTienT = kq.Sum(p => p.dtct.ThanhTien)
        //                                 }).Where(p => p.SoLuongT != 0).ToList();
        //                        if (q.Count > 0)
        //                            thuoc = q.Sum(p => p.ThanhTienT);
        //                        rep.DataSource = q.ToList();
        //                        rep.BindingData();
        //                        rep.CreateDocument();
        //                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
        //                        frm.ShowDialog();

        //                    }
        //                    else
        //                    {
        //                        MessageBox.Show("Bệnh nhân chưa có khám bệnh vào viện");
        //                    }
        //                }
        //            }
        //        }
        //                #endregion
        //        else
        //        {
        //            MessageBox.Show("Bạn chưa chọn BN hoặc không có BN");
        //        }
        //    }

        //    //
        //}
        #endregion
        #region Phiếu dịch vụ - kỹ thuật 20001
        private void InPhieuDV_KT_20001(int _MaBN)
        {
            List<l_CTThuoc> _ldthuocct = new List<l_CTThuoc>();
            DateTime ngayvao = System.DateTime.Now.Date;
            DateTime ngayra = System.DateTime.Now.Date;
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            frmIn frm = new frmIn();
            int _idnhom1 = 8, _idnhom2 = 15, _idnhom3 = 14;

            var qtong = (from dthc in data.DThuocs.Where(p => p.MaBNhan == _maBN)
                         join dtct in data.DThuoccts on dthc.IDDon equals dtct.IDDon
                         join dv in data.DichVus on dtct.MaDV equals dv.MaDV
                         join tn in data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                         join nhomdv in data.NhomDVs on tn.IDNhom equals nhomdv.IDNhom
                         where (tn.IDNhom == _idnhom1 || tn.IDNhom == _idnhom2 || tn.IDNhom == _idnhom3)
                         select new { nhomdv.IDNhom, dthc, dtct, dv.TenDV, dv.DonVi, nhomdv.TenNhom, dv.TenRG }).ToList();
            if (_maBN > 0)
            {
                var dt_rep = (from dt in qtong
                              group dt by new { dt.dtct.DonGia, dt.dtct.NgayNhap, dt.dtct.DonVi, dt.dtct.MaDV, dt.IDNhom } into kq
                              select new { kq.Key.DonGia, kq.Key.IDNhom, kq.Key.DonVi, kq.Key.NgayNhap, kq.Key.MaDV, SoLuong = kq.Sum(p => p.dtct.SoLuong) }).Where(p => p.SoLuong != 0).ToList();

                foreach (var a in dt_rep)
                {
                    l_CTThuoc moi = new l_CTThuoc();
                    moi.MaDV = a.MaDV == null ? 0 : a.MaDV.Value;
                    moi.NgayKe = a.NgayNhap.Value;
                    moi.SoLuong = a.SoLuong;
                    moi.DonGia = a.DonGia;
                    moi.DonVi = a.DonVi;
                    moi.IDNhom = a.IDNhom;
                    _ldthuocct.Add(moi);
                }
                string[] _songay;


                var ngaykd = (from nk in qtong.Where(p => p.dthc.PLDV == 2)
                              where nk.dthc.NgayKe != null
                              select nk.dtct.NgayNhap).ToList().Select(x => new { x.Value.Date }).Distinct().OrderBy(p => p.Date).ToList();
                int i = 0;

                _songay = new string[ngaykd.Count];
                foreach (var a in ngaykd)
                {
                    _songay[i] = a.Date.ToShortDateString();
                    i++;
                }
                var par = (from bn in data.BenhNhans.Where(p => p.MaBNhan == _maBN)
                           join kb in data.BNKBs.OrderByDescending(p => p.IDKB) on bn.MaBNhan equals kb.MaBNhan
                           join vv in data.VaoViens on bn.MaBNhan equals vv.MaBNhan
                           select new
                           {
                               GTinh = bn.GTinh == 0 ? "Nữ" : "Nam",
                               kb.Buong,
                               kb.Giuong,
                               bn.DTuong,
                               bn.MaBNhan,
                               bn.DChi,
                               bn.Tuoi,
                               bn.SThe,
                               bn.MaCS,
                               bn.NoiTru,
                               bn.HanBHTu,
                               bn.HanBHDen,
                               kb.MaICD,
                               kb.ChanDoan,
                               vv.NgayVao,
                               kb.IDKB,
                               kb.BenhKhac,
                               bn.NgaySinh,
                               bn.ThangSinh,
                               bn.NamSinh,
                               bn.NNhap,
                               kb.ChanDoanYHCT,
                               kb.BenhKhacYHCT
                           }).OrderByDescending(p => p.IDKB).ToList();

                bool _InCongKhoan = false;
                string[] _songayT1 = new string[18];
                for (int j = 0; j < _songay.Length; j += 17)
                {
                    if (j > _songay.Length - 2)
                        _InCongKhoan = true;

                    int m = 0;
                    for (int l = 0; l < 18; l++)
                    {
                        _songayT1[l] = "";
                    }
                    for (int k = j; k < _songay.Length; k++)
                    {
                        if (m < 18)
                        {
                            _songayT1[m] = _songay[k];
                            m++;
                        }
                        else
                        {
                            break;
                        }
                    }

                    BaoCao.Rep_PhieuTHDV_KT rep = new BaoCao.Rep_PhieuTHDV_KT(_songayT1, _MaBN, _ldthuocct, _InCongKhoan);
                    if (par.Count > 0)
                    {
                        ngayvao = DungChung.Ham.NgayTu(par.First().NgayVao.Value);
                        var khoa = (from kp in data.KPhongs join bnkb in data.BNKBs.Where(p => p.MaBNhan == _MaBN) on kp.MaKP equals bnkb.MaKP select new { kp.TenKP, bnkb.IDKB }).OrderByDescending(p => p.IDKB).ToList();
                        if (khoa.Count > 0)
                            rep.KHOA.Value = khoa.First().TenKP.ToUpper();
                        var sovv = data.VaoViens.Where(p => p.MaBNhan == _MaBN).Select(p => p.SoVV).FirstOrDefault();
                        if (sovv != null)
                            rep.sovv.Value = sovv;
                        rep.TENCQ.Value = DungChung.Bien.TenCQ.ToUpper();
                        rep.CQCQ.Value = DungChung.Bien.TenCQCQ.ToUpper();
                        rep.TENBN.Value = txtTenBenhNhan.Text.ToUpper();
                        rep.TUOI.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.TinhTuoiBenhNhan(data, _maBN) : DungChung.Ham.TuoitheoThang(data, _MaBN, DungChung.Bien.formatAge);
                        rep.GTINH.Value = par.First().GTinh;
                        rep.BUONG.Value = par.First().Buong;
                        rep.GIUONG.Value = par.First().Giuong;
                        rep.NGAYVAO.Value = par.First().NgayVao.Value.ToShortDateString();
                        string chandoan = "";
                        if (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                            chandoan = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(par.First().ChanDoan + ";" + par.First().BenhKhac), DungChung.Ham.FreshString(par.First().ChanDoanYHCT + ";" + par.First().BenhKhacYHCT));// par.First().ChanDoanYHCT + ";" + par.First().BenhKhacYHCT + "[" + par.First().ChanDoan + ";" + par.First().BenhKhac + "]";
                        else
                            chandoan = par.First().ChanDoan + ";" + par.First().BenhKhac;
                        rep.CHANDOAN.Value = DungChung.Ham.FreshString(chandoan);
                        //rep.MaChanDoan.Value = par.First().MaICD;
                        var rvien = data.RaViens.Where(p => p.MaBNhan == _MaBN).ToList();
                        if (rvien.Count > 0)
                        {
                            rep.NGAYRA.Value = rvien.First().NgayRa.Value.ToShortDateString();
                        }
                        double thuoc = 0;
                        var q = (from dt in qtong.Where(p => p.dthc.PLDV == 2).Where(p => p.IDNhom == _idnhom1 || p.IDNhom == _idnhom2 || p.IDNhom == _idnhom3)
                                 group dt by new { dt.dtct.MaDV, dt.TenDV, dt.dtct.DonVi, dt.dtct.DonGia } into kq
                                 select new
                                 {
                                     MaDV = kq.Key.MaDV,
                                     kq.Key.DonGia,
                                     TenDV = kq.Key.TenDV,
                                     DonVi = kq.Key.DonVi,
                                     SoLuongT = kq.Sum(p => p.dtct.SoLuong),
                                     ThanhTienT = kq.Sum(p => p.dtct.ThanhTien)
                                 }).Where(p => p.SoLuongT != 0).ToList();
                        if (q.Count > 0)
                            thuoc = q.Sum(p => p.ThanhTienT);
                        rep.DataSource = q.ToList();
                        rep.BindingData();
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                }
            }
            else
            {
                MessageBox.Show("Bạn chưa chọn BN hoặc không có BN");
            }
        }

        #endregion

        private void btn_ThuNghiem_Click(object sender, EventArgs e)
        {

        }
        public void getICD(string _maicd)
        {
            lupMaICDkb.EditValue = _maicd;
        }
        public void getICD2(string _maicd)
        {

            LupICD2.EditValue = _maicd;
            string tenICD = lICD.Where(p => p.MaICD == _maicd).Select(p => p.TenICD).FirstOrDefault();
            if (string.IsNullOrEmpty(txtBenhKhac2.Text) && tenICD != null)
                txtBenhKhac2.Text = tenICD;


        }
        public void getICD3(string _maicd)
        {

            LupICD3.EditValue = _maicd;
            string tenICD = lICD.Where(p => p.MaICD == _maicd).Select(p => p.TenICD).FirstOrDefault();
            if (string.IsNullOrEmpty(txtBenhKhac3.Text) && tenICD != null)
                txtBenhKhac3.Text = tenICD;

        }
        public void getICD44(string _maicd)
        {

            LupICD44.EditValue = _maicd;
            string tenICD = lICD.Where(p => p.MaICD == _maicd).Select(p => p.TenICD).FirstOrDefault();
            if (string.IsNullOrEmpty(txtBenhKhac44.Text) && tenICD != null)
                txtBenhKhac44.Text = tenICD;

        }
        public void getICD55(string _maicd)
        {

            LupICD55.EditValue = _maicd;
            string tenICD = lICD.Where(p => p.MaICD == _maicd).Select(p => p.TenICD).FirstOrDefault();
            if (string.IsNullOrEmpty(txtBenhKhac55.Text) && tenICD != null)
                txtBenhKhac55.Text = tenICD;

        }
        class LSICD
        {
            public string ICD { get; set; }
            public string TenICD { get; set; }
        }
        List<LSICD> _lst = new List<LSICD>();
        public void getICDtest()
        {
            _lst.Clear();
            List<string> iCD = LupICD4.Text.Split(';').ToList();
            List<string> tenICD = new List<string>();
            foreach (var a in iCD)
            {
                LSICD item = new LSICD();
                item.ICD = a.ToString();
                _lst.Add(item);
            }
            foreach (var item in _lst)
            {
                if (!string.IsNullOrEmpty(item.ICD))
                {
                    string i = lICD.Where(p => p.MaICD == item.ICD).Select(p => p.TenICD).FirstOrDefault();
                    tenICD.Add(i);
                }
            }
            txtBenhKhac.Text = txtBenhKhac4.Text = string.Join(";", tenICD.ToArray());


        }
        public void getICD4(string _maicd)
        {
            string a = "";
            isChonNhieuBenhKhac = true;
            if (!string.IsNullOrEmpty(LupICD4.Text.Trim()))
                a = ";";
            LupICD4.Text = "";
            LupICD4.Text += /*a +*/ _maicd;
            //if (DungChung.Bien.MaBV != "30007" && DungChung.Bien.MaBV != "30340")
            //{
            List<string> iCD = LupICD4.Text.Split(';').ToList();
            List<string> tenICD = new List<string>();
            foreach (var item in iCD)
            {
                string i = lICD.Where(p => p.MaICD == item).Select(p => p.TenICD).FirstOrDefault();
                tenICD.Add(i);
            }

            txtBenhKhac.Text = txtBenhKhac4.Text = txtBenhKhac.ToolTip = txtBenhKhac4.ToolTip = string.Join(";", tenICD.ToArray());
            LupICD4.ToolTip = LupICD4.Text;
            //}
        }

        public void getICDKhac(string _maicd)
        {
            lupKhac.EditValue = _maicd;
            string tenICD = lICD.Where(p => p.MaICD == _maicd).Select(p => p.TenICD).FirstOrDefault();
            if (string.IsNullOrEmpty(txtBenhKhac1.Text) && tenICD != null)
            {
                txtBenhKhac1.Text = tenICD;

            }
        }
        private void btnTK_ICD_Click(object sender, EventArgs e)
        {
            if (TTLuu == 1 || TTLuu == 2)
            {
                FormThamSo.frm_TimKiem frm = new FormThamSo.frm_TimKiem();
                frm.GetData = new FormThamSo.frm_TimKiem._getstring(getICD);
                frm.ShowDialog();
            }
        }

        private void btnHenKham_Click(object sender, EventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            if (!string.IsNullOrEmpty(txtIdkb.Text))
            {
                QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                int id = Convert.ToInt32(txtIdkb.Text);
                var idkb = _data.BNKBs.Where(p => p.MaBNhan == _int_maBN).OrderByDescending(p => p.IDKB).ToList();
                if (idkb.Count > 0)
                {
                    if (id >= idkb.First().IDKB)
                    {
                        FormThamSo.frm_HenKham frm = new FormThamSo.frm_HenKham(id);
                        frm.ShowDialog();
                    }
                    else
                    {
                        MessageBox.Show("Chỉ Khoa khám bệnh cuối cùng của BN mới có quyền hẹn tái khám");
                    }
                }
            }
        }

        private void grvDonThuocdt_RowStyle(object sender, DevExpress.XtraGrid.Views.Grid.RowStyleEventArgs e)
        {

            if (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
            {

                if (grvDonThuocdt.GetRowCellValue(e.RowHandle, colDaLinh) != null)
                {
                    string loaiduoc = grvDonThuocdt.GetRowCellValue(e.RowHandle, colDaLinh).ToString();
                    if (loaiduoc == "6")
                        e.Appearance.ForeColor = Color.Blue;
                    else
                        e.Appearance.ForeColor = Color.Black;

                }

                if (DungChung.Bien.MaBV == "14017")
                {
                    if (grvDonThuocdt.GetRowCellValue(e.RowHandle, colMaKXuat) != null)
                    {
                        int check = Convert.ToInt32(grvDonThuocdt.GetRowCellValue(e.RowHandle, colMaKXuat));
                        if (check == 26)
                        {
                            e.Appearance.ForeColor = Color.Red; //Tây Y


                        }
                        else if (check == 27)
                        {
                            e.Appearance.ForeColor = Color.Green; //Đông Y

                        }


                    }

                    if (grvDonThuocdt.GetRowCellValue(e.RowHandle, colKieuDon) != null)
                    {
                        int KD = Convert.ToInt32(grvDonThuocdt.GetRowCellValue(e.RowHandle, colKieuDon));
                        if (KD == 2)
                            e.Appearance.Font = new Font(e.Appearance.Font, FontStyle.Strikeout);
                    }
                }

            }
            else
            {

                if (grvDonThuocdt.GetRowCellValue(e.RowHandle, colKieuDon) != null)
                {
                    int KD = Convert.ToInt32(grvDonThuocdt.GetRowCellValue(e.RowHandle, colKieuDon));
                    switch (KD)
                    {
                        case 0:
                            e.Appearance.ForeColor = Color.Blue;
                            break;
                        case 1:
                            e.Appearance.ForeColor = Color.DarkRed;
                            break;
                        case 2:
                            e.Appearance.ForeColor = Color.DimGray;
                            break;
                    }
                }


            }

            if (grvDonThuocdt.GetRowCellValue(e.RowHandle, colMuaNgoai) != null)
            {
                bool isMuaNgoai = Convert.ToBoolean(grvDonThuocdt.GetRowCellValue(e.RowHandle, colMuaNgoai));
                if (isMuaNgoai)
                {
                    e.Appearance.ForeColor = Color.Orange;
                }
            }
        }

        private void grvBNhankb_RowStyle(object sender, DevExpress.XtraGrid.Views.Grid.RowStyleEventArgs e)
        {

            if (grvBNhankb.GetRowCellValue(e.RowHandle, colStatusbn) != null)
            {
                string status = grvBNhankb.GetRowCellValue(e.RowHandle, colStatusbn).ToString();
                if (status == "0")//chưa khám
                    e.Appearance.ForeColor = Color.Magenta;
                //dung280516
                else if (status == "4") // mới chỉ định CLS nhưng chưa có kq đầy đủ
                    e.Appearance.ForeColor = Color.DimGray;
                else if (status == "5")// đã có KQ CLS
                    e.Appearance.ForeColor = Color.Maroon;

            }
        }



        private void btnThuPUThuoc_Click(object sender, EventArgs e)
        {

        }

        private void grcDonThuocct_ProcessGridKey(object sender, KeyEventArgs e)
        {
            //DevExpress.XtraGrid.GridControl gc = (DevExpress.XtraGrid.GridControl)sender;
            //DevExpress.XtraGrid.Views.Grid.GridView gv = (DevExpress.XtraGrid.Views.Grid.GridView)gc.FocusedView;

            //if (!e.Shift && (e.KeyCode == System.Windows.Forms.Keys.Tab) && (gv.FocusedColumn == gv.GetVisibleColumn(gv.Columns.Where(o => o.Visible).Count() - 1)))
            //{
            //    gv.FocusedColumn = gv.GetVisibleColumn(0);
            //    if (gv.FocusedRowHandle != gv.RowCount - 1)
            //        gv.FocusedRowHandle += 1;
            //    gv.ShowEditor();
            //    e.Handled = true;
            //}
            //if (e.Shift && (e.KeyCode == System.Windows.Forms.Keys.Tab) && (gv.FocusedColumn == gv.GetVisibleColumn(0)))
            //{
            //    gv.FocusedColumn = gv.GetVisibleColumn(gv.Columns.Where(o => o.Visible).Count() - 1);
            //    if (gv.FocusedRowHandle != 0)
            //        gv.FocusedRowHandle -= 1;
            //    gv.ShowEditor();
            //    e.Handled = true;
            //}
            if (e.KeyCode == Keys.F9)
            {
                grv = grvDonThuocct;
                column = colMaDVdt;
                popUpFormDichVu(sender, e);
            }

        }

        private GridView grv;// gridview hiển thị danh sách dịch vụ
        GridColumn column;
        /// <summary>
        /// 
        /// </summary>
        /// <param name="sender">Gridcontrol truyền vào</param>
        /// <param name="e"></param>
        /// <param name="column">Cột chứa danh mục dịch vụ cần cập nhật</param>
        private void popUpFormDichVu(object sender, KeyEventArgs e)
        {
            int makp = 0, makho = 0;
            if (lupKhoaKhamkb.EditValue != null)
                makp = Convert.ToInt32(lupKhoaKhamkb.EditValue);
            if (lupKhoXuat.EditValue != null)
                makho = Convert.ToInt32(lupKhoXuat.EditValue);
            frm_DsMaDV frm = new frm_DsMaDV(makp, makho, 1);
            frm.passMaDV = new frm_DsMaDV.PassMaDV(PassData);
            frm.ShowDialog();
        }
        private void PassData(int maDV)
        {
            if (grv.IsNewItemRow(grv.FocusedRowHandle) && grv.GetRow(grv.FocusedRowHandle) == null)
            {
                grv.AddNewRow();
            }
            grv.SetFocusedRowCellValue(column, maDV);
        }

        private void lupChanDoanKb_PreviewKeyDown(object sender, PreviewKeyDownEventArgs e)
        {
            if (e.KeyCode == Keys.F9)
            {
                FormThamSo.frm_TimKiem frm = new FormThamSo.frm_TimKiem();
                frm.GetData = new FormThamSo.frm_TimKiem._getstring(getICD);
                frm.ShowDialog();

            }
        }

        private void lupMaICDkb_PreviewKeyDown(object sender, PreviewKeyDownEventArgs e)
        {
            if (e.KeyCode == Keys.F9)
            {
                FormThamSo.frm_TimKiem frm = new FormThamSo.frm_TimKiem();
                frm.GetData = new FormThamSo.frm_TimKiem._getstring(getICD);
                frm.ShowDialog();

            }
        }

        private void LupICD2_EditValueChanged(object sender, EventArgs e)
        {
            if (TTLuu == 1 || TTLuu == 2)
            {
                if (!string.IsNullOrEmpty(LupICD2.Text))
                {
                    if (LupICD2.EditValue.ToString() == "0")
                    {
                        txtBenhKhac2.EditValue = "";
                        LupICD2.EditValue = "";
                        txtBenhPhu2.Text = "";
                    }
                    else
                    {
                        txtBenhKhac2.EditValue = lICD.Where(p => p.MaICD == LupICD2.EditValue.ToString()).Select(p => p.TenICD).FirstOrDefault();
                        txtBenhPhu2.EditValue = lICD.Where(p => p.MaICD == LupICD2.EditValue.ToString()).Select(p => p.TenICD).FirstOrDefault();
                    }


                }
                else
                {
                    txtBenhKhac2.EditValue = "";
                    txtBenhPhu2.Text = "";
                }
                if ((DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049") && LupICD2.EditValue != null && LupICD2.EditValue != "")
                {
                    btnPackageICD2.Enabled = true;
                }
                else
                    btnPackageICD2.Enabled = false;
            }
        }

        private void LupICD2_PreviewKeyDown(object sender, PreviewKeyDownEventArgs e)
        {
            if (e.KeyCode == Keys.F9)
            {
                FormThamSo.frm_TimKiem frm = new FormThamSo.frm_TimKiem();
                frm.GetData = new FormThamSo.frm_TimKiem._getstring(getICD2);
                frm.ShowDialog();

            }
        }
        public static int _indexToDT;
        usDieuTri_34019 usDieuTri34019 = new usDieuTri_34019();
        private void cboInToDieuTri_SelectedIndexChanged(object sender, EventArgs e)
        {
            try
            {
                int rs;
                int _int_maBN = 0;
                if (Int32.TryParse(txtMaBNhan.Text, out rs))
                    _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
                QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                int _makp = lupTimMaKP.EditValue != null ? Convert.ToInt32(lupTimMaKP.EditValue) : 0;
                if (cboInToDieuTri.SelectedIndex == 0)
                {
                    if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                    {
                        usDieuTri34019._PhieuDieuTri(_int_maBN, detungaydb.DateTime, dedenngaydb.DateTime, _makp);
                    }
                    else
                        _PhieuDieuTri(_int_maBN);
                }
                if (cboInToDieuTri.SelectedIndex == 1)
                {
                    if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                    {
                        usDieuTri34019.isToDieuTriYHCT_14018 = true;
                        frm_usDieuTri_NhapNgayDieuTri frm = new frm_usDieuTri_NhapNgayDieuTri(usDieuTri34019.PhieuDieuTri_YHCT_14018, _int_maBN, _makp);
                        frm.ShowDialog();
                    }
                    else
                        _PhieuDieuTri_YHCT(_int_maBN);
                }
                if (cboInToDieuTri.SelectedIndex == 2)
                {
                    _PhieuDieuTri_YHCT_QD1941(_int_maBN);
                }
                if (cboInToDieuTri.SelectedIndex == 3)
                {
                    frm_usDieuTri_NhapNgayDieuTri frm = new frm_usDieuTri_NhapNgayDieuTri(_PhieuDieuTri_YHCT_QD1941_Gop, _int_maBN);
                    frm.ShowDialog();
                }
                if (cboInToDieuTri.SelectedIndex == 4)
                {
                    frm_usDieuTri_NhapNgayDieuTri frm = new frm_usDieuTri_NhapNgayDieuTri(_PhieuDieuTri_Gop_BoSung, _int_maBN);
                    frm.repositoryItemDateEdit1.DisplayFormat.FormatType = FormatType.Custom;
                    frm.repositoryItemDateEdit1.DisplayFormat.FormatString = "dd/MM/yyyy HH:mm";
                    frm.repositoryItemDateEdit1.EditFormat.FormatType = FormatType.Custom;
                    frm.repositoryItemDateEdit1.EditFormat.FormatString = "dd/MM/yyyy HH:mm";
                    frm.repositoryItemDateEdit1.Mask.EditMask = "dd/MM/yyyy HH:mm";
                    frm.ShowDialog();
                }
                if (cboInToDieuTri.SelectedIndex == 5)
                {
                    _indexToDT = cboInToDieuTri.SelectedIndex;
                    frm_usDieuTri_NhapNgayDieuTri frm = new frm_usDieuTri_NhapNgayDieuTri(_PhieuDieuTri_Gop_BoSung, _int_maBN);
                    frm.repositoryItemDateEdit1.DisplayFormat.FormatType = FormatType.Custom;
                    frm.repositoryItemDateEdit1.DisplayFormat.FormatString = "dd/MM/yyyy HH:mm";
                    frm.repositoryItemDateEdit1.EditFormat.FormatType = FormatType.Custom;
                    frm.repositoryItemDateEdit1.EditFormat.FormatString = "dd/MM/yyyy HH:mm";
                    frm.repositoryItemDateEdit1.Mask.EditMask = "dd/MM/yyyy HH:mm";
                    frm.ShowDialog();
                }
                cboInToDieuTri.SelectedIndex = -1;
            }
            finally
            {
                usDieuTri34019.isToDieuTriYHCT_14018 = false;
            }
        }

        public class ChamSocADO
        {
            public string TenCB { get; set; }
            public DateTime? NgayNhap { get; set; }
            public string DienBien1 { get; set; }
            public string Ngay { get; set; }
            public string Gio { get; set; }
            public string YLenh { get; set; }

        }

        void _inPhieuChamSoc(QLBV_Database.QLBVEntities _data, int _mabn, int _makp)
        {
            DateTime tungay = DungChung.Bien.MaBV == "30007" ? detungaycs.DateTime : DungChung.Ham.NgayTu(detungaycs.DateTime);
            DateTime Denngay = DungChung.Bien.MaBV == "30007" ? dedenngaycs.DateTime : DungChung.Ham.NgayDen(dedenngaycs.DateTime);
            var _ttbn = _data.BenhNhans.Where(p => p.MaBNhan == _mabn).FirstOrDefault();
            var _bnkb = _data.BNKBs.Where(p => p.MaBNhan == _mabn).Where(p => p.MaKP == _makp).OrderByDescending(o => o.IDKB).ToList();
            if (DungChung.Bien.MaBV != "20001" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")//30007 về lại sử dụng mẫu chung 1508
            {

                BaoCao.rep_PhieuChamSoc rep = new BaoCao.rep_PhieuChamSoc();
                frmIn frm = new frmIn();
                if (_ttbn != null)
                {
                    rep.CQCQ.Value = DungChung.Bien.TenCQCQ.ToUpper();
                    rep.CQ.Value = DungChung.Bien.TenCQ.ToUpper();
                    rep.TENBN.Value = _ttbn.TenBNhan.ToUpper();
                    rep.TUOI.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.TinhTuoiBenhNhan(_data, _mabn) : _ttbn.Tuoi.ToString();

                    if (DungChung.Bien.MaBV == "24012")
                    {
                        rep.TUOI.Value = DungChung.Ham.TuoitheoThang(_data, _mabn, DungChung.Bien.formatAge_24012);
                        if (_ttbn.GTinh == 1)
                        {
                            rep.gioitinh.Text = "Giới tính: Nam";
                            rep.gioitinh1.Text = "Giới tính: Nam";
                            rep.gioitinh3.Text = "Giới tính: Nam";
                        }
                        else
                        {
                            rep.gioitinh.Text = "Giới tính: Nữ";
                            rep.gioitinh1.Text = "Giới tính: Nữ";
                            rep.gioitinh3.Text = "Giới tính: Nữ";
                        }
                    }
                    else
                    {
                        rep.txttnam.Text = _ttbn.GTinh == 1 ? "/" : "";
                        rep.txttnu.Text = _ttbn.GTinh == 0 ? "/" : "";

                        rep.lineNam.Text = _ttbn.GTinh == 0 ? "/" : "";
                        rep.lineNu.Text = _ttbn.GTinh == 1 ? "/" : "";

                        rep.colnam.Text = _ttbn.GTinh == 0 ? "/" : "";
                        rep.colnu.Text = _ttbn.GTinh == 1 ? "/" : "";
                    }
                }
                if (_bnkb != null && _bnkb.Count > 0)
                {
                    rep.GIUONG.Value = _bnkb.FirstOrDefault().Giuong;
                    rep.BUONG.Value = _bnkb.FirstOrDefault().Buong;
                    rep.CHANDOAN.Value = (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017") ? DungChung.Ham.GetChanDoanKB(_data, _mabn) : DungChung.Ham.FreshString(_bnkb.FirstOrDefault().ChanDoan + ";" + _bnkb.FirstOrDefault().BenhKhac);
                    var tenkp = _data.KPhongs.Where(p => p.MaKP == _makp).Select(p => p.TenKP).FirstOrDefault();
                    if (tenkp != null)
                        rep.KHOA.Value = tenkp.ToString();
                    var vv = _data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                    if (vv != null)
                        rep.SOVV.Value = "Số vào viện: " + vv;
                    else
                        rep.SOVV.Value = "Số vào viện:.........";

                    List<ChamSocADO> Ketqua = new List<ChamSocADO>();
                    foreach (var item in _bnkb)
                    {
                        if (item.PhuongAn != 3)
                        {
                            DateTime _ngaykham = Convert.ToDateTime(item.NgayKham);
                            var dienbien = _data.DienBiens.Where(p => p.NgayNhap >= _ngaykham).Where(p => p.Ploai == 1).Where(p => p.MaBNhan == _mabn).Where(p => p.NgayNhap >= tungay && p.NgayNhap <= Denngay).ToList();
                            var qcanbo = _data.CanBoes.ToList();
                            var Ketqua1 = (from a in dienbien
                                           join cb in qcanbo on a.MaCB equals cb.MaCB
                                           group new { a, cb } by new { a.NgayNhap, a.DienBien1, a.ThucHienYL, a.HuongDTri, a.MaCB, cb.TenCB } into kq
                                           select new ChamSocADO
                                           {
                                               TenCB = (DungChung.Bien.MaBV == "30007") ? (Environment.NewLine + Environment.NewLine + Environment.NewLine + kq.Key.TenCB) : kq.Key.TenCB,
                                               NgayNhap = kq.Key.NgayNhap,
                                               DienBien1 = kq.Key.DienBien1,
                                               Ngay = (DungChung.Bien.MaBV == "24012") ? (Environment.NewLine + Environment.NewLine + Environment.NewLine + kq.Key.NgayNhap.Value.ToString("dd/MM")) : kq.Key.NgayNhap.Value.ToShortDateString(),

                                               Gio = kq.Key.NgayNhap.Value.ToString("HH:mm"),
                                               YLenh = kq.Key.ThucHienYL + "/" + kq.Key.HuongDTri
                                           }).ToList();
                            Ketqua.AddRange(Ketqua1);
                        }
                        else
                        {
                            DateTime _ngaykham = Convert.ToDateTime(item.NgayKham);
                            DateTime _ngaychuyen = Convert.ToDateTime(item.NgayNghi);
                            var dienbien = _data.DienBiens.Where(p => p.Ploai == 0).Where(p => p.NgayNhap >= _ngaykham && p.NgayNhap <= _ngaychuyen).Where(p => p.NgayNhap >= tungay && p.NgayNhap <= Denngay).Where(p => p.MaBNhan == _mabn).ToList();
                            var qcanbo = _data.CanBoes.ToList();
                            var Ketqua2 = (from a in dienbien
                                           join cb in qcanbo on a.MaCB equals cb.MaCB
                                           group new { a, cb } by new { a.NgayNhap, a.DienBien1, a.YLenh, a.HuongDTri, cb.TenCB } into kq
                                           select new ChamSocADO
                                           {
                                               TenCB = DungChung.Bien.MaBV == "30007" ? (Environment.NewLine + Environment.NewLine + Environment.NewLine + kq.Key.TenCB) : kq.Key.TenCB,
                                               NgayNhap = kq.Key.NgayNhap,
                                               DienBien1 = kq.Key.DienBien1,
                                               Ngay = kq.Key.NgayNhap.Value.ToShortDateString(),
                                               Gio = kq.Key.NgayNhap.Value.ToString("HH:mm"),
                                               YLenh = kq.Key.YLenh + "/" + kq.Key.HuongDTri
                                           }).ToList();
                            Ketqua.AddRange(Ketqua2);
                        }
                    }
                    rep.DataSource = Ketqua.OrderBy(o => o.NgayNhap);
                    rep.BindingData();
                    rep.CreateDocument();
                    frm.prcIN.PrintingSystem = rep.PrintingSystem;
                    frm.ShowDialog();
                }
                else
                {
                    MessageBox.Show("Không có dữ liệu!");
                    return;
                }
            }
            else
            {
                BaoCao.rep_PhieuChamSoc_20001 rep = new BaoCao.rep_PhieuChamSoc_20001();
                frmIn frm = new frmIn();
                if (_ttbn != null)
                {
                    rep.CQCQ.Value = DungChung.Bien.TenCQCQ.ToUpper();
                    rep.CQ.Value = DungChung.Bien.TenCQ.ToUpper();
                    rep.TENBN.Value = _ttbn.TenBNhan.ToUpper();
                    rep.TUOI.Value = _ttbn.Tuoi;
                    rep.lineNam.Text = _ttbn.GTinh == 0 ? "/" : "";
                    rep.lineNu.Text = _ttbn.GTinh == 1 ? "/" : "";
                }
                if (_bnkb != null && _bnkb.Count > 0)
                {
                    rep.GIUONG.Value = _bnkb.FirstOrDefault().Giuong;
                    rep.BUONG.Value = _bnkb.FirstOrDefault().Buong;

                    var icd = _data.ICD10.Where(o => true).ToList();
                    rep.CHANDOAN.Value = DungChung.Ham.GhepChuoiChanDoanYHCT(icd, _bnkb.FirstOrDefault().MaICD, _bnkb.FirstOrDefault().MaICD2);
                    var tenkp = _data.KPhongs.Where(p => p.MaKP == _makp).Select(p => p.TenKP).FirstOrDefault();
                    if (tenkp != null)
                        rep.KHOA.Value = tenkp.ToString();
                    var vv = _data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                    if (vv != null)
                        rep.SOVV.Value = "Số vào viện: " + vv;
                    else
                        rep.SOVV.Value = "Số vào viện:.........";
                    List<ChamSocADO> Ketqua = new List<ChamSocADO>();
                    foreach (var item in _bnkb)
                    {
                        if (item.PhuongAn != 3)
                        {
                            DateTime _ngaykham = Convert.ToDateTime(item.NgayKham);
                            var dienbien = _data.DienBiens.Where(p => p.NgayNhap >= _ngaykham).Where(p => p.Ploai == 1).Where(p => p.MaBNhan == _mabn).Where(p => p.NgayNhap >= tungay && p.NgayNhap <= Denngay).ToList();
                            var qcanbo = _data.CanBoes.ToList();
                            var Ketqua1 = (from a in dienbien
                                           join cb in qcanbo on a.MaCB equals cb.MaCB
                                           group new { a, cb } by new { a.NgayNhap, a.DienBien1, a.ThucHienYL, a.HuongDTri, a.MaCB, cb.TenCB } into kq
                                           select new ChamSocADO
                                           {
                                               TenCB = (DungChung.Bien.MaBV == "30007") ? (Environment.NewLine + Environment.NewLine + Environment.NewLine + kq.Key.TenCB) : kq.Key.TenCB,
                                               NgayNhap = kq.Key.NgayNhap,
                                               DienBien1 = kq.Key.DienBien1,
                                               Ngay = kq.Key.NgayNhap.Value.ToShortDateString(),
                                               Gio = kq.Key.NgayNhap.Value.ToString("HH:mm"),
                                               YLenh = kq.Key.ThucHienYL + kq.Key.HuongDTri
                                           }).ToList();
                            Ketqua.AddRange(Ketqua1);
                        }
                        else
                        {
                            DateTime _ngaykham = Convert.ToDateTime(item.NgayKham);
                            DateTime _ngaychuyen = Convert.ToDateTime(item.NgayNghi);
                            var dienbien = _data.DienBiens.Where(p => p.Ploai == 0).Where(p => p.NgayNhap >= _ngaykham && p.NgayNhap <= _ngaychuyen).Where(p => p.NgayNhap >= tungay && p.NgayNhap <= Denngay).Where(p => p.MaBNhan == _mabn).ToList();
                            var qcanbo = _data.CanBoes.ToList();
                            var Ketqua2 = (from a in dienbien
                                           join cb in qcanbo on a.MaCB equals cb.MaCB
                                           group new { a, cb } by new { a.NgayNhap, a.DienBien1, a.YLenh, a.HuongDTri, cb.TenCB } into kq
                                           select new ChamSocADO
                                           {
                                               TenCB = DungChung.Bien.MaBV == "30007" ? (Environment.NewLine + Environment.NewLine + Environment.NewLine + kq.Key.TenCB) : kq.Key.TenCB,
                                               NgayNhap = kq.Key.NgayNhap,
                                               DienBien1 = kq.Key.DienBien1,
                                               Ngay = kq.Key.NgayNhap.Value.ToShortDateString(),
                                               Gio = kq.Key.NgayNhap.Value.ToString("HH:mm"),
                                               YLenh = kq.Key.YLenh + "/" + kq.Key.HuongDTri
                                           }).ToList();
                            Ketqua.AddRange(Ketqua2);
                        }
                    }
                    rep.DataSource = Ketqua.OrderBy(p => p.NgayNhap).ToList();
                    rep.BindingData();
                    rep.CreateDocument();
                    frm.prcIN.PrintingSystem = rep.PrintingSystem;
                    frm.ShowDialog();
                }
            }
        }

        private void grcDichVu_ProcessGridKey(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.F9)
            {
                grv = grvDichVu;
                column = colMaDVdv;
                int makp = 0, makho = 0;
                if (lupKhoaKhamkb.EditValue != null)
                    makp = Convert.ToInt32(lupKhoaKhamkb.EditValue);
                FormThamSo.frm_DsMaDV frm = new FormThamSo.frm_DsMaDV(makp, 0, 2);
                frm.passMaDV = new FormThamSo.frm_DsMaDV.PassMaDV(PassData);
                frm.ShowDialog();
            }
        }
        private void InPhieuCapTHuoc(int idDon)
        {
            QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            BaoCao.repPhieuCapThuoc repd = new BaoCao.repPhieuCapThuoc();
            var ktkd = (from dt in _data.DThuocs.Where(p => p.IDDon == idDon).Where(p => p.PLDV == 1)
                        join dtct in _data.DThuoccts on dt.IDDon equals dtct.IDDon
                        join cb in _data.CanBoes on dt.MaCB equals cb.MaCB
                        join kp in _data.KPhongs on dt.MaKP equals kp.MaKP
                        select new { dt.GhiChu, dt.IDDon, cb.CapBac, dt.KieuDon, dt.LoaiDuoc, dt.MaBNhan, dt.NgayKe, dt.PLDV, cb.TenCB, kp.TenKP, dtct.SoPL }).ToList();

            repd._idDon.Value = idDon;
            int _int_maBN = 0;
            if (ktkd.Count > 0 && ktkd.First().MaBNhan != null)
                _int_maBN = ktkd.First().MaBNhan ?? 0;
            var ttd = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _int_maBN)
                       join kb in _data.BNKBs on bn.MaBNhan equals kb.MaBNhan
                       select new { bn.HanBHTu, bn.HanBHDen, bn.GTinh, bn.TenBNhan, bn.NamSinh, bn.NgaySinh, bn.ThangSinh, bn.NNhap, kb.MaICD, kb.ChanDoan, kb.BenhKhac, kb.IDKB, bn.SThe, bn.DChi, kb.GhiChu }).OrderByDescending(p => p.IDKB).ToList();
            if (ttd.Count > 0)
            {
                repd._TenBNhan.Value = ttd.First().TenBNhan;
                repd.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _int_maBN, DungChung.Bien.formatAge);
                if (ttd.First().HanBHTu != null && ttd.First().HanBHTu.Value.Year > 2000)
                    repd.HanTu.Value = ttd.First().HanBHTu;
                if (ttd.First().HanBHDen != null && ttd.First().HanBHDen.Value.Year > 2000)
                    repd.HanDen.Value = ttd.First().HanBHDen;
                //Lời dặn, họ tên người thân
                string _ghichu = ttd.First().GhiChu ?? "";
                string[] ar = _ghichu.Split(';');
                if (ar.Length > 0)
                    repd.paraHoTenNguoiThan.Value = ar[0];
                if (ar.Length > 1)
                    repd.paraLoDanBS.Value = ar[1];
                // KT
                switch (ttd.First().GTinh)
                {
                    case 1:
                        repd.GTinh.Value = "Nam";
                        repd.Nu.Value = "/";
                        break;
                    case 0:
                        repd.GTinh.Value = "Nữ";
                        repd.Nam.Value = "/";
                        break;
                }
                repd.ICD.Value = DungChung.Ham.getMaICDarr(_data, _int_maBN, DungChung.Bien.GetICD, 0)[0];
                repd.SThe.Value = ttd.First().SThe;
                repd.ChanDoan.Value = DungChung.Ham.getMaICDarr(_data, _int_maBN, DungChung.Bien.GetICD, 0)[1];

                repd.TenCB.Value = ktkd.First().CapBac + ": " + ktkd.First().TenCB;
                repd.TenKP.Value = ktkd.First().TenKP;
                repd.DiaChi.Value = ttd.First().DChi;
                repd._MaBNhan.Value = _int_maBN;
                if (ktkd.First().NgayKe.Value.Day > 0)
                    repd.ngayke.Value = DungChung.Ham.NgaySangChu(ktkd.First().NgayKe.Value);
                var vv = _data.VaoViens.Where(p => p.MaBNhan == _int_maBN).Select(p => p.SoBA).FirstOrDefault();
                if (vv != null)
                    repd.SoBA.Value = vv;
            }

            var qd1 = (from tn in _data.TieuNhomDVs
                       join dv in _data.DichVus on tn.IdTieuNhom equals dv.IdTieuNhom
                       join dtct in _data.DThuoccts on dv.MaDV equals dtct.MaDV
                       where (dtct.IDDon == idDon)
                       select new
                       {
                           GhiChu = (dtct.Luong + dtct.DviUong + "/lần" + "*" + dtct.SoLan + "lần/ngày") + (dtct.GhiChu != null ? ("-" + dtct.GhiChu) : ""),
                           dv.MaTam,
                           TenDV = ((dv.TenHC.Contains(",") || dv.TenHC.Contains("+") || dv.TenHC.Contains(";")) ? dv.TenDV : (dv.TenHC + " (" + dv.TenDV + ") " + dv.HamLuong)),//dv.TenDV + " " + ((dv.HamLuong == null ? "" : dv.HamLuong)),
                           dv.HamLuong,
                           dv.MaDV,
                           dtct.DonGia,
                           dtct.ThanhTien,
                           dv.DonVi,
                           dtct.SoLuong,
                           dtct.IDDonct
                       }).OrderBy(p => p.IDDonct).ToList();
            repd.DataSource = qd1.ToList();
            repd.ThuKho.Value = DungChung.Bien.ThuKho;
            repd.BindData();
            repd.CreateDocument();
            //frmIn frm = new frmIn();
            frmIn frm = new frmIn(repd);
            frm.prcIN.PrintingSystem = repd.PrintingSystem;
            frm.ShowDialog();
        }

        private void grv_Dthuocct_Click(object sender, EventArgs e)
        {
            grv_Dthuocct_FocusedRowChanged(sender, null);
        }

        private void btncontrol_Click(object sender, EventArgs e)
        {
            ChucNang.RibbonDT frm = new ChucNang.RibbonDT();
            frm.ShowDialog();
        }

        private void barButtonItem9_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {

        }

        private void bar_BNMoi_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (xtraDieuTri.Text.Contains("*") || xtraChiDinh.Text.Contains("*") || xtraKeDon.Text.Contains("*"))
            {
                DialogResult _result = MessageBox.Show("Bạn chưa lưu dữ liệu, Bạn có muốn lưu không?", "thông báo!", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                if (_result == DialogResult.Yes)
                {
                    btnLuuKb_Click(sender, e);
                }
                TTLuu = 0;
                SetTTTab();
            }
            frmHSBNNhapMoi frm = new frmHSBNNhapMoi(0);
            frm.ShowDialog();
            TimKiem();
        }

        private void barButtonItem15_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs = -1;
            int _int_maBN = 0;
            int _makp = lupTimMaKP.EditValue != null ? Convert.ToInt32(lupTimMaKP.EditValue) : 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            if (DungChung.Ham.KTraKB(DaTaContext, _int_maBN))
            {
                frmKBVaoVien frm = new frmKBVaoVien(_int_maBN, _makp);
                frm.ShowDialog();
            }
            else
            {
                MessageBox.Show("Bạn phải nhập thông tin bệnh của BN");
                lupChanDoanKb.Focus();
            }
        }

        private void barCLS_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (!string.IsNullOrEmpty(txtTenBenhNhan.Text))
            {
                int rs;
                int _int_maBN = 0;
                if (Int32.TryParse(txtMaBNhan.Text, out rs))
                    _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
                if (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "27023" || DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01830" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "30303" || DungChung.Bien.MaBV == "14017")
                {
                    double TienBN = 0, TienTU = 0, TienBNTraT = 0;
                    TienBN = DungChung.Ham.SoTienCanThu(_int_maBN);
                    TienTU = DungChung.Ham.TongTienTU(DaTaContext, _int_maBN);
                    TienBNTraT = DungChung.Ham.TienBNTraThem(DaTaContext, _int_maBN);

                    var ttbs = DaTaContext.TTboXungs.FirstOrDefault(o => o.MaBNhan == _int_maBN);
                    if ((DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049") && ttbs != null && ttbs.HTThanhToan == 1)
                    {

                    }
                    else if (TienBNTraT >= 500000)
                    {
                        MessageBox.Show("Bệnh nhân sắp hết tiền tạm thu " + "\n Tổng tiền tạm thu: " + TienTU.ToString("###,###") + "\n Tổng tiền bệnh nhân phải trả: " + TienBN.ToString("###,###") + "\n Tổng tiền BN phải trả thêm:" + TienBNTraT.ToString("###,###"), "Thông báo", MessageBoxButtons.OK);
                    }
                    if (DungChung.Bien.MaBV == "01071")
                    {
                        var tongcp = (from dt in DaTaContext.DThuocs.Where(p => p.MaBNhan == _int_maBN)
                                      join dtct in DaTaContext.DThuoccts.Where(p => p.TrongBH == 1) on dt.IDDon equals dtct.IDDon
                                      select new { dtct }).ToList();
                        double tongcptrbh = 0;
                        tongcptrbh = tongcp.Sum(p => p.dtct.ThanhTien);
                        if (tongcptrbh >= 10000000)
                        {
                            MessageBox.Show("Tổng chi phí điều trị trong danh mục của bệnh nhân đã vướt quá 10.000.000");
                        }
                    }
                }
                var _lkp = _lKphongall.Where(p => p.MaKP == _makp).FirstOrDefault();
                if (DungChung.Ham.KTraKB(DaTaContext, String.IsNullOrEmpty(txtMaBNhan.Text) ? 0 : Convert.ToInt32(txtMaBNhan.Text)) || (_lkp != null && _lkp.QuanLy == 1))
                {
                    var ktrabn = DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN).FirstOrDefault(); string a = "";
                    var krtrakb = DaTaContext.BNKBs.Where(p => p.MaBNhan == _int_maBN).Where(p => p.MaKP == _makp || p.MaKPDTKH == _makp).ToList();
                    if (grvBNhankb.GetFocusedRowCellValue(colDTuong) != null)
                        a = grvBNhankb.GetFocusedRowCellValue(colDTuong).ToString();
                    if (ktrabn == null)
                    {
                        if (a == "BHYT")
                        {
                            MessageBox.Show("Chỉ định CLS không có chẩn đoán chỉ dành cho bệnh nhân dịch vụ", "Thông báo", MessageBoxButtons.OK);
                            return;
                        }
                    }
                    else
                    {
                        if (krtrakb.Count == 0)
                        {
                            MessageBox.Show("Bệnh nhân chưa có chẩn đoán");
                            return;
                        }
                    }
                    if (!string.IsNullOrWhiteSpace(maIcdCbo))
                    {
                        FormThamSo.FRM_chidinh_Moi frm = new FormThamSo.FRM_chidinh_Moi(_int_maBN, txtTenBenhNhan.Text, maIcdCbo);
                        if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                            frm.reLoad = SetTTTab;
                        frm.idKB = krtrakb.First().IDKB;
                        frm.MaKP_14018 = _makp;
                        frm.ShowDialog();

                        frm = null;
                    }
                    else
                    {
                        FormThamSo.FRM_chidinh_Moi frm = new FormThamSo.FRM_chidinh_Moi(_int_maBN, txtTenBenhNhan.Text);
                        if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                            frm.reLoad = SetTTTab;
                        frm.MaKP_14018 = _makp;
                        frm.idKB = krtrakb.First().IDKB;
                        frm.ShowDialog();

                        frm.Close();
                        frm.Dispose();

                        frm = null;
                    }
                }

            }
            else
            {
                MessageBox.Show("Bạn chưa chọn BN");
            }

            MemoryManagement.FlushMemory();
        }
        private bool TE16Tuoi(int mabn)
        {
            bool kq = false;
            var te = DaTaContext.BenhNhans.Where(p => p.MaBNhan == mabn).First().Tuoi;
            if (te < 16)
            {
                string ht = DaTaContext.TTboXungs.Where(p => p.MaBNhan == mabn).First().HoTenBoMe == null ? "" : DaTaContext.TTboXungs.Where(p => p.MaBNhan == mabn).First().HoTenBoMe;
                string[] hotenbome = new string[] { "", "" };
                var ttbx = ht.Split(';');
                if (ttbx.Count() == 1)
                {
                    hotenbome[0] = ttbx[0].ToString();
                }
                else if (ttbx.Count() == 2)
                {
                    hotenbome[0] = ttbx[0].ToString();
                    hotenbome[1] = ttbx[1].ToString();
                }
                if (hotenbome[0] == "" && hotenbome[1] == "")
                {
                    XtraMessageBox.Show("Cảnh báo: Xin hãy nhập bố hoặc mẹ cho bệnh nhân dưới 16 tuổi!", "Cảnh báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    return false;
                }
                else
                {
                    kq = true;
                }
            }
            else
            {
                kq = true;
            }

            return kq;
        }
        private void barRaVien_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            int idkb_td = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            if (Int32.TryParse(txtIdkb.Text, out rs))
                idkb_td = Convert.ToInt32(txtIdkb.Text);
            if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
            {
                if (TE16Tuoi(_int_maBN))
                {
                    frm_Ravien frm = new frm_Ravien(_int_maBN);
                    frm.ShowDialog();
                }

            }
            else if (DungChung.Bien.MaBV == "26007")
            {
                if (string.IsNullOrEmpty(lupMaICDkb.Text))
                {
                    MessageBox.Show("không thể cho ra viện, bạn chưa nhập bệnh chính");
                }
                else
                {
                    frm_Ravien frm = new frm_Ravien(_int_maBN);
                    frm.ShowDialog();
                }
            }
            else if (DungChung.Bien.MaBV == "14017")
            {
                frm_Ravien frm = new frm_Ravien(_int_maBN, idkb_td);
                frm.ShowDialog();
            }
            else
            {
                frm_Ravien frm = new frm_Ravien(_int_maBN);
                frm.ShowDialog();
            }
        }

        private void barChuyenVien_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            if (DungChung.Bien.MaBV == "26007")
            {
                if (string.IsNullOrEmpty(lupMaICDkb.Text))
                {
                    MessageBox.Show("không thể cho ra viện, bạn chưa nhập bệnh chính");
                }
                else
                {
                    frm_CVienNoiTru frm = new frm_CVienNoiTru(_int_maBN);
                    frm.ShowDialog();
                    grcvChuyenKhoa_FocusedRowChanged(null, null);
                }
            }
            else
            {
                frm_CVienNoiTru frm = new frm_CVienNoiTru(_int_maBN);
                frm.ShowDialog();
                grcvChuyenKhoa_FocusedRowChanged(null, null);
            }
        }

        private void barChiPhi_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);

            FormThamSo.frm_XemChiPhi frm = new FormThamSo.frm_XemChiPhi(_int_maBN, txtTenBenhNhan.Text);
            frm.ShowDialog();
        }

        private void barHenKham_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            if (!string.IsNullOrEmpty(txtIdkb.Text))
            {
                QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                int id = Convert.ToInt32(txtIdkb.Text);
                var idkb = _data.BNKBs.Where(p => p.MaBNhan == _int_maBN).OrderByDescending(p => p.IDKB).ToList();
                if (idkb.Count > 0)
                {
                    if (id >= idkb.First().IDKB)
                    {
                        FormThamSo.frm_HenKham frm = new FormThamSo.frm_HenKham(id);
                        frm.ShowDialog();
                    }
                    else
                    {
                        MessageBox.Show("Chỉ Khoa khám bệnh cuối cùng của BN mới có quyền hẹn tái khám");
                    }
                }
            }
        }

        private void barPhieuTamTra_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            FormThamSo.Frm_TamTraThuoc_New frm = new FormThamSo.Frm_TamTraThuoc_New();
            frm.ShowDialog();
        }

        private void barHoichan_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int idkb = 0;

            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            if (txtIdkb.Text != "" && !String.IsNullOrEmpty(txtIdkb.Text))
            {
                idkb = Convert.ToInt32(txtIdkb.Text);
            }
            else idkb = 0;
            FormNhap.Frm_BbHoiChan frm = new FormNhap.Frm_BbHoiChan(_int_maBN, idkb);
            frm.ShowDialog();
        }

        private void barXacNhanNghiOm_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            if (!string.IsNullOrEmpty(txtIdkb.Text))
            {
                QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                int id = Convert.ToInt32(txtIdkb.Text);
                var idkb = _data.BNKBs.Where(p => p.MaBNhan == _int_maBN).OrderByDescending(p => p.IDKB).ToList();
                if (idkb.Count > 0)
                {
                    if (id >= idkb.First().IDKB)
                    {
                        ChucNang.frm_NhapNghiOm frm = new ChucNang.frm_NhapNghiOm(id);
                        frm.ShowDialog();
                    }
                    else
                    {
                        MessageBox.Show("Chỉ Khoa khám bệnh cuối cùng của BN mới có quyền xác nhận");
                    }
                }
            }
        }

        private void barThuPUThuoc_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            FormNhap.frm_NhapPhanUngThuoc frm = new frm_NhapPhanUngThuoc(_int_maBN);
            frm.ShowDialog();
        }

        private void barTHPTTT_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            ChucNang.frm_ThucHienPT frm = new ChucNang.frm_ThucHienPT(_int_maBN);
            frm.ShowDialog();
        }

        private void barBNNoThe_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int mabn = string.IsNullOrEmpty(txtMaBNhan.Text) ? 0 : Convert.ToInt32(txtMaBNhan.Text);
            FormThamSo.frm_CapNhatDVBenhNhanNoThe frm = new frm_CapNhatDVBenhNhanNoThe(mabn, 1);
            frm.ShowDialog();
        }

        private void barPhieuDieuTri_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            FormThamSo.Frm_PhieuDieuTri frm = new FormThamSo.Frm_PhieuDieuTri(_int_maBN);
            frm.ShowDialog();
        }

        private void barPhieuCongKhai_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            FormThamSo.frm_InPhieuCKThuoc frm = new FormThamSo.frm_InPhieuCKThuoc(_int_maBN);
            frm.ShowDialog();
        }

        private void barPhieuKhamChuaBenh_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            FormThamSo.frm_mau08 frm = new FormThamSo.frm_mau08(_int_maBN);
            frm.ShowDialog();
        }

        private void barTaoPhieuLinh_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (DungChung.Bien.keNhieuKho)
            {
                frmPhieuLinh_New frm = new frmPhieuLinh_New();
                frm.ShowDialog();
                grvBNhankb_FocusedRowChanged(null, null);
            }
            else
            {
                frmPhieulinh frm = new frmPhieulinh();
                frm.ShowDialog();
                grvBNhankb_FocusedRowChanged(null, null);
            }
        }

        private void barDonGayNghien_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_IDDon = 0;
            if (Int32.TryParse(txtIdDonThuoc.Text, out rs))
                _int_IDDon = Convert.ToInt32(txtIdDonThuoc.Text);
            usKhamBenh.InDonGN_HTT(_int_IDDon, "Thuốc gây nghiện");
        }

        private void barDonHTT_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_IDDon = 0;
            if (Int32.TryParse(txtIdDonThuoc.Text, out rs))
                _int_IDDon = Convert.ToInt32(txtIdDonThuoc.Text);
            usKhamBenh.InDonGN_HTT(_int_IDDon, "Thuốc hướng tâm thần");
        }

        private void barDonThuocThang_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_IDDon = 0;
            if (Int32.TryParse(txtIdDonThuoc.Text, out rs))
                _int_IDDon = Convert.ToInt32(txtIdDonThuoc.Text);
            if (DungChung.Bien.MaBV == "12121" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "14017")
                frm_Check_moi._InPhieuThuocDY_TT01_A5(_int_IDDon);
            else
            {
                if (DungChung.Bien.MaBV == "30007")
                {
                    FormThamSo.frm_NgayKeThuocThang frm = new FormThamSo.frm_NgayKeThuocThang(_int_IDDon);
                    frm.ShowDialog();
                }
                else
                    frm_Check_moi._InPhieuThuocDY_TT01(_int_IDDon);
            }
        }

        private void barPhieuCapPhatThuoc_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_IDDon = 0;
            if (Int32.TryParse(txtIdDonThuoc.Text, out rs))
                _int_IDDon = Convert.ToInt32(txtIdDonThuoc.Text);
            InPhieuCapTHuoc(_int_IDDon);
        }

        private void LupICD3_PreviewKeyDown(object sender, PreviewKeyDownEventArgs e)
        {
            if (e.KeyCode == Keys.F9)
            {
                FormThamSo.frm_TimKiem frm = new FormThamSo.frm_TimKiem();
                frm.GetData = new FormThamSo.frm_TimKiem._getstring(getICD3);
                frm.ShowDialog();

            }
        }

        private void LupICD4_PreviewKeyDown(object sender, PreviewKeyDownEventArgs e)
        {
            //if (e.KeyCode == Keys.F9)
            //{
            //    FormThamSo.frm_TimKiem frm = new FormThamSo.frm_TimKiem();
            //    frm.GetData = new FormThamSo.frm_TimKiem._getstring(getICD4);
            //    frm.ShowDialog();

            //}
        }

        private void panelControl5_Paint(object sender, PaintEventArgs e)
        {

        }

        private void LupICD3_EditValueChanged(object sender, EventArgs e)
        {
            if (TTLuu == 1 || TTLuu == 2)
                if (!string.IsNullOrEmpty(LupICD3.Text))
                {
                    if (LupICD3.EditValue.ToString() == "0")
                    {
                        txtBenhKhac3.EditValue = "";
                        LupICD3.EditValue = "";
                        txtBenhPhu3.Text = "";
                    }
                    else
                    {
                        txtBenhKhac3.EditValue = lICD.Where(p => p.MaICD == LupICD3.EditValue.ToString()).Select(p => p.TenICD).FirstOrDefault();
                        txtBenhPhu3.Text = lICD.Where(p => p.MaICD == LupICD3.EditValue.ToString()).Select(p => p.TenICD).FirstOrDefault();
                    }


                }
                else
                {
                    txtBenhKhac3.EditValue = "";
                    txtBenhPhu3.Text = "";
                }
            if ((DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049") && LupICD3.EditValue != null && LupICD3.EditValue != "")
            {
                btnPackageICD3.Enabled = true;
            }
            else
                btnPackageICD3.Enabled = false;
        }

        private void LupICD4_EditValueChanged(object sender, EventArgs e)
        {
            if (TTLuu == 1 || TTLuu == 2)
            {
                if (!string.IsNullOrEmpty(LupICD4.Text))
                {
                    if (LupICD4.EditValue.ToString() == "0")
                    {
                        txtBenhKhac4.EditValue = "";
                        LupICD4.EditValue = "";
                    }
                    else
                        getICDtest();

                }
                else
                {
                    txtBenhKhac4.EditValue = "";
                }
            }

        }


        private void barTheoDoĐe_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _mabn = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _mabn = Convert.ToInt32(txtMaBNhan.Text);
            FormThamSo.frm_TheoDoiSinhDe frm = new frm_TheoDoiSinhDe(_mabn);
            frm.ShowDialog();
        }

        void setSoVV()
        {
            int makp = 0;
            string sovaovien = "";
            if (DungChung.Bien.PP_SoVV == 1)
            {
                if (lupBPKe.EditValue != null && lupBPKe.EditValue.ToString() != "")
                {
                    makp = Convert.ToInt32(lupBPKe.EditValue);
                    sovaovien = DungChung.Ham.GetSoPL(2, makp, -1).ToString();
                }
                else
                {
                    MessageBox.Show("chưa chọn khoa điều trị, không lấy được số vào viện");
                }
            }
            else if (DungChung.Bien.PP_SoVV == 2)
            {
                sovaovien = DungChung.Ham.GetSoPL(2, makp, -1).ToString();
            }
            txtSoVV2.Text = sovaovien;
        }



        private void btnLaySoVV_Click(object sender, EventArgs e)
        {
            setSoVV();
        }
        /// <summary>
        /// Ngày y lệnh : là ngày kê đơn hoặc kê dịch vụ mới
        /// </summary>
        /// <returns>true: ngày khám là ngày y lệnh cuối cùng và là ngày hạn thẻ; false: Ngày y lệnh cuối cùng không phải ngày hạn thẻ</returns>
        private bool ktraHanThe()
        {
            bool rs = false;
            #region  cảnh báo khi ngày y lệnh cuối cùng trùng với ngày hạn thẻ -26007
            if (DungChung.Bien.MaBV == "26007")
            {
                int ot; int _maBN = 0;
                DateTime ngayke = dtNgayKe.DateTime.Date;
                if (Int32.TryParse(txtMaBNhan.Text, out ot))
                    _maBN = Convert.ToInt32(txtMaBNhan.Text);
                if (_maBN > 0)
                {
                    QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                    // kiểm tra hạn thẻ
                    var qbn = data.BenhNhans.Where(p => p.MaBNhan == _maBN).Select(p => p.HanBHDen).FirstOrDefault();
                    if (qbn != null)
                    {

                        //Kiểm tra ngày khám bệnh có phải ngày khám cuối cùng không
                        var qdthuoc = data.DThuocs.Where(p => p.MaBNhan == _maBN).OrderByDescending(p => p.NgayKe).FirstOrDefault();
                        if (qdthuoc != null)
                        {
                            if (ngayke >= qdthuoc.NgayKe.Value.Date && ngayke == qbn.Value.Date)
                            {
                                rs = true;
                                MessageBox.Show("Ngày y lệnh cuối cùng trùng với hạn thẻ");
                            }

                        }
                        else if (ngayke == qbn.Value.Date)
                        {
                            rs = true;
                            MessageBox.Show("Ngày y lệnh cuối cùng trùng với hạn thẻ");
                        }
                    }
                }
            }

            #endregion
            return rs;
        }
        private void KtraHanThe_30010(int ghan)
        {
            //if (DungChung.Bien.MaBV == "30010")
            //{
            int ot; int _maBN = 0;
            DateTime ngayke = System.DateTime.Now.Date;
            if (Int32.TryParse(txtMaBNhan.Text, out ot))
                _maBN = Convert.ToInt32(txtMaBNhan.Text);
            if (_maBN > 0)
            {
                QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                // kiểm tra hạn thẻ
                var HanThe = data.BenhNhans.Where(p => p.MaBNhan == _maBN).Select(p => p.HanBHDen).FirstOrDefault();
                if (HanThe != null)
                {
                    TimeSpan SoNgay = Convert.ToDateTime(HanThe) - ngayke;
                    int TongSoNg = SoNgay.Days;
                    if (TongSoNg <= ghan)
                    {
                        MessageBox.Show("Thẻ sắp hết hạn, ngày hạn thẻ: " + HanThe.Value.ToShortDateString(), "Thông báo", MessageBoxButtons.OK);
                    }
                }
            }
        }
        private void btnInPL20001_Click(object sender, EventArgs e)
        {
            int kieudon = cboKieuDon.SelectedIndex;
            if (kieudon != 2)
            {
                DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                int[] arrIDdonct;
                int IDDon = 0;
                if (!string.IsNullOrEmpty(txtIdDonThuoc.Text))
                {
                    IDDon = int.Parse(txtIdDonThuoc.Text.Trim());
                }
                else
                {
                    MessageBox.Show("Không hợp lệ!");
                    return;
                }
                bool CheckThuocDongY = false, ktra = true;
                var qdt0 = (from dtct in DaTaContext.DThuoccts.Where(p => p.IDDon == IDDon)
                            join dv in DaTaContext.DichVus on dtct.MaDV equals dv.MaDV
                            join tn in DaTaContext.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                            select new { dtct.SoPL, dtct.IDDon, dtct.IDDonct, tn.TenRG }).ToList();
                var qdt = (from dtct in qdt0.Where(p => p.TenRG.Contains("Thuốc đông y"))
                           select new { dtct.SoPL, dtct.IDDon, dtct.IDDonct }).ToList();
                var ktara = qdt.Where(p => p.SoPL > 0).ToList();
                if (ktara.Count > 0)
                    ktra = false;
                if (ktra)
                {
                    if (qdt.Count > 0)
                        CheckThuocDongY = true;
                    var qtutruc = (from dt in DaTaContext.DThuocs.Where(p => p.IDDon == IDDon) join kp in DaTaContext.KPhongs.Where(p => p.PLoai == DungChung.Bien.st_PhanLoaiKP.TuTruc) on dt.MaKXuat equals kp.MaKP select dt).FirstOrDefault();
                    List<int> iddon = new List<int>();
                    //-------------------------------------
                    if (DungChung.Bien.MaBV == "30281" && qtutruc != null)
                    {
                        iddon = (from idd in qdt0
                                 select idd.IDDonct).Distinct().ToList();
                        InPhieuLinhTheoDon_30281(iddon, CheckThuocDongY);
                    }
                    else
                    {
                        iddon = (from idd in qdt
                                 select idd.IDDonct).Distinct().ToList();
                        //-------------------------------------
                        int j = 0;
                        arrIDdonct = new int[iddon.Count];
                        foreach (var i in iddon)
                        {
                            arrIDdonct[j] = i;
                            j++;
                        }

                        if (xtraNgoaiTru.SelectedTabPage == xtraKeDon && (CheckThuocDongY || DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017"))
                        {
                            bool pltheodon = false;
                            if (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "27021" || DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "56789" || DungChung.Bien.MaBV == "14017" || DungChung.Bien.MaBV == "24297")
                                pltheodon = true;

                            if (CheckThuocDongY)
                            {
                                frm_Check_moi frm = new frm_Check_moi(arrIDdonct, 2, true, pltheodon);
                                frm.ShowDialog();

                            }
                            else
                            {
                                frm_Check_moi frm = new frm_Check_moi(arrIDdonct, 2, false, pltheodon);
                                frm.ShowDialog();
                            }
                            grvBNhankb_FocusedRowChanged(null, null);
                        }
                        else
                        {
                            MessageBox.Show("Bạn chưa chọn đơn");
                        }
                    }
                }
                else if (DungChung.Bien.MaBV == "14017")
                {
                    FormNhap.frmPhieulinh._InPhieuLinh_14017(IDDon, 0);
                }
                else
                {
                    FormNhap.frmPhieulinh._InPhieuLinh_20001(ktara.First().SoPL, 0);
                }
            }
            else
            {
                int a1 = DaTaContext.KPhongs.Where(p => p.TenKP == lupBPKe.Text).First().MaKP;

                int id = int.Parse(grvDonThuocdt.GetFocusedRowCellValue(colIDDon).ToString());

                int _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
                int a2 = DaTaContext.DThuoccts.Where(P => P.IDDon == id).First().SoPL;
                if (a2 > 0)
                {
                    var ktkpl = (from dt in DaTaContext.DThuocs.Where(p => p.MaKP == a1)
                                 join dtct in DaTaContext.DThuoccts.Where(p => p.SoPL == a2) on dt.IDDon equals dtct.IDDon
                                 group dt by new { dt.KieuDon, dt.IDDon, dt.MaKP, dt.MaKXuat } into kq
                                 select new { kq.Key.KieuDon, kq.Key.IDDon, kq.Key.MaKP, kq.Key.MaKXuat }).ToList();
                    if (ktkpl.Count > 0 && ktkpl.First().KieuDon != null && ktkpl.First().MaKP == a1 && ktkpl.First().MaKXuat == 27)
                    {
                        FormNhap.frmPhieuLinh_New.InPhieu(a2, a1, 2);
                    }
                }
                else
                {
                    int[] a = DaTaContext.DThuoccts.Where(p => p.IDDon == id).Select(p => p.IDDonct).ToArray();
                    frm_Check_moi frm = new frm_Check_moi(a, 2, false, false, 1);
                    frm.ShowDialog();
                }
            }
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="iddonct"></param>
        /// <param name="pl">true: là thuốc đông y; false: không phải thuốc đông y</param>
        private void InPhieuLinhTheoDon_30281(List<int> iddonct, bool pl)
        {
            QLBV_Database.QLBVEntities Data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);

            var dichvu = (from dt in Data.DThuocs
                          join dtct in Data.DThuoccts.Where(p => iddonct.Contains(p.IDDonct)) on dt.IDDon equals dtct.IDDon
                          join dv in Data.DichVus on dtct.MaDV equals dv.MaDV
                          group new { dt, dtct, dv } by new { dtct.MaDV, dv.TenDV, dtct.DonVi, dv.MaQD, DonGia = DungChung.Bien.MaBV == "27021" ? dtct.DonGia : 0, dt.IDDon } into kq
                          select new
                          {
                              MaBN = kq.Min(p => p.dt.MaBNhan),
                              NgayKe = kq.Min(p => p.dtct.NgayNhap),
                              Madv = kq.Key.MaDV,
                              kq.Key.MaQD,
                              kq.Key.IDDon,
                              TenDV = kq.Key.TenDV,
                              DonVi = kq.Key.DonVi,
                              DonGia = kq.Key.DonGia,
                              SoLuongct = kq.Sum(p => p.dtct.SoLuongct),
                              SoLuong = kq.Sum(p => p.dtct.SoLuong),
                              SoLuongTong = kq.Sum(p => p.dtct.SoLuong),
                              SoThang = kq.Max(p => p.dtct.Loai),
                              Thanhtien = kq.Sum(p => p.dtct.ThanhTien),
                          }).OrderBy(p => p.TenDV).ToList();
            if (dichvu.Count <= 0)
                return;

            BaoCao.rep_PhieuLinhThuoc_20001 rep = new BaoCao.rep_PhieuLinhThuoc_20001();


            frmIn frm = new frmIn();
            rep.SoPL.Value = dichvu.First().IDDon.ToString();

            if (dichvu.Count > 0 && dichvu.First().SoLuong < 0)
            {
                rep.xrTieuDe.Text = "PHIẾU TRẢ THUỐC";
            }
            var bg = (from dt in Data.DThuocs
                      join dtct in Data.DThuoccts.Where(p => iddonct.Contains(p.IDDonct)) on dt.IDDon equals dtct.IDDon
                      join bnkb in Data.BNKBs on dt.MaBNhan equals bnkb.MaBNhan
                      join kp in Data.KPhongs on dt.MaKP equals kp.MaKP
                      join bn in Data.BenhNhans on dt.MaBNhan equals bn.MaBNhan
                      where (dt.MaKP == bnkb.MaKP)
                      select new { bnkb.Buong, bnkb.Giuong, kp.TenKP, bn.TenBNhan, bn.Tuoi, bn.DChi, ChanDoan = bnkb.ChanDoan + "; " + bnkb.BenhKhac, bn.MaBNhan, dt.GhiChu, bn.GTinh, bn.SThe, bn.HanBHTu, bn.HanBHDen }).ToList(); // dung sửa lấy ghi chú (ngày sử dụng) từ bảng BNKB sang  bảng dthuoc





            if (bg.First().Buong != null)
            {
                string buong = bg.First().Buong.ToString();
                rep.BuongGiuong.Value = "Buồng: " + buong;
            }
            if (bg.First().TenKP != null && bg.First().TenKP.ToString() != "")
            {
                rep.Khoa.Value = "Khoa: " + bg.First().TenKP.ToString();
            }
            if (bg.First().TenBNhan != null && bg.First().TenBNhan.ToString() != "")
            {
                rep.Hoten.Value = bg.First().TenBNhan.ToUpper();
            }
            rep.SoThe.Value = bg.First().SThe;
            if (bg.First().GTinh == 0)
                rep.GT.Value = "Nữ";
            else rep.GT.Value = "Nam";
            if (bg.First().HanBHTu != null && bg.First().HanBHDen != null && bg.First().HanBHTu.ToString() != "" && bg.First().HanBHDen.ToString() != "")
            {
                rep.BHYT.Value = "BHYT giá trị từ: " + bg.First().HanBHTu.ToString().Remove(11) + " đến " + bg.First().HanBHDen.ToString().Remove(11);
            }
            if (bg.First().Tuoi != null && bg.First().Tuoi.ToString() != "")
            { rep.Tuoi.Value = bg.First().Tuoi; }
            if (bg.First().DChi != null && bg.First().DChi.ToString() != "")
            { rep.Diachi.Value = "Địa chỉ: " + bg.First().DChi; }
            string _CD = "Chẩn đoán: ";
            if (bg.First().ChanDoan != null && bg.First().ChanDoan.ToString() != "")
            { rep.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham.FreshString(bg.First().ChanDoan); }
            else { rep.ChanDoan.Value = _CD; }


            #region cuongtm 29/06/17
            int sothang = 1;
            if (!pl)
            {
                rep.lblSoNgay.Text = "Số ngày:";
            }
            sothang = dichvu.First().SoThang;
            DateTime ngaytu = dichvu.First().NgayKe.Value.Date;
            DateTime ngayden = dichvu.First().NgayKe.Value.Date.AddDays(sothang - 1);
            rep.NgayTu.Value = ngaytu.ToShortDateString();
            rep.NgayDen.Value = ngayden.ToShortDateString();
            rep.SoThang.Value = sothang;
            #endregion

            rep.TongMuc.Value = "Tổng số:      " + dichvu.Count() + "     khoản";
            rep.NgayThang.Value = DateTime.Now.Hour.ToString("D2") + ":" + DateTime.Now.Minute.ToString("D2") + "  ngày " + DateTime.Now.Day.ToString("D2") + " tháng " + DateTime.Now.Month.ToString("D2") + " năm " + DateTime.Now.Year;
            rep.DataSource = dichvu;
            rep.BindingData();
            rep.CreateDocument();
            frm.prcIN.PrintingSystem = rep.PrintingSystem;
            frm.ShowDialog();

        }
        //------------------------------------------------------------------------------------
        private void btnKiemTraCP_Click(object sender, EventArgs e)
        {
            if (String.IsNullOrEmpty(txtMaBNhan.Text))
                MessageBox.Show("Bạn chưa chọn bệnh nhân kiểm tra");

            else
            {
                if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                {
                    int mabn = Convert.ToInt32(txtMaBNhan.Text);
                    frm_ChiPhiChiDinhBenhNhan frm = new frm_ChiPhiChiDinhBenhNhan(mabn);
                    frm.ShowDialog();
                }
                else
                {
                    int _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
                    double TienBN = 0, TienTU = 0, TienBNTraT = 0;
                    TienBN = DungChung.Ham.SoTienCanThu(_int_maBN);
                    TienTU = DungChung.Ham.TongTienTU(DaTaContext, _int_maBN);
                    TienBNTraT = DungChung.Ham.TienBNTraThem(DaTaContext, _int_maBN);
                    MessageBox.Show(
                        "\n Tổng tiền tạm thu: " + TienTU.ToString("###,###") + "\n Tổng tiền bệnh nhân phải trả: " + TienBN.ToString("###,###") + "\n Tổng tiền BN phải trả thêm:" + TienBNTraT.ToString("###,###"), "Thông báo", MessageBoxButtons.OK);
                }

            }
        }

        private double ktraChiPhi(int maBNhan)
        {
            double TienChuaTT = 0;
            var vienphi = (from kd in DaTaContext.DThuocs.Where(p => p.MaBNhan == maBNhan)
                           join kdct in DaTaContext.DThuoccts.Where(p => p.ThanhToan != 1) on kd.IDDon equals kdct.IDDon
                           join dv in DaTaContext.DichVus on kdct.MaDV equals dv.MaDV
                           join tn in DaTaContext.TieuNhomDVs.Where(p => p.IDNhom != 14 && p.IDNhom != 15) on dv.IdTieuNhom equals tn.IdTieuNhom
                           group new { kd, kdct } by kd.MaBNhan into kq
                           select new { Tong = kq.Sum(p => p.kdct.ThanhTien) }).FirstOrDefault();

            if (vienphi != null)
            {
                TienChuaTT = TienChuaTT + vienphi.Tong;
            }

            // tính tiền ngày giường
            var qvv = DaTaContext.VaoViens.Where(p => p.MaBNhan == maBNhan).FirstOrDefault();
            var qrv = DaTaContext.RaViens.Where(p => p.MaBNhan == maBNhan).FirstOrDefault();
            var qbn = DaTaContext.BenhNhans.Where(p => p.MaBNhan == maBNhan).First();
            if (qvv != null)
            {
                DateTime ngayvao = qvv.NgayVao.Value;
                DateTime ngayra = DateTime.Now;
                double tiengiuong = 0;
                if (qrv != null)
                {
                    ngayra = qrv.NgayRa.Value;
                }
                var qbnkb = (from kb in DaTaContext.BNKBs.Where(p => p.MaBNhan == maBNhan).Where(p => p.NgayKham >= ngayvao)
                             join kp in DaTaContext.KPhongs.Where(p => p.PLoai == DungChung.Bien.st_PhanLoaiKP.LamSang) on kb.MaKP equals kp.MaKP
                             select new { kb.IDKB, kb.NgayKham, kb.NgayNghi, kp.MaKP, kp.TenKP }).OrderByDescending(p => p.NgayKham).ToList();
                int num = 0;
                foreach (var a in qbnkb)
                {
                    num++;
                    tiengiuong = 0;
                    int songaydt = (DungChung.Ham.NgayTu(ngayra) - DungChung.Ham.NgayTu(a.NgayKham.Value)).Days;
                    if (num == 1)
                        songaydt = songaydt + 1;
                    if (a.TenKP.ToLower().Contains("lao"))
                    {
                        if (qbn.DTuong == "BHYT")
                            tiengiuong = songaydt * 178500;
                        else
                            tiengiuong = songaydt * 52000;
                    }
                    else if (a.TenKP.ToLower().Contains("khoa hồi sức cấp cứu"))
                    {
                        if (qbn.DTuong == "BHYT")
                            tiengiuong = songaydt * 279100;
                        else
                            tiengiuong = songaydt * 80000;
                    }
                    TienChuaTT = TienChuaTT + tiengiuong;
                    ngayra = a.NgayKham.Value;
                }

            }
            return TienChuaTT;

        }

        public class dsthuoc
        {
            public string TenDV { set; get; }
            public string MaTam { get; set; }
            public string TenThau2017 { set; get; }
            public string TenHC { set; get; }
            public string DonVi { set; get; }
            public string NguonGoc { set; get; }
            public double DonGia { set; get; }
            public int TyLeBQ { set; get; }
            public string TenRG { set; get; }
            public string TenThuocRG { set; get; }
            public int MaDV { set; get; }
            public string HamLuong { set; get; }
            public int MaKP { set; get; }
            public bool SLTon { set; get; }
            public string GhiChu { set; get; }
            public int TrongBH { get; set; }
            public string SoLo { set; get; }
            public DateTime? HanDung { set; get; }
        }

        private void txtTimKiem_EditValueChanged(object sender, EventArgs e)
        {
            timkiem2();
        }

        private void grvBNhankb_RowClick(object sender, RowClickEventArgs e)
        {
            grvBNhankb_FocusedRowChanged(null, null);
            xtraNgoaiTru.Enabled = true;
        }

        private void grvDonThuocdt_RowClick(object sender, RowClickEventArgs e)
        {
            grcDonThuocct.Enabled = true;
            if (e.RowHandle == 0)
                grvDonThuocdt_FocusedRowChanged(null, null);
        }

        private void chkChuaKe_CheckedChanged(object sender, EventArgs e)
        {
            TimKiem();
        }

        private void chkChuaKham_CheckedChanged(object sender, EventArgs e)
        {
            TimKiem();
        }

        private void chkChiDinhCLS_CheckedChanged(object sender, EventArgs e)
        {
            TimKiem();
        }

        private void chkKetQuaCLS_CheckedChanged(object sender, EventArgs e)
        {
            TimKiem();
        }
        void setSoLuong(int so)
        {

            for (int i = 0; i < grvDonThuocct.DataRowCount; i++)
            {
                grvDonThuocct.SetRowCellValue(i, colLoai, so);
                double soluongct = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colSoLuongctdt));
                double dongia = Convert.ToDouble(grvDonThuocct.GetRowCellValue(i, colDonGia));
                grvDonThuocct.SetRowCellValue(i, colSoLuong, so * soluongct);
                grvDonThuocct.SetRowCellValue(i, colThanhTien, so * soluongct * dongia);
            }
        }
        private void cboSoThangNgay_SelectedIndexChanged(object sender, EventArgs e)
        {

        }

        private void cboSoThangNgay_EditValueChanging(object sender, ChangingEventArgs e)
        {

        }

        private void cboSoThangNgay_EditValueChanged(object sender, EventArgs e)
        {
            if (DungChung.Bien.MaBV == "14017")
                return;
            bool kt = ktCellChange;
            int so = 1;
            if (int.TryParse(cboSoThangNgay.Text, out so))
                so = int.Parse(cboSoThangNgay.Text);
            if (TTLuu == 1 || TTLuu == 2)
            {
                if (grvDonThuocct.DataRowCount >= 1)
                {
                    if (DialogResult.Yes == MessageBox.Show("Đơn đã có thuốc, bạn vẫn muốn thay đổi số ngày dùng| số thang?", "Thông báo", MessageBoxButtons.YesNo, MessageBoxIcon.Question))
                    {
                        ktCellChange = false;
                        setSoLuong(so);
                        ktCellChange = kt;
                    }
                }
            }

            if (so > 1)
            {
                colLoai.Visible = true;
                colSoLuong.Visible = true;
            }
            else
            {
                colLoai.Visible = false;
                colSoLuong.Visible = false;

            }
        }

        private void cboTimRaVien_SelectedIndexChanged(object sender, EventArgs e)
        {
        }
        private void phieu_kham_ck(int mabn, int makp)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            var _bn = (from bn in data.BenhNhans.Where(p => p.MaBNhan == mabn)
                       join kb in data.BNKBs on bn.MaBNhan equals kb.MaBNhan
                       select new { bn, kb }).ToList();
            var _lid = (from kb in _bn
                        group kb by new { kb.bn } into kq
                        select new { kq.Key.bn, IDKB = kq.Max(p => p.kb.IDKB) }).ToList();
            var _lkq = (from bn in _bn
                        join kb in _lid on bn.kb.IDKB equals kb.IDKB
                        join kp in data.KPhongs.Where(p => p.MaKP == makp) on bn.kb.MaKP equals kp.MaKP
                        select new { bn.bn.MaBNhan, bn.bn.TenBNhan, bn.bn.Tuoi, bn.bn.GTinh, bn.bn.DChi, kp.TenKP, bn.kb.Giuong, bn.kb.Buong, bn.kb.ChanDoan, bn.kb.MaICD }).FirstOrDefault();
            var _lkq1 = (from bn in _bn
                         join kb in _lid on bn.kb.IDKB equals kb.IDKB
                         join kp in data.KPhongs.Where(p => p.MaKP == makp) on bn.kb.MaKP equals kp.MaKP
                         select new { bn.kb.ChanDoan, bn.kb.MaICD }).ToList();
            string[] arr1 = _lkq1.Select(p => p.MaICD).ToArray();
            string[] arr2 = _lkq1.Select(p => p.ChanDoan).ToArray();


            if (_lkq == null)
            {
                MessageBox.Show("Bệnh nhân chưa có khám bệnh hoặc đã chuyển phòng khám khác", "Thông báo", MessageBoxButtons.OK);
            }
            else
            {
                frmIn frm = new frmIn();
                BaoCao.rep_phieukhamCK_20001 rep = new BaoCao.rep_phieukhamCK_20001();
                rep.celtenbn.Text = _lkq.TenBNhan.ToUpper().ToString();
                rep.celtuoi.Text = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.TinhTuoiBenhNhan(data, mabn) : _lkq.Tuoi.ToString();
                rep.celdiachi.Text = _lkq.DChi.ToString();
                rep.celkhoa.Text = _lkq.TenKP.ToString();
                if (_lkq.Buong != null)
                    rep.celbuong.Text = _lkq.Buong.ToString();
                if (_lkq.Giuong != null)
                    rep.celgiuong.Text = _lkq.Giuong.ToString();
                if (DungChung.Bien.MaBV == "30010")
                {
                    rep.celchandoan.Text = _lkq1.First().ChanDoan + " - " + _lkq1.First().MaICD;
                }
                else
                {
                    rep.celchandoan.Text = string.Join(";\n", arr1 + " - " + arr2);
                }
                rep.gtinh.Value = _lkq.GTinh.ToString();
                rep.celcqcq.Text = DungChung.Bien.TenCQCQ.ToUpper();
                rep.celtenbv.Text = DungChung.Bien.TenCQ.ToUpper();
                rep.CreateDocument();
                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                frm.ShowDialog();
            }
        }
        private void barPhieuKhamCK_20001_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            int makp = 0;
            if (lupKhoaKhamkb.EditValue != null)
                makp = Convert.ToInt32(lupTimMaKP.EditValue);
            phieu_kham_ck(_int_maBN, makp);
        }

        string dienbien = "", xetnghiemCLs = "", quatrinhDT = "", ketqua = "", huongDtri = "";// dùng để in phiếu sơ kết 15 ngày
        private void phieu_soket15ngay(int mabn, int soNgayDieuTri, string BSDT)
        {
            QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            frmIn frm = new frmIn();
            if (DungChung.Bien.MaBV == "12122" || DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24009" || DungChung.Bien.MaBV == "14017")
            {
                int idDienBien = 0;
                if (TTTab == 4)
                {
                    if (grvDienBien.GetFocusedRowCellValue(colIDdb) != null && grvDienBien.GetFocusedRowCellValue(colIDdb).ToString() != "")
                        idDienBien = Convert.ToInt32(grvDienBien.GetFocusedRowCellValue(colIDdb));
                }
                else if (TTTab == 7)
                {
                    if (grv15NgayDT.GetFocusedRowCellValue(colID15) != null && grv15NgayDT.GetFocusedRowCellValue(colID15).ToString() != "")
                        idDienBien = Convert.ToInt32(grv15NgayDT.GetFocusedRowCellValue(colID15));
                }

                frm_PhieuSoKet15Ngay frm1 = new frm_PhieuSoKet15Ngay(idDienBien, mabn, soNgayDieuTri, BSDT);
                frm1.ShowDialog();
            }

            else
            {
                BaoCao.rep_phieusoket15ngay rep = new BaoCao.rep_phieusoket15ngay(soNgayDieuTri, lupNguoiKhamkb.Text);

                BenhNhan benhnhan = _data.BenhNhans.Single(p => p.MaBNhan == mabn);

                var khambenh = _data.BNKBs.Where(p => p.MaBNhan == mabn).ToList();
                var canbo = _data.CanBoes.ToList();
                var kphong = _data.KPhongs.ToList();
                var vaovien = _data.VaoViens.Single(p => p.MaBNhan == mabn);

                var _lkq = (from kb in khambenh
                            join kp in kphong on kb.MaKP equals kp.MaKP
                            select new
                            {
                                kp.TenKP,
                                kb.ChanDoan,
                                kb.IDKB,
                                kb.MaICD,
                                kb.Giuong,
                                kb.Buong,
                                kb.BenhKhac
                            }).OrderByDescending(p => p.IDKB).ToList();
                if (_lkq.Count() > 0 && benhnhan != null && vaovien != null)
                {
                    rep.celtenbn.Text = benhnhan.TenBNhan.ToUpper().ToString();
                    rep.celtuoi.Text = benhnhan.Tuoi.ToString();
                    rep.celdiachi.Text = benhnhan.DChi.ToString();
                    rep.celkhoa.Text = _lkq.First().TenKP.ToString();
                    rep.celbuong.Text = _lkq.First().Buong.ToString();
                    rep.celgiuong.Text = _lkq.First().Giuong.ToString();
                    rep.gtinh.Value = benhnhan.GTinh.ToString();
                    if (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                        rep.celchandoan.Text = _lkq.First().MaICD + " - " + DungChung.Ham.GetICDstr(_lkq.First().ChanDoan + "; " + _lkq.First().BenhKhac);
                    else
                        rep.celchandoan.Text = _lkq.First().MaICD + " - " + _lkq.First().ChanDoan;
                    rep.sovv.Text = "Số vào viện: " + vaovien.SoVV;
                }
                rep.celDienBien.Text = dienbien;
                rep.celXNCLS.Text = xetnghiemCLs;
                rep.celQuaTrinhDTri.Text = quatrinhDT;
                rep.celDanhGiaKQ.Text = ketqua;
                rep.celHuongDtriVaTienLuong.Text = huongDtri;
                rep.celcqcq.Text = DungChung.Bien.TenCQCQ.ToUpper();
                rep.celtenbv.Text = DungChung.Bien.TenCQ.ToUpper();
                rep.CreateDocument();
                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                frm.ShowDialog();
            }
        }

        private void PassData(string dienbien, string xetnghiem, string qtrinhDT, string ketqua, string huongDtri)
        {
            this.dienbien = dienbien;
            this.xetnghiemCLs = xetnghiem;
            this.quatrinhDT = qtrinhDT;
            this.ketqua = ketqua;
            this.huongDtri = huongDtri;
        }
        private void barButtonItem3_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            phieu_soket15ngay(_int_maBN, 15, lupNguoiKhamkb.Text);
        }

        private void btnBNTuVongNgoaiVien_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            frm_BBKTTuVong frNhap = new frm_BBKTTuVong(_int_maBN);
            frNhap.ShowDialog();
        }

        private void barButtonItem4_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            frm_NhapBenhNhanLao frm = new frm_NhapBenhNhanLao(_int_maBN);
            frm.ShowDialog();
        }

        private void btnThucPhamChucNang_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            DonThuoc_NhaThuoc_27022(_int_maBN);
        }
        public void DonThuoc_NhaThuoc_27022(int MaBNhan)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            BaoCao.Rep_DonThuocTPCN_NhaThuoc_27022 rep = new BaoCao.Rep_DonThuocTPCN_NhaThuoc_27022();
            frmIn frm = new frmIn();
            var dv = (from a in data.DichVus
                      join b in data.TieuNhomDVs.Where(p => p.TenRG == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.ThucPhamChucNang) on a.IdTieuNhom equals b.IdTieuNhom
                      select new
                      {
                          a.MaDV,
                          a.TenDV,
                          b.TenRG,
                          a.DonVi
                      }).ToList();
            var dthuoc1 = (from a in data.DThuocs.Where(p => p.MaBNhan == MaBNhan)
                           join b in data.DThuoccts on a.IDDon equals b.IDDon
                           join d in data.CanBoes on a.MaCB equals d.MaCB
                           select new
                           {
                               a.MaBNhan,
                               MaThuoc = b.MaDV,
                               b.DonGia,
                               b.SoLuong,
                               CachDung = (b.DuongD ?? "") + " " + (b.SoLan ?? "") + " " + (b.MoiLan ?? "") + " " + (b.Luong ?? "") + " " + (b.DviUong ?? ""),
                               a.NgayKe,
                               d.TenCB,
                               b.MaDV,
                               a.GhiChu

                           }).OrderBy(p => p.NgayKe).ToList();
            var dthuoc = (from a in dthuoc1
                          join b in dv on a.MaDV equals b.MaDV
                          select new
                          {
                              a.MaBNhan,
                              MaThuoc = b.MaDV,
                              b.TenDV,
                              b.DonVi,
                              a.DonGia,
                              a.SoLuong,
                              a.CachDung,
                              a.NgayKe,
                              a.TenCB,
                              a.GhiChu
                          }).OrderBy(p => p.NgayKe).ToList();
            if (dthuoc.Count > 0)
            {
                int _mabn = dthuoc.Max(p => p.MaBNhan ?? 0);
                var ghichu = data.DThuocs.Where(p => p.MaBNhan == _mabn).ToList();
                int maxx = ghichu.Max(q => q.IDDon);
                ghichu = ghichu.Where(p => p.IDDon == maxx).ToList();
                string _ghichu = ghichu.First().GhiChu ?? "";

                if (ghichu.Count() >= 1)
                    rep.LoiDan.Value = "Lời dặn: " + _ghichu;
                else rep.LoiDan.Value = "Lời dặn: ";
                var bn = (from a in data.BenhNhans.Where(p => p.MaBNhan == _mabn)
                          join b in data.BNKBs on a.MaBNhan equals b.MaBNhan
                          join c in data.TTboXungs on a.MaBNhan equals c.MaBNhan
                          select new { a.GTinh, a.TenBNhan, a.NamSinh, a.NgaySinh, a.ThangSinh, a.NNhap, b.MaICD, b.ChanDoan, b.BenhKhac, b.IDKB, a.SThe, a.DChi, b.GhiChu, c.NThan }).OrderByDescending(p => p.IDKB).ToList();

                if (bn.Count > 0)
                {
                    int idkb = bn.Max(p => p.IDKB);
                    bn = bn.Where(p => p.IDKB == idkb).ToList();
                    rep.TenBN.Value = bn.First().TenBNhan;
                    rep.NamSinh.Value = bn.First().NamSinh;
                    if (bn.First().GTinh == 0)
                        rep.Gtinh.Value = "Nữ";
                    else rep.Gtinh.Value = "Nam";
                    rep.DChi.Value = bn.First().DChi;
                    if (bn.First().ChanDoan != null || bn.First().BenhKhac != null)
                        rep.ChanDoan.Value = "Chẩn đoán: " + bn.First().ChanDoan + "; " + bn.First().BenhKhac;
                    rep.SoThe.Value = bn.First().SThe;
                    rep.TenNguoiThan.Value = bn.First().NThan;
                }
                else rep.LoiDan.Value = "Lời dặn: ";
                DateTime ngay = dthuoc.Min(p => p.NgayKe.Value);
                rep.NgayKe.Value = "Ngày " + ngay.Day + " tháng " + ngay.Month + " năm " + ngay.Year;
                rep.BSKham.Value = dthuoc.First().TenCB;
            }
            else
            {
                rep.LoiDan.Value = "Lời dặn: ";
                rep.NgayKe.Value = "Ngày ........ tháng ........ năm ........";
            }
            rep.DataSource = dthuoc;
            rep.BindingData();
            rep.CreateDocument();
            frm.prcIN.PrintingSystem = rep.PrintingSystem;
            frm.ShowDialog();
        }

        private void btnMoiKb_EnabledChanged(object sender, EventArgs e)
        {
            SimpleButton btn = (SimpleButton)sender;
            if (btn.Enabled)
                btn.BackColor = Color.Red;
            else
                btn.BackColor = Color.LightGray;
        }

        private void barButtonItem6_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            InPhieuDV_KT_20001(_int_maBN);
        }

        private void btn_EnabledChanged(object sender, EventArgs e)
        {
            SimpleButton btn = (SimpleButton)sender;
            if (btn.Enabled)
                btn.StyleController = styleEnable;
            else
                btn.StyleController = styleDisable;
        }

        private void lupKhoaDT_EditValueChanged(object sender, EventArgs e)
        {
            if (radGiaiQuyet.SelectedIndex == 3)
            {
                int MaKPMoi = 0, MaKPCu = 0;
                if (lupKhoaDT.EditValue != null)
                    MaKPMoi = Convert.ToInt32(lupKhoaDT.EditValue);
                if (lupTimMaKP.EditValue != null)
                    MaKPCu = Convert.ToInt32(lupKhoaKhamkb.EditValue);
                if (MaKPCu == MaKPMoi)
                {
                    MessageBox.Show("Không thể chuyển bệnh nhân đến khoa phòng đang điều trị", "Thông báo", MessageBoxButtons.OK);
                    lupKhoaDT.Focus();
                }
            }
            btnChanDoanKH.Enabled = (lupKhoaDTKH.EditValue != null && lupKhoaDTKH.EditValue.ToString() != "");
        }

        private void txtMaBNhan_TextChanged(object sender, EventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            var qdt = (from dt in DaTaContext.DThuocs.Where(p => p.MaBNhan == _int_maBN)
                       join dtct in DaTaContext.DThuoccts on dt.IDDon equals dtct.IDDon
                       select dtct.ThanhTien).ToList();
            if (qdt.Count > 0)
                lbltongCP.Text = qdt.Sum(p => p).ToString("#,#");
            else
                lbltongCP.Text = "0";
        }

        private void btnDSBuongGiuong_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int m = Convert.ToInt32(lupTimMaKP.EditValue);
            if (m != 0)
            {
                frm_DSSDBuong_Giuong frm = new frm_DSSDBuong_Giuong(m);
                frm.lupKhoaphong.Enabled = false;
                frm.ShowDialog();
            }
            else
            {
                frm_DSSDBuong_Giuong frm = new frm_DSSDBuong_Giuong();
                frm.ShowDialog();
            }
        }

        private void radGiaiQuyet_SelectedIndexChanged(object sender, EventArgs e)
        {
            dt_NgayChuyen.Enabled = false;
            lupKhoaDT.Enabled = false;
            switch (radGiaiQuyet.SelectedIndex)
            {
                case 3:
                    dt_NgayChuyen.Enabled = true;
                    lupKhoaDT.Enabled = true;
                    break;
                case 0:
                    dt_NgayChuyen.Enabled = true;
                    break;
                case 2:
                    dt_NgayChuyen.Enabled = true;
                    break;

                default:
                    dt_NgayChuyen.EditValue = null;
                    lupKhoaDT.EditValue = null;
                    dt_NgayChuyen.Enabled = false;
                    lupKhoaDT.Enabled = false;
                    break;

            }


        }

        private void barButtonItem7_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            phieu_soket15ngay(_int_maBN, 30, lupNguoiKhamkb.Text);
        }

        private void grvDonThuocct_ShownEditor(object sender, EventArgs e)
        {

            #region
            GridView view = (GridView)sender;
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            if (view.FocusedColumn.FieldName == "MaDV")
            {
                LookUpEdit edit;

                if (view.ActiveEditor is LookUpEdit)
                {
                    int idDonct = 0;
                    edit = view.ActiveEditor as LookUpEdit;

                    if (grvDonThuocct.GetFocusedRowCellValue(colIDDonct) != null && grvDonThuocct.GetFocusedRowCellValue(colIDDonct).ToString() != "")
                        idDonct = Convert.ToInt32(grvDonThuocct.GetFocusedRowCellValue(colIDDonct).ToString());
                    edit.Properties.DataSource = null;
                    if (idDonct > 0)
                        edit.Properties.DataSource = _lDvTheoKho.OrderBy(p => p.TenDV).ToList();
                    else
                        edit.Properties.DataSource = _lConTon.OrderBy(p => p.TenDV).ToList();
                    edit.Properties.DisplayMember = "TenDV";
                    edit.Properties.ValueMember = "MaDV";
                }
            }


            #endregion
        }
        void LayCDHA30007(QLBV_Database.QLBVEntities _data, int _Mabn)
        {
            var _ldv = (from dv in _data.DichVus
                        join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                        join dvct in _data.DichVucts on dv.MaDV equals dvct.MaDV
                        select new { tn.IdTieuNhom, tn.TenRG, tn.IDNhom, dv.TenDV, dv.MaDV, dvct.TenDVct, dvct.MaDVct, dvct.DonVi }).ToList();
            var _lcls = (from cls in DaTaContext.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.Status == 1)
                         join cd in DaTaContext.ChiDinhs on cls.IdCLS equals cd.IdCLS
                         join clsct in DaTaContext.CLScts on cd.IDCD equals clsct.IDCD
                         select new { cls.MaCBth, cd.MaDV, cls.MaCB, clsct.MaDVct, clsct.KetQua, cd.KetLuan, cls.NgayTH, cls.NgayThang }).ToList();
            var kq1 = (from dv in _ldv.Where(p => p.IDNhom == 2 || p.IDNhom == 3)
                       join cls in _lcls on dv.MaDVct equals cls.MaDVct
                       select new
                       {
                           dv.TenDV,
                           dv.TenDVct,
                           cls.KetQua,
                           TenDVctkq = dv.TenDV + ": " + cls.KetLuan,
                           NgayThang = cls.NgayThang.Value.Date,
                           NgayTH = cls.NgayTH.Value.Date,
                           cls.MaCB,
                           cls.MaCBth
                       }).ToList();
            var ngaycd = kq1.Select(p => p.NgayThang).Distinct().OrderBy(p => p).ToList();
            var ngayth = kq1.Select(p => p.NgayTH).Distinct().OrderBy(p => p).ToList();
            foreach (var item in ngaycd)
            {
                var chidinh = (from a in kq1.Where(p => p.NgayThang == item)
                               group a by new { a.NgayThang, a.TenDV } into kq
                               select new
                               {
                                   kq.Key.NgayThang,
                                   TenXN = string.Join(",\n ", kq.Select(p => p.TenDV).ToArray())
                               }).ToList();

                DateTime NgayNhap1 = DungChung.Ham.NgayDen(item);
                var dienbien = _data.DienBiens.Where(p => p.NgayNhap <= item && p.NgayNhap <= NgayNhap1).OrderByDescending(p => p.NgayNhap).FirstOrDefault();
                if (dienbien != null)
                {
                    dienbien.YLenh += "\nChỉ định CĐHA:\n" + string.Join("\n", chidinh.Select(p => p.TenXN).ToArray());
                    _data.SaveChanges();
                }
                else
                {
                    DienBien moi = new DienBien();
                    moi.NgayNhap = item.AddHours(23);
                    moi.YLenh = "Chỉ định CĐHA:\n" + string.Join("\n", chidinh.Select(p => p.TenXN).ToArray());
                    _data.DienBiens.Add(moi);
                    _data.SaveChanges();
                }
            }
            foreach (var item in ngayth)
            {
                var ketqua = (from a in kq1.Where(p => p.NgayTH == item)
                              group a by new { a.NgayTH, a.TenDV } into kq
                              select new
                              {
                                  kq.Key.TenDV,
                                  kq.Key.NgayTH,
                                  TenXN = string.Join("\n", kq.Select(p => p.TenDVctkq).ToArray())
                              }).ToList();
                DateTime NgayNhap1 = DungChung.Ham.NgayDen(item);
                var dienbien = _data.DienBiens.Where(p => p.NgayNhap <= item && p.NgayNhap <= NgayNhap1).OrderByDescending(p => p.NgayNhap).FirstOrDefault();
                if (dienbien != null)
                {
                    dienbien.DienBien1 += "\nKết quả CĐHA:\n" + string.Join("\n", ketqua.Select(p => p.TenXN).ToArray());
                    _data.SaveChanges();
                }
                else
                {
                    DienBien moi = new DienBien();
                    moi.NgayNhap = item.AddHours(23);
                    moi.DienBien1 = "Kết quả CĐHA:\n" + string.Join("\n", ketqua.Select(p => p.TenXN).ToArray());
                    _data.DienBiens.Add(moi);
                    _data.SaveChanges();
                }
            }
        }
        void LayKQXN30007(QLBV_Database.QLBVEntities _data, int _Mabn)
        {
            var _ldv = (from dv in _data.DichVus
                        join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                        join dvct in _data.DichVucts on dv.MaDV equals dvct.MaDV
                        select new { tn.IdTieuNhom, tn.TenRG, tn.IDNhom, dv.TenDV, dv.MaDV, dvct.TenDVct, dvct.MaDVct, dvct.DonVi }).ToList();
            var _lcls = (from cls in DaTaContext.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.Status == 1)
                         join cd in DaTaContext.ChiDinhs on cls.IdCLS equals cd.IdCLS
                         join clsct in DaTaContext.CLScts on cd.IDCD equals clsct.IDCD
                         select new { cls.MaCBth, cd.MaDV, cls.MaCB, clsct.MaDVct, clsct.KetQua, cls.NgayTH, cls.NgayThang }).ToList();
            var kq1 = (from dv in _ldv.Where(p => p.IDNhom == 1 || p.IDNhom == 2)
                       join cls in _lcls on dv.MaDVct equals cls.MaDVct
                       select new
                       {
                           dv.TenDV,
                           dv.TenDVct,
                           cls.KetQua,
                           TenDVctkq = dv.TenDVct + ": " + cls.KetQua + " " + dv.DonVi,
                           NgayThang = cls.NgayThang.Value.Date,
                           NgayTH = cls.NgayTH.Value.Date,
                           cls.MaCB,
                           cls.MaCBth
                       }).ToList();
            var ngaycd = kq1.Select(p => p.NgayThang).Distinct().OrderBy(p => p).ToList();
            var ngayth = kq1.Select(p => p.NgayTH).Distinct().OrderBy(p => p).ToList();
            foreach (var item in ngaycd)
            {
                var chidinh = (from a in kq1.Where(p => p.NgayThang == item)
                               group a by new { a.NgayThang, a.TenDV } into kq
                               select new
                               {
                                   kq.Key.NgayThang,
                                   TenXN = (kq.Select(p => p.TenDV).ToList().FirstOrDefault().ToLower().Contains("tổng phân tích tế bào máu ngoại vi") || kq.Select(p => p.TenDV).ToList().FirstOrDefault().ToLower().Contains("tổng phân tích nước tiểu")) ? kq.Select(p => p.TenDV).ToList().FirstOrDefault() : string.Join(",\n ", kq.Select(p => p.TenDVct).ToArray())
                               }).ToList();

                DateTime NgayNhap1 = DungChung.Ham.NgayDen(item);
                var dienbien = _data.DienBiens.Where(p => p.NgayNhap <= item && p.NgayNhap <= NgayNhap1).OrderByDescending(p => p.NgayNhap).FirstOrDefault();
                if (dienbien != null)
                {
                    dienbien.YLenh += "Chỉ định xét nghiệm:\n" + string.Join("\n", chidinh.Select(p => p.TenXN).ToArray());
                    _data.SaveChanges();
                }
                else
                {
                    DienBien moi = new DienBien();
                    moi.NgayNhap = item.AddHours(23);
                    moi.YLenh = "Chỉ định xét nghiệm:\n" + string.Join("\n", chidinh.Select(p => p.TenXN).ToArray());
                    _data.DienBiens.Add(moi);
                    _data.SaveChanges();
                }
            }
            foreach (var item in ngayth)
            {
                var ketqua = (from a in kq1.Where(p => p.NgayTH == item)
                              group a by new { a.NgayTH, a.TenDV } into kq
                              select new
                              {
                                  kq.Key.TenDV,
                                  kq.Key.NgayTH,
                                  TenXN = string.Join("\n", kq.Select(p => p.TenDVctkq).ToArray())
                              }).ToList();
                DateTime NgayNhap1 = DungChung.Ham.NgayDen(item);
                var dienbien = _data.DienBiens.Where(p => p.NgayNhap <= item && p.NgayNhap <= NgayNhap1).OrderByDescending(p => p.NgayNhap).FirstOrDefault();
                if (dienbien != null)
                {
                    dienbien.DienBien1 += "\nChỉ định xét nghiệm:\n" + string.Join("\n", ketqua.Select(p => p.TenXN).ToArray());
                    _data.SaveChanges();
                }
                else
                {
                    DienBien moi = new DienBien();
                    moi.NgayNhap = item.AddHours(23);
                    moi.DienBien1 = "\nChỉ định xét nghiệm:\n" + string.Join("\n", ketqua.Select(p => p.TenXN).ToArray());
                    _data.DienBiens.Add(moi);
                    _data.SaveChanges();
                }
            }
        }
        private void btngetKQCLS_Click(object sender, EventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            if (DialogResult.Yes == MessageBox.Show("Lấy kết quả xét nghiệm vào mục diễn biến bệnh?", "Hỏi lưu", MessageBoxButtons.YesNo, MessageBoxIcon.Question))
            {
                var xetnghiem = (from cls in DaTaContext.CLS.Where(p => p.MaBNhan == _int_maBN)
                                 join cd in DaTaContext.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                 join clsct in DaTaContext.CLScts on cd.IDCD equals clsct.IDCD
                                 join dvct in DaTaContext.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                 join dv in DaTaContext.DichVus on dvct.MaDV equals dv.MaDV
                                 join tn in DaTaContext.TieuNhomDVs.Where(p => p.IDNhom == 1 || p.IDNhom == 2) on dv.IdTieuNhom equals tn.IdTieuNhom //p.TenRG.Contains("XN")
                                 select new
                                 {
                                     cd.MaCBth,
                                     dv.TenDV,
                                     clsct.KetQua,
                                     cls.MaCB,
                                     cd.Status,
                                     cls.NgayTH,
                                     tn.IDNhom,
                                     cls.NgayThang,
                                     dvct.TenDVct,
                                     TenDVctkq = dvct.TenDVct + ": " + clsct.KetQua + " " + dvct.DonVi,
                                     cls.IdCLS,
                                     kqcdha = dv.TenDV + ":" + cd.KetLuan
                                 }).OrderBy(p => p.IdCLS).ToList();
                var ketqua = (from a in xetnghiem.Where(p => p.Status == 1 && p.IDNhom == 1)
                              group new { a } by new { a.NgayTH, a.MaCBth } into kq
                              select new
                              {
                                  kq.Key,
                                  TenXN = string.Join("\n", (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017" || DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049") ? kq.Select(p => p.a.TenDV).Distinct().ToArray() : kq.Select(p => p.a.TenDVctkq).ToArray()),
                              }).ToList();
                var chidinh = (from a in xetnghiem.Where(p => p.IDNhom == 1)
                               group new { a } by new { a.NgayThang, a.MaCB } into kq
                               select new
                               {
                                   kq.Key,
                                   kqXN = string.Join("\n", (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017" || DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049") ? kq.Select(p => p.a.TenDV).Distinct().ToArray() : kq.Select(p => p.a.TenDV + ": " + p.a.KetQua).ToArray()),
                                   TenXN = (DungChung.Bien.MaBV == "30007" && (kq.Select(p => p.a.TenDV).ToList().FirstOrDefault().ToLower().Contains("tổng phân tích tế bào máu ngoại vi") || kq.Select(p => p.a.TenDV).ToList().FirstOrDefault().ToLower().Contains("tổng phân tích nước tiểu"))) ? kq.Select(p => p.a.TenDV).ToList().FirstOrDefault() : ((DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017") ? string.Join(",\n ", kq.Select(p => p.a.TenDV).Distinct().ToArray()) : string.Join(",\n ", kq.Select(p => p.a.TenDVct).ToArray())),
                               }).ToList();
                var Ktrabn = DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN).Where(p => p.NoiTru == 0 && p.DTNT == false).ToList();
                string KqDienBienMau = "";
                if (DungChung.Bien.MaBV == "30005" || DungChung.Bien.MaBV == "30280")
                    KqDienBienMau = "Bệnh nhân tỉnh, tiếp xúc tốt \nDa, niêm mạc hồng \nTình trạng phù: \nMạch...............lần/phút \nHuyết áp.......................mmHg \nNhiệt độ.............°C \nTim: đều, rõ không có tiếng thối \nPhổi:................... \nBụng mềm, không chướng \nKhông liệt, hội chứng não-màng não: âm tính";
                var dbbenh = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN && p.NgayNhap != null).ToList();
                if (DungChung.Bien.MaBV == "24012")
                {
                    dbbenh = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN && p.NgayNhap != null && p.NgayNhap > dedenngaydb.DateTime && p.NgayNhap < dedenngaydb.DateTime).ToList();
                }

                int i = 0;
                foreach (var item in chidinh)
                {
                    if (dbbenh.Where(p => p.NgayNhap == item.Key.NgayThang).FirstOrDefault() == null)
                    {
                        DienBien dbmoi = new DienBien();
                        dbmoi.MaBNhan = _int_maBN;
                        dbmoi.NgayNhap = item.Key.NgayThang;
                        if (DungChung.Bien.MaBV == "30009")
                        {
                            dbmoi.DienBien1 = item.kqXN;
                        }
                        else
                            dbmoi.DienBien1 = (Ktrabn.Count > 0 && i == 0) ? KqDienBienMau : "";
                        dbmoi.YLenh = "Chỉ định xét nghiệm: \n" + item.TenXN;
                        dbmoi.MaCB = item.Key.MaCB;
                        DaTaContext.DienBiens.Add(dbmoi);
                        DaTaContext.SaveChanges();
                        i++;
                    }
                }

                if (Ktrabn.Count > 0)
                {
                    if (DialogResult.Yes == MessageBox.Show("Bệnh nhân ngoại trú \nBạn có muốn lấy cả chi tiết đơn thuốc vào diễn biến bệnh", "Hỏi lưu", MessageBoxButtons.YesNo, MessageBoxIcon.Question))
                    {
                        var _ldichvu = DaTaContext.DichVus.Where(p => p.PLoai == 1).ToList();
                        var _lDThuocct = (from dt in DaTaContext.DThuocs.Where(p => p.PLDV == 1 && p.MaBNhan == _int_maBN)
                                          join dtct in DaTaContext.DThuoccts on dt.IDDon equals dtct.IDDon
                                          select new { dtct.MaDV, dtct.SoLuong, dt.MaCB, dtct.DonVi, HuongDan = (dtct.DuongD ?? "") + " " + (dtct.SoLan ?? "") + " " + (dtct.MoiLan ?? "") + " " + (dtct.Luong ?? "") + " " + (dtct.DviUong ?? "") + " " + dtct.GhiChu, dt.NgayKe }).ToList();
                        var _lketqua = (from dv in _ldichvu
                                        join dt in _lDThuocct on dv.MaDV equals dt.MaDV
                                        group new { dv, dt } by new { dv.TenDV, dt.MaDV, dt.HuongDan, dt.NgayKe, dt.DonVi, dt.MaCB, dv.HamLuong, dv.TenHC } into kq
                                        select new
                                        {
                                            kq.Key.NgayKe,
                                            kq.Key.MaDV,
                                            kq.Key.MaCB,
                                            TenDV = (DungChung.Bien.MaBV == "30007" ? ((kq.Key.TenHC.Contains(",") || kq.Key.TenHC.Contains("+") || kq.Key.TenHC.Contains(";")) ? kq.Key.TenDV : (kq.Key.TenHC + " (" + kq.Key.TenDV + ") " + kq.Key.HamLuong)) : kq.Key.TenDV) + " x " + kq.Sum(p => p.dt.SoLuong) + "-" + kq.Key.DonVi + "\n" + kq.Key.HuongDan
                                        }).ToList();
                        string Ylenh = "";
                        foreach (var item in _lketqua)
                        {
                            Ylenh += item.TenDV + "\n";
                        }
                        if (DungChung.Bien.MaBV != "20001" && DungChung.Bien.MaBV != "14018" && DungChung.Bien.MaBV != "14017")//20001 ko lấy kq xét nghiệm
                        {
                            if (ketqua.Count > 0)
                            {
                                int a = 0;
                                foreach (var item in ketqua)
                                {
                                    if (dbbenh.Where(p => p.NgayNhap == item.Key.NgayTH).FirstOrDefault() == null)
                                    {
                                        DienBien dbmoi = new DienBien();
                                        dbmoi.MaBNhan = _int_maBN;
                                        dbmoi.NgayNhap = item.Key.NgayTH;
                                        dbmoi.DienBien1 = "Sao xét nghiệm: \n" + item.TenXN;
                                        dbmoi.YLenh = a == 0 ? "Chi tiết đơn thuốc: \n" + Ylenh : "";
                                        dbmoi.MaCB = item.Key.MaCBth;
                                        DaTaContext.DienBiens.Add(dbmoi);
                                        DaTaContext.SaveChanges();
                                        a++;
                                    }
                                }
                            }
                            else
                            {

                                DienBien dbmoi = new DienBien();
                                dbmoi.MaBNhan = _int_maBN;
                                dbmoi.NgayNhap = _lketqua.Count() > 0 ? _lketqua.First().NgayKe : System.DateTime.Now;
                                dbmoi.DienBien1 = (DungChung.Bien.MaBV == "30005" || DungChung.Bien.MaBV == "30280") ? KqDienBienMau : "";
                                dbmoi.YLenh = "Chi tiết đơn thuốc: \n" + Ylenh;
                                dbmoi.MaCB = _lDThuocct.Count() > 0 ? _lDThuocct.First().MaCB : "";


                                DaTaContext.DienBiens.Add(dbmoi);
                                DaTaContext.SaveChanges();
                            }
                        }
                    }
                    else
                    {
                        if (DungChung.Bien.MaBV != "20001" && DungChung.Bien.MaBV != "14018" && DungChung.Bien.MaBV != "14017")//20001 ko lấy kq xét nghiệm
                        {
                            foreach (var item in ketqua)
                            {
                                if (dbbenh.Where(p => p.NgayNhap == item.Key.NgayTH).FirstOrDefault() == null)
                                {
                                    DienBien dbmoi = new DienBien();
                                    dbmoi.MaBNhan = _int_maBN;
                                    dbmoi.NgayNhap = item.Key.NgayTH;
                                    dbmoi.DienBien1 = "Sao xét nghiệm: \n" + item.TenXN;
                                    dbmoi.MaCB = item.Key.MaCBth;
                                    DaTaContext.DienBiens.Add(dbmoi);
                                    DaTaContext.SaveChanges();
                                }
                            }
                        }
                    }
                    if (DialogResult.Yes == MessageBox.Show("Bệnh nhân ngoại trú \nBạn có muốn lấy cả kết quả CĐHA vào diễn biến bệnh", "Hỏi lưu", MessageBoxButtons.YesNo, MessageBoxIcon.Question))
                    {
                        var chidinhcdha = (from a in xetnghiem.Where(p => p.IDNhom == 2)
                                           group new { a } by new { a.NgayThang, a.MaCB, a.TenDV } into kq
                                           select new
                                           {
                                               kq.Key,
                                               TenXN = kq.Key.TenDV,
                                           }).ToList();
                        var ketquacdha = (from a in xetnghiem.Where(p => p.Status == 1 && p.IDNhom == 2)
                                          group new { a } by new { a.NgayThang, a.MaCBth } into kq
                                          select new
                                          {
                                              kq.Key,
                                              TenXN = string.Join("\n", kq.Select(p => p.a.kqcdha).ToArray())
                                          }).ToList();
                        foreach (var item in chidinhcdha)
                        {
                            if (dbbenh.Where(p => p.NgayNhap == item.Key.NgayThang).FirstOrDefault() == null)
                            {
                                DienBien dbmoi = new DienBien();
                                dbmoi.MaBNhan = _int_maBN;
                                dbmoi.NgayNhap = item.Key.NgayThang;
                                dbmoi.DienBien1 = "";
                                dbmoi.YLenh = "Chỉ định chẩn đoán hình ảnh: \n" + item.TenXN;
                                dbmoi.MaCB = item.Key.MaCB;
                                DaTaContext.DienBiens.Add(dbmoi);
                                DaTaContext.SaveChanges();
                            }
                        }
                        foreach (var item in ketquacdha)
                        {
                            if (dbbenh.Where(p => p.NgayNhap == item.Key.NgayThang).FirstOrDefault() == null)
                            {
                                DienBien dbmoi = new DienBien();
                                dbmoi.MaBNhan = _int_maBN;
                                dbmoi.NgayNhap = item.Key.NgayThang;
                                dbmoi.DienBien1 = "Sao chẩn đoán hình ảnh: \n" + item.TenXN;
                                dbmoi.MaCB = item.Key.MaCBth;
                                DaTaContext.DienBiens.Add(dbmoi);
                                DaTaContext.SaveChanges();
                            }
                        }
                    }
                }
                else
                {
                    if (DungChung.Bien.MaBV != "20001" && DungChung.Bien.MaBV != "14018" && DungChung.Bien.MaBV != "14017" && DungChung.Bien.MaBV != "30009")//20001 ko lấy kq xét nghiệm
                    {
                        foreach (var item in ketqua)
                        {
                            if (dbbenh.Where(p => p.NgayNhap == item.Key.NgayTH).FirstOrDefault() == null)
                            {
                                DienBien dbmoi = new DienBien();
                                dbmoi.MaBNhan = _int_maBN;
                                dbmoi.NgayNhap = item.Key.NgayTH;
                                dbmoi.DienBien1 = "Sao xét nghiệm: \n" + item.TenXN;
                                dbmoi.MaCB = item.Key.MaCBth;
                                DaTaContext.DienBiens.Add(dbmoi);
                                DaTaContext.SaveChanges();
                            }
                        }
                    }
                    if (DungChung.Bien.MaBV == "300091")//20001 ko lấy kq xét nghiệm
                    {
                        foreach (var item in ketqua)
                        {
                            if (dbbenh.Where(p => p.NgayNhap == item.Key.NgayTH).FirstOrDefault() == null)
                            {
                                DienBien dbmoi = new DienBien();
                                dbmoi.MaBNhan = _int_maBN;
                                dbmoi.NgayNhap = item.Key.NgayTH;
                                dbmoi.DienBien1 = "Sao xét nghiệm: \n" + item.TenXN;
                                dbmoi.MaCB = item.Key.MaCBth;
                                DaTaContext.DienBiens.Add(dbmoi);
                                DaTaContext.SaveChanges();
                            }
                        }
                    }
                    //}
                }

            }
            grvBNhankb_FocusedRowChanged(null, null);



        }

        private void grv_Dthuoc_InitNewRow_1(object sender, InitNewRowEventArgs e)
        {
            grv_Dthuoc.SetFocusedRowCellValue(colNgayKe_kdon, System.DateTime.Now);// kiểm tra lại
        }

        private void barButtonItem8_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            if (!string.IsNullOrEmpty(txtIdkb.Text))
            {
                QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                int id = Convert.ToInt32(txtIdkb.Text);
                frm_LinhMau frm = new frm_LinhMau(_maBN, id);
                frm.ShowDialog();
            }
        }

        private void btnChiDinhNgayGiuong_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            int makp = 0;
            if (lupTimMaKP.EditValue != null)
                makp = Convert.ToInt32(lupTimMaKP.EditValue);
            frm_CapNhatNgayGiuong frm = new frm_CapNhatNgayGiuong(_int_maBN, DateTime.Now, 3);//, makp);
            frm.ShowDialog();
            if (xtraNgoaiTru.SelectedTabPage == xtraChiDinh)
                SetTTTab();
        }

        private void btnPhieuChamCom_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            frm_PhieuCom frm = new frm_PhieuCom();
            frm.ShowDialog();

        }

        private void txtBenhKhac2_EditValueChanged(object sender, EventArgs e)
        {
            if (TTLuu == 1 || TTLuu == 2)
            {
                if (!string.IsNullOrEmpty(txtBenhKhac2.Text))
                {
                    if (txtBenhKhac2.EditValue.ToString() == "0")
                    {
                        txtBenhKhac2.EditValue = "";
                        LupICD2.EditValue = "";
                        txtBenhPhu2.Text = "";
                    }
                    else
                    {
                        LupICD2.EditValue = lICD.Where(p => p.TenICD == txtBenhKhac2.EditValue.ToString()).Select(p => p.MaICD).FirstOrDefault();
                        txtBenhPhu2.EditValue = lICD.Where(p => p.TenICD == txtBenhKhac2.EditValue.ToString()).Select(p => p.TenICD).FirstOrDefault();
                    }

                }
                else
                {
                    LupICD2.EditValue = "";
                    txtBenhPhu2.Text = "";
                }
            }
        }

        private void txtBenhKhac3_EditValueChanged(object sender, EventArgs e)
        {
            if (TTLuu == 1 || TTLuu == 2)
            {
                if (!string.IsNullOrEmpty(txtBenhKhac3.Text))
                {
                    if (txtBenhKhac3.EditValue.ToString() == "0")
                    {
                        txtBenhKhac3.EditValue = "";
                        LupICD3.EditValue = "";
                        txtBenhPhu3.Text = "";
                    }
                    else
                    {

                        LupICD3.EditValue = lICD.Where(p => p.TenICD == txtBenhKhac3.EditValue.ToString()).Select(p => p.MaICD).FirstOrDefault();
                        txtBenhPhu3.Text = lICD.Where(p => p.TenICD == txtBenhKhac3.EditValue.ToString()).Select(p => p.TenICD).FirstOrDefault();
                    }

                }
                else
                {
                    LupICD3.EditValue = "";
                    txtBenhPhu3.Text = "";
                }
            }
        }

        private void txtBenhKhac4_EditValueChanged(object sender, EventArgs e)
        {
            if (trangthai == 1 || trangthai == 2)
            {
                if (txtBenhKhac4.Text.Trim().Split(';').Count() > 1)
                    isChonNhieuBenhKhac = true;
                else
                {
                    isChonNhieuBenhKhac = false;
                }
                if (!string.IsNullOrEmpty(txtBenhKhac4.Text) && !isChonNhieuBenhKhac)
                {
                    var a = lICD.Where(p => p.TenICD == txtBenhKhac4.EditValue.ToString()).ToList();
                    if (a.Count > 0)
                    {
                        LupICD4.EditValue = lICD.FirstOrDefault(p => p.TenICD == txtBenhKhac4.EditValue.ToString().TrimStart().TrimEnd()).MaICD;
                    }
                }
            }
            txtBenhKhac.Text = txtBenhKhac4.Text;
        }

        private void barButtonItem10_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            int idkb = 0;

            int rs;
            int _int_maBN = 0;
            int _makp = 0;
            if (Int32.TryParse(lupTimMaKP.EditValue.ToString(), out rs))
            {
                _makp = Convert.ToInt32(lupTimMaKP.EditValue.ToString());
            }
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            var bn1 = data.BNKBs.Where(p => p.MaBNhan == _int_maBN).Where(p => p.MaKP == _makp).ToList();
            if (bn1.Count > 0)
            {
                if (txtIdkb.Text != "" && !String.IsNullOrEmpty(txtIdkb.Text))
                {
                    idkb = Convert.ToInt32(txtIdkb.Text);
                    var idkb1 = bn1.Where(p => p.IDKB == idkb && p.MaBNhan == _int_maBN && p.MaKP == _makp).ToList();
                    if (idkb1.Count == 0)
                        idkb = bn1.Where(p => p.MaBNhan == _int_maBN).Max(p => p.IDKB);
                }
                else
                {
                    idkb = bn1.Where(p => p.MaBNhan == _int_maBN).Max(p => p.IDKB);
                }
            }
            else
            {
                string tenkp = data.KPhongs.Where(p => p.MaKP == _makp).FirstOrDefault().TenKP;
                MessageBox.Show("Bạn chưa nhập chẩn đoán tại khoa " + tenkp, "Thông báo");
            }
            if (idkb != 0)
            {
                FormNhap.frm_LinhMau frm = new FormNhap.frm_LinhMau(_int_maBN, idkb);
                frm.ShowDialog();
            }
        }

        private void btnCNBNSangDV_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int mabn = string.IsNullOrEmpty(txtMaBNhan.Text) ? 0 : Convert.ToInt32(txtMaBNhan.Text);
            FormThamSo.frm_CapNhatDVBenhNhanNoThe frm = new frm_CapNhatDVBenhNhanNoThe(mabn, 2);
            frm.ShowDialog();
        }

        private void grvDichVu_FocusedRowChanged(object sender, DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs e)
        {
            //check đã thu thẳng rồi thì không cho sửa trong ngoài DM
            int iddonct = 0;
            if (grvDichVu.GetFocusedRowCellValue(colIDctdv) != null && Convert.ToInt32(grvDichVu.GetFocusedRowCellValue(colIDctdv)) > 0)
            {
                iddonct = Convert.ToInt32(grvDichVu.GetFocusedRowCellValue(colIDctdv));
            }
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);

            var qdt = data.DThuoccts.Where(p => p.IDDonct == iddonct).Where(p => p.ThanhToan == 1).FirstOrDefault();

            if (qdt != null)
                colTrongBHdv.OptionsColumn.ReadOnly = true;
            else
            {
                colTrongBHdv.OptionsColumn.ReadOnly = false;
            }
        }

        private void grvDichVu_DataSourceChanged(object sender, EventArgs e)
        {
            grvDichVu_FocusedRowChanged(null, null);
        }

        private void txtBenhKhac4_PreviewKeyDown(object sender, PreviewKeyDownEventArgs e)
        {
            //try
            //{
            //    if (e.KeyCode == Keys.F9)
            //    {
            //        FormThamSo.frm_TimKiem frm = new FormThamSo.frm_TimKiem();
            //        frm.GetData = new FormThamSo.frm_TimKiem._getstring(getICD4);
            //        frm.ShowDialog();
            //    }
            //}
            //catch (Exception) { }
        }

        private void btnTruyenMau_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int Mabn = 0, idkb = 0;
            if (!string.IsNullOrEmpty(txtMaBNhan.Text))
            {
                if (!string.IsNullOrEmpty(txtIdkb.Text))
                {
                    idkb = Convert.ToInt32(txtIdkb.Text);
                    Mabn = Convert.ToInt32(txtMaBNhan.Text);
                }
                else
                {
                    MessageBox.Show("Bệnh nhân chua có khám bệnh");
                }
            }
            else
            {
                MessageBox.Show("Bạn chưa chọn bệnh nhân");
            }

        }

        #region Phiếu dịch vụ - kỹ thuật 20001
        private void InPhieuTT_01071(int _MaBN)
        {
            List<l_CTThuoc> _ldthuocct = new List<l_CTThuoc>();
            DateTime ngayvao = System.DateTime.Now.Date;
            DateTime ngayra = System.DateTime.Now.Date;
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            frmIn frm = new frmIn();

            var qtong = (from dthc in data.DThuocs.Where(p => p.MaBNhan == _maBN)
                         join dtct in data.DThuoccts on dthc.IDDon equals dtct.IDDon
                         join dv in data.DichVus on dtct.MaDV equals dv.MaDV
                         join tn in data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                         where tn.TenRG == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.ThuThuat
                         select new { dthc, dtct, dv.TenDV, dv.DonVi, dv.TenRG }).ToList();
            if (_maBN > 0)
            {
                var dt_rep = (from dt in qtong
                              group dt by new { dt.dtct.DonGia, dt.dtct.NgayNhap, dt.dtct.DonVi, dt.dtct.MaDV, dt.dtct.DSCBTH } into kq
                              select new { kq.Key.DSCBTH, kq.Key.DonGia, kq.Key.DonVi, kq.Key.NgayNhap, kq.Key.MaDV, SoLuong = kq.Sum(p => p.dtct.SoLuong) }).Where(p => p.SoLuong != 0).ToList();

                foreach (var a in dt_rep)
                {
                    l_CTThuoc moi = new l_CTThuoc();
                    moi.MaDV = a.MaDV == null ? 0 : a.MaDV.Value;
                    moi.NgayKe = a.NgayNhap.Value;
                    moi.SoLuong = a.SoLuong;
                    moi.DonGia = a.DonGia;
                    moi.DonVi = a.DonVi;
                    if (!string.IsNullOrEmpty(a.DSCBTH))
                    {
                        if (a.DSCBTH.Contains(';'))
                        {
                            string[] arr = a.DSCBTH.Split(';');
                            if (arr.Length > 0)
                                moi.tenCBth = arr[0];
                        }
                        else
                        {
                            moi.tenCBth = a.DSCBTH;
                        }

                    }

                    _ldthuocct.Add(moi);
                }
                string[] _songay;


                var ngaykd = (from nk in qtong.Where(p => p.dthc.PLDV == 2)
                              where nk.dthc.NgayKe != null
                              select nk.dtct.NgayNhap).ToList().Select(x => new { x.Value.Date }).Distinct().OrderBy(p => p.Date).ToList();
                int i = 0;

                _songay = new string[ngaykd.Count];
                foreach (var a in ngaykd)
                {
                    _songay[i] = a.Date.ToShortDateString();
                    i++;
                }
                var par = (from bn in data.BenhNhans.Where(p => p.MaBNhan == _maBN)
                           join kb in data.BNKBs.OrderByDescending(p => p.IDKB) on bn.MaBNhan equals kb.MaBNhan
                           join vv in data.VaoViens on bn.MaBNhan equals vv.MaBNhan
                           select new
                           {
                               GTinh = bn.GTinh == 0 ? "Nữ" : "Nam",
                               kb.Buong,
                               kb.Giuong,
                               bn.DTuong,
                               bn.MaBNhan,
                               bn.DChi,
                               bn.Tuoi,
                               bn.SThe,
                               bn.MaCS,
                               bn.NoiTru,
                               bn.HanBHTu,
                               bn.HanBHDen,
                               kb.MaICD,
                               kb.ChanDoan,
                               vv.NgayVao,
                               kb.IDKB,
                               kb.BenhKhac,
                               bn.NgaySinh,
                               bn.ThangSinh,
                               bn.NamSinh,
                               bn.NNhap,
                           }).OrderByDescending(p => p.IDKB).ToList();

                bool _InCongKhoan = false;
                string[] _songayT1 = new string[18];
                for (int j = 0; j < _songay.Length; j += 17)
                {
                    if (j > _songay.Length - 2)
                        _InCongKhoan = true;

                    int m = 0;
                    for (int l = 0; l < 18; l++)
                    {
                        _songayT1[l] = "";
                    }
                    for (int k = j; k < _songay.Length; k++)
                    {
                        if (m < 18)
                        {
                            _songayT1[m] = _songay[k];
                            m++;
                        }
                        else
                        {
                            break;
                        }
                    }

                    BaoCao.Rep_PhieuTHDV_KT_01071 rep = new BaoCao.Rep_PhieuTHDV_KT_01071(_songayT1, _MaBN, _ldthuocct, _InCongKhoan);
                    if (par.Count > 0)
                    {
                        ngayvao = DungChung.Ham.NgayTu(par.First().NgayVao.Value);
                        var khoa = (from kp in data.KPhongs join bnkb in data.BNKBs.Where(p => p.MaBNhan == _MaBN) on kp.MaKP equals bnkb.MaKP select new { kp.TenKP, bnkb.IDKB }).OrderByDescending(p => p.IDKB).ToList();
                        if (khoa.Count > 0)
                            rep.KHOA.Value = khoa.First().TenKP.ToUpper();
                        var sovv = data.VaoViens.Where(p => p.MaBNhan == _MaBN).Select(p => p.SoVV).FirstOrDefault();
                        if (sovv != null)
                            rep.sovv.Value = sovv;
                        rep.TENCQ.Value = DungChung.Bien.TenCQ.ToUpper();
                        rep.CQCQ.Value = DungChung.Bien.TenCQCQ.ToUpper();
                        rep.TENBN.Value = txtTenBenhNhan.Text.ToUpper();
                        rep.TUOI.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.TinhTuoiBenhNhan(data, _maBN) : DungChung.Ham.TuoitheoThang(data, _MaBN, DungChung.Bien.formatAge);
                        rep.GTINH.Value = par.First().GTinh;
                        rep.BUONG.Value = par.First().Buong;
                        rep.GIUONG.Value = par.First().Giuong;
                        rep.DiaChi.Value = par.First().DChi;
                        rep.NGAYVAO.Value = par.First().NgayVao.Value.ToShortDateString();
                        rep.MaBN.Value = par.First().MaBNhan.ToString();
                        string chandoan = "";
                        chandoan = par.First().ChanDoan + ";" + par.First().BenhKhac;
                        rep.CHANDOAN.Value = DungChung.Ham.FreshString(chandoan);
                        //rep.MaChanDoan.Value = par.First().MaICD;
                        var rvien = data.RaViens.Where(p => p.MaBNhan == _MaBN).ToList();
                        if (rvien.Count > 0)
                        {
                            rep.NGAYRA.Value = rvien.First().NgayRa.Value.ToShortDateString();
                        }
                        double thuoc = 0;
                        var q = (from dt in qtong.Where(p => p.dthc.PLDV == 2)
                                 group dt by new { dt.dtct.MaDV, dt.TenDV, dt.dtct.DonVi, dt.dtct.DonGia } into kq
                                 select new
                                 {
                                     MaDV = kq.Key.MaDV,
                                     kq.Key.DonGia,
                                     TenDV = kq.Key.TenDV,
                                     DonVi = kq.Key.DonVi,
                                     SoLuongT = kq.Sum(p => p.dtct.SoLuong),
                                     ThanhTienT = kq.Sum(p => p.dtct.ThanhTien)
                                 }).Where(p => p.SoLuongT != 0).ToList();
                        if (q.Count > 0)
                            thuoc = q.Sum(p => p.ThanhTienT);
                        rep.DataSource = q.ToList();
                        rep.BindingData();
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                }
            }
            else
            {
                MessageBox.Show("Bạn chưa chọn BN hoặc không có BN");
            }
        }

        #endregion

        private void barTHTT_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int _int_maBN = 0, rs = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            InPhieuTT_01071(_int_maBN);
        }

        private void cboBuong_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.F9 && cboBuong.Properties.ReadOnly == false)
            {
                string nam = Convert.ToString(DateTime.Now.Year);
                int m = Convert.ToInt32(lupTimMaKP.EditValue);
                if (m != 0)
                {
                    frm_DSSDBuong_Giuong frm = new frm_DSSDBuong_Giuong(m, nam, cboBuong.Text);
                    frm.lupKhoaphong.Enabled = false;
                    frm.ShowDialog();
                }
                else
                {
                    frm_DSSDBuong_Giuong frm = new frm_DSSDBuong_Giuong();
                    frm.ShowDialog();
                }
            }
            if (!string.IsNullOrEmpty(_buong))
                this.cboBuong.Text = _buong;
            if (!string.IsNullOrEmpty(_giuong))
                this.cboGiuong.Text = _giuong;
        }

        private void barButtonItem12_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            int idkb = 0;
            if (txtIdkb.Text != "" && !String.IsNullOrEmpty(txtIdkb.Text))
            {
                idkb = Convert.ToInt32(txtIdkb.Text);
            }
            else idkb = 0;
            BaoCao.rep_PhieuXNBNDTNgT rep = new BaoCao.rep_PhieuXNBNDTNgT();
            frmIn frm2 = new frmIn();
            var bn = (from kb in data.BNKBs.Where(p => p.IDKB == idkb)
                      join a in data.BenhNhans on kb.MaBNhan equals a.MaBNhan
                      join kp in data.KPhongs on kb.MaKP equals kp.MaKP
                      join b in data.RaViens on a.MaBNhan equals b.MaBNhan
                      join c in data.TTboXungs on a.MaBNhan equals c.MaBNhan
                      join d in data.DanTocs on c.MaDT equals d.MaDT into k1
                      from k in k1.DefaultIfEmpty()
                      join f in data.DmNNs on c.MaNN equals f.MaNN into k2
                      from k3 in k2.DefaultIfEmpty()
                      select new { a.DChi, kp.TenKP, a.TenBNhan, a.Tuoi, GioiTinh = a.GTinh == 0 ? "Nữ" : "Nam", TenDT = c.MaDT == null ? "" : k.TenDT, a.HanBHTu, a.HanBHDen, TenNN = c.MaNN == null ? "" : k3.TenNN, b.ChanDoan, b.PPDTr, b.NgayVao, b.NgayRa, b.LoiDan, a.SThe, a.MaKCB, b.SoLT, b.MaYTe }).ToList();
            if (bn.Count > 0)
            {
                rep.solt.Text = bn.First().SoLT;
                rep.mayt.Text = bn.First().MaYTe;
                rep.celTenBNhan.Text = bn.First().TenBNhan.ToUpper();
                rep.celTuoi.Text = Convert.ToString(bn.First().Tuoi);
                rep.celGT.Text = bn.First().GioiTinh.ToUpper();
                rep.celChanDoan.Text = bn.First().ChanDoan;
                rep.celTimeBHYT.Text = "giá trị từ: " + bn.First().HanBHTu.Value.Day + "/" + bn.First().HanBHTu.Value.Month + "/" + bn.First().HanBHTu.Value.Year + " đến " + bn.First().HanBHDen.Value.Day + "/" + bn.First().HanBHDen.Value.Month + "/" + bn.First().HanBHDen.Value.Year;
                rep.celNgheNghiep.Text = bn.First().TenNN;
                rep.celDanToc.Text = bn.First().TenDT;
                if (bn.First().SThe != null)
                {
                    rep.SThe1.Text = bn.First().SThe.Substring(0, 2);
                    rep.SThe2.Text = bn.First().SThe.Substring(2, 3);
                    rep.SThe3.Text = bn.First().SThe.Substring(5, 3);
                    rep.SThe4.Text = bn.First().SThe.Substring(8, 7);
                    rep.SThe5.Text = bn.First().MaKCB;
                }
                rep.celDC.Text = bn.First().DChi;
                rep.celPPDT.Text = bn.First().PPDTr;
                rep.celVV.Text = bn.First().NgayVao.Value.Hour + " giờ " + bn.First().NgayVao.Value.Minute + " phút, ngày " + bn.First().NgayVao.Value.Day + " tháng " + bn.First().NgayVao.Value.Month + " năm " + bn.First().NgayVao.Value.Year;
                rep.celRV.Text = bn.First().NgayRa.Value.Hour + " giờ " + bn.First().NgayRa.Value.Minute + " phút, ngày " + bn.First().NgayRa.Value.Day + " tháng " + bn.First().NgayRa.Value.Month + " năm " + bn.First().NgayRa.Value.Year;
                rep.xrTableCell29.Text = " Xác nhận quá trình điều trị của thầy thuốc: " + bn.First().LoiDan;
                rep.celNgayThang1.Text = "Ngày " + DateTime.Now.Day + " tháng " + DateTime.Now.Month + " năm " + DateTime.Now.Year;
                rep.celNgayThang2.Text = "Ngày " + DateTime.Now.Day + " tháng " + DateTime.Now.Month + " năm " + DateTime.Now.Year;
                rep.celTK.Text = DungChung.Bien.TruongKhoaLS;
                rep.celGD.Text = DungChung.Bien.GiamDoc;
                rep.txtkhoa.Text = bn.First().TenKP;
                rep.CreateDocument();
                frm2.prcIN.PrintingSystem = rep.PrintingSystem;
                frm2.ShowDialog();
            }
            else
            {
                MessageBox.Show("Bệnh nhân chưa ra viện!");
            }
        }

        private void barButtonItem13_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            int idkb = 0;
            if (txtIdkb.Text != "" && !String.IsNullOrEmpty(txtIdkb.Text))
            {
                idkb = Convert.ToInt32(txtIdkb.Text);
            }
            else idkb = 0;
            BaoCao.rep_PhieuXNBNDTNgT rep = new BaoCao.rep_PhieuXNBNDTNgT();
            frmIn frm2 = new frmIn();
            var bn = (from kb in data.BNKBs.Where(p => p.IDKB == idkb)
                      join a in data.BenhNhans on kb.MaBNhan equals a.MaBNhan
                      join kp in data.KPhongs on kb.MaKP equals kp.MaKP
                      join b in data.RaViens on a.MaBNhan equals b.MaBNhan
                      join c in data.TTboXungs on a.MaBNhan equals c.MaBNhan
                      join d in data.DanTocs on c.MaDT equals d.MaDT into k1
                      from k in k1.DefaultIfEmpty()
                      join f in data.DmNNs on c.MaNN equals f.MaNN into k2
                      from k3 in k2.DefaultIfEmpty()
                      select new { a.DChi, kp.TenKP, a.TenBNhan, a.Tuoi, GioiTinh = a.GTinh == 0 ? "Nữ" : "Nam", TenDT = c.MaDT == null ? "" : k.TenDT, a.HanBHTu, a.HanBHDen, TenNN = c.MaNN == null ? "" : k3.TenNN, b.ChanDoan, b.PPDTr, b.NgayVao, b.NgayRa, b.LoiDan, a.SThe, a.MaCS, b.SoLT, b.MaYTe }).ToList();
            if (bn.Count > 0)
            {
                rep.solt.Text = bn.First().SoLT;
                rep.mayt.Text = bn.First().MaYTe;
                rep.celTenBNhan.Text = bn.First().TenBNhan.ToUpper();
                rep.celTuoi.Text = Convert.ToString(bn.First().Tuoi);
                rep.celGT.Text = bn.First().GioiTinh.ToUpper();
                rep.celChanDoan.Text = bn.First().ChanDoan;
                rep.celTimeBHYT.Text = "giá trị từ: " + bn.First().HanBHTu.Value.Day + "/" + bn.First().HanBHTu.Value.Month + "/" + bn.First().HanBHTu.Value.Year + " đến " + bn.First().HanBHDen.Value.Day + "/" + bn.First().HanBHDen.Value.Month + "/" + bn.First().HanBHDen.Value.Year;
                rep.celNgheNghiep.Text = bn.First().TenNN;
                rep.celDanToc.Text = bn.First().TenDT;
                if (bn.First().SThe != null)
                {
                    rep.SThe1.Text = bn.First().SThe.Substring(0, 2);
                    rep.SThe2.Text = bn.First().SThe.Substring(2, 3);
                    rep.SThe3.Text = bn.First().SThe.Substring(5, 3);
                    rep.SThe4.Text = bn.First().SThe.Substring(8, 7);
                    rep.SThe5.Text = bn.First().MaCS;
                }
                rep.celDC.Text = bn.First().DChi;
                rep.celPPDT.Text = bn.First().PPDTr;
                rep.celVV.Text = bn.First().NgayVao.Value.Hour + " giờ " + bn.First().NgayVao.Value.Minute + " phút, ngày " + bn.First().NgayVao.Value.Day + " tháng " + bn.First().NgayVao.Value.Month + " năm " + bn.First().NgayVao.Value.Year;
                rep.celRV.Text = bn.First().NgayRa.Value.Hour + " giờ " + bn.First().NgayRa.Value.Minute + " phút, ngày " + bn.First().NgayRa.Value.Day + " tháng " + bn.First().NgayRa.Value.Month + " năm " + bn.First().NgayRa.Value.Year;
                rep.xrTableCell29.Text = " Xác nhận quá trình điều trị của thầy thuốc: " + bn.First().LoiDan;
                rep.celNgayThang1.Text = "Ngày " + DateTime.Now.Day + " tháng " + DateTime.Now.Month + " năm " + DateTime.Now.Year;
                rep.celNgayThang2.Text = "Ngày " + DateTime.Now.Day + " tháng " + DateTime.Now.Month + " năm " + DateTime.Now.Year;
                rep.celTK.Text = DungChung.Bien.TruongKhoaLS;
                rep.celGD.Text = DungChung.Bien.GiamDoc;
                rep.txtkhoa.Text = rep.txtkhoa2.Text = bn.First().TenKP;
                rep.CreateDocument();
                frm2.prcIN.PrintingSystem = rep.PrintingSystem;
                frm2.ShowDialog();
            }
            else
            {
                MessageBox.Show("Bệnh nhân chưa ra viện!");
            }
        }

        private void barButtonItem14_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            frm_TraCuuHDSDThuoc frm = new frm_TraCuuHDSDThuoc();
            frm.ShowDialog();
        }

        private void bartcTonDuoc_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            ChucNang.frm_dsTonDuoc frm = new frm_dsTonDuoc();
            frm.ShowDialog();
        }

        private void lupNguoiKe_EditValueChanging(object sender, ChangingEventArgs e)
        {
            if (grvDonThuocct.RowCount > 0 && lupNguoiKe.Enabled)
            {
                if (grvDonThuocct.RowCount > 1 && cboKieuDon.SelectedIndex == 2)
                {

                    int idd = 0;
                    if (!string.IsNullOrEmpty(txtIdDonThuoc.Text))
                        idd = Convert.ToInt32(txtIdDonThuoc.Text);
                    if ((lupNguoiKe.EditValue != null))
                    {
                        if (_iddthuoc == idd)
                        {
                            MessageBox.Show("Đơn đã có thuốc, bạn không thể sửa bác sĩ kê");
                            e.Cancel = true;
                        }
                    }

                }

            }
        }

        private void barButtonItem15_ItemClick_1(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int _int_maBN = 0;
            int rs;
            int makp = Convert.ToInt32(lupTimMaKP.EditValue);
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            else
                return;
            Frm_ChonKP frm = new Frm_ChonKP(_int_maBN, makp, 1);
            frm.Show();
        }
        private class ds
        {
            private string sTT;

            public string STT
            {
                get { return sTT; }
                set { sTT = value; }
            }
            string tenDV;

            public string TenDV
            {
                get { return tenDV; }
                set { tenDV = value; }
            }
            string donVi;

            public string DonVi
            {
                get { return donVi; }
                set { donVi = value; }
            }
            double sl1;

            public double Sl1
            {
                get { return sl1; }
                set { sl1 = value; }
            }
            double sl2;

            public double Sl2
            {
                get { return sl2; }
                set { sl2 = value; }
            }
            double sl3;

            public double Sl3
            {
                get { return sl3; }
                set { sl3 = value; }
            }
            double sl4;

            public double Sl4
            {
                get { return sl4; }
                set { sl4 = value; }
            }
            double sl5;

            public double Sl5
            {
                get { return sl5; }
                set { sl5 = value; }
            }
            double sl6;

            public double Sl6
            {
                get { return sl6; }
                set { sl6 = value; }
            }
            double sl7;

            public double Sl7
            {
                get { return sl7; }
                set { sl7 = value; }
            }
            double sl8;

            public double Sl8
            {
                get { return sl8; }
                set { sl8 = value; }
            }
            double sl9;

            public double Sl9
            {
                get { return sl9; }
                set { sl9 = value; }
            }
            double sl10;

            public double Sl10
            {
                get { return sl10; }
                set { sl10 = value; }
            }
            double sl11;

            public double Sl11
            {
                get { return sl11; }
                set { sl11 = value; }
            }
            double sl12;

            public double Sl12
            {
                get { return sl12; }
                set { sl12 = value; }
            }
            double sl13;

            public double Sl13
            {
                get { return sl13; }
                set { sl13 = value; }
            }
            double sl14;

            public double Sl14
            {
                get { return sl14; }
                set { sl14 = value; }
            }
            double sl15;

            public double Sl15
            {
                get { return sl15; }
                set { sl15 = value; }
            }
            double sl16;

            public double Sl16
            {
                get { return sl16; }
                set { sl16 = value; }
            }
            double sl17;

            public double Sl17
            {
                get { return sl17; }
                set { sl17 = value; }
            }
            double sl18;

            public double Sl18
            {
                get { return sl18; }
                set { sl18 = value; }
            }
            double sl19;

            public double Sl19
            {
                get { return sl19; }
                set { sl19 = value; }
            }
            double sl20;

            public double Sl20
            {
                get { return sl20; }
                set { sl20 = value; }
            }
            string ghiChu;

            public string GhiChu
            {
                get { return ghiChu; }
                set { ghiChu = value; }
            }
            int st;

            public int St
            {
                get { return st; }
                set { st = value; }
            }
        }
        private void hamin(DateTime n1, QLBV_Database.QLBVEntities _db, int bnkb, int mabn)
        {
            List<ds> _ds = new List<ds>();
            var khoa = (from a in _db.BNKBs.Where(p => p.IDKB == bnkb)
                        join b in _db.KPhongs on a.MaKP equals b.MaKP
                        select new { a, b }).ToList();
            int makp = khoa.First().a.MaKP ?? 0;
            var dv = (from a in _db.DichVus
                      join b in _db.TieuNhomDVs on a.IdTieuNhom equals b.IdTieuNhom
                      join c in _db.NhomDVs on a.IDNhom equals c.IDNhom
                      select new { a.MaDV, a.TenDV, a.DonVi, a.IDNhom, a.HamLuong }).ToList();
            var bn_dv = (from a in _db.DThuocs.Where(P => P.MaBNhan == mabn)
                         join c in _db.DThuoccts.Where(p => p.MaKP == makp) on a.IDDon equals c.IDDon
                         select new { a.MaBNhan, a.NgayKe, c.NgayNhap, c.MaDV, c.SoLuong }).ToList();
            var ds1 = (from a in bn_dv.Where(p => p.NgayNhap >= n1)
                       join d in dv on a.MaDV equals d.MaDV
                       group a by new { a.MaDV, NgayNhap = a.NgayNhap.Value.Date, d.TenDV, d.IDNhom, d.HamLuong, d.DonVi } into kq
                       select new
                       {
                           kq.Key.MaDV,
                           kq.Key.TenDV,
                           kq.Key.IDNhom,
                           kq.Key.HamLuong,
                           kq.Key.DonVi,
                           NgayNhap = kq.Key.NgayNhap,
                           tong = kq.Sum(p => p.SoLuong)
                       }).OrderBy(p => p.IDNhom).ToList();
            List<DateTime> ngayy = new List<DateTime>();
            foreach (var item in ds1.OrderBy(p => p.NgayNhap).Select(p => p.NgayNhap).Distinct().ToList())
            {
                ngayy.Add(item);
            }
            var ds3 = (from a in ds1
                       join nhom in _db.NhomDVs on a.IDNhom equals nhom.IDNhom
                       group a by new { a.MaDV, a.TenDV, a.IDNhom, a.HamLuong, a.DonVi, nhom.TenNhom } into kq
                       select new ds
                       {
                           STT = (kq.Key.IDNhom == 4 || kq.Key.IDNhom == 5 || kq.Key.IDNhom == 6) ? "Thuốc, dịch truyền (tên, nồng độ/hàm lượng)" : ((kq.Key.IDNhom == 8 || kq.Key.IDNhom == 9) ? "Dịch vụ kỹ thuật" : ((kq.Key.IDNhom == 10 || kq.Key.IDNhom == 11) ? "Vật tư y tế (không có trong dịch vụ kỹ thuật)" : kq.Key.TenNhom)),
                           TenDV = (kq.Key.IDNhom == 4 || kq.Key.IDNhom == 5 || kq.Key.IDNhom == 6) ? (kq.Key.TenDV + " " + kq.Key.HamLuong) : kq.Key.TenDV,
                           DonVi = kq.Key.DonVi,
                           St = (kq.Key.IDNhom == 4 || kq.Key.IDNhom == 5 || kq.Key.IDNhom == 6) ? 6 : ((kq.Key.IDNhom == 8 || kq.Key.IDNhom == 9) ? 4 : ((kq.Key.IDNhom == 10 || kq.Key.IDNhom == 11) ? 7 : ((kq.Key.IDNhom == 7 ? 5 : kq.Key.IDNhom ?? 0)))),
                           Sl1 = ngayy.Count > 0 ? kq.Where(p => p.NgayNhap == ngayy[0]).Select(p => p.tong).FirstOrDefault() : 0,
                           Sl2 = ngayy.Count > 1 ? kq.Where(p => p.NgayNhap == ngayy[1]).Select(p => p.tong).FirstOrDefault() : 0,
                           Sl3 = ngayy.Count > 2 ? kq.Where(p => p.NgayNhap == ngayy[2]).Select(p => p.tong).FirstOrDefault() : 0,
                           Sl4 = ngayy.Count > 3 ? kq.Where(p => p.NgayNhap == ngayy[3]).Select(p => p.tong).FirstOrDefault() : 0,
                           Sl5 = ngayy.Count > 4 ? kq.Where(p => p.NgayNhap == ngayy[4]).Select(p => p.tong).FirstOrDefault() : 0,
                           Sl6 = ngayy.Count > 5 ? kq.Where(p => p.NgayNhap == ngayy[5]).Select(p => p.tong).FirstOrDefault() : 0,
                           Sl7 = ngayy.Count > 6 ? kq.Where(p => p.NgayNhap == ngayy[6]).Select(p => p.tong).FirstOrDefault() : 0,
                           Sl8 = ngayy.Count > 7 ? kq.Where(p => p.NgayNhap == ngayy[7]).Select(p => p.tong).FirstOrDefault() : 0,
                           Sl9 = ngayy.Count > 8 ? kq.Where(p => p.NgayNhap == ngayy[8]).Select(p => p.tong).FirstOrDefault() : 0,
                           Sl10 = ngayy.Count > 9 ? kq.Where(p => p.NgayNhap == ngayy[9]).Select(p => p.tong).FirstOrDefault() : 0,
                           Sl11 = ngayy.Count > 10 ? kq.Where(p => p.NgayNhap == ngayy[10]).Select(p => p.tong).FirstOrDefault() : 0,
                           Sl12 = ngayy.Count > 11 ? kq.Where(p => p.NgayNhap == ngayy[11]).Select(p => p.tong).FirstOrDefault() : 0,
                           Sl13 = ngayy.Count > 12 ? kq.Where(p => p.NgayNhap == ngayy[12]).Select(p => p.tong).FirstOrDefault() : 0,
                           Sl14 = ngayy.Count > 13 ? kq.Where(p => p.NgayNhap == ngayy[13]).Select(p => p.tong).FirstOrDefault() : 0,
                           Sl15 = ngayy.Count > 14 ? kq.Where(p => p.NgayNhap == ngayy[14]).Select(p => p.tong).FirstOrDefault() : 0,
                           Sl16 = ngayy.Count > 15 ? kq.Where(p => p.NgayNhap == ngayy[15]).Select(p => p.tong).FirstOrDefault() : 0,
                           Sl17 = ngayy.Count > 16 ? kq.Where(p => p.NgayNhap == ngayy[16]).Select(p => p.tong).FirstOrDefault() : 0,
                           Sl18 = ngayy.Count > 17 ? kq.Where(p => p.NgayNhap == ngayy[17]).Select(p => p.tong).FirstOrDefault() : 0,
                           Sl19 = ngayy.Count > 18 ? kq.Where(p => p.NgayNhap == ngayy[18]).Select(p => p.tong).FirstOrDefault() : 0,
                           Sl20 = ngayy.Count > 19 ? kq.Where(p => p.NgayNhap == ngayy[19]).Select(p => p.tong).FirstOrDefault() : 0,
                       }
                ).ToList();
            var ds2 = (from a in ds3
                       group a by new { a.St, a.STT, a.DonVi, a.TenDV } into kq
                       select new ds
                       {
                           STT = kq.Key.STT,
                           TenDV = kq.Key.TenDV,
                           DonVi = kq.Key.DonVi,
                           St = kq.Key.St,
                           Sl1 = kq.Sum(p => p.Sl1),
                           Sl2 = kq.Sum(p => p.Sl2),
                           Sl3 = kq.Sum(p => p.Sl3),
                           Sl4 = kq.Sum(p => p.Sl4),
                           Sl5 = kq.Sum(p => p.Sl5),
                           Sl6 = kq.Sum(p => p.Sl6),
                           Sl7 = kq.Sum(p => p.Sl7),
                           Sl8 = kq.Sum(p => p.Sl8),
                           Sl9 = kq.Sum(p => p.Sl9),
                           Sl10 = kq.Sum(p => p.Sl10),
                           Sl11 = kq.Sum(p => p.Sl11),
                           Sl12 = kq.Sum(p => p.Sl12),
                           Sl13 = kq.Sum(p => p.Sl13),
                           Sl14 = kq.Sum(p => p.Sl14),
                           Sl15 = kq.Sum(p => p.Sl15),
                           Sl16 = kq.Sum(p => p.Sl16),
                           Sl17 = kq.Sum(p => p.Sl17),
                           Sl18 = kq.Sum(p => p.Sl18),
                           Sl19 = kq.Sum(p => p.Sl19),
                           Sl20 = kq.Sum(p => p.Sl20),
                       }
                ).OrderBy(p => p.St).ToList();
            BaoCao.rep_PhieuCongKhaiDVKT_01071 rep = new BaoCao.rep_PhieuCongKhaiDVKT_01071();
            frmIn frm = new frmIn();
            rep.ngay1.Value = ngayy.Count > 0 ? (ngayy[0].Day + "/" + ngayy[0].Month) : null;
            rep.ngay2.Value = ngayy.Count > 1 ? (ngayy[1].Day + "/" + ngayy[1].Month) : null;
            rep.ngay3.Value = ngayy.Count > 2 ? (ngayy[2].Day + "/" + ngayy[2].Month) : null;
            rep.ngay4.Value = ngayy.Count > 3 ? (ngayy[3].Day + "/" + ngayy[3].Month) : null;
            rep.ngay5.Value = ngayy.Count > 4 ? (ngayy[4].Day + "/" + ngayy[4].Month) : null;
            rep.ngay6.Value = ngayy.Count > 5 ? (ngayy[5].Day + "/" + ngayy[5].Month) : null;
            rep.ngay7.Value = ngayy.Count > 6 ? (ngayy[6].Day + "/" + ngayy[6].Month) : null;
            rep.ngay8.Value = ngayy.Count > 7 ? (ngayy[7].Day + "/" + ngayy[7].Month) : null;
            rep.ngay9.Value = ngayy.Count > 8 ? (ngayy[8].Day + "/" + ngayy[8].Month) : null;
            rep.ngay10.Value = ngayy.Count > 9 ? (ngayy[9].Day + "/" + ngayy[9].Month) : null;
            rep.ngay11.Value = ngayy.Count > 10 ? (ngayy[10].Day + "/" + ngayy[10].Month) : null;
            rep.ngay12.Value = ngayy.Count > 11 ? (ngayy[11].Day + "/" + ngayy[11].Month) : null;
            rep.ngay13.Value = ngayy.Count > 12 ? (ngayy[12].Day + "/" + ngayy[12].Month) : null;
            rep.ngay14.Value = ngayy.Count > 13 ? (ngayy[13].Day + "/" + ngayy[13].Month) : null;
            rep.ngay15.Value = ngayy.Count > 14 ? (ngayy[14].Day + "/" + ngayy[14].Month) : null;
            rep.ngay16.Value = ngayy.Count > 15 ? (ngayy[15].Day + "/" + ngayy[15].Month) : null;
            rep.ngay17.Value = ngayy.Count > 16 ? (ngayy[16].Day + "/" + ngayy[16].Month) : null;
            rep.ngay18.Value = ngayy.Count > 17 ? (ngayy[17].Day + "/" + ngayy[17].Month) : null;
            rep.ngay19.Value = ngayy.Count > 18 ? (ngayy[18].Day + "/" + ngayy[18].Month) : null;
            rep.ngay20.Value = ngayy.Count > 19 ? (ngayy[19].Day + "/" + ngayy[19].Month) : null;

            if (khoa.Count > 0)
            {
                rep.Khoa.Value = khoa.First().b.TenKP;
                rep.SoBuong.Value = khoa.First().a.Buong;
                rep.SoGiuong.Value = khoa.First().a.Giuong;
                rep.ChanDoan.Value = DungChung.Ham.FreshString(khoa.First().a.ChanDoan + "; " + khoa.First().a.BenhKhac);
            }
            var vv = (from a in _db.BenhNhans.Where(p => p.MaBNhan == mabn)
                      join b in _db.VaoViens on a.MaBNhan equals b.MaBNhan
                      select new { a.MaBNhan, a.TenBNhan, a.NgaySinh, a.GTinh, b.NgayVao, a.ThangSinh, a.NamSinh }).ToList();
            if (vv.Count > 0)
            {
                rep.TenBN.Value = vv.First().TenBNhan.ToUpper();
                rep.NgaySinh.Value = vv.First().NgaySinh + "/" + vv.First().ThangSinh + "/" + vv.First().NamSinh;
                rep.NgayVV.Value = vv.First().NgayVao;
                rep.Nam.Value = vv.First().GTinh == 1 ? "X" : "";
                rep.Nu.Value = vv.First().GTinh == 0 ? "X" : "";
            }
            rep.DataSource = ds2;
            rep.BindingData();
            rep.CreateDocument();
            frm.prcIN.PrintingSystem = rep.PrintingSystem;
            frm.ShowDialog();
        }

        private void groupControl3_Paint(object sender, PaintEventArgs e)
        {

        }

        private void btnBenhAn_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            QLBV_Database.QLBVEntities db = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            int idkb = 0;
            if (!string.IsNullOrEmpty(txtIdkb.Text))
            {
                idkb = Convert.ToInt32(txtIdkb.Text);
                var ktra = (from bnkb in db.BNKBs.Where(p => p.IDKB == idkb)
                            join kp in db.KPhongs.Where(p => p.PLoai == DungChung.Bien.st_PhanLoaiKP.LamSang) on bnkb.MaKP equals kp.MaKP
                            select bnkb).ToList();
                if (ktra.Count > 0)
                {
                    Process.Start("chrome.exe", "http://192.168.0.114/Home/REP_BENHANNGOAIKHOA?MaBN=" + txtMaBNhan.Text + "&IDKB=" + txtIdkb.Text);
                }
                else
                {
                    MessageBox.Show("chọn lại chuẩn đoán tại khoa điều trị");
                }
            }
            else
            {
                MessageBox.Show("Bệnh nhân chưa có chuẩn đoán");
            }

        }
        void _inGiayNhapVien_24012(QLBV_Database.QLBVEntities _data, int _mabn)//minhvd
        {
            var _ttbn = _data.BenhNhans.Where(p => p.MaBNhan == _mabn).FirstOrDefault();
            if (_ttbn != null)
            {
                VaoVien vaovien = _data.VaoViens.Where(p => p.MaBNhan == _mabn).FirstOrDefault();
                TTboXung ttbx = _data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault();

                Phieu.repGiayNhapVien rep = new Phieu.repGiayNhapVien();
                frmIn frm = new frmIn();
                rep.Ten.Value = _ttbn.TenBNhan.ToUpper();
                rep.Tuoi.Value = DungChung.Bien.MaBV == "24012" ? DungChung.Ham.TuoitheoThang(_data, _mabn, DungChung.Bien.formatAge_24012) : _ttbn.Tuoi.ToString();
                rep.DiaChi.Value = _ttbn.DChi;

                var nghenghiep = _data.DmNNs.Where(p => p.MaNN == ttbx.MaNN).Select(p => p.TenNN).FirstOrDefault();
                if (nghenghiep != null)
                {
                    rep.NgheNghiep.Value = nghenghiep;
                }

                if (_ttbn.NNhap != null)
                {
                    rep.NgayVao.Value = DungChung.Ham.NgaySangChu(Convert.ToDateTime(_ttbn.NNhap), 8);
                }
                rep.ChanDoan.Value = "Chẩn đoán của phòng khám: ";
                if (vaovien != null)
                {
                    if (!string.IsNullOrEmpty(vaovien.ChanDoan))
                    {
                        rep.ChanDoan.Value = "Chẩn đoán của phòng khám: " + vaovien.ChanDoan;
                    }
                }
                int makp = _ttbn.MaKP ?? 0;
                var tenkp = _data.KPhongs.Where(p => p.MaKP == makp).ToList();
                if (tenkp != null)
                {
                    rep.VaoKhoa.Value = tenkp.First().TenKP;
                }

                rep.NgayThang.Value = DungChung.Ham.GetTenTinh(DungChung.Bien.MaBV) + ", " + DungChung.Ham.NgaySangChu(DateTime.Now, 1);
                rep.CreateDocument();
                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                frm.ShowDialog();
            }
        }
        void _inPhieuCamKet_01071(QLBV_Database.QLBVEntities _data, int _mabn)
        {
            var _ttbn = _data.BenhNhans.Where(p => p.MaBNhan == _mabn).FirstOrDefault();
            if (_ttbn != null)
            {
                BaoCao.Rep_GiayCamKet_01071 rep = new BaoCao.Rep_GiayCamKet_01071();
                frmIn frm = new frmIn();
                rep.TENCQCQ.Value = DungChung.Bien.TenCQCQ.ToUpper();
                rep.TENCQ.Value = DungChung.Bien.TenCQ.ToUpper();
                rep.Tenbn.Value = _ttbn.TenBNhan.ToUpper();
                rep.Tuoi.Value = _ttbn.Tuoi;
                rep.GTinh.Value = _ttbn.GTinh == 1 ? "Nam" : "Nữ";
                rep.Dchi.Value = _ttbn.DChi;
                rep.Dtuong.Value = "(Dùng cho người bệnh " + (_ttbn.DTuong == "BHYT" ? "có BHYT)" : _ttbn.DTuong + ")");
                int makp = _ttbn.MaKP ?? 0;
                var tenkp = _data.KPhongs.Where(p => p.MaKP == makp).ToList();
                rep.NoiDung1.Value = "   Là người bệnh/ Đại diện gia đình người bệnh/ Họ tên là: " + _ttbn.TenBNhan + " hiện đang được điều trị tại: " + (tenkp.Count > 0 ? tenkp.First().TenKP : "..........................") + " " + DungChung.Bien.TenCQ;
                rep.NoiDung2.Value = "   Sau khi được bác sĩ giải thích tình trạng bệnh của tôi/ người nhà tôi và đọc bảng giá dịch vụ y tế áp dụng tại " + DungChung.Bien.TenCQ + ".Tôi tự nguyện viết cam kết này xin được thực hiện và nộp viện phí cho các dịch vụ khám chữa bệnh sau:";
                rep.Ngayki.Value = " Ngày " + DateTime.Now.Day + " tháng " + DateTime.Now.Month + " năm " + DateTime.Now.Year;
                rep.CreateDocument();
                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                frm.ShowDialog();
            }
        }
        void _inPhieuCamKetTruyenMau(QLBV_Database.QLBVEntities _data, int _mabn, int _idkb)
        {
            var _ttbn = (from a in _data.BenhNhans.Where(p => p.MaBNhan == _mabn)
                         join b in _data.BNKBs.Where(p => p.IDKB == _idkb) on a.MaBNhan equals b.MaBNhan
                         select new { a, b }).FirstOrDefault();
            BaoCao.rep_GiayCamKet rep = new BaoCao.rep_GiayCamKet();
            frmIn frm = new frmIn();
            rep.TenBNhan.Value = "..............................................................................................................";
            rep.Tuoi.Value = "..............";
            rep.GioiTinh.Value = "Nam/Nữ";
            rep.DC.Value = "...................................................................................................................................................................";
            if (_ttbn != null)
            {
                int makp = _ttbn.b.MaKP ?? 0;
                var tenkp = _data.KPhongs.Where(p => p.MaKP == makp).ToList();
                rep.Giuong.Value = _ttbn.b.Giuong;
                rep.Khoa.Value = tenkp.FirstOrDefault().TenKP;
                rep.xrTableCell13.Visible = false;
            }
            else
            {
                rep.xrTableCell13.Visible = true;
                rep.Giuong.Value = "...............";
                rep.Khoa.Value = "................................................................................";
            }
            rep.NgayThang.Value = " Ngày " + DateTime.Now.Day + " tháng " + DateTime.Now.Month + " năm " + DateTime.Now.Year;
            rep.CreateDocument();
            frm.prcIN.PrintingSystem = rep.PrintingSystem;
            frm.ShowDialog();
        }
        private void bargiaycamket01071_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            QLBV_Database.QLBVEntities db = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            _inPhieuCamKet_01071(db, _int_maBN);
        }

        bool isDTM = false;
        private void DTM_Click(object sender, EventArgs e)
        {
            try
            {
                isDTM = true;
                QLBV_Database.QLBVEntities db = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                int mabn = 0;
                mabn = Convert.ToInt32(txtMaBNhan.Text);
                laydon = 0;
                int makho = 0;
                if (lupKhoXuat.Text != "")
                {
                    makho = Convert.ToInt32(lupKhoXuat.EditValue);
                    frm_KeDonThuocMau frm = new frm_KeDonThuocMau(1, makho);
                    frm.ShowDialog();
                    if (laydon == 1)
                    {
                        var listmau = (from a in db.DThuocMaus.Where(p => p.IDDonMau == iddthuocmau)
                                       join b in db.DThuocMaucts on a.IDDonMau equals b.IDDonMau
                                       select new { MaDV = b.MaDV, b.DonVi, b.DviUong, b.SoLan, SoLuongct = b.SoLuong ?? 0, b.DuongD, b.GhiChu, b.MoiLan, b.Luong }).ToList();
                        _ldtct.Clear();
                        foreach (var item in listmau)
                        {
                            DThuocct moi = new DThuocct();
                            moi.MaDV = item.MaDV;
                            moi.DviUong = item.DviUong;
                            moi.SoLan = item.SoLan;
                            moi.SoLuongct = item.SoLuongct;
                            moi.DuongD = item.DuongD;
                            moi.GhiChu = item.GhiChu;
                            moi.MoiLan = item.MoiLan;
                            moi.Luong = item.Luong;
                            _ldtct.Add(moi);
                        }
                        string x2 = "";
                        int dem = 0;
                        string message = "";
                        foreach (var item in _ldtct)
                        {
                            var dsgia = Ham._getDSGia(DaTaContext, item.MaDV ?? 0, makho);
                            var tonthuoc = DungChung.Bien.SoLuongTon;
                            var soluongt = DungChung.Ham._getSL_DongY(DaTaContext, item.MaDV ?? 0, 0, makho);
                            var x1 = _lDvTheoKho.Where(p => p.MaDV == item.MaDV).ToList();
                            if (x1.Count > 0)
                            {
                                if (tonthuoc - soluongt >= item.SoLuongct * sothangSua)
                                {
                                    grvDonThuocct.AddNewRow();
                                    int rowHandle = grvDonThuocct.GetRowHandle(grvDonThuocct.DataRowCount);
                                    if (grvDonThuocct.IsNewItemRow(rowHandle))
                                    {
                                        grvDonThuocct.SetRowCellValue(rowHandle, colMaDVdt, item.MaDV);
                                        grvDonThuocct.SetRowCellValue(rowHandle, grvDonThuocct.Columns["SoLuongct"], item.SoLuongct);
                                        grvDonThuocct.SetRowCellValue(rowHandle, colGhiChu, item.GhiChu);
                                        grvDonThuocct.SetRowCellValue(rowHandle, colmoilan, item.MoiLan);
                                        grvDonThuocct.SetRowCellValue(rowHandle, collan, item.SoLan);
                                        grvDonThuocct.SetRowCellValue(rowHandle, colLuong, item.Luong);
                                    }
                                }
                                else
                                {
                                    slKhongDu_MaDV.Add(item.MaDV ?? 0);
                                }
                            }
                            else if (x1.Count <= 0)
                            {
                                var dv = db.DichVus.FirstOrDefault(p => p.MaDV == item.MaDV);
                                if (dv != null)
                                {
                                    string tendv1 = dv.TenDV;
                                    x2 = x2 + " " + tendv1 + ";";
                                    dem++;
                                }
                                else
                                {
                                    message += item.MaDV + "; ";
                                }
                            }
                        }
                        ckcCapNhatDTM.Visible = true;
                        if (dem > 0)
                        {
                            MessageBox.Show("Các thuốc: " + x2 + " không tồn tại trong kho " + lupKhoXuat.Text);
                        }
                        if (!string.IsNullOrWhiteSpace(message))
                        {
                            MessageBox.Show("Các thuốc có mã: " + message + " không tồn tại");
                        }
                        if (slKhongDu_MaDV.Count > 0)
                        {
                            var tenDV = db.DichVus.Where(o => slKhongDu_MaDV.Contains(o.MaDV)).ToList();
                            if (tenDV.Count > 0)
                                MessageBox.Show(string.Format("Các thuốc: {0} có số lượng không đủ", string.Join("; ", tenDV.Select(o => o.TenDV))));
                            else
                            {
                                MessageBox.Show(string.Format("Các thuốc có mã: {0} có số lượng không đủ", string.Join("; ", slKhongDu_MaDV)));
                            }
                        }
                    }
                }
                else
                {
                    MessageBox.Show("Bạn chưa chọn kho xuất!");
                    lupKhoXuat.Focus();
                }
            }
            finally
            {
                isDTM = false;
                slKhongDu_MaDV = new List<int>();
            }
        }
        void InTomTatBenhAn_20001(QLBV_Database.QLBVEntities data, int _Mabn)
        {
            frmIn frm = new frmIn();
            BaoCao.rep_TomTatBenhAn_20001 rep = new BaoCao.rep_TomTatBenhAn_20001();
            BenhNhan bn = data.BenhNhans.Where(p => p.MaBNhan == _Mabn).FirstOrDefault();
            TTboXung ttbx = data.TTboXungs.Where(p => p.MaBNhan == _Mabn).FirstOrDefault();
            VaoVien vaovien = data.VaoViens.Where(p => p.MaBNhan == _Mabn).FirstOrDefault();
            RaVien ravien = data.RaViens.Where(p => p.MaBNhan == _Mabn).FirstOrDefault();
            if (bn != null)
            {
                rep.TENBN.Value = bn.TenBNhan.ToUpper().ToString();
                rep.NAMSINH.Value = bn.NamSinh;
                rep.STHE.Value = bn.SThe;
                rep.DCHI.Value = bn.DChi;
                rep.txtnam.Text = bn.GTinh == 1 ? "X" : "";
                rep.txtnu.Text = bn.GTinh == 0 ? "X" : "";
            }
            if (ttbx != null)
            {
                if (!string.IsNullOrEmpty(ttbx.MaDT))
                {
                    string MaDT = ttbx.MaDT;
                    var dantoc = data.DanTocs.Where(p => p.MaDT == MaDT).Select(p => p.TenDT).FirstOrDefault();
                    if (dantoc != null)
                        rep.DANTOC.Value = dantoc;
                }
                if (!string.IsNullOrEmpty(ttbx.MaNN))
                {
                    string MaNN = ttbx.MaNN;
                    var nghenghiep = data.DmNNs.Where(p => p.MaNN == MaNN).Select(p => p.TenNN).FirstOrDefault();
                    if (nghenghiep != null)
                        rep.NGHENGHIEP.Value = nghenghiep;
                }
                rep.COQUAN.Value = ttbx.NoiLV;
            }
            if (vaovien != null)
            {
                rep.VAOVIEN.Value = vaovien.NgayVao.Value.ToShortDateString();
                rep.CDVAOVIEN.Value = DungChung.Ham.FreshString(vaovien.ChanDoan);
            }
            if (ravien != null)
            {
                rep.RAVIEN.Value = ravien.NgayRa.Value.ToShortDateString();
                rep.CDRAVIEN.Value = DungChung.Ham.FreshString(ravien.ChanDoan);
                rep.TTRAVIEN.Value = ravien.KetQua;
            }
            rep.CQCQ.Value = DungChung.Bien.TenCQCQ.ToUpper();
            rep.CQ.Value = DungChung.Bien.TenCQ.ToUpper();
            rep.NGAYKY.Value = DungChung.Bien.DiaDanh + ",ngày " + DateTime.Now.Day + " tháng " + DateTime.Now.Month + " năm " + DateTime.Now.Year;
            rep.GIAMDOC.Value = DungChung.Bien.GiamDoc;
            rep.CreateDocument();
            frm.prcIN.PrintingSystem = rep.PrintingSystem;
            frm.ShowDialog();
        }
        private void barttbenhan_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            if (_int_maBN > 0)
                InTomTatBenhAn_20001(data, _int_maBN);
            else
                MessageBox.Show("Bạn chưa chọn bệnh nhân!");
        }

        private void LupICD4_SelectedIndexChanged(object sender, EventArgs e)
        {

        }

        private void simpleButton1_Click_1(object sender, EventArgs e)//namnt (y/c a quý _ 20/4/2018) thêm lấy kết luận chẩn đoán hình ảnh
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            if (DialogResult.Yes == MessageBox.Show("Lấy kết quả chẩn đoán hình ảnh vào mục diễn biến bệnh?", "Hỏi lưu", MessageBoxButtons.YesNo, MessageBoxIcon.Question))
            {
                var xetnghiem = (from cls in DaTaContext.CLS.Where(p => p.MaBNhan == _int_maBN)
                                 join cd in DaTaContext.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                 join dv in DaTaContext.DichVus on cd.MaDV equals dv.MaDV
                                 join tn in DaTaContext.TieuNhomDVs.Where(p => p.IDNhom == 2) on dv.IdTieuNhom equals tn.IdTieuNhom
                                 select new { cd.MaCBth, dv.TenDV, KetQua = "", cls.MaCB, cd.Status, cls.NgayTH, tn.IDNhom, cls.NgayThang, TenDVct = "", TenDVctkq = "", cls.IdCLS, kqcdha = dv.TenDV + ":" + cd.KetLuan }).OrderBy(p => p.IdCLS).ToList();
                var ketqua = (from a in xetnghiem.Where(p => p.Status == 1)
                              group new { a } by new { a.NgayTH, a.MaCBth } into kq
                              select new
                              {
                                  kq.Key,
                                  TenXN = string.Join("\n", kq.Select(p => p.a.kqcdha).ToArray()),
                              }).ToList();
                var chidinh = (from a in xetnghiem
                               group new { a } by new { a.NgayThang, a.MaCB } into kq
                               select new
                               {
                                   kq.Key,
                                   TenXN = string.Join(",\n ", kq.Select(p => p.a.TenDV).ToArray()),
                               }).ToList();
                var Ktrabn = DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN).Where(p => p.NoiTru == 0 && p.DTNT == false).ToList();
                string KqDienBienMau = "";
                var dbbenh = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN && p.NgayNhap != null).ToList();
                int i = 0;
                foreach (var item in chidinh)
                {
                    if (dbbenh.Where(p => p.NgayNhap == item.Key.NgayThang).FirstOrDefault() == null)
                    {
                        DienBien dbmoi = new DienBien();
                        dbmoi.MaBNhan = _int_maBN;
                        dbmoi.NgayNhap = item.Key.NgayThang;
                        dbmoi.DienBien1 = "";
                        dbmoi.YLenh = "Chỉ định chẩn đoán hình ảnh: \n" + item.TenXN;
                        dbmoi.MaCB = item.Key.MaCB;
                        DaTaContext.DienBiens.Add(dbmoi);
                        DaTaContext.SaveChanges();
                    }
                }
                foreach (var item in ketqua)
                {
                    if (dbbenh.Where(p => p.NgayNhap == item.Key.NgayTH).FirstOrDefault() == null)
                    {
                        DienBien dbmoi = new DienBien();
                        dbmoi.MaBNhan = _int_maBN;
                        dbmoi.NgayNhap = item.Key.NgayTH;
                        dbmoi.DienBien1 = "Sao chẩn đoán hình ảnh: \n" + item.TenXN;
                        dbmoi.MaCB = item.Key.MaCBth;
                        DaTaContext.DienBiens.Add(dbmoi);
                        DaTaContext.SaveChanges();
                    }
                }
            }
            grvBNhankb_FocusedRowChanged(null, null);
        }

        private void groupControl7_Paint(object sender, PaintEventArgs e)
        {

        }

        private void grvDienBien_InitNewRow(object sender, InitNewRowEventArgs e)
        {
            grvDienBien.SetRowCellValue(e.RowHandle, colNgayNhapdb, DateTime.Now);
            if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
            {
                string chamsoc = "Dinh dưỡng:" + Environment.NewLine + "Loại chăm sóc:" + Environment.NewLine + "Quản lý:";
                grvDienBien.SetRowCellValue(e.RowHandle, colCheDoCS, chamsoc);
                grvDienBien.SetRowCellValue(e.RowHandle, colTenMaKPgrvDienBien, _makp);
                if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                    grvDienBien.SetRowCellValue(e.RowHandle, colMaCB_db, DungChung.Bien.MaCB);
            }
        }

        private void ckcchuyenBG_CheckedChanged(object sender, EventArgs e)
        {
            if (TTLuu == 2)
            {
                if (ckcchuyenBG.Checked)
                {
                    cboGiuong.SelectedIndex = -1;
                    cboBuong.SelectedIndex = -1;
                    dtTGChuyenBuongGiuong.EditValue = DateTime.Now;
                }
                else
                {
                    dtTGChuyenBuongGiuong.EditValue = ngayChuyenBG;
                    cboGiuong.Text = Giuongcu;
                    cboBuong.Text = Buongcu;
                }
            }
        }

        private void btnTraCuuBG_Click(object sender, EventArgs e)
        {

        }

        private void barButtonItem17_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            QLBV_Database.QLBVEntities db = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            int rs;
            int _int_maBN = 0;

            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            int _idkb = 0;
            if (grvChuyenKhoa.GetFocusedRowCellValue(colID) != null)
                _idkb = int.Parse(grvChuyenKhoa.GetFocusedRowCellValue(colID).ToString());
            _inPhieuCamKetTruyenMau(db, _int_maBN, _idkb);
        }

        private void barButtonItem18_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int Mabn = 0, idkb = 0;
            if (!string.IsNullOrEmpty(txtMaBNhan.Text))
            {
                if (!string.IsNullOrEmpty(txtIdkb.Text))
                {
                    idkb = Convert.ToInt32(txtIdkb.Text);
                    Mabn = Convert.ToInt32(txtMaBNhan.Text);
                    frm_Giaychungsinh frm = new frm_Giaychungsinh(Mabn);
                    frm.ShowDialog();
                }
                else
                {
                    MessageBox.Show("Bệnh nhân chưa có khám bệnh");
                }
            }
            else
            {
                MessageBox.Show("Bạn chưa chọn bệnh nhân");
            }
        }

        private void barPhieutruyendich_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int Mabn = 0, makp = 0;
            if (!string.IsNullOrEmpty(txtMaBNhan.Text))
            {
                DaTaContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                Mabn = Convert.ToInt32(txtMaBNhan.Text);
                if (lupTimMaKP.EditValue != null)
                    makp = Convert.ToInt32(lupTimMaKP.EditValue);
                var ttbn = (from bn in DaTaContext.BenhNhans.Where(p => p.MaBNhan == Mabn)
                            join bnkb in DaTaContext.BNKBs.Where(p => p.MaKP == makp) on bn.MaBNhan equals bnkb.MaBNhan
                            join vvv in DaTaContext.VaoViens on bn.MaBNhan equals vvv.MaBNhan
                            select new { bn.TenBNhan, bn.Tuoi, bn.GTinh, bnkb.Giuong, bnkb.Buong, bnkb.ChanDoan, bnkb.BenhKhac, vvv.SoVV }).ToList();
                var qkb = (from dt in DaTaContext.DThuocs.Where(p => p.PLDV == 1).Where(p => p.MaBNhan == Mabn).Where(p => p.MaKP == makp)
                           join dtct in DaTaContext.DThuoccts on dt.IDDon equals dtct.IDDon
                           join td in DaTaContext.TTTruyenDiches on dtct.IDDonct equals td.IdDonct
                           select new { dtct.MaDV, dtct.NgayNhap, dtct.SoLuong, dtct.SoLo, dtct.MaCB, td.TocDo, td.MaCBTH, td.BatDau, td.KetThuc, td.DonViTruyen, td.SLTruyen }).ToList();
                var _ldv = DaTaContext.DichVus.Where(p => p.PLoai == 1).ToList();
                var _lcb = DaTaContext.CanBoes.ToList();
                var kq = (from a in qkb
                          join dv in _ldv on a.MaDV equals dv.MaDV
                          join cb in _lcb on a.MaCBTH equals cb.MaCB
                          select new { a.NgayNhap, dv.TenDV, dv.HamLuong, a.SoLo, a.SoLuong, a.TocDo, a.BatDau, a.KetThuc, a.MaCB, TenCBTh = cb.TenCB, SLT = a.SLTruyen != null ? a.SLTruyen + " " + a.DonViTruyen : "" }).ToList();
                var kq2 = (from a in kq
                           join cb in _lcb on a.MaCB equals cb.MaCB
                           select new
                           {
                               a.NgayNhap,
                               NgayKe = a.NgayNhap.Value.ToString("dd/MM"),
                               TenDV = a.SLT != "" ? a.TenDV + "-" + a.HamLuong + "(" + a.SLT + ")" : a.TenDV + "-" + a.HamLuong,
                               SoLo = a.SoLo,
                               SoLuong = a.SoLuong,
                               TocDo = a.TocDo,
                               BatDau = a.BatDau.Value.ToString("HH:mm"),
                               KetThuc = a.KetThuc.Value.ToString("HH:mm"),
                               TenCBKe = cb.TenCB,
                               TenCBTh = a.TenCBTh
                           }).OrderBy(p => p.NgayNhap).ToList();
                if (kq2.Count > 0)
                {
                    QLBV.BaoCao.Rep_PhieuTheoDoiTruyenDich rep = new BaoCao.Rep_PhieuTheoDoiTruyenDich();
                    rep.TENCQCQ.Value = "Sở Y tế: " + DungChung.Bien.TenCQCQ;
                    rep.TENCQ.Value = "BV: " + DungChung.Bien.TenCQ;
                    rep.KHOAP.Value = "Khoa: " + lupTimMaKP.Text;
                    if (ttbn.Count > 0)
                    {
                        rep.SOVV.Value = "Số vào viện: " + ttbn.First().SoVV;
                        rep.TENBN.Value = ttbn.First().TenBNhan.ToUpper();
                        rep.TUOI.Value = ttbn.First().Tuoi;
                        if (ttbn.First().GTinh == 1)
                            rep.NU.Value = "/";
                        else
                            rep.NAM.Value = "/";
                        rep.CHANDOAN.Value = DungChung.Ham.FreshString(ttbn.First().ChanDoan + ";" + ttbn.First().BenhKhac);
                        if (ttbn.First().Buong.Contains(";") && ttbn.First().Giuong.Contains(";"))
                        {
                            string[] arrBuong = ttbn.First().Buong.Split(';');
                            string[] arrGiuong = ttbn.First().Giuong.Split(';');
                            rep.GIUONG.Value = arrGiuong[arrGiuong.Length - 1];
                            rep.BUONG.Value = arrBuong[arrBuong.Length - 1];
                        }
                        else
                        {
                            rep.GIUONG.Value = ttbn.First().Giuong;
                            rep.BUONG.Value = ttbn.First().Buong;
                        }
                    }
                    frmIn frm = new frmIn();
                    rep.DataSource = kq2;
                    rep.databinding();
                    rep.CreateDocument();
                    frm.prcIN.PrintingSystem = rep.PrintingSystem;
                    frm.ShowDialog();
                }
            }
            else
            {
                MessageBox.Show("Bạn chưa chọn bệnh nhân");
            }
        }

        private void barButtonItem19_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            int bnkb = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
            {
                if (txtIdkb.Text != null && txtIdkb.Text != "")
                {
                    bnkb = Convert.ToInt32(txtIdkb.Text);
                    _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
                }
            }
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            var bn = (from a in data.BNKBs.Where(p => p.IDKB == bnkb)
                      join b in data.BenhNhans on a.MaBNhan equals b.MaBNhan
                      select new
                      {
                          b.MaBNhan,
                          b.TenBNhan,
                          b.Tuoi,
                          b.GTinh,
                          b.DChi,
                          b.SThe,
                          a.Giuong,
                          a.Buong,
                          a.MaKP,
                          a.ChanDoan,
                          a.MaCB
                      }).ToList();
            string vv = "";
            if (data.VaoViens.Where(p => p.MaBNhan == _int_maBN).ToList().Count > 0)
                vv = data.VaoViens.Where(p => p.MaBNhan == _int_maBN).FirstOrDefault().SoVV;
            BaoCao.rep_PhieuSAMat_27022 rep = new BaoCao.rep_PhieuSAMat_27022();
            rep.SoPhieu.Value = vv;
            if (bn.Count > 0)
            {
                rep.TenBN.Value = bn.FirstOrDefault().TenBNhan;
                rep.TuoiBN.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.TinhTuoiBenhNhan(data, _int_maBN) : bn.FirstOrDefault().Tuoi.ToString();
                rep.Nam.Value = bn.FirstOrDefault().GTinh == 0 ? "/" : "";
                rep.Nu.Value = bn.FirstOrDefault().GTinh == 1 ? "/" : "";
                rep.DiaChi.Value = bn.FirstOrDefault().DChi;
                string[] buong = bn.FirstOrDefault().Buong.Split(';');
                if (buong.Count() > 0)
                    rep.Buong.Value = buong[buong.Count() - 1];
                string[] guong = bn.FirstOrDefault().Giuong.Split(';');
                if (guong.Count() > 0)
                    rep.Giuong.Value = guong[guong.Count() - 1];
                rep.ChanDoan.Value = bn.FirstOrDefault().ChanDoan;
                string macb = bn.FirstOrDefault().MaCB;
                string tencb = data.CanBoes.Where(p => p.MaCB == macb).FirstOrDefault().TenCB;
                int? makp = bn.FirstOrDefault().MaKP;
                rep.Khoa.Value = data.KPhongs.Where(p => p.MaKP == makp).FirstOrDefault().TenKP;
                rep.BSDT.Value = tencb;
            }
            rep.NgayThang.Value = "Ngày " + DateTime.Now.Day + " tháng " + DateTime.Now.Month + " năm " + DateTime.Now.Year;
            frmIn frm = new frmIn();
            rep.CreateDocument();
            frm.prcIN.PrintingSystem = rep.PrintingSystem;
            frm.ShowDialog();
        }
        private void barButtonItem20_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            int bnkb = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
            {
                if (txtIdkb.Text != null && txtIdkb.Text != "")
                {
                    bnkb = Convert.ToInt32(txtIdkb.Text);
                    _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
                }
            }
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            var bn = (from a in data.BNKBs.Where(p => p.IDKB == bnkb)
                      join b in data.BenhNhans on a.MaBNhan equals b.MaBNhan
                      select new
                      {
                          b.MaBNhan,
                          b.TenBNhan,
                          b.Tuoi,
                          b.GTinh,
                          b.DChi,
                          b.SThe,
                          a.Giuong,
                          a.Buong,
                          a.MaKP,
                          a.ChanDoan,
                          a.MaCB
                      }).ToList();
            string vv = "";
            if (data.VaoViens.Where(p => p.MaBNhan == _int_maBN).ToList().Count > 0)
                vv = data.VaoViens.Where(p => p.MaBNhan == _int_maBN).FirstOrDefault().SoVV;
            BaoCao.rep_PhieuDoKhucXaTuDong_27022 rep = new BaoCao.rep_PhieuDoKhucXaTuDong_27022();
            rep.SoPhieu.Value = vv;
            if (bn.Count > 0)
            {
                rep.TenBN.Value = bn.FirstOrDefault().TenBNhan;
                rep.TuoiBN.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.TinhTuoiBenhNhan(data, _int_maBN) : bn.FirstOrDefault().Tuoi.ToString();
                rep.Nam.Value = bn.FirstOrDefault().GTinh == 0 ? "/" : "";
                rep.Nu.Value = bn.FirstOrDefault().GTinh == 1 ? "/" : "";
                rep.DiaChi.Value = bn.FirstOrDefault().DChi;
                string[] buong = bn.FirstOrDefault().Buong.Split(';');
                if (buong.Count() > 0)
                    rep.Buong.Value = buong[buong.Count() - 1];
                string[] guong = bn.FirstOrDefault().Giuong.Split(';');
                if (guong.Count() > 0)
                    rep.Giuong.Value = guong[guong.Count() - 1];
                rep.ChanDoan.Value = bn.FirstOrDefault().ChanDoan;
                rep.SoBHYT.Value = bn.FirstOrDefault().SThe;
                string macb = bn.FirstOrDefault().MaCB;
                string tencb = data.CanBoes.Where(p => p.MaCB == macb).FirstOrDefault().TenCB;
                int? makp = bn.FirstOrDefault().MaKP;
                rep.Khoa.Value = data.KPhongs.Where(p => p.MaKP == makp).FirstOrDefault().TenKP;
                rep.BSDT.Value = tencb;
            }
            rep.NgayCD.Value = "Ngày " + DateTime.Now.Day + " tháng " + DateTime.Now.Month + " năm " + DateTime.Now.Year;
            frmIn frm = new frmIn();
            rep.CreateDocument();
            frm.prcIN.PrintingSystem = rep.PrintingSystem;
            frm.ShowDialog();
        }

        private void barButtonItem21_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            int bnkb = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
            {
                if (txtIdkb.Text != null && txtIdkb.Text != "")
                {
                    bnkb = Convert.ToInt32(txtIdkb.Text);
                    _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
                }
            }
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            var bn = (from a in data.BNKBs.Where(p => p.IDKB == bnkb)
                      join b in data.BenhNhans on a.MaBNhan equals b.MaBNhan
                      select new
                      {
                          b.MaBNhan,
                          b.TenBNhan,
                          b.Tuoi,
                          b.GTinh,
                          b.DChi,
                          b.SThe,
                          a.Giuong,
                          a.Buong,
                          a.MaKP,
                          a.ChanDoan,
                          a.MaCB
                      }).ToList();
            string vv = "";
            if (data.VaoViens.Where(p => p.MaBNhan == _int_maBN).ToList().Count > 0)
                vv = data.VaoViens.Where(p => p.MaBNhan == _int_maBN).FirstOrDefault().SoVV;
            BaoCao.rep_PhieuDoKhucXaGiacMac_27022 rep = new BaoCao.rep_PhieuDoKhucXaGiacMac_27022();
            rep.SoPhieu.Value = vv;
            if (bn.Count > 0)
            {
                rep.TenBN.Value = bn.FirstOrDefault().TenBNhan;
                rep.TuoiBN.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.TinhTuoiBenhNhan(data, _int_maBN) : bn.FirstOrDefault().Tuoi.ToString();
                rep.Nam.Value = bn.FirstOrDefault().GTinh == 0 ? "/" : "";
                rep.Nu.Value = bn.FirstOrDefault().GTinh == 1 ? "/" : "";
                rep.DiaChi.Value = bn.FirstOrDefault().DChi;
                string[] buong = bn.FirstOrDefault().Buong.Split(';');
                if (buong.Count() > 0)
                    rep.Buong.Value = buong[buong.Count() - 1];
                string[] guong = bn.FirstOrDefault().Giuong.Split(';');
                if (guong.Count() > 0)
                    rep.Giuong.Value = guong[guong.Count() - 1];
                rep.ChanDoan.Value = bn.FirstOrDefault().ChanDoan;
                string macb = bn.FirstOrDefault().MaCB;
                string tencb = data.CanBoes.Where(p => p.MaCB == macb).FirstOrDefault().TenCB;
                int? makp = bn.FirstOrDefault().MaKP;
                rep.Khoa.Value = data.KPhongs.Where(p => p.MaKP == makp).FirstOrDefault().TenKP;
                rep.BSDT.Value = tencb;
            }
            rep.NgayCD.Value = "Ngày " + DateTime.Now.Day + " tháng " + DateTime.Now.Month + " năm " + DateTime.Now.Year;
            frmIn frm = new frmIn();
            rep.CreateDocument();
            frm.prcIN.PrintingSystem = rep.PrintingSystem;
            frm.ShowDialog();
        }

        private void txtBenhKhac4_SelectedIndexChanged(object sender, EventArgs e)
        {
            //if (!string.IsNullOrEmpty(txtBenhKhac4.Text))
            //{
            //    if (txtBenhKhac4.EditValue.ToString() == "0")
            //    {
            //        txtBenhKhac4.EditValue = "";
            //        LupICD4.EditValue = "";
            //        txtBenhKhac4.Text = "";
            //    }
            //    //else
            //    //{
            //    //    LupICD4.EditValue = lICD.Where(p => p.TenICD == txtBenhKhac4.EditValue.ToString()).Select(p => p.MaICD).FirstOrDefault();
            //    //}
            //}
            //else
            //{
            //    txtBenhKhac4.Text = "";
            //    txtBenhKhac.Text = "";
            //}
        }

        private void grvChamSoc_RowCellClick_1(object sender, RowCellClickEventArgs e)
        {
            try
            {
                if (e.Column.Name == "colXoaCS")
                {
                    int rs;
                    int _int_maBN = 0;
                    if (Int32.TryParse(txtMaBNhan.Text, out rs))
                        _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
                    var ktrarv = DaTaContext.RaViens.Where(p => p.MaBNhan == _int_maBN).ToList();
                    if (ktrarv.Count <= 0)
                    {
                        int id = 0;
                        if (grvChamSoc.GetFocusedRowCellValue(colidcs) != null && grvChamSoc.GetFocusedRowCellValue(colidcs).ToString() != "")
                            id = Convert.ToInt32(grvChamSoc.GetFocusedRowCellValue(colidcs));
                        string macb = "";
                        if (grvChamSoc.GetFocusedRowCellValue(colCBoCS) != null && grvChamSoc.GetFocusedRowCellValue(colCBoCS).ToString() != "")
                            macb = grvChamSoc.GetFocusedRowCellValue(colCBoCS).ToString();
                        var xoa = DaTaContext.DienBiens.Where(p => p.ID == id).FirstOrDefault();
                        if (xoa != null)
                        {
                            if (DungChung.Bien.MaBV == "30007")
                            {
                                if (DungChung.Bien.MaCB == macb || DungChung.Bien.PLoaiKP == "Admin")
                                {
                                    DialogResult Result = MessageBox.Show("Bạn muốn xóa chăc sóc ngày: " + xoa.NgayNhap.Value.ToShortDateString(), "Hỏi xóa", MessageBoxButtons.OKCancel, MessageBoxIcon.Question);
                                    if (Result == DialogResult.OK)
                                    {
                                        DaTaContext.DienBiens.Remove(xoa);
                                        DaTaContext.SaveChanges();
                                        grvChamSoc.DeleteSelectedRows();
                                        MessageBox.Show("Xóa thành công");
                                    }
                                }
                                else
                                {
                                    var ad = DaTaContext.ADMINs.Where(p => p.MaCB == macb).ToList().FirstOrDefault();
                                    if (ad != null)
                                        MessageBox.Show("Không phải bác sĩ kê không được xóa! \n Tài khoản: " + ad.TenDN + " đã tạo diễn biến này.");
                                    else
                                        MessageBox.Show("Không phải bác sĩ kê không được xóa!\n Tài khoản tạo không còn tồn tại liên hệ Admin để được hỗ trợ!");
                                }

                            }
                            else
                            {
                                DialogResult Result = MessageBox.Show("Bạn muốn xóa chăm sóc ngày: " + xoa.NgayNhap.Value.ToShortDateString(), "Hỏi xóa", MessageBoxButtons.OKCancel, MessageBoxIcon.Question);
                                if (Result == DialogResult.OK)
                                {
                                    DaTaContext.DienBiens.Remove(xoa);
                                    DaTaContext.SaveChanges();
                                    grvChamSoc.DeleteSelectedRows();
                                    MessageBox.Show("Xóa thành công");
                                }
                            }
                        }
                    }
                    else
                    {
                        MessageBox.Show("Bệnh nhân đã ra viện, không thể xóa !");
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Lỗi xóa chăm sóc:" + ex.Message);
            }
        }

        private void grvChamSoc_InitNewRow_1(object sender, InitNewRowEventArgs e)
        {
            grvChamSoc.SetRowCellValue(e.RowHandle, colNgayCS, DateTime.Now);
        }

        private void cbomauincs_SelectedIndexChanged(object sender, EventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            int _makp = lupTimMaKP.EditValue != null ? Convert.ToInt32(lupTimMaKP.EditValue) : 0;
            if (cbomauincs.SelectedIndex == 0)
            {
                _inPhieuChamSoc(_data, _int_maBN, _makp);
            }
            cbomauincs.SelectedIndex = -1;
        }

        private void grcChamSoc_Click(object sender, EventArgs e)
        {

        }

        private void grcDienBien_Click(object sender, EventArgs e)
        {

        }

        private void btnInPhieuVLTL_Click(object sender, EventArgs e)
        {

        }

        private void grvDienBien_CellValueChanged(object sender, DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs e)
        {
            DateTime Ngaykham1 = dtNgayKhamkb.DateTime;

            switch (e.Column.Name)
            {
                case "colNgayNhapdb":
                    if (grvDienBien.GetFocusedRowCellValue(colNgayNhapdb) != null)
                    {
                        DateTime ngaydd = Convert.ToDateTime(grvDienBien.GetFocusedRowCellValue(colNgayNhapdb).ToString());
                        if (Ngaykham1 >= ngaydd)
                        {
                            MessageBox.Show("Ngày diễn biến phải lớn hơn ngày khám!");
                            grvDienBien.FocusedColumn = grvDienBien.Columns["colNgayNhapdb"];// set focus
                        }
                        grvDienBien.SetFocusedRowCellValue(colNgay, ngaydd.Date);
                    }
                    break;
            }

        }

        private void grvChamSoc_CellValueChanged(object sender, DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs e)
        {
            DateTime Ngaykham1 = dtNgayKhamkb.DateTime;

            switch (e.Column.Name)
            {
                case "colNgayCS":
                    if (grvChamSoc.GetFocusedRowCellValue(colNgayCS) != null)
                    {
                        DateTime ngaycs = Convert.ToDateTime(grvChamSoc.GetFocusedRowCellValue(colNgayCS).ToString());
                        if (Ngaykham1 >= ngaycs)
                        {
                            MessageBox.Show("Ngày chăm sóc phải lớn hơn ngày khám!");
                            grvChamSoc.FocusedColumn = grvChamSoc.Columns["colNgayCS"];// set focus
                        }
                    }
                    break;
            }
        }

        private void btnLayKQTT_Click(object sender, EventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            if (DialogResult.Yes == MessageBox.Show("Lấy kết quả thủ thuật - phẫu thuật vào mục diễn biến bệnh?", "Hỏi lưu", MessageBoxButtons.YesNo, MessageBoxIcon.Question))
            {
                var xetnghiem = (from cls in DaTaContext.CLS.Where(p => p.MaBNhan == _int_maBN)
                                 join cd in DaTaContext.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                 join clsct in DaTaContext.CLScts on cd.IDCD equals clsct.IDCD
                                 join dvct in DaTaContext.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                 join dv in DaTaContext.DichVus on dvct.MaDV equals dv.MaDV
                                 join tn in DaTaContext.TieuNhomDVs.Where(p => p.IDNhom == 8) on dv.IdTieuNhom equals tn.IdTieuNhom
                                 select new
                                 {
                                     cd.MaCBth,
                                     TenDV = (DungChung.Bien.MaBV == "20001") ? dv.TenDV + " " + cd.ChiDinh1 : dv.TenDV,
                                     dv.MaDV,
                                     clsct.KetQua,
                                     cd.KetLuan,
                                     cls.MaCB,
                                     cd.Status,
                                     cls.NgayTH,
                                     tn.IDNhom,
                                     cls.NgayThang,
                                     dvct.TenDVct,
                                     TenDVctkq = clsct.KetQua,
                                     cls.IdCLS,
                                     kqcdha = dv.TenDV
                                 }).OrderBy(p => p.IdCLS).ToList();

                var ketqua = (from a in xetnghiem
                              group new { a } by new { a.NgayThang.Value.Day, a.NgayThang.Value.Month, a.NgayThang.Value.Year, a.NgayThang.Value.Hour, a.NgayThang.Value.Minute, a.MaCB } into kq
                              select new
                              {
                                  kq.Key.Day,
                                  kq.Key.Month,
                                  kq.Key.Year,
                                  kq.Key.Hour,
                                  kq.Key.Minute,
                                  kq.Key.MaCB,
                                  KetQua = !string.IsNullOrEmpty((kq.Select(p => p.a.KetQua).ToString())) ? string.Join("\n", kq.Select(p => p.a.KetQua).ToArray()) : "",
                                  TenXN = string.Join(",\n", kq.Select(p => p.a.TenDV).ToArray()),
                              }).ToList();

                var dbbenh = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN && p.NgayNhap != null).ToList();


                foreach (var item in ketqua)
                {
                    var dienbien = dbbenh.Where(p => p.NgayNhap.Value.Day == item.Day && p.NgayNhap.Value.Month == item.Month && p.NgayNhap.Value.Year == item.Year && p.NgayNhap.Value.Hour == item.Hour && p.NgayNhap.Value.Minute == item.Minute).FirstOrDefault();
                    if (dienbien == null)
                    {
                        DienBien dbmoi = new DienBien();
                        dbmoi.NgayNhap = Convert.ToDateTime(item.Day + "/" + item.Month + "/" + item.Year + " " + item.Hour + ":" + item.Minute);
                        //dbmoi.DienBien1 = item.TenXN + ": " + item.KetQua + "\n";
                        dbmoi.YLenh = "Chỉ định thủ thuật - phẫu thuật:\n" + item.TenXN;
                        dbmoi.MaCB = item.MaCB;
                        dbmoi.MaBNhan = _int_maBN;
                        DaTaContext.DienBiens.Add(dbmoi);
                        DaTaContext.SaveChanges();
                    }
                    else
                    {
                        dienbien.NgayNhap = Convert.ToDateTime(item.Day + "/" + item.Month + "/" + item.Year + " " + item.Hour + ":" + item.Minute);
                        //dienbien.DienBien1 = item.TenXN + ": " + item.KetQua + "\n";
                        dienbien.YLenh = "Chỉ định thủ thuật - phẫu thuật: \n" + item.TenXN;
                        dienbien.MaCB = item.MaCB;
                        dienbien.MaBNhan = _int_maBN;
                        DaTaContext.SaveChanges();
                    }
                }
                grvBNhankb_FocusedRowChanged(null, null);
            }
        }



        private void btnKQTDCN_Click(object sender, EventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            if (DialogResult.Yes == MessageBox.Show("Lấy kết quả thăm dò chức năng vào mục diễn biến bệnh?", "Hỏi lưu", MessageBoxButtons.YesNo, MessageBoxIcon.Question))
            {
                var xetnghiem = (from cls in DaTaContext.CLS.Where(p => p.MaBNhan == _int_maBN)
                                 join cd in DaTaContext.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                 join dv in DaTaContext.DichVus on cd.MaDV equals dv.MaDV
                                 join tn in DaTaContext.TieuNhomDVs.Where(p => p.IDNhom == 3) on dv.IdTieuNhom equals tn.IdTieuNhom
                                 select new { cd.MaCBth, dv.TenDV, KetQua = "", cls.MaCB, cd.Status, cls.NgayTH, tn.IDNhom, cls.NgayThang, TenDVct = "", TenDVctkq = "", cls.IdCLS, kqcdha = dv.TenDV + ":" + cd.KetLuan }).OrderBy(p => p.IdCLS).ToList();
                var ketqua = (from a in xetnghiem.Where(p => p.Status == 1)
                              group new { a } by new { a.NgayTH, a.MaCBth } into kq
                              select new
                              {
                                  kq.Key,
                                  TenXN = string.Join("\n", kq.Select(p => p.a.kqcdha).ToArray()),
                              }).ToList();
                var chidinh = (from a in xetnghiem
                               group new { a } by new { a.NgayThang, a.MaCB } into kq
                               select new
                               {
                                   kq.Key,
                                   TenXN = string.Join(",\n ", kq.Select(p => p.a.TenDV).ToArray()),
                               }).ToList();
                var Ktrabn = DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN).Where(p => p.NoiTru == 0 && p.DTNT == false).ToList();
                var dbbenh = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN && p.NgayNhap != null).ToList();
                foreach (var item in chidinh)
                {
                    if (dbbenh.Where(p => p.NgayNhap == item.Key.NgayThang).FirstOrDefault() == null)
                    {
                        DienBien dbmoi = new DienBien();
                        dbmoi.MaBNhan = _int_maBN;
                        dbmoi.NgayNhap = item.Key.NgayThang;
                        dbmoi.DienBien1 = "";
                        dbmoi.YLenh = "Chỉ định thăm dò chức năng: \n" + item.TenXN;
                        dbmoi.MaCB = item.Key.MaCB;
                        DaTaContext.DienBiens.Add(dbmoi);
                        DaTaContext.SaveChanges();
                    }
                }
                foreach (var item in ketqua)
                {
                    if (dbbenh.Where(p => p.NgayNhap == item.Key.NgayTH).FirstOrDefault() == null)
                    {
                        DienBien dbmoi = new DienBien();
                        dbmoi.MaBNhan = _int_maBN;
                        dbmoi.NgayNhap = item.Key.NgayTH;
                        dbmoi.DienBien1 = "Sao thăm dò chức năng: \n" + item.TenXN;
                        dbmoi.MaCB = item.Key.MaCBth;
                        DaTaContext.DienBiens.Add(dbmoi);
                        DaTaContext.SaveChanges();
                    }
                }
            }
            grvBNhankb_FocusedRowChanged(null, null);
        }

        private void btnTDCN_Click(object sender, EventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            if (DialogResult.Yes == MessageBox.Show("Lấy kết quả thăm dò chức năng vào mục diễn biến bệnh?", "Hỏi lưu", MessageBoxButtons.YesNo, MessageBoxIcon.Question))
            {
                var xetnghiem = (from cls in DaTaContext.CLS.Where(p => p.MaBNhan == _int_maBN)
                                 join cd in DaTaContext.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                 join dv in DaTaContext.DichVus on cd.MaDV equals dv.MaDV
                                 join tn in DaTaContext.TieuNhomDVs.Where(p => p.IDNhom == 3) on dv.IdTieuNhom equals tn.IdTieuNhom
                                 select new { cd.MaCBth, dv.TenDV, KetQua = "", cls.MaCB, cd.Status, cls.NgayTH, tn.IDNhom, cls.NgayThang, TenDVct = "", TenDVctkq = "", cls.IdCLS, kqcdha = dv.TenDV + ":" + cd.KetLuan }).OrderBy(p => p.IdCLS).ToList();
                var ketqua = (from a in xetnghiem.Where(p => p.Status == 1)
                              group new { a } by new { a.NgayTH, a.MaCBth } into kq
                              select new
                              {
                                  kq.Key,
                                  TenXN = string.Join("\n", kq.Select(p => p.a.kqcdha).ToArray()),
                              }).ToList();
                var chidinh = (from a in xetnghiem
                               group new { a } by new { a.NgayThang, a.MaCB } into kq
                               select new
                               {
                                   kq.Key,
                                   TenXN = string.Join(",\n ", kq.Select(p => p.a.TenDV).ToArray()),
                               }).ToList();
                var Ktrabn = DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN).Where(p => p.NoiTru == 0 && p.DTNT == false).ToList();
                var dbbenh = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN && p.NgayNhap != null).ToList();
                foreach (var item in chidinh)
                {
                    if (dbbenh.Where(p => p.NgayNhap == item.Key.NgayThang).FirstOrDefault() == null)
                    {
                        DienBien dbmoi = new DienBien();
                        dbmoi.MaBNhan = _int_maBN;
                        dbmoi.NgayNhap = item.Key.NgayThang;
                        dbmoi.DienBien1 = "";
                        dbmoi.YLenh = "Chỉ định thăm dò chức năng: \n" + item.TenXN;
                        dbmoi.MaCB = item.Key.MaCB;
                        DaTaContext.DienBiens.Add(dbmoi);
                        DaTaContext.SaveChanges();
                    }
                }
                foreach (var item in ketqua)
                {
                    if (dbbenh.Where(p => p.NgayNhap == item.Key.NgayTH).FirstOrDefault() == null)
                    {
                        DienBien dbmoi = new DienBien();
                        dbmoi.MaBNhan = _int_maBN;
                        dbmoi.NgayNhap = item.Key.NgayTH;
                        dbmoi.DienBien1 = "Sao thăm dò chức năng: \n" + item.TenXN;
                        dbmoi.MaCB = item.Key.MaCBth;
                        DaTaContext.DienBiens.Add(dbmoi);
                        DaTaContext.SaveChanges();
                    }
                }
            }
            grvBNhankb_FocusedRowChanged(null, null);
        }

        private void barButtonItem22_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            BaoCao.Rep_PhieuKTraBenhAn rep = new BaoCao.Rep_PhieuKTraBenhAn(_int_maBN);
            frmIn frm = new frmIn();
            rep.CreateDocument();
            frm.prcIN.PrintingSystem = rep.PrintingSystem;
            frm.ShowDialog();
        }

        private void grv15NgayDT_RowClick(object sender, RowClickEventArgs e)
        {

        }

        private void grv15NgayDT_RowCellClick(object sender, RowCellClickEventArgs e)
        {
            try
            {
                if (e.Column.Name == "colXoa15")
                {
                    int rs;
                    int _int_maBN = 0;
                    if (Int32.TryParse(txtMaBNhan.Text, out rs))
                        _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
                    var ktrarv = DaTaContext.RaViens.Where(p => p.MaBNhan == _int_maBN).ToList();
                    if (ktrarv.Count <= 0)
                    {
                        int id = 0;
                        if (grv15NgayDT.GetFocusedRowCellValue(colID15) != null && grv15NgayDT.GetFocusedRowCellValue(colID15).ToString() != "")
                            id = Convert.ToInt32(grv15NgayDT.GetFocusedRowCellValue(colID15));
                        var xoa = DaTaContext.DienBiens.Where(p => p.ID == id).FirstOrDefault();
                        if (xoa != null)
                        {
                            DialogResult Result = MessageBox.Show("Bạn muốn xóa diện biến điều trị ngày: " + xoa.NgayNhap.Value.ToShortDateString(), "Hỏi xóa", MessageBoxButtons.OKCancel, MessageBoxIcon.Question);
                            if (Result == DialogResult.OK)
                            {
                                DaTaContext.DienBiens.Remove(xoa);
                                DaTaContext.SaveChanges();
                                grv15NgayDT.DeleteSelectedRows();
                                MessageBox.Show("Xóa thành công");
                            }
                        }
                    }
                    else
                    {
                        MessageBox.Show("Bệnh nhân đã ra viện, không thể xóa !");
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Lỗi xóa chăm sóc:" + ex.Message);
            }
        }

        private void barButtonItem23_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            var ttbn = DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN).FirstOrDefault();
            var ttbx = DaTaContext.TTboXungs.Where(p => p.MaBNhan == _int_maBN).FirstOrDefault();
            if (ttbn != null)
            {
                BaoCao.rep_TheDiUngThuoc rep = new BaoCao.rep_TheDiUngThuoc();
                rep.TenBNhan.Value = ttbn.TenBNhan.ToUpper();
                rep.Tuoi.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.TinhTuoiBenhNhan(DaTaContext, _maBN) : ttbn.Tuoi.ToString();
                rep.Nam.Value = ttbn.GTinh == 1 ? "x" : "";
                rep.Nu.Value = ttbn.GTinh == 1 ? "" : "x";
                if (ttbn.MaKP != null)
                {
                    int makp = ttbn.MaKP ?? 0;
                    var kp = DaTaContext.KPhongs.Where(p => p.MaKP == makp).FirstOrDefault();
                    if (kp != null)
                        rep.KhoaDT.Value = kp.TenKP;
                }
                rep.CMND.Value = ttbx.SoKSinh;
                frmIn frm = new frmIn();
                rep.CreateDocument();
                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                frm.ShowDialog();
            }
        }

        private void barButtonItem24_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            var ttbn = DaTaContext.BenhNhans.Where(p => p.MaBNhan == _int_maBN).FirstOrDefault();
            var ttbx = DaTaContext.TTboXungs.Where(p => p.MaBNhan == _int_maBN).FirstOrDefault();
            if (ttbn != null)
            {
                BaoCao.rep_PhieuKhaiThacTSDiUng rep = new BaoCao.rep_PhieuKhaiThacTSDiUng();
                rep.TenBNhan.Value = ttbn.TenBNhan.ToUpper();
                rep.Tuoi.Value = ttbn.Tuoi;
                rep.Nam.Value = ttbn.GTinh == 1 ? "x" : "";
                rep.Nu.Value = ttbn.GTinh == 1 ? "" : "x";
                if (ttbn.MaKP != null)
                {
                    int makp = ttbn.MaKP ?? 0;
                    var kp = DaTaContext.KPhongs.Where(p => p.MaKP == makp).FirstOrDefault();
                    if (kp != null)
                        rep.KhoaDT.Value = kp.TenKP;
                }
                rep.CMND.Value = ttbx.CMT;
                frmIn frm = new frmIn();
                rep.CreateDocument();
                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                frm.ShowDialog();
            }
        }


        private void simpleButton2_Click(object sender, EventArgs e)
        {
            string _ICD = "", _ICD2 = "", _ICD3 = "", _ICDKhac = "";
            if (!string.IsNullOrEmpty(lupMaICDkb.Text))
            {
                _ICD = lupMaICDkb.Text;
            }
            if (!string.IsNullOrEmpty(LupICD2.Text))
            {
                _ICD2 = LupICD2.Text;
            }
            if (!string.IsNullOrEmpty(LupICD3.Text))
            {
                _ICD3 = LupICD3.Text;
            }
            if (!string.IsNullOrEmpty(LupICD4.Text))
            {
                _ICDKhac = DungChung.Ham.FreshString(LupICD4.Text);
            }
            int idkb = 0;
            if (!string.IsNullOrEmpty(txtIdkb.Text))
                idkb = Convert.ToInt32(txtIdkb.Text);
            QLBV.FormThamSo.frm_HTBenhYHCT frm = new QLBV.FormThamSo.frm_HTBenhYHCT(_ICD, _ICD2, _ICD3, _ICDKhac, _licd10, idkb);
            frm.ShowDialog();
        }

        private void grvDichVu_PopupMenuShowing(object sender, PopupMenuShowingEventArgs e)
        {
            if (e.HitInfo.InRow)
            {
                if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                {
                    GridView view = sender as GridView;
                    view.FocusedRowHandle = e.HitInfo.RowHandle;
                    contextMenuStrip1.Show(view.GridControl, e.Point);
                }
            }
        }

        private void phiếuĐiềuTrịToolStripMenuItem_Click(object sender, EventArgs e)
        {
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out _int_maBN))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            var madv = (int)grvDichVu.GetRowCellValue(grvDichVu.FocusedRowHandle, "MaDV");
            int IDCD = (int)grvDichVu.GetRowCellValue(grvDichVu.FocusedRowHandle, colIDCD);

            if (_int_maBN > 0 && madv > 0 && IDCD > 0)
            {
                Frm_NhapKiThuatVien frm1 = new Frm_NhapKiThuatVien(madv, _int_maBN, IDCD);
                frm1.ShowDialog();
            }
        }

        private void barButtonItem26_ItemClick(object sender, ItemClickEventArgs e)
        {
            int _int_maBN = 0;
            int.TryParse(txtMaBNhan.Text, out _int_maBN);
            if (_int_maBN == 0)
            {
                MessageBox.Show("Chưa chọn bệnh nhân");
                return;
            }
            var bnkb = DaTaContext.BNKBs.FirstOrDefault(o => o.MaBNhan == _int_maBN && o.MaKP == _makp);
            if (bnkb != null)
            {
                frm_NhapTTPheDuyet frm = new frm_NhapTTPheDuyet(bnkb.IDKB);
                frm.ShowDialog();
            }
            else
            {
                MessageBox.Show("Chưa có thông tin khám bệnh tại phòng");
            }
        }

        string maIcdCbo;
        private void lupMaICDkb_ButtonClick(object sender, ButtonPressedEventArgs e)
        {
            try
            {
                OpenChiDinhICD_Properties(e, lupMaICDkb);
            }
            finally
            {
                maIcdCbo = "";
            }
        }

        private void OpenChiDinhICD_Properties(ButtonPressedEventArgs e, LookUpEdit cbo)
        {
            if (e.Button.Kind == ButtonPredefines.Glyph)
            {
                if (cbo.EditValue != null && cbo.EditValue != "")
                {
                    maIcdCbo = cbo.EditValue.ToString();
                    barCLS_ItemClick(null, null);
                }
            }
        }

        private void OpenChiDinhICD(ComboBoxEdit cbo)
        {
            if (cbo.EditValue != null && cbo.EditValue != "")
            {
                maIcdCbo = cbo.EditValue.ToString();
                barCLS_ItemClick(null, null);
            }
        }

        private void OpenChiDinhICD(LookUpEdit cbo)
        {
            if (cbo.EditValue != null && cbo.EditValue != "")
            {
                maIcdCbo = cbo.EditValue.ToString();
                barCLS_ItemClick(null, null);
            }
        }

        private void OpenChiDinhICD_Properties(ButtonPressedEventArgs e, ComboBoxEdit cbo)
        {
            if (e.Button.Kind == ButtonPredefines.Glyph)
            {
                if (cbo.EditValue != null && cbo.EditValue != "")
                {
                    maIcdCbo = cbo.EditValue.ToString();
                    barCLS_ItemClick(null, null);
                }
            }
        }

        private void LupICD2_ButtonClick(object sender, ButtonPressedEventArgs e)
        {
            try
            {
                OpenChiDinhICD_Properties(e, LupICD2);
            }
            finally
            {
                maIcdCbo = "";
            }
        }

        private void LupICD3_ButtonClick(object sender, ButtonPressedEventArgs e)
        {
            try
            {
                OpenChiDinhICD_Properties(e, LupICD3);
            }
            finally
            {
                maIcdCbo = "";
            }
        }

        private void LupICD4_ButtonClick(object sender, ButtonPressedEventArgs e)
        {
            try
            {
                OpenChiDinhICD_Properties(e, LupICD4);
            }
            finally
            {
                maIcdCbo = "";
            }
        }

        private void btnPackageICD1_Click(object sender, EventArgs e)
        {
            try
            {
                OpenChiDinhICD(lupMaICDkb);
            }
            finally
            {
                maIcdCbo = "";
            }
        }

        private void btnPackageICD2_Click(object sender, EventArgs e)
        {
            try
            {
                OpenChiDinhICD(LupICD2);
            }
            finally
            {
                maIcdCbo = "";
            }
        }

        private void btnPackageICD3_Click(object sender, EventArgs e)
        {
            try
            {
                OpenChiDinhICD(LupICD3);
            }
            finally
            {
                maIcdCbo = "";
            }
        }

        private void btnPackageICD4_Click(object sender, EventArgs e)
        {
            try
            {
                OpenChiDinhICD(LupICD4);
            }
            finally
            {
                maIcdCbo = "";
            }
        }

        private void simpleButton3_Click(object sender, EventArgs e)
        {
            string nam = Convert.ToString(DateTime.Now.Year);
            int m = Convert.ToInt32(lupTimMaKP.EditValue);
            if (m != 0)
            {
                frm_DSSDBuong_Giuong frm = new frm_DSSDBuong_Giuong(m, nam, cboBuong.Text);
                frm.lupKhoaphong.Enabled = false;
                frm.ShowDialog();
            }
            else
            {
                frm_DSSDBuong_Giuong frm = new frm_DSSDBuong_Giuong();
                frm.ShowDialog();
            }
            if (!string.IsNullOrEmpty(_buong))
                this.cboBuong.Text = _buong;
            if (!string.IsNullOrEmpty(_giuong))
                this.cboGiuong.Text = _giuong;
        }

        private void barButtonItem27_ItemClick(object sender, ItemClickEventArgs e)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            bool XN = true;
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
            {
                if (txtIdkb.Text != null && txtIdkb.Text != "")
                {
                    int id = Convert.ToInt32(txtIdkb.Text);
                    _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
                    QLBV.FormThamSo.frm_KeDonTV frm = new QLBV.FormThamSo.frm_KeDonTV(_int_maBN, id);
                    frm.ShowDialog();
                }
                else
                    MessageBox.Show("Bệnh nhân chưa có khám bệnh!");
            }
            else
            {
                MessageBox.Show("Bạn chưa chọn bệnh nhân!");
            }
        }
        private void RefreshChamSoc()
        {
            _lchamsoc = DaTaContext.DienBiens.Where(p => p.MaBNhan == _maBN).Where(p => p.Ploai == 1).OrderByDescending(o => o.NgayNhap).ToList();
            binsChamSoc.DataSource = _lchamsoc;
            grcChamSoc.DataSource = _lchamsoc;
        }
        private void RefreshDienBien()
        {
            var dienbienMap = DaTaContext.DienBiens.Where(p => p.MaBNhan == _maBN).Where(p => p.Ploai == 0 && ((DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017") ? p.MaKP == _makp : true)).OrderByDescending(o => o.NgayNhap).ToList();
            _ldienbien = (from db in dienbienMap
                          select new DienBienNgayGio(db)).ToList();
            List<DienBienNgayGio> _ldienbien22 = new List<DienBienNgayGio>();
            binsDienBien.DataSource = _ldienbien;
            grcDienBien.DataSource = binsDienBien;
        }


        private void grvChamSoc_PopupMenuShowing(object sender, PopupMenuShowingEventArgs e)
        {
            if (e.HitInfo.InRow)
            {
                if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                {
                    GridView view = sender as GridView;
                    view.FocusedRowHandle = e.HitInfo.RowHandle;
                    grvDienBien.FocusedRowHandle = e.HitInfo.RowHandle;
                    contextMenuStrip2.Show(view.GridControl, e.Point);
                }
            }
        }

        private void grvDienBien_PopupMenuShowing(object sender, PopupMenuShowingEventArgs e)
        {

            if (e.HitInfo.InRow)
            {
                if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                {
                    GridView view = sender as GridView;
                    view.FocusedRowHandle = e.HitInfo.RowHandle;
                    grvDienBien.FocusedRowHandle = e.HitInfo.RowHandle;
                    contextMenuStrip3.Show(view.GridControl, e.Point);
                }
            }
        }

        bool isNoShow = false;
        private void txtBenhChinh_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                var listIcd = lICD.Where(o => o.TenICD.ToUpper().Contains(txtBenhChinh.Text.ToUpper())).ToList();
                if (listIcd != null && listIcd.Count > 0)
                    lupChanDoanKb.Properties.DataSource = listIcd;
                else
                    lupChanDoanKb.Properties.DataSource = lICD;
                lupChanDoanKb.ShowPopup();
                isNoShow = true;
            }

            if (e.KeyCode == Keys.F8)
            {
                if (txtBenhChinh.Text.Trim() != null || lupMaICDkb.Text.Trim() != null)
                {
                    txtBenhChinh.Text = null;
                    lupMaICDkb.Text = null;
                }
            }
        }

        private void txtBenhChinh_Properties_ButtonClick(object sender, ButtonPressedEventArgs e)
        {
            if (e.Button.Kind == ButtonPredefines.Combo)
            {
                if (lupChanDoanKb.IsPopupOpen)
                    lupChanDoanKb.ClosePopup();
                else
                    lupChanDoanKb.ShowPopup();
            }
        }

        private void lupChanDoanKb_Closed(object sender, ClosedEventArgs e)
        {
            if (isNoShow)
            {
                isNoShow = false;
                lupChanDoanKb.Properties.DataSource = lICD;
            }
        }

        private void buttonEdit1_Properties_ButtonClick_1(object sender, ButtonPressedEventArgs e)
        {

            if (e.Button.Kind == ButtonPredefines.Combo)
            {
                if (txtBenhKhac2.IsPopupOpen)
                    txtBenhKhac2.ClosePopup();
                else
                    txtBenhKhac2.ShowPopup();
            }
        }

        private void txtBenhPhu2_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                var listIcd = lICD.Where(o => o.TenICD.ToUpper().Contains(txtBenhPhu2.Text.ToUpper())).ToList();
                if (listIcd != null && listIcd.Count > 0)
                    txtBenhKhac2.Properties.DataSource = listIcd;
                else
                    txtBenhKhac2.Properties.DataSource = lICD;
                txtBenhKhac2.ShowPopup();
                isNoShow = true;
            }

            if (e.KeyCode == Keys.F8)
            {
                if (txtBenhPhu2.Text.Trim() != null || LupICD2.Text.Trim() != null)
                {
                    txtBenhPhu2.Text = null;
                    LupICD2.Text = null;
                }
            }
        }

        private void txtBenhKhac2_Closed(object sender, ClosedEventArgs e)
        {
            if (isNoShow)
            {
                isNoShow = false;
                txtBenhKhac2.Properties.DataSource = lICD;
            }
        }


        private void buttonEdit1_Properties_ButtonClick_2(object sender, ButtonPressedEventArgs e)
        {
            if (e.Button.Kind == ButtonPredefines.Combo)
            {
                if (txtBenhKhac3.IsPopupOpen)
                    txtBenhKhac3.ClosePopup();
                else
                    txtBenhKhac3.ShowPopup();
            }
        }

        private void txtBenhPhu3_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                var listIcd = lICD.Where(o => o.TenICD.ToUpper().Contains(txtBenhPhu2.Text.ToUpper())).ToList();
                if (listIcd != null && listIcd.Count > 0)
                    txtBenhKhac3.Properties.DataSource = listIcd;
                else
                    txtBenhKhac3.Properties.DataSource = lICD;
                txtBenhKhac3.ShowPopup();
                isNoShow = true;
            }

            if (e.KeyCode == Keys.F8)
            {
                if (txtBenhPhu3.Text.Trim() != null || LupICD3.Text.Trim() != null)
                {
                    txtBenhPhu3.Text = null;
                    LupICD3.Text = null;
                }
            }
        }

        private void txtBenhKhac3_Closed(object sender, ClosedEventArgs e)
        {
            if (isNoShow)
            {
                isNoShow = false;
                txtBenhKhac3.Properties.DataSource = lICD;
            }
        }

        private void saoChămSócToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                var idDienBien = grvChamSoc.GetRowCellValue(grvChamSoc.FocusedRowHandle, "ID");
                if (idDienBien != null)
                {
                    var id = int.Parse(idDienBien.ToString());
                    if (id > 0)
                    {
                        frmNhapNgaySaoDienBien frm = new frmNhapNgaySaoDienBien(id, RefreshChamSoc, 2, dtNgayKhamkb.DateTime);
                        frm.ShowDialog();
                    }
                }
            }
            catch (Exception ex)
            {
                DungChung.WriteLog.Warn(ex);
            }
        }

        private void saoChămSócNhiềuNgàyToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                var idDienBien = grvChamSoc.GetRowCellValue(grvChamSoc.FocusedRowHandle, "ID");
                if (idDienBien != null)
                {
                    var id = int.Parse(idDienBien.ToString());
                    if (id > 0)
                    {
                        frmSaoNhieuNgayDienBien frm = new frmSaoNhieuNgayDienBien(id, RefreshChamSoc, 2, dtNgayKhamkb.DateTime);
                        frm.ShowDialog();
                    }
                }
            }
            catch (Exception ex)
            {
                DungChung.WriteLog.Warn(ex);
            }
        }

        private void saoDiễnBiếnToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            try
            {
                var idDienBien = grvDienBien.GetRowCellValue(grvDienBien.FocusedRowHandle, "ID");
                if (idDienBien != null)
                {
                    var id = int.Parse(idDienBien.ToString());
                    if (id > 0)
                    {
                        frmNhapNgaySaoDienBien frm = new frmNhapNgaySaoDienBien(id, RefreshDienBien, 1, dtNgayKhamkb.DateTime);
                        frm.ShowDialog();
                    }
                }
            }
            catch (Exception ex)
            {
                DungChung.WriteLog.Warn(ex);
            }
        }

        private void saoDiễnBiếnNhiềuNgàyToolStripMenuItem_Click(object sender, EventArgs e)
        {

            try
            {
                var idDienBien = grvDienBien.GetRowCellValue(grvDienBien.FocusedRowHandle, "ID");
                if (idDienBien != null)
                {
                    var id = int.Parse(idDienBien.ToString());
                    if (id > 0)
                    {
                        frmSaoNhieuNgayDienBien frm = new frmSaoNhieuNgayDienBien(id, RefreshDienBien, 2, dtNgayKhamkb.DateTime, 0);
                        frm.ShowDialog();
                    }
                }
            }
            catch (Exception ex)
            {
                DungChung.WriteLog.Warn(ex);
            }
        }

        private void txtBenhKhac_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                var listIcd = lICD.Where(o => o.TenICD.ToUpper().Contains(txtBenhKhac.Text.ToUpper())).ToList();
                if (listIcd != null && listIcd.Count > 0)
                    txtBenhKhac4.Properties.Items.AddRange(listIcd);
                else
                    txtBenhKhac4.Properties.Items.AddRange(lICD);
                txtBenhKhac4.ShowPopup();
                isNoShow = true;
            }
        }

        private void txtBenhKhac_Properties_ButtonClick(object sender, ButtonPressedEventArgs e)
        {
            if (e.Button.Kind == ButtonPredefines.Combo)
            {
                if (txtBenhKhac4.IsPopupOpen)
                    txtBenhKhac4.ClosePopup();
                else
                    txtBenhKhac4.ShowPopup();
            }
        }

        private void grvDonThuocct_CustomRowCellEdit(object sender, CustomRowCellEditEventArgs e)
        {
            if (e.Column.FieldName == "Up")
            {
                e.RepositoryItem = e.RowHandle <= 0 ? Res_Btn_Up_Disable : Res_Btn_Up_Enable;
            }
            else if (e.Column.FieldName == "Down")
            {
                DevExpress.XtraGrid.Views.Grid.ViewInfo.GridViewInfo viewInfo = grvDonThuocct.GetViewInfo() as DevExpress.XtraGrid.Views.Grid.ViewInfo.GridViewInfo;
                var lastRowHandle = viewInfo.RowsInfo.Count() > 0 ? viewInfo.RowsInfo.Max(o => o.RowHandle) : 0;
                e.RepositoryItem = (e.RowHandle == lastRowHandle && e.RowHandle > 0) ? Res_Btn_Down_Disable : Res_Btn_Down_Enable;
            }
        }

        private void Res_Btn_Up_Enable_Click(object sender, EventArgs e)
        {
            var rowHandle = grvDonThuocct.FocusedRowHandle;
            if (rowHandle > 0)
            {
                var index = grvDonThuocct.GetDataSourceRowIndex(rowHandle);
                var sourceIndex = binSDonThuocct[index];
                binSDonThuocct.RemoveAt(index);
                binSDonThuocct.Insert(index - 1, sourceIndex);
                grvDonThuocct.FocusedRowHandle = rowHandle - 1;
            }
        }

        private void Res_Btn_Down_Enable_Click(object sender, EventArgs e)
        {
            var rowHandle = grvDonThuocct.FocusedRowHandle;
            if (rowHandle >= 0)
            {
                var index = grvDonThuocct.GetDataSourceRowIndex(rowHandle);
                if (index == (this.grvDonThuocct.RowCount - 1))
                {
                    return;//can go down
                }
                var sourceIndex = binSDonThuocct[index];
                binSDonThuocct.RemoveAt(index);
                binSDonThuocct.Insert(index + 1, sourceIndex);
                grvDonThuocct.FocusedRowHandle = rowHandle + 1;
            }
        }

        private void grvDonThuocdt_PopupMenuShowing(object sender, PopupMenuShowingEventArgs e)
        {
            if (e.HitInfo.InRow)
            {
                GridView view = sender as GridView;
                view.FocusedRowHandle = e.HitInfo.RowHandle;
                var kieuDon = (int)grvDonThuocdt.GetRowCellValue(e.HitInfo.RowHandle, "KieuDon");
                if ((DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017"))
                {
                    if (kieuDon != 2)
                    {
                        contextMenuStripDonThuocdt.Show(view.GridControl, e.Point);
                    }
                    else
                        contextMenuStripDonTraThuocdt.Show(view.GridControl, e.Point);
                }
            }
        }

        int idDon = 0;
        private void trảĐơnToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                idDon = (int)grvDonThuocdt.GetRowCellValue(grvDonThuocdt.FocusedRowHandle, "IDDon");
                if (idDon > 0)
                {
                    var dthuoc = (from dt in DaTaContext.DThuocs.Where(o => o.IDDon == idDon)
                                  join dtct in DaTaContext.DThuoccts.Where(o => o.IDDon == idDon) on dt.IDDon equals dtct.IDDon
                                  select dtct).ToList();
                    if (dthuoc != null && dthuoc.Count > 0)
                    {
                        if (dthuoc.Exists(o => o.Status != 1))
                        {
                            MessageBox.Show("Đơn thuốc chưa lĩnh không thể trả đơn", "Thông báo");
                        }
                        else
                            btnMoiKb_Click(null, null);
                    }

                }
            }
            finally
            {
                idDon = 0;
            }
        }
        public class Hotro
        {
            public int MaBNhan { get; set; }
            public string TenBNhan { get; set; }
            public string DTuong { get; set; }
            public string SThe { get; set; }
            public string DChi { get; set; }
            public DateTime? NgayVao { get; set; }
            public string SoBA { get; set; }
            public DateTime? NgayRa { get; set; }
            public string SDT { get; set; }
        }
        List<Hotro> _listHotro = new List<Hotro>();

        private void btnHotroAnUong_ItemClick(object sender, ItemClickEventArgs e)
        {
            int _month = DateTime.Now.Month;
            int _year = DateTime.Now.Year;
            int _MaBN = 0;
            if (grvBNhankb.RowCount > 0)
                _MaBN = Convert.ToInt32(grvBNhankb.GetFocusedRowCellValue("MaBNhan").ToString());


            if (_MaBN != 0)
            {
                _listHotro.Clear();
                var q = (from bn in DaTaContext.BenhNhans.Where(p => p.MaBNhan == _MaBN)
                         join ttbx in DaTaContext.TTboXungs on bn.MaBNhan equals ttbx.MaBNhan
                         select new
                         {
                             bn.MaBNhan,
                             bn.TenBNhan,
                             bn.SoHSBA,
                             ttbx.DThoai,
                             bn.DChi,
                             bn.MaKP,
                             bn.DTuong,
                             bn.SThe
                         }).ToList();

                var vv = (from vv1 in DaTaContext.VaoViens.Where(p => p.MaBNhan == _MaBN) select new { vv1.MaBNhan, vv1.NgayVao, vv1.SoBA }).ToList();

                var rv = (from _rv in DaTaContext.RaViens.Where(p => p.MaBNhan == _MaBN) select new { _rv.MaBNhan, _rv.NgayRa }).ToList();


                foreach (var item in q)
                {
                    Hotro _ht = new Hotro();
                    _ht.MaBNhan = item.MaBNhan;
                    _ht.TenBNhan = item.TenBNhan;
                    _ht.DChi = item.DChi;
                    _ht.SDT = item.DThoai;
                    _ht.SoBA = item.SoHSBA;
                    _ht.SThe = item.SThe;
                    _ht.DTuong = item.DTuong;

                    if (rv.Count > 0)
                    {
                        _ht.NgayRa = rv[0].NgayRa;
                    }
                    if (vv.Count > 0)
                    {
                        _ht.NgayVao = vv[0].NgayVao;
                        _ht.SoBA = vv[0].SoBA;

                    }

                    _listHotro.Add(_ht);
                }
                Dictionary<string, object> _dic = new Dictionary<string, object>();
                _dic.Add("Ngaythang", "Ngày.....tháng " + _month + " năm " + _year);
                _dic.Add("Khoaphong", lupTimMaKP.Text);
                DungChung.Ham.Print(DungChung.PrintConfig.Rep_HotroAnUong_14018, _listHotro, _dic, false);
            }
            else
            {
                MessageBox.Show("Bạn chưa chọn bệnh nhân. Vui lòng chọn lại !");
            }
        }

        private void btnChamCom_ItemClick(object sender, ItemClickEventArgs e)
        {
            int _month = DateTime.Now.Month;
            int _year = DateTime.Now.Year;
            int _Day = DateTime.Now.Day;
            int _MaBN = 0;
            if (grvBNhankb.RowCount > 0)
                _MaBN = Convert.ToInt32(grvBNhankb.GetFocusedRowCellValue("MaBNhan").ToString());

            if (_MaBN != 0)
            {
                _listHotro.Clear();
                var q = (from bn in DaTaContext.BenhNhans.Where(p => p.MaBNhan == _MaBN)

                         select new
                         {
                             bn.MaBNhan,
                             bn.TenBNhan,
                             bn.DChi,
                             bn.MaKP,
                             bn.SThe
                         }).ToList();

                foreach (var item in q)
                {
                    Hotro _ht = new Hotro();
                    _ht.MaBNhan = item.MaBNhan;
                    _ht.TenBNhan = item.TenBNhan;
                    _ht.DChi = item.DChi;
                    _listHotro.Add(_ht);
                }

                Dictionary<string, object> _dic = new Dictionary<string, object>();
                _dic.Add("Khoaphong", lupTimMaKP.Text);
                _dic.Add("HoTen", "Họ và Tên: " + q.Select(p => p.TenBNhan).First().ToString().ToUpper());
                _dic.Add("DiaChi", "Địa chỉ: " + q.Select(p => p.DChi).First().ToString());
                _dic.Add("SoThe", "Mã số thẻ BHYT: " + q.Select(p => p.SThe).First().ToString());
                DungChung.Ham.Print(DungChung.PrintConfig.Rep_BangChamCom_14018, _listHotro, _dic, false);
            }
            else
            {
                MessageBox.Show("Bạn chưa chọn bệnh nhân. Vui lòng chọn lại !");
            }
        }

        private void btnTheodoiGiuongBenh_ItemClick(object sender, ItemClickEventArgs e)
        {
            int _month = DateTime.Now.Month;
            int _year = DateTime.Now.Year;

            int _MaBN = 0;
            if (grvBNhankb.RowCount > 0)
                _MaBN = Convert.ToInt32(grvBNhankb.GetFocusedRowCellValue("MaBNhan").ToString());

            if (_MaBN != 0)
            {
                _listHotro.Clear();
                var q = (from bn in DaTaContext.BenhNhans.Where(p => p.MaBNhan == _MaBN)

                         select new
                         {
                             bn.MaBNhan,
                             bn.TenBNhan,
                             bn.DChi,
                             bn.MaKP
                         }).ToList();
                foreach (var item in q)
                {
                    Hotro _ht = new Hotro();
                    _ht.MaBNhan = item.MaBNhan;
                    _ht.TenBNhan = item.TenBNhan;
                    _ht.DChi = item.DChi;
                    _listHotro.Add(_ht);
                }

                Dictionary<string, object> _dic = new Dictionary<string, object>();
                _dic.Add("Title", "BẢNG THEO DÕI SỬ DỤNG GIƯỜNG BỆNH THÁNG " + _month + " NĂM " + _year);
                _dic.Add("Ngaythang", "Ngày.....tháng " + _month + " NĂM " + _year);
                _dic.Add("Khoaphong", lupTimMaKP.Text);
                DungChung.Ham.Print(DungChung.PrintConfig.Rep_SuDungGiuongBenhTheoThang_14018, _listHotro, _dic, false);
            }
            else
            {
                MessageBox.Show("Bạn chưa chọn bệnh nhân. Vui lòng chọn lại !");
            }
        }

        private void barButtonItem29_ItemClick(object sender, ItemClickEventArgs e)
        {
            int _int_maBN = 0;
            int.TryParse(txtMaBNhan.Text, out _int_maBN);
            if (_int_maBN == 0)
            {
                MessageBox.Show("Chưa chọn bệnh nhân");
                return;
            }
            var bnkb = DaTaContext.BNKBs.FirstOrDefault(o => o.MaBNhan == _int_maBN && o.MaKP == _makp);
            if (bnkb != null)
            {
                var ktvv = DaTaContext.VaoViens.Where(p => p.MaBNhan == _int_maBN).ToList();
                if (radNoiTru.SelectedIndex == 1 && ktvv.Count <= 0)
                {
                    MessageBox.Show("Bệnh Nhân chưa có khám bệnh vào viện!");
                    return;
                }
                else
                {
                    frm_NhapTTPheDuyet frm = new frm_NhapTTPheDuyet(bnkb.IDKB);
                    frm.ShowDialog();
                }
            }
            else
            {
                MessageBox.Show("Chưa có thông tin khám bệnh tại phòng");
            }
        }

        private void lấyYLệnhHàngNgàyToolStripMenuItem_Click(object sender, EventArgs e)
        {
            var dienBien = (DienBienNgayGio)grvDienBien.GetFocusedRow();
            if (dienBien != null)
            {
                var id = dienBien.ID;
                if (id > 0)
                {
                    DungChung.Ham.Update_DienBien_All(id, dienBien.MaKP, 1, true);
                    SetTTTab();
                    var rowHandle = grvDienBien.LocateByValue("ID", id);
                    grvDienBien.BeginUpdate();
                    grvDienBien.FocusedRowHandle = rowHandle;
                    grvDienBien.MakeRowVisible(rowHandle);
                    grvDienBien.EndUpdate();
                }
            }
        }

        private void lấyYLệnhBổSungToolStripMenuItem_Click(object sender, EventArgs e)
        {
            var dienBien = (DienBienNgayGio)grvDienBien.GetFocusedRow();
            if (dienBien != null)
            {
                var id = dienBien.ID;
                if (id > 0)
                {
                    DungChung.Ham.Update_DienBien_All(id, dienBien.MaKP, 2, true);
                    SetTTTab();
                    var rowHandle = grvDienBien.LocateByValue("ID", id);
                    grvDienBien.BeginUpdate();
                    grvDienBien.FocusedRowHandle = rowHandle;
                    grvDienBien.MakeRowVisible(rowHandle);
                    grvDienBien.EndUpdate();
                }
            }
        }

        private void đơnThuốcHàngNgàyToolStripMenuItem_Click(object sender, EventArgs e)
        {
            var dienBien = (DienBienNgayGio)grvDienBien.GetFocusedRow();
            if (dienBien != null)
            {
                var id = dienBien.ID;
                if (id > 0)
                {
                    DungChung.Ham.Update_DienBien_All(id, dienBien.MaKP, 1, true);
                    SetTTTab();
                    var rowHandle = grvDienBien.LocateByValue("ID", id);
                    grvDienBien.BeginUpdate();
                    grvDienBien.FocusedRowHandle = rowHandle;
                    grvDienBien.MakeRowVisible(rowHandle);
                    grvDienBien.EndUpdate();
                }
            }
        }

        private void vLTLPHCNToolStripMenuItem_Click(object sender, EventArgs e)
        {
            var dienBien = (DienBienNgayGio)grvDienBien.GetFocusedRow();
            if (dienBien != null)
            {
                var id = dienBien.ID;
                if (id > 0)
                {
                    DungChung.Ham.Update_DienBien_All(id, dienBien.MaKP, 5, true);
                    SetTTTab();
                    var rowHandle = grvDienBien.LocateByValue("ID", id);
                    grvDienBien.BeginUpdate();
                    grvDienBien.FocusedRowHandle = rowHandle;
                    grvDienBien.MakeRowVisible(rowHandle);
                    grvDienBien.EndUpdate();
                }
            }
        }

        private void xétNghiệmToolStripMenuItem_Click(object sender, EventArgs e)
        {
            var dienBien = (DienBienNgayGio)grvDienBien.GetFocusedRow();
            if (dienBien != null)
            {
                var id = dienBien.ID;
                if (id > 0)
                {
                    DungChung.Ham.Update_DienBien_All(id, dienBien.MaKP, 4, true);
                    SetTTTab();
                    var rowHandle = grvDienBien.LocateByValue("ID", id);
                    grvDienBien.BeginUpdate();
                    grvDienBien.FocusedRowHandle = rowHandle;
                    grvDienBien.MakeRowVisible(rowHandle);
                    grvDienBien.EndUpdate();
                }
            }
        }

        private void cĐHAToolStripMenuItem_Click(object sender, EventArgs e)
        {
            var dienBien = (DienBienNgayGio)grvDienBien.GetFocusedRow();
            if (dienBien != null)
            {
                var id = dienBien.ID;
                if (id > 0)
                {
                    DungChung.Ham.Update_DienBien_All(id, dienBien.MaKP, 3, true);
                    SetTTTab();
                    var rowHandle = grvDienBien.LocateByValue("ID", id);
                    grvDienBien.BeginUpdate();
                    grvDienBien.FocusedRowHandle = rowHandle;
                    grvDienBien.MakeRowVisible(rowHandle);
                    grvDienBien.EndUpdate();
                }
            }
        }

        public class DienBienNgayGio : DienBien
        {
            public DateTime Ngay { get; set; }
            public string Gio { get; set; }
            public string NgayNhap_24012 { get; set; }
            public DienBienNgayGio()
            {
            }
            public DienBienNgayGio(DienBien data)
            {
                LibraryStore.Mapper.DataObjectMapper.Map<DienBienNgayGio>(this, data);

                this.Ngay = data.NgayNhap.Value.Date == null ? DateTime.Now.Date : data.NgayNhap.Value.Date;
            }
        }

        private void barButtonItem30_ItemClick(object sender, ItemClickEventArgs e)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            string tuoitt = "";
            tuoitt = DungChung.Ham.TuoitheoThang(data, _int_maBN, "72-00");
            if (tuoitt.Length > 3)
            {
                frm_TTNgThanTreEm frm = new frm_TTNgThanTreEm(_int_maBN);
                frm.Show();
            }
            else
            {
                MessageBox.Show("Chỉ áp dụng cho bệnh nhân dưới 72 tháng tuổi");
            }
        }

        private void mởTấtCảToolStripMenuItem_Click(object sender, EventArgs e)
        {
            grvDienBien.ExpandAllGroups();
        }

        private void đóngTấtCảToolStripMenuItem_Click(object sender, EventArgs e)
        {
            grvDienBien.CollapseAllGroups();
        }

        private void grvDienBien_RowCellStyle(object sender, RowCellStyleEventArgs e)
        {
            if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
            {
                var row = (DienBien)grvDienBien.GetRow(e.RowHandle);
                if (row != null)
                {
                    if (row.Loai == 0)
                        e.Appearance.ForeColor = Color.Red;
                    else if (row.Loai == 1)
                        e.Appearance.ForeColor = Color.Black;
                    else if (row.Loai == 2)
                        e.Appearance.ForeColor = Color.Blue;

                }
            }
        }

        private void sửaDiễnBiếnToolStripMenuItem_Click(object sender, EventArgs e)
        {
            var dienBien = (DienBien)grvDienBien.GetFocusedRow();
            if (dienBien != null && dienBien.ID > 0)
            {
                frm_SuaDienBien frm = new frm_SuaDienBien(dienBien, delegateSuaDienBien);
                frm.ShowDialog();
                frm.Close();
            }
        }

        public void delegateSuaDienBien(DienBien dienBien)
        {
            SetTTTab();
            var rowHandle = grvDienBien.LocateByValue("ID", dienBien.ID);
            grvDienBien.BeginUpdate();
            grvDienBien.FocusedRowHandle = rowHandle;
            grvDienBien.MakeRowVisible(rowHandle);
            grvDienBien.EndUpdate();
        }

        private void barButtonItem32_ItemClick(object sender, ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            frm_TomTatBenhAn frm = new frm_TomTatBenhAn(_int_maBN);
            frm.ShowDialog();
        }

        private void barButtonItem33_ItemClick(object sender, ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            frm_NghiDuongThai frm = new frm_NghiDuongThai(_int_maBN);
            frm.ShowDialog();
        }

        private void barButtonItem34_ItemClick(object sender, ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            if (_int_maBN > 0 && lupTimMaKP.EditValue != null && lupTimMaKP.EditValue.ToString() != "")
            {
                QLBV_Database.QLBVEntities dataContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                var rv = dataContext.RaViens.FirstOrDefault(o => o.MaBNhan == _int_maBN);
                if (rv == null)
                {
                    MessageBox.Show("Bệnh nhân chưa ra viện");
                    return;
                }
                var makp = Convert.ToInt32(lupTimMaKP.EditValue);
                frm_TT_RaVien frm = new frm_TT_RaVien(_int_maBN, makp);
                frm.ShowDialog();
            }
        }

        private void barButtonItem35_ItemClick(object sender, ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            if (_int_maBN > 0 && lupTimMaKP.EditValue != null && lupTimMaKP.EditValue.ToString() != "")
            {
                QLBV_Database.QLBVEntities dataContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                var rv = dataContext.RaViens.FirstOrDefault(o => o.MaBNhan == _int_maBN);
                if (rv == null)
                {
                    MessageBox.Show("Bệnh nhân chưa ra viện");
                    return;
                }
                var makp = Convert.ToInt32(lupTimMaKP.EditValue);
                frm_NghiViecHuongBHXH frm = new frm_NghiViecHuongBHXH(_int_maBN);
                frm.ShowDialog();
            }
        }

        private void saoTextDiễnBiếnChămSócToolStripMenuItem_Click(object sender, EventArgs e)
        {
            var dienBien = (DienBien)grvDienBien.GetFocusedRow();
            if (dienBien != null && dienBien.ID > 0)
            {
                QLBV_Database.QLBVEntities dataContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                var dienBienSao = dataContext.DienBiens.FirstOrDefault(o => o.ID == dienBien.ID);
                if (dienBienSao != null)
                {
                    var ngaySaoBefore = dienBienSao.NgayNhap.Value.AddDays(-1);
                    var dienBienBefore = dataContext.DienBiens.FirstOrDefault(o => o.NgayNhap.Value.Day == ngaySaoBefore.Day && o.NgayNhap.Value.Month == ngaySaoBefore.Month && o.NgayNhap.Value.Year == ngaySaoBefore.Year && o.Loai == dienBienSao.Loai && o.MaBNhan == dienBienSao.MaBNhan);
                    if (dienBienBefore != null)
                    {
                        dienBienSao.DienBien1 = dienBienBefore.DienBien1;
                        dienBienSao.HuongDTri = dienBienBefore.HuongDTri;
                        dataContext.SaveChanges();
                        SetTTTab();
                        var rowHandle = grvDienBien.LocateByValue("ID", dienBien.ID);
                        grvDienBien.BeginUpdate();
                        grvDienBien.FocusedRowHandle = rowHandle;
                        grvDienBien.MakeRowVisible(rowHandle);
                        grvDienBien.EndUpdate();
                    }
                    else
                    {
                        MessageBox.Show("Không có diễn biến để sao");
                    }
                }
            }
        }

        private void cboBacSyDT_EditValueChanged(object sender, EventArgs e)
        {
            TimKiem();
        }

        private void lookUpEdit1_Properties_ButtonClick(object sender, ButtonPressedEventArgs e)
        {
            if (e.Button.Kind == ButtonPredefines.Delete)
            {
                cboBacSyDT.EditValue = null;
            }
        }

        private void grvBNhankb_CustomUnboundColumnData(object sender, DevExpress.XtraGrid.Views.Base.CustomColumnDataEventArgs e)
        {
            var row = (BenhNhan)grvBNhankb.GetRow(grvBNhankb.GetRowHandle(e.ListSourceRowIndex));
            if (e.IsGetData && e.Column.UnboundType != DevExpress.Data.UnboundColumnType.Bound)
            {
                if (e.Column.FieldName == "Tuoi_Str")
                {
                    e.Value = (DungChung.Bien.MaBV == "14018" ? DungChung.Ham.CalculateAge(row.NgaySinh, row.ThangSinh, row.NamSinh, "tháng") : DungChung.Ham.CalculateAgeByDate(row.NgaySinh, row.ThangSinh, row.NamSinh).ToString());
                }
            }
        }

        private void lấyDiễnBiếnCủaKhoaChínhToolStripMenuItem_Click(object sender, EventArgs e)
        {
            var row = (DienBien)grvDienBien.GetFocusedRow();
            if (row != null)
            {
                var bnkb = DaTaContext.BNKBs.FirstOrDefault(o => o.MaBNhan == row.MaBNhan && o.MaKPDTKH == _makp);
                if (bnkb != null)
                {
                    QLBV_Database.QLBVEntities dataContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                    var dienBienChinhs = dataContext.DienBiens.Where(o => o.MaBNhan == row.MaBNhan && o.MaKP == bnkb.MaKP && o.Ploai == 0 && o.NgayNhap.Value.Year == row.NgayNhap.Value.Year && o.NgayNhap.Value.Month == row.NgayNhap.Value.Month && o.NgayNhap.Value.Day == row.NgayNhap.Value.Day).ToList();
                    if (dienBienChinhs.Count > 0)
                    {
                        var update = dataContext.DienBiens.FirstOrDefault(o => o.ID == row.ID);
                        if (update != null)
                        {
                            update.DienBien1 = string.Join(Environment.NewLine, dienBienChinhs.Select(o => o.DienBien1));
                            dataContext.SaveChanges();
                            grvDienBien.SetFocusedRowCellValue("DienBien1", update.DienBien1);
                            grvDienBien.RefreshRow(grvDienBien.FocusedRowHandle);
                        }
                    }
                }
            }
        }

        private void barButtonItem31_ItemClick(object sender, ItemClickEventArgs e)
        {
            if (lupTimMaKP.EditValue == null || string.IsNullOrWhiteSpace(lupTimMaKP.EditValue.ToString()))
                return;
            QLBV.CLS.frm_Execute_Multi_PHCN.PHCNADO ado = new QLBV.CLS.frm_Execute_Multi_PHCN.PHCNADO();
            ado.MaKP = Convert.ToInt32(lupTimMaKP.EditValue);
            ado.FromTime = dtTimTuNgay.DateTime;
            ado.ToTime = dtTimDenNgay.DateTime;
            ado.NoiTru = radNoiTru.SelectedIndex;
            ado.Is_Execute_Cls = true;
            QLBV.CLS.frm_Execute_Multi_PHCN frm = new QLBV.CLS.frm_Execute_Multi_PHCN(ado);
            frm.ShowDialog();
        }

        private void btnChanDoanKH_Click(object sender, EventArgs e)
        {
            int _int_maBN = 0;
            int.TryParse(txtMaBNhan.Text, out _int_maBN);
            if (_int_maBN == 0)
            {
                MessageBox.Show("Chưa chọn bệnh nhân");
                return;
            }
            var bnkb = DaTaContext.BNKBs.FirstOrDefault(o => o.MaBNhan == _int_maBN && o.MaKPDTKH == _makp);
            if (bnkb != null)
            {
                frm_ChanDoanKH frm = new frm_ChanDoanKH(bnkb);
                frm.ShowDialog();
            }
            else
            {
                MessageBox.Show("Chức năng không cho phép");
            }
        }

        private void barButtonItem36_ItemClick(object sender, ItemClickEventArgs e)
        {
            if (!string.IsNullOrEmpty(txtIdkb.Text))
            {
                int id = int.Parse(txtIdkb.Text.Trim());
                string TB = "";
                var query = DaTaContext.BNKBs.Where(p => p.IDKB == (id)).ToList();
                if (query.Count > 0)
                {
                    if (query.First().Buong.Contains(";") && query.First().Giuong.Contains(";"))
                    {
                        string[] arrBuong = query.First().Buong.Split(';');
                        string[] arrGiuong = query.First().Giuong.Split(';');
                        if (arrBuong.Length == arrGiuong.Length)
                        {
                            for (int i = 0; i < arrBuong.Length; i++)
                            {
                                TB += arrBuong[i] + " - " + arrGiuong[i] + "\n";
                            }
                            MessageBox.Show("Danh sách Buồng|Giường Bệnh nhân đã nằm trong khoa \n" + TB, "Thông báo", MessageBoxButtons.OK);
                        }
                    }
                    else
                    {
                        TB = query.First().Buong + " - " + query.First().Giuong;
                        MessageBox.Show("Danh sách Buồng|Giường Bệnh nhân đã nằm trong khoa \n" + TB, "Thông báo", MessageBoxButtons.OK);
                    }
                }
            }
        }

        private void repositoryItemButtonEdit_Print_ButtonClick(object sender, ButtonPressedEventArgs e)
        {
            var row = (DienBien)grv15NgayDT.GetFocusedRow();
            if (row != null && row.ID > 0 && row.MaBNhan != null)
            {
                DungChung.Ham.PhieuSoKet(row.MaBNhan ?? 0, row.DienBien1, row.YLenh, row.ThucHienYL, row.KetQua, row.HuongDTri, lupNguoiKhamkb.Text, 15, DateTime.Now);
            }
        }

        private void muaLạiThuốcTrảToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                idDon = (int)grvDonThuocdt.GetRowCellValue(grvDonThuocdt.FocusedRowHandle, "IDDon");
                if (idDon > 0)
                {
                    var dthuoc = (from dt in DaTaContext.DThuocs.Where(o => o.IDDon == idDon)
                                  join dtct in DaTaContext.DThuoccts.Where(o => o.IDDon == idDon) on dt.IDDon equals dtct.IDDon
                                  select dtct).ToList();
                    if (dthuoc != null && dthuoc.Count > 0)
                    {
                        if (dthuoc.Exists(o => o.Status != 1))
                        {
                            MessageBox.Show("Đơn thuốc chưa lĩnh không thể mua lại đơn trả", "Thông báo");
                        }
                        else
                        {
                            checkMuaDonTra = true;
                            btnMoiKb_Click(null, null);
                        }
                    }
                }
            }
            finally
            {
                checkMuaDonTra = false;
                idDon = 0;
            }
        }

        private void barButtonItem38_ItemClick(object sender, ItemClickEventArgs e)
        {
            int _int_maBN = 0; int rs;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
            {
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
                int makp = 0;
                if (lupTimMaKP.EditValue != null)
                    makp = Convert.ToInt32(lupTimMaKP.EditValue);
                frm_ChiSoChucNangSong frm = new frm_ChiSoChucNangSong(_int_maBN, makp);
                frm.ShowDialog();
            }
        }

        private void barButtonItem39_ItemClick(object sender, ItemClickEventArgs e)
        {
            QLBV_Database.QLBVEntities db = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            var vaovien = db.VaoViens.Where(p => p.MaBNhan == _int_maBN).FirstOrDefault();
            _inGiayNhapVien_24012(db, _int_maBN);
        }

        private void barButtonItem40_ItemClick(object sender, ItemClickEventArgs e)
        {
            QLBV_Database.QLBVEntities db = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            var vaovien = db.VaoViens.Where(p => p.MaBNhan == _int_maBN).FirstOrDefault();
            if (vaovien != null)
            {
                _inGiayCamKet_24012(db, _int_maBN);
            }
            else
            {
                MessageBox.Show("Bệnh nhân chưa đủ thông tin!");
                return;
            }
        }
        void _inGiayCamKet_24012(QLBV_Database.QLBVEntities _data, int _mabn)//minhvd
        {
            var _ttbn = _data.BenhNhans.Where(p => p.MaBNhan == _mabn).FirstOrDefault();
            if (_ttbn != null)
            {
                VaoVien vaovien = _data.VaoViens.Where(p => p.MaBNhan == _mabn).FirstOrDefault();
                RaVien ravien = _data.RaViens.Where(p => p.MaBNhan == _mabn).FirstOrDefault();
                TTboXung ttbx = _data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault();

                Phieu.repGiayCamKet rep = new Phieu.repGiayCamKet();
                frmIn frm = new frmIn();
                rep.ten.Value = _ttbn.TenBNhan.ToUpper();
                rep.tuoi.Value = _ttbn.Tuoi;
                if (_ttbn.GTinh != null)
                {
                    if (_ttbn.GTinh == 1)
                    {
                        rep.gioitinh.Value = "Giới tính: Nam";
                    }
                    else
                    {
                        rep.gioitinh.Value = "Giới tính: Nữ";
                    }
                }
                rep.noilamviec.Value = ttbx.NoiLV;
                rep.diachi.Value = _ttbn.DChi;
                if (_ttbn.NNhap != null)
                {
                    string ngaybatdau = _ttbn.NNhap.ToString();
                    rep.ngaybatdau.Value = ngaybatdau.Substring(0, 10);
                }
                var nghenghiep = _data.DmNNs.Where(p => p.MaNN == ttbx.MaNN).Select(p => p.TenNN).FirstOrDefault();
                if (nghenghiep != null)
                {
                    rep.nghenghiep.Value = nghenghiep;
                }

                rep.cmnd.Value = ttbx.SoKSinh;
                string ngaycap = ttbx.NgayCapCMT.ToString();
                if (ngaycap != null && ngaycap != "")
                {
                    rep.capngay.Value = ngaycap.Substring(0, 10);
                }
                rep.congan.Value = ttbx.NoiCapCMT;
                rep.nguoibaotin.Value = ttbx.NThan;
                rep.sodienthoai.Value = ttbx.DThoaiNT;
                int makp = _ttbn.MaKP ?? 0;

                var tenkp = _data.KPhongs.Where(p => p.MaKP == makp).ToList();
                if (tenkp != null)
                {
                    rep.dttaikhoa.Value = tenkp.First().TenKP;
                }
                rep.ngaythang.Value = "Bắc Giang, Ngày " + DateTime.Now.Day + " tháng " + DateTime.Now.Month + " năm " + DateTime.Now.Year;
                rep.CreateDocument();
                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                frm.ShowDialog();
            }
        }

        private void btnTSTiem_ItemClick(object sender, ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            frm_TienSuVacXin frNhap = new frm_TienSuVacXin(_int_maBN);
            frNhap.ShowDialog();
        }
        private void TimKiem1()
        {
            if (xtraNgoaiTru.SelectedTabPageIndex == 3 && DungChung.Bien.MaBV == "24012")
            {
                processRowClick = true;
                txtMaBNhan.Text = grvBNhankb.GetFocusedRowCellValue(colMaBNhan).ToString();
                txtMaBNhan1.Text = grvBNhankb.GetFocusedRowCellValue(colMaBNhan).ToString();
                int _int_maBN = grvBNhankb.GetFocusedRowCellValue(colMaBNhan) == null ? 0 : Convert.ToInt32(grvBNhankb.GetFocusedRowCellValue(colMaBNhan));
                _dttu = detungaydb.DateTime;
                _dtden = dedenngaydb.DateTime;
                var dienbienMap = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.NgayNhap > _dttu && p.NgayNhap < _dtden).Where(p => p.Ploai == 0).OrderByDescending(p => p.ID).ToList();

                _ldienbien = (from db in dienbienMap
                              select new DienBienNgayGio(db)).ToList();

                DienBienNgayGio _defaultDB = new DienBienNgayGio();
                _defaultDB.HuongDTri = "Dinh dưỡng:\r\nLoại chăm sóc:\r\nQuản lý:";
                List<DienBienNgayGio> _listDB = new List<DienBienNgayGio>();
                _listDB.Add(_defaultDB);

                var q = (from db in DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN).Where(p => p.Ploai == 0).Where(p => p.NgayNhap > _dttu && p.NgayNhap < _dtden).OrderByDescending(p => p.ID) select db).ToList();
                if (q.Count > 0)
                {
                    foreach (var item in q)
                    {
                        DienBienNgayGio _defaultDB1 = new DienBienNgayGio();
                        _defaultDB1.ID = item.ID;
                        _defaultDB1.HuongDTri = item.HuongDTri;
                        _defaultDB1.IDDon = item.IDDon;
                        _defaultDB1.MaBNhan = item.MaBNhan;
                        _defaultDB1.KetQua = item.KetQua;
                        _defaultDB1.MaCB = item.MaCB;
                        _defaultDB1.ThucHienYL = item.ThucHienYL;
                        _defaultDB1.YLenh = item.YLenh;
                        _defaultDB1.DienBien1 = item.DienBien1;
                        _defaultDB1.NgayNhap = item.NgayNhap;
                        _defaultDB1.MaKP = item.MaKP;
                        _defaultDB1.TenKP = item.TenKP;
                        DienBienNgayGio dbNgayGio = new DienBienNgayGio(_defaultDB1);
                        _listDB.Add(dbNgayGio);
                    }
                }
                foreach (var item in _ldienbien)
                {
                    item.NgayNhap_24012 = item.NgayNhap.Value.ToString("dd/MM HH:mm");
                }
                if (DungChung.Bien.MaBV == "14018" || DungChung.Bien.MaBV == "14017")
                {
                    binsDienBien.DataSource = _listDB;
                }
                else
                {
                    binsDienBien.DataSource = _ldienbien;
                }
                grcDienBien.DataSource = binsDienBien;
            }
        }
        private void detungaydb_EditValueChanged(object sender, EventArgs e)
        {
            TimKiem1();
        }

        private void comboBoxEdit2_SelectedIndexChanged(object sender, EventArgs e)
        {
            int _int_maBN = 0, rs;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);

            if (cboInPhieuVLTL.SelectedIndex == 0)
            {
                CLS.InPhieu.PhieuDieuTriVLTL(_int_maBN);

            }
            else if (cboInPhieuVLTL.SelectedIndex == 1)
            {
                CLS.InPhieu.PhieuTHPHCN(_int_maBN);
            }
            cboInPhieuVLTL.SelectedIndex = -1;
        }

        private void dateEdit4_EditValueChanged(object sender, EventArgs e)
        {
            DateTime dateTu = DungChung.Ham.NgayTu(DateTime.Now);
            DateTime dateDen = DungChung.Ham.NgayDen(DateTime.Now);
            if (!string.IsNullOrEmpty(dateEdit4.Text) && !string.IsNullOrEmpty(dateEdit3.Text))
            {
                dateTu = DungChung.Ham.NgayTu(dateEdit4.DateTime);
                dateDen = DungChung.Ham.NgayDen(dateEdit3.DateTime);
                if (dateTu > dateDen)
                {
                    dateTu = dateDen;
                }
                var q = _listVLTL.Where(p => p.NgayTH < dateDen && p.NgayTH > dateTu).ToList();
                grcVLTL.DataSource = q;
            }
        }

        private void dateEdit3_EditValueChanged(object sender, EventArgs e)
        {
            DateTime dateTu = DungChung.Ham.NgayTu(DateTime.Now);
            DateTime dateDen = DungChung.Ham.NgayDen(DateTime.Now);
            if (!string.IsNullOrEmpty(dateEdit4.Text) && !string.IsNullOrEmpty(dateEdit3.Text))
            {
                dateTu = DungChung.Ham.NgayTu(dateEdit4.DateTime);
                dateDen = DungChung.Ham.NgayDen(dateEdit3.DateTime);
                if (dateTu > dateDen)
                {
                    dateTu = dateDen;
                }
                var q = _listVLTL.Where(p => p.NgayTH < dateDen && p.NgayTH > dateTu).ToList();
                grcVLTL.DataSource = q;
            }
        }

        private void grcVLTL_Click(object sender, EventArgs e)
        {

        }

        private void btnLayTTVLTL_Click(object sender, EventArgs e)
        {
            if (DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24272")
            {
                btnLayTTVLTL.Visible = true;
                macbTH.OptionsColumn.AllowEdit = false;
                macbTH.OptionsColumn.ReadOnly = true;
                VLTLcolDienBienVLTL.OptionsColumn.AllowEdit = false;
                VLTLcolDienBienVLTL.OptionsColumn.ReadOnly = true;

                int rs;
                int _int_maBN = 0;
                if (Int32.TryParse(txtMaBNhan.Text, out rs))
                    _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
                var tt = (from cls in DaTaContext.CLS.Where(p => p.NgayTH != null)
                          join cd in DaTaContext.ChiDinhs on cls.IdCLS equals cd.IdCLS
                          join dv in DaTaContext.DichVus on cd.MaDV equals dv.MaDV
                          join tn in DaTaContext.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                          join kp in DaTaContext.KPhongs.Where(p => p.PLoai == "Lâm sàng") on cls.MaKP equals kp.MaKP
                          where (cls.MaBNhan == _int_maBN && tn.TenTN == "Thủ thuật")
                          select new VLTL
                          {
                              IDCD = cd.IDCD,
                              TenDV = dv.TenDV,
                              NgayTH = cls.NgayTH,
                              MaCB = cls.MaCB,
                              PHCN_DienBienBenh = cd.PHCN_DienBienBenh,
                              PHCN_XacNhan = cd.PHCN_XacNhan,
                              NgayBDTH = cd.NgayBDTH,
                          }).OrderBy(p => p.NgayTH).ThenBy(p => p.TenDV).ToList();

                if (tt.Count > 0)
                {
                    if (DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24272")
                    {
                        var ketqua = (from a in tt
                                      group new { a } by new { Date = a.NgayTH.Value.Day, Month = a.NgayTH.Value.Month, Year = a.NgayTH.Value.Year } into kq
                                      select new
                                      {
                                          ngay = kq.Select(p => p.a.NgayTH).FirstOrDefault(),
                                          NgayTH = kq.Key.Date + "/" + kq.Key.Month + "/" + kq.Key.Year,
                                          ngaythang = kq.Select(p => p.a.NgayTH).ToArray(),
                                          TenDV = !string.IsNullOrEmpty((kq.Select(p => p.a.TenDV).ToString())) ? "- " + string.Join("\n- ", kq.Select(p => p.a.TenDV).ToArray()) : "",
                                          PHCN_DienBienBenh = !string.IsNullOrEmpty((kq.Select(p => p.a.PHCN_DienBienBenh).ToString())) ? string.Join("\n ", kq.Select(p => p.a.PHCN_DienBienBenh).ToArray()) : "",
                                          CBCD = kq.First().a.CBCD,
                                          IDCD = kq.First().a.IDCD,
                                          MaCB = kq.First().a.MaCB,
                                          macbTH = kq.First().a.MaCBTH,
                                          //NgayBDTH = kq.First().a.NgayBDTH,
                                          NgayBDTH = kq.Select(p => p.a.NgayBDTH).ToArray(),
                                          PHCN_XacNhan = !string.IsNullOrEmpty((kq.Select(p => p.a.PHCN_XacNhan).ToString())) ? string.Join("\n ", kq.Select(p => p.a.PHCN_XacNhan).ToArray()) : "",
                                      }).OrderBy(p => p.ngay).ToList();

                        if (ketqua.Count() > 0)
                        {
                            var db24012 = (from a in DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN && p.Ploai == 3)
                                           select new
                                           {
                                               a.NgayNhap,
                                               a.DienBien1,
                                               a.HuongDTri
                                           }).ToList();
                            var QueryNgay = (from db in DaTaContext.DienBiens
                                             join cls in DaTaContext.CLS on db.MaBNhan equals cls.MaBNhan
                                             where cls.NgayTH != null && cls.Status == 1 && db.MaBNhan == _int_maBN && db.Ploai == 3
                                             select new
                                             {
                                                 cls.NgayTH,
                                                 db.NgayNhap,
                                                 db.ID,
                                             }).OrderBy(p => p.NgayTH).ToList();
                            var ab = DaTaContext.DienBiens.Where(p => p.MaBNhan == _int_maBN && p.Ploai == 3).ToList();

                            if (ab.Count > 0)
                            {
                                if (QueryNgay.Count > 0)
                                {
                                    foreach (var item in QueryNgay)
                                    {
                                        var del = DaTaContext.DienBiens.Where(p => p.ID == item.ID && p.Ploai == 3 && p.MaBNhan == _int_maBN).ToList();
                                        if (del.Count() > 0)
                                        {
                                            if (del.First().NgayNhap.Value.Date != null && item.NgayTH.Value.Date != null)
                                            {
                                                if (del.First().NgayNhap.Value.Date == item.NgayTH.Value.Date)
                                                {
                                                    if (!string.IsNullOrEmpty(del.First().DienBien1) || del.First().HuongDTri != null)
                                                    {
                                                        var kq = ketqua.Where(p => Convert.ToDateTime(p.NgayTH).Date == del.First().NgayNhap.Value.Date).ToList();
                                                        if (kq.Count() > 0)
                                                        {
                                                            del.First().YLenh = kq.First().TenDV;

                                                            if (kq.First().ngaythang != null && kq.First().NgayBDTH != null)
                                                            {
                                                                string tgth = "";
                                                                DateTime?[] ngayTH1 = kq.First().ngaythang;
                                                                DateTime?[] ngayBDTH1 = kq.First().NgayBDTH;
                                                                if (ngayTH1.Count() > 0)
                                                                {
                                                                    int tong = ngayTH1.Count() > ngayBDTH1.Count() ? ngayTH1.Count() : ngayTH1.Count();
                                                                    for (int i = 0; i < tong; i++)
                                                                    {
                                                                        if (ngayBDTH1[i] != null)
                                                                        {
                                                                            TimeSpan time = Convert.ToDateTime(ngayTH1[i]) - Convert.ToDateTime(ngayBDTH1[i]);
                                                                            tgth += Math.Round((double)(time.TotalMinutes)).ToString() + "p/lần/ngày\n";
                                                                        }
                                                                        else
                                                                        {
                                                                            tgth += "- Chỉ định chưa được thực hiện\n";
                                                                        }
                                                                    }

                                                                    del.First().ThucHienYL = tgth;
                                                                }
                                                                //TimeSpan time = Convert.ToDateTime(item.NgayTH) - Convert.ToDateTime(item.NgayBDTH);
                                                                //a.TGTH = Math.Round((double)(time.TotalMinutes));
                                                            }
                                                        }
                                                    }
                                                    else
                                                        DaTaContext.DienBiens.Remove(del.First());
                                                    DaTaContext.SaveChanges();
                                                }
                                            }
                                        }

                                    }
                                }
                                List<string> ngayTH = new List<string>();
                                foreach (var kq in ketqua)
                                {
                                    ngayTH.Add(kq.NgayTH);
                                }
                                foreach (var db in ab)
                                {
                                    if (!ngayTH.Contains(db.NgayNhap.ToString()))
                                    {
                                        var del = DaTaContext.DienBiens.Where(p => p.NgayNhap == db.NgayNhap && p.Ploai == 3 && p.MaBNhan == _int_maBN).FirstOrDefault();
                                        if (del != null)
                                        {
                                            DaTaContext.DienBiens.Remove(del);
                                            DaTaContext.SaveChanges();
                                        }
                                    }
                                }
                            }

                            List<VLTL> ds = new List<VLTL>();
                            foreach (var item in ketqua)
                            {

                                VLTL a = new VLTL();
                                a.IDCD = item.IDCD;
                                //DateTime.Parse(yc.yclHolidayDt.ToString("dd-MMyyyy")),
                                a.NgayTH = DateTime.Parse(item.NgayTH);
                                if (a.NgayTH != null)
                                {
                                    a.NgayTHString = item.NgayTH;
                                }
                                a.TenDV = item.TenDV;

                                a.CBCD = !string.IsNullOrEmpty(item.MaCB) ? _lCanBo.Where(p => p.MaCB == item.MaCB).Select(p => p.TenCB).FirstOrDefault().ToString() : "";
                                a.CBTH = item.macbTH;
                                if (item.ngaythang != null && item.NgayBDTH != null)
                                {
                                    string tgth = "";
                                    DateTime?[] ngayTH = item.ngaythang;
                                    DateTime?[] ngayBDTH = item.NgayBDTH;
                                    if (ngayTH.Count() > 0)
                                    {
                                        int tong = ngayTH.Count() > ngayBDTH.Count() ? ngayTH.Count() : ngayTH.Count();
                                        for (int i = 0; i < tong; i++)
                                        {
                                            if (ngayBDTH[i] != null)
                                            {
                                                TimeSpan time = Convert.ToDateTime(ngayTH[i]) - Convert.ToDateTime(ngayBDTH[i]);
                                                tgth += Math.Round((double)(time.TotalMinutes)).ToString() + "p/lần/ngày\n";
                                            }
                                            else
                                            {
                                                tgth += "- Chỉ định chưa được thực hiện\n";
                                            }
                                        }

                                        a.TGTH = tgth;
                                    }
                                    //TimeSpan time = Convert.ToDateTime(item.NgayTH) - Convert.ToDateTime(item.NgayBDTH);
                                    //a.TGTH = Math.Round((double)(time.TotalMinutes));
                                }
                                if (db24012.Count() > 0)
                                {
                                    foreach (var index in db24012)
                                    {
                                        if (a.NgayTH == index.NgayNhap)
                                        {
                                            a.PHCN_DienBienBenh = index.DienBien1.Trim();
                                            a.MaCBTH = index.HuongDTri;
                                            break;
                                        }
                                        else if (index.DienBien1 == "" || index.DienBien1 == null)
                                        {
                                            a.PHCN_DienBienBenh = item.PHCN_DienBienBenh.Trim();
                                        }
                                        else a.PHCN_DienBienBenh = item.PHCN_DienBienBenh;
                                    }
                                }
                                else a.PHCN_DienBienBenh = item.PHCN_DienBienBenh;
                                a.PHCN_XacNhan = item.PHCN_XacNhan.Trim();
                                ds.Add(a);
                                DienBien db = new DienBien();
                                db.IDDon = a.IDCD;
                                db.Ploai = 3;
                                db.MaBNhan = _int_maBN;
                                db.YLenh = a.TenDV;
                                db.MaCB = item.MaCB;
                                db.HuongDTri = a.MaCBTH;
                                db.NgayNhap = a.NgayTH;
                                db.ThucHienYL = a.TGTH;
                                db.DienBien1 = a.PHCN_DienBienBenh.Trim();
                                DaTaContext.DienBiens.Add(db);
                                DaTaContext.SaveChanges();
                            }
                            btnSuaKb.Enabled = true;
                            _listVLTL = ds;
                            grcVLTL.DataSource = ds;
                        }
                    }
                    else
                    {
                        List<VLTL> ds = new List<VLTL>();
                        foreach (var item in tt)
                        {
                            VLTL a = new VLTL();
                            a.IDCD = item.IDCD;
                            a.NgayTH = item.NgayTH;
                            a.TenDV = "- " + item.TenDV + "";
                            a.CBCD = !string.IsNullOrEmpty(item.MaCB) ? _lCanBo.Where(p => p.MaCB == item.MaCB).Select(p => p.TenCB).FirstOrDefault().ToString() : "";
                            a.CBTH = !string.IsNullOrEmpty(item.MaCBTH) ? _lCanBo.Where(p => p.MaCB == item.MaCBTH).Select(p => p.TenCB).FirstOrDefault().ToString() : "";
                            if (item.NgayTH != null && item.NgayBDTH != null)
                            {
                                TimeSpan time = Convert.ToDateTime(item.NgayTH) - Convert.ToDateTime(item.NgayBDTH);
                                a.TGTH = (Math.Round((double)(time.TotalMinutes))).ToString();
                            }
                            //a.PHCN_DienBienBenh = item.PHCN_DienBienBenh.Trim();
                            //a.PHCN_XacNhan = item.PHCN_XacNhan;
                            //ds.Add(a);
                            if (!string.IsNullOrEmpty(item.PHCN_DienBienBenh))
                            {
                                a.PHCN_DienBienBenh = item.PHCN_DienBienBenh.Trim();
                            }
                            if (!string.IsNullOrEmpty(item.PHCN_XacNhan))
                            {
                                a.PHCN_XacNhan = item.PHCN_XacNhan.Trim();
                            }
                            ds.Add(a);
                            DienBien db = new DienBien();
                            db.Ploai = 3;
                            db.MaBNhan = _int_maBN;
                            db.YLenh = a.TenDV;
                            db.MaCB = item.MaCB;
                            db.HuongDTri = a.CBTH;
                            db.NgayNhap = a.NgayTH;
                            db.ThucHienYL = a.TGTH;
                            if (!string.IsNullOrEmpty(a.PHCN_DienBienBenh))
                            {
                                db.DienBien1 = a.PHCN_DienBienBenh.Trim();
                            }
                            DaTaContext.DienBiens.Add(db);
                            DaTaContext.SaveChanges();
                        }
                        btnSuaKb.Enabled = true;
                        _listVLTL = ds;
                        grcVLTL.DataSource = ds;

                    }

                }
            }
            else
                btnLayTTVLTL.Visible = false;
        }

        private void barButtonItem42_ItemClick(object sender, ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            int makp = Convert.ToInt32(lupTimMaKP.EditValue);
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            else
                return;
            Frm_ChonKP frm = new Frm_ChonKP(_int_maBN, makp, 2);
            //Frm_ChonDVKT frm = new Frm_ChonDVKT(_int_maBN, lupTimMaKP.Text, lupTimMaKP.EditValue);
            frm.ShowDialog();
        }

        private void dtTGChuyenBuongGiuong_EditValueChanged(object sender, EventArgs e)
        {

        }

        private void btnPackageICD4_Click_1(object sender, EventArgs e)
        {
            try
            {
                OpenChiDinhICD(LupICD44);
            }
            finally
            {
                maIcdCbo = "";
            }
        }

        private void LupICD44_ButtonClick(object sender, ButtonPressedEventArgs e)
        {
            try
            {
                OpenChiDinhICD_Properties(e, LupICD44);
            }
            finally
            {
                maIcdCbo = "";
            }
        }

        private void LupICD44_EditValueChanged(object sender, EventArgs e)
        {
            if (TTLuu == 1 || TTLuu == 2)
            {
                if (!string.IsNullOrEmpty(LupICD44.Text))
                {
                    if (LupICD44.EditValue.ToString() == "0")
                    {
                        //txtBenhKhac44.EditValue = "";
                        LupICD44.EditValue = "";
                        txtBenhPhu4.Text = "";
                    }
                    else
                    {
                        //txtBenhKhac44.EditValue = lICD.Where(p => p.MaICD == LupICD44.EditValue.ToString()).Select(p => p.TenICD).FirstOrDefault();
                        txtBenhPhu4.Text = lICD.Where(p => p.MaICD == LupICD44.EditValue.ToString()).Select(p => p.TenICD).FirstOrDefault();
                    }


                }
                else
                {
                    //txtBenhKhac44.EditValue = "";
                    txtBenhPhu4.Text = "";
                }
            }
            btnPackageICD4.Enabled = false;
        }

        private void LupICD44_PreviewKeyDown(object sender, PreviewKeyDownEventArgs e)
        {
            if (e.KeyCode == Keys.F9)
            {
                FormThamSo.frm_TimKiem frm = new FormThamSo.frm_TimKiem();
                frm.GetData = new FormThamSo.frm_TimKiem._getstring(getICD44);
                frm.ShowDialog();

            }
        }

        private void LupICD55_ButtonClick(object sender, ButtonPressedEventArgs e)
        {
            try
            {
                OpenChiDinhICD_Properties(e, LupICD55);
            }
            finally
            {
                maIcdCbo = "";
            }
        }

        private void LupICD55_EditValueChanged(object sender, EventArgs e)
        {
            if (TTLuu == 1 || TTLuu == 2)
            {
                if (!string.IsNullOrEmpty(LupICD55.Text))
                {
                    if (LupICD55.EditValue.ToString() == "0")
                    {
                        txtBenhKhac55.EditValue = "";
                        LupICD55.EditValue = "";
                        txtBenhPhu5.Text = "";
                    }
                    else
                    {
                        txtBenhKhac55.EditValue = lICD.Where(p => p.MaICD == LupICD55.EditValue.ToString()).Select(p => p.TenICD).FirstOrDefault();
                        txtBenhPhu5.Text = lICD.Where(p => p.MaICD == LupICD55.EditValue.ToString()).Select(p => p.TenICD).FirstOrDefault();
                    }


                }
                else
                {
                    txtBenhKhac55.EditValue = "";
                    txtBenhPhu5.Text = "";
                }
            }
            btnPackageICD5.Enabled = false;
        }

        private void txtBenhPhu4_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                var listIcd = lICD.Where(o => o.TenICD.ToUpper().Contains(txtBenhPhu4.Text.ToUpper())).ToList();
                if (listIcd != null && listIcd.Count > 0)
                    txtBenhKhac44.Properties.DataSource = listIcd;
                else
                    txtBenhKhac44.Properties.DataSource = lICD;
                txtBenhKhac44.ShowPopup();
                isNoShow = true;
            }

            if (e.KeyCode == Keys.F8)
            {
                if (txtBenhPhu4.Text.Trim() != null || LupICD44.Text.Trim() != null)
                {
                    txtBenhPhu4.Text = null;
                    LupICD44.Text = null;
                }
            }
        }

        private void txtBenhPhu5_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                var listIcd = lICD.Where(o => o.TenICD.ToUpper().Contains(txtBenhPhu5.Text.ToUpper())).ToList();
                if (listIcd != null && listIcd.Count > 0)
                    txtBenhKhac55.Properties.DataSource = listIcd;
                else
                    txtBenhKhac55.Properties.DataSource = lICD;
                txtBenhKhac55.ShowPopup();
                isNoShow = true;
            }

            if (e.KeyCode == Keys.F8)
            {
                if (txtBenhPhu5.Text.Trim() != null || LupICD55.Text.Trim() != null)
                {
                    txtBenhPhu5.Text = null;
                    LupICD55.Text = null;
                }
            }
        }

        private void txtBenhKhac55_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                var listIcd = lICD.Where(o => o.TenICD.ToUpper().Contains(txtBenhPhu5.Text.ToUpper())).ToList();
                if (listIcd != null && listIcd.Count > 0)
                    txtBenhKhac55.Properties.DataSource = listIcd;
                else
                    txtBenhKhac55.Properties.DataSource = lICD;
                txtBenhKhac55.ShowPopup();
                isNoShow = true;
            }
        }

        private void txtBenhKhac44_Closed(object sender, ClosedEventArgs e)
        {
            if (isNoShow)
            {
                isNoShow = false;
                txtBenhKhac44.Properties.DataSource = lICD;
            }
        }

        private void txtBenhKhac55_Closed(object sender, ClosedEventArgs e)
        {
            if (isNoShow)
            {
                isNoShow = false;
                txtBenhKhac55.Properties.DataSource = lICD;
            }
        }

        private void txtBenhKhac44_EditValueChanged(object sender, EventArgs e)
        {
            if (TTLuu == 1 || TTLuu == 2)
            {
                if (!string.IsNullOrEmpty(txtBenhKhac44.Text))
                {
                    if (txtBenhKhac44.EditValue.ToString() == "0")
                    {
                        txtBenhKhac44.EditValue = "";
                        LupICD44.EditValue = "";
                        txtBenhPhu4.Text = "";
                    }
                    else
                    {

                        LupICD44.EditValue = lICD.Where(p => p.TenICD == txtBenhKhac44.EditValue.ToString()).Select(p => p.MaICD).FirstOrDefault();
                        txtBenhPhu4.Text = lICD.Where(p => p.TenICD == txtBenhKhac44.EditValue.ToString()).Select(p => p.TenICD).FirstOrDefault();
                    }

                }
                else
                {
                    //LupICD44.EditValue = "";
                    //txtBenhPhu4.Text = "";
                }
            }
        }

        private void txtBenhKhac55_EditValueChanged(object sender, EventArgs e)
        {
            if (TTLuu == 1 || TTLuu == 2)
            {
                if (!string.IsNullOrEmpty(txtBenhKhac55.Text))
                {
                    if (txtBenhKhac55.EditValue.ToString() == "0")
                    {
                        txtBenhKhac55.EditValue = "";
                        LupICD55.EditValue = "";
                        txtBenhPhu5.Text = "";
                    }
                    else
                    {

                        LupICD55.EditValue = lICD.Where(p => p.TenICD == txtBenhKhac55.EditValue.ToString()).Select(p => p.MaICD).FirstOrDefault();
                        txtBenhPhu5.Text = lICD.Where(p => p.TenICD == txtBenhKhac55.EditValue.ToString()).Select(p => p.TenICD).FirstOrDefault();
                    }

                }
                else
                {
                    LupICD55.EditValue = "";
                    txtBenhPhu5.Text = "";
                }
            }
        }

        private void txtBenhPhu4_Properties_ButtonClick(object sender, ButtonPressedEventArgs e)
        {
            if (e.Button.Kind == ButtonPredefines.Combo)
            {
                if (txtBenhKhac44.IsPopupOpen)
                    txtBenhKhac44.ClosePopup();
                else
                    txtBenhKhac44.ShowPopup();
            }
        }

        private void txtBenhPhu5_Properties_ButtonClick(object sender, ButtonPressedEventArgs e)
        {
            if (e.Button.Kind == ButtonPredefines.Combo)
            {
                if (txtBenhKhac55.IsPopupOpen)
                    txtBenhKhac55.ClosePopup();
                else
                    txtBenhKhac55.ShowPopup();
            }
        }

        private void LupICD55_PreviewKeyDown(object sender, PreviewKeyDownEventArgs e)
        {
            if (e.KeyCode == Keys.F9)
            {
                FormThamSo.frm_TimKiem frm = new FormThamSo.frm_TimKiem();
                frm.GetData = new FormThamSo.frm_TimKiem._getstring(getICD55);
                frm.ShowDialog();

            }
        }

        private void barButtonItem43_ItemClick(object sender, ItemClickEventArgs e)
        {

        }

        private void groupControl6_Paint(object sender, PaintEventArgs e)
        {

        }

        private void grcDonThuocct_Click(object sender, EventArgs e)
        {

        }

        public void RemoveDuplicate(int mabn)
        {
            string[] strpara = new string[] { "@mabn" };
            object[] oValue = new object[] { mabn };
            SqlDbType[] sqlDBType = new SqlDbType[] { SqlDbType.Int };
            bool success = ADOConnect.ExecuteNonQuery("[dbo].[SP_Remove_DuplicateDB]", CommandType.StoredProcedure, strpara, oValue, sqlDBType, true);

        }

        /// <summary>
        /// Đồng bộ đơn thuốc quốc gia
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void btnSyncMed_Click(object sender, EventArgs e)
        {
            var baseURl = BaseURlCirculars27;

            if (grvBNhankb.GetFocusedRow() == null)
            {
                return;
            }

            // Lấy thông tin đăng nhập bệnh viện
            var heThong = DaTaContext.HTHONGs.FirstOrDefault(f => f.MaBV == Bien.MaBV);
            if (heThong == null)
                return;

            // Lấy thông tin đăng nhập Bác sĩ
            var canBo = DaTaContext.CanBoes.FirstOrDefault(f => f.MaCB == Bien.MaCB);
            if (canBo == null)
                return;

            var makp = Convert.ToInt32(lupTimMaKP.EditValue);

            var bNhankb = grvBNhankb.GetFocusedRow() as BenhNhan;
            var bNhankbEx = DaTaContext.TTboXungs.FirstOrDefault(f => f.MaBNhan == bNhankb.MaBNhan);
            var bNKB = DaTaContext.BNKBs.FirstOrDefault(w => w.MaBNhan == bNhankb.MaBNhan && w.MaKP == makp);

            #region Đăng nhập lấy Token 

            var resultApi = new Utilities.Commons.ResultApi<TokenResult>();

            if (string.IsNullOrEmpty(AppConfig.TokenTT27_Doctor))
            {
                var dangNhapCSKCB = new DangNhapCSKCB()
                {
                    //ma_lien_thong_co_so_kham_chua_benh = "0130009",
                    //password = "123456qQ@"
                    ma_lien_thong_co_so_kham_chua_benh = heThong.MaLienThongCSKCB,
                    password = Security.Decrypt(heThong.MKDonThuocLienThong)
                };

                resultApi = Utilities.Commons.AppApi.PostAsync<TokenResult, DangNhapCSKCB>(baseURl, "/api/auth/dang-nhap-co-so-kham-chua-benh", dangNhapCSKCB);
                if (resultApi != null && resultApi.Result != null)
                {
                    AppConfig.TokenTT27 = resultApi.Result.token;
                    AppConfig.TokenTypeTT27 = resultApi.Result.token_type;
                }
            }

            #endregion

            #region Thêm mới bác sỹ

            var themBacSi = new DangNhapBacSi()
            {
                ma_lien_thong_bac_si = canBo.MaDinhDanh,
                ma_lien_thong_co_so_kham_chua_benh = heThong.MaLienThongCSKCB,
                password = Security.Decrypt(canBo.MKBacSi)
            };

            resultApi = Utilities.Commons.AppApi.PostAsync<TokenResult, DangNhapBacSi>(baseURl, "/api/v1/them-bac-si", themBacSi, AppConfig.TokenTT27);

            #endregion

            #region Đăng nhập bác sĩ

            if (string.IsNullOrEmpty(AppConfig.TokenTT27_Doctor))
            {
                var dangNhapBacSi = new DangNhapBacSi()
                {
                    //ma_lien_thong_bac_si = "01001471HD-CCHN",
                    //ma_lien_thong_co_so_kham_chua_benh = "0130009",
                    //password = "123456Ht@"
                    ma_lien_thong_bac_si = canBo.MaDinhDanh,
                    ma_lien_thong_co_so_kham_chua_benh = heThong.MaLienThongCSKCB,
                    password = Security.Decrypt(canBo.MKBacSi)
                };

                resultApi = Utilities.Commons.AppApi.PostAsync<TokenResult, DangNhapBacSi>(baseURl, "/api/auth/dang-nhap-bac-si", dangNhapBacSi);
                if (resultApi != null && resultApi.Result != null)
                {
                    AppConfig.TokenTT27_Doctor = resultApi.Result.token;
                    AppConfig.TokenTypeTT27_Doctor = resultApi.Result.token_type;
                }
            }

            #endregion

            #region Đồng bộ đơn thuốc
            var source = grvDonThuocdt.DataSource as List<DThuocModel>;
            var selectedRows = source.Where(p => p.chon == true && p.DongBo == false).ToList();
            if (selectedRows.Count == 0)
            {
                MessageBox.Show("Chưa chọn đơn thuốc!");
                return;
            }
            else
            {
                foreach (var dthuocSelected in selectedRows)
                {
                    if (dthuocSelected != null)
                    {
                        List<DThuocct> dthuocCTs = binSDonThuocct.DataSource as List<DThuocct>;
                        if (dthuocCTs != null && dthuocCTs.Count > 0)
                        {
                            var maDVs = dthuocCTs.Select(s => s.MaDV).ToList();
                            var dichVus = DaTaContext.DichVus.Where(w => maDVs.Contains(w.MaDV)).ToList();
                            var tieuNhomIds = dichVus.Select(s => s.IdTieuNhom).ToList();
                            var tieuNhoms = DaTaContext.TieuNhomDVs.Where(w => tieuNhomIds.Contains(w.IdTieuNhom)).ToList();

                            var donThuoc = new Models.Business.TT27.DonThuoc();
                            donThuoc.ho_ten_benh_nhan = bNhankb.TenBNhan;
                            donThuoc.dia_chi = bNhankb.DChi;

                            int year = 1;
                            int month = 1;
                            int day = 1;

                            try
                            {
                                if (!string.IsNullOrEmpty(bNhankb.NamSinh))
                                {
                                    year = int.Parse(bNhankb.NamSinh);
                                }

                                if (!string.IsNullOrEmpty(bNhankb.ThangSinh))
                                {
                                    month = int.Parse(bNhankb.ThangSinh);
                                }

                                if (!string.IsNullOrEmpty(bNhankb.NgaySinh))
                                {
                                    day = int.Parse(bNhankb.NgaySinh);
                                }

                                donThuoc.ngay_sinh_benh_nhan = (new DateTime(year, month, day)).ToString("dd/MM/yyyy");
                            }
                            catch
                            {
                                donThuoc.ngay_sinh_benh_nhan = (new DateTime(year, month, day)).ToString("dd/MM/yyyy");
                            }

                            if (bNhankbEx != null && !string.IsNullOrEmpty(bNhankbEx.SoKSinh) && bNhankbEx.SoKSinh.Length >= 12)
                            {
                                try
                                {
                                    donThuoc.ma_dinh_danh_cong_dan = bNhankbEx.SoKSinh.Substring(bNhankbEx.SoKSinh.Length - 12);
                                }
                                catch
                                {
                                    donThuoc.ma_dinh_danh_cong_dan = null;
                                }
                            }

                            try
                            {
                                if (!string.IsNullOrEmpty(bNhankbEx.CanNang_ChieuCao) && !string.IsNullOrWhiteSpace(bNhankbEx.CanNang_ChieuCao))
                                {
                                    var canNang_ChieuCao = bNhankbEx.CanNang_ChieuCao;
                                    var canNangChieuCao = bNhankbEx.CanNang_ChieuCao.Split(new char[] { ',', ';', ':' }, StringSplitOptions.RemoveEmptyEntries).Select(s => s.Trim()).ToList();

                                    if (canNangChieuCao != null && canNangChieuCao.Count > 0)
                                    {
                                        var canNang = canNangChieuCao.FirstOrDefault();

                                        var canNang1 = decimal.Parse(canNang.Replace(",", "."));
                                        var canNang2 = decimal.Parse(canNang.Replace(".", ","));

                                        donThuoc.can_nang = Math.Min(canNang1, canNang2);
                                    }
                                }
                            }
                            catch
                            {
                                donThuoc.can_nang = 0;
                            }

                            donThuoc.gioi_tinh = bNhankb.GTinh.GetValueOrDefault() == 0 ? 3 : (bNhankb.GTinh.GetValueOrDefault() == 1 ? 2 : 1);

                            if (bNhankb != null && !string.IsNullOrEmpty(bNhankb.SThe) && bNhankb.SThe.Length > 10)
                            {
                                try
                                {
                                    donThuoc.ma_so_the_bao_hiem_y_te = bNhankb.SThe.Substring(bNhankb.SThe.Length - 10);
                                }
                                catch
                                {
                                    donThuoc.ma_so_the_bao_hiem_y_te = null;
                                }
                            }

                            donThuoc.ma_dinh_danh_y_te = donThuoc.ma_so_the_bao_hiem_y_te;

                            donThuoc.thong_tin_nguoi_giam_ho = bNhankbEx == null ? null : bNhankbEx.NThan + ", " + bNhankbEx.DThoaiNT + ", " + bNhankbEx.DCNguoiThan;

                            var chan_doans = new List<ChanDoan>();

                            if (lupMaICDkb.EditValue != null)
                            {
                                var chan_doan = new ChanDoan()
                                {
                                    ma_chan_doan = lupMaICDkb.EditValue.ToString(),
                                    ten_chan_doan = string.IsNullOrEmpty(txtBenhChinh.Text) ? "." : txtBenhChinh.Text,
                                    ket_luan = string.IsNullOrEmpty(bNKB.GhiChu) ? "." : bNKB.GhiChu,
                                };

                                chan_doans.Add(chan_doan);
                            }

                            if (LupICD2.EditValue != null && !string.IsNullOrEmpty(LupICD2.EditValue.ToString()))
                            {
                                var chan_doan = new ChanDoan()
                                {
                                    ma_chan_doan = LupICD2.EditValue.ToString(),
                                    ten_chan_doan = string.IsNullOrEmpty(txtBenhPhu2.Text) ? "." : txtBenhPhu2.Text,
                                    ket_luan = string.IsNullOrEmpty(bNKB.GhiChu) ? "." : bNKB.GhiChu,
                                };

                                chan_doans.Add(chan_doan);
                            }

                            if (LupICD3.EditValue != null && !string.IsNullOrEmpty(LupICD3.EditValue.ToString()))
                            {
                                var chan_doan = new ChanDoan()
                                {
                                    ma_chan_doan = LupICD3.EditValue.ToString(),
                                    ten_chan_doan = string.IsNullOrEmpty(txtBenhPhu3.Text) ? "." : txtBenhPhu3.Text,
                                    ket_luan = string.IsNullOrEmpty(bNKB.GhiChu) ? "." : bNKB.GhiChu,
                                };

                                chan_doans.Add(chan_doan);
                            }

                            if (LupICD44.EditValue != null && !string.IsNullOrEmpty(LupICD44.EditValue.ToString()))
                            {
                                var chan_doan = new ChanDoan()
                                {
                                    ma_chan_doan = LupICD44.EditValue.ToString(),
                                    ten_chan_doan = string.IsNullOrEmpty(txtBenhPhu4.Text) ? "." : txtBenhPhu4.Text,
                                    ket_luan = string.IsNullOrEmpty(bNKB.GhiChu) ? "." : bNKB.GhiChu,
                                };

                                chan_doans.Add(chan_doan);
                            }

                            if (LupICD55.EditValue != null && !string.IsNullOrEmpty(LupICD55.EditValue.ToString()))
                            {
                                var chan_doan = new ChanDoan()
                                {
                                    ma_chan_doan = LupICD55.EditValue.ToString(),
                                    ten_chan_doan = string.IsNullOrEmpty(txtBenhPhu5.Text) ? "." : txtBenhPhu5.Text,
                                    ket_luan = string.IsNullOrEmpty(bNKB.GhiChu) ? "." : bNKB.GhiChu,
                                };

                                chan_doans.Add(chan_doan);
                            }

                            if (LupICD4.EditValue != null && !string.IsNullOrEmpty(LupICD4.EditValue.ToString()))
                            {
                                var chan_doan = new ChanDoan()
                                {
                                    ma_chan_doan = LupICD4.EditValue.ToString(),
                                    ten_chan_doan = string.IsNullOrEmpty(txtBenhKhac4.Text) ? "." : txtBenhKhac4.Text,
                                    ket_luan = string.IsNullOrEmpty(bNKB.GhiChu) ? "." : bNKB.GhiChu,
                                };

                                chan_doans.Add(chan_doan);
                            }

                            donThuoc.chan_doan = chan_doans;

                            donThuoc.luu_y = dthuocSelected.GhiChu;

                            if (bNhankb.NoiTru != null)
                                donThuoc.hinh_thuc_dieu_tri = bNhankb.NoiTru.Value == 1 ? 1 : 2;
                            else
                                donThuoc.hinh_thuc_dieu_tri = 2;

                            foreach (var item in dthuocCTs)
                            {
                                var loai_don_thuoc = "c";

                                var dichVu = dichVus.Find(f => f.MaDV == item.MaDV);
                                var tieuNhom = tieuNhoms.Find(f => f.IdTieuNhom == dichVu.IdTieuNhom);

                                if (tieuNhom != null)
                                {
                                    var tenRG = tieuNhom.TenRG.ToLower();
                                    if (tenRG.Contains("hướng tâm thần")
                                        || tenRG.Contains("tiền chất")
                                        || tenRG.Contains("hướng thần"))
                                    {
                                        loai_don_thuoc = "h";
                                    }
                                    else if (tenRG.Contains("gây nghiện"))
                                    {
                                        loai_don_thuoc = "n";
                                    }
                                    else if (tenRG.Contains("cổ truyền")
                                        || tenRG.Contains("đông y"))
                                    {
                                        loai_don_thuoc = "y";
                                    }
                                    else
                                    {
                                        loai_don_thuoc = "c";
                                    }
                                }

                                var donThuocCT = new ThongTinDonThuoc()
                                {
                                    ma_thuoc = string.IsNullOrEmpty(dichVu.MaQD) ? "." : dichVu.MaQD,
                                    biet_duoc = string.IsNullOrEmpty(dichVu.TenHC) ? "." : dichVu.TenHC,
                                    ten_thuoc = string.IsNullOrEmpty(dichVu.TenDV) ? "." : dichVu.TenDV,
                                    don_vi_tinh = string.IsNullOrEmpty(dichVu.DonVi) ? "." : dichVu.DonVi,
                                    so_luong = item.SoLuong,
                                    cach_dung = string.IsNullOrEmpty(dichVu.DuongD) ? "." : dichVu.DuongD,
                                    loai_don_thuoc = loai_don_thuoc,
                                    loi_dan = item.GhiChu,
                                };

                                donThuoc.thong_tin_don_thuoc.Add(donThuocCT);
                            }

                            if (bNhankbEx != null && bNhankbEx.DThoai != null)
                                donThuoc.so_dien_thoai_nguoi_kham_benh = bNhankbEx.DThoai;
                            else
                                donThuoc.so_dien_thoai_nguoi_kham_benh = "0000000000";

                            if (bNKB.NgayHen != null)
                            {
                                try
                                {
                                    donThuoc.ngay_tai_kham = (DateTime.Today - bNKB.NgayHen.Value).Days;
                                }
                                catch
                                {
                                    donThuoc.ngay_tai_kham = null;
                                }
                            }

                            donThuoc.ngay_gio_ke_don = dthuocSelected.NgayKe == null ? null : dthuocSelected.NgayKe.Value.ToString("yyyy-MM-dd HH:mm:ss");
                            donThuoc.dot_dung_thuoc = new DotDungThuoc()
                            {
                                dot = 1,
                                tu_ngay = dthuocSelected.NgayKe == null ? DateTime.Now.ToString("dd/MM/yyyy") : dthuocSelected.NgayKe.Value.ToString("dd/MM/yyyy"),
                                den_ngay = dthuocSelected.NgayKe == null ? DateTime.Now.ToString("dd/MM/yyyy") : dthuocSelected.NgayKe.Value.AddDays(1).ToString("dd/MM/yyyy")
                            };

                            // Gửi dữ liệu đơn thuốc
                            var cDonThuoc = donThuoc.Clone();
                            var hDonThuoc = donThuoc.Clone();
                            var nDonThuoc = donThuoc.Clone();
                            var yDonThuoc = donThuoc.Clone();

                            string message = null;

                            cDonThuoc.thong_tin_don_thuoc = cDonThuoc.thong_tin_don_thuoc.Where(w => w.loai_don_thuoc == "c").ToList();
                            if (cDonThuoc.thong_tin_don_thuoc != null && cDonThuoc.thong_tin_don_thuoc.Count > 0)
                            {
                                cDonThuoc.loai_don_thuoc = cDonThuoc.thong_tin_don_thuoc.FirstOrDefault().loai_don_thuoc;
                                cDonThuoc.ma_don_thuoc = Bien.MaBV + Helpers.RandomString(7) + "-" + cDonThuoc.thong_tin_don_thuoc.FirstOrDefault().loai_don_thuoc;
                                cDonThuoc.loi_dan = string.Join(", ", cDonThuoc.thong_tin_don_thuoc.Select(s => s.loi_dan).ToList());

                                message = Utilities.Commons.AppApi.PostAsync<object, Models.Business.TT27.DonThuoc>(baseURl, @"/api/v1/gui-don-thuoc", cDonThuoc, AppConfig.TokenTT27_Doctor).Message;
                            }

                            hDonThuoc.thong_tin_don_thuoc = hDonThuoc.thong_tin_don_thuoc.Where(w => w.loai_don_thuoc == "h").ToList();
                            if (hDonThuoc.thong_tin_don_thuoc != null && hDonThuoc.thong_tin_don_thuoc.Count > 0)
                            {
                                hDonThuoc.loai_don_thuoc = hDonThuoc.thong_tin_don_thuoc.FirstOrDefault().loai_don_thuoc;
                                hDonThuoc.ma_don_thuoc = Bien.MaBV + Helpers.RandomString(7) + "-" + hDonThuoc.thong_tin_don_thuoc.FirstOrDefault().loai_don_thuoc;
                                hDonThuoc.loi_dan = string.Join(", ", hDonThuoc.thong_tin_don_thuoc.Select(s => s.loi_dan).ToList());

                                message = Utilities.Commons.AppApi.PostAsync<object, Models.Business.TT27.DonThuoc>(baseURl, @"/api/v1/gui-don-thuoc", hDonThuoc, AppConfig.TokenTT27_Doctor).Message;
                            }

                            nDonThuoc.thong_tin_don_thuoc = nDonThuoc.thong_tin_don_thuoc.Where(w => w.loai_don_thuoc == "n").ToList();
                            if (nDonThuoc.thong_tin_don_thuoc != null && nDonThuoc.thong_tin_don_thuoc.Count > 0)
                            {
                                nDonThuoc.loai_don_thuoc = nDonThuoc.thong_tin_don_thuoc.FirstOrDefault().loai_don_thuoc;
                                nDonThuoc.ma_don_thuoc = Bien.MaBV + Helpers.RandomString(7) + "-" + nDonThuoc.thong_tin_don_thuoc.FirstOrDefault().loai_don_thuoc;
                                nDonThuoc.loi_dan = string.Join(", ", nDonThuoc.thong_tin_don_thuoc.Select(s => s.loi_dan).ToList());

                                message = Utilities.Commons.AppApi.PostAsync<object, Models.Business.TT27.DonThuoc>(baseURl, @"/api/v1/gui-don-thuoc", nDonThuoc, AppConfig.TokenTT27_Doctor).Message;
                            }

                            yDonThuoc.thong_tin_don_thuoc = yDonThuoc.thong_tin_don_thuoc.Where(w => w.loai_don_thuoc == "y").ToList();
                            if (yDonThuoc.thong_tin_don_thuoc != null && yDonThuoc.thong_tin_don_thuoc.Count > 0)
                            {
                                yDonThuoc.loai_don_thuoc = yDonThuoc.thong_tin_don_thuoc.FirstOrDefault().loai_don_thuoc;
                                yDonThuoc.ma_don_thuoc = Bien.MaBV + Helpers.RandomString(7) + "-" + yDonThuoc.thong_tin_don_thuoc.FirstOrDefault().loai_don_thuoc;
                                yDonThuoc.loi_dan = string.Join(", ", yDonThuoc.thong_tin_don_thuoc.Select(s => s.loi_dan).ToList());

                                message = Utilities.Commons.AppApi.PostAsync<object, Models.Business.TT27.DonThuoc>(baseURl, @"/api/v1/gui-don-thuoc", yDonThuoc, AppConfig.TokenTT27_Doctor).Message;
                            }

                            if (!string.IsNullOrEmpty(message))
                                MessageBox.Show(message, "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            else
                            {
                                _syncMedicineProvider.UpdateSyncedStatus(dthuocSelected.IDDon);
                            }
                        }
                    }
                }

                MessageBox.Show("Gửi đơn thuốc thành công!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.None);

                loadDsDthuoc(bNhankb.MaBNhan);
            }


            #endregion
        }

        private void grpDThuocct_Paint(object sender, PaintEventArgs e)
        {

        }

        private void txtStatus_EditValueChanged(object sender, EventArgs e)
        {

        }

        private void txtIDdonct_EditValueChanged(object sender, EventArgs e)
        {

        }

        private void txtIdDonThuoc_EditValueChanged(object sender, EventArgs e)
        {

        }

        private void btnGiayChungSinh_ItemClick(object sender, ItemClickEventArgs e)
        {
            int Mabn = 0, idkb = 0;
            if (!string.IsNullOrEmpty(txtMaBNhan.Text))
            {
                if (!string.IsNullOrEmpty(txtIdkb.Text))
                {
                    idkb = Convert.ToInt32(txtIdkb.Text);
                    Mabn = Convert.ToInt32(txtMaBNhan.Text);
                    frm_Giaychungsinh frm = new frm_Giaychungsinh(Mabn);
                    frm.ShowDialog();
                }
                else
                {
                    MessageBox.Show("Bệnh nhân chưa có khám bệnh");
                }
            }
            else
            {
                MessageBox.Show("Bạn chưa chọn bệnh nhân");
            }
        }

        private void LupICD2_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.F8)
            {
                if (txtBenhPhu2.Text.Trim() != null || LupICD2.Text.Trim() != null)
                {
                    txtBenhPhu2.Text = null;
                    LupICD2.Text = null;
                }
            }
        }

        private void LupICD44_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.F8)
            {
                if (txtBenhPhu4.Text.Trim() != null || LupICD44.Text.Trim() != null)
                {
                    txtBenhPhu4.Text = null;
                    LupICD44.Text = null;
                }
            }
        }

        private void LupICD55_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.F8)
            {
                if (txtBenhPhu5.Text.Trim() != null || LupICD55.Text.Trim() != null)
                {
                    txtBenhPhu5.Text = null;
                    LupICD55.Text = null;
                }
            }
        }

        private void LupICD4_KeyDown(object sender, KeyEventArgs e)
        {
            string lupICD4 = LupICD4.Text.Trim();
            string[] item = lupICD4.Split(';');
            List<string> items = item.ToList();

            if (e.KeyCode == Keys.F8)
            {
                if (items.Count() > 1)
                {
                    items.RemoveAt(items.Count - 1);
                    item = items.ToArray();
                    LupICD4.Text = "";
                    for (int i = 0; i < item.Count(); i++)
                    {
                        if (i == items.Count() - 1)
                        {
                            LupICD4.Text += item[i];
                        }
                        else
                        {
                            LupICD4.Text += item[i] + ";";
                        }
                    }
                }
                else if (items.Count() == 1)
                {
                    items.RemoveAt(items.Count - 1);
                    item = items.ToArray();
                    txtBenhKhac4.Text = null;
                    txtBenhKhac.Text = null;
                    LupICD4.Text = null;
                }
                else
                {
                    MessageBox.Show("Danh sách bệnh khác đã trống.");
                }
            }
        }

        private void txtBenhKhac4_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.OemSemicolon)
            {
                //string maicd = LupICD4.Text;
                //TraCuu.Frm_TimKiem_new frm = new TraCuu.Frm_TimKiem_new(maicd);
                //frm.GetData = new TraCuu.Frm_TimKiem_new._getstring(getICD4);
                //frm.ShowDialog();
            }
            string chuoi = LupICD4.Text;
            if (!string.IsNullOrEmpty(chuoi))
            {
                chuoi = Convert.ToString(chuoi[(chuoi.Length - 1)]);
            }
            if (!string.IsNullOrEmpty(chuoi) && chuoi != ";")
            {
                if (e.KeyCode == Keys.Back)
                {
                    //string maicd = LupICD4.Text;
                    //TraCuu.Frm_TimKiem_new frm = new TraCuu.Frm_TimKiem_new(maicd);
                    //frm.GetData = new TraCuu.Frm_TimKiem_new._getstring(getICD4);
                    //frm.ShowDialog();
                }
            }
            if (e.KeyCode == Keys.F8)
            {
                if (txtBenhKhac4.Text.Trim() != null || LupICD4.Text.Trim() != null)
                {
                    txtBenhKhac4.Text = null;
                    LupICD4.Text = null;
                }
            }
        }

        private void LupICD3_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.F8)
            {
                if (txtBenhPhu3.Text.Trim() != null || LupICD3.Text.Trim() != null)
                {
                    txtBenhPhu3.Text = null;
                    LupICD3.Text = null;
                }
            }
        }

        private void txtBenhKhac3_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.F8)
            {
                if (txtBenhKhac3.Text.Trim() != null || LupICD3.Text.Trim() != null)
                {
                    txtBenhKhac3.Text = null;
                    LupICD3.Text = null;
                }
            }
        }

        private void txtBenhKhac2_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.F8)
            {
                if (txtBenhKhac2.Text.Trim() != null || LupICD2.Text.Trim() != null)
                {
                    txtBenhKhac2.Text = null;
                    LupICD2.Text = null;
                }
            }
        }

        private void lupChanDoanKb_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.F8)
            {
                if (lupChanDoanKb.Text.Trim() != null || lupMaICDkb.Text.Trim() != null)
                {
                    lupChanDoanKb.Text = null;
                    lupMaICDkb.Text = null;
                }
            }
        }

        private void lupMaICDkb_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.F8)
            {
                if (lupChanDoanKb.Text.Trim() != null || lupMaICDkb.Text.Trim() != null)
                {
                    lupChanDoanKb.Text = null;
                    lupMaICDkb.Text = null;
                }
            }
        }

        private void btnHIV_AIDS_ItemClick(object sender, ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            //FormThamSo.frm_ChamSocHIV_AIDS frm = new FormThamSo.frm_ChamSocHIV_AIDS(_int_maBN);
            //frm.ShowDialog();
        }

        private void barGiamDinhYKhoa_ItemClick(object sender, ItemClickEventArgs e)
        {
            int rs;
            int _int_maBN = 0;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            //FormThamSo.frm_GiamDinhChucNangYKhoa frm = new FormThamSo.frm_GiamDinhChucNangYKhoa(_int_maBN);
            //frm.ShowDialog();
        }

        private void btnPackageICDKhac_Click(object sender, EventArgs e)
        {
            string maicd = LupICD4.Text;
            TraCuu.Frm_TimKiem_new frm = new TraCuu.Frm_TimKiem_new(maicd);
            frm.GetData = new TraCuu.Frm_TimKiem_new._getstring(getICD4);
            frm.ShowDialog();
        }

        private void grvThuThuatdt_CellValueChanged(object sender, DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs e)
        {
            string idcd = grvThuThuatdt.GetFocusedRowCellValue(colIDCDTT) == null ? "" : grvThuThuatdt.GetFocusedRowCellValue(colIDCDTT).ToString();

            if (thuThuatDtADOs.Where(p => p.idcd == idcd).Count() > 0)
            {
                ThuThuatDtADO sua = thuThuatDtADOs.Where(p => p.idcd == idcd).First();

                if (e.Column == colChon) // Nếu click vào cột Chọn  
                {
                    //mmYlenh.Text = "";
                    if (sua.Check == false)
                    {
                        sua.Check = false;
                    }
                    else if (sua.Check == true)
                    {
                        sua.Check = true;
                    }
                }

            }

            var ngaybdth = grvThuThuatdt.GetFocusedRowCellValue(colThoiGianBD);
            var ngayth = grvThuThuatdt.GetFocusedRowCellValue(colThoiGianKT);
            var sophut = grvThuThuatdt.GetFocusedRowCellValue(colSoPhutThucHien);
            if (e.Column.Name == "colSoPhutThucHien")
            {
                if (grvThuThuatdt.GetRowCellValue(e.RowHandle, colSoPhutThucHien) != null && grvThuThuatdt.GetRowCellValue(e.RowHandle, colSoPhutThucHien).ToString() != "")
                {
                    double sphut = Convert.ToDouble(sophut);

                    DateTime ngaythh = Convert.ToDateTime(ngaybdth).AddMinutes(sphut);
                    if (grvThuThuatdt.GetRowCellValue(e.RowHandle, colSoPhutThucHien).ToString() != "0")
                    {
                        grvThuThuatdt.SetRowCellValue(e.RowHandle, colThoiGianKT, ngaythh.ToString("dd/MM/yyyy HH:mm:ss"));
                    }
                    else
                    {
                        grvThuThuatdt.SetRowCellValue(e.RowHandle, colThoiGianKT, ngaythh.ToString("dd/MM/yyyy HH:mm:ss"));
                    }
                }
            }

            if (e.Column.Name == "colThoiGianBD")
            {
                if (grvThuThuatdt.GetRowCellValue(e.RowHandle, colThoiGianBD) != null && grvThuThuatdt.GetRowCellValue(e.RowHandle, colThoiGianBD).ToString() != "")
                {
                    double sphut = Convert.ToDouble(sophut);

                    DateTime ngaythh = Convert.ToDateTime(ngaybdth).AddMinutes(sphut);
                    if (grvThuThuatdt.GetRowCellValue(e.RowHandle, colThoiGianBD).ToString() != "")
                    {
                        grvThuThuatdt.SetRowCellValue(e.RowHandle, colThoiGianKT, ngaythh.ToString("dd/MM/yyyy HH:mm:ss"));
                    }
                    else
                    {
                        grvThuThuatdt.SetRowCellValue(e.RowHandle, colThoiGianKT, ngaythh.ToString("dd/MM/yyyy HH:mm:ss"));
                    }
                }
            }
        }
        private int _mabnn = 0;
        private void grvThuThuatdt_RowCellClick(object sender, RowCellClickEventArgs e)
        {
            if (e.Column.Name == "colChucNang")
            {
                int idcd = Convert.ToInt32(grvThuThuatdt.GetFocusedRowCellValue("idcd"));

                if (idcd > 0)
                {
                    var cd = DaTaContext.ChiDinhs.Where(x => x.IDCD == idcd).FirstOrDefault();
                    var bnhan = DaTaContext.BenhNhans.Where(x => x.MaBNhan == _mabnn).FirstOrDefault();
                    bool tamthu = DungChung.Ham.Check_DuyetTamThu(idcd);
                    var cls = DaTaContext.CLS.Where(x => x.IdCLS == cd.IdCLS).FirstOrDefault();
                    var clsct = DaTaContext.CLScts.Where(x => x.IdCLS == cls.IdCLS).FirstOrDefault();
                    if (bnhan.NoiTru != 1 && bnhan.DTuong == "Dịch vụ" && bnhan.IDDTBN == 2)
                    {
                        if (tamthu)
                        {
                            if (cd.Status == 0)
                            {
                                var ngaybdth = grvThuThuatdt.GetFocusedRowCellValue(colThoiGianBD);
                                var ngayth = grvThuThuatdt.GetFocusedRowCellValue(colThoiGianKT);
                                var macb = grvThuThuatdt.GetFocusedRowCellValue(colCanBoth);
                                var sophut = grvThuThuatdt.GetFocusedRowCellValue(colSoPhutThucHien);
                                var kq = grvThuThuatdt.GetFocusedRowCellValue(colKetQua);
                                if (Convert.ToDateTime(ngaybdth).ToString().Length > 0 && Convert.ToDateTime(ngayth).ToString().Length > 0)
                                {
                                    if (cls.NgayThang.Value > Convert.ToDateTime(ngaybdth))
                                    {
                                        cd.MaCBth = "";
                                        cls.MaCBth = "";
                                        //clsct.KetQua = "";
                                        cd.NgayBDTH = null;
                                        cd.NgayTH = null;
                                        cd.Status = 0;
                                        cls.Status = 0;
                                        MessageBox.Show("Do thời gian bắt đầu thực hiện không thể trước thời gian chỉ định, cần tiến hành nhập lại", "LỖI", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                        return;
                                    }
                                    else if (macb.ToString().Length == 0 || macb == null)
                                    {
                                        cd.MaCBth = "";
                                        cls.MaCBth = "";
                                        cd.Status = 0;
                                        cls.Status = 0;
                                        MessageBox.Show("Do bác sĩ thực hiện đang để trống, cần tiến hành nhập lại");
                                        return;
                                    }
                                    else
                                    {
                                        cd.NgayBDTH = Convert.ToDateTime(ngaybdth);
                                        cd.NgayTH = Convert.ToDateTime(ngayth);
                                        cls.NgayTH = Convert.ToDateTime(ngayth);
                                        cd.Status = 1;
                                        cls.Status = 1;
                                        cd.MaCBth = macb.ToString();
                                        cls.MaCBth = macb.ToString();
                                    }
                                }
                                else
                                {
                                    cd.MaCBth = "";
                                    cls.MaCBth = "";
                                    cd.NgayBDTH = null;
                                    cd.NgayTH = null;
                                    cls.NgayTH = null;
                                    cd.Status = 0;
                                    cls.Status = 0;
                                    MessageBox.Show("Do thời gian bắt đầu thực hiện và thời gian kết thúc để trống, nên chưa thể thực hiện, cần tiến hành nhập lại", "LỖI", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                    return;
                                }
                                DaTaContext.SaveChanges();
                            }
                            else if (cd.Status == 1)
                            {
                                cd.Status = 0;
                                cd.NgayTH = null;
                                cd.NgayBDTH = null;
                                cd.MaCBth = "";
                                cls.NgayTH = null;
                                cls.MaCBth = "";
                                cls.Status = 0;
                                DaTaContext.SaveChanges();
                            }
                            var mabn = DaTaContext.CLS.Where(x => x.IdCLS == cd.IdCLS).Select(x => x.MaBNhan).FirstOrDefault();
                            LoadData();
                        }
                        else
                        {
                            MessageBox.Show("Bệnh nhân dịch vụ chưa tạm thu dịch vụ này nên không thể thực hiện", "LỖI", MessageBoxButtons.OK, MessageBoxIcon.Information);
                            return;
                        }
                    }
                    else
                    {
                        if (cd.Status == 0)
                        {
                            var ngaybdth = grvThuThuatdt.GetFocusedRowCellValue(colThoiGianBD);
                            var ngayth = grvThuThuatdt.GetFocusedRowCellValue(colThoiGianKT);
                            var macb = grvThuThuatdt.GetFocusedRowCellValue(colCanBoth);
                            var sophut = grvThuThuatdt.GetFocusedRowCellValue(colSoPhutThucHien);
                            var kq = grvThuThuatdt.GetFocusedRowCellValue(colKetQua);
                            if (Convert.ToDateTime(ngaybdth).ToString().Length > 0 && Convert.ToDateTime(ngayth).ToString().Length > 0)
                            {
                                if (cls.NgayThang.Value > Convert.ToDateTime(ngaybdth))
                                {
                                    cd.MaCBth = "";
                                    cls.MaCBth = "";
                                    //clsct.KetQua = "";
                                    cd.NgayBDTH = null;
                                    cd.NgayTH = null;
                                    cd.Status = 0;
                                    cls.Status = 0;
                                    MessageBox.Show("Do thời gian bắt đầu thực hiện không thể trước thời gian chỉ định, cần tiến hành nhập lại", "LỖI", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                    return;
                                }
                                else if (macb.ToString().Length == 0 || macb == null)
                                {
                                    cd.MaCBth = "";
                                    cls.MaCBth = "";
                                    cd.Status = 0;
                                    cls.Status = 0;
                                    MessageBox.Show("Do bác sĩ thực hiện đang để trống, cần tiến hành nhập lại");
                                    return;
                                }
                                else
                                {
                                    cd.NgayBDTH = Convert.ToDateTime(ngaybdth);
                                    cd.NgayTH = Convert.ToDateTime(ngayth);
                                    cls.NgayTH = Convert.ToDateTime(ngayth);
                                    cd.Status = 1;
                                    cls.Status = 1;
                                    cd.MaCBth = macb.ToString();
                                    cls.MaCBth = macb.ToString();
                                }
                            }
                            else
                            {
                                cd.MaCBth = "";
                                cls.MaCBth = "";
                                cd.NgayBDTH = null;
                                cd.NgayTH = null;
                                cls.NgayTH = null;
                                cd.Status = 0;
                                cls.Status = 0;
                                MessageBox.Show("Do thời gian bắt đầu thực hiện và thời gian kết thúc để trống, nên chưa thể thực hiện, cần tiến hành nhập lại", "LỖI", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                return;
                            }
                            DaTaContext.SaveChanges();
                        }
                        else if (cd.Status == 1)
                        {
                            cd.Status = 0;
                            cd.NgayTH = null;
                            cd.NgayBDTH = null;
                            cd.MaCBth = "";
                            cls.NgayTH = null;
                            cls.MaCBth = "";
                            cls.Status = 0;
                            DaTaContext.SaveChanges();
                        }
                        var mabn = DaTaContext.CLS.Where(x => x.IdCLS == cd.IdCLS).Select(x => x.MaBNhan).FirstOrDefault();
                        LoadData();
                    }

                }
                else
                {
                    MessageBox.Show("id không có ràng ");
                }
            }
        }

        private void btnThucHienAllThuThuat_Click(object sender, EventArgs e)
        {
            var lmacd = thuThuatDtADOs.Select(x => x.idcd).ToList();
            //foreach (var item in lmacd)
            //{
            //    var cd = DaTaContext.ChiDinhs.Where(x => x.IDCD == Convert.ToInt32(item)).FirstOrDefault();
            //}
            if (DialogResult.Yes == MessageBox.Show("bạn muốn thực hiện tất cả", "!!!!!", MessageBoxButtons.YesNo, MessageBoxIcon.Information))
            {
                if (lmacd.Count() <= 0)
                {
                    MessageBox.Show("Chưa tích chọn chỉ định, nên chưa thực hiện được", "", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    return;
                }
                for (int i = 0; i < lmacd.Count(); i++)
                {
                    var idcd = grvThuThuatdt.GetRowCellValue(i, colIDCDTT);

                    ChiDinh cd = new ChiDinh();
                    if (Convert.ToInt32(idcd) > 0)
                    {
                        int idc_d = Convert.ToInt32(idcd);
                        cd = DaTaContext.ChiDinhs.Where(x => x.IDCD == idc_d).FirstOrDefault();
                    }
                    var bnhan = DaTaContext.BenhNhans.Where(x => x.MaBNhan == _mabnn).FirstOrDefault();
                    bool tamthu = DungChung.Ham.Check_DuyetTamThu(cd.IDCD);
                    if (bnhan.NoiTru != 1 && bnhan.DTuong == "Dịch vụ" && bnhan.IDDTBN == 2)
                    {
                        var check = thuThuatDtADOs.Where(x => x.idcd == idcd.ToString()).FirstOrDefault().Check;
                        if (check == true)
                        {
                            if (tamthu)
                            {
                                var cls = DaTaContext.CLS.Where(x => x.IdCLS == cd.IdCLS).FirstOrDefault();
                                var clsct = DaTaContext.CLScts.Where(x => x.IdCLS == cls.IdCLS).FirstOrDefault();
                                var ngaybdth = grvThuThuatdt.GetRowCellValue(i, colThoiGianBD);
                                var ngayth = grvThuThuatdt.GetRowCellValue(i, colThoiGianKT);
                                var sophut = grvThuThuatdt.GetRowCellValue(i, colSoPhutThucHien);
                                var macb = grvThuThuatdt.GetRowCellValue(i, colCanBoth);
                                var kq = grvThuThuatdt.GetRowCellValue(i, colKetQua);
                                var status = grvThuThuatdt.GetRowCellValue(i, colTrangThaiTT);
                                if (Convert.ToDateTime(ngaybdth).ToString().Length > 0 && Convert.ToDateTime(ngayth).ToString().Length > 0)
                                {
                                    if (cls.NgayThang.Value > Convert.ToDateTime(ngaybdth))
                                    {
                                        cd.MaCBth = "";
                                        cls.MaCBth = "";
                                        //clsct.KetQua = "";
                                        cd.NgayBDTH = null;
                                        cd.NgayTH = null;
                                        cd.Status = 0;
                                        cls.Status = 0;
                                        MessageBox.Show("Do thời gian bắt đầu thực hiện không thể trước thời gian chỉ định, cần tiến hành nhập lại", "LỖI", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                        continue;
                                    }
                                    if (macb.ToString().Length == 0)
                                    {
                                        cd.MaCBth = "";
                                        cls.MaCBth = "";
                                        //clsct.KetQua = "";
                                        cd.NgayBDTH = null;
                                        cls.NgayTH = null;
                                        cd.NgayTH = null;
                                        cd.Status = 0;
                                        cls.Status = 0;
                                        MessageBox.Show("Do bác sĩ thực hiện đang để trống, cần tiến hành nhập lại");
                                        continue;
                                    }
                                    else
                                    {
                                        cd.NgayBDTH = Convert.ToDateTime(ngaybdth);
                                        cd.NgayTH = Convert.ToDateTime(ngayth);
                                        cls.NgayTH = Convert.ToDateTime(ngayth);
                                        cd.Status = 1;
                                        cd.MaCBth = macb.ToString();
                                        cls.MaCBth = macb.ToString();
                                        cls.Status = 1;
                                    }
                                }
                                else
                                {
                                    cd.MaCBth = "";
                                    cls.MaCBth = "";
                                    cd.NgayBDTH = null;
                                    cd.NgayTH = null;
                                    cls.NgayTH = null;
                                    cd.Status = 0;
                                    cls.Status = 0;
                                    MessageBox.Show("Do thời gian bắt đầu thực hiện và thời gian kết thúc để trống, nên chưa thể thực hiện, cần tiến hành nhập lại", "LỖI", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                    continue;
                                }
                                DaTaContext.SaveChanges();
                            }
                            else
                            {
                                MessageBox.Show("Bệnh nhân dịch vụ chưa tạm thu dịch vụ này nên không thể thực hiện", "LỖI", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                continue;
                            }
                        }
                    }
                    else
                    {
                        var check = thuThuatDtADOs.Where(x => x.idcd == idcd.ToString()).FirstOrDefault().Check;
                        if (check == true)
                        {
                            var cls = DaTaContext.CLS.Where(x => x.IdCLS == cd.IdCLS).FirstOrDefault();
                            var clsct = DaTaContext.CLScts.Where(x => x.IdCLS == cls.IdCLS).FirstOrDefault();
                            var ngaybdth = grvThuThuatdt.GetRowCellValue(i, colThoiGianBD);
                            var ngayth = grvThuThuatdt.GetRowCellValue(i, colThoiGianKT);
                            var sophut = grvThuThuatdt.GetRowCellValue(i, colSoPhutThucHien);
                            var macb = grvThuThuatdt.GetRowCellValue(i, colCanBoth);
                            var kq = grvThuThuatdt.GetRowCellValue(i, colKetQua);
                            var status = grvThuThuatdt.GetRowCellValue(i, colTrangThaiTT);
                            if (Convert.ToDateTime(ngaybdth).ToString().Length > 0 && Convert.ToDateTime(ngayth).ToString().Length > 0)
                            {
                                if (cls.NgayThang.Value > Convert.ToDateTime(ngaybdth))
                                {
                                    cd.MaCBth = "";
                                    cls.MaCBth = "";
                                    //clsct.KetQua = "";
                                    cd.NgayBDTH = null;
                                    cd.NgayTH = null;
                                    cd.Status = 0;
                                    cls.Status = 0;
                                    MessageBox.Show("Do thời gian bắt đầu thực hiện không thể trước thời gian chỉ định, cần tiến hành nhập lại", "LỖI", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                    continue;
                                }
                                if (macb.ToString().Length == 0)
                                {
                                    cd.MaCBth = "";
                                    cls.MaCBth = "";
                                    //clsct.KetQua = "";
                                    cd.NgayBDTH = null;
                                    cls.NgayTH = null;
                                    cd.NgayTH = null;
                                    cd.Status = 0;
                                    cls.Status = 0;
                                    MessageBox.Show("Do bác sĩ thực hiện đang để trống, cần tiến hành nhập lại");
                                    continue;
                                }
                                else
                                {
                                    cd.NgayBDTH = Convert.ToDateTime(ngaybdth);
                                    cd.NgayTH = Convert.ToDateTime(ngayth);
                                    cls.NgayTH = Convert.ToDateTime(ngayth);
                                    cd.Status = 1;
                                    cd.MaCBth = macb.ToString();
                                    cls.MaCBth = macb.ToString();
                                    cls.Status = 1;
                                }
                            }
                            else
                            {
                                cd.MaCBth = "";
                                cls.MaCBth = "";
                                cd.NgayBDTH = null;
                                cd.NgayTH = null;
                                cls.NgayTH = null;
                                cd.Status = 0;
                                cls.Status = 0;
                                MessageBox.Show("Do thời gian bắt đầu thực hiện và thời gian kết thúc để trống, nên chưa thể thực hiện, cần tiến hành nhập lại", "LỖI", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                continue;
                            }
                            DaTaContext.SaveChanges();
                        }
                    }

                }
                LoadData();
            }

        }

        private void btnHuyAllThuThuat_Click(object sender, EventArgs e)
        {
            var lmacd = thuThuatDtADOs.Select(x => x.idcd).ToList();
            //foreach (var item in lmacd)
            //{
            //    var cd = DaTaContext.ChiDinhs.Where(x => x.IDCD == Convert.ToInt32(item)).FirstOrDefault();
            //}
            if (DialogResult.Yes == MessageBox.Show("bạn muốn hủy tất cả", "!!!!!", MessageBoxButtons.YesNo, MessageBoxIcon.Information))
            {
                if (lmacd.Count() <= 0)
                {
                    MessageBox.Show("Chưa tích chọn chỉ định, nên chưa hủy thực hiện được", "", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    return;
                }
                for (int i = 0; i < lmacd.Count(); i++)
                {
                    var idcd = grvThuThuatdt.GetRowCellValue(i, colIDCDTT);
                    string status = grvThuThuatdt.GetRowCellValue(i, colTrangThaiTT).ToString();
                    ChiDinh cd = new ChiDinh();
                    if (Convert.ToInt32(idcd) > 0)
                    {
                        int idc_d = Convert.ToInt32(idcd);
                        cd = DaTaContext.ChiDinhs.Where(x => x.IDCD == idc_d).FirstOrDefault();
                    }
                    var check = thuThuatDtADOs.Where(x => x.idcd == idcd.ToString()).FirstOrDefault();
                    if (check.Check == true)
                    {
                        var cls = DaTaContext.CLS.Where(x => x.IdCLS == cd.IdCLS).FirstOrDefault();
                        var clsct = DaTaContext.CLScts.Where(x => x.IdCLS == cls.IdCLS).FirstOrDefault();
                        cd.MaCBth = "";
                        cls.MaCBth = "";
                        cd.NgayBDTH = null;
                        cd.NgayTH = null;
                        cls.NgayTH = null;
                        cd.Status = 0;
                        cls.Status = 0;
                        check.TrangThai = "Chưa thực hiện";
                        DaTaContext.SaveChanges();
                    }
                }
                LoadData();
            }
        }

        private void radTrangThai_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (radTrangThai.SelectedIndex == 0)
            {
                trangthaiTT = "Chưa thực hiện";
            }
            else if (radTrangThai.SelectedIndex == 1)
            {
                trangthaiTT = "Đã thực hiện";
            }
            else
            {
                trangthaiTT = "Tất cả";
            }
            LoadData();
        }

        private void barbtnphieukhamck_ItemClick(object sender, ItemClickEventArgs e)
        {

        }

        private void barButtonItem45_ItemClick(object sender, ItemClickEventArgs e)
        {

        }

        private void chkCheckAll_CheckedChanged(object sender, EventArgs e)
        {
            for (int i = 0; i < grvDonThuocdt.RowCount; i++)
            {
                var status = Convert.ToBoolean(grvDonThuocdt.GetRowCellValue(i, cldStatus));
                if (status != true)
                {
                    grvDonThuocdt.SetRowCellValue(i, colSelect, chkCheckAll.Checked);
                }
            }
        }

        private void grvDonThuocdt_RowCellClick(object sender, RowCellClickEventArgs e)
        {
            if (e.Column.FieldName == "chon")
            {
                var currentSelect = Convert.ToBoolean(grvDonThuocdt.GetRowCellValue(e.RowHandle, e.Column));
                grvDonThuocdt.SetRowCellValue(e.RowHandle, colSelect, !currentSelect);

            }
        }

        private void chkDthuocGui_CheckedChanged(object sender, EventArgs e)
        {
            colSelect.Visible = chkCheckAll.Visible = chkDthuocGui.Checked;
            int _int_maBN = 0, rs;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            loadDsDthuoc(_int_maBN);
        }

        private void dedenngaydb_EditValueChanged(object sender, EventArgs e)
        {
            TimKiem1();
        }

        private void barButtonItem41_ItemClick(object sender, ItemClickEventArgs e)
        {
            int _int_maBN = 0, rs;
            if (Int32.TryParse(txtMaBNhan.Text, out rs))
                _int_maBN = Convert.ToInt32(txtMaBNhan.Text);
            CLS.InPhieu.PhieuDieuTriVLTL(_int_maBN);
        }

        private void txtBenhKhac1_EditValueChanged(object sender, EventArgs e)
        {
            btnLuuKb.Enabled = true;
        }

        private void lupKhac_EditValueChanged(object sender, EventArgs e)
        {
            btnLuuKb.Enabled = true;
            if (!string.IsNullOrWhiteSpace(lupKhac.Text))
            {

                List<string> a = lupKhac.Text.Split(';').ToList();
                List<string> b = new List<string>();
                foreach (var item in a)
                {
                    string c = lICD.Where(p => p.MaICD == item.Trim()).Select(p => p.TenICD).FirstOrDefault();
                    b.Add(c);
                }
                txtBenhKhac1.SetEditValue(string.Join(";", b));
            }
            else
            {
                txtBenhKhac1.SetEditValue(null);
            }
        }

        private void txtBenhKhac1_PreviewKeyDown(object sender, PreviewKeyDownEventArgs e)
        {
            if (e.KeyCode == Keys.F9)
            {
                FormThamSo.frm_TimKiem frm = new FormThamSo.frm_TimKiem();
                frm.GetData = new FormThamSo.frm_TimKiem._getstring(getICDKhac);
                frm.ShowDialog();
            }
        }

        private void lupKhac_PreviewKeyDown(object sender, PreviewKeyDownEventArgs e)
        {
            if (e.KeyCode == Keys.F9)
            {
                FormThamSo.frm_TimKiem frm = new FormThamSo.frm_TimKiem();
                frm.GetData = new FormThamSo.frm_TimKiem._getstring(getICDKhac);
                frm.ShowDialog();
            }
        }

        private void txtBenhKhac1_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                var listIcd = lICD.Where(o => o.TenICD.ToUpper().Contains(txtBenhKhac1.Text.ToUpper())).Select(p => p.TenICD).ToList();
                if (listIcd != null && listIcd.Count > 0)
                    txtBenhKhac1.Properties.DataSource = listIcd;
                else
                    txtBenhKhac1.Properties.DataSource = lICD.Select(p => p.TenICD);
                txtBenhKhac1.ShowPopup();
                isNoShow = true;
            }
        }
    }
    public class ThuThuatDtADO
    {
        public string idcd { get; set; }
        public bool? Check { get; set; }
        public string TenDV { get; set; }
        public string ThoiGianCD { get; set; }
        public string ThoiGianBD { get; set; }
        public string SoPhutThucHien { get; set; }
        public string ThoiGianKT { get; set; }
        public string MaCBth { get; set; }
        public string KetQua { get; set; }
        public string TrangThai { get; set; }
        public string ChucNang { get; set; }
    }
}
