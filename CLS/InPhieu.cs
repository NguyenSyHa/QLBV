using DevExpress.XtraReports.UI;
using QLBV.BaoCao;
using QLBV.FormNhap;
using QLBV.FormThamSo;
using QLBV.Phieu.TamThanThaiBinh;
using QLBV_Database;
//using QLBV.Nam_0994;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Windows.Forms;

namespace QLBV.CLS
{
    public class InPhieu
    {
        public static bool PrintNow = false;
        public static bool InTongHop = false;
        public static bool InTiep = false;
        List<int> _lIdCLS = new List<int>();

        public InPhieu()
        {

        }
        public class CLSTH
        {
            public int IDCD { get; set; }
            public int IDNhom { set; get; }
            public string MaCB { get; set; }
            public string TenTN { set; get; }
            public string TenRG { set; get; }
            public int MaDV { get; set; }
            public string TenNhom { get; set; }
            public string MoTa { get; set; }
            public DateTime? NgayTH { get; set; }
            public int? Status { get; set; }
            public DateTime? NgayCD { get; set; }
            public string TenKP { get; set; }
            public int? MaKP { get; set; }

        }
        public class BNDT
        {
            public int IDKB { get; set; }
            public int? MaKP { get; set; }
            public string MaCB { get; set; }
        }
        public class BNCC
        {
            public int capcuu { get; set; }
            public int idnhom { get; set; }
        }
        public class InXNTongHop
        {
            public int IdTieuNhom { get; set; }
            public string TenTN { get; set; }
            public DateTime? NgayThang { get; set; }
            public string TenKP { get; set; }
            public string MaMay { get; set; }
            public int IdCLS { get; set; }
            public int IdCD { get; set; }
        }
        class ThucHiencls
        {
            public bool? IsDongY { get; set; }
            public double? SLuong { get; set; }
            public string Code { get; set; }
            public int? STTcd { get; set; }
            public int IdCLS { get; set; }
            public string TenTN { get; set; }
            public byte? STT { get; set; }
            public int? Status { get; set; }
            public int? SoTT { get; set; }
            public DateTime? NgayThang { get; set; }
            public int? MaKP { get; set; }
            public string MaCB { get; set; }
            public string TenKP { get; set; }
            public string TenDV { get; set; }
            public int? MaKPth { get; set; }
            public double DonGia { get; set; }
            public int MaDV { get; set; }
            public byte STT_F { get; set; }
            public string ylenh { get; set; }
        }
        #region laythongtinBNKB(Chẩn đoán, buồng, giường)
        /// <summary>
        ///   arrTT[0] = MaICD;
        ///  arrTT[1] =ChanDoan;
        ///   arrTT[2] =Buong;
        /// arrTT[3] = Giuong;
        /// arrTT[4] = TenKP;
        /// </summary>
        /// <param name="_Data"></param>
        /// <param name="mabn"></param>
        /// <param name="makp"></param>
        /// <returns></returns>
        /// 
        public static string[] LayCHanDoanBD(QLBV_Database.QLBVEntities _Data, int mabn, int makp)
        {
            var bnkb = _Data.BNKBs.Where(p => p.MaBNhan == mabn).Where(p => p.MaKP == makp).Select(p => p.ChanDoanBD).FirstOrDefault();
            if (bnkb != null)
            {
                string[] arrkq = bnkb.Split('|');
                return arrkq;
            }
            return null;
        }
        public static string laythongtinbnkb(QLBV_Database.QLBVEntities _Data, int mbn)
        {
            string a = "";
            var kbcd = _Data.BNKBs.Where(p => p.MaBNhan == mbn).ToList();
            if (kbcd != null)
            {
                string ChanDoan = kbcd.FirstOrDefault().ChanDoan;
                ChanDoan += kbcd.FirstOrDefault().BenhKhac;
                string maIDCD = kbcd.FirstOrDefault().MaICD;
                maIDCD += kbcd.FirstOrDefault().MaICD2;

                a = DungChung.Ham.FreshString_WithCode(ChanDoan, maIDCD);
            }
            return a;
        }
        public static string[] laythongtinBNKB(QLBV_Database.QLBVEntities _Data, int mabn, int makp)
        {
            string[] arrTT = new string[5] { "", "", "", "", "" };
            var kbcd = (from bnkb in _Data.BNKBs.Where(p => p.MaBNhan == mabn).Where(p => p.MaKP == makp) select new { bnkb.MaICD, bnkb.ChanDoan, bnkb.MaKP, bnkb.Buong, bnkb.Giuong, bnkb.BenhKhac, bnkb.IDKB, bnkb.ChanDoanBD, bnkb.MaICD2 }).OrderByDescending(p => p.IDKB).ToList();
            if (kbcd.Count > 0)
            {

                arrTT[0] = (DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "24012") ? DungChung.Ham.FreshString(kbcd.FirstOrDefault().MaICD + ";" + kbcd.FirstOrDefault().MaICD2) : kbcd.FirstOrDefault().MaICD;
                if (DungChung.Bien.MaBV == "30372")
                {
                    arrTT[1] = DungChung.Bien.MaBV == "27183" ? DungChung.Ham.GetICDstr(kbcd.FirstOrDefault().ChanDoan + "; " + kbcd.FirstOrDefault().BenhKhac) : DungChung.Ham.GetICDstr(kbcd.FirstOrDefault().ChanDoanBD + "; " + kbcd.FirstOrDefault().ChanDoan + ";" + kbcd.FirstOrDefault().BenhKhac);
                }
                else
                {
                    arrTT[1] = DungChung.Bien.MaBV == "27183" ? DungChung.Ham.GetICDstr(kbcd.FirstOrDefault().ChanDoan + "; " + kbcd.FirstOrDefault().BenhKhac) : DungChung.Ham.GetICDstr(kbcd.FirstOrDefault().ChanDoan + "; " + kbcd.FirstOrDefault().BenhKhac);
                }
                arrTT[2] = kbcd.FirstOrDefault().Buong == null ? "" : kbcd.FirstOrDefault().Buong;
                arrTT[3] = kbcd.FirstOrDefault().Giuong == null ? "" : kbcd.FirstOrDefault().Giuong;
            }
            var qkp = (from kp in _Data.KPhongs
                       where (kp.MaKP == (makp))
                       select new { kp.TenKP }).ToList();
            if (qkp.Count > 0)
            {
                arrTT[4] = qkp.FirstOrDefault().TenKP;
            }
            return arrTT;
        }
        public static string[] arrThongTinBNKB = new string[5] { "", "", "", "", "" };
        public static string[] arrChanDoanBD = new string[3] { "", "", "" };
        #endregion
        #region Kiểm tra chỉ định là nhóm CDHA hay không
        /// <summary>
        /// True: CDHA
        /// </summary>
        /// <param name="_data"></param>
        /// <param name="idCLS"></param>
        /// <returns></returns>
        public static bool _isCDHA(QLBV_Database.QLBVEntities _data, int idCLS)
        {
            var q = (from cd in _data.ChiDinhs.Where(p => p.IdCLS == idCLS)
                     join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                     join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                     join ndv in _data.NhomDVs//.Where(p => p.TenNhomCT == "Chẩn đoán hình ảnh" || p.TenNhomCT == "Thủ thuật, phẫu thuật") 
                     on dv.IDNhom equals ndv.IDNhom
                     where (ndv.TenNhomCT == "Chẩn đoán hình ảnh" || ndv.TenNhomCT == "Thủ thuật, phẫu thuật" || (ndv.IDNhom == 3 && tn.TenRG == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.DienTim))
                     select cd).ToList();
            if (q.Count > 0)
            {
                return true;
            }
            return false;
        }
        #endregion

        #region Kiểm tra dịch vụ chỉ định là trắc nghiệm tâm lý hay không
        /// <summary>
        /// True: TNTL
        /// </summary>
        /// <param name="_data"></param>
        /// <param name="idCLS"></param>
        /// <returns></returns>
        public static bool _isTNTL(QLBV_Database.QLBVEntities _data, int idCLS)
        {
            var q = (from cd in _data.ChiDinhs.Where(p => p.IdCLS == idCLS)
                     join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                     join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                     where (tn.TenRG == "Trắc nghiệm tâm lý")
                     select cd).ToList();
            if (q.Count > 0)
            {
                return true;
            }
            return false;
        }
        #endregion

        #region Kiểm tra chỉ định là nhóm thăm dò chức năng hay không
        /// <summary>
        /// True: CDHA
        /// </summary>
        /// <param name="_data"></param>
        /// <param name="idCLS"></param>
        /// <returns></returns>
        public static bool _isTDCN(QLBV_Database.QLBVEntities _data, int idCLS)
        {
            var q = (from cd in _data.ChiDinhs.Where(p => p.IdCLS == idCLS)
                     join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                     join ndv in _data.NhomDVs.Where(p => p.TenNhomCT == "Thăm dò chức năng") on dv.IDNhom equals ndv.IDNhom
                     select cd).ToList();
            if (q.Count > 0)
            {
                return true;
            }
            return false;
        }
        #endregion
        #region chỉ định xét nghiệm
        public static void _setParamInChiDinh_XN_24012(QLBV_Database.QLBVEntities _data, frmIn frm, string _MauIn, int _Mabn, int idCLS, List<int> _id, bool InTongHop, string code)
        {
            List<ThucHiencls> _lstcls = new List<ThucHiencls>();
            if (_MauIn == "A5")
            {
                BaoCao.repPhieuChiDinh_XetNghiem rep = new BaoCao.repPhieuChiDinh_XetNghiem(InTongHop);
                rep.MauSo.Value = "MS...../BV - 01";
                rep.MaBNhan.Value = _Mabn.ToString();
                rep.SoPhieu.Value = idCLS;
                var parnt = (from bn in _data.BenhNhans
                             join kp in _data.KPhongs on bn.MaKP equals kp.MaKP
                             join ttbx in _data.TTboXungs on bn.MaBNhan equals ttbx.MaBNhan
                             join bnkb in _data.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                             join cls in _data.CLS on bn.MaBNhan equals cls.MaBNhan
                             join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                             join clsct in _data.CLScts on cd.IDCD equals clsct.IDCD
                             join dvct in _data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                             join dv in _data.DichVus on dvct.MaDV equals dv.MaDV
                             where bnkb.MaKP == cls.MaKP
                             where bn.MaBNhan == _Mabn
                             select new
                             {
                                 kp.MaKP,
                                 cls.MaKPth,
                                 kp.TenKP,
                                 dv.DonGia,
                                 dv.MaDV,
                                 bnkb.MaICD,
                                 bnkb.MaICD2,
                                 ttbx.DThoai,
                                 bn.CapCuu,
                                 bn.DTuong,
                                 bn.TenBNhan,
                                 bn.MaBNhan,
                                 bn.DChi,
                                 bn.GTinh,
                                 bn.Tuoi,
                                 bn.SThe
                             }).ToList();
                if (DungChung.Bien.MaBV == "24012")
                {
                    if (parnt.Count() > 0)
                    {
                        int madv = int.Parse(parnt.FirstOrDefault().MaDV.ToString());
                        rep.MaBN.Value = parnt.FirstOrDefault().MaBNhan;
                        if (parnt.FirstOrDefault().CapCuu == 1)
                        {
                            rep.CapCuu.Value = "X";
                        }
                        else if (parnt.FirstOrDefault().CapCuu == 0)
                        {
                            rep.Thuong.Value = "X";
                        }
                        var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idCLS)
                                    join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                    join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                    join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                    join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                    select new
                                    {
                                        dchi = kp.DChi,
                                        ylenh = dv.TenDV + "(" + cd.ChiDinh1 + ")",
                                        cd.ChiDinh1,
                                        cls.STT,
                                        tn.TenTN,
                                        cd.Status,
                                        cd.LoaiMau,
                                        cls.NgayThang,
                                        cls.MaKP,
                                        cls.MaCB,
                                        kp.TenKP,
                                        dv.TenDV,
                                        dv.SoTT,
                                        tn.TenRG,
                                        cd.DonGia,
                                        cls.MaKPth,
                                        dv.MaDV,
                                        STT_F = Byte.MaxValue
                                    }).OrderBy(p => p.SoTT).ToList();

                        if (qmnt.Count() > 0)
                        {
                            if (qmnt.FirstOrDefault().TenRG == "XN hóa sinh máu" || qmnt.FirstOrDefault().TenRG == "XN huyết học" || qmnt.FirstOrDefault().TenRG == "XN vi sinh")
                            {
                                rep.LoaiBPham.Value = "Máu";
                            }
                            else if (qmnt.FirstOrDefault().TenRG == "XN đờm" || qmnt.FirstOrDefault().TenRG == "XN khác")
                            {
                                rep.LoaiBPham.Value = "";
                            }
                            else if (qmnt.FirstOrDefault().TenRG == "XN mô bệnh học")
                            {
                                rep.LoaiBPham.Value = "Mô";
                            }
                            else if (qmnt.FirstOrDefault().TenRG == "XN nước tiểu")
                            {
                                rep.LoaiBPham.Value = "Nước Tiểu";
                            }
                            else if (qmnt.FirstOrDefault().TenRG == "XN tế bào dịch")
                            {
                                rep.LoaiBPham.Value = "Dịch";
                            }
                            rep.SDT.Value = parnt.FirstOrDefault().DThoai;
                            rep.MaICD.Value = parnt.FirstOrDefault().MaICD + ", " + parnt.FirstOrDefault().MaICD2;
                            rep.SL.Value = "1";
                            rep.NgayGioIn.Value = DateTime.Now;
                            rep.LG.Value = parnt.FirstOrDefault().DTuong;
                            if (parnt.FirstOrDefault().MaKPth == 11)
                            {
                                rep.kpthuchien24012.Value = "Phòng Xét nghiệm";
                            }
                            rep.DataSource = qmnt.ToList();
                            rep.BindingData();
                        }
                    }
                }
                if (parnt.Count > 0)
                {
                    rep.DiaChi.Value = parnt.FirstOrDefault().DChi;
                    rep.Tuoi.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.TinhTuoiBenhNhan(_data, _Mabn) : DungChung.Ham.TuoitheoThang(_data, _Mabn, DungChung.Bien.formatAge);
                    rep.TenBNhan.Value = parnt.FirstOrDefault().TenBNhan.ToUpper();
                    //rep.MaBNhan
                    int gioiTinh = int.Parse(parnt.FirstOrDefault().GTinh.ToString());
                    if (gioiTinh == 1)
                    {
                        rep.Nu.Value = "/";
                    }
                    else if (gioiTinh == 0)
                    {
                        rep.Nam.Value = "/";
                    }
                    if (parnt.FirstOrDefault().SThe.Length == 15)
                    {
                        rep.SThe1.Value = parnt.FirstOrDefault().SThe.Substring(0, 3);
                        rep.SThe2.Value = parnt.FirstOrDefault().SThe.Substring(3, 2);
                        rep.SThe3.Value = parnt.FirstOrDefault().SThe.Substring(5, 2);
                        rep.SThe4.Value = parnt.FirstOrDefault().SThe.Substring(7, 3);
                        rep.SThe5.Value = parnt.FirstOrDefault().SThe.Substring(10, 5);
                    }
                }

                if (InTongHop)
                {
                    int _status = 0;
                    var kt = _data.CLS.Where(p => p.MaBNhan == _Mabn && p.IdCLS == idCLS).ToList();
                    if (kt.Count > 0 && kt.FirstOrDefault().Status == 1)
                        _status = 1;
                    var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn && (code == "" ? true : p.Code == code))
                                join cd in _data.ChiDinhs.Where(p => p.Status == _status) on cls.IdCLS equals cd.IdCLS
                                join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                where (tn.TenRG.Contains("XN"))
                                select new { ylenh = dv.TenDV + "(" + cd.ChiDinh1 + ")", cd.IDCD, kp.IsDongY, dv.SLuong, cls.Code, STTcd = cls.STT, cls.IdCLS, tn.TenTN, tn.STT, cd.Status, dv.SoTT, cls.NgayThang, cls.MaKP, cls.MaCB, kp.TenKP, dv.TenDV, cls.MaKPth, cd.DonGia, dv.MaDV, STT_F = Byte.MaxValue }).OrderBy(p => p.STT).ThenBy(p => p.SoTT).ToList();
                    foreach (var a in qmnt)
                    {
                        if (_id.Count > 0)
                        {
                            foreach (var b in _id)
                            {
                                if (DungChung.Bien.MaBV == "30372")
                                {
                                    if (a.IDCD == b)
                                    {
                                        ThucHiencls cls = new ThucHiencls();
                                        cls.IdCLS = a.IdCLS;
                                        cls.IsDongY = a.IsDongY;
                                        cls.SLuong = a.SLuong;
                                        cls.Code = a.Code;
                                        cls.STTcd = a.STTcd;
                                        cls.TenTN = a.TenTN;
                                        cls.STT = a.STT;
                                        cls.Status = a.Status;
                                        cls.SoTT = a.SoTT;
                                        cls.NgayThang = a.NgayThang;
                                        cls.MaKP = a.MaKP;
                                        cls.MaCB = a.MaCB;
                                        cls.TenKP = a.TenKP;
                                        cls.TenDV = a.TenDV;
                                        cls.MaKPth = a.MaKPth;
                                        cls.DonGia = a.DonGia;
                                        cls.MaDV = a.MaDV;
                                        cls.STT_F = a.STT_F;
                                        cls.ylenh = a.ylenh;
                                        _lstcls.Add(cls);
                                    }
                                }
                                else
                                {
                                    if (a.IdCLS == b)
                                    {
                                        ThucHiencls cls = new ThucHiencls();
                                        cls.IdCLS = a.IdCLS;
                                        cls.IsDongY = a.IsDongY;
                                        cls.SLuong = a.SLuong;
                                        cls.Code = a.Code;
                                        cls.STTcd = a.STTcd;
                                        cls.TenTN = a.TenTN;
                                        cls.STT = a.STT;
                                        cls.Status = a.Status;
                                        cls.SoTT = a.SoTT;
                                        cls.NgayThang = a.NgayThang;
                                        cls.MaKP = a.MaKP;
                                        cls.MaCB = a.MaCB;
                                        cls.TenKP = a.TenKP;
                                        cls.TenDV = a.TenDV;
                                        cls.MaKPth = a.MaKPth;
                                        cls.DonGia = a.DonGia;
                                        cls.MaDV = a.MaDV;
                                        cls.STT_F = a.STT_F;
                                        cls.ylenh = a.ylenh;
                                        _lstcls.Add(cls);
                                    }
                                }
                            }
                        }
                        else
                        {
                            ThucHiencls cls = new ThucHiencls();
                            cls.IdCLS = a.IdCLS;
                            cls.IsDongY = a.IsDongY;
                            cls.SLuong = a.SLuong;
                            cls.Code = a.Code;
                            cls.STTcd = a.STTcd;
                            cls.TenTN = a.TenTN;
                            cls.STT = a.STT;
                            cls.Status = a.Status;
                            cls.SoTT = a.SoTT;
                            cls.NgayThang = a.NgayThang;
                            cls.MaKP = a.MaKP;
                            cls.MaCB = a.MaCB;
                            cls.TenKP = a.TenKP;
                            cls.TenDV = a.TenDV;
                            cls.MaKPth = a.MaKPth;
                            cls.DonGia = a.DonGia;
                            cls.MaDV = a.MaDV;
                            cls.STT_F = a.STT_F;
                            cls.ylenh = a.ylenh;
                            _lstcls.Add(cls);
                        }
                    }
                    rep.KpThucHien.Value = _lstcls.Select(o => o.MaKPth).FirstOrDefault().ToString();
                    if (_lstcls.Count > 0)
                    {
                        try
                        {
                            rep.code.Value = Convert.ToInt64(_lstcls.FirstOrDefault().Code);
                        }
                        catch { }
                        rep.STT.Value = _lstcls.FirstOrDefault().STTcd;
                        rep.TieuDe.Value = "XÉT NGHIỆM";
                        if (_lstcls.FirstOrDefault().Status == 1)
                            rep.ThucHien.Value = "Đã thực hiện";
                        DateTime _dt = System.DateTime.Now;
                        if (_lstcls.FirstOrDefault().NgayThang != null)
                            _dt = _lstcls.FirstOrDefault().NgayThang.Value;
                        rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, 2);
                        rep.MaCB.Value = _lstcls.FirstOrDefault().MaCB;
                        rep.KPhong.Value = _lstcls.FirstOrDefault().TenKP.ToUpper();
                        int makpyh = _lstcls.FirstOrDefault().MaKPth ?? 0;
                        var kpth = _data.KPhongs.Where(p => p.MaKP == makpyh).ToList();
                        rep.dckp.Text = kpth.Count() > 0 ? (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789" ? kpth.FirstOrDefault().TenKP : (kpth.FirstOrDefault().DChi)) : "";
                        arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, _lstcls.FirstOrDefault().MaKP == null ? 0 : _lstcls.FirstOrDefault().MaKP.Value);
                        arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, _lstcls.FirstOrDefault().MaKP == null ? 0 : _lstcls.FirstOrDefault().MaKP.Value);

                        if (_lstcls.FirstOrDefault().IsDongY == true && DungChung.Bien.MaBV == "24297")
                        {
                            rep.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_24297(_data, _Mabn);
                        }
                        else
                        {
                            rep.ChanDoan.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.GetChanDoanKB(_data, _Mabn) : DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];// (arrChanDoanBD != null && arrChanDoanBD[0] != "") ? arrChanDoanBD[0] + ";" + arrThongTinBNKB[1] : 
                        }

                        rep.paramBuong.Value = arrThongTinBNKB[2];
                        rep.paramGiuong.Value = arrThongTinBNKB[3];
                        rep.paramTenKP.Value = arrThongTinBNKB[4];
                        rep.DataSource = _lstcls.ToList();
                        rep.BindingData();
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                }
                else
                {
                    var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idCLS)
                                join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                select new { dchi = kp.DChi, ylenh = dv.TenDV + "(" + cd.ChiDinh1 + ")", cd.ChiDinh1, cls.STT, tn.TenTN, cd.Status, cd.LoaiMau, cls.NgayThang, cls.MaKP, cls.MaCB, kp.TenKP, dv.TenDV, dv.SoTT, tn.TenRG, cd.DonGia, cls.MaKPth, dv.MaDV, STT_F = Byte.MaxValue }).OrderBy(p => p.SoTT).ToList();
                    if (qmnt.Count > 0)
                    {
                        if (DungChung.Bien.MaBV != "30372")
                        {
                            rep.KpThucHien.Value = Convert.ToInt32(qmnt.Select(o => o.MaKPth).FirstOrDefault().ToString());
                        }
                        rep.TieuDe.Value = qmnt.FirstOrDefault().TenTN.ToUpper();
                        if (qmnt.FirstOrDefault().Status == 1)
                            rep.ThucHien.Value = "Đã thực hiện";
                        DateTime _dt = System.DateTime.Now;
                        if (qmnt.FirstOrDefault().NgayThang != null)
                            _dt = qmnt.FirstOrDefault().NgayThang.Value;
                        rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                        rep.MaCB.Value = qmnt.FirstOrDefault().MaCB;
                        int makpyh = qmnt.FirstOrDefault().MaKPth ?? 0;
                        var kpth = _data.KPhongs.Where(p => p.MaKP == makpyh).ToList();
                        rep.dckp.Text = kpth.Count() > 0 ? (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789" ? kpth.FirstOrDefault().TenKP : (kpth.FirstOrDefault().DChi)) : "";
                        rep.KPhong.Value = qmnt.FirstOrDefault().TenKP;
                        rep.DiaChiKP.Value = qmnt.FirstOrDefault().dchi;
                        if (DungChung.Bien.MaBV == "30372")
                        {
                            int makpth = qmnt.FirstOrDefault().MaKPth ?? 0;
                            var kpth1 = _data.KPhongs.Where(p => p.MaKP == makpth).Select(p => DungChung.Bien.MaBV == "30010" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "30372" || DungChung.Bien.MaBV == "56789" ? p.TenKP : (DungChung.Bien.MaBV == "27001" ? p.DChi : "")).FirstOrDefault();
                            rep.KpThucHien.Value = kpth1;
                        }
                        arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                        arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);

                        rep.ChanDoan.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.GetChanDoanKB(_data, _Mabn) : DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];



                        rep.paramBuong.Value = arrThongTinBNKB[2];
                        rep.paramGiuong.Value = arrThongTinBNKB[3];
                        rep.paramTenKP.Value = arrThongTinBNKB[4];
                        rep.DataSource = qmnt.ToList();
                        rep.BindingData();
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                }
            }
            else
            {
                BaoCao.repPhieuChiDinh_XetNghiem_A4 rep = new BaoCao.repPhieuChiDinh_XetNghiem_A4(InTongHop);
                rep.MauSo.Value = "MS...../BV - 01";
                rep.MaBNhan.Value = _Mabn;
                rep.SoPhieu.Value = idCLS;
                var parnt = (from bn in _data.BenhNhans
                             where bn.MaBNhan == _Mabn
                             select new
                             {
                                 bn.TenBNhan,
                                 bn.MaBNhan,
                                 bn.DChi,
                                 bn.GTinh,
                                 bn.Tuoi,
                                 bn.SThe,
                                 bn.NoiTru
                             }).ToList();
                if (parnt.Count > 0)
                {
                    rep.DiaChi.Value = parnt.FirstOrDefault().DChi;
                    rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _Mabn, DungChung.Bien.formatAge);
                    rep.TenBNhan.Value = parnt.FirstOrDefault().TenBNhan.ToUpper();
                    int gioiTinh = int.Parse(parnt.FirstOrDefault().GTinh.ToString());
                    if (gioiTinh == 1)
                    {
                        rep.Nu.Value = "/";
                    }
                    else if (gioiTinh == 0)
                    {
                        rep.Nam.Value = "/";
                    }
                    if (parnt.FirstOrDefault().SThe.Length == 15)
                    {
                        rep.SThe1.Value = parnt.FirstOrDefault().SThe.Substring(0, 3);
                        rep.SThe2.Value = parnt.FirstOrDefault().SThe.Substring(3, 2);
                        rep.SThe3.Value = parnt.FirstOrDefault().SThe.Substring(5, 2);
                        rep.SThe4.Value = parnt.FirstOrDefault().SThe.Substring(7, 3);
                        rep.SThe5.Value = parnt.FirstOrDefault().SThe.Substring(10, 5);
                    }
                    if (parnt.FirstOrDefault().NoiTru == 1)
                    {
                        var SoVV = _data.VaoViens.Where(p => p.MaBNhan == _Mabn).Select(p => p.SoVV).FirstOrDefault();
                        if (SoVV != null)
                            rep.SoVV.Value = "Số VV: " + SoVV.ToString();
                    }
                }
                if (InTongHop)
                {
                    int _status = 0;
                    var kt = _data.CLS.Where(p => p.MaBNhan == _Mabn && p.IdCLS == idCLS).ToList();
                    if (kt.Count > 0 && kt.FirstOrDefault().Status == 1)
                        _status = 1;
                    var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn)
                                join cd in _data.ChiDinhs.Where(p => p.Status == _status) on cls.IdCLS equals cd.IdCLS
                                join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                where (tn.TenRG.Contains("XN"))
                                select new
                                {
                                    kp.IsDongY,
                                    STTcd = cls.STT,
                                    tn.STT,
                                    tn.TenTN,
                                    cd.Status,
                                    cls.NgayThang,
                                    cls.MaKP,
                                    cls.MaCB,
                                    kp.TenKP,
                                    dv.SoTT,
                                    TenDV = dv.TenDV,
                                    cls.MaKPth,
                                    cd.DonGia,
                                    dv.MaDV,
                                    STT_F = Byte.MaxValue
                                }).OrderBy(p => p.SoTT).ToList();
                    if (qmnt.Count > 0)
                    {
                        rep.STT.Value = qmnt.FirstOrDefault().STTcd;
                        rep.TieuDe.Value = "XÉT NGHIỆM";
                        if (qmnt.FirstOrDefault().Status == 1)
                            rep.ThucHien.Value = "Đã thực hiện";
                        DateTime _dt = System.DateTime.Now;
                        if (qmnt.FirstOrDefault().NgayThang != null)
                            _dt = qmnt.FirstOrDefault().NgayThang.Value;
                        rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                        rep.MaCB.Value = qmnt.FirstOrDefault().MaCB;
                        int makpyh = qmnt.FirstOrDefault().MaKPth ?? 0;
                        var kpth = _data.KPhongs.Where(p => p.MaKP == makpyh).ToList();
                        rep.kpth.Text = kpth.Count() > 0 ? (kpth.FirstOrDefault().DChi) : "";
                        rep.KPhong.Value = qmnt.FirstOrDefault().TenKP.ToUpper();
                        arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                        arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                        rep.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                        rep.paramBuong.Value = arrThongTinBNKB[2];
                        rep.paramGiuong.Value = arrThongTinBNKB[3];
                        rep.paramTenKP.Value = arrThongTinBNKB[4];
                        rep.DataSource = qmnt.ToList();
                        rep.BindingData();
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                }
                else
                {
                    var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idCLS)
                                join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                select new { kp.IsDongY, tn.STT, tn.TenTN, cd.Status, cls.NgayThang, cls.MaKP, dv.SoTT, cls.MaCB, kp.TenKP, TenDV = dv.TenDV + " (" + cd.ChiDinh1 + ")", cls.MaKPth, dv.MaDV, STT_F = Byte.MaxValue }).OrderBy(p => p.SoTT).ToList();
                    if (qmnt.Count > 0)
                    {
                        rep.TieuDe.Value = qmnt.FirstOrDefault().TenTN.ToUpper();
                        if (qmnt.FirstOrDefault().TenTN.ToUpper() == "X-QUANG CT" && DungChung.Bien.MaBV == "30009")
                        {
                            rep.xrBarCode1.Visible = true;
                        }
                        if (qmnt.FirstOrDefault().Status == 1)
                            rep.ThucHien.Value = "Đã thực hiện";
                        DateTime _dt = System.DateTime.Now;
                        if (qmnt.FirstOrDefault().NgayThang != null)
                            _dt = qmnt.FirstOrDefault().NgayThang.Value;
                        rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                        rep.MaCB.Value = qmnt.FirstOrDefault().MaCB;
                        int makpyh = qmnt.FirstOrDefault().MaKPth ?? 0;
                        var kpth = _data.KPhongs.Where(p => p.MaKP == makpyh).ToList();
                        rep.kpth.Text = kpth.Count() > 0 ? (kpth.FirstOrDefault().DChi) : "";
                        rep.KPhong.Value = qmnt.FirstOrDefault().TenKP.ToUpper();
                        arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                        arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                        rep.ChanDoan.Value = arrThongTinBNKB[1];
                        rep.paramBuong.Value = arrThongTinBNKB[2];
                        rep.paramGiuong.Value = arrThongTinBNKB[3];
                        rep.paramTenKP.Value = arrThongTinBNKB[4];
                        rep.DataSource = qmnt.ToList();
                        rep.BindingData();
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                }
            }
        }

        public static void _setParamInChiDinh_XN(QLBV_Database.QLBVEntities _data, frmIn frm, string _MauIn, int _Mabn, int idCLS, bool InTongHop, string code)
        {
            #region 27023 lấy số trên phiếu : BN nôi trú lấy số bệnh án, bệnh nhân ngoại trú số thứ tự tăng theo ngày
            string _so = "";
            if (DungChung.Bien.MaBV == "27023")
            {
                var bnhan = _data.BenhNhans.Where(p => p.MaBNhan == _Mabn).FirstOrDefault();
                if (bnhan != null)
                {
                    if (bnhan.NoiTru == 1)
                    {
                        var qvv = _data.VaoViens.Where(parameters => parameters.MaBNhan == _Mabn).Select(p => p.SoBA).FirstOrDefault();
                        if (qvv != null)
                            _so = qvv;
                    }
                    else
                    {
                        DateTime tungay = DungChung.Ham.NgayTu(bnhan.NNhap.Value);
                        DateTime denngay = DungChung.Ham.NgayDen(bnhan.NNhap.Value);
                        var qbn = _data.BenhNhans.Where(p => p.NNhap >= tungay && p.NNhap <= denngay).Where(p => p.NoiTru == 0).OrderBy(p => p.NNhap).ToList();
                        int count = 0;
                        foreach (var a in qbn)
                        {
                            count++;
                            if (a.MaBNhan == _Mabn)
                                break;
                        }
                        _so = count.ToString();
                    }
                }

            }
            #endregion
            if (_MauIn == "A5")
            {
                BaoCao.repPhieuChiDinh_XetNghiem rep = new BaoCao.repPhieuChiDinh_XetNghiem(InTongHop);
                rep.MauSo.Value = "MS...../BV - 01";
                rep.MaBNhan.Value = (DungChung.Bien.MaBV == "27001" || DungChung.Bien.MaBV == "27183" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297") ? "Mã BN:" + _Mabn.ToString() : _Mabn.ToString();
                if (DungChung.Bien.MaBV == "27023")
                    rep.SoPhieu.Value = _so;
                else
                    rep.SoPhieu.Value = idCLS;
                var parnt = (from bn in _data.BenhNhans
                             join kp in _data.KPhongs on bn.MaKP equals kp.MaKP
                             join ttbx in _data.TTboXungs on bn.MaBNhan equals ttbx.MaBNhan
                             join bnkb in _data.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                             join cls in _data.CLS on bn.MaBNhan equals cls.MaBNhan
                             join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                             join clsct in _data.CLScts on cd.IDCD equals clsct.IDCD
                             join dvct in _data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                             join dv in _data.DichVus on dvct.MaDV equals dv.MaDV
                             where bn.MaBNhan == _Mabn
                             select new
                             {
                                 kp.MaKP,
                                 cls.MaKPth,
                                 kp.TenKP,
                                 dv.DonGia,
                                 dv.MaDV,
                                 bnkb.MaICD,
                                 ttbx.DThoai,
                                 bn.CapCuu,
                                 bn.DTuong,
                                 bn.TenBNhan,
                                 bn.MaBNhan,
                                 bn.DChi,
                                 bn.GTinh,// bn.CapCuu,
                                 bn.Tuoi,
                                 bn.SThe
                             }).Distinct().ToList();
                if (DungChung.Bien.MaBV == "24012")
                {
                    if (parnt.Count() > 0)
                    {
                        int madv = int.Parse(parnt.FirstOrDefault().MaDV.ToString());
                        rep.MaBN.Value = parnt.FirstOrDefault().MaBNhan;
                        if (parnt.FirstOrDefault().CapCuu == 1)
                        {
                            rep.CapCuu.Value = "X";
                        }
                        else if (parnt.FirstOrDefault().CapCuu == 0)
                        {
                            rep.Thuong.Value = "X";
                        }
                        var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idCLS)
                                    join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                    join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                    join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                    join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                    select new
                                    {
                                        dchi = kp.DChi,
                                        ylenh = dv.TenDV + "(" + cd.ChiDinh1 + ")",
                                        cd.ChiDinh1,
                                        cls.STT,
                                        tn.TenTN,
                                        cd.Status,
                                        cd.LoaiMau,
                                        cls.NgayThang,
                                        cls.MaKP,
                                        cls.MaCB,
                                        kp.TenKP,
                                        dv.TenDV,
                                        dv.SoTT,
                                        tn.TenRG,
                                        cd.DonGia,
                                        cls.MaKPth,
                                        dv.MaDV,
                                        STT_F = Byte.MaxValue
                                    }).OrderBy(p => p.SoTT).ToList();

                        if (qmnt.Count() > 0)
                        {
                            if (qmnt.FirstOrDefault().TenRG == "XN hóa sinh máu" || qmnt.FirstOrDefault().TenRG == "XN huyết học" || qmnt.FirstOrDefault().TenRG == "XN vi sinh")
                            {
                                rep.LoaiBPham.Value = "Máu";
                            }
                            else if (qmnt.FirstOrDefault().TenRG == "XN đờm" || qmnt.FirstOrDefault().TenRG == "XN khác")
                            {
                                rep.LoaiBPham.Value = "";
                            }
                            else if (qmnt.FirstOrDefault().TenRG == "XN mô bệnh học")
                            {
                                rep.LoaiBPham.Value = "Mô";
                            }
                            else if (qmnt.FirstOrDefault().TenRG == "XN nước tiểu")
                            {
                                rep.LoaiBPham.Value = "Nước Tiểu";
                            }
                            else if (qmnt.FirstOrDefault().TenRG == "XN tế bào dịch")
                            {
                                rep.LoaiBPham.Value = "Dịch";
                            }
                            rep.SDT.Value = parnt.FirstOrDefault().DThoai;
                            rep.MaICD.Value = parnt.FirstOrDefault().MaICD;
                            rep.SL.Value = "1";
                            rep.NgayGioIn.Value = DateTime.Now;
                            rep.LG.Value = parnt.FirstOrDefault().DTuong;
                            if (parnt.FirstOrDefault().MaKPth == 11)
                            {
                                rep.kpthuchien24012.Value = "Phòng Xét nghiệm";
                            }
                            rep.DataSource = qmnt.ToList();
                            rep.BindingData();
                        }
                    }
                }
                else if (DungChung.Bien.MaBV == "30004")
                {
                    rep.code.Value = _Mabn;
                }
                else if (DungChung.Bien.MaBV == "24009" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                {
                    rep.xrPictureBox1.Image = DungChung.Ham.GetLogo();
                }

                if (parnt.Count > 0)
                {
                    rep.DiaChi.Value = parnt.FirstOrDefault().DChi;
                    rep.Tuoi.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.TinhTuoiBenhNhan(_data, _Mabn) : DungChung.Ham.TuoitheoThang(_data, _Mabn, DungChung.Bien.formatAge);
                    rep.TenBNhan.Value = parnt.FirstOrDefault().TenBNhan.ToUpper();
                    //rep.MaBNhan
                    int gioiTinh = int.Parse(parnt.FirstOrDefault().GTinh.ToString());
                    if (gioiTinh == 1)
                    {
                        rep.Nu.Value = "/";
                    }
                    else if (gioiTinh == 0)
                    {
                        rep.Nam.Value = "/";
                    }
                    if (parnt.FirstOrDefault().SThe.Length == 15)
                    {
                        rep.SThe1.Value = parnt.FirstOrDefault().SThe.Substring(0, 3);
                        rep.SThe2.Value = parnt.FirstOrDefault().SThe.Substring(3, 2);
                        rep.SThe3.Value = parnt.FirstOrDefault().SThe.Substring(5, 2);
                        rep.SThe4.Value = parnt.FirstOrDefault().SThe.Substring(7, 3);
                        rep.SThe5.Value = parnt.FirstOrDefault().SThe.Substring(10, 5);
                    }
                }

                if (InTongHop)
                {
                    if (DungChung.Bien.MaBV == "24297")
                    {
                        int _status = 0;
                        var kt = _data.CLS.Where(p => p.MaBNhan == _Mabn && p.IdCLS == idCLS).ToList();
                        if (kt.Count > 0 && kt.FirstOrDefault().Status == 1)
                            _status = 1;
                        var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn && (code == "" ? true : p.Code == code))
                                    join cd in _data.ChiDinhs.Where(p => p.Status == _status) on cls.IdCLS equals cd.IdCLS
                                    join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                    join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                    join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                    where (tn.TenRG.Contains("XN"))
                                    select new { kp.IsDongY, dv.SLuong, cls.Code, STTcd = cls.STT, cls.IdCLS, tn.TenTN, tn.STT, cd.Status, dv.SoTT, cls.NgayThang, cls.MaKP, cls.MaCB, kp.TenKP, dv.TenDV, cls.MaKPth, cd.DonGia, dv.MaDV, STT_F = Byte.MaxValue }).OrderBy(p => p.STT).ThenBy(p => p.SoTT).ToList();
                        var qmnt2 = (from rs in qmnt.Where(p => p.MaKPth != 0)
                                     join kp in _data.KPhongs on rs.MaKPth equals kp.MaKP
                                     select new { rs.IsDongY, rs.SLuong, rs.Code, STTcd = rs.STT, rs.IdCLS, TenTN = rs.TenTN + " (" + kp.DChi + ")", rs.STT, rs.Status, rs.SoTT, rs.NgayThang, rs.MaKP, rs.MaCB, kp.TenKP, rs.TenDV, rs.MaKPth, rs.DonGia, rs.MaDV, STT_F = Byte.MaxValue }).OrderBy(p => p.STT).ThenBy(p => p.SoTT).ToList();

                        if (qmnt.Count > 0)
                        {
                            try
                            {
                                rep.KpThucHien.Value = Convert.ToInt32(qmnt.Select(o => o.MaKPth).FirstOrDefault().ToString());
                                rep.code.Value = Convert.ToInt64(qmnt.FirstOrDefault().Code);
                            }
                            catch { }
                            rep.STT.Value = qmnt.FirstOrDefault().STTcd;
                            rep.TieuDe.Value = "XÉT NGHIỆM";
                            if (qmnt.FirstOrDefault().Status == 1)
                                rep.ThucHien.Value = "Đã thực hiện";
                            DateTime _dt = System.DateTime.Now;
                            if (qmnt.FirstOrDefault().NgayThang != null)
                                _dt = qmnt.FirstOrDefault().NgayThang.Value;
                            rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                            rep.MaCB.Value = qmnt.FirstOrDefault().MaCB;
                            rep.KPhong.Value = qmnt.FirstOrDefault().TenKP.ToUpper();
                            int makpyh = qmnt.FirstOrDefault().MaKPth ?? 0;
                            var kpth = _data.KPhongs.Where(p => p.MaKP == makpyh).ToList();
                            rep.dckp.Text = kpth.Count() > 0 ? (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789" ? kpth.FirstOrDefault().TenKP : (kpth.FirstOrDefault().DChi)) : "";
                            arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                            arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);

                            if (qmnt.FirstOrDefault().IsDongY == true || DungChung.Bien.MaBV == "24297")
                            {
                                rep.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_24297(_data, _Mabn);
                            }
                            else
                            {
                                rep.ChanDoan.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.GetChanDoanKB(_data, _Mabn) : DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];// (arrChanDoanBD != null && arrChanDoanBD[0] != "") ? arrChanDoanBD[0] + ";" + arrThongTinBNKB[1] : 
                                if (DungChung.Bien.MaBV == "24272")
                                {
                                    rep.ChanDoan.Value = arrChanDoanBD[1];
                                }
                            }

                            rep.paramBuong.Value = arrThongTinBNKB[2];
                            rep.paramGiuong.Value = arrThongTinBNKB[3];
                            rep.paramTenKP.Value = arrThongTinBNKB[4];

                            rep.DataSource = qmnt2.ToList();
                            rep.BindingData();
                            rep.CreateDocument();
                            frm.prcIN.PrintingSystem = rep.PrintingSystem;
                            frm.ShowDialog();
                        }
                    }
                    else
                    {
                        int _status = 0;
                        var kt = _data.CLS.Where(p => p.MaBNhan == _Mabn && p.IdCLS == idCLS).ToList();
                        if (kt.Count > 0 && kt.FirstOrDefault().Status == 1)
                            _status = 1;
                        var benhnhan = _data.BenhNhans.Where(p => p.MaBNhan == _Mabn).Select(p => p.MaKP).FirstOrDefault();
                        var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn && (code == "" ? true : p.Code == code))
                                    join cd in _data.ChiDinhs.Where(p => p.Status == _status) on cls.IdCLS equals cd.IdCLS
                                    join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                    join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                    join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                    join bnkb in _data.BNKBs on cls.MaBNhan equals bnkb.MaBNhan
                                    where (tn.TenRG.Contains("XN"))
                                    where bnkb.MaKP == benhnhan
                                    select new { bnkb.ChanDoanBD, dv.TenRG, kp.IsDongY, dv.SLuong, cls.Code, STTcd = cls.STT, cls.IdCLS, tn.TenTN, tn.STT, cd.Status, dv.SoTT, cls.NgayThang, cls.MaKP, cls.MaCB, kp.TenKP, dv.TenDV, cls.MaKPth, cd.DonGia, dv.MaDV, STT_F = Byte.MaxValue }).Distinct().OrderBy(p => p.STT).ThenBy(p => p.SoTT).ToList();

                        //if (DungChung.Bien.MaBV == "30372")
                        //{
                        var maDVs = qmnt.Select(o => o.MaDV).ToList();
                        var dichVucts = _data.DichVucts.Where(o => maDVs.Contains(o.MaDV ?? 0)).GroupBy(o => o.MaDV).Select(o => new { MaDV = (o.Key ?? 0), STT_F = o.Min(p => p.STT_F) }).ToList();

                        qmnt = qmnt.Join(dichVucts, o => o.MaDV, p => p.MaDV, (o, p) => new { ChanDoanBD = o.ChanDoanBD, TenRG = o.TenRG, IsDongY = o.IsDongY, SLuong = o.SLuong, Code = o.Code, STTcd = o.STTcd, IdCLS = o.IdCLS, TenTN = o.TenTN, STT = o.STT, Status = o.Status, SoTT = o.SoTT, NgayThang = o.NgayThang, MaKP = o.MaKP, MaCB = o.MaCB, TenKP = o.TenKP, TenDV = o.TenDV, MaKPth = o.MaKPth, DonGia = o.DonGia, MaDV = o.MaDV, STT_F = (p.STT_F ?? Byte.MaxValue) }).ToList();
                        //}
                        if (DungChung.Bien.MaBV == "24297")
                        {

                        }

                        rep.KpThucHien.Value = Convert.ToInt32(qmnt.Select(o => o.MaKPth).FirstOrDefault().ToString());
                        if (qmnt.Count > 0)
                        {
                            try
                            {
                                if (DungChung.Bien.MaBV == "30004")
                                {
                                    rep.code.Value = _Mabn;
                                }
                                else
                                {
                                    rep.code.Value = Convert.ToInt64(qmnt.FirstOrDefault().Code);
                                }
                            }
                            catch { }
                            rep.STT.Value = qmnt.FirstOrDefault().STTcd;
                            rep.TieuDe.Value = "XÉT NGHIỆM";
                            if (qmnt.FirstOrDefault().Status == 1)
                                rep.ThucHien.Value = "Đã thực hiện";
                            DateTime _dt = System.DateTime.Now;
                            if (qmnt.FirstOrDefault().NgayThang != null)
                                _dt = qmnt.FirstOrDefault().NgayThang.Value;
                            rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                            rep.MaCB.Value = qmnt.FirstOrDefault().MaCB;
                            rep.KPhong.Value = qmnt.FirstOrDefault().TenKP.ToUpper();
                            int makpyh = qmnt.FirstOrDefault().MaKPth ?? 0;
                            var kpth = _data.KPhongs.Where(p => p.MaKP == makpyh).ToList();
                            rep.dckp.Text = kpth.Count() > 0 ? (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789" ? kpth.FirstOrDefault().TenKP : (kpth.FirstOrDefault().DChi)) : "";
                            arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                            arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);

                            if (qmnt.FirstOrDefault().IsDongY == true && DungChung.Bien.MaBV == "24297")
                            {
                                rep.ChanDoan.Value = qmnt.FirstOrDefault().ChanDoanBD != null || qmnt.FirstOrDefault().ChanDoanBD != "" ? qmnt.FirstOrDefault().ChanDoanBD + ";" : "";
                                rep.ChanDoan.Value += DungChung.Ham.GetChanDoanKB_24297(_data, _Mabn);
                            }
                            else
                            {
                                rep.ChanDoan.Value = qmnt.FirstOrDefault().ChanDoanBD != null || qmnt.FirstOrDefault().ChanDoanBD != "" ? qmnt.FirstOrDefault().ChanDoanBD + ";" : "";//(arrChanDoanBD!=null&& arrChanDoanBD[0] != "") ? arrChanDoanBD[0] + ";" + arrThongTinBNKB[1] : arrThongTinBNKB[1];
                                if (DungChung.Bien.MaBV != "24272")
                                {
                                    rep.ChanDoan.Value += DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];

                                }
                            }

                            rep.paramBuong.Value = arrThongTinBNKB[2];
                            rep.paramGiuong.Value = arrThongTinBNKB[3];
                            rep.paramTenKP.Value = arrThongTinBNKB[4];
                            rep.DataSource = qmnt.ToList();
                            rep.BindingData();
                            rep.CreateDocument();
                            frm.prcIN.PrintingSystem = rep.PrintingSystem;
                            frm.ShowDialog();
                        }
                    }
                }
                else
                {
                    var bn = _data.BenhNhans.Where(p => p.MaBNhan == _Mabn).Select(p => p.MaKP).FirstOrDefault();
                    var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idCLS)
                                join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                join bnkb in _data.BNKBs on cls.MaBNhan equals bnkb.MaBNhan
                                join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                where bnkb.MaKP == bn
                                select new { bnkb.ChanDoanBD, TenDVRG = dv.TenRG, dchi = kp.DChi, ylenh = dv.TenDV + "(" + cd.ChiDinh1 + ")", cd.ChiDinh1, cls.STT, tn.TenTN, cd.Status, cd.LoaiMau, cls.NgayThang, cls.MaKP, cls.MaCB, kp.TenKP, dv.TenDV, dv.SoTT, tn.TenRG, cd.DonGia, cls.MaKPth, dv.MaDV, STT_F = Byte.MaxValue }).OrderBy(p => p.SoTT).Distinct().ToList();

                    if (DungChung.Bien.MaBV == "30372")
                    {
                        qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idCLS)
                                join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                join bnkb in _data.BNKBs on cls.MaBNhan equals bnkb.MaBNhan
                                join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                where bnkb.MaKP == bn
                                select new { bnkb.ChanDoanBD, TenDVRG = dv.TenRG, dchi = kp.DChi, ylenh = dv.TenDV + "(" + cd.ChiDinh1 + ")", cd.ChiDinh1, cls.STT, tn.TenTN, cd.Status, cd.LoaiMau, cls.NgayThang, cls.MaKP, cls.MaCB, kp.TenKP, dv.TenDV, dv.SoTT, tn.TenRG, cd.DonGia, cls.MaKPth, dv.MaDV, STT_F = Byte.MaxValue }).OrderBy(p => p.SoTT).Distinct().ToList();

                        var maDVs = qmnt.Select(o => o.MaDV).ToList();
                        var dichVucts = _data.DichVucts.Where(o => maDVs.Contains(o.MaDV ?? 0)).GroupBy(o => o.MaDV).Select(o => new { MaDV = (o.Key ?? 0), STT_F = o.Min(p => p.STT_F) }).ToList();

                        qmnt = qmnt.Join(dichVucts, o => o.MaDV, p => p.MaDV, (o, p) => new { o.ChanDoanBD, o.TenDVRG, o.dchi, o.ylenh, o.ChiDinh1, o.STT, o.TenTN, o.Status, o.LoaiMau, o.NgayThang, o.MaKP, o.MaCB, o.TenKP, o.TenDV, o.SoTT, o.TenRG, o.DonGia, o.MaKPth, o.MaDV, STT_F = (p.STT_F ?? Byte.MaxValue) }).OrderBy(o => o.STT_F).ToList();
                    }

                    if (qmnt.Count > 0)
                    {
                        //if (DungChung.Bien.MaBV == "27001" && qmnt.FirstOrDefault().Status == 0)
                        //{
                        //    string TenRG = qmnt.FirstOrDefault().TenRG;
                        //    var qmnt1 = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.Status == 0)
                        //                 join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                        //                 join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                        //                 join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                        //                 join tn in _data.TieuNhomDVs.Where(p => p.TenRG == TenRG) on dv.IdTieuNhom equals tn.IdTieuNhom
                        //                 select new { cls.STT, tn.TenTN, cd.Status, cls.NgayThang, cls.MaKP, cls.MaCB, kp.TenKP, dv.TenDV, dv.SoTT, tn.TenRG }).OrderBy(p => p.SoTT).ToList();
                        //    rep.TieuDe.Value = qmnt.FirstOrDefault().TenTN.ToUpper();
                        //    if (qmnt.FirstOrDefault().Status == 1)
                        //        rep.ThucHien.Value = "Đã thực hiện";
                        //    DateTime _dt = System.DateTime.Now;
                        //    if (qmnt.FirstOrDefault().NgayThang != null)
                        //        _dt = qmnt.FirstOrDefault().NgayThang.Value;
                        //    rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                        //    rep.MaCB.Value = qmnt.FirstOrDefault().MaCB;
                        //    rep.KPhong.Value = qmnt.FirstOrDefault().TenKP;
                        //    arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                        //    rep.ChanDoan.Value = arrThongTinBNKB[1];
                        //    rep.paramBuong.Value = arrThongTinBNKB[2];
                        //    rep.paramGiuong.Value = arrThongTinBNKB[3];
                        //    rep.paramTenKP.Value = arrThongTinBNKB[4];
                        //    rep.DataSource = qmnt1.ToList();
                        //    rep.BindingData();
                        //    rep.CreateDocument();
                        //    frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        //    frm.ShowDialog();
                        //}
                        //else
                        //{
                        rep.TieuDe.Value = qmnt.FirstOrDefault().TenTN.ToUpper();
                        if (qmnt.FirstOrDefault().Status == 1)
                            rep.ThucHien.Value = "Đã thực hiện";
                        DateTime _dt = System.DateTime.Now;
                        if (qmnt.FirstOrDefault().NgayThang != null)
                            _dt = qmnt.FirstOrDefault().NgayThang.Value;
                        rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                        rep.MaCB.Value = qmnt.FirstOrDefault().MaCB;
                        int makpyh = qmnt.FirstOrDefault().MaKPth ?? 0;
                        var kpth = _data.KPhongs.Where(p => p.MaKP == makpyh).ToList();
                        rep.dckp.Text = kpth.Count() > 0 ? (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789" ? kpth.FirstOrDefault().TenKP : (kpth.FirstOrDefault().DChi)) : "";
                        rep.KPhong.Value = qmnt.FirstOrDefault().TenKP;
                        if (DungChung.Bien.MaBV == "30372" || DungChung.Bien.MaBV == "27023")
                        {
                            int makpth = qmnt.FirstOrDefault().MaKPth ?? 0;
                            var kpth1 = _data.KPhongs.Where(p => p.MaKP == makpth).FirstOrDefault(); /*_data.KPhongs.Where(p => p.MaKP == makpth).Select(p => DungChung.Bien.MaBV == "30010" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "30372" || DungChung.Bien.MaBV == "27023" ? p.TenKP : (DungChung.Bien.MaBV == "27001" ? p.DChi : "")).FirstOrDefault();*/
                            rep.KpThucHien.Value = kpth1.TenKP;
                            rep.DiaChiKP.Value = kpth1.DChi;

                        }
                        else
                        {
                            rep.DiaChiKP.Value = qmnt.FirstOrDefault().dchi;
                            rep.KpThucHien.Value = Convert.ToInt32(qmnt.Select(o => o.MaKPth).FirstOrDefault().ToString());
                        }
                        arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                        arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);

                        rep.ChanDoan.Value = qmnt.FirstOrDefault().ChanDoanBD != null || qmnt.FirstOrDefault().ChanDoanBD != "" ? qmnt.FirstOrDefault().ChanDoanBD + ";" : "";//(arrChanDoanBD!=null&& arrChanDoanBD[0] != "") ? arrChanDoanBD[0] + ";" + arrThongTinBNKB[1] : arrThongTinBNKB[1];
                        if (DungChung.Bien.MaBV != "24272")
                        {
                            rep.ChanDoan.Value += DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                        }

                        rep.paramBuong.Value = arrThongTinBNKB[2];
                        rep.paramGiuong.Value = arrThongTinBNKB[3];
                        rep.paramTenKP.Value = arrThongTinBNKB[4];
                        rep.DataSource = qmnt.ToList();
                        rep.BindingData();
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                        //}
                    }
                }
            }
            else
            {
                if (DungChung.Bien.MaBV == "34019")
                {

                    var cls = _data.CLS.Where(p => p.IdCLS == idCLS).FirstOrDefault();
                    DateTime ngaycd = cls != null ? Convert.ToDateTime(cls.NgayThang) : DateTime.Now;
                    var qmnt = (from clsx in _data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => InTongHop ? true : p.IdCLS == idCLS)
                                join bn in _data.BenhNhans.Where(p => p.MaBNhan == _Mabn) on clsx.MaBNhan equals bn.MaBNhan
                                join cd in _data.ChiDinhs.Where(o => InTongHop ? o.Status == 0 : true) on clsx.IdCLS equals cd.IdCLS
                                join kp in _data.KPhongs on clsx.MaKP equals kp.MaKP
                                join kpTH in _data.KPhongs on clsx.MaKPth equals kpTH.MaKP
                                join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                select new
                                {
                                    tn.STT,
                                    tn.TenTN,
                                    cd.Status,
                                    cd.SoPhieu,
                                    clsx.NgayThang,
                                    clsx.MaKP,
                                    dv.SoTT,
                                    clsx.MaCB,
                                    kp.TenKP,
                                    dv.TenDV,
                                    clsx.MaKPth,
                                    TenKPth = kpTH.TenKP,
                                    DiaChiKPth = kpTH.DChi,
                                    clsx.CapCuu,
                                    bn.NgaySinh,
                                    bn.ThangSinh,
                                    bn.NamSinh,
                                    bn.DTuong,
                                    bn.TenBNhan,
                                    bn.GTinh,
                                    bn.DChi,
                                    bn.SThe,
                                    bn.HanBHDen,
                                    SoLuong = 1,
                                    ThoiGianDuKien = "",
                                    bn.HanBHTu,
                                    clsx.BarCode,
                                    IsTrongBH = (cd.TrongBH == 1),
                                    IDP = bn.IDPerson
                                }).OrderBy(p => p.SoTT).ToList();

                    for (int i = 0; i < 2; i++)
                    {
                        var qmnt1 = qmnt.Where(o => o.IsTrongBH == (i == 0)).ToList();
                        if (qmnt1.Count > 0)
                        {
                            repPhieuXetNghiem_34019_A4 rep = new repPhieuXetNghiem_34019_A4();//6
                            rep.xrPictureBox1.Image = QLBV.DungChung.Ham.GetLogo();
                            rep.SoPhieu.Value = qmnt1.FirstOrDefault().SoPhieu;
                            rep.MaDieuTri.Value = _Mabn;
                            rep.MaBN.Value = qmnt1.FirstOrDefault().IDP;
                            rep.TenBV.Value = DungChung.Bien.TenCQ.ToUpper();
                            var hthong = _data.HTHONGs.FirstOrDefault(o => o.MaBV == DungChung.Bien.MaBV);
                            if (hthong != null)
                            {
                                rep.DiaChiBV.Value = hthong.DiaChi;
                            }
                            rep.TenPhieu.Value = "PHIẾU TRẢ KẾT QUẢ XÉT NGHIỆM";
                            rep.KPhong.Value = qmnt1.FirstOrDefault().TenKPth + (!string.IsNullOrWhiteSpace(qmnt1.FirstOrDefault().DiaChiKPth) ? (" (" + qmnt1.FirstOrDefault().DiaChiKPth + ")") : "");
                            rep.CapCuu.Value = (qmnt1.FirstOrDefault().CapCuu == true) ? "X" : "";
                            rep.TenBNhan.Value = qmnt1.FirstOrDefault().TenBNhan.ToUpper();
                            rep.NgaySinh.Value = DungChung.Ham.GhepNgaySinh("/", qmnt1.FirstOrDefault().NamSinh, qmnt1.FirstOrDefault().ThangSinh, qmnt1.FirstOrDefault().NgaySinh);
                            rep.GioiTinh.Value = qmnt1.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                            rep.DiaChi.Value = qmnt1.FirstOrDefault().DChi;
                            rep.NgayGio.Value = "Thái Bình, " + DungChung.Ham.NgaySangChu(qmnt1.FirstOrDefault().NgayThang.Value);
                            //if (!string.IsNullOrWhiteSpace(qmnt1.FirstOrDefault().DTuong) && qmnt1.FirstOrDefault().DTuong == "BHYT")
                            //{
                            //    rep.BHYT.Value = "X";
                            //}
                            //else
                            //    rep.ThuPhi.Value = "X";
                            if (i == 0)
                                rep.BHYT.Value = "X";
                            else
                                rep.ThuPhi.Value = "X";
                            rep.CapCuu.Value = (qmnt1.FirstOrDefault().CapCuu == true) ? "X" : "";

                            if (i == 0)
                            {
                                if (!string.IsNullOrWhiteSpace(qmnt1.FirstOrDefault().SThe))
                                {
                                    rep.HanThe.Value = qmnt1.FirstOrDefault().HanBHDen != null ? qmnt1.FirstOrDefault().HanBHDen.Value.ToString("dd/MM/yyyy") : "";
                                    rep.HanTu.Value = qmnt1.FirstOrDefault().HanBHTu != null ? qmnt1.FirstOrDefault().HanBHTu.Value.ToString("dd/MM/yyyy") : "";
                                    rep.SThe1.Value = qmnt1.FirstOrDefault().SThe.Substring(0, 2);
                                    rep.SThe2.Value = qmnt1.FirstOrDefault().SThe.Substring(2, 1);
                                    rep.SThe3.Value = qmnt1.FirstOrDefault().SThe.Substring(3, 2);
                                    rep.SThe4.Value = qmnt1.FirstOrDefault().SThe.Substring(5, 2);
                                    rep.SThe5.Value = qmnt1.FirstOrDefault().SThe.Substring(7, 3);
                                    rep.SThe6.Value = qmnt1.FirstOrDefault().SThe.Substring(10, 5);
                                }
                            }
                            rep.paramTenKP.Value = qmnt1.FirstOrDefault().TenKP;
                            var maKp = (qmnt1.FirstOrDefault().MaKP == null ? 0 : qmnt1.FirstOrDefault().MaKP.Value);
                            var kbcd = (from bnkb in _data.BNKBs.Where(p => p.MaBNhan == _Mabn && p.MaKP == maKp)
                                        select bnkb).ToList();
                            if (kbcd != null && kbcd.Count > 0)
                            {
                                rep.BenhChinh.Value = kbcd.FirstOrDefault().ChanDoan + " (" + kbcd.FirstOrDefault().MaICD + ")";
                                rep.BenhPhu.Value = kbcd.FirstOrDefault().BenhKhac;
                                if (!string.IsNullOrWhiteSpace(kbcd.FirstOrDefault().Buong))
                                {
                                    var spBuong = kbcd.FirstOrDefault().Buong.Split(';');
                                    if (spBuong != null && spBuong.Count() > 0)
                                    {
                                        rep.paramBuong.Value = spBuong[spBuong.Count() - 1];
                                    }
                                }
                                if (!string.IsNullOrWhiteSpace(kbcd.FirstOrDefault().Giuong))
                                {
                                    var spGiuong = kbcd.FirstOrDefault().Giuong.Split(';');
                                    if (spGiuong != null && spGiuong.Count() > 0)
                                    {
                                        rep.paramGiuong.Value = spGiuong[spGiuong.Count() - 1];
                                    }
                                }
                            }
                            //rep.YCKT.Value = qmnt1.FirstOrDefault().TenDV;
                            rep.BindingData();
                            rep.DataSource = qmnt1.ToList();
                            rep.CreateDocument();
                            if (PrintNow)
                            {
                                ReportPrintTool rpt = new ReportPrintTool(rep);
                                rpt.Print();
                            }
                            else
                            {
                                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                frm.ShowDialog();
                            }
                        }
                    }
                }
                else
                {
                    using (BaoCao.repPhieuChiDinh_XetNghiem_A4 rep = new BaoCao.repPhieuChiDinh_XetNghiem_A4(InTongHop))
                    {
                        rep.MauSo.Value = "MS...../BV - 01";
                        rep.MaBNhan.Value = _Mabn;

                        if (DungChung.Bien.MaBV == "27023")
                            rep.SoPhieu.Value = _so;
                        else if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                        {
                            //rep.lab3.Text = "Mã BN:";
                            rep.IDCLS.Value = "Mã BN: " + _Mabn;
                            var bn = (from a in _data.CLS.Where(p => p.MaBNhan == _Mabn && p.IdCLS == idCLS) select new { a.CapCuu }).ToList();
                            rep.Thuong.Value = (bn.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.CapCuu.Value = (bn.FirstOrDefault().CapCuu == true) ? "X" : "";
                            //rep.IDCLS.Value = "Só phiếu: " + idCLS;
                            rep.SoPhieu.Value = idCLS;
                        }
                        else
                            rep.SoPhieu.Value = idCLS;
                        var parnt = (from bn in _data.BenhNhans
                                     where bn.MaBNhan == _Mabn
                                     select new
                                     {
                                         bn.TenBNhan,
                                         bn.MaBNhan,
                                         bn.DChi,
                                         bn.GTinh, //bn.CapCuu,
                                         bn.Tuoi,
                                         bn.SThe,
                                         bn.NoiTru
                                     }).ToList();
                        if (parnt.Count > 0)
                        {
                            rep.DiaChi.Value = parnt.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _Mabn, DungChung.Bien.formatAge);
                            rep.TenBNhan.Value = parnt.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(parnt.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            if (parnt.FirstOrDefault().SThe.Length == 15)
                            {
                                rep.SThe1.Value = parnt.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = parnt.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = parnt.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = parnt.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = parnt.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (parnt.FirstOrDefault().NoiTru == 1)
                            {
                                var SoVV = _data.VaoViens.Where(p => p.MaBNhan == _Mabn).Select(p => p.SoVV).FirstOrDefault();
                                if (SoVV != null)
                                    rep.SoVV.Value = "Số VV: " + SoVV.ToString();
                            }
                        }
                        if (InTongHop)
                        {
                            int _status = 0;
                            var kt = _data.CLS.Where(p => p.MaBNhan == _Mabn && p.IdCLS == idCLS).ToList();
                            if (kt.Count > 0 && kt.FirstOrDefault().Status == 1)
                                _status = 1;
                            var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn)
                                        join cd in _data.ChiDinhs.Where(p => p.Status == _status) on cls.IdCLS equals cd.IdCLS
                                        join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                        join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                        join bnkb in _data.BNKBs on cls.MaBNhan equals bnkb.MaBNhan
                                        join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                        where (tn.TenRG.Contains("XN"))
                                        select new
                                        {
                                            bnkb.ChanDoanBD,
                                            kp.IsDongY,
                                            STTcd = cls.STT,
                                            tn.STT,
                                            tn.TenTN,
                                            cd.Status,
                                            cls.NgayThang,
                                            cls.MaKP,
                                            cls.MaCB,
                                            kp.TenKP,
                                            dv.SoTT,
                                            TenDV = DungChung.Bien.MaBV == "24272" ? dv.TenRG : dv.TenDV,
                                            cls.MaKPth,
                                            cd.DonGia,
                                            dv.MaDV,
                                            STT_F = Byte.MaxValue
                                        }).OrderBy(p => p.SoTT).ToList();

                            if (DungChung.Bien.MaBV == "30372")
                            {
                                var maDVs = qmnt.Select(o => o.MaDV).ToList();
                                var dichVucts = _data.DichVucts.Where(o => maDVs.Contains(o.MaDV ?? 0)).GroupBy(o => o.MaDV).Select(o => new { MaDV = (o.Key ?? 0), STT_F = o.Min(p => p.STT_F) }).ToList();

                                qmnt = qmnt.Join(dichVucts, o => o.MaDV, p => p.MaDV, (o, p) => new
                                {
                                    o.ChanDoanBD,
                                    o.IsDongY,
                                    o.STTcd,
                                    o.STT,
                                    o.TenTN,
                                    o.Status,
                                    o.NgayThang,
                                    o.MaKP,
                                    o.MaCB,
                                    o.TenKP,
                                    o.SoTT,
                                    o.TenDV,
                                    o.MaKPth,
                                    o.DonGia,
                                    o.MaDV,
                                    STT_F = (p.STT_F ?? Byte.MaxValue)
                                }).OrderBy(o => o.STT_F).ToList();
                            }

                            if (qmnt.Count > 0)
                            {
                                rep.STT.Value = qmnt.FirstOrDefault().STTcd;
                                rep.TieuDe.Value = "XÉT NGHIỆM";
                                if (qmnt.FirstOrDefault().Status == 1)
                                    rep.ThucHien.Value = "Đã thực hiện";
                                DateTime _dt = System.DateTime.Now;
                                if (qmnt.FirstOrDefault().NgayThang != null)
                                    _dt = qmnt.FirstOrDefault().NgayThang.Value;
                                rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                                rep.MaCB.Value = qmnt.FirstOrDefault().MaCB;
                                int makpyh = qmnt.FirstOrDefault().MaKPth ?? 0;
                                var kpth = _data.KPhongs.Where(p => p.MaKP == makpyh).ToList();
                                rep.kpth.Text = kpth.Count() > 0 ? (kpth.FirstOrDefault().DChi) : "";
                                rep.KPhong.Value = qmnt.FirstOrDefault().TenKP.ToUpper();
                                arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                                arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                                rep.ChanDoan.Value = qmnt.FirstOrDefault().ChanDoanBD != null || qmnt.FirstOrDefault().ChanDoanBD != "" ? qmnt.FirstOrDefault().ChanDoanBD + ";" : "";//(arrChanDoanBD!=null&& arrChanDoanBD[0] != "") ? arrChanDoanBD[0] + ";" + arrThongTinBNKB[1] : arrThongTinBNKB[1];
                                rep.ChanDoan.Value += DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                                rep.paramBuong.Value = arrThongTinBNKB[2];
                                rep.paramGiuong.Value = arrThongTinBNKB[3];
                                rep.paramTenKP.Value = arrThongTinBNKB[4];
                                rep.DataSource = qmnt.ToList();
                                rep.BindingData();
                                rep.CreateDocument();
                                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                frm.ShowDialog();
                            }
                        }
                        else
                        {
                            var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idCLS)
                                        join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                        join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                        join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                        join bnkb in _data.BNKBs on new { cls.MaBNhan, cls.MaKP } equals new { bnkb.MaBNhan, bnkb.MaKP }
                                        join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                        select new { bnkb.ChanDoanBD, kp.IsDongY, tn.STT, tn.TenTN, cd.Status, cls.NgayThang, cls.MaKP, dv.SoTT, cls.MaCB, kp.TenKP, TenDV = DungChung.Bien.MaBV == "24272" ? dv.TenRG + " (" + cd.ChiDinh1 + ") " : dv.TenDV + " (" + cd.ChiDinh1 + ")", cls.MaKPth, dv.MaDV, STT_F = Byte.MaxValue }).OrderBy(p => p.SoTT).Distinct().ToList();

                            if (DungChung.Bien.MaBV == "30372")
                            {
                                var maDVs = qmnt.Select(o => o.MaDV).ToList();
                                var dichVucts = _data.DichVucts.Where(o => maDVs.Contains(o.MaDV ?? 0)).GroupBy(o => o.MaDV).Select(o => new { MaDV = (o.Key ?? 0), STT_F = o.Min(p => p.STT_F) }).ToList();

                                qmnt = qmnt.Join(dichVucts, o => o.MaDV, p => p.MaDV, (o, p) => new { o.ChanDoanBD, o.IsDongY, o.STT, o.TenTN, o.Status, o.NgayThang, o.MaKP, o.SoTT, o.MaCB, o.TenKP, o.TenDV, o.MaKPth, o.MaDV, STT_F = (p.STT_F ?? Byte.MaxValue) }).OrderBy(o => o.STT_F).ToList();
                            }

                            if (qmnt.Count > 0)
                            {
                                rep.TieuDe.Value = qmnt.FirstOrDefault().TenTN.ToUpper();
                                if (qmnt.FirstOrDefault().TenTN.ToUpper() == "X-QUANG CT" && DungChung.Bien.MaBV == "30009")
                                {
                                    rep.xrBarCode1.Visible = true;
                                }
                                if (qmnt.FirstOrDefault().Status == 1)
                                    rep.ThucHien.Value = "Đã thực hiện";
                                DateTime _dt = System.DateTime.Now;
                                if (qmnt.FirstOrDefault().NgayThang != null)
                                    _dt = qmnt.FirstOrDefault().NgayThang.Value;
                                rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                                rep.MaCB.Value = qmnt.FirstOrDefault().MaCB;
                                int makpyh = qmnt.FirstOrDefault().MaKPth ?? 0;
                                var kpth = _data.KPhongs.Where(p => p.MaKP == makpyh).ToList();
                                rep.kpth.Text = kpth.Count() > 0 ? (kpth.FirstOrDefault().DChi) : "";
                                rep.KPhong.Value = qmnt.FirstOrDefault().TenKP.ToUpper();
                                arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                                arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                                if (qmnt.FirstOrDefault().IsDongY == true && DungChung.Bien.MaBV == "24297")
                                {
                                    rep.ChanDoan.Value = qmnt.FirstOrDefault().ChanDoanBD != null || qmnt.FirstOrDefault().ChanDoanBD != "" ? qmnt.FirstOrDefault().ChanDoanBD + ";" : "";
                                    rep.ChanDoan.Value += DungChung.Ham.GetChanDoanKB_24297(_data, _Mabn);
                                }
                                else
                                {
                                    rep.ChanDoan.Value = qmnt.FirstOrDefault().ChanDoanBD != null || qmnt.FirstOrDefault().ChanDoanBD != "" ? qmnt.FirstOrDefault().ChanDoanBD + ";" : "";//(arrChanDoanBD!=null&& arrChanDoanBD[0] != "") ? arrChanDoanBD[0] + ";" + arrThongTinBNKB[1] : arrThongTinBNKB[1];
                                    if (DungChung.Bien.MaBV != "24272")
                                    {
                                        rep.ChanDoan.Value += DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];

                                    }
                                }

                                rep.paramBuong.Value = arrThongTinBNKB[2];
                                rep.paramGiuong.Value = arrThongTinBNKB[3];
                                rep.paramTenKP.Value = arrThongTinBNKB[4];
                                rep.DataSource = qmnt.ToList();
                                rep.BindingData();
                                rep.CreateDocument();
                                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                frm.ShowDialog();
                            }
                        }
                    }

                }
            }
            QLBV.Utilities.Helppers.MemoryManagement.FlushMemory();
        }
        //không cho viện nào dùng
        public static void _setParamInChiDinh_XN_30372(QLBV_Database.QLBVEntities _data, frmIn frm, string _MauIn, int _Mabn, int idCLS, bool InTongHop, string code, List<int> _lIdCLS, List<int?> _lMaDV, int _makp, string TTN)
        {
            if (_MauIn == "A5")
            {
                using (BaoCao.repPhieuChiDinh_XetNghiem rep = new BaoCao.repPhieuChiDinh_XetNghiem(InTongHop))
                {
                    rep.MauSo.Value = "MS...../BV - 01";
                    rep.SoPhieu.Value = idCLS;
                    var parnt = (from bn in _data.BenhNhans
                                 join kp in _data.KPhongs on bn.MaKP equals kp.MaKP
                                 join ttbx in _data.TTboXungs on bn.MaBNhan equals ttbx.MaBNhan
                                 join bnkb in _data.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                                 join cls in _data.CLS on bn.MaBNhan equals cls.MaBNhan
                                 join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                 join clsct in _data.CLScts on cd.IDCD equals clsct.IDCD
                                 join dvct in _data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                 join dv in _data.DichVus on dvct.MaDV equals dv.MaDV
                                 where bn.MaBNhan == _Mabn
                                 select new
                                 {
                                     kp.MaKP,
                                     cls.MaKPth,
                                     kp.TenKP,
                                     dv.DonGia,
                                     dv.MaDV,
                                     bnkb.MaICD,
                                     ttbx.DThoai,
                                     bn.CapCuu,
                                     bn.DTuong,
                                     bn.TenBNhan,
                                     bn.MaBNhan,
                                     bn.DChi,
                                     bn.GTinh,// bn.CapCuu,
                                     bn.Tuoi,
                                     bn.SThe
                                 }).ToList();
                    if (parnt.Count > 0)
                    {
                        rep.DiaChi.Value = parnt.FirstOrDefault().DChi;
                        rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _Mabn, DungChung.Bien.formatAge);
                        rep.TenBNhan.Value = parnt.FirstOrDefault().TenBNhan.ToUpper();
                        //rep.MaBNhan
                        int gioiTinh = int.Parse(parnt.FirstOrDefault().GTinh.ToString());
                        if (gioiTinh == 1)
                        {
                            rep.Nu.Value = "/";
                        }
                        else if (gioiTinh == 0)
                        {
                            rep.Nam.Value = "/";
                        }
                        if (parnt.FirstOrDefault().SThe.Length == 15)
                        {
                            rep.SThe1.Value = parnt.FirstOrDefault().SThe.Substring(0, 3);
                            rep.SThe2.Value = parnt.FirstOrDefault().SThe.Substring(3, 2);
                            rep.SThe3.Value = parnt.FirstOrDefault().SThe.Substring(5, 2);
                            rep.SThe4.Value = parnt.FirstOrDefault().SThe.Substring(7, 3);
                            rep.SThe5.Value = parnt.FirstOrDefault().SThe.Substring(10, 5);
                        }
                    }
                    if (InTongHop)
                    {
                        int _status = 0;
                        var kt = _data.CLS.Where(p => p.MaBNhan == _Mabn && p.IdCLS == idCLS).ToList();
                        if (kt.Count > 0 && kt.FirstOrDefault().Status == 1)
                            _status = 1;
                        var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn && (code == "" ? true : p.Code == code))
                                    join cd in _data.ChiDinhs.Where(p => p.Status == _status) on cls.IdCLS equals cd.IdCLS
                                    join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                    join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                    join bnkb in _data.BNKBs on cls.MaBNhan equals bnkb.MaBNhan
                                    join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                    where (tn.TenRG.Contains("XN"))
                                    select new { bnkb.ChanDoanBD, kp.IsDongY, dv.SLuong, cls.Code, STTcd = cls.STT, cls.IdCLS, tn.TenTN, tn.STT, cd.Status, dv.SoTT, cls.NgayThang, cls.MaKP, cls.MaCB, kp.TenKP, dv.TenDV, cls.MaKPth, cd.DonGia, dv.MaDV, STT_F = Byte.MaxValue }).OrderBy(p => p.STT).ThenBy(p => p.SoTT).ToList();

                        var maDVs = qmnt.Select(o => o.MaDV).ToList();
                        var dichVucts = _data.DichVucts.Where(o => maDVs.Contains(o.MaDV ?? 0)).GroupBy(o => o.MaDV).Select(o => new { MaDV = (o.Key ?? 0), STT_F = o.Min(p => p.STT_F) }).ToList();

                        qmnt = qmnt.Join(dichVucts, o => o.MaDV, p => p.MaDV, (o, p) => new { o.ChanDoanBD, IsDongY = o.IsDongY, SLuong = o.SLuong, Code = o.Code, STTcd = o.STTcd, IdCLS = o.IdCLS, TenTN = o.TenTN, STT = o.STT, Status = o.Status, SoTT = o.SoTT, NgayThang = o.NgayThang, MaKP = o.MaKP, MaCB = o.MaCB, TenKP = o.TenKP, TenDV = o.TenDV, MaKPth = o.MaKPth, DonGia = o.DonGia, MaDV = o.MaDV, STT_F = (p.STT_F ?? Byte.MaxValue) }).ToList();
                        rep.KpThucHien.Value = Convert.ToInt32(qmnt.Select(o => o.MaKPth).FirstOrDefault().ToString());
                        if (qmnt.Count > 0)
                        {
                            try
                            {
                                rep.code.Value = Convert.ToInt64(qmnt.FirstOrDefault().Code);
                            }
                            catch { }
                            rep.STT.Value = qmnt.FirstOrDefault().STTcd;
                            rep.TieuDe.Value = "XÉT NGHIỆM";
                            if (qmnt.FirstOrDefault().Status == 1)
                                rep.ThucHien.Value = "Đã thực hiện";
                            DateTime _dt = System.DateTime.Now;
                            if (qmnt.FirstOrDefault().NgayThang != null)
                                _dt = qmnt.FirstOrDefault().NgayThang.Value;
                            rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                            rep.MaCB.Value = qmnt.FirstOrDefault().MaCB;
                            rep.KPhong.Value = qmnt.FirstOrDefault().TenKP.ToUpper();
                            rep.Parameters["TenCQ"].Value = DungChung.Bien.TenCQ.ToUpper();
                            int makpyh = qmnt.FirstOrDefault().MaKPth ?? 0;
                            var kpth = _data.KPhongs.Where(p => p.MaKP == makpyh).ToList();
                            rep.dckp.Text = kpth.Count() > 0 ? (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789" ? kpth.FirstOrDefault().TenKP : (kpth.FirstOrDefault().DChi)) : "";
                            arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                            arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);


                            rep.ChanDoan.Value = arrThongTinBNKB[1];

                            rep.paramBuong.Value = arrThongTinBNKB[2];
                            rep.paramGiuong.Value = arrThongTinBNKB[3];
                            rep.paramTenKP.Value = arrThongTinBNKB[4];
                            rep.DataSource = qmnt.ToList();
                            rep.BindingData();
                            rep.CreateDocument();
                            frm.prcIN.PrintingSystem = rep.PrintingSystem;
                            frm.ShowDialog();
                        }
                    }
                    else
                    {
                        var makp = _data.BenhNhans.Where(p => p.MaBNhan == _Mabn).Select(p => p.MaKP).FirstOrDefault();
                        var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idCLS)
                                    join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                    join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                    join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                    join bnkb in _data.BNKBs on cls.MaBNhan equals bnkb.MaBNhan
                                    join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                    where bnkb.MaKP == makp
                                    select new { bnkb.ChanDoanBD, dchi = kp.DChi, ylenh = dv.TenDV + "(" + cd.ChiDinh1 + ")", cd.ChiDinh1, cls.STT, tn.TenTN, cd.Status, cd.LoaiMau, cls.NgayThang, cls.MaKP, cls.MaCB, kp.TenKP, dv.TenDV, dv.SoTT, tn.TenRG, cd.DonGia, cls.MaKPth, dv.MaDV, STT_F = Byte.MaxValue }).OrderBy(p => p.SoTT).ToList();
                        var maDVs = qmnt.Select(o => o.MaDV).ToList();
                        var dichVucts = _data.DichVucts.Where(o => maDVs.Contains(o.MaDV ?? 0)).GroupBy(o => o.MaDV).Select(o => new { MaDV = (o.Key ?? 0), STT_F = o.Min(p => p.STT_F) }).ToList();
                        qmnt = qmnt.Join(dichVucts, o => o.MaDV, p => p.MaDV, (o, p) => new { o.ChanDoanBD, o.dchi, o.ylenh, o.ChiDinh1, o.STT, o.TenTN, o.Status, o.LoaiMau, o.NgayThang, o.MaKP, o.MaCB, o.TenKP, o.TenDV, o.SoTT, o.TenRG, o.DonGia, o.MaKPth, o.MaDV, STT_F = (p.STT_F ?? Byte.MaxValue) }).OrderBy(o => o.STT_F).ToList();
                        if (qmnt.Count > 0)
                        {
                            rep.TieuDe.Value = TTN.ToUpper();
                            if (qmnt.FirstOrDefault().Status == 1)
                                rep.ThucHien.Value = "Đã thực hiện";
                            DateTime _dt = System.DateTime.Now;
                            if (qmnt.FirstOrDefault().NgayThang != null)
                                _dt = qmnt.FirstOrDefault().NgayThang.Value;
                            rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                            rep.MaCB.Value = qmnt.FirstOrDefault().MaCB;
                            int makpyh = qmnt.FirstOrDefault().MaKPth ?? 0;
                            var kpth = _data.KPhongs.Where(p => p.MaKP == makpyh).ToList();
                            rep.dckp.Text = kpth.Count() > 0 ? (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789" ? kpth.FirstOrDefault().TenKP : (kpth.FirstOrDefault().DChi)) : "";
                            rep.KPhong.Value = qmnt.FirstOrDefault().TenKP.ToUpper();
                            rep.DiaChiKP.Value = qmnt.FirstOrDefault().dchi;
                            rep.Parameters["TenCQ"].Value = DungChung.Bien.TenCQ.ToUpper();
                            int makpth = qmnt.FirstOrDefault().MaKPth ?? 0;
                            var kpth1 = _data.KPhongs.Where(p => p.MaKP == makpth).Select(p => DungChung.Bien.MaBV == "30010" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "30372" || DungChung.Bien.MaBV == "56789" ? p.TenKP : (DungChung.Bien.MaBV == "27001" ? p.DChi : "")).FirstOrDefault();
                            rep.KpThucHien.Value = kpth1;
                            arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                            arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                            rep.ChanDoan.Value = arrThongTinBNKB[1];
                            rep.paramBuong.Value = arrThongTinBNKB[2];
                            rep.paramGiuong.Value = arrThongTinBNKB[3];
                            rep.paramTenKP.Value = arrThongTinBNKB[4];
                            rep.DataSource = qmnt.ToList();
                            rep.BindingData();
                            rep.CreateDocument();
                            frm.prcIN.PrintingSystem = rep.PrintingSystem;
                            frm.ShowDialog();
                        }
                    }
                }

            }
            else if (_MauIn == "30372")
            {
                using (BaoCao.Rep_PhieuChiDinh_CLS_30372 rep = new BaoCao.Rep_PhieuChiDinh_CLS_30372(InTongHop))
                {
                    rep.Parameters["TenCQ"].Value = DungChung.Bien.TenCQ;
                    rep.Parameters["DChiCQ"].Value = DungChung.Bien.DiaChi;
                    var SDTCQ = _data.HTHONGs.Select(p => p.SDT).FirstOrDefault();
                    rep.Parameters["SDTCQ"].Value = "SĐT: " + SDTCQ;
                    rep.Parameters["MaBN"].Value = "Mã BN: " + _Mabn.ToString();
                    rep.Parameters["SoPhieu"].Value = "Số phiếu: " + idCLS;
                    var parnt = (from bn in _data.BenhNhans
                                 join kp in _data.KPhongs on bn.MaKP equals kp.MaKP
                                 join ttbx in _data.TTboXungs on bn.MaBNhan equals ttbx.MaBNhan
                                 join bnkb in _data.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                                 join cls in _data.CLS on bn.MaBNhan equals cls.MaBNhan
                                 join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                 join clsct in _data.CLScts on cd.IDCD equals clsct.IDCD
                                 join dvct in _data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                 join dv in _data.DichVus on dvct.MaDV equals dv.MaDV
                                 where bn.MaBNhan == _Mabn
                                 select new
                                 {
                                     kp.MaKP,
                                     cls.MaKPth,
                                     kp.TenKP,
                                     dv.DonGia,
                                     dv.MaDV,
                                     bnkb.MaICD,
                                     ttbx.DThoai,
                                     bn.CapCuu,
                                     bn.DTuong,
                                     bn.TenBNhan,
                                     bn.MaBNhan,
                                     bn.DChi,
                                     bn.GTinh,// bn.CapCuu,
                                     bn.Tuoi,
                                     bn.SThe,
                                     bn.NgaySinh,
                                     bn.ThangSinh,
                                     bn.NamSinh,
                                     bn.MucHuong,
                                 }).ToList();
                    if (parnt.Count > 0)
                    {
                        int mh = Convert.ToInt32(parnt.FirstOrDefault().MucHuong);
                        rep.Parameters["DiaChi"].Value = parnt.FirstOrDefault().DChi;
                        rep.Parameters["DienThoai"].Value = parnt.FirstOrDefault().DThoai;
                        rep.Parameters["NgaySinh"].Value = parnt.FirstOrDefault().NgaySinh + "/" + parnt.FirstOrDefault().ThangSinh + "/" + parnt.FirstOrDefault().NamSinh;

                        if (mh == 2 || mh == 1 || mh == 5)
                        {
                            rep.Parameters["MucHuong"].Value = "100%";
                        }
                        else if (mh == 3)
                        {
                            rep.Parameters["MucHuong"].Value = "95%";
                        }
                        else if (mh == 4)
                        {
                            rep.Parameters["MucHuong"].Value = "80%";
                        }
                        rep.Parameters["Tuoi"].Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.TinhTuoiBenhNhan(_data, _Mabn) : DungChung.Ham.TuoitheoThang(_data, _Mabn, DungChung.Bien.formatAge);
                        rep.Parameters["TenBNhan"].Value = parnt.FirstOrDefault().TenBNhan.ToUpper();
                        //rep.MaBNhan
                        int gioiTinh = int.Parse(parnt.FirstOrDefault().GTinh.ToString());
                        if (gioiTinh == 1)
                        {
                            rep.Parameters["GTinh"].Value = "Nam";
                        }
                        else if (gioiTinh == 0)
                        {
                            rep.Parameters["GTinh"].Value = "Nữ";
                        }
                        rep.Parameters["SThe1"].Value = parnt.FirstOrDefault().SThe;
                    }
                    if (InTongHop)
                    {
                        int _status = 0;
                        var kt = _data.CLS.Where(p => p.MaBNhan == _Mabn && p.IdCLS == idCLS).ToList();
                        if (kt.Count > 0 && kt.FirstOrDefault().Status == 1)
                            _status = 1;
                        var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn && (code == "" ? true : p.Code == code))
                                    join cd in _data.ChiDinhs.Where(p => p.Status == _status) on cls.IdCLS equals cd.IdCLS
                                    join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                    join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                    join bnkb in _data.BNKBs on cls.MaBNhan equals bnkb.MaBNhan
                                    join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                    where (tn.TenRG.Contains("XN"))
                                    select new { bnkb.ChanDoanBD, kp.IsDongY, dv.SLuong, cls.Code, STTcd = cls.STT, cls.IdCLS, tn.TenTN, tn.STT, cd.Status, dv.SoTT, cls.NgayThang, cls.MaKP, cls.MaCB, kp.TenKP, tendv = ((dv.TenDV) + " (" + cd.ChiDinh1 + ")"), cls.MaKPth, cd.DonGia, dv.MaDV, STT_F = Byte.MaxValue }).OrderBy(p => p.STT).ThenBy(p => p.SoTT).ToList();
                        var maDVs = qmnt.Select(o => o.MaDV).ToList();
                        var dichVucts = _data.DichVucts.Where(o => maDVs.Contains(o.MaDV ?? 0)).GroupBy(o => o.MaDV).Select(o => new { MaDV = (o.Key ?? 0), STT_F = o.Min(p => p.STT_F) }).ToList();

                        qmnt = qmnt.Join(dichVucts, o => o.MaDV, p => p.MaDV, (o, p) => new { o.ChanDoanBD, IsDongY = o.IsDongY, SLuong = o.SLuong, Code = o.Code, STTcd = o.STTcd, IdCLS = o.IdCLS, TenTN = o.TenTN, STT = o.STT, Status = o.Status, SoTT = o.SoTT, NgayThang = o.NgayThang, MaKP = o.MaKP, MaCB = o.MaCB, TenKP = o.TenKP, tendv = o.tendv, MaKPth = o.MaKPth, DonGia = o.DonGia, MaDV = o.MaDV, STT_F = (p.STT_F ?? Byte.MaxValue) }).ToList();
                        if (qmnt.Count > 0)
                        {
                            DateTime _dt = System.DateTime.Now;
                            if (qmnt.FirstOrDefault().NgayThang != null)
                                _dt = qmnt.FirstOrDefault().NgayThang.Value;
                            int makpyh = qmnt.FirstOrDefault().MaKPth ?? 0;
                            var kpth = _data.KPhongs.Where(p => p.MaKP == makpyh).ToList();
                            arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                            arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                            rep.Parameters["ChanDoan"].Value = qmnt.FirstOrDefault().ChanDoanBD != null || qmnt.FirstOrDefault().ChanDoanBD != "" ? qmnt.FirstOrDefault().ChanDoanBD + ";" : "";//(arrChanDoanBD!=null&& arrChanDoanBD[0] != "") ? arrChanDoanBD[0] + ";" + arrThongTinBNKB[1] : arrThongTinBNKB[1];
                            rep.Parameters["ChanDoan"].Value += DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];

                            rep.DataSource = qmnt.ToList();
                            rep.BindingData();
                            rep.CreateDocument();
                            frm.prcIN.PrintingSystem = rep.PrintingSystem;
                            frm.ShowDialog();
                        }
                    }
                    else
                    {
                        var kpcd = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => _lIdCLS.Contains(p.IdCLS))
                                    join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                    join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                    select new
                                    {
                                        kp.TenKP
                                    }).ToList();
                        var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => _lIdCLS.Contains(p.IdCLS))
                                    join cb in _data.CanBoes on cls.MaCB equals cb.MaCB
                                    join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                    join kp in _data.KPhongs on cls.MaKPth equals kp.MaKP
                                    join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                    join bnkb in _data.BNKBs on cls.MaBNhan equals bnkb.MaBNhan
                                    join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                    join ndv in _data.NhomDVs on tn.IDNhom equals ndv.IDNhom
                                    where _lMaDV.Contains(dv.MaDV)
                                    where bnkb.MaKP == _makp
                                    select new { bnkb.ChanDoanBD, TrongDM = cd.TrongBH, NoiTH = kp.DChi, DonGiaDV = dv.DonGiaDV2, DonGiaBHYT = dv.DonGiaBHYT, Tnhom = ndv.TenNhom, dchi = kp.DChi, tendv = (!string.IsNullOrEmpty(cd.ChiDinh1)) ? dv.TenDV + "(" + cd.ChiDinh1 + ")" : dv.TenDV, cd.ChiDinh1, cls.STT, tn.TenTN, cd.Status, cd.LoaiMau, cls.NgayThang, cls.MaKP, cb.TenCB, dv.TenDV, dv.SoTT, tn.TenRG, cd.DonGia, dv.MaDV, STT_F = Byte.MaxValue }).OrderBy(p => p.SoTT).Distinct().ToList();
                        var maDVs = qmnt.Select(o => o.MaDV).ToList();
                        var dichVucts = _data.DichVucts.Where(o => maDVs.Contains(o.MaDV ?? 0)).GroupBy(o => o.MaDV).Select(o => new { MaDV = (o.Key ?? 0), STT_F = o.Min(p => p.STT_F) }).ToList();

                        qmnt = qmnt.Join(dichVucts, o => o.MaDV, p => p.MaDV, (o, p) => new { o.ChanDoanBD, o.TrongDM, o.NoiTH, o.DonGiaDV, o.DonGiaBHYT, o.Tnhom, o.dchi, o.tendv, o.ChiDinh1, o.STT, o.TenTN, o.Status, o.LoaiMau, o.NgayThang, o.MaKP, o.TenCB, o.TenDV, o.SoTT, o.TenRG, o.DonGia, o.MaDV, STT_F = (p.STT_F ?? Byte.MaxValue) }).OrderBy(o => o.STT_F).ToList();
                        if (qmnt.Count > 0)
                        {
                            DateTime _dt = System.DateTime.Now;
                            if (qmnt.FirstOrDefault().NgayThang != null)
                                _dt = qmnt.FirstOrDefault().NgayThang.Value;
                            double tienbhyt = qmnt.Where(p => p.TrongDM == 1).Sum(p => p.DonGiaBHYT);
                            double tiendv = qmnt.Where(p => p.TrongDM == 0).Sum(p => p.DonGiaDV);
                            if (tiendv != 0)
                            {
                                rep.Parameters["TongDV"].Value = tiendv.ToString("###,###.##");
                            }
                            else
                                rep.Parameters["TongDV"].Value = "0";
                            if (tienbhyt != 0)
                            {
                                rep.Parameters["TongBHYT"].Value = tienbhyt.ToString("###,###.##");
                            }
                            else
                                rep.Parameters["TongBHYT"].Value = "0";
                            rep.Parameters["ThoiGianCD"].Value = qmnt.FirstOrDefault().NgayThang.Value;
                            rep.Parameters["ThoiGianIN"].Value = DungChung.Ham.NgaySangChu(DateTime.Now, 8);
                            rep.Parameters["SL"].Value = "1";
                            rep.Parameters["TenCB"].Value = qmnt.FirstOrDefault().TenCB;
                            rep.Parameters["TenKP"].Value = kpcd.FirstOrDefault().TenKP;
                            arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                            arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                            rep.Parameters["ChanDoan"].Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            rep.DataSource = qmnt.ToList();
                            rep.BindingData();
                            rep.CreateDocument();
                            frm.prcIN.PrintingSystem = rep.PrintingSystem;
                            frm.ShowDialog();
                        }
                    }
                }
            }
            else
            {
                using (BaoCao.repPhieuChiDinh_XetNghiem_A4 rep = new BaoCao.repPhieuChiDinh_XetNghiem_A4(InTongHop))
                {
                    rep.MauSo.Value = "MS...../BV - 01";
                    rep.MaBNhan.Value = _Mabn;
                    rep.SoPhieu.Value = idCLS;
                    var parnt = (from bn in _data.BenhNhans
                                 where bn.MaBNhan == _Mabn
                                 select new
                                 {
                                     bn.TenBNhan,
                                     bn.MaBNhan,
                                     bn.DChi,
                                     bn.GTinh, //bn.CapCuu,
                                     bn.Tuoi,
                                     bn.SThe,
                                     bn.NoiTru
                                 }).ToList();
                    if (parnt.Count > 0)
                    {
                        rep.DiaChi.Value = parnt.FirstOrDefault().DChi;
                        rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _Mabn, DungChung.Bien.formatAge);
                        rep.TenBNhan.Value = parnt.FirstOrDefault().TenBNhan.ToUpper();
                        int gioiTinh = int.Parse(parnt.FirstOrDefault().GTinh.ToString());
                        if (gioiTinh == 1)
                        {
                            rep.Nu.Value = "/";
                        }
                        else if (gioiTinh == 0)
                        {
                            rep.Nam.Value = "/";
                        }
                        if (parnt.FirstOrDefault().SThe.Length == 15)
                        {
                            rep.SThe1.Value = parnt.FirstOrDefault().SThe.Substring(0, 3);
                            rep.SThe2.Value = parnt.FirstOrDefault().SThe.Substring(3, 2);
                            rep.SThe3.Value = parnt.FirstOrDefault().SThe.Substring(5, 2);
                            rep.SThe4.Value = parnt.FirstOrDefault().SThe.Substring(7, 3);
                            rep.SThe5.Value = parnt.FirstOrDefault().SThe.Substring(10, 5);
                        }
                        if (parnt.FirstOrDefault().NoiTru == 1)
                        {
                            var SoVV = _data.VaoViens.Where(p => p.MaBNhan == _Mabn).Select(p => p.SoVV).FirstOrDefault();
                            if (SoVV != null)
                                rep.SoVV.Value = "Số VV: " + SoVV.ToString();
                        }
                    }
                    if (InTongHop)
                    {
                        int _status = 0;
                        var kt = _data.CLS.Where(p => p.MaBNhan == _Mabn && p.IdCLS == idCLS).ToList();
                        if (kt.Count > 0 && kt.FirstOrDefault().Status == 1)
                            _status = 1;
                        var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn)
                                    join cd in _data.ChiDinhs.Where(p => p.Status == _status) on cls.IdCLS equals cd.IdCLS
                                    join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                    join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                    join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                    where (tn.TenRG.Contains("XN"))
                                    select new
                                    {
                                        kp.IsDongY,
                                        STTcd = cls.STT,
                                        tn.STT,
                                        tn.TenTN,
                                        cd.Status,
                                        cls.NgayThang,
                                        cls.MaKP,
                                        cls.MaCB,
                                        kp.TenKP,
                                        dv.SoTT,
                                        TenDV = dv.TenDV,
                                        cls.MaKPth,
                                        cd.DonGia,
                                        dv.MaDV,
                                        STT_F = Byte.MaxValue
                                    }).OrderBy(p => p.SoTT).ToList();


                        var maDVs = qmnt.Select(o => o.MaDV).ToList();
                        var dichVucts = _data.DichVucts.Where(o => maDVs.Contains(o.MaDV ?? 0)).GroupBy(o => o.MaDV).Select(o => new { MaDV = (o.Key ?? 0), STT_F = o.Min(p => p.STT_F) }).ToList();

                        qmnt = qmnt.Join(dichVucts, o => o.MaDV, p => p.MaDV, (o, p) => new
                        {
                            o.IsDongY,
                            o.STTcd,
                            o.STT,
                            o.TenTN,
                            o.Status,
                            o.NgayThang,
                            o.MaKP,
                            o.MaCB,
                            o.TenKP,
                            o.SoTT,
                            o.TenDV,
                            o.MaKPth,
                            o.DonGia,
                            o.MaDV,
                            STT_F = (p.STT_F ?? Byte.MaxValue)
                        }).OrderBy(o => o.STT_F).ToList();

                        if (qmnt.Count > 0)
                        {
                            rep.STT.Value = qmnt.FirstOrDefault().STTcd;
                            rep.TieuDe.Value = "XÉT NGHIỆM";
                            if (qmnt.FirstOrDefault().Status == 1)
                                rep.ThucHien.Value = "Đã thực hiện";
                            DateTime _dt = System.DateTime.Now;
                            if (qmnt.FirstOrDefault().NgayThang != null)
                                _dt = qmnt.FirstOrDefault().NgayThang.Value;
                            rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                            rep.MaCB.Value = qmnt.FirstOrDefault().MaCB;
                            int makpyh = qmnt.FirstOrDefault().MaKPth ?? 0;
                            var kpth = _data.KPhongs.Where(p => p.MaKP == makpyh).ToList();
                            rep.kpth.Text = kpth.Count() > 0 ? (kpth.FirstOrDefault().DChi) : "";
                            rep.KPhong.Value = qmnt.FirstOrDefault().TenKP.ToUpper();
                            arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                            arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                            rep.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            rep.paramBuong.Value = arrThongTinBNKB[2];
                            rep.paramGiuong.Value = arrThongTinBNKB[3];
                            rep.paramTenKP.Value = arrThongTinBNKB[4];
                            rep.DataSource = qmnt.ToList();
                            rep.BindingData();
                            rep.CreateDocument();
                            frm.prcIN.PrintingSystem = rep.PrintingSystem;
                            frm.ShowDialog();
                        }
                    }
                    else
                    {
                        var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idCLS)
                                    join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                    join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                    join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                    join bnkb in _data.BNKBs on cls.MaBNhan equals bnkb.MaBNhan
                                    join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                    select new { bnkb.ChanDoanBD, kp.IsDongY, tn.STT, tn.TenTN, cd.Status, cls.NgayThang, cls.MaKP, dv.SoTT, cls.MaCB, kp.TenKP, TenDV = dv.TenDV + " (" + cd.ChiDinh1 + ")", cls.MaKPth, dv.MaDV, STT_F = Byte.MaxValue }).OrderBy(p => p.SoTT).ToList();


                        var maDVs = qmnt.Select(o => o.MaDV).ToList();
                        var dichVucts = _data.DichVucts.Where(o => maDVs.Contains(o.MaDV ?? 0)).GroupBy(o => o.MaDV).Select(o => new { MaDV = (o.Key ?? 0), STT_F = o.Min(p => p.STT_F) }).ToList();

                        qmnt = qmnt.Join(dichVucts, o => o.MaDV, p => p.MaDV, (o, p) => new { o.ChanDoanBD, o.IsDongY, o.STT, o.TenTN, o.Status, o.NgayThang, o.MaKP, o.SoTT, o.MaCB, o.TenKP, o.TenDV, o.MaKPth, o.MaDV, STT_F = (p.STT_F ?? Byte.MaxValue) }).OrderBy(o => o.STT_F).ToList();

                        if (qmnt.Count > 0)
                        {
                            rep.TieuDe.Value = qmnt.FirstOrDefault().TenTN.ToUpper();
                            if (qmnt.FirstOrDefault().TenTN.ToUpper() == "X-QUANG CT" && DungChung.Bien.MaBV == "30009")
                            {
                                rep.xrBarCode1.Visible = true;
                            }
                            if (qmnt.FirstOrDefault().Status == 1)
                                rep.ThucHien.Value = "Đã thực hiện";
                            DateTime _dt = System.DateTime.Now;
                            if (qmnt.FirstOrDefault().NgayThang != null)
                                _dt = qmnt.FirstOrDefault().NgayThang.Value;
                            rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                            rep.MaCB.Value = qmnt.FirstOrDefault().MaCB;
                            int makpyh = qmnt.FirstOrDefault().MaKPth ?? 0;
                            var kpth = _data.KPhongs.Where(p => p.MaKP == makpyh).ToList();
                            rep.kpth.Text = kpth.Count() > 0 ? (kpth.FirstOrDefault().DChi) : "";
                            rep.KPhong.Value = qmnt.FirstOrDefault().TenKP.ToUpper();
                            arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                            arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                            if (DungChung.Bien.MaBV == "24297" && qmnt.FirstOrDefault().IsDongY == true)
                            {
                                rep.ChanDoan.Value = qmnt.FirstOrDefault().ChanDoanBD != null || qmnt.FirstOrDefault().ChanDoanBD != "" ? qmnt.FirstOrDefault().ChanDoanBD + ";" : "";
                                rep.ChanDoan.Value += DungChung.Ham.GetChanDoanKB_24297(_data, _Mabn);
                            }
                            else
                            {
                                rep.ChanDoan.Value = qmnt.FirstOrDefault().ChanDoanBD != null || qmnt.FirstOrDefault().ChanDoanBD != "" ? qmnt.FirstOrDefault().ChanDoanBD + ";" : "";//(arrChanDoanBD!=null&& arrChanDoanBD[0] != "") ? arrChanDoanBD[0] + ";" + arrThongTinBNKB[1] : arrThongTinBNKB[1];
                                rep.ChanDoan.Value += DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            }

                            rep.paramBuong.Value = arrThongTinBNKB[2];
                            rep.paramGiuong.Value = arrThongTinBNKB[3];
                            rep.paramTenKP.Value = arrThongTinBNKB[4];
                            rep.DataSource = qmnt.ToList();
                            rep.BindingData();
                            rep.CreateDocument();
                            frm.prcIN.PrintingSystem = rep.PrintingSystem;
                            frm.ShowDialog();
                        }
                    }
                }
            }
            QLBV.Utilities.Helppers.MemoryManagement.FlushMemory();
        }
        public static void _setParamInChiDinh_XN(QLBV_Database.QLBVEntities _data, frmIn frm, string _MauIn, int _Mabn, int idCLS, bool InTongHop, string code, List<int> _lIdCLS, List<int?> _lMaDV)
        {
            #region 27023 lấy số trên phiếu : BN nôi trú lấy số bệnh án, bệnh nhân ngoại trú số thứ tự tăng theo ngày
            string _so = "";
            if (DungChung.Bien.MaBV == "27023")
            {
                var bnhan = _data.BenhNhans.Where(p => p.MaBNhan == _Mabn).FirstOrDefault();
                if (bnhan != null)
                {
                    if (bnhan.NoiTru == 1)
                    {
                        var qvv = _data.VaoViens.Where(parameters => parameters.MaBNhan == _Mabn).Select(p => p.SoBA).FirstOrDefault();
                        if (qvv != null)
                            _so = qvv;
                    }
                    else
                    {
                        DateTime tungay = DungChung.Ham.NgayTu(bnhan.NNhap.Value);
                        DateTime denngay = DungChung.Ham.NgayDen(bnhan.NNhap.Value);
                        var qbn = _data.BenhNhans.Where(p => p.NNhap >= tungay && p.NNhap <= denngay).Where(p => p.NoiTru == 0).OrderBy(p => p.NNhap).ToList();
                        int count = 0;
                        foreach (var a in qbn)
                        {
                            count++;
                            if (a.MaBNhan == _Mabn)
                                break;
                        }
                        _so = count.ToString();
                    }
                }

            }
            #endregion
            if (_MauIn == "A5")
            {

                BaoCao.repPhieuChiDinh_XetNghiem rep = new BaoCao.repPhieuChiDinh_XetNghiem(InTongHop);
                rep.MauSo.Value = "MS...../BV - 01";
                rep.MaBNhan.Value = (DungChung.Bien.MaBV == "27001" || DungChung.Bien.MaBV == "27183" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297") ? "Mã BN:" + _Mabn.ToString() : _Mabn.ToString();
                if (DungChung.Bien.MaBV == "27023")
                    rep.SoPhieu.Value = _so;
                else
                    rep.SoPhieu.Value = idCLS;
                var parnt = (from bn in _data.BenhNhans
                             join kp in _data.KPhongs on bn.MaKP equals kp.MaKP
                             join ttbx in _data.TTboXungs on bn.MaBNhan equals ttbx.MaBNhan
                             join bnkb in _data.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                             join cls in _data.CLS on bn.MaBNhan equals cls.MaBNhan
                             join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                             join clsct in _data.CLScts on cd.IDCD equals clsct.IDCD
                             join dvct in _data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                             join dv in _data.DichVus on dvct.MaDV equals dv.MaDV
                             where bn.MaBNhan == _Mabn
                             select new
                             {
                                 kp.MaKP,
                                 cls.MaKPth,
                                 kp.TenKP,
                                 dv.DonGia,
                                 dv.MaDV,
                                 bnkb.MaICD,
                                 ttbx.DThoai,
                                 bn.CapCuu,
                                 bn.DTuong,
                                 bn.TenBNhan,
                                 bn.MaBNhan,
                                 bn.DChi,
                                 bn.GTinh,// bn.CapCuu,
                                 bn.Tuoi,
                                 bn.SThe
                             }).ToList();
                if (DungChung.Bien.MaBV == "24012")
                {
                    if (parnt.Count() > 0)
                    {
                        rep.MaBN.Value = parnt.FirstOrDefault().MaBNhan;
                        if (parnt.FirstOrDefault().CapCuu == 1)
                        {
                            rep.CapCuu.Value = "X";
                        }
                        else if (parnt.FirstOrDefault().CapCuu == 0)
                        {
                            rep.Thuong.Value = "X";
                        }
                        var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idCLS)
                                    join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                    join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                    join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                    join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                    select new { dchi = kp.DChi, ylenh = dv.TenDV + "(" + cd.ChiDinh1 + ")", cd.ChiDinh1, cls.STT, tn.TenTN, cd.Status, cd.LoaiMau, cls.NgayThang, cls.MaKP, cls.MaCB, kp.TenKP, dv.TenDV, dv.SoTT, tn.TenRG, cd.DonGia, cls.MaKPth, dv.MaDV, STT_F = Byte.MaxValue }).OrderBy(p => p.SoTT).ToList();
                        if (qmnt.Count() > 0)
                        {
                            if (qmnt.FirstOrDefault().TenRG == "XN hóa sinh máu" || qmnt.FirstOrDefault().TenRG == "XN huyết học" || qmnt.FirstOrDefault().TenRG == "XN vi sinh")
                            {
                                rep.LoaiBPham.Value = "Máu";
                            }
                            else if (qmnt.FirstOrDefault().TenRG == "XN đờm" || qmnt.FirstOrDefault().TenRG == "XN khác")
                            {
                                rep.LoaiBPham.Value = "";
                            }
                            else if (qmnt.FirstOrDefault().TenRG == "XN mô bệnh học")
                            {
                                rep.LoaiBPham.Value = "Mô";
                            }
                            else if (qmnt.FirstOrDefault().TenRG == "XN nước tiểu")
                            {
                                rep.LoaiBPham.Value = "Nước Tiểu";
                            }
                            else if (qmnt.FirstOrDefault().TenRG == "XN tế bào dịch")
                            {
                                rep.LoaiBPham.Value = "Dịch";
                            }
                            rep.SDT.Value = parnt.FirstOrDefault().DThoai;
                            rep.MaICD.Value = parnt.FirstOrDefault().MaICD;
                            rep.SL.Value = "1";
                            rep.NgayGioIn.Value = DateTime.Now;
                            rep.LG.Value = parnt.FirstOrDefault().DTuong;
                            if (parnt.FirstOrDefault().MaKPth == 11)
                            {
                                rep.kpthuchien24012.Value = "Phòng Xét nghiệm";
                            }
                            rep.DataSource = qmnt.ToList();
                            rep.BindingData();
                        }
                    }
                }
                else if (DungChung.Bien.MaBV == "30004")
                {
                    rep.code.Value = _Mabn;
                }
                else if (DungChung.Bien.MaBV == "24009" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                {
                    rep.xrPictureBox1.Image = DungChung.Ham.GetLogo();
                }
                if (parnt.Count > 0)
                {
                    rep.DiaChi.Value = parnt.FirstOrDefault().DChi;
                    rep.Tuoi.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.TinhTuoiBenhNhan(_data, _Mabn) : DungChung.Ham.TuoitheoThang(_data, _Mabn, DungChung.Bien.formatAge);
                    rep.TenBNhan.Value = parnt.FirstOrDefault().TenBNhan.ToUpper();
                    //rep.MaBNhan
                    int gioiTinh = int.Parse(parnt.FirstOrDefault().GTinh.ToString());
                    if (gioiTinh == 1)
                    {
                        rep.Nu.Value = "/";
                    }
                    else if (gioiTinh == 0)
                    {
                        rep.Nam.Value = "/";
                    }
                    if (parnt.FirstOrDefault().SThe.Length == 15)
                    {
                        rep.SThe1.Value = parnt.FirstOrDefault().SThe.Substring(0, 3);
                        rep.SThe2.Value = parnt.FirstOrDefault().SThe.Substring(3, 2);
                        rep.SThe3.Value = parnt.FirstOrDefault().SThe.Substring(5, 2);
                        rep.SThe4.Value = parnt.FirstOrDefault().SThe.Substring(7, 3);
                        rep.SThe5.Value = parnt.FirstOrDefault().SThe.Substring(10, 5);
                    }
                }
                if (InTongHop)
                {
                    if (DungChung.Bien.MaBV == "24297")
                    {
                        int _status = 0;
                        var kt = _data.CLS.Where(p => p.MaBNhan == _Mabn && p.IdCLS == idCLS).ToList();
                        if (kt.Count > 0 && kt.FirstOrDefault().Status == 1)
                            _status = 1;
                        var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn && (code == "" ? true : p.Code == code))
                                    join cd in _data.ChiDinhs.Where(p => p.Status == _status) on cls.IdCLS equals cd.IdCLS
                                    join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                    join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                    join bnkb in _data.BNKBs on cls.MaBNhan equals bnkb.MaBNhan
                                    join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                    where (tn.TenRG.Contains("XN"))
                                    select new { bnkb.ChanDoanBD, kp.IsDongY, dv.SLuong, cls.Code, STTcd = cls.STT, cls.IdCLS, tn.TenTN, tn.STT, cd.Status, dv.SoTT, cls.NgayThang, cls.MaKP, cls.MaCB, kp.TenKP, dv.TenDV, cls.MaKPth, cd.DonGia, dv.MaDV, STT_F = Byte.MaxValue }).OrderBy(p => p.STT).ThenBy(p => p.SoTT).ToList();
                        var qmnt2 = (from rs in qmnt.Where(p => p.MaKPth != 0)
                                     join kp in _data.KPhongs on rs.MaKPth equals kp.MaKP
                                     select new { rs.ChanDoanBD, rs.IsDongY, rs.SLuong, rs.Code, STTcd = rs.STT, rs.IdCLS, TenTN = rs.TenTN + " (" + kp.DChi + ")", rs.STT, rs.Status, rs.SoTT, rs.NgayThang, rs.MaKP, rs.MaCB, kp.TenKP, rs.TenDV, rs.MaKPth, rs.DonGia, rs.MaDV, STT_F = Byte.MaxValue }).OrderBy(p => p.STT).ThenBy(p => p.SoTT).ToList();

                        if (qmnt.Count > 0)
                        {
                            try
                            {
                                rep.KpThucHien.Value = Convert.ToInt32(qmnt.Select(o => o.MaKPth).FirstOrDefault().ToString());
                                rep.code.Value = Convert.ToInt64(qmnt.FirstOrDefault().Code);
                            }
                            catch { }
                            rep.STT.Value = qmnt.FirstOrDefault().STTcd;
                            rep.TieuDe.Value = "XÉT NGHIỆM";
                            if (qmnt.FirstOrDefault().Status == 1)
                                rep.ThucHien.Value = "Đã thực hiện";
                            DateTime _dt = System.DateTime.Now;
                            if (qmnt.FirstOrDefault().NgayThang != null)
                                _dt = qmnt.FirstOrDefault().NgayThang.Value;
                            rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                            rep.MaCB.Value = qmnt.FirstOrDefault().MaCB;
                            rep.KPhong.Value = qmnt.FirstOrDefault().TenKP.ToUpper();
                            int makpyh = qmnt.FirstOrDefault().MaKPth ?? 0;
                            var kpth = _data.KPhongs.Where(p => p.MaKP == makpyh).ToList();
                            rep.dckp.Text = kpth.Count() > 0 ? (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789" ? kpth.FirstOrDefault().TenKP : (kpth.FirstOrDefault().DChi)) : "";
                            arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                            arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);

                            if (qmnt.FirstOrDefault().IsDongY == true && DungChung.Bien.MaBV == "24297")
                            {
                                rep.ChanDoan.Value = qmnt.FirstOrDefault().ChanDoanBD != null || qmnt.FirstOrDefault().ChanDoanBD != "" ? qmnt.FirstOrDefault().ChanDoanBD + ";" : "";
                                rep.ChanDoan.Value += DungChung.Ham.GetChanDoanKB_24297(_data, _Mabn);
                            }
                            else
                            {
                                if (DungChung.Bien.MaBV != "24012" && DungChung.Bien.MaBV != "24272")
                                {
                                    rep.ChanDoan.Value = qmnt.FirstOrDefault().ChanDoanBD != null || qmnt.FirstOrDefault().ChanDoanBD != "" ? qmnt.FirstOrDefault().ChanDoanBD + ";" : "";//(arrChanDoanBD!=null&& arrChanDoanBD[0] != "") ? arrChanDoanBD[0] + ";" + arrThongTinBNKB[1] : arrThongTinBNKB[1];
                                }
                                if (DungChung.Bien.MaBV != "24012" && DungChung.Bien.MaBV != "24272")
                                {
                                    //rep.ChanDoan.Value += DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                                }
                            }

                            rep.paramBuong.Value = arrThongTinBNKB[2];
                            rep.paramGiuong.Value = arrThongTinBNKB[3];
                            rep.paramTenKP.Value = arrThongTinBNKB[4];

                            rep.DataSource = qmnt2.ToList();
                            rep.BindingData();
                            rep.CreateDocument();
                            frm.prcIN.PrintingSystem = rep.PrintingSystem;
                            frm.ShowDialog();
                        }
                    }
                    else
                    {
                        int _status = 0;
                        var kt = _data.CLS.Where(p => p.MaBNhan == _Mabn && p.IdCLS == idCLS).ToList();
                        if (kt.Count > 0 && kt.FirstOrDefault().Status == 1)
                            _status = 1;
                        var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn && (code == "" ? true : p.Code == code))
                                    join cd in _data.ChiDinhs.Where(p => p.Status == _status) on cls.IdCLS equals cd.IdCLS
                                    join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                    join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                    join bnkb in _data.BNKBs on cls.MaBNhan equals bnkb.MaBNhan
                                    join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                    where (tn.TenRG.Contains("XN"))
                                    select new { bnkb.ChanDoanBD, kp.IsDongY, dv.SLuong, cls.Code, STTcd = cls.STT, cls.IdCLS, tn.TenTN, tn.STT, cd.Status, dv.SoTT, cls.NgayThang, cls.MaKP, cls.MaCB, kp.TenKP, dv.TenDV, cls.MaKPth, cd.DonGia, dv.MaDV, STT_F = Byte.MaxValue }).OrderBy(p => p.STT).ThenBy(p => p.SoTT).ToList();

                        if (DungChung.Bien.MaBV == "30372")
                        {
                            var maDVs = qmnt.Select(o => o.MaDV).ToList();
                            var dichVucts = _data.DichVucts.Where(o => maDVs.Contains(o.MaDV ?? 0)).GroupBy(o => o.MaDV).Select(o => new { MaDV = (o.Key ?? 0), STT_F = o.Min(p => p.STT_F) }).ToList();

                            qmnt = qmnt.Join(dichVucts, o => o.MaDV, p => p.MaDV, (o, p) => new { o.ChanDoanBD, IsDongY = o.IsDongY, SLuong = o.SLuong, Code = o.Code, STTcd = o.STTcd, IdCLS = o.IdCLS, TenTN = o.TenTN, STT = o.STT, Status = o.Status, SoTT = o.SoTT, NgayThang = o.NgayThang, MaKP = o.MaKP, MaCB = o.MaCB, TenKP = o.TenKP, TenDV = o.TenDV, MaKPth = o.MaKPth, DonGia = o.DonGia, MaDV = o.MaDV, STT_F = (p.STT_F ?? Byte.MaxValue) }).ToList();
                        }
                        if (DungChung.Bien.MaBV == "24297")
                        {

                        }

                        rep.KpThucHien.Value = Convert.ToInt32(qmnt.Select(o => o.MaKPth).FirstOrDefault().ToString());
                        if (qmnt.Count > 0)
                        {
                            try
                            {
                                rep.code.Value = Convert.ToInt64(qmnt.FirstOrDefault().Code);
                            }
                            catch { }
                            rep.STT.Value = qmnt.FirstOrDefault().STTcd;
                            rep.TieuDe.Value = "XÉT NGHIỆM";
                            if (qmnt.FirstOrDefault().Status == 1)
                                rep.ThucHien.Value = "Đã thực hiện";
                            DateTime _dt = System.DateTime.Now;
                            if (qmnt.FirstOrDefault().NgayThang != null)
                                _dt = qmnt.FirstOrDefault().NgayThang.Value;
                            rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                            rep.MaCB.Value = qmnt.FirstOrDefault().MaCB;
                            rep.KPhong.Value = qmnt.FirstOrDefault().TenKP.ToUpper();
                            int makpyh = qmnt.FirstOrDefault().MaKPth ?? 0;
                            var kpth = _data.KPhongs.Where(p => p.MaKP == makpyh).ToList();
                            rep.dckp.Text = kpth.Count() > 0 ? (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789" ? kpth.FirstOrDefault().TenKP : (kpth.FirstOrDefault().DChi)) : "";
                            arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                            arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);

                            if (qmnt.FirstOrDefault().IsDongY == true && DungChung.Bien.MaBV == "24297")
                            {
                                rep.ChanDoan.Value = qmnt.FirstOrDefault().ChanDoanBD != null || qmnt.FirstOrDefault().ChanDoanBD != "" ? qmnt.FirstOrDefault().ChanDoanBD + ";" : "";
                                rep.ChanDoan.Value += DungChung.Ham.GetChanDoanKB_24297(_data, _Mabn);
                            }
                            else
                            {
                                if (DungChung.Bien.MaBV == "24272")
                                {
                                    rep.ChanDoan.Value = qmnt.FirstOrDefault().ChanDoanBD != null || qmnt.FirstOrDefault().ChanDoanBD != "" ? qmnt.FirstOrDefault().ChanDoanBD + ";" : "";//(arrChanDoanBD!=null&& arrChanDoanBD[0] != "") ? arrChanDoanBD[0] + ";" + arrThongTinBNKB[1] : arrThongTinBNKB[1];
                                }
                                else
                                {
                                    rep.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                                }
                            }


                            rep.paramBuong.Value = arrThongTinBNKB[2];
                            rep.paramGiuong.Value = arrThongTinBNKB[3];
                            rep.paramTenKP.Value = arrThongTinBNKB[4];
                            rep.DataSource = qmnt.ToList();
                            rep.BindingData();
                            rep.CreateDocument();
                            frm.prcIN.PrintingSystem = rep.PrintingSystem;
                            frm.ShowDialog();
                        }
                    }
                }
                else
                {
                    var makp = _data.BenhNhans.Where(p => p.MaBNhan == _Mabn).Select(p => p.MaKP).FirstOrDefault();
                    var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idCLS)
                                join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                join bnkb in _data.BNKBs on cls.MaBNhan equals bnkb.MaBNhan
                                join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                where bnkb.MaKP == makp
                                select new { bnkb.ChanDoanBD, dchi = kp.DChi, ylenh = dv.TenDV + "(" + cd.ChiDinh1 + ")", cd.ChiDinh1, cls.STT, tn.TenTN, cd.Status, cd.LoaiMau, cls.NgayThang, cls.MaKP, cls.MaCB, kp.TenKP, dv.TenDV, dv.SoTT, tn.TenRG, cd.DonGia, cls.MaKPth, dv.MaDV, STT_F = Byte.MaxValue }).OrderBy(p => p.SoTT).ToList();


                    var maDVs = qmnt.Select(o => o.MaDV).ToList();
                    var dichVucts = _data.DichVucts.Where(o => maDVs.Contains(o.MaDV ?? 0)).GroupBy(o => o.MaDV).Select(o => new { MaDV = (o.Key ?? 0), STT_F = o.Min(p => p.STT_F) }).ToList();

                    qmnt = qmnt.Join(dichVucts, o => o.MaDV, p => p.MaDV, (o, p) => new { o.ChanDoanBD, o.dchi, o.ylenh, o.ChiDinh1, o.STT, o.TenTN, o.Status, o.LoaiMau, o.NgayThang, o.MaKP, o.MaCB, o.TenKP, o.TenDV, o.SoTT, o.TenRG, o.DonGia, o.MaKPth, o.MaDV, STT_F = (p.STT_F ?? Byte.MaxValue) }).OrderBy(o => o.STT_F).ToList();

                    if (qmnt.Count > 0)
                    {
                        if (DungChung.Bien.MaBV != "30372")
                        {
                            rep.KpThucHien.Value = Convert.ToInt32(qmnt.Select(o => o.MaKPth).FirstOrDefault().ToString());
                        }
                        //if (DungChung.Bien.MaBV == "27001" && qmnt.FirstOrDefault().Status == 0)
                        //{
                        //    string TenRG = qmnt.FirstOrDefault().TenRG;
                        //    var qmnt1 = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.Status == 0)
                        //                 join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                        //                 join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                        //                 join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                        //                 join tn in _data.TieuNhomDVs.Where(p => p.TenRG == TenRG) on dv.IdTieuNhom equals tn.IdTieuNhom
                        //                 select new { cls.STT, tn.TenTN, cd.Status, cls.NgayThang, cls.MaKP, cls.MaCB, kp.TenKP, dv.TenDV, dv.SoTT, tn.TenRG }).OrderBy(p => p.SoTT).ToList();
                        //    rep.TieuDe.Value = qmnt.FirstOrDefault().TenTN.ToUpper();
                        //    if (qmnt.FirstOrDefault().Status == 1)
                        //        rep.ThucHien.Value = "Đã thực hiện";
                        //    DateTime _dt = System.DateTime.Now;
                        //    if (qmnt.FirstOrDefault().NgayThang != null)
                        //        _dt = qmnt.FirstOrDefault().NgayThang.Value;
                        //    rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                        //    rep.MaCB.Value = qmnt.FirstOrDefault().MaCB;
                        //    rep.KPhong.Value = qmnt.FirstOrDefault().TenKP;
                        //    arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                        //    rep.ChanDoan.Value = arrThongTinBNKB[1];
                        //    rep.paramBuong.Value = arrThongTinBNKB[2];
                        //    rep.paramGiuong.Value = arrThongTinBNKB[3];
                        //    rep.paramTenKP.Value = arrThongTinBNKB[4];
                        //    rep.DataSource = qmnt1.ToList();
                        //    rep.BindingData();
                        //    rep.CreateDocument();
                        //    frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        //    frm.ShowDialog();
                        //}
                        //else
                        //{
                        rep.TieuDe.Value = qmnt.FirstOrDefault().TenTN.ToUpper();
                        if (qmnt.FirstOrDefault().Status == 1)
                            rep.ThucHien.Value = "Đã thực hiện";
                        DateTime _dt = System.DateTime.Now;
                        if (qmnt.FirstOrDefault().NgayThang != null)
                            _dt = qmnt.FirstOrDefault().NgayThang.Value;
                        rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                        rep.MaCB.Value = qmnt.FirstOrDefault().MaCB;
                        int makpyh = qmnt.FirstOrDefault().MaKPth ?? 0;
                        var kpth = _data.KPhongs.Where(p => p.MaKP == makpyh).ToList();
                        rep.dckp.Text = kpth.Count() > 0 ? (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789" ? kpth.FirstOrDefault().TenKP : (kpth.FirstOrDefault().DChi)) : "";
                        rep.KPhong.Value = qmnt.FirstOrDefault().TenKP;
                        rep.DiaChiKP.Value = qmnt.FirstOrDefault().dchi;
                        rep.Parameters["TenCQ"].Value = DungChung.Bien.TenCQ.ToUpper();
                        if (DungChung.Bien.MaBV == "30372")
                        {
                            int makpth = qmnt.FirstOrDefault().MaKPth ?? 0;
                            var kpth1 = _data.KPhongs.Where(p => p.MaKP == makpth).Select(p => DungChung.Bien.MaBV == "30010" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "30372" || DungChung.Bien.MaBV == "56789" ? p.TenKP : (DungChung.Bien.MaBV == "27001" ? p.DChi : "")).FirstOrDefault();
                            rep.KpThucHien.Value = kpth1;
                        }
                        arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                        arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                        if (DungChung.Bien.MaBV == "30372")
                        {
                            rep.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                        }
                        else
                        {
                            if (DungChung.Bien.MaBV == "24272")
                            {
                                if (arrChanDoanBD != null)
                                {
                                    rep.ChanDoan.Value = qmnt.FirstOrDefault().ChanDoanBD != null || qmnt.FirstOrDefault().ChanDoanBD != "" ? qmnt.FirstOrDefault().ChanDoanBD + ";" : "";//(arrChanDoanBD!=null&& arrChanDoanBD[0] != "") ? arrChanDoanBD[0] + ";" + arrThongTinBNKB[1] : arrThongTinBNKB[1];
                                }
                            }
                            else
                            {
                                rep.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            }
                        }
                        rep.paramBuong.Value = arrThongTinBNKB[2];
                        rep.paramGiuong.Value = arrThongTinBNKB[3];
                        rep.paramTenKP.Value = arrThongTinBNKB[4];
                        rep.DataSource = qmnt.ToList();
                        rep.BindingData();
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                        //}
                    }
                }
            }
            else
            {
                if (DungChung.Bien.MaBV == "34019")
                {

                    var cls = _data.CLS.Where(p => p.IdCLS == idCLS).FirstOrDefault();
                    DateTime ngaycd = cls != null ? Convert.ToDateTime(cls.NgayThang) : DateTime.Now;
                    var qmnt = (from clsx in _data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => InTongHop ? true : p.IdCLS == idCLS)
                                join bn in _data.BenhNhans.Where(p => p.MaBNhan == _Mabn) on clsx.MaBNhan equals bn.MaBNhan
                                join cd in _data.ChiDinhs.Where(o => InTongHop ? o.Status == 0 : true) on clsx.IdCLS equals cd.IdCLS
                                join kp in _data.KPhongs on clsx.MaKP equals kp.MaKP
                                join kpTH in _data.KPhongs on clsx.MaKPth equals kpTH.MaKP
                                join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                select new
                                {
                                    tn.STT,
                                    tn.TenTN,
                                    cd.Status,
                                    cd.SoPhieu,
                                    clsx.NgayThang,
                                    clsx.MaKP,
                                    dv.SoTT,
                                    clsx.MaCB,
                                    kp.TenKP,
                                    dv.TenDV,
                                    clsx.MaKPth,
                                    TenKPth = kpTH.TenKP,
                                    DiaChiKPth = kpTH.DChi,
                                    clsx.CapCuu,
                                    bn.NgaySinh,
                                    bn.ThangSinh,
                                    bn.NamSinh,
                                    bn.DTuong,
                                    bn.TenBNhan,
                                    bn.GTinh,
                                    bn.DChi,
                                    bn.SThe,
                                    bn.HanBHDen,
                                    SoLuong = 1,
                                    ThoiGianDuKien = "",
                                    bn.HanBHTu,
                                    clsx.BarCode,
                                    IsTrongBH = (cd.TrongBH == 1),
                                    IDP = bn.IDPerson
                                }).OrderBy(p => p.SoTT).ToList();

                    for (int i = 0; i < 2; i++)
                    {
                        var qmnt1 = qmnt.Where(o => o.IsTrongBH == (i == 0)).ToList();
                        if (qmnt1.Count > 0)
                        {
                            repPhieuXetNghiem_34019_A4 rep = new repPhieuXetNghiem_34019_A4();//6
                            rep.xrPictureBox1.Image = QLBV.DungChung.Ham.GetLogo();
                            rep.SoPhieu.Value = qmnt1.FirstOrDefault().SoPhieu;
                            rep.MaDieuTri.Value = _Mabn;
                            rep.MaBN.Value = qmnt1.FirstOrDefault().IDP;
                            rep.TenBV.Value = DungChung.Bien.TenCQ.ToUpper();
                            var hthong = _data.HTHONGs.FirstOrDefault(o => o.MaBV == DungChung.Bien.MaBV);
                            if (hthong != null)
                            {
                                rep.DiaChiBV.Value = hthong.DiaChi;
                            }
                            rep.TenPhieu.Value = "PHIẾU TRẢ KẾT QUẢ XÉT NGHIỆM";
                            rep.KPhong.Value = qmnt1.FirstOrDefault().TenKPth + (!string.IsNullOrWhiteSpace(qmnt1.FirstOrDefault().DiaChiKPth) ? (" (" + qmnt1.FirstOrDefault().DiaChiKPth + ")") : "");
                            rep.CapCuu.Value = (qmnt1.FirstOrDefault().CapCuu == true) ? "X" : "";
                            rep.TenBNhan.Value = qmnt1.FirstOrDefault().TenBNhan.ToUpper();
                            rep.NgaySinh.Value = DungChung.Ham.GhepNgaySinh("/", qmnt1.FirstOrDefault().NamSinh, qmnt1.FirstOrDefault().ThangSinh, qmnt1.FirstOrDefault().NgaySinh);
                            rep.GioiTinh.Value = qmnt1.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                            rep.DiaChi.Value = qmnt1.FirstOrDefault().DChi;
                            rep.NgayGio.Value = "Thái Bình, " + DungChung.Ham.NgaySangChu(qmnt1.FirstOrDefault().NgayThang.Value);
                            //if (!string.IsNullOrWhiteSpace(qmnt1.FirstOrDefault().DTuong) && qmnt1.FirstOrDefault().DTuong == "BHYT")
                            //{
                            //    rep.BHYT.Value = "X";
                            //}
                            //else
                            //    rep.ThuPhi.Value = "X";
                            if (i == 0)
                                rep.BHYT.Value = "X";
                            else
                                rep.ThuPhi.Value = "X";
                            rep.CapCuu.Value = (qmnt1.FirstOrDefault().CapCuu == true) ? "X" : "";

                            if (i == 0)
                            {
                                if (!string.IsNullOrWhiteSpace(qmnt1.FirstOrDefault().SThe))
                                {
                                    rep.HanThe.Value = qmnt1.FirstOrDefault().HanBHDen != null ? qmnt1.FirstOrDefault().HanBHDen.Value.ToString("dd/MM/yyyy") : "";
                                    rep.HanTu.Value = qmnt1.FirstOrDefault().HanBHTu != null ? qmnt1.FirstOrDefault().HanBHTu.Value.ToString("dd/MM/yyyy") : "";
                                    rep.SThe1.Value = qmnt1.FirstOrDefault().SThe.Substring(0, 2);
                                    rep.SThe2.Value = qmnt1.FirstOrDefault().SThe.Substring(2, 1);
                                    rep.SThe3.Value = qmnt1.FirstOrDefault().SThe.Substring(3, 2);
                                    rep.SThe4.Value = qmnt1.FirstOrDefault().SThe.Substring(5, 2);
                                    rep.SThe5.Value = qmnt1.FirstOrDefault().SThe.Substring(7, 3);
                                    rep.SThe6.Value = qmnt1.FirstOrDefault().SThe.Substring(10, 5);
                                }
                            }
                            rep.paramTenKP.Value = qmnt1.FirstOrDefault().TenKP;
                            var maKp = (qmnt1.FirstOrDefault().MaKP == null ? 0 : qmnt1.FirstOrDefault().MaKP.Value);
                            var kbcd = (from bnkb in _data.BNKBs.Where(p => p.MaBNhan == _Mabn && p.MaKP == maKp)
                                        select bnkb).ToList();
                            if (kbcd != null && kbcd.Count > 0)
                            {
                                rep.BenhChinh.Value = kbcd.FirstOrDefault().ChanDoan + " (" + kbcd.FirstOrDefault().MaICD + ")";
                                rep.BenhPhu.Value = kbcd.FirstOrDefault().BenhKhac;
                                if (!string.IsNullOrWhiteSpace(kbcd.FirstOrDefault().Buong))
                                {
                                    var spBuong = kbcd.FirstOrDefault().Buong.Split(';');
                                    if (spBuong != null && spBuong.Count() > 0)
                                    {
                                        rep.paramBuong.Value = spBuong[spBuong.Count() - 1];
                                    }
                                }
                                if (!string.IsNullOrWhiteSpace(kbcd.FirstOrDefault().Giuong))
                                {
                                    var spGiuong = kbcd.FirstOrDefault().Giuong.Split(';');
                                    if (spGiuong != null && spGiuong.Count() > 0)
                                    {
                                        rep.paramGiuong.Value = spGiuong[spGiuong.Count() - 1];
                                    }
                                }
                            }
                            //rep.YCKT.Value = qmnt1.FirstOrDefault().TenDV;
                            rep.BindingData();
                            rep.DataSource = qmnt1.ToList();
                            rep.CreateDocument();
                            if (PrintNow)
                            {
                                ReportPrintTool rpt = new ReportPrintTool(rep);
                                rpt.Print();
                            }
                            else
                            {
                                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                frm.ShowDialog();
                            }
                        }
                    }
                }
                else
                {
                    BaoCao.repPhieuChiDinh_XetNghiem_A4 rep = new BaoCao.repPhieuChiDinh_XetNghiem_A4(InTongHop);
                    rep.MauSo.Value = "MS...../BV - 01";
                    rep.MaBNhan.Value = _Mabn;

                    if (DungChung.Bien.MaBV == "27023")
                        rep.SoPhieu.Value = _so;
                    else if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                    {
                        //rep.lab3.Text = "Mã BN:";
                        rep.IDCLS.Value = "Mã BN: " + _Mabn;
                        var bn = (from a in _data.CLS.Where(p => p.MaBNhan == _Mabn && p.IdCLS == idCLS) select new { a.CapCuu }).ToList();
                        rep.Thuong.Value = (bn.FirstOrDefault().CapCuu == false) ? "X" : "";
                        rep.CapCuu.Value = (bn.FirstOrDefault().CapCuu == true) ? "X" : "";
                        //rep.IDCLS.Value = "Só phiếu: " + idCLS;
                        rep.SoPhieu.Value = idCLS;
                    }
                    else
                        rep.SoPhieu.Value = idCLS;
                    var parnt = (from bn in _data.BenhNhans
                                 where bn.MaBNhan == _Mabn
                                 select new
                                 {
                                     bn.TenBNhan,
                                     bn.MaBNhan,
                                     bn.DChi,
                                     bn.GTinh, //bn.CapCuu,
                                     bn.Tuoi,
                                     bn.SThe,
                                     bn.NoiTru
                                 }).ToList();
                    if (parnt.Count > 0)
                    {
                        rep.DiaChi.Value = parnt.FirstOrDefault().DChi;
                        rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _Mabn, DungChung.Bien.formatAge);
                        rep.TenBNhan.Value = parnt.FirstOrDefault().TenBNhan.ToUpper();
                        int gioiTinh = int.Parse(parnt.FirstOrDefault().GTinh.ToString());
                        if (gioiTinh == 1)
                        {
                            rep.Nu.Value = "/";
                        }
                        else if (gioiTinh == 0)
                        {
                            rep.Nam.Value = "/";
                        }
                        if (parnt.FirstOrDefault().SThe.Length == 15)
                        {
                            rep.SThe1.Value = parnt.FirstOrDefault().SThe.Substring(0, 3);
                            rep.SThe2.Value = parnt.FirstOrDefault().SThe.Substring(3, 2);
                            rep.SThe3.Value = parnt.FirstOrDefault().SThe.Substring(5, 2);
                            rep.SThe4.Value = parnt.FirstOrDefault().SThe.Substring(7, 3);
                            rep.SThe5.Value = parnt.FirstOrDefault().SThe.Substring(10, 5);
                        }
                        if (parnt.FirstOrDefault().NoiTru == 1)
                        {
                            var SoVV = _data.VaoViens.Where(p => p.MaBNhan == _Mabn).Select(p => p.SoVV).FirstOrDefault();
                            if (SoVV != null)
                                rep.SoVV.Value = "Số VV: " + SoVV.ToString();
                        }
                    }
                    if (InTongHop)
                    {
                        int _status = 0;
                        var kt = _data.CLS.Where(p => p.MaBNhan == _Mabn && p.IdCLS == idCLS).ToList();
                        if (kt.Count > 0 && kt.FirstOrDefault().Status == 1)
                            _status = 1;
                        var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn)
                                    join cd in _data.ChiDinhs.Where(p => p.Status == _status) on cls.IdCLS equals cd.IdCLS
                                    join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                    join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                    join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                    where (tn.TenRG.Contains("XN"))
                                    select new
                                    {
                                        kp.IsDongY,
                                        STTcd = cls.STT,
                                        tn.STT,
                                        tn.TenTN,
                                        cd.Status,
                                        cls.NgayThang,
                                        cls.MaKP,
                                        cls.MaCB,
                                        kp.TenKP,
                                        dv.SoTT,
                                        TenDV = dv.TenDV,
                                        cls.MaKPth,
                                        cd.DonGia,
                                        dv.MaDV,
                                        STT_F = Byte.MaxValue
                                    }).OrderBy(p => p.SoTT).ToList();

                        if (DungChung.Bien.MaBV == "30372")
                        {
                            var maDVs = qmnt.Select(o => o.MaDV).ToList();
                            var dichVucts = _data.DichVucts.Where(o => maDVs.Contains(o.MaDV ?? 0)).GroupBy(o => o.MaDV).Select(o => new { MaDV = (o.Key ?? 0), STT_F = o.Min(p => p.STT_F) }).ToList();

                            qmnt = qmnt.Join(dichVucts, o => o.MaDV, p => p.MaDV, (o, p) => new
                            {
                                o.IsDongY,
                                o.STTcd,
                                o.STT,
                                o.TenTN,
                                o.Status,
                                o.NgayThang,
                                o.MaKP,
                                o.MaCB,
                                o.TenKP,
                                o.SoTT,
                                o.TenDV,
                                o.MaKPth,
                                o.DonGia,
                                o.MaDV,
                                STT_F = (p.STT_F ?? Byte.MaxValue)
                            }).OrderBy(o => o.STT_F).ToList();
                        }

                        if (qmnt.Count > 0)
                        {
                            rep.STT.Value = qmnt.FirstOrDefault().STTcd;
                            rep.TieuDe.Value = "XÉT NGHIỆM";
                            if (qmnt.FirstOrDefault().Status == 1)
                                rep.ThucHien.Value = "Đã thực hiện";
                            DateTime _dt = System.DateTime.Now;
                            if (qmnt.FirstOrDefault().NgayThang != null)
                                _dt = qmnt.FirstOrDefault().NgayThang.Value;
                            rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                            rep.MaCB.Value = qmnt.FirstOrDefault().MaCB;
                            int makpyh = qmnt.FirstOrDefault().MaKPth ?? 0;
                            var kpth = _data.KPhongs.Where(p => p.MaKP == makpyh).ToList();
                            rep.kpth.Text = kpth.Count() > 0 ? (kpth.FirstOrDefault().DChi) : "";
                            rep.KPhong.Value = qmnt.FirstOrDefault().TenKP.ToUpper();
                            arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                            arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                            rep.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            rep.paramBuong.Value = arrThongTinBNKB[2];
                            rep.paramGiuong.Value = arrThongTinBNKB[3];
                            rep.paramTenKP.Value = arrThongTinBNKB[4];
                            rep.DataSource = qmnt.ToList();
                            rep.BindingData();
                            rep.CreateDocument();
                            frm.prcIN.PrintingSystem = rep.PrintingSystem;
                            frm.ShowDialog();
                        }
                    }
                    else
                    {
                        var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idCLS)
                                    join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                    join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                    join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                    join bnkb in _data.BNKBs on cls.MaBNhan equals bnkb.MaBNhan
                                    join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                    select new { bnkb.ChanDoanBD, kp.IsDongY, tn.STT, tn.TenTN, cd.Status, cls.NgayThang, cls.MaKP, dv.SoTT, cls.MaCB, kp.TenKP, TenDV = dv.TenDV + " (" + cd.ChiDinh1 + ")", cls.MaKPth, dv.MaDV, STT_F = Byte.MaxValue }).OrderBy(p => p.SoTT).ToList();

                        if (DungChung.Bien.MaBV == "30372")
                        {
                            var maDVs = qmnt.Select(o => o.MaDV).ToList();
                            var dichVucts = _data.DichVucts.Where(o => maDVs.Contains(o.MaDV ?? 0)).GroupBy(o => o.MaDV).Select(o => new { MaDV = (o.Key ?? 0), STT_F = o.Min(p => p.STT_F) }).ToList();

                            qmnt = qmnt.Join(dichVucts, o => o.MaDV, p => p.MaDV, (o, p) => new { o.ChanDoanBD, o.IsDongY, o.STT, o.TenTN, o.Status, o.NgayThang, o.MaKP, o.SoTT, o.MaCB, o.TenKP, o.TenDV, o.MaKPth, o.MaDV, STT_F = (p.STT_F ?? Byte.MaxValue) }).OrderBy(o => o.STT_F).ToList();
                        }

                        if (qmnt.Count > 0)
                        {
                            rep.TieuDe.Value = qmnt.FirstOrDefault().TenTN.ToUpper();
                            if (qmnt.FirstOrDefault().TenTN.ToUpper() == "X-QUANG CT" && DungChung.Bien.MaBV == "30009")
                            {
                                rep.xrBarCode1.Visible = true;
                            }
                            if (qmnt.FirstOrDefault().Status == 1)
                                rep.ThucHien.Value = "Đã thực hiện";
                            DateTime _dt = System.DateTime.Now;
                            if (qmnt.FirstOrDefault().NgayThang != null)
                                _dt = qmnt.FirstOrDefault().NgayThang.Value;
                            rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                            rep.MaCB.Value = qmnt.FirstOrDefault().MaCB;
                            int makpyh = qmnt.FirstOrDefault().MaKPth ?? 0;
                            var kpth = _data.KPhongs.Where(p => p.MaKP == makpyh).ToList();
                            rep.kpth.Text = kpth.Count() > 0 ? (kpth.FirstOrDefault().DChi) : "";
                            rep.KPhong.Value = qmnt.FirstOrDefault().TenKP.ToUpper();
                            arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                            arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                            if (DungChung.Bien.MaBV == "24297" && qmnt.FirstOrDefault().IsDongY == true)
                            {
                                rep.ChanDoan.Value = qmnt.FirstOrDefault().ChanDoanBD != null || qmnt.FirstOrDefault().ChanDoanBD != "" ? qmnt.FirstOrDefault().ChanDoanBD + ";" : "";
                                rep.ChanDoan.Value += DungChung.Ham.GetChanDoanKB_24297(_data, _Mabn);
                            }
                            else
                            {
                                rep.ChanDoan.Value = qmnt.FirstOrDefault().ChanDoanBD != null || qmnt.FirstOrDefault().ChanDoanBD != "" ? qmnt.FirstOrDefault().ChanDoanBD + ";" : "";//(arrChanDoanBD!=null&& arrChanDoanBD[0] != "") ? arrChanDoanBD[0] + ";" + arrThongTinBNKB[1] : arrThongTinBNKB[1];
                                rep.ChanDoan.Value += DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            }

                            rep.paramBuong.Value = arrThongTinBNKB[2];
                            rep.paramGiuong.Value = arrThongTinBNKB[3];
                            rep.paramTenKP.Value = arrThongTinBNKB[4];
                            rep.DataSource = qmnt.ToList();
                            rep.BindingData();
                            rep.CreateDocument();
                            frm.prcIN.PrintingSystem = rep.PrintingSystem;
                            frm.ShowDialog();
                        }
                    }
                }
            }
            QLBV.Utilities.Helppers.MemoryManagement.FlushMemory();
        }
        #endregion

        #region chi dinh tong hop son la
        public static void _setParamInChiDinh_XN_SL(QLBV_Database.QLBVEntities _data, frmIn frm, string _MauIn, int _Mabn, int idCLS, bool InTongHop, string code, int IDNhom, string TenPhieu)
        {

            List<BNDT> bndt = new List<BNDT>();
            List<BNDT> abc = (from bnkm in _data.BNKBs.Where(p => p.MaBNhan == _Mabn)
                              .OrderByDescending(p => p.IDKB)
                              select new BNDT
                              {
                                  IDKB = bnkm.IDKB,
                                  MaKP = bnkm.MaKP,
                                  MaCB = bnkm.MaCB
                              }).ToList();
            bndt.AddRange(abc);

            int idkb = bndt.FirstOrDefault().IDKB;
            int? idkp = bndt.FirstOrDefault().MaKP;
            string macb = bndt.FirstOrDefault().MaCB;
            var loadkp = (from kp in _data.KPhongs.Where(p => p.MaKP == idkp)
                          select new
                          {
                              kp.TenKP
                          }).ToList();
            var loadcb = (from cb in _data.CanBoes.Where(p => p.MaCB == macb)
                          select new
                          {
                              cb.ChucVu,
                              cb.TenCB
                          }).ToList();

            if (_MauIn == "A4")
            {

                BaoCao.repPhieuChiDinh_SL_A4 rep = new BaoCao.repPhieuChiDinh_SL_A4(InTongHop);
                rep.MauSo.Value = "MS...../BV - 01";
                rep.SoPhieuSL.Value = idCLS;
                rep.MaBNhan.Value = (DungChung.Bien.MaBV == "27001" || DungChung.Bien.MaBV == "27183" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297") ? "Mã BN:" + _Mabn.ToString() : _Mabn.ToString();
                rep.SoPhieu.Value = idCLS;
                var parnt = (from bn in _data.BenhNhans
                             where bn.MaBNhan == _Mabn
                             select new
                             {
                                 bn.TenBNhan,
                                 bn.MaBNhan,
                                 bn.DChi,
                                 bn.GTinh,// bn.CapCuu,
                                 bn.Tuoi,
                                 bn.NoiTru,
                                 bn.DTNT,
                                 bn.SThe
                             }).ToList();

                var getBA = (from vv in _data.VaoViens
                             where vv.MaBNhan == _Mabn
                             select new
                             {
                                 vv.SoBA,
                             }).ToList();
                if (loadcb.Count > 0)
                {
                    rep.CBCD_SL.Value = loadcb.FirstOrDefault().ChucVu + ": " + loadcb.FirstOrDefault().TenCB;
                }
                if (getBA.Count > 0)
                {
                    rep.SoBA.Value = getBA.FirstOrDefault().SoBA;
                }

                if (parnt.Count > 0)
                {
                    rep.DiaChi.Value = parnt.FirstOrDefault().DChi;
                    rep.Tuoi.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.TinhTuoiBenhNhan(_data, _Mabn) : DungChung.Ham.TuoitheoThang(_data, _Mabn, DungChung.Bien.formatAge);
                    rep.TenBNhan.Value = parnt.FirstOrDefault().TenBNhan.ToUpper();
                    int gioiTinh = int.Parse(parnt.FirstOrDefault().GTinh.ToString());
                    int NTru = int.Parse(parnt.FirstOrDefault().NoiTru.ToString());

                    switch (NTru)
                    {
                        case 1:
                            rep.loaiBA.Value = "(BỆNH NHÂN NỘI TRÚ)";
                            break;
                        case 0:
                            if (parnt.FirstOrDefault().DTNT)
                            {
                                rep.loaiBA.Value = "(BỆNH NHÂN ĐIỀU TRỊ NGOẠI TRÚ)";
                                break;
                            }
                            else
                            {
                                rep.loaiBA.Value = "(BỆNH NHÂN NGOẠI TRÚ)";
                                break;
                            }
                    }

                    switch (gioiTinh)
                    {
                        case 0:
                            rep.GioiTinh.Value = "Nữ";
                            break;
                        case 1:
                            rep.GioiTinh.Value = "Nam";
                            break;
                    }

                    switch (IDNhom)
                    {
                        case 1:
                            rep.chidan.Text = "- Phòng Lấy bệnh phẩm và trả kết quả: Phòng 118 ";
                            rep.xrLabel3.Text = "Chỉ dẫn: Tầng 1 nhà B";
                            //rep.SoPhieuSL.Value = "XN-4877/2020";
                            break;
                        case 2:
                            rep.chidan.Text = "- Phòng chụp X-Quang: Phòng 115 \n- Phòng Đo Điện cơ- Lưu Huyết Não: Phòng 113 \n-Phòng Siêu Âm: Phòng 111 \n- Phòng Đo Mật độ xương: Phòng 112 \n- Phòng Điện tim: Phòng 113";
                            rep.xrLabel3.Text = "Chỉ dẫn: Tầng 1 nhà B";
                            //rep.SoPhieuSL.Value = "CD-4877/2020";
                            break;
                    }

                    if (parnt.FirstOrDefault().SThe.Length == 15)
                    {
                        rep.SThe1.Value = parnt.FirstOrDefault().SThe.Substring(0, 3);
                        rep.SThe2.Value = parnt.FirstOrDefault().SThe.Substring(3, 2);
                        rep.SThe3.Value = parnt.FirstOrDefault().SThe.Substring(5, 2);
                        rep.SThe4.Value = parnt.FirstOrDefault().SThe.Substring(7, 3);
                        rep.SThe5.Value = parnt.FirstOrDefault().SThe.Substring(10, 5);
                    }
                }
                if (InTongHop)
                {
                    var kt = _data.CLS.Where(p => p.MaBNhan == _Mabn && p.IdCLS == idCLS).ToList();
                    if (DungChung.Bien.MaBV == "14017")
                    {
                        List<CLSTH> listAll = new List<CLSTH>();
                        List<CLSTH> qmnt1 = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn)
                                             join cd in _data.ChiDinhs.Where(p => p.Status == 0) on cls.IdCLS equals cd.IdCLS
                                             join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                             join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                             join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                             join n in _data.NhomDVs.Where(p => p.IDNhom == IDNhom) on tn.IDNhom equals n.IDNhom

                                             select new CLSTH
                                             {
                                                 IDCD = cd.IDCD,
                                                 MaDV = dv.MaDV,
                                                 IDNhom = tn.IDNhom ?? 0,
                                                 TenNhom = n.TenNhom,
                                                 TenTN = tn.TenTN,
                                                 TenRG = DungChung.Bien.MaBV == "24272" ? dv.TenRG : dv.TenDV,
                                                 MoTa = cd.MoTa,
                                                 MaCB = cls.MaCB,
                                                 NgayTH = cls.NgayTH,
                                                 NgayCD = cls.NgayThang,
                                                 Status = cd.Status,
                                                 MaKP = cls.MaKP,
                                                 TenKP = kp.TenKP
                                             }).ToList();
                        listAll.AddRange(qmnt1);
                        var result = (from dv in listAll
                                      group dv by new { dv.MaDV, dv.TenRG, dv.TenTN } into x
                                      orderby x.Key.TenTN
                                      select new
                                      {
                                          x.Key.MaDV,
                                          SoLuong = x.Count(),
                                          TenDV = x.Key.TenRG,
                                          TenTN = x.Key.TenTN,
                                          NgayCD = x.FirstOrDefault().NgayCD.ToString()

                                      }).ToList();

                        if (result.Count > 0)
                        {

                            //get chẩn đoán
                            string[] _MaICDarr = DungChung.Ham.getMaICDarrFull_SL(_data, _Mabn, DungChung.Bien.GetICD, idkb);
                            string[] icd = _MaICDarr[0].Split(';');
                            string[] tenicd = _MaICDarr[1].Split(';');
                            string lydo = "";
                            if (icd.Length <= tenicd.Length)
                            {
                                for (int i = 0; i < icd.Length; i++)
                                {
                                    lydo += " " + icd[i] + "-" + tenicd[i] + ";";
                                }
                                if (icd.Length < tenicd.Length)
                                {
                                    int cut1 = tenicd.Length - icd.Length;
                                    int cut = tenicd.Length - cut1;
                                    string mab1k = DungChung.Ham.FreshString(string.Join(";", tenicd.Skip(cut)));
                                    lydo += " " + mab1k + ";";
                                }
                            }
                            else
                            {
                                for (int i = 0; i < tenicd.Length; i++)
                                {
                                    lydo += " " + icd[i] + "-" + tenicd[i] + ";";
                                }
                            }


                            rep.ChanDoan.Value = lydo;
                            rep.TieuDe.Value = TenPhieu;
                            if (qmnt1.FirstOrDefault().Status == 1)
                                rep.ThucHien.Value = "Đã thực hiện";
                            DateTime _dt = System.DateTime.Now;
                            if (qmnt1.FirstOrDefault().NgayTH != null)
                                _dt = qmnt1.FirstOrDefault().NgayTH.Value;
                            rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                            rep.MaCB.Value = qmnt1.FirstOrDefault().MaCB;

                            rep.KPhong.Value = loadkp.FirstOrDefault().TenKP.ToUpper();
                            int makpyh = qmnt1.FirstOrDefault().MaKP ?? 0;
                            var kpth = _data.KPhongs.Where(p => p.MaKP == makpyh).ToList();
                            arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt1.FirstOrDefault().MaKP == null ? 0 : qmnt1.FirstOrDefault().MaKP.Value);
                            //arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, qmnt1.FirstOrDefault().MaKP == null ? 0 : qmnt1.FirstOrDefault().MaKP.Value);
                            //rep.ChanDoan.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.GetChanDoanKB(_data, _Mabn) : DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];// (arrChanDoanBD != null && arrChanDoanBD[0] != "") ? arrChanDoanBD[0] + ";" + arrThongTinBNKB[1] : 
                            rep.paramBuong.Value = arrThongTinBNKB[2];
                            rep.paramGiuong.Value = arrThongTinBNKB[3];
                            rep.paramTenKP.Value = arrThongTinBNKB[4];
                            rep.DataSource = result.ToList();
                            rep.BindingData();
                            rep.CreateDocument();
                            frm.prcIN.PrintingSystem = rep.PrintingSystem;
                            frm.ShowDialog();
                        }
                        else
                        {
                            MessageBox.Show("Không có chỉ định nào chưa thực hiện", "Thông báo",
                                MessageBoxButtons.OK, MessageBoxIcon.Error);
                        }
                    }
                }
            }
            else
            {
                BaoCao.repPhieuChiDinh_XetNghiem_A4 rep = new BaoCao.repPhieuChiDinh_XetNghiem_A4(InTongHop);
                rep.MauSo.Value = "MS...../BV - 01";
                rep.MaBNhan.Value = _Mabn;
                rep.SoPhieu.Value = idCLS;
                var parnt = (from bn in _data.BenhNhans
                             where bn.MaBNhan == _Mabn
                             select new
                             {
                                 bn.TenBNhan,
                                 bn.MaBNhan,
                                 bn.DChi,
                                 bn.GTinh, //bn.CapCuu,
                                 bn.Tuoi,
                                 bn.SThe,
                                 bn.NoiTru
                             }).ToList();
                if (parnt.Count > 0)
                {
                    rep.DiaChi.Value = parnt.FirstOrDefault().DChi;
                    rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _Mabn, DungChung.Bien.formatAge);
                    rep.TenBNhan.Value = parnt.FirstOrDefault().TenBNhan.ToUpper();
                    int gioiTinh = int.Parse(parnt.FirstOrDefault().GTinh.ToString());
                    if (gioiTinh == 1)
                    {
                        rep.Nu.Value = "/";
                    }
                    else if (gioiTinh == 0)
                    {
                        rep.Nam.Value = "/";
                    }
                    if (parnt.FirstOrDefault().SThe.Length == 15)
                    {
                        rep.SThe1.Value = parnt.FirstOrDefault().SThe.Substring(0, 3);
                        rep.SThe2.Value = parnt.FirstOrDefault().SThe.Substring(3, 2);
                        rep.SThe3.Value = parnt.FirstOrDefault().SThe.Substring(5, 2);
                        rep.SThe4.Value = parnt.FirstOrDefault().SThe.Substring(7, 3);
                        rep.SThe5.Value = parnt.FirstOrDefault().SThe.Substring(10, 5);
                    }
                    if (parnt.FirstOrDefault().NoiTru == 1)
                    {
                        var SoVV = _data.VaoViens.Where(p => p.MaBNhan == _Mabn).Select(p => p.SoVV).FirstOrDefault();
                        if (SoVV != null)
                            rep.SoVV.Value = "Số VV: " + SoVV.ToString();
                    }
                }
                if (InTongHop)
                {
                    int _status = 0;
                    var kt = _data.CLS.Where(p => p.MaBNhan == _Mabn && p.IdCLS == idCLS).ToList();
                    if (kt.Count > 0 && kt.FirstOrDefault().Status == 1)
                        _status = 1;
                    var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn)
                                join cd in _data.ChiDinhs.Where(p => p.Status == _status) on cls.IdCLS equals cd.IdCLS
                                join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                where (tn.TenRG.Contains("XN"))
                                select new
                                {
                                    STTcd = cls.STT,
                                    tn.STT,
                                    tn.TenTN,
                                    cd.Status,
                                    cls.NgayThang,
                                    cls.MaKP,
                                    cls.MaCB,
                                    kp.TenKP,
                                    dv.SoTT,
                                    TenDV = dv.TenDV,
                                    cls.MaKPth,
                                    cd.DonGia,
                                    dv.MaDV,
                                    STT_F = Byte.MaxValue
                                }).OrderBy(p => p.SoTT).ToList();

                    if (DungChung.Bien.MaBV == "30372")
                    {
                        var maDVs = qmnt.Select(o => o.MaDV).ToList();
                        var dichVucts = _data.DichVucts.Where(o => maDVs.Contains(o.MaDV ?? 0)).GroupBy(o => o.MaDV).Select(o => new { MaDV = (o.Key ?? 0), STT_F = o.Min(p => p.STT_F) }).ToList();

                        qmnt = qmnt.Join(dichVucts, o => o.MaDV, p => p.MaDV, (o, p) => new
                        {
                            o.STTcd,
                            o.STT,
                            o.TenTN,
                            o.Status,
                            o.NgayThang,
                            o.MaKP,
                            o.MaCB,
                            o.TenKP,
                            o.SoTT,
                            o.TenDV,
                            o.MaKPth,
                            o.DonGia,
                            o.MaDV,
                            STT_F = (p.STT_F ?? Byte.MaxValue)
                        }).OrderBy(o => o.STT_F).ToList();
                    }

                    if (qmnt.Count > 0)
                    {
                        rep.STT.Value = qmnt.FirstOrDefault().STTcd;
                        rep.TieuDe.Value = "XÉT NGHIỆM";
                        if (qmnt.FirstOrDefault().Status == 1)
                            rep.ThucHien.Value = "Đã thực hiện";
                        DateTime _dt = System.DateTime.Now;
                        if (qmnt.FirstOrDefault().NgayThang != null)
                            _dt = qmnt.FirstOrDefault().NgayThang.Value;
                        rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                        rep.MaCB.Value = qmnt.FirstOrDefault().MaCB;
                        int makpyh = qmnt.FirstOrDefault().MaKPth ?? 0;
                        var kpth = _data.KPhongs.Where(p => p.MaKP == makpyh).ToList();
                        rep.kpth.Text = kpth.Count() > 0 ? (kpth.FirstOrDefault().DChi) : "";
                        rep.KPhong.Value = qmnt.FirstOrDefault().TenKP.ToUpper();
                        arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                        arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                        rep.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                        rep.paramBuong.Value = arrThongTinBNKB[2];
                        rep.paramGiuong.Value = arrThongTinBNKB[3];
                        rep.paramTenKP.Value = arrThongTinBNKB[4];
                        rep.DataSource = qmnt.ToList();
                        rep.BindingData();
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                }
                else
                {
                    var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idCLS)
                                join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                select new { tn.STT, tn.TenTN, cd.Status, cls.NgayThang, cls.MaKP, dv.SoTT, cls.MaCB, kp.TenKP, TenDV = dv.TenDV + " (" + cd.ChiDinh1 + ")", cls.MaKPth, dv.MaDV, STT_F = Byte.MaxValue }).OrderBy(p => p.SoTT).ToList();

                    if (DungChung.Bien.MaBV == "30372")
                    {
                        var maDVs = qmnt.Select(o => o.MaDV).ToList();
                        var dichVucts = _data.DichVucts.Where(o => maDVs.Contains(o.MaDV ?? 0)).GroupBy(o => o.MaDV).Select(o => new { MaDV = (o.Key ?? 0), STT_F = o.Min(p => p.STT_F) }).ToList();

                        qmnt = qmnt.Join(dichVucts, o => o.MaDV, p => p.MaDV, (o, p) => new { o.STT, o.TenTN, o.Status, o.NgayThang, o.MaKP, o.SoTT, o.MaCB, o.TenKP, o.TenDV, o.MaKPth, o.MaDV, STT_F = (p.STT_F ?? Byte.MaxValue) }).OrderBy(o => o.STT_F).ToList();
                    }

                    if (qmnt.Count > 0)
                    {
                        rep.TieuDe.Value = qmnt.FirstOrDefault().TenTN.ToUpper();
                        if (qmnt.FirstOrDefault().Status == 1)
                            rep.ThucHien.Value = "Đã thực hiện";
                        DateTime _dt = System.DateTime.Now;
                        if (qmnt.FirstOrDefault().NgayThang != null)
                            _dt = qmnt.FirstOrDefault().NgayThang.Value;
                        rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                        rep.MaCB.Value = qmnt.FirstOrDefault().MaCB;
                        int makpyh = qmnt.FirstOrDefault().MaKPth ?? 0;
                        var kpth = _data.KPhongs.Where(p => p.MaKP == makpyh).ToList();
                        rep.kpth.Text = kpth.Count() > 0 ? (kpth.FirstOrDefault().DChi) : "";
                        rep.KPhong.Value = qmnt.FirstOrDefault().TenKP.ToUpper();
                        arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                        arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                        rep.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                        rep.paramBuong.Value = arrThongTinBNKB[2];
                        rep.paramGiuong.Value = arrThongTinBNKB[3];
                        rep.paramTenKP.Value = arrThongTinBNKB[4];
                        rep.DataSource = qmnt.ToList();
                        rep.BindingData();
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                }
            }
        }

        #endregion chi dinh tong hop son la

        #region chi dinh son la theo ngay
        public static void InChiDinh_SL_Ngay(QLBV_Database.QLBVEntities _data, frmIn frm, string _MauIn, int _Mabn, int idCLS, bool InTongHop, string code, int IDNhom, string TenPhieu, DateTime Ngay)
        {

            List<BNDT> bndt = new List<BNDT>();
            List<BNDT> abc = (from bnkm in _data.BNKBs.Where(p => p.MaBNhan == _Mabn)
                              .OrderByDescending(p => p.IDKB)
                              select new BNDT
                              {
                                  IDKB = bnkm.IDKB,
                                  MaKP = bnkm.MaKP,
                                  MaCB = bnkm.MaCB
                              }).ToList();
            bndt.AddRange(abc);

            int idkb = bndt.FirstOrDefault().IDKB;
            int? idkp = bndt.FirstOrDefault().MaKP;
            string macb = bndt.FirstOrDefault().MaCB;
            var loadkp = (from kp in _data.KPhongs.Where(p => p.MaKP == idkp)
                          select new
                          {
                              kp.TenKP
                          }).ToList();
            var loadcb = (from cb in _data.CanBoes.Where(p => p.MaCB == macb)
                          select new
                          {
                              cb.ChucVu,
                              cb.TenCB
                          }).ToList();

            if (_MauIn == "A4")
            {

                BaoCao.repPhieuChiDinh_SL_A4 rep = new BaoCao.repPhieuChiDinh_SL_A4(InTongHop);
                rep.MauSo.Value = "MS...../BV - 01";
                rep.SoPhieuSL.Value = idCLS;
                rep.MaBNhan.Value = (DungChung.Bien.MaBV == "27001" || DungChung.Bien.MaBV == "27183" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297") ? "Mã BN:" + _Mabn.ToString() : _Mabn.ToString();
                rep.SoPhieu.Value = idCLS;
                var parnt = (from bn in _data.BenhNhans
                             where bn.MaBNhan == _Mabn
                             select new
                             {
                                 bn.TenBNhan,
                                 bn.MaBNhan,
                                 bn.DChi,
                                 bn.GTinh,// bn.CapCuu,
                                 bn.Tuoi,
                                 bn.NoiTru,
                                 bn.DTNT,
                                 bn.SThe
                             }).ToList();

                var getBA = (from vv in _data.VaoViens
                             where vv.MaBNhan == _Mabn
                             select new
                             {
                                 vv.SoBA,
                             }).ToList();
                if (loadcb.Count > 0)
                {
                    rep.CBCD_SL.Value = loadcb.FirstOrDefault().ChucVu + ": " + loadcb.FirstOrDefault().TenCB;
                }
                if (getBA.Count > 0)
                {
                    rep.SoBA.Value = getBA.FirstOrDefault().SoBA;
                }

                if (parnt.Count > 0)
                {
                    rep.DiaChi.Value = parnt.FirstOrDefault().DChi;
                    rep.Tuoi.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.TinhTuoiBenhNhan(_data, _Mabn) : DungChung.Ham.TuoitheoThang(_data, _Mabn, DungChung.Bien.formatAge);
                    rep.TenBNhan.Value = parnt.FirstOrDefault().TenBNhan.ToUpper();
                    int gioiTinh = int.Parse(parnt.FirstOrDefault().GTinh.ToString());
                    int NTru = int.Parse(parnt.FirstOrDefault().NoiTru.ToString());

                    switch (NTru)
                    {
                        case 1:
                            rep.loaiBA.Value = "(BỆNH NHÂN NỘI TRÚ)";
                            break;
                        case 0:
                            if (parnt.FirstOrDefault().DTNT)
                            {
                                rep.loaiBA.Value = "(BỆNH NHÂN ĐIỀU TRỊ NGOẠI TRÚ)";
                                break;
                            }
                            else
                            {
                                rep.loaiBA.Value = "(BỆNH NHÂN NGOẠI TRÚ)";
                                break;
                            }
                    }

                    switch (gioiTinh)
                    {
                        case 0:
                            rep.GioiTinh.Value = "Nữ";
                            break;
                        case 1:
                            rep.GioiTinh.Value = "Nam";
                            break;
                    }

                    switch (IDNhom)
                    {
                        case 1:
                            rep.chidan.Text = "- Phòng Lấy bệnh phẩm và trả kết quả: Phòng 118 ";
                            rep.xrLabel3.Text = "Chỉ dẫn: Tầng 1 nhà B";
                            //rep.SoPhieuSL.Value = "XN-4877/2020";
                            break;
                        case 2:
                            rep.chidan.Text = "- Phòng chụp X-Quang: Phòng 115 \n- Phòng Đo Điện cơ- Lưu Huyết Não: Phòng 113 \n-Phòng Siêu Âm: Phòng 111 \n- Phòng Đo Mật độ xương: Phòng 112 \n- Phòng Điện tim: Phòng 113";
                            rep.xrLabel3.Text = "Chỉ dẫn: Tầng 1 nhà B";
                            //rep.SoPhieuSL.Value = "CD-4877/2020";
                            break;
                    }

                    if (parnt.FirstOrDefault().SThe.Length == 15)
                    {
                        rep.SThe1.Value = parnt.FirstOrDefault().SThe.Substring(0, 3);
                        rep.SThe2.Value = parnt.FirstOrDefault().SThe.Substring(3, 2);
                        rep.SThe3.Value = parnt.FirstOrDefault().SThe.Substring(5, 2);
                        rep.SThe4.Value = parnt.FirstOrDefault().SThe.Substring(7, 3);
                        rep.SThe5.Value = parnt.FirstOrDefault().SThe.Substring(10, 5);
                    }
                }
                if (InTongHop)
                {
                    var kt = _data.CLS.Where(p => p.MaBNhan == _Mabn && p.IdCLS == idCLS).ToList();
                    if (DungChung.Bien.MaBV == "14017")
                    {
                        List<CLSTH> listAll = new List<CLSTH>();
                        List<CLSTH> qmnt1 = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn && p.NgayThang.Value.Day == Ngay.Day && p.NgayThang.Value.Month == Ngay.Month && p.NgayThang.Value.Year == Ngay.Year)
                                             join cd in _data.ChiDinhs.Where(p => p.Status == 0) on cls.IdCLS equals cd.IdCLS
                                             join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                             join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                             join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                             join n in _data.NhomDVs.Where(p => p.IDNhom == IDNhom) on tn.IDNhom equals n.IDNhom

                                             select new CLSTH
                                             {
                                                 IDCD = cd.IDCD,
                                                 MaDV = dv.MaDV,
                                                 IDNhom = tn.IDNhom ?? 0,
                                                 TenNhom = n.TenNhom,
                                                 TenTN = tn.TenTN,
                                                 TenRG = dv.TenDV,
                                                 MoTa = cd.MoTa,
                                                 MaCB = cls.MaCB,
                                                 NgayTH = cls.NgayTH,
                                                 NgayCD = cls.NgayThang,
                                                 Status = cd.Status,
                                                 MaKP = cls.MaKP,
                                                 TenKP = kp.TenKP
                                             }).ToList();
                        listAll.AddRange(qmnt1);
                        var result = (from dv in listAll
                                      group dv by new { dv.MaDV, dv.TenRG, dv.TenTN } into x
                                      orderby x.Key.TenTN
                                      select new
                                      {
                                          x.Key.MaDV,
                                          SoLuong = x.Count(),
                                          TenDV = x.Key.TenRG,
                                          TenTN = x.Key.TenTN,
                                          NgayCD = x.FirstOrDefault().NgayCD.ToString()

                                      }).ToList();

                        if (result.Count > 0)
                        {

                            //get chẩn đoán
                            string[] _MaICDarr = DungChung.Ham.getMaICDarrFull_SL(_data, _Mabn, DungChung.Bien.GetICD, idkb);
                            string[] icd = _MaICDarr[0].Split(';');
                            string[] tenicd = _MaICDarr[1].Split(';');
                            string lydo = "";
                            if (icd.Length <= tenicd.Length)
                            {
                                for (int i = 0; i < icd.Length; i++)
                                {
                                    lydo += " " + icd[i] + "-" + tenicd[i] + ";";
                                }
                                if (icd.Length < tenicd.Length)
                                {
                                    int cut1 = tenicd.Length - icd.Length;
                                    int cut = tenicd.Length - cut1;
                                    string mab1k = DungChung.Ham.FreshString(string.Join(";", tenicd.Skip(cut)));
                                    lydo += " " + mab1k + ";";
                                }
                            }
                            else
                            {
                                for (int i = 0; i < tenicd.Length; i++)
                                {
                                    lydo += " " + icd[i] + "-" + tenicd[i] + ";";
                                }
                            }


                            rep.ChanDoan.Value = lydo;
                            rep.TieuDe.Value = TenPhieu;
                            if (qmnt1.FirstOrDefault().Status == 1)
                                rep.ThucHien.Value = "Đã thực hiện";
                            DateTime _dt = System.DateTime.Now;
                            if (qmnt1.FirstOrDefault().NgayTH != null)
                                _dt = qmnt1.FirstOrDefault().NgayTH.Value;
                            rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                            rep.MaCB.Value = qmnt1.FirstOrDefault().MaCB;

                            rep.KPhong.Value = loadkp.FirstOrDefault().TenKP.ToUpper();
                            int makpyh = qmnt1.FirstOrDefault().MaKP ?? 0;
                            var kpth = _data.KPhongs.Where(p => p.MaKP == makpyh).ToList();
                            arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt1.FirstOrDefault().MaKP == null ? 0 : qmnt1.FirstOrDefault().MaKP.Value);
                            //arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, qmnt1.FirstOrDefault().MaKP == null ? 0 : qmnt1.FirstOrDefault().MaKP.Value);
                            //rep.ChanDoan.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.GetChanDoanKB(_data, _Mabn) : DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];// (arrChanDoanBD != null && arrChanDoanBD[0] != "") ? arrChanDoanBD[0] + ";" + arrThongTinBNKB[1] : 
                            rep.paramBuong.Value = arrThongTinBNKB[2];
                            rep.paramGiuong.Value = arrThongTinBNKB[3];
                            rep.paramTenKP.Value = arrThongTinBNKB[4];
                            rep.DataSource = result.ToList();
                            rep.BindingData();
                            rep.CreateDocument();
                            frm.prcIN.PrintingSystem = rep.PrintingSystem;
                            frm.ShowDialog();
                        }
                        else
                        {
                            MessageBox.Show("Không có chỉ định nào chưa thực hiện", "Thông báo",
                                MessageBoxButtons.OK, MessageBoxIcon.Error);
                        }
                    }
                }
            }
            else
            {
                BaoCao.repPhieuChiDinh_XetNghiem_A4 rep = new BaoCao.repPhieuChiDinh_XetNghiem_A4(InTongHop);
                rep.MauSo.Value = "MS...../BV - 01";
                rep.MaBNhan.Value = _Mabn;
                rep.SoPhieu.Value = idCLS;
                var parnt = (from bn in _data.BenhNhans
                             where bn.MaBNhan == _Mabn
                             select new
                             {
                                 bn.TenBNhan,
                                 bn.MaBNhan,
                                 bn.DChi,
                                 bn.GTinh, //bn.CapCuu,
                                 bn.Tuoi,
                                 bn.SThe,
                                 bn.NoiTru
                             }).ToList();
                if (parnt.Count > 0)
                {
                    rep.DiaChi.Value = parnt.FirstOrDefault().DChi;
                    rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _Mabn, DungChung.Bien.formatAge);
                    rep.TenBNhan.Value = parnt.FirstOrDefault().TenBNhan.ToUpper();
                    int gioiTinh = int.Parse(parnt.FirstOrDefault().GTinh.ToString());
                    if (gioiTinh == 1)
                    {
                        rep.Nu.Value = "/";
                    }
                    else if (gioiTinh == 0)
                    {
                        rep.Nam.Value = "/";
                    }
                    if (parnt.FirstOrDefault().SThe.Length == 15)
                    {
                        rep.SThe1.Value = parnt.FirstOrDefault().SThe.Substring(0, 3);
                        rep.SThe2.Value = parnt.FirstOrDefault().SThe.Substring(3, 2);
                        rep.SThe3.Value = parnt.FirstOrDefault().SThe.Substring(5, 2);
                        rep.SThe4.Value = parnt.FirstOrDefault().SThe.Substring(7, 3);
                        rep.SThe5.Value = parnt.FirstOrDefault().SThe.Substring(10, 5);
                    }
                    if (parnt.FirstOrDefault().NoiTru == 1)
                    {
                        var SoVV = _data.VaoViens.Where(p => p.MaBNhan == _Mabn).Select(p => p.SoVV).FirstOrDefault();
                        if (SoVV != null)
                            rep.SoVV.Value = "Số VV: " + SoVV.ToString();
                    }
                }
                if (InTongHop)
                {
                    int _status = 0;
                    var kt = _data.CLS.Where(p => p.MaBNhan == _Mabn && p.IdCLS == idCLS).ToList();
                    if (kt.Count > 0 && kt.FirstOrDefault().Status == 1)
                        _status = 1;
                    var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn)
                                join cd in _data.ChiDinhs.Where(p => p.Status == _status) on cls.IdCLS equals cd.IdCLS
                                join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                where (tn.TenRG.Contains("XN"))
                                select new
                                {
                                    STTcd = cls.STT,
                                    tn.STT,
                                    tn.TenTN,
                                    cd.Status,
                                    cls.NgayThang,
                                    cls.MaKP,
                                    cls.MaCB,
                                    kp.TenKP,
                                    dv.SoTT,
                                    TenDV = dv.TenDV,
                                    cls.MaKPth,
                                    cd.DonGia,
                                    dv.MaDV,
                                    STT_F = Byte.MaxValue
                                }).OrderBy(p => p.SoTT).ToList();

                    if (DungChung.Bien.MaBV == "30372")
                    {
                        var maDVs = qmnt.Select(o => o.MaDV).ToList();
                        var dichVucts = _data.DichVucts.Where(o => maDVs.Contains(o.MaDV ?? 0)).GroupBy(o => o.MaDV).Select(o => new { MaDV = (o.Key ?? 0), STT_F = o.Min(p => p.STT_F) }).ToList();

                        qmnt = qmnt.Join(dichVucts, o => o.MaDV, p => p.MaDV, (o, p) => new
                        {
                            o.STTcd,
                            o.STT,
                            o.TenTN,
                            o.Status,
                            o.NgayThang,
                            o.MaKP,
                            o.MaCB,
                            o.TenKP,
                            o.SoTT,
                            o.TenDV,
                            o.MaKPth,
                            o.DonGia,
                            o.MaDV,
                            STT_F = (p.STT_F ?? Byte.MaxValue)
                        }).OrderBy(o => o.STT_F).ToList();
                    }

                    if (qmnt.Count > 0)
                    {
                        rep.STT.Value = qmnt.FirstOrDefault().STTcd;
                        rep.TieuDe.Value = "XÉT NGHIỆM";
                        if (qmnt.FirstOrDefault().Status == 1)
                            rep.ThucHien.Value = "Đã thực hiện";
                        DateTime _dt = System.DateTime.Now;
                        if (qmnt.FirstOrDefault().NgayThang != null)
                            _dt = qmnt.FirstOrDefault().NgayThang.Value;
                        rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                        rep.MaCB.Value = qmnt.FirstOrDefault().MaCB;
                        int makpyh = qmnt.FirstOrDefault().MaKPth ?? 0;
                        var kpth = _data.KPhongs.Where(p => p.MaKP == makpyh).ToList();
                        rep.kpth.Text = kpth.Count() > 0 ? (kpth.FirstOrDefault().DChi) : "";
                        rep.KPhong.Value = qmnt.FirstOrDefault().TenKP.ToUpper();
                        arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                        arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                        rep.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                        rep.paramBuong.Value = arrThongTinBNKB[2];
                        rep.paramGiuong.Value = arrThongTinBNKB[3];
                        rep.paramTenKP.Value = arrThongTinBNKB[4];
                        rep.DataSource = qmnt.ToList();
                        rep.BindingData();
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                }
                else
                {
                    var qmnt = (from cls in _data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idCLS)
                                join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                                join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                select new { tn.STT, tn.TenTN, cd.Status, cls.NgayThang, cls.MaKP, dv.SoTT, cls.MaCB, kp.TenKP, TenDV = dv.TenDV + " (" + cd.ChiDinh1 + ")", cls.MaKPth, dv.MaDV, STT_F = Byte.MaxValue }).OrderBy(p => p.SoTT).ToList();

                    if (DungChung.Bien.MaBV == "30372")
                    {
                        var maDVs = qmnt.Select(o => o.MaDV).ToList();
                        var dichVucts = _data.DichVucts.Where(o => maDVs.Contains(o.MaDV ?? 0)).GroupBy(o => o.MaDV).Select(o => new { MaDV = (o.Key ?? 0), STT_F = o.Min(p => p.STT_F) }).ToList();

                        qmnt = qmnt.Join(dichVucts, o => o.MaDV, p => p.MaDV, (o, p) => new { o.STT, o.TenTN, o.Status, o.NgayThang, o.MaKP, o.SoTT, o.MaCB, o.TenKP, o.TenDV, o.MaKPth, o.MaDV, STT_F = (p.STT_F ?? Byte.MaxValue) }).OrderBy(o => o.STT_F).ToList();
                    }

                    if (qmnt.Count > 0)
                    {
                        rep.TieuDe.Value = qmnt.FirstOrDefault().TenTN.ToUpper();
                        if (qmnt.FirstOrDefault().Status == 1)
                            rep.ThucHien.Value = "Đã thực hiện";
                        DateTime _dt = System.DateTime.Now;
                        if (qmnt.FirstOrDefault().NgayThang != null)
                            _dt = qmnt.FirstOrDefault().NgayThang.Value;
                        rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                        rep.MaCB.Value = qmnt.FirstOrDefault().MaCB;
                        int makpyh = qmnt.FirstOrDefault().MaKPth ?? 0;
                        var kpth = _data.KPhongs.Where(p => p.MaKP == makpyh).ToList();
                        rep.kpth.Text = kpth.Count() > 0 ? (kpth.FirstOrDefault().DChi) : "";
                        rep.KPhong.Value = qmnt.FirstOrDefault().TenKP.ToUpper();
                        arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                        arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, qmnt.FirstOrDefault().MaKP == null ? 0 : qmnt.FirstOrDefault().MaKP.Value);
                        rep.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                        rep.paramBuong.Value = arrThongTinBNKB[2];
                        rep.paramGiuong.Value = arrThongTinBNKB[3];
                        rep.paramTenKP.Value = arrThongTinBNKB[4];
                        rep.DataSource = qmnt.ToList();
                        rep.BindingData();
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                }
            }
        }
        #endregion


        /// <summary>
        /// 
        /// </summary>
        /// <param name="_data"></param>
        /// <param name="frm"></param>
        /// <param name="MauIn"></param>
        /// <param name="_Mabn"></param>
        /// <param name="idCLS"></param>
        #region chỉ định trắc nghiệm tâm lý

        public static void _setParam_ChiDinh_TNTL(QLBV_Database.QLBVEntities _data, frmIn frm, string MauIn, int _Mabn, int idCLS)
        {
            if (MauIn == "A4")
            {

                var cls = _data.CLS.Where(p => p.IdCLS == idCLS).FirstOrDefault();
                DateTime ngaycd = cls != null ? Convert.ToDateTime(cls.NgayThang) : DateTime.Now;
                var par4 = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                            join cls4 in _data.CLS.Where(p => DungChung.Bien.MaBV == "34019" ? (InTongHop ? true : p.NgayThang == ngaycd) : p.IdCLS == idCLS) on bn.MaBNhan equals cls4.MaBNhan
                            join kp in _data.KPhongs on cls4.MaKP equals kp.MaKP
                            join kpTH in _data.KPhongs on cls4.MaKPth equals kpTH.MaKP
                            join chidinh in _data.ChiDinhs.Where(o => InTongHop ? o.Status == 0 : true) on cls4.IdCLS equals chidinh.IdCLS
                            join dv in _data.DichVus on chidinh.MaDV equals dv.MaDV
                            join tn in _data.TieuNhomDVs.Where(o => o.TenRG.ToLower().Contains("trắc nghiệm tâm lý")) on dv.IdTieuNhom equals tn.IdTieuNhom
                            select new { dv.TenRG, cls4.STT, tn.TenTN, chidinh.Status, chidinh.SoPhieu, cls4.NgayThang, cls4.MaCB, cls4.MaKP, kp.TenKP, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, cls4.MaKPth, DiaChiKPth = kpTH.DChi, TenKPth = kpTH.TenKP, bn.Tuoi, bn.SThe, bn.HanBHDen, bn.NoiTru, chidinh.ChiDinh1, chidinh.KetLuan, dv.TenDV, cls4.NgayTH, cls4.CapCuu, bn.NgaySinh, bn.ThangSinh, bn.NamSinh, bn.DTuong, bn.HanBHTu, cls4.BarCode, IsTrongBH = (chidinh.TrongBH == 1), IDP = bn.IDPerson }).ToList();

                //Tách in trong BHYT và ngoài BHYT khi in chỉ định không phải in tổng hợp

                for (int i = 0; i < 2; i++)
                {
                    var par41 = par4.Where(o => o.IsTrongBH == (i == 0)).ToList();

                    if (par41.Count > 0)
                    {
                        repPhieuChiDinh_TNTamLy_34019_A4 rep = new repPhieuChiDinh_TNTamLy_34019_A4();//2
                        rep.xrPictureBox1.Image = QLBV.DungChung.Ham.GetLogo();
                        rep.SoPhieu.Value = par41.FirstOrDefault().SoPhieu;
                        rep.MaDieuTri.Value = _Mabn;
                        rep.MaBN.Value = par41.FirstOrDefault().IDP;
                        rep.TenBV.Value = DungChung.Bien.TenCQ.ToUpper();
                        var hthong = _data.HTHONGs.FirstOrDefault(o => o.MaBV == DungChung.Bien.MaBV);
                        if (hthong != null)
                        {
                            rep.DiaChiBV.Value = hthong.DiaChi;
                        }
                        rep.TenPhieu.Value = "PHIẾU CHỈ ĐỊNH " + par41.FirstOrDefault().TenTN.ToUpper();
                        rep.KPhong.Value = par41.FirstOrDefault().TenKPth + (!string.IsNullOrWhiteSpace(par41.FirstOrDefault().DiaChiKPth) ? (" (" + par41.FirstOrDefault().DiaChiKPth + ")") : "");
                        rep.CapCuu.Value = (par41.FirstOrDefault().CapCuu == true) ? "X" : "";
                        rep.TenBNhan.Value = par41.FirstOrDefault().TenBNhan.ToUpper();
                        rep.NgaySinh.Value = DungChung.Ham.GhepNgaySinh("/", par41.FirstOrDefault().NamSinh, par41.FirstOrDefault().ThangSinh, par41.FirstOrDefault().NgaySinh);
                        rep.GioiTinh.Value = par41.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                        rep.DiaChi.Value = par41.FirstOrDefault().DChi;
                        rep.NgayGio.Value = "Thái Bình, " + DungChung.Ham.NgaySangChu(par4.FirstOrDefault().NgayThang.Value);
                        //if (!string.IsNullOrWhiteSpace(par41.FirstOrDefault().DTuong) && par41.FirstOrDefault().DTuong == "BHYT")
                        //{
                        //    rep.BHYT.Value = "X";
                        //}
                        //else
                        //    rep.ThuPhi.Value = "X";
                        if (i == 0)
                            rep.BHYT.Value = "X";
                        else
                            rep.ThuPhi.Value = "X";
                        rep.CapCuu.Value = (par41.FirstOrDefault().CapCuu == true) ? "X" : "";

                        if (i == 0)
                        {
                            if (!string.IsNullOrWhiteSpace(par41.FirstOrDefault().SThe))
                            {
                                rep.HanThe.Value = par41.FirstOrDefault().HanBHDen != null ? par41.FirstOrDefault().HanBHDen.Value.ToString("dd/MM/yyyy") : "";
                                rep.HanTu.Value = par41.FirstOrDefault().HanBHTu != null ? par41.FirstOrDefault().HanBHTu.Value.ToString("dd/MM/yyyy") : "";
                                rep.SThe1.Value = par41.FirstOrDefault().SThe.Substring(0, 2);
                                rep.SThe2.Value = par41.FirstOrDefault().SThe.Substring(2, 1);
                                rep.SThe3.Value = par41.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe4.Value = par41.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe5.Value = par41.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe6.Value = par41.FirstOrDefault().SThe.Substring(10, 5);
                            }
                        }
                        rep.paramTenKP.Value = par41.FirstOrDefault().TenKP;
                        var maKp = (par41.FirstOrDefault().MaKP == null ? 0 : par41.FirstOrDefault().MaKP.Value);
                        var kbcd = (from bnkb in _data.BNKBs.Where(p => p.MaBNhan == _Mabn && p.MaKP == maKp)
                                    select bnkb).ToList();
                        if (kbcd != null && kbcd.Count > 0)
                        {
                            rep.BenhChinh.Value = kbcd.FirstOrDefault().ChanDoan + " (" + kbcd.FirstOrDefault().MaICD + ")";
                            rep.BenhPhu.Value = kbcd.FirstOrDefault().BenhKhac;
                            if (!string.IsNullOrWhiteSpace(kbcd.FirstOrDefault().Buong))
                            {
                                var spBuong = kbcd.FirstOrDefault().Buong.Split(';');
                                if (spBuong != null && spBuong.Count() > 0)
                                {
                                    rep.paramBuong.Value = spBuong[spBuong.Count() - 1];
                                }
                            }
                            if (!string.IsNullOrWhiteSpace(kbcd.FirstOrDefault().Giuong))
                            {
                                var spGiuong = kbcd.FirstOrDefault().Giuong.Split(';');
                                if (spGiuong != null && spGiuong.Count() > 0)
                                {
                                    rep.paramGiuong.Value = spGiuong[spGiuong.Count() - 1];
                                }
                            }
                        }
                        //rep.YCKT.Value = par41.FirstOrDefault().TenDV;
                        rep.DataSource = par41.ToList();
                        rep.BindingData();
                        rep.CreateDocument();
                        if (PrintNow)
                        {
                            ReportPrintTool rpt = new ReportPrintTool(rep);
                            rpt.Print();
                        }
                        else
                        {
                            frm.prcIN.PrintingSystem = rep.PrintingSystem;
                            frm.ShowDialog();
                        }
                    }
                }

            }
        }
        #endregion
        #region chỉ định CDHA
        public static void _setParam_ChiDinh_CDHA(QLBV_Database.QLBVEntities _data, frmIn frm, string MauIn, int _Mabn, int idCLS, string tenRG)
        {
            #region 27023 lấy số trên phiếu : BN nôi trú lấy số bệnh án, bệnh nhân ngoại trú số thứ tự tăng theo ngày
            string _so = "";
            if (DungChung.Bien.MaBV == "27023")
            {
                var bnhan = _data.BenhNhans.Where(p => p.MaBNhan == _Mabn).FirstOrDefault();
                if (bnhan != null)
                {
                    if (bnhan.NoiTru == 1)
                    {
                        var qvv = _data.VaoViens.Where(parameters => parameters.MaBNhan == _Mabn).Select(p => p.SoBA).FirstOrDefault();
                        if (qvv != null)
                            _so = qvv;
                    }
                    else
                    {
                        DateTime tungay = DungChung.Ham.NgayTu(bnhan.NNhap.Value);
                        DateTime denngay = DungChung.Ham.NgayDen(bnhan.NNhap.Value);
                        var qbn = _data.BenhNhans.Where(p => p.NNhap >= tungay && p.NNhap <= denngay).Where(p => p.NoiTru == 0).OrderBy(p => p.NNhap).ToList();
                        int count = 0;
                        foreach (var a in qbn)
                        {
                            count++;
                            if (a.MaBNhan == _Mabn)
                                break;
                        }
                        _so = count.ToString();
                    }
                }

            }
            #endregion
            if (DungChung.Bien.MaBV == "30372" && tenRG == "Siêu âm")
            {
                MauIn = "A5";
            }
            if (MauIn == "A5")
            {
                using (BaoCao.repPhieuChiDinh_CDHA rep = new BaoCao.repPhieuChiDinh_CDHA())
                {
                    var cls = _data.CLS.Where(p => p.IdCLS == idCLS).FirstOrDefault();
                    DateTime ngaycd = cls != null ? Convert.ToDateTime(cls.NgayThang) : DateTime.Now;
                    var par4 = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                join cls4 in _data.CLS.Where(p => (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "24009") ? p.NgayThang == ngaycd : p.IdCLS == idCLS) on bn.MaBNhan equals cls4.MaBNhan
                                join kp in _data.KPhongs on cls4.MaKP equals kp.MaKP
                                join chidinh in _data.ChiDinhs on cls4.IdCLS equals chidinh.IdCLS
                                join dv in _data.DichVus on chidinh.MaDV equals dv.MaDV
                                join bnkb in _data.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                                join tn in _data.TieuNhomDVs.Where(o => o.TenRG == tenRG) on dv.IdTieuNhom equals tn.IdTieuNhom
                                select new { bnkb.ChanDoanBD, chidinh.YLenh2, cls4.MaKPth, cls4.STT, tn.TenTN, tn.TenRG, chidinh.Status, cls4.NgayThang, cls4.MaCB, cls4.MaKP, kp.TenKP, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, chidinh.ChiDinh1, chidinh.KetLuan, TenDV = DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24272" ? dv.TenRG : dv.TenDV, cls4.NgayTH, bn.NgaySinh, bn.ThangSinh, bn.NamSinh, dv.MaDV, STT_F = Byte.MaxValue }).ToList();
                    var par45 = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                 join cls4 in _data.CLS.Where(p => (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "24009") ? p.NgayThang == ngaycd : p.IdCLS == idCLS) on bn.MaBNhan equals cls4.MaBNhan
                                 join kp in _data.KPhongs on cls4.MaKP equals kp.MaKP
                                 join chidinh in _data.ChiDinhs on cls4.IdCLS equals chidinh.IdCLS
                                 join dv in _data.DichVus on chidinh.MaDV equals dv.MaDV
                                 join tn in _data.TieuNhomDVs.Where(o => o.TenRG == tenRG) on dv.IdTieuNhom equals tn.IdTieuNhom
                                 select new { kp.DChi, cls4.MaKPth, cls4.STT, tn.TenTN, tn.TenRG, chidinh.Status, cls4.NgayThang, cls4.MaCB, cls4.MaKP, kp.TenKP, bn.MaBNhan, bn.TenBNhan, bn.GTinh, bn.Tuoi, bn.SThe, chidinh.ChiDinh1, chidinh.KetLuan, TenDV = DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24272" ? dv.TenRG : dv.TenDV, cls4.NgayTH, bn.NgaySinh, bn.ThangSinh, bn.NamSinh, dv.MaDV, STT_F = Byte.MaxValue }).ToList();
                    if (DungChung.Bien.MaBV == "30372")
                    {
                        var maDVs = par4.Select(o => o.MaDV).ToList();
                        var dichVucts = _data.DichVucts.Where(o => maDVs.Contains(o.MaDV ?? 0)).GroupBy(o => o.MaDV).Select(o => new { MaDV = (o.Key ?? 0), STT_F = o.Min(p => p.STT_F) }).ToList();
                        par45 = par45.Join(dichVucts, o => o.MaDV, p => p.MaDV, (o, p) => new { o.DChi, o.MaKPth, o.STT, o.TenTN, o.TenRG, o.Status, o.NgayThang, o.MaCB, o.MaKP, o.TenKP, o.MaBNhan, o.TenBNhan, o.GTinh, o.Tuoi, o.SThe, o.ChiDinh1, o.KetLuan, o.TenDV, o.NgayTH, o.NgaySinh, o.ThangSinh, o.NamSinh, o.MaDV, STT_F = (p.STT_F ?? Byte.MaxValue) }).OrderBy(o => o.STT_F).ToList();
                        par4 = par4.Join(dichVucts, o => o.MaDV, p => p.MaDV, (o, p) => new { o.ChanDoanBD, o.YLenh2, o.MaKPth, o.STT, o.TenTN, o.TenRG, o.Status, o.NgayThang, o.MaCB, o.MaKP, o.TenKP, o.MaBNhan, o.TenBNhan, o.DChi, o.GTinh, o.Tuoi, o.SThe, o.ChiDinh1, o.KetLuan, o.TenDV, o.NgayTH, o.NgaySinh, o.ThangSinh, o.NamSinh, o.MaDV, STT_F = (p.STT_F ?? Byte.MaxValue) }).OrderBy(o => o.STT_F).ToList();
                    }
                    rep.KPthuchien.Value = par4.Select(p => p.MaKPth).FirstOrDefault().ToString();
                    rep.Mabn.Value = "Mã BN:" + _Mabn;
                    if (DungChung.Bien.MaBV == "27023")
                        rep.SoPhieu.Value = _so;
                    if (DungChung.Bien.MaBV == "24012")
                    {
                        rep.xrLabel53.Visible = true;
                        rep.xrLabel51.Visible = true;
                        rep.SoPhieu.Value = idCLS;
                        rep.code.Value = _Mabn;
                        arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, par4.FirstOrDefault().MaKP == null ? 0 : par4.FirstOrDefault().MaKP.Value);
                        rep.Parameters["MaICD"].Value = arrThongTinBNKB[0];

                    }
                    else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                    {
                        if (par4.Count > 0)
                        {
                            var qvv = _data.VaoViens.Where(p => p.MaBNhan == par4.FirstOrDefault().MaBNhan).FirstOrDefault();
                            if (qvv != null)
                                rep.SoPhieu.Value = qvv.SoVV;
                            else
                                rep.SoPhieu.Value = "";
                        }
                    }
                    else
                        rep.SoPhieu.Value = idCLS;
                    if (DungChung.Bien.MaBV == "24009")
                    {
                        rep.xrPictureBox1.Image = DungChung.Ham.GetLogo();
                    }
                    var qmnt = (from cls5 in _data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idCLS)
                                join cd in _data.ChiDinhs on cls5.IdCLS equals cd.IdCLS
                                join kp in _data.KPhongs on cls5.MaKP equals kp.MaKP
                                join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                                join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                select new { TenDVRG = dv.TenRG, dchi = kp.DChi, ylenh = dv.TenDV + "(" + cd.ChiDinh1 + ")", cd.ChiDinh1, cls5.STT, tn.TenTN, cd.Status, cd.LoaiMau, cls5.NgayThang, cls5.MaKP, cls5.MaCB, kp.TenKP, TenDV = DungChung.Bien.MaBV != "27001" && DungChung.Bien.MaBV != "30004" || (DungChung.Bien.MaBV == "30004" && (tenRG == "X-Quang" || tenRG == "Thủ thuật")) ? dv.TenDV : dv.TenDV + " (" + cd.ChiDinh1 + ")", dv.SoTT, tn.TenRG, cd.DonGia, cls5.MaKPth, dv.MaDV, STT_F = Byte.MaxValue }).OrderBy(p => p.SoTT).ToList();
                    if (par4.Count > 0)
                    {
                        if (DungChung.Bien.MaBV == "27001" && par4.FirstOrDefault().Status == 0)
                        {
                            var par41 = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                         join cls4 in _data.CLS on bn.MaBNhan equals cls4.MaBNhan
                                         join kp in _data.KPhongs on cls4.MaKP equals kp.MaKP
                                         join chidinh in _data.ChiDinhs on cls4.IdCLS equals chidinh.IdCLS
                                         join dv in _data.DichVus on chidinh.MaDV equals dv.MaDV
                                         join tn in _data.TieuNhomDVs.Where(o => o.TenRG == tenRG) on dv.IdTieuNhom equals tn.IdTieuNhom
                                         select new { chidinh.YLenh2, cls4.STT, tn.TenTN, chidinh.Status, cls4.NgayThang, cls4.MaCB, cls4.MaKP, kp.TenKP, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, chidinh.ChiDinh1, chidinh.KetLuan, dv.TenDV, cls4.NgayTH, cls4.MaKPth }).ToList();
                            rep.KPthuchien.Value = par41.Select(p => p.MaKPth).FirstOrDefault().ToString();
                            rep.STT.Value = par4.FirstOrDefault().STT;
                            rep.paramTenNhomCD.Value = par4.FirstOrDefault().TenTN.ToUpper();
                            rep.paramMauSo.Value = "MS:...../BV - 01";
                            if (par4.FirstOrDefault().Status == 1)
                                rep.ThucHien.Value = "Đã thực hiện";
                            DateTime _dt = System.DateTime.Now;
                            if (par4.FirstOrDefault().NgayThang != null)
                                _dt = par4.FirstOrDefault().NgayThang.Value;
                            rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                            rep.BSDT.Value = par4.FirstOrDefault().MaCB;
                            rep.KPhong.Value = par4.FirstOrDefault().TenKP.ToUpper();
                            rep.Parameters["TenCQ"].Value = DungChung.Bien.TenCQ.ToUpper();
                            rep.DiaChi.Value = par4.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _Mabn, DungChung.Bien.formatAge);
                            rep.TenBNhan.Value = par4.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par4.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yckt = "";
                            if (DungChung.Bien.MaBV == "30009")
                            {
                                if (_isCDHA(_data, idCLS))
                                {
                                    foreach (var a in par41)
                                    {
                                        _yckt += " " + a.TenDV + " (" + a.ChiDinh1 + "). \n";
                                    }
                                }
                                else
                                {
                                    foreach (var a in par41)
                                    {
                                        _yckt += a.TenDV + " (" + a.YLenh2 + "). \n";
                                    }
                                }
                                rep.YCKT.Value = _yckt;
                            }
                            else if (DungChung.Bien.MaBV == "27001")
                            {
                                if (_isCDHA(_data, idCLS))
                                {
                                    foreach (var a in par41)
                                    {
                                        _yckt += " " + a.TenDV + " (" + a.ChiDinh1 + ") (" + a.YLenh2 + "). \n";
                                    }
                                }
                                else
                                {
                                    foreach (var a in par41)
                                    {
                                        _yckt += a.TenDV + " (" + a.YLenh2 + "). \n";
                                    }
                                }
                                rep.YCKT.Value = _yckt;
                            }
                            else
                            {
                                if (_isCDHA(_data, idCLS))
                                {
                                    foreach (var a in par41)
                                    {
                                        _yckt += " " + a.TenDV + " (" + a.ChiDinh1 + "). \n";
                                    }
                                }
                                else
                                {
                                    foreach (var a in par41)
                                    {
                                        _yckt += a.TenDV + ". \n";

                                    }
                                }
                                rep.YCKT.Value = _yckt;
                            }
                            if (par4.FirstOrDefault().SThe != null && par4.FirstOrDefault().SThe.Length == 15)
                            {
                                rep.SThe1.Value = par4.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par4.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par4.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par4.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par4.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            int makpth = par4.FirstOrDefault().MaKPth ?? 0;
                            var kpth = _data.KPhongs.Where(p => p.MaKP == makpth).Select(p => DungChung.Bien.MaBV == "30010" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789" ? p.TenKP : (DungChung.Bien.MaBV == "27001" ? p.DChi : "")).FirstOrDefault();
                            rep.ktThucHien.Value = kpth;
                            rep.DiaChiKP.Value = par4.FirstOrDefault().DChi;
                            arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, par4.FirstOrDefault().MaKP == null ? 0 : par4.FirstOrDefault().MaKP.Value);
                            arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, par4.FirstOrDefault().MaKP == null ? 0 : par4.FirstOrDefault().MaKP.Value);
                            rep.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];//(arrChanDoanBD!=null&& arrChanDoanBD[0] != "" )? arrChanDoanBD[0] + ";" + arrThongTinBNKB[1] : arrThongTinBNKB[1];
                            rep.paramBuong.Value = arrThongTinBNKB[2];
                            rep.paramGiuong.Value = arrThongTinBNKB[3];
                            rep.paramTenKP.Value = arrThongTinBNKB[4];
                            if (DungChung.Bien.MaBV == "14018")
                            {
                                if (tenRG != "Điện tim" || tenRG != "Chức năng hô hấp")
                                    rep.xrLabel16.Visible = true;
                            }

                            rep.DataSource = qmnt.ToList();

                            rep.Databind();
                            //rep.BindingData();
                            rep.CreateDocument();
                            frm.prcIN.PrintingSystem = rep.PrintingSystem;
                            frm.ShowDialog();
                        }
                        else
                        {
                            //if (DungChung.Bien.MaBV == "30005")
                            //{
                            rep.STT.Value = par4.FirstOrDefault().STT;
                            rep.paramTenNhomCD.Value = par4.FirstOrDefault().TenTN.ToUpper();
                            rep.paramMauSo.Value = "MS:...../BV - 01";
                            if (par4.FirstOrDefault().Status == 1)
                                rep.ThucHien.Value = "Đã thực hiện";
                            DateTime _dt = System.DateTime.Now;
                            if (par4.FirstOrDefault().NgayThang != null)
                                _dt = par4.FirstOrDefault().NgayThang.Value;
                            rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                            rep.BSDT.Value = par4.FirstOrDefault().MaCB;
                            rep.KPhong.Value = par4.FirstOrDefault().TenKP.ToUpper();
                            rep.Parameters["TenCQ"].Value = DungChung.Bien.TenCQ.ToUpper();
                            rep.DiaChi.Value = par4.FirstOrDefault().DChi;
                            if (DungChung.Bien.MaBV == "24012")
                            {
                                rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _Mabn, DungChung.Bien.formatAge_24012);
                            }
                            else
                                rep.Tuoi.Value = DungChung.Bien.MaBV == "14018"
                                ? DungChung.Ham.CalculateAge(par4.FirstOrDefault().NgaySinh, par4.FirstOrDefault().ThangSinh, par4.FirstOrDefault().NamSinh, "tháng.")
                                : DungChung.Ham.TuoitheoThang(_data, _Mabn, DungChung.Bien.formatAge);
                            rep.TenBNhan.Value = par4.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par4.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yckt = "";

                            if (DungChung.Bien.MaBV == "30009")
                            {
                                if (_isCDHA(_data, idCLS))
                                {
                                    foreach (var a in par4)
                                    {
                                        _yckt += " " + a.TenDV + " (" + a.ChiDinh1 + "). \n";
                                    }
                                }
                                else
                                {
                                    foreach (var a in par4)
                                    {
                                        _yckt += a.TenDV + " (" + a.YLenh2 + "). \n";
                                    }
                                }
                                rep.YCKT.Value = _yckt;
                            }
                            else if (DungChung.Bien.MaBV == "27001")
                            {
                                if (_isCDHA(_data, idCLS))
                                {
                                    foreach (var a in par4)
                                    {
                                        _yckt += " " + a.TenDV + " (" + a.ChiDinh1 + ") (" + a.YLenh2 + "). \n";
                                    }
                                }
                                else
                                {
                                    foreach (var a in par4)
                                    {
                                        _yckt += a.TenDV + " (" + a.YLenh2 + "). \n";
                                    }
                                }
                                rep.YCKT.Value = _yckt;
                            }
                            else
                            {
                                if (_isCDHA(_data, idCLS))
                                {
                                    foreach (var a in par4)
                                    {
                                        _yckt += " " + a.TenDV + " (" + a.ChiDinh1 + "). \n";
                                    }
                                }
                                else
                                {
                                    foreach (var a in par4)
                                    {
                                        _yckt += a.TenDV + " (" + a.YLenh2 + "). \n";
                                    }
                                }
                                rep.YCKT.Value = _yckt;
                            }
                            if (par4.FirstOrDefault().SThe != null && par4.FirstOrDefault().SThe.Length == 15)
                            {
                                rep.SThe1.Value = par4.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par4.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par4.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par4.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par4.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            int makpth = par4.FirstOrDefault().MaKPth ?? 0;
                            if (DungChung.Bien.MaBV == "27023")
                            {
                                var kpth1 = _data.KPhongs.Where(p => p.MaKP == makpth).FirstOrDefault(); /*_data.KPhongs.Where(p => p.MaKP == makpth).Select(p => DungChung.Bien.MaBV == "30010" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "30372" || DungChung.Bien.MaBV == "27023" ? p.TenKP : (DungChung.Bien.MaBV == "27001" ? p.DChi : "")).FirstOrDefault();*/
                                rep.KPthuchien.Value = kpth1.TenKP;
                                rep.DiaChiKP.Value = kpth1.DChi;

                            }
                            else
                            {
                                var kpth = _data.KPhongs.Where(p => p.MaKP == makpth).Select(p => DungChung.Bien.MaBV == "30010" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "30372" || DungChung.Bien.MaBV == "56789" ? p.TenKP : (DungChung.Bien.MaBV == "27001" ? p.DChi : "")).FirstOrDefault();
                                if (DungChung.Bien.MaBV != "30372")
                                {
                                    rep.ktThucHien.Value = kpth;
                                }
                                rep.KPthuchien.Value = kpth;
                                rep.DiaChiKP.Value = par45.FirstOrDefault().DChi;
                            }
                            arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, par4.FirstOrDefault().MaKP == null ? 0 : par4.FirstOrDefault().MaKP.Value);
                            arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, par4.FirstOrDefault().MaKP == null ? 0 : par4.FirstOrDefault().MaKP.Value);
                            if (DungChung.Bien.MaBV == "14018")
                            {
                                rep.ChanDoan.Value = par4.FirstOrDefault().ChanDoanBD != null || par4.FirstOrDefault().ChanDoanBD != "" ? par4.FirstOrDefault().ChanDoanBD + ";" : "";
                                rep.ChanDoan.Value += DungChung.Ham.GetChanDoanKB_24297(_data, _Mabn);
                            }
                            else
                            {
                                if (DungChung.Bien.MaBV == "24272")
                                {
                                    if (arrChanDoanBD != null)
                                    {
                                        rep.ChanDoan.Value = par4.FirstOrDefault().ChanDoanBD != null || par4.FirstOrDefault().ChanDoanBD != "" ? par4.FirstOrDefault().ChanDoanBD + ";" : "";
                                    }
                                }
                                else
                                {
                                    rep.ChanDoan.Value = arrThongTinBNKB[1];
                                }
                                //if (DungChung.Bien.MaBV != "24012" && DungChung.Bien.MaBV != "24272")
                                //{
                                //    if (DungChung.Bien.MaBV == "30372")
                                //    {
                                //        rep.ChanDoan.Value =  arrThongTinBNKB[1];
                                //    }
                                //    else
                                //    {
                                //        rep.ChanDoan.Value = par4.FirstOrDefault().ChanDoanBD != null || par4.FirstOrDefault().ChanDoanBD != "" ? par4.FirstOrDefault().ChanDoanBD + ";" : "";//(arrChanDoanBD!=null&& arrChanDoanBD[0] != "") ? arrChanDoanBD[0] + ";" + arrThongTinBNKB[1] : arrThongTinBNKB[1];
                                //    }
                                //}
                                //if (DungChung.Bien.MaBV != "24272")
                                //{
                                //    rep.ChanDoan.Value += DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                                //}
                            }
                            if (DungChung.Bien.MaBV == "14018")
                            {
                                if (tenRG != "Điện tim" || tenRG != "Chức năng hô hấp")
                                    rep.xrLabel16.Visible = true;
                            }

                            rep.paramBuong.Value = arrThongTinBNKB[2];
                            rep.paramGiuong.Value = arrThongTinBNKB[3];
                            rep.paramTenKP.Value = arrThongTinBNKB[4];
                            rep.DataSource = qmnt.ToList();
                            rep.Databind();
                            //rep.BindingData();
                            rep.CreateDocument();

                            frm.prcIN.PrintingSystem = rep.PrintingSystem;
                            frm.ShowDialog();
                        }
                    }
                }
            }
            else
            {
                if (DungChung.Bien.MaBV == "34019")
                {
                    var cls = _data.CLS.Where(p => p.IdCLS == idCLS).FirstOrDefault();
                    DateTime ngaycd = cls != null ? Convert.ToDateTime(cls.NgayThang) : DateTime.Now;
                    var par4 = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                join cls4 in _data.CLS.Where(p => InTongHop ? true : p.NgayThang == ngaycd) on bn.MaBNhan equals cls4.MaBNhan
                                join kp in _data.KPhongs on cls4.MaKP equals kp.MaKP
                                join kpTH in _data.KPhongs on cls4.MaKPth equals kpTH.MaKP
                                join chidinh in _data.ChiDinhs.Where(o => InTongHop ? o.Status == 0 : true) on cls4.IdCLS equals chidinh.IdCLS
                                join dv in _data.DichVus on chidinh.MaDV equals dv.MaDV
                                join tn in _data.TieuNhomDVs.Where(o => o.TenRG == tenRG) on dv.IdTieuNhom equals tn.IdTieuNhom
                                select new { cls4.STT, tn.TenTN, chidinh.Status, chidinh.SoPhieu, cls4.NgayThang, cls4.MaCB, cls4.MaKP, kp.TenKP, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, cls4.MaKPth, TenKPth = kpTH.TenKP, DiaChiKPth = kpTH.DChi, bn.Tuoi, bn.SThe, bn.HanBHDen, bn.NoiTru, chidinh.ChiDinh1, chidinh.KetLuan, dv.TenDV, cls4.NgayTH, cls4.CapCuu, bn.NgaySinh, bn.ThangSinh, bn.NamSinh, bn.DTuong, bn.HanBHTu, cls4.BarCode, IsTrongBH = (chidinh.TrongBH == 1), IDP = bn.IDPerson }).ToList();

                    for (int i = 0; i < 2; i++)
                    {
                        var par41 = par4.Where(o => o.IsTrongBH == (i == 0)).ToList();
                        if (par41.Count > 0)
                        {
                            repPhieuChiDinh_CDHA_34019_A4 rep = new repPhieuChiDinh_CDHA_34019_A4();//1
                            rep.xrPictureBox1.Image = QLBV.DungChung.Ham.GetLogo();
                            rep.SoPhieu.Value = par41.FirstOrDefault().SoPhieu;
                            rep.MaBN.Value = par41.FirstOrDefault().IDP;
                            rep.MaDieuTri.Value = _Mabn;
                            rep.TenBV.Value = DungChung.Bien.TenCQ.ToUpper();
                            var hthong = _data.HTHONGs.FirstOrDefault(o => o.MaBV == DungChung.Bien.MaBV);
                            if (hthong != null)
                            {
                                rep.DiaChiBV.Value = hthong.DiaChi;
                            }
                            rep.TenPhieu.Value = "PHIẾU CHỈ ĐỊNH " + par41.FirstOrDefault().TenTN.ToUpper();
                            rep.KPhong.Value = par41.FirstOrDefault().TenKPth + (!string.IsNullOrWhiteSpace(par41.FirstOrDefault().DiaChiKPth) ? (" (" + par41.FirstOrDefault().DiaChiKPth + ")") : "");
                            rep.CapCuu.Value = (par41.FirstOrDefault().CapCuu == true) ? "X" : "";
                            rep.TenBNhan.Value = par41.FirstOrDefault().TenBNhan.ToUpper();
                            rep.NgaySinh.Value = DungChung.Ham.GhepNgaySinh("/", par41.FirstOrDefault().NamSinh, par41.FirstOrDefault().ThangSinh, par41.FirstOrDefault().NgaySinh);
                            rep.GioiTinh.Value = par41.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                            rep.DiaChi.Value = par41.FirstOrDefault().DChi;
                            rep.NgayGio.Value = "Thái Bình, " + DungChung.Ham.NgaySangChu(par4.FirstOrDefault().NgayThang.Value);
                            //if (!string.IsNullOrWhiteSpace(par41.FirstOrDefault().DTuong) && par41.FirstOrDefault().DTuong == "BHYT")
                            //{
                            //    rep.BHYT.Value = "X";
                            //}
                            //else
                            //    rep.ThuPhi.Value = "X";
                            if (i == 0)
                                rep.BHYT.Value = "X";
                            else
                                rep.ThuPhi.Value = "X";
                            rep.CapCuu.Value = (par41.FirstOrDefault().CapCuu == true) ? "X" : "";

                            if (i == 0)
                            {
                                if (!string.IsNullOrWhiteSpace(par41.FirstOrDefault().SThe))
                                {
                                    rep.HanThe.Value = par41.FirstOrDefault().HanBHDen != null ? par41.FirstOrDefault().HanBHDen.Value.ToString("dd/MM/yyyy") : "";
                                    rep.HanTu.Value = par41.FirstOrDefault().HanBHTu != null ? par41.FirstOrDefault().HanBHTu.Value.ToString("dd/MM/yyyy") : "";
                                    rep.SThe1.Value = par41.FirstOrDefault().SThe.Substring(0, 2);
                                    rep.SThe2.Value = par41.FirstOrDefault().SThe.Substring(2, 1);
                                    rep.SThe3.Value = par41.FirstOrDefault().SThe.Substring(3, 2);
                                    rep.SThe4.Value = par41.FirstOrDefault().SThe.Substring(5, 2);
                                    rep.SThe5.Value = par41.FirstOrDefault().SThe.Substring(7, 3);
                                    rep.SThe6.Value = par41.FirstOrDefault().SThe.Substring(10, 5);
                                }
                            }
                            //arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, par41.FirstOrDefault().MaKP == null ? 0 : par41.FirstOrDefault().MaKP.Value);
                            rep.paramTenKP.Value = par41.FirstOrDefault().TenKP;
                            var maKp = (par41.FirstOrDefault().MaKP == null ? 0 : par41.FirstOrDefault().MaKP.Value);
                            var kbcd = (from bnkb in _data.BNKBs.Where(p => p.MaBNhan == _Mabn && p.MaKP == maKp)
                                        select bnkb).ToList();
                            if (kbcd != null && kbcd.Count > 0)
                            {
                                rep.BenhChinh.Value = kbcd.FirstOrDefault().ChanDoan + " (" + kbcd.FirstOrDefault().MaICD + ")";
                                rep.BenhPhu.Value = kbcd.FirstOrDefault().BenhKhac;
                                if (!string.IsNullOrWhiteSpace(kbcd.FirstOrDefault().Buong))
                                {
                                    var spBuong = kbcd.FirstOrDefault().Buong.Split(';');
                                    if (spBuong != null && spBuong.Count() > 0)
                                    {
                                        rep.paramBuong.Value = spBuong[spBuong.Count() - 1];
                                    }
                                }
                                if (!string.IsNullOrWhiteSpace(kbcd.FirstOrDefault().Giuong))
                                {
                                    var spGiuong = kbcd.FirstOrDefault().Giuong.Split(';');
                                    if (spGiuong != null && spGiuong.Count() > 0)
                                    {
                                        rep.paramGiuong.Value = spGiuong[spGiuong.Count() - 1];
                                    }
                                }
                            }

                            rep.DataSource = par41.ToList();
                            rep.BindingData();
                            rep.CreateDocument();
                            if (PrintNow)
                            {
                                ReportPrintTool rpt = new ReportPrintTool(rep);
                                rpt.Print();
                            }
                            else
                            {
                                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                frm.ShowDialog();
                            }
                        }
                    }

                }
                else
                {
                    using (BaoCao.repPhieuChiDinh_CDHA_A4 rep = new BaoCao.repPhieuChiDinh_CDHA_A4())
                    {
                        var cls = _data.CLS.Where(p => p.IdCLS == idCLS).FirstOrDefault();
                        DateTime ngaycd = cls != null ? Convert.ToDateTime(cls.NgayThang) : DateTime.Now;
                        var par4 = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                    join cls4 in _data.CLS.Where(p => DungChung.Bien.MaBV == "24012" ? p.NgayThang == ngaycd : p.IdCLS == idCLS) on bn.MaBNhan equals cls4.MaBNhan
                                    join kp in _data.KPhongs on cls4.MaKP equals kp.MaKP
                                    join chidinh in _data.ChiDinhs on cls4.IdCLS equals chidinh.IdCLS
                                    join bnkb in _data.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                                    join dv in _data.DichVus on chidinh.MaDV equals dv.MaDV
                                    join tn in _data.TieuNhomDVs.Where(o => o.TenRG == tenRG) on dv.IdTieuNhom equals tn.IdTieuNhom
                                    select new { chidinh.YLenh2, bnkb.ChanDoanBD, kp.IsDongY, cls4.STT, tn.TenTN, chidinh.Status, cls4.NgayThang, cls4.MaCB, cls4.MaKP, kp.TenKP, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, cls4.MaKPth, bn.Tuoi, bn.SThe, bn.NoiTru, chidinh.ChiDinh1, chidinh.KetLuan, TenDV = DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24272" ? dv.TenRG : dv.TenDV, cls4.NgayTH, cls4.CapCuu, dv.MaDV, STT_F = Byte.MaxValue }).ToList();

                        if (DungChung.Bien.MaBV == "30372")
                        {
                            var maDVs = par4.Select(o => o.MaDV).ToList();
                            var dichVucts = _data.DichVucts.Where(o => maDVs.Contains(o.MaDV ?? 0)).GroupBy(o => o.MaDV).Select(o => new { MaDV = (o.Key ?? 0), STT_F = o.Min(p => p.STT_F) }).ToList();

                            par4 = par4.Join(dichVucts, o => o.MaDV, p => p.MaDV, (o, p) => new { o.YLenh2, o.ChanDoanBD, o.IsDongY, o.STT, o.TenTN, o.Status, o.NgayThang, o.MaCB, o.MaKP, o.TenKP, o.MaBNhan, o.TenBNhan, o.DChi, o.GTinh, o.MaKPth, o.Tuoi, o.SThe, o.NoiTru, o.ChiDinh1, o.KetLuan, o.TenDV, o.NgayTH, o.CapCuu, o.MaDV, STT_F = (p.STT_F ?? Byte.MaxValue) }).OrderBy(o => o.STT_F).ToList();
                        }

                        if (DungChung.Bien.MaBV == "27023")
                            rep.SoPhieu.Value = _so;
                        else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                        {
                            if (par4.Count > 0)
                            {
                                int mabn = par4.FirstOrDefault().MaBNhan;
                                var qvv = _data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                if (qvv != null)
                                    rep.SoPhieu.Value = qvv.SoVV;
                                else
                                    rep.SoPhieu.Value = "";
                            }
                        }
                        else if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                        {
                            //rep.lab3.Text = "Mã BN:";
                            rep.labmabn.Text = "Mã BN: " + _Mabn;
                            rep.SoPhieu.Value = idCLS;
                        }
                        else
                            rep.SoPhieu.Value = idCLS;
                        if (par4.Count > 0)
                        {
                            if (par4.FirstOrDefault().NoiTru == 1)
                            {
                                var sovv = _data.VaoViens.Where(p => p.MaBNhan == _Mabn).Select(p => p.SoVV).FirstOrDefault();
                                if (sovv != null)
                                    rep.SoVV.Value = "Số VV: " + sovv.ToString();
                            }
                            rep.IDCLS.Value = idCLS;
                            rep.Thuong.Value = (par4.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.CapCuu.Value = (par4.FirstOrDefault().CapCuu == true) ? "X" : "";
                            rep.STT.Value = par4.FirstOrDefault().STT;
                            rep.paramTenNhomCD.Value = par4.FirstOrDefault().TenTN.ToUpper();
                            if (par4.FirstOrDefault().TenTN.ToUpper() == "X-QUANG" && DungChung.Bien.MaBV == "30009")
                            {
                                rep.xrBarCode1.Visible = true;
                            }
                            rep.paramMauSo.Value = "MS:...../BV - 01";
                            if (par4.FirstOrDefault().Status == 1)
                                rep.ThucHien.Value = "Đã thực hiện";
                            DateTime _dt = System.DateTime.Now;
                            if (par4.FirstOrDefault().NgayThang != null)
                                _dt = par4.FirstOrDefault().NgayThang.Value;
                            rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                            rep.BSDT.Value = par4.FirstOrDefault().MaCB;
                            rep.KPhong.Value = par4.FirstOrDefault().TenKP.ToUpper();
                            rep.DiaChi.Value = par4.FirstOrDefault().DChi;
                            if (DungChung.Bien.MaBV == "24012")
                            {
                                rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _Mabn, DungChung.Bien.formatAge_24012);
                            }
                            else
                                rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _Mabn, DungChung.Bien.formatAge);
                            rep.TenBNhan.Value = par4.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par4.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yckt = "";

                            if (DungChung.Bien.MaBV == "30009")
                            {
                                if (_isCDHA(_data, idCLS))
                                {
                                    foreach (var a in par4)
                                    {
                                        _yckt += " " + a.TenDV + " (" + a.ChiDinh1 + "). \n";
                                    }
                                }
                                else
                                {
                                    foreach (var a in par4)
                                    {
                                        _yckt += " " + a.TenDV + " (" + a.YLenh2 + "). \n";
                                    }
                                }
                                rep.YCKT.Value = _yckt;
                            }
                            else if (DungChung.Bien.MaBV == "27001")
                            {
                                if (_isCDHA(_data, idCLS))
                                {
                                    foreach (var a in par4)
                                    {
                                        _yckt += " " + a.TenDV + " (" + a.ChiDinh1 + ") (" + a.YLenh2 + "). \n";
                                    }
                                }
                                else
                                {
                                    foreach (var a in par4)
                                    {
                                        _yckt += a.TenDV + " (" + a.YLenh2 + "). \n";
                                    }
                                }
                                rep.YCKT.Value = _yckt;
                            }
                            else
                            {
                                if (_isCDHA(_data, idCLS))
                                {
                                    foreach (var a in par4)
                                    {
                                        _yckt += " " + a.TenDV + " (" + a.ChiDinh1 + "). \n";
                                    }
                                }
                                else
                                {
                                    foreach (var a in par4)
                                    {
                                        _yckt += " " + a.TenDV + " (" + a.YLenh2 + "). \n";
                                    }
                                }
                                rep.YCKT.Value = _yckt;
                            }
                            if (par4.FirstOrDefault().SThe != null && par4.FirstOrDefault().SThe.Length == 15)
                            {
                                rep.SThe1.Value = par4.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par4.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par4.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par4.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par4.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            int makpth = par4.FirstOrDefault().MaKPth ?? 0;
                            var check = (from kp in _data.KPhongs.Where(p => p.MaKP == makpth)
                                         select new { kp.MaKP, kp.IsDongY }).ToList();
                            var kpth = _data.KPhongs.Where(p => p.MaKP == makpth).Select(p => DungChung.Bien.MaBV == "30010" ? p.TenKP : (DungChung.Bien.MaBV == "27001" ? p.DChi : "")).FirstOrDefault();
                            rep.dckp.Text = kpth;
                            arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, par4.FirstOrDefault().MaKP == null ? 0 : par4.FirstOrDefault().MaKP.Value);
                            arrChanDoanBD = LayCHanDoanBD(_data, _Mabn, par4.FirstOrDefault().MaKP == null ? 0 : par4.FirstOrDefault().MaKP.Value);
                            if (DungChung.Bien.MaBV == "24297" && par4.FirstOrDefault().IsDongY == true)
                            {
                                rep.ChanDoan.Value = par4.FirstOrDefault().ChanDoanBD != null || par4.FirstOrDefault().ChanDoanBD != "" ? par4.FirstOrDefault().ChanDoanBD + ";" : "";
                                rep.ChanDoan.Value += DungChung.Ham.GetChanDoanKB_24297(_data, _Mabn);
                            }
                            else
                            {
                                rep.ChanDoan.Value = par4.FirstOrDefault().ChanDoanBD != null || par4.FirstOrDefault().ChanDoanBD != "" ? par4.FirstOrDefault().ChanDoanBD + ";" : "";
                                if (DungChung.Bien.MaBV != "24272")
                                {
                                    rep.ChanDoan.Value += DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];

                                }
                            }

                            rep.paramBuong.Value = arrThongTinBNKB[2];
                            rep.paramGiuong.Value = arrThongTinBNKB[3];
                            rep.paramTenKP.Value = arrThongTinBNKB[4];
                            //rep.BindingData();
                            rep.CreateDocument();
                            frm.prcIN.PrintingSystem = rep.PrintingSystem;
                            frm.ShowDialog();
                        }
                    }
                }
            }
            QLBV.Utilities.Helppers.MemoryManagement.FlushMemory();
        }
        #endregion
        #region In chỉ định tổng hợp
        public static void _setParamInChiDinhTH(QLBV_Database.QLBVEntities _data, frmIn frm, BaoCao.Rep_PhieuTHX_Quang rep, int _Mabn, string TenRG)
        {
            int stt = 0;

            var dkb = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                       join bnk in _data.BNKBs on bn.MaBNhan equals bnk.MaBNhan
                       select new { bn, bnk }).Select(x => new { x.bn, x.bnk }).OrderByDescending(x => x.bnk.NgayKham).FirstOrDefault();
            if (DungChung.Bien.MaBV == "24272")
            {
                if (dkb.bn.Status == 3 && dkb.bnk.PhuongAn == 0)
                {
                    stt = 1;
                }
            }

            var par = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                       join cls in _data.CLS on bn.MaBNhan equals cls.MaBNhan
                       join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                       join chidinh in _data.ChiDinhs.Where(p => p.Status == stt) on cls.IdCLS equals chidinh.IdCLS
                       join dv in _data.DichVus on chidinh.MaDV equals dv.MaDV
                       join bnkb in _data.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                       join tn in _data.TieuNhomDVs.Where(p => p.TenRG.Contains(TenRG)) on dv.IdTieuNhom equals tn.IdTieuNhom
                       join Nhom in _data.NhomDVs.Where(p => p.TenNhomCT.ToLower().Contains("Chẩn đoán hình ảnh".ToLower())) on tn.IDNhom equals Nhom.IDNhom
                       where bnkb.MaKP == bn.MaKP
                       select new { ylenh = dv.TenDV + "(" + chidinh.ChiDinh1 + ")", bnkb.ChanDoanBD, dv.TenRG, tn.TenTN, chidinh.Status, cls.NgayThang, cls.MaCB, cls.MaKP, kp.TenKP, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, chidinh.ChiDinh1, chidinh.KetLuan, dv.TenDV }).ToList();

            if (par.Count > 0)
            {
                //if (par4.FirstOrDefault().Status == 1)
                //    rep4.ThucHien.Value = "Đã thực hiện";
                DateTime _dt = System.DateTime.Now;
                if (par.FirstOrDefault().NgayThang != null)
                    _dt = par.FirstOrDefault().NgayThang.Value;
                rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                string _macb = "";
                if (par.FirstOrDefault().MaCB != null)
                    _macb = par.FirstOrDefault().MaCB;
                var tencb = _data.CanBoes.Where(p => p.MaCB == (_macb)).ToList();
                if (tencb.Count > 0)
                    rep.BSCD.Value = tencb.FirstOrDefault().TenCB;
                rep.TenKP.Value = par.FirstOrDefault().TenKP;
                rep.Diachi.Value = par.FirstOrDefault().DChi;
                if (DungChung.Bien.MaBV == "24012")
                {
                    rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _Mabn, DungChung.Bien.formatAge_24012);
                }
                else
                    rep.Tuoi.Value = DungChung.Bien.MaBV == "14018"
                    ? DungChung.Ham.TinhTuoiBenhNhan(_data, _Mabn)
                    : DungChung.Ham.TuoitheoThang(_data, _Mabn, DungChung.Bien.formatAge);
                rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                if (gioiTinh == 1)
                {
                    rep.Nu.Value = "/";
                }
                else if (gioiTinh == 0)
                {
                    rep.Nam.Value = "/";
                }
                //rep4.YCKT.Value = par4.FirstOrDefault().TenDV + " (" + par4.FirstOrDefault().ChiDinh1 + ")";
                if (par.FirstOrDefault().SThe.Length == 15)
                {
                    rep.Sthe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                    rep.Sthe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                    rep.Sthe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);

                    rep.Sthe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                    rep.Sthe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                }

                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_data, _Mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                if (DungChung.Bien.MaBV != "24272")
                {
                    rep.Chuandoan.Value += DungChung.Bien.MaBV == "14018" ? DungChung.Ham.GetChanDoanKB(_data, _Mabn) : arrThongTinBNKB[1];
                }
                else
                {
                    rep.Chuandoan.Value = par.FirstOrDefault().ChanDoanBD != null || par.FirstOrDefault().ChanDoanBD != "" ? par.FirstOrDefault().ChanDoanBD + ";" : "";
                }
                rep.paramBuong.Value = arrThongTinBNKB[2];
                rep.paramGiuong.Value = arrThongTinBNKB[3];
            }
            rep.DataSource = par;
            rep.BindingData();
            rep.CreateDocument();
            frm.prcIN.PrintingSystem = rep.PrintingSystem;
            frm.ShowDialog();
        }
        #endregion

        public static void _setParam_ChiDinh_TTPT_30303(QLBV_Database.QLBVEntities _data, int _Mabn, int idCLS)
        {
            var par = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                       join cls in _data.CLS.Where(p => p.IdCLS == idCLS) on bn.MaBNhan equals cls.MaBNhan
                       join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                       join chidinh in _data.ChiDinhs on cls.IdCLS equals chidinh.IdCLS
                       join dv in _data.DichVus on chidinh.MaDV equals dv.MaDV
                       join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                       select new { tn.TenTN, chidinh.Status, cls.MaKPth, bn.NamSinh, cls.NgayThang, cls.MaCB, bn.HanBHDen, bn.HanBHTu, bn.DTuong, cls.MaKP, kp.TenKP, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, chidinh.ChiDinh1, chidinh.KetLuan, dv.TenDV, chidinh.DonGia }).ToList();
            if (par.Count > 0)
            {
                //if (par4.FirstOrDefault().Status == 1)
                //    rep4.ThucHien.Value = "Đã thực hiện";
                frmIn frm = new frmIn();
                BaoCao.Rep_PhieuChiDInhTT_PT_30303 rep = new Rep_PhieuChiDInhTT_PT_30303();

                rep.lab2.Text = "Mã phiếu:  " + idCLS.ToString();
                DateTime _dt = System.DateTime.Now;
                if (par.FirstOrDefault().NgayThang != null)
                    _dt = par.FirstOrDefault().NgayThang.Value;
                rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                string _macb = "";
                if (par.FirstOrDefault().MaCB != null)
                    _macb = par.FirstOrDefault().MaCB;
                var tencb = _data.CanBoes.Where(p => p.MaCB == (_macb)).ToList();
                if (tencb.Count > 0)
                    rep.BSCD.Value = tencb.FirstOrDefault().TenCB;
                rep.mabn.Value = "Mã BN:" + _Mabn.ToString();
                rep.Diachi.Value = par.FirstOrDefault().DChi;
                rep.Tuoi.Value = par.FirstOrDefault().NamSinh;//DungChung.Ham.TuoitheoThang(_data, _Mabn, DungChung.Bien.formatAge);
                rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                rep.gioitinh.Value = par.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                rep.ngaycd.Value = "Ngày chỉ định: " + par.FirstOrDefault().NgayThang.Value.ToShortDateString();
                if (par.FirstOrDefault().MaKPth != null)
                {
                    int makpth = par.FirstOrDefault().MaKPth ?? 0;
                    var kpth = _data.KPhongs.Where(p => p.MaKP == makpth).FirstOrDefault();
                    if (kpth != null)
                        rep.tenkpth.Value = kpth.TenKP;
                }
                rep.TenKP.Value = par.FirstOrDefault().TenKP;
                //rep4.YCKT.Value = par4.FirstOrDefault().TenDV + " (" + par4.FirstOrDefault().ChiDinh1 + ")";
                if (par.FirstOrDefault().SThe.Length == 15)
                {
                    rep.Sthe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                    rep.Sthe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                    rep.Sthe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);

                    rep.Sthe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                    rep.Sthe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);

                    rep.hanthe.Value = par.FirstOrDefault().HanBHTu.Value.ToShortDateString() + (par.FirstOrDefault().HanBHDen != null ? " đến " + par.FirstOrDefault().HanBHDen.Value.ToShortDateString() : "");

                }
                rep.dtuong.Value = par.FirstOrDefault().DTuong == "BHYT" ? "Bảo hiểm y tế" : (par.FirstOrDefault().DTuong == "KSK" ? "Khám sức khỏe" : par.FirstOrDefault().DTuong);
                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_data, _Mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                rep.Chuandoan.Value = arrThongTinBNKB[1];

                var kq = (from a in par
                          select new
                          {
                              a.TenDV,
                              BHYT = a.DTuong == "BHYT" ? "X" : "",
                              SoLuong = 1,
                              a.DonGia
                          }).ToList();
                rep.DataSource = kq;
                rep.BindingData();
                rep.CreateDocument();
                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                frm.ShowDialog();
            }


        }
        private class CD
        {
            public int? MaKPth { get; set; }
            public bool? IsDongY { get; set; }
            public string TenTN { get; set; }
            public DateTime? NgayThang { get; set; }
            public int? Status { get; set; }
            public string MaCB { get; set; }
            public int? MaKP { get; set; }
            public string TenKP { get; set; }
            public int MaBNhan { get; set; }
            public string TenBNhan { get; set; }
            public string DChi { get; set; }
            public int? GTinh { get; set; }
            public int? Tuoi { get; set; }
            public string SThe { get; set; }
            public string ChiDinh1 { get; set; }
            public string KetLuan { get; set; }
            public string TenDV { get; set; }
            public double DonGia { get; set; }



        }
        #region In chỉ định tổng hợp có thành tiền
        public static void _setParamInChiDinhTH_CoDonGia(QLBV_Database.QLBVEntities _data, frmIn frm, BaoCao.Rep_PhieuTHX_Quang_12345 rep, int _Mabn, string TenRG)
        {
            if (DungChung.Bien.MaBV == "24297")
            {
                var par1 = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                            join cls in _data.CLS on bn.MaBNhan equals cls.MaBNhan
                            join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                            join chidinh in _data.ChiDinhs.Where(p => p.Status == 0) on cls.IdCLS equals chidinh.IdCLS
                            join dv in _data.DichVus on chidinh.MaDV equals dv.MaDV
                            join tn in _data.TieuNhomDVs.Where(p => p.TenRG == TenRG) on dv.IdTieuNhom equals tn.IdTieuNhom
                            select new CD
                            {
                                MaKPth = cls.MaKPth,
                                IsDongY = kp.IsDongY,
                                TenTN = tn.TenTN,
                                Status = chidinh.Status,
                                NgayThang = cls.NgayThang,
                                MaCB = cls.MaCB,
                                MaKP = cls.MaKP,
                                TenKP = kp.TenKP,
                                MaBNhan = bn.MaBNhan,
                                TenBNhan = bn.TenBNhan,
                                DChi = bn.DChi,
                                GTinh = bn.GTinh,
                                Tuoi = bn.Tuoi,
                                SThe = bn.SThe,
                                ChiDinh1 = chidinh.ChiDinh1,
                                KetLuan = chidinh.KetLuan,
                                TenDV = dv.TenDV,
                                DonGia = chidinh.DonGia
                            }).ToList();

                var par = (from a in par1.Where(p => p.MaKPth != 0)
                           join kp2 in _data.KPhongs on a.MaKPth equals kp2.MaKP
                           select new CD
                           {
                               MaKPth = 0,
                               IsDongY = a.IsDongY,
                               TenTN = a.TenTN + " (" + kp2.DChi + ")",
                               Status = a.Status,
                               NgayThang = a.NgayThang,
                               MaCB = a.MaCB,
                               MaKP = a.MaKP,
                               TenKP = a.TenKP,
                               MaBNhan = a.MaBNhan,
                               TenBNhan = a.TenBNhan,
                               DChi = a.DChi,
                               GTinh = a.GTinh,
                               Tuoi = a.Tuoi,
                               SThe = a.SThe,
                               ChiDinh1 = a.ChiDinh1,
                               KetLuan = a.KetLuan,
                               TenDV = a.TenDV,
                               DonGia = a.DonGia
                           }).ToList();

                var par3 = (from a in par1.Where(p => p.MaKPth == 0)
                            select new CD
                            {
                                MaKPth = 0,
                                IsDongY = a.IsDongY,
                                TenTN = a.TenTN,
                                Status = a.Status,
                                NgayThang = a.NgayThang,
                                MaCB = a.MaCB,
                                MaKP = a.MaKP,
                                TenKP = a.TenKP,
                                MaBNhan = a.MaBNhan,
                                TenBNhan = a.TenBNhan,
                                DChi = a.DChi,
                                GTinh = a.GTinh,
                                Tuoi = a.Tuoi,
                                SThe = a.SThe,
                                ChiDinh1 = a.ChiDinh1,
                                KetLuan = a.KetLuan,
                                TenDV = a.TenDV,
                                DonGia = a.DonGia
                            }).ToList();
                if (par3.Count() > 0)
                {
                    par.AddRange(par3);
                }

                if (par.Count > 0)
                {
                    //if (par4.FirstOrDefault().Status == 1)
                    //    rep4.ThucHien.Value = "Đã thực hiện";
                    rep.lab2.Text = "MS: " + _Mabn.ToString();
                    rep.xrLabel17.Text = "MS: " + _Mabn.ToString();
                    rep.xrBarCode1.Text = _Mabn.ToString();
                    DateTime _dt = System.DateTime.Now;
                    if (par.FirstOrDefault().NgayThang != null)
                        _dt = par.FirstOrDefault().NgayThang.Value;
                    rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                    string _macb = "";
                    if (par.FirstOrDefault().MaCB != null)
                        _macb = par.FirstOrDefault().MaCB;
                    var tencb = _data.CanBoes.Where(p => p.MaCB == (_macb)).ToList();
                    if (tencb.Count > 0)
                        rep.BSCD.Value = tencb.FirstOrDefault().TenCB;
                    rep.mabn.Value = "Mã BN:" + _Mabn.ToString();
                    rep.TenKP.Value = par.FirstOrDefault().TenKP;
                    rep.Diachi.Value = par.FirstOrDefault().DChi;
                    if (DungChung.Bien.MaBV == "24012")
                    {
                        rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _Mabn, DungChung.Bien.formatAge_24012);
                    }
                    else
                        rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _Mabn, DungChung.Bien.formatAge);
                    rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                    if (gioiTinh == 1)
                    {
                        rep.Nu.Value = "/";
                    }
                    else if (gioiTinh == 0)
                    {
                        rep.Nam.Value = "/";
                    }
                    //rep4.YCKT.Value = par4.FirstOrDefault().TenDV + " (" + par4.FirstOrDefault().ChiDinh1 + ")";
                    if (par.FirstOrDefault().SThe.Length == 15)
                    {
                        rep.Sthe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                        rep.Sthe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                        rep.Sthe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);

                        rep.Sthe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                        rep.Sthe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                    }

                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_data, _Mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                    if (par.FirstOrDefault().IsDongY == true && DungChung.Bien.MaBV == "24297")
                    {
                        rep.Chuandoan.Value = DungChung.Ham.GetChanDoanKB_24297(_data, _Mabn);
                    }
                    else
                    {
                        rep.Chuandoan.Value = arrThongTinBNKB[1];
                    }

                    rep.paramBuong.Value = arrThongTinBNKB[2];
                    rep.paramGiuong.Value = arrThongTinBNKB[3];
                }
                if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                {
                    rep.TenCQCQ.Value = DungChung.Bien.MaBV == "24297" ? DungChung.Bien.TenCQ.ToUpper() : DungChung.Bien.TenCQ;
                }
                rep.DataSource = par;
                rep.BindingData();
                rep.CreateDocument();
                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                frm.ShowDialog();
            }
            else
            {
                var par = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                           join cls in _data.CLS on bn.MaBNhan equals cls.MaBNhan
                           join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                           join chidinh in _data.ChiDinhs.Where(p => p.Status == 0) on cls.IdCLS equals chidinh.IdCLS
                           join dv in _data.DichVus on chidinh.MaDV equals dv.MaDV
                           join tn in _data.TieuNhomDVs.Where(p => p.TenRG == TenRG) on dv.IdTieuNhom equals tn.IdTieuNhom
                           select new { kp.IsDongY, tn.TenTN, chidinh.Status, cls.NgayThang, cls.MaCB, cls.MaKP, kp.TenKP, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, chidinh.ChiDinh1, chidinh.KetLuan, dv.TenDV, chidinh.DonGia }).ToList();
                if (par.Count > 0)
                {
                    //if (par4.FirstOrDefault().Status == 1)
                    //    rep4.ThucHien.Value = "Đã thực hiện";
                    rep.lab2.Text = "MS: " + _Mabn.ToString();
                    rep.xrLabel17.Text = "MS: " + _Mabn.ToString();
                    rep.xrBarCode1.Text = _Mabn.ToString();
                    DateTime _dt = System.DateTime.Now;
                    if (par.FirstOrDefault().NgayThang != null)
                        _dt = par.FirstOrDefault().NgayThang.Value;
                    rep.NgayGio.Value = DungChung.Ham.NgaySangChu(_dt, DungChung.Bien.FormatDate);
                    string _macb = "";
                    if (par.FirstOrDefault().MaCB != null)
                        _macb = par.FirstOrDefault().MaCB;
                    var tencb = _data.CanBoes.Where(p => p.MaCB == (_macb)).ToList();
                    if (tencb.Count > 0)
                        rep.BSCD.Value = tencb.FirstOrDefault().TenCB;
                    rep.mabn.Value = "Mã BN:" + _Mabn.ToString();
                    rep.TenKP.Value = par.FirstOrDefault().TenKP;
                    rep.Diachi.Value = par.FirstOrDefault().DChi;
                    if (DungChung.Bien.MaBV == "24012")
                    {
                        rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _Mabn, DungChung.Bien.formatAge_24012);
                    }
                    else
                        rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _Mabn, DungChung.Bien.formatAge);
                    rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                    if (gioiTinh == 1)
                    {
                        rep.Nu.Value = "/";
                    }
                    else if (gioiTinh == 0)
                    {
                        rep.Nam.Value = "/";
                    }
                    //rep4.YCKT.Value = par4.FirstOrDefault().TenDV + " (" + par4.FirstOrDefault().ChiDinh1 + ")";
                    if (par.FirstOrDefault().SThe.Length == 15)
                    {
                        rep.Sthe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                        rep.Sthe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                        rep.Sthe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);

                        rep.Sthe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                        rep.Sthe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                    }

                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_data, _Mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                    if (par.FirstOrDefault().IsDongY == true && DungChung.Bien.MaBV == "24297")
                    {
                        rep.Chuandoan.Value = DungChung.Ham.GetChanDoanKB_24297(_data, _Mabn);
                    }
                    else
                    {
                        rep.Chuandoan.Value = arrThongTinBNKB[1];
                    }

                    rep.paramBuong.Value = arrThongTinBNKB[2];
                    rep.paramGiuong.Value = arrThongTinBNKB[3];
                }
                if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                {
                    rep.TenCQCQ.Value = DungChung.Bien.MaBV == "24297" ? DungChung.Bien.TenCQ.ToUpper() : DungChung.Bien.TenCQ;
                }
                rep.DataSource = par;
                rep.BindingData();
                rep.CreateDocument();
                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                frm.ShowDialog();
            }
        }
        #endregion
        #region In kết quả CDHA
        public static void _inKetQua_CDHA(QLBV_Database.QLBVEntities _Data, frmIn frm, int _mabn, int _IDCD)
        {
            ////frmIn frm = new frmIn();
            BaoCao.rep_PhieuKQSieuAm_A5 rep = new BaoCao.rep_PhieuKQSieuAm_A5();

            bool hienthiKL = true;
            int IDCLS = 0;
            int _makp = 0;
            string _kq = "";
            var kq = (from bn in _Data.BenhNhans
                      join cls in _Data.CLS on bn.MaBNhan equals cls.MaBNhan
                      join chidinh in _Data.ChiDinhs.Where(p => p.IDCD == _IDCD) on cls.IdCLS equals chidinh.IdCLS
                      join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                      join dv in _Data.DichVus on chidinh.MaDV equals dv.MaDV
                      join tn in _Data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                      join bnkb in _Data.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                      join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                      where bn.MaBNhan == _mabn
                      //where (tn.TenRG== ("X-Quang"))
                      select new { bnkb.ChanDoanBD, tn.TenRG, tn.TenTN, NgayCD = cls.NgayThang, cls.MaCBth, NgayTT = cls.NgayTH, cls.IdCLS, kp.MaKP, clsct.KetQua, kp.TenKP, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, chidinh.ChiDinh1, chidinh.KetLuan, dv.TenDV, chidinh.LoiDan }).ToList();
            if (kq.Count > 0)
            {
                rep.TieuDe.Value = "KẾT QUẢ " + kq.FirstOrDefault().TenTN.ToUpper();
                string tentn = kq.FirstOrDefault().TenRG;
                if (tentn == "X-Quang")
                {
                    hienthiKL = false;
                    foreach (var a in kq)
                    {
                        _kq += " " + a.KetQua + a.KetLuan + "\n";
                    }
                }
                else
                {
                    foreach (var a in kq)
                    {
                        _kq += " " + a.KetQua + " ";
                    }
                }
                if (tentn == "Siêu âm")
                    rep.MoTa.Value = "Mô tả tổn thương";

                IDCLS = kq.FirstOrDefault().IdCLS;
                rep.TenBN.Value = kq.FirstOrDefault().TenBNhan.ToUpper();

                rep.hienthiKL.Value = hienthiKL;
                rep.MaCBDT.Value = kq.FirstOrDefault().MaCB;
                rep.DiaChi.Value = kq.FirstOrDefault().DChi;
                if (kq.FirstOrDefault().LoiDan != null && kq.FirstOrDefault().LoiDan.ToString() != "")
                    rep.LDBS.Value = kq.FirstOrDefault().LoiDan;
                //else
                //    rep.LDBS.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                rep.TenBN.Value = kq.FirstOrDefault().TenBNhan.ToUpper();
                int gioiTinh = int.Parse(kq.FirstOrDefault().GTinh.ToString());
                if (gioiTinh == 1)
                {
                    rep.Nu.Value = "/";
                }
                else if (gioiTinh == 0)
                {
                    rep.Nam.Value = "/";
                }

            }

            rep.KetLuan.Value = kq.FirstOrDefault().KetLuan;
            if (kq.Count > 0)
            {
                //rep.KetQua.Value = LD.FirstOrDefault().KetQua;
                if (kq.FirstOrDefault().NgayCD != null)
                    rep.NgayCD.Value = DungChung.Ham.NgaySangChu(kq.FirstOrDefault().NgayCD.Value, DungChung.Bien.FormatDate);
                else
                    rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                if (kq.FirstOrDefault().NgayTT != null)
                    rep.NgayTH.Value = DungChung.Ham.NgaySangChu(kq.FirstOrDefault().NgayTT.Value, DungChung.Bien.FormatDate);
                else
                    rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                rep.Macb.Value = kq.FirstOrDefault().MaCBth;

            }
            rep.KetQua.Value = _kq;
            arrThongTinBNKB = laythongtinBNKB(_Data, _mabn, kq.FirstOrDefault().MaKP);
            rep.Buong.Value = arrThongTinBNKB[2];
            rep.Giuong.Value = arrThongTinBNKB[3];
            arrChanDoanBD = LayCHanDoanBD(_Data, _mabn, kq.FirstOrDefault().MaKP);
            rep.ChanDoan.Value = (kq.FirstOrDefault().ChanDoanBD != null && kq.FirstOrDefault().ChanDoanBD != "") ? kq.FirstOrDefault().ChanDoanBD + ";" + arrThongTinBNKB[1] : arrThongTinBNKB[1];
            rep.Khoa.Value = arrThongTinBNKB[4];
            rep.CreateDocument();
            frm.prcIN.PrintingSystem = rep.PrintingSystem;
            frm.ShowDialog();

        }
        #endregion
        #region _inLuuHuyetNao
        public static void InLuuHuyetNao30010(QLBV_Database.QLBVEntities _data, int idCD, string tieunhom, int mau)
        {

            frmIn frm = new frmIn();
            BaoCao.RepPhieuLuuHuyetNao rep = new BaoCao.RepPhieuLuuHuyetNao();
            rep.Mau.Value = "";
            if (mau == 0)
            {
                rep.Title.Value = ("Lưu huyết não").ToUpper();
                rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub();
            }
            if (mau == 1)
            {
                rep.Title.Value = ("Đo mật độ xương").ToUpper();
                rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_LoangXuong();
            }
            //rep.Title.Value = ("Lưu huyết não").ToUpper();
            rep.Title.Value = tieunhom.ToUpper();
            //rep.DataSource = c;
            rep.BindingData(idCD);
            rep.CreateDocument();
            frm.prcIN.PrintingSystem = rep.PrintingSystem;
            frm.ShowDialog();

        }
        public static void InDienNaoDo(QLBV_Database.QLBVEntities _data, int idCD, string tieunhom, int _mabn, int _IDCLS, int mau)
        {

            frmIn frm = new frmIn();
            BaoCao.RepPhieuLuuHuyetNao rep = new BaoCao.RepPhieuLuuHuyetNao();
            if (DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "01071")
            {
                string kieudoc1 = "";
                string kieudoc2 = "";
                var bnbb = (from ht in _data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                            select new
                            {
                                ht.KieuDoc
                            }).ToList();
                kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                {

                    DungChung.Bien._Visible_CDHA[2] = false;
                    DungChung.Bien._Visible_CDHA[0] = true;
                }
                if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                {

                    DungChung.Bien._Visible_CDHA[0] = true;
                    DungChung.Bien._Visible_CDHA[2] = false;
                }
                if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                {
                    DungChung.Bien._Visible_CDHA[2] = false;
                    DungChung.Bien._Visible_CDHA[1] = false;
                    DungChung.Bien._Visible_CDHA[0] = true;

                }
            }
            var par = (from a in _data.CLS
                       join c in _data.BNKBs on a.MaBNhan equals c.MaBNhan
                       join b in _data.ChiDinhs.Where(p => p.IDCD == idCD) on a.IdCLS equals b.IdCLS
                       select new { a.CapCuu, a.MaBNhan, c.MaICD, c.MaICD2 }).ToList();
            if (DungChung.Bien.MaBV == "24012")
            {
                rep.lbl_icd_24012_1.Visible = true;
                rep.lbl_icd_24012_2.Visible = true;
                rep.Parameters["MaICD"].Value = par.First().MaICD + ", " + par.First().MaICD2;
            }
            int _idcd = 0;
            DateTime Ngaycd = DateTime.Now;
            var par0 = (from bn in _data.BenhNhans.Where(o => o.MaBNhan == _mabn)
                        join cls in _data.CLS.Where(p => (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "24009") ? p.NgayThang == Ngaycd : (_idcd > 0 ? true : p.IdCLS == _IDCLS)) on bn.MaBNhan equals cls.MaBNhan
                        join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                        join chidinh in _data.ChiDinhs.Where(p => _idcd > 0 ? p.IDCD == _idcd : true) on cls.IdCLS equals chidinh.IdCLS
                        join clsct in _data.CLScts on chidinh.IDCD equals clsct.IDCD
                        join dvct in _data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                        join dv in _data.DichVus on dvct.MaDV equals dv.MaDV
                        select new
                        {
                            cls.CapCuu,
                            cls.IdCLS,
                            dvct.STT_F,
                        }).Where(p => p.IdCLS == _IDCLS).OrderBy(p => p.STT_F).ToList();
            rep.xrLabel19.Text = rep.thuong.Text = rep.xrLabel61.Text = (par0.FirstOrDefault().CapCuu == false) ? "X" : "";
            rep.xrLabel13.Text = rep.capcuu.Text = rep.xrLabel63.Text = (par0.FirstOrDefault().CapCuu == true) ? "X" : "";
            rep.Mau.Value = "";
            if (mau == 0)
            {
                if (DungChung.Bien.MaBV == "19048")
                {
                    rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_19048();
                }
                else if (DungChung.Bien.MaBV == "24009")
                {
                    rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub24009();
                }
                else if (DungChung.Bien.MaBV == "12121" || DungChung.Bien.MaBV == "30007" || DungChung.Bien.MaBV == "30009")
                {
                    rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_12121();
                }
                else
                {
                    rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub();
                }
            }
            if (mau == 1)
            {
                rep.Title.Value = tieunhom.ToUpper();
                if (DungChung.Bien.MaBV == "12121" || DungChung.Bien.MaBV == "30009")
                    rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_LoangXuong_12121();
                else
                    rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_LoangXuong();
            }
            if (mau == 2)
            {
                rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_DopplerXuyenSo();
            }
            if (mau == 3)
            {
                rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_12121();
            }
            rep.Title.Value = tieunhom.ToUpper();
            //rep.DataSource = c;
            rep.BindingData(idCD);
            rep.CreateDocument();
            frm.prcIN.PrintingSystem = rep.PrintingSystem;
            frm.ShowDialog();

        }
        public static void InLuuHuyetNao(QLBV_Database.QLBVEntities _data, int idCD, string tieunhom, int mau)
        {

            frmIn frm = new frmIn();
            if (DungChung.Bien.MaBV == "27001" && tieunhom == "Đo mật độ xương")
            {
                DungChung.Bien._Visible_CDHA[2] = false;
                DungChung.Bien._Visible_CDHA[0] = false;
                BaoCao.RepPhieuLuuHuyetNao_27001 rep = new BaoCao.RepPhieuLuuHuyetNao_27001();
                rep.Parameters["Title"].Value = "PHIẾU " + tieunhom.ToUpper();
                rep.Parameters["TenCQCQ"].Value = DungChung.Bien.TenCQCQ;
                rep.Parameters["TenCQ"].Value = DungChung.Bien.TenCQ;
                //rep.DataSource = c;
                rep.BindingData(idCD);
                rep.CreateDocument();
                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                frm.ShowDialog();
            }
            else
            {
                BaoCao.RepPhieuLuuHuyetNao rep = new BaoCao.RepPhieuLuuHuyetNao();
                var par = (from a in _data.CLS
                           join c in _data.BNKBs on a.MaBNhan equals c.MaBNhan
                           join b in _data.ChiDinhs.Where(p => p.IDCD == idCD) on a.IdCLS equals b.IdCLS
                           join d in _data.CLScts on b.IDCD equals d.IDCD
                           where c.MaKP == a.MaKP
                           select new { a.CapCuu, a.MaBNhan, c.MaICD, c.MaICD2, d.KetQua }).ToList();
                if (DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "01071")
                {
                    string kieudoc1 = "";
                    string kieudoc2 = "";
                    var bnbb = (from ht in _data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                select new
                                {
                                    ht.KieuDoc
                                }).ToList();
                    kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                    kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                    if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                    {

                        DungChung.Bien._Visible_CDHA[2] = false;
                        DungChung.Bien._Visible_CDHA[0] = true;
                    }
                    if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                    {

                        DungChung.Bien._Visible_CDHA[0] = true;
                        DungChung.Bien._Visible_CDHA[2] = false;
                    }
                    if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                    {
                        DungChung.Bien._Visible_CDHA[2] = false;
                        DungChung.Bien._Visible_CDHA[1] = false;
                        DungChung.Bien._Visible_CDHA[0] = true;

                    }
                }
                if (DungChung.Bien.MaBV == "24012")
                {
                    rep.lbl_icd_24012_1.Visible = true;
                    rep.lbl_icd_24012_2.Visible = true;
                    rep.Parameters["MaICD"].Value = par.First().MaICD + ", " + par.First().MaICD2;
                }
                rep.Mau.Value = "";
                if (mau == 0)
                {
                    if (DungChung.Bien.MaBV == "19048")
                    {
                        rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_19048();
                    }
                    else if (DungChung.Bien.MaBV == "24009")
                    {
                        rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub24009();
                    }
                    else if (DungChung.Bien.MaBV == "12121" || DungChung.Bien.MaBV == "30007" || DungChung.Bien.MaBV == "30009")
                    {
                        rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_12121();
                    }
                    else
                    {
                        string ketqua = par.First().KetQua;
                        rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub(ketqua);
                    }
                }
                if (mau == 1)
                {
                    rep.Title.Value = "PHIẾU " + tieunhom.ToUpper();
                    if (DungChung.Bien.MaBV == "12121" || DungChung.Bien.MaBV == "30009")
                        rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_LoangXuong_12121();
                    else if (DungChung.Bien.MaBV == "27001")
                    {
                        rep.SubBand4.Visible = false;
                    }
                    else
                        rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_LoangXuong();
                }
                if (mau == 2)
                {
                    rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_DopplerXuyenSo();
                }
                if (mau == 3)
                {
                    rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_12121();
                }
                rep.Title.Value = "PHIẾU " + tieunhom.ToUpper();
                //rep.DataSource = c;
                rep.BindingData(idCD);
                rep.CreateDocument();
                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                frm.ShowDialog();
            }
        }
        public static void InLuuHuyetNao1(QLBV_Database.QLBVEntities _data, int idCD, string tieunhom, int mau)
        {

            frmIn frm = new frmIn();
            BaoCao.RepPhieuLuuHuyetNao rep = new BaoCao.RepPhieuLuuHuyetNao();
            if (DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "01071")
            {
                string kieudoc1 = "";
                string kieudoc2 = "";
                var bnbb = (from ht in _data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                            select new
                            {
                                ht.KieuDoc
                            }).ToList();
                kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                {
                    DungChung.Bien._Visible_CDHA[2] = true;
                    DungChung.Bien._Visible_CDHA[0] = true;
                }
                if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                {
                    DungChung.Bien._Visible_CDHA[2] = false;
                    DungChung.Bien._Visible_CDHA[0] = true;
                }
                if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                {
                    DungChung.Bien._Visible_CDHA[2] = true;
                    DungChung.Bien._Visible_CDHA[0] = false;
                }
            }
            rep.Mau.Value = "";
            if (mau == 0)
            {
                if (DungChung.Bien.MaBV == "19048")
                {
                    rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_19048();
                }
                else if (DungChung.Bien.MaBV == "24009")
                {
                    rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub24009();
                }
                else if (DungChung.Bien.MaBV == "12121" || DungChung.Bien.MaBV == "30007" || DungChung.Bien.MaBV == "30009")
                {
                    rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_12121();
                }
                else
                {
                    rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub();
                }
            }
            if (mau == 1)
            {
                if (DungChung.Bien.MaBV == "12121" || DungChung.Bien.MaBV == "30009")
                    rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_LoangXuong_12121();
                else
                    rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_LoangXuong();
            }
            if (mau == 2)
            {
                rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_DopplerXuyenSo();
            }
            if (mau == 3)
            {
                rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_12121();
            }
            rep.Title.Value = tieunhom.ToUpper();
            //rep.DataSource = c;
            rep.BindingData(idCD);
            rep.CreateDocument();
            frm.prcIN.PrintingSystem = rep.PrintingSystem;
            frm.ShowDialog();

        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="data"></param>
        /// <param name="idCD">ID chỉ định</param>
        /// <param name="mau">số mẫu phiếu in : 0- Lưu huyết não; 1- Đo mật độ loãng xương; 2-Siêu âm doppler xuyên sọ màu</param>
        /// 
        public static string _getTenCB(QLBV_Database.QLBVEntities data, string maCB)
        {
            string tenBs = "";
            var bsCD = data.CanBoes.Where(p => p.MaCB == maCB).ToList();
            if (bsCD.Count > 0)
            {
                if (!String.IsNullOrEmpty(bsCD.FirstOrDefault().TenCB))
                    tenBs = bsCD.FirstOrDefault().TenCB.ToString();
            }
            return tenBs;
        }
        public static bool InLuuHuyetNao(QLBV_Database.QLBVEntities data, int idCD, int idcls, int mau)
        {
            try
            {
                if (DungChung.Bien.MaBV == "27001" && mau == 1)//phiếu đo mật độ xương mới 27001
                {
                    #region
                    data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                    frmIn frm = new frmIn();
                    BaoCao.Rep_PhieuDoMatDoXuong_27001 rep = new BaoCao.Rep_PhieuDoMatDoXuong_27001();
                    var chidinh = (from cd in data.ChiDinhs
                                   join dv in data.DichVus on cd.MaDV equals dv.MaDV
                                   select new
                                   {
                                       cd.IDCD,
                                       cd.LoiDan,
                                       cd.ChiDinh1,
                                       cd.KetLuan,
                                       cd.IdCLS,
                                       dv.TenDV,
                                       cd.Status
                                   })
                                      .Where(p => p.IDCD == idCD)
                                      .ToList();
                    if (chidinh.Count > 0)
                    {
                        int idCLS = Convert.ToInt32(chidinh.FirstOrDefault().IdCLS);
                        rep.SoPhieu.Value = idCLS.ToString();
                        var qCLS = data.CLS.Where(p => p.IdCLS == idCLS).ToList();
                        int _mabn = 0, _makp = 0;

                        if (qCLS.Count > 0)
                        {
                            _makp = qCLS.FirstOrDefault().MaKP == null ? 0 : Convert.ToInt32(qCLS.FirstOrDefault().MaKP);
                            var rs = qCLS.FirstOrDefault();
                            #region hiển thị thông tin bệnh nhân
                            var bnInfo = data.BenhNhans.Where(p => p.MaBNhan == rs.MaBNhan);
                            if (bnInfo.Count() > 0)
                            {
                                _mabn = bnInfo.FirstOrDefault().MaBNhan;
                                if (!String.IsNullOrEmpty(bnInfo.FirstOrDefault().TenBNhan))
                                    rep.TenBN.Value = bnInfo.FirstOrDefault().TenBNhan.ToString();
                                if (bnInfo.FirstOrDefault().Tuoi != null)
                                    if (DungChung.Bien.MaBV == "24012")
                                    {
                                        rep.TuoiBN.Value = DungChung.Ham.TuoitheoThang(data, _mabn, DungChung.Bien.formatAge_24012);
                                    }
                                    else
                                        rep.TuoiBN.Value = bnInfo.FirstOrDefault().Tuoi.ToString();
                                if (bnInfo.FirstOrDefault().GTinh == 1)
                                    rep.Nu.Value = "/";
                                else
                                    rep.Nam.Value = "/";
                                if (!String.IsNullOrEmpty(bnInfo.FirstOrDefault().SThe))
                                    rep.SThe1.Value = bnInfo.FirstOrDefault().SThe.ToString();
                                if (!String.IsNullOrEmpty(bnInfo.FirstOrDefault().DChi))
                                    rep.DiaChi.Value = bnInfo.FirstOrDefault().DChi;
                                if (bnInfo.FirstOrDefault().HanBHTu != null && bnInfo.FirstOrDefault().HanBHDen != null)
                                    rep.Khoa.Value = "Từ ngày " + bnInfo.FirstOrDefault().HanBHTu.Value.ToShortDateString() + " đến ngày " + bnInfo.FirstOrDefault().HanBHDen.Value.ToShortDateString();

                            }
                            var _ttkb = data.BNKBs.Where(p => p.MaBNhan == _mabn && p.MaKP == _makp).ToList();
                            if (_ttkb.Count > 0)
                            {
                                rep.ChanDoan.Value = DungChung.Ham.FreshString(_ttkb.FirstOrDefault().ChanDoan + ";" + _ttkb.FirstOrDefault().BenhKhac);
                            }
                            if (rs.NgayThang != null)
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(Convert.ToDateTime(rs.NgayThang));
                            if (!String.IsNullOrEmpty(rs.NgayTH.ToString()))
                                rep.NgayTT.Value = DungChung.Ham.NgaySangChu(Convert.ToDateTime(rs.NgayTH));
                            #endregion hiển thị thông tin bệnh nhân
                            // hiển thị tên khoa phòng chỉ định
                            //var kpName = data.KPhongs.Where(p => p.MaKP == rs.MaKP).ToList();
                            // hiển thị bác sỹ chỉ định
                            if (!string.IsNullOrEmpty(chidinh.FirstOrDefault().TenDV))
                                rep.YCKT.Value = "- Yêu cầu: " + chidinh.FirstOrDefault().TenDV;
                            string _macbcd = "", _macbth = "";
                            _macbcd = rs.MaCB;
                            _macbth = rs.MaCBth;
                            if (string.IsNullOrEmpty(chidinh.FirstOrDefault().KetLuan))
                                rep.hienthiKQ(chidinh.FirstOrDefault().KetLuan);
                            rep.colTenBSDT.Text = _getTenCB(data, _macbcd);
                            rep.colTenTKXN.Text = _getTenCB(data, _macbth);
                            rep.CreateDocument();
                            frm.prcIN.PrintingSystem = rep.PrintingSystem;
                            frm.ShowDialog();
                        }
                    }
                    #endregion
                }


                else
                {
                    frmIn frm = new frmIn();
                    BaoCao.RepPhieuLuuHuyetNao rep = new BaoCao.RepPhieuLuuHuyetNao();
                    var par = (from a in data.CLS
                               join b in data.ChiDinhs.Where(p => p.IDCD == idCD) on a.IdCLS equals b.IdCLS
                               select new { a.CapCuu, a.MaBNhan }).ToList();
                    var par1 = (from cls in data.CLS.Where(p => p.IdCLS == idcls)
                                join cd in data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                join dv in data.DichVus on cd.MaDV equals dv.MaDV
                                select new
                                {
                                    dv.MaDV,
                                    cd.ChiDinh1,
                                    dv.TenDV,
                                }).ToList();
                    int mabn = 0;
                    if (par.Count > 0)
                    {
                        if (DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "01071")
                        {
                            string kieudoc1 = "";
                            string kieudoc2 = "";
                            var bnbb = (from ht in data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                        select new
                                        {
                                            ht.KieuDoc
                                        }).ToList();
                            kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                            kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                            if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                            {
                                DungChung.Bien._Visible_CDHA[0] = true;
                                DungChung.Bien._Visible_CDHA[2] = true;

                            }
                            if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                            {
                                DungChung.Bien._Visible_CDHA[0] = true;
                                DungChung.Bien._Visible_CDHA[2] = false;

                            }
                            if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                            {
                                DungChung.Bien._Visible_CDHA[2] = true;
                                DungChung.Bien._Visible_CDHA[0] = false;
                            }
                        }
                        rep.TenDV.Value = par1.FirstOrDefault().TenDV + "(" + par1.FirstOrDefault().ChiDinh1 + ")";
                        rep.MaBN.Value = "Mã BN: " + par.FirstOrDefault().MaBNhan.ToString();
                        rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                        rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        mabn = Convert.ToInt32(par.FirstOrDefault().MaBNhan);
                    }
                    if (data.BenhNhans.Where(p => p.MaBNhan == mabn).Select(p => p.NoiTru).FirstOrDefault() == 1)
                    {
                        var sovv = data.VaoViens.Where(p => p.MaBNhan == mabn).Select(p => p.SoVV).FirstOrDefault();
                        if (sovv != null)
                            rep.colSoVV.Text = rep.sovv.Text = rep.xrLabel68.Text = sovv.ToString();
                    }
                    switch (mau)
                    {
                        case 0:// phiếu lưu huyết não

                            if (DungChung.Bien.MaBV == "19048")
                                rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_19048();
                            else if (DungChung.Bien.MaBV == "24009")
                                rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub24009();
                            else if (DungChung.Bien.MaBV == "12121" || DungChung.Bien.MaBV == "30007" || DungChung.Bien.MaBV == "30009")
                            {
                                rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_12121();
                            }
                            else
                                rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub();
                            if (DungChung.Bien.MaBV == "12121" || DungChung.Bien.MaBV == "30007" || DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                                rep.Title.Value = ("phiếu điện não").ToUpper();
                            else
                                rep.Title.Value = ("Lưu huyết não").ToUpper();
                            break;
                        case 1:// đo mật độ loãng xương
                            if (DungChung.Bien.MaBV == "12121")
                            {
                                rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_LoangXuong_12121();
                                //QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_LoangXuong_12121 repSub2 = (QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_LoangXuong_12121)rep.xrSubreport1.ReportSource;
                                rep.Title.Value = ("Phiếu đo độ loãng xương").ToUpper();
                            }
                            else if (DungChung.Bien.MaBV == "30009")
                            {
                                rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_LoangXuong_12121();
                                //QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_LoangXuong_12121 repSub2 = (QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_LoangXuong_12121)rep.xrSubreport1.ReportSource;
                                rep.Title.Value = ("Phiếu thăm dò chức năng").ToUpper();
                            }
                            else
                            {
                                rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_LoangXuong();
                                rep.Title.Value = ("Phiếu đo mật độ xương").ToUpper();
                            }
                            break;
                        case 2:// siêu âm doppler xuyên sọ màu
                            rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_DopplerXuyenSo();
                            if (DungChung.Bien.MaBV == "24009" || DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                                rep.Title.Value = ("Phiếu siêu âm doppler").ToUpper();
                            else
                                rep.Title.Value = ("Phiếu siêu âm doppler xuyên sọ màu").ToUpper();
                            break;
                        case 3:

                            rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_12121();
                            rep.Title.Value = ("Phiếu điện não").ToUpper();
                            break;

                    }

                    rep.Mau.Value = mau;
                    rep.BindingData(idCD);
                    rep.CreateDocument();
                    frm.prcIN.PrintingSystem = rep.PrintingSystem;
                    frm.ShowDialog();
                }
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        public static bool InLuuHuyetNao1(QLBV_Database.QLBVEntities data, int idCD, int idcls, int mau)
        {
            try
            {
                if (DungChung.Bien.MaBV == "27001" && mau == 1)//phiếu đo mật độ xương mới 27001
                {
                    #region
                    data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                    frmIn frm = new frmIn();
                    BaoCao.Rep_PhieuDoMatDoXuong_27001 rep = new BaoCao.Rep_PhieuDoMatDoXuong_27001();
                    var chidinh = (from cd in data.ChiDinhs
                                   join dv in data.DichVus on cd.MaDV equals dv.MaDV
                                   select new
                                   {
                                       cd.IDCD,
                                       cd.LoiDan,
                                       cd.ChiDinh1,
                                       cd.KetLuan,
                                       cd.IdCLS,
                                       dv.TenDV,
                                       cd.Status
                                   })
                                      .Where(p => p.IDCD == idCD)
                                      .ToList();
                    if (chidinh.Count > 0)
                    {
                        int idCLS = Convert.ToInt32(chidinh.FirstOrDefault().IdCLS);
                        rep.SoPhieu.Value = idCLS.ToString();
                        var qCLS = data.CLS.Where(p => p.IdCLS == idCLS).ToList();
                        int _mabn = 0, _makp = 0;

                        if (qCLS.Count > 0)
                        {
                            _makp = qCLS.FirstOrDefault().MaKP == null ? 0 : Convert.ToInt32(qCLS.FirstOrDefault().MaKP);
                            var rs = qCLS.FirstOrDefault();
                            #region hiển thị thông tin bệnh nhân
                            var bnInfo = data.BenhNhans.Where(p => p.MaBNhan == rs.MaBNhan);
                            if (bnInfo.Count() > 0)
                            {
                                _mabn = bnInfo.FirstOrDefault().MaBNhan;
                                if (!String.IsNullOrEmpty(bnInfo.FirstOrDefault().TenBNhan))
                                    rep.TenBN.Value = bnInfo.FirstOrDefault().TenBNhan.ToString();
                                if (bnInfo.FirstOrDefault().Tuoi != null)
                                    if (DungChung.Bien.MaBV == "24012")
                                    {
                                        rep.TuoiBN.Value = DungChung.Ham.TuoitheoThang(data, _mabn, DungChung.Bien.formatAge_24012);
                                    }
                                    else
                                        rep.TuoiBN.Value = bnInfo.FirstOrDefault().Tuoi.ToString();
                                if (bnInfo.FirstOrDefault().GTinh == 1)
                                    rep.Nu.Value = "/";
                                else
                                    rep.Nam.Value = "/";
                                if (!String.IsNullOrEmpty(bnInfo.FirstOrDefault().SThe))
                                    rep.SThe1.Value = bnInfo.FirstOrDefault().SThe.ToString();
                                if (!String.IsNullOrEmpty(bnInfo.FirstOrDefault().DChi))
                                    rep.DiaChi.Value = bnInfo.FirstOrDefault().DChi;
                                if (bnInfo.FirstOrDefault().HanBHTu != null && bnInfo.FirstOrDefault().HanBHDen != null)
                                    rep.Khoa.Value = "Từ ngày " + bnInfo.FirstOrDefault().HanBHTu.Value.ToShortDateString() + " đến ngày " + bnInfo.FirstOrDefault().HanBHDen.Value.ToShortDateString();

                            }
                            var _ttkb = data.BNKBs.Where(p => p.MaBNhan == _mabn && p.MaKP == _makp).ToList();
                            if (_ttkb.Count > 0)
                            {
                                rep.ChanDoan.Value = DungChung.Ham.FreshString(_ttkb.FirstOrDefault().ChanDoan + ";" + _ttkb.FirstOrDefault().BenhKhac);
                            }
                            if (rs.NgayThang != null)
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(Convert.ToDateTime(rs.NgayThang));
                            if (!String.IsNullOrEmpty(rs.NgayTH.ToString()))
                                rep.NgayTT.Value = DungChung.Ham.NgaySangChu(Convert.ToDateTime(rs.NgayTH));
                            #endregion hiển thị thông tin bệnh nhân
                            // hiển thị tên khoa phòng chỉ định
                            //var kpName = data.KPhongs.Where(p => p.MaKP == rs.MaKP).ToList();
                            // hiển thị bác sỹ chỉ định
                            if (!string.IsNullOrEmpty(chidinh.FirstOrDefault().TenDV))
                                rep.YCKT.Value = "- Yêu cầu: " + chidinh.FirstOrDefault().TenDV;
                            string _macbcd = "", _macbth = "";
                            _macbcd = rs.MaCB;
                            _macbth = rs.MaCBth;
                            if (string.IsNullOrEmpty(chidinh.FirstOrDefault().KetLuan))
                                rep.hienthiKQ(chidinh.FirstOrDefault().KetLuan);
                            rep.colTenBSDT.Text = _getTenCB(data, _macbcd);
                            rep.colTenTKXN.Text = _getTenCB(data, _macbth);
                            rep.CreateDocument();
                            frm.prcIN.PrintingSystem = rep.PrintingSystem;
                            frm.ShowDialog();
                        }
                    }
                    #endregion
                }
                else
                {
                    frmIn frm = new frmIn();
                    BaoCao.RepPhieuLuuHuyetNao rep = new BaoCao.RepPhieuLuuHuyetNao();
                    var par = (from a in data.CLS
                               join c in data.BNKBs on a.MaBNhan equals c.MaBNhan
                               join b in data.ChiDinhs.Where(p => p.IDCD == idCD) on a.IdCLS equals b.IdCLS
                               select new { a.CapCuu, a.MaBNhan, c.MaICD, c.MaICD2 }).ToList();
                    var par1 = (from cls in data.CLS.Where(p => p.IdCLS == idcls)
                                join cd in data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                join dv in data.DichVus on cd.MaDV equals dv.MaDV
                                select new
                                {
                                    dv.MaDV,
                                    cd.ChiDinh1,
                                    dv.TenDV,
                                }).ToList();
                    int mabn = 0;
                    if (par.Count > 0)
                    {
                        string kieudoc1 = "";
                        string kieudoc2 = "";
                        var bnbb = (from ht in data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                    select new
                                    {
                                        ht.KieuDoc
                                    }).ToList();
                        kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                        kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                        if (DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "01071")
                        {
                            if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                            {
                                DungChung.Bien._Visible_CDHA[2] = false;
                                DungChung.Bien._Visible_CDHA[0] = true;

                            }
                            if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                            {
                                DungChung.Bien._Visible_CDHA[2] = false;
                                DungChung.Bien._Visible_CDHA[0] = true;

                            }
                            if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                            {
                                DungChung.Bien._Visible_CDHA[2] = false;
                                DungChung.Bien._Visible_CDHA[0] = true;
                            }
                        }
                        if (DungChung.Bien.MaBV == "24012")
                        {
                            rep.lbl_icd_24012_1.Visible = true;
                            rep.lbl_icd_24012_2.Visible = true;
                            rep.Parameters["MaICD"].Value = par.First().MaICD + ", " + par.First().MaICD2;
                        }
                        rep.TenDV.Value = par1.FirstOrDefault().TenDV + "(" + par1.FirstOrDefault().ChiDinh1 + ")";
                        rep.MaBN.Value = "Mã BN: " + par.FirstOrDefault().MaBNhan.ToString();
                        rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                        rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        mabn = Convert.ToInt32(par.FirstOrDefault().MaBNhan);
                    }
                    if (data.BenhNhans.Where(p => p.MaBNhan == mabn).Select(p => p.NoiTru).FirstOrDefault() == 1)
                    {
                        var sovv = data.VaoViens.Where(p => p.MaBNhan == mabn).Select(p => p.SoVV).FirstOrDefault();
                        if (sovv != null)
                            rep.colSoVV.Text = rep.sovv.Text = sovv.ToString();
                    }
                    switch (mau)
                    {
                        case 0:// phiếu lưu huyết não

                            if (DungChung.Bien.MaBV == "19048")
                                rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_19048();
                            else if (DungChung.Bien.MaBV == "24009")
                                rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub24009();
                            else if (DungChung.Bien.MaBV == "12121" || DungChung.Bien.MaBV == "30007" || DungChung.Bien.MaBV == "30009")
                            {
                                rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_12121();
                            }
                            else
                                rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub();
                            if (DungChung.Bien.MaBV == "12121" || DungChung.Bien.MaBV == "30007" || DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                                rep.Title.Value = ("phiếu điện não").ToUpper();
                            else
                                rep.Title.Value = ("Lưu huyết não").ToUpper();
                            break;
                        case 1:// đo mật độ loãng xương
                            if (DungChung.Bien.MaBV == "12121")
                            {
                                rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_LoangXuong_12121();
                                //QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_LoangXuong_12121 repSub2 = (QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_LoangXuong_12121)rep.xrSubreport1.ReportSource;
                                rep.Title.Value = ("Phiếu đo độ loãng xương").ToUpper();
                            }
                            else if (DungChung.Bien.MaBV == "30009")
                            {
                                rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_LoangXuong_12121();
                                //QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_LoangXuong_12121 repSub2 = (QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_LoangXuong_12121)rep.xrSubreport1.ReportSource;
                                rep.Title.Value = ("Phiếu thăm dò chức năng").ToUpper();
                            }
                            else
                            {
                                rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_LoangXuong();
                                rep.Title.Value = ("Phiếu đo mật độ xương").ToUpper();
                            }
                            break;
                        case 2:// siêu âm doppler xuyên sọ màu
                            rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_DopplerXuyenSo();
                            if (DungChung.Bien.MaBV == "24009" || DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                                rep.Title.Value = ("Phiếu siêu âm doppler").ToUpper();
                            else if (DungChung.Bien.MaBV == "27001")
                                rep.Title.Value = ("Phiếu siêu âm doppler").ToUpper();
                            else
                                rep.Title.Value = ("Phiếu siêu âm doppler xuyên sọ màu").ToUpper();
                            break;
                        case 3:

                            rep.xrSubreport1.ReportSource = new QLBV.BaoCao.RepPhieuLuuHuyetNao_sub_12121();
                            rep.Title.Value = ("Phiếu điện não").ToUpper();
                            break;

                    }

                    rep.Mau.Value = mau;
                    rep.BindingData(idCD);
                    rep.CreateDocument();
                    frm.prcIN.PrintingSystem = rep.PrintingSystem;
                    frm.ShowDialog();
                }
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        public static void InPhieuSieuAmDopplerTim(int _IdCLS)
        {
            QLBV_Database.QLBVEntities _Data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            BaoCao.rep_SieuAmDopplerTim_27023 rep = new BaoCao.rep_SieuAmDopplerTim_27023();
            var tbCLS = (from cls in _Data.CLS.Where(p => p.IdCLS == _IdCLS)
                         select new { cls.MaBNhan, cls.MaKP, cls.MaCB, cls.NgayTH, cls.NgayThang }).ToList();
            string _maBN = tbCLS.Select(m => m.MaBNhan).FirstOrDefault().ToString();
            int maBN = int.Parse(_maBN);
            string _maKP = tbCLS.Select(m => m.MaKP).FirstOrDefault().ToString();
            int maKP = int.Parse(_maKP);
            string _maCB = tbCLS.Select(m => m.MaCB).FirstOrDefault().ToString();
            if (tbCLS.Count() > 0)
            {
                if (!string.IsNullOrEmpty(tbCLS.FirstOrDefault().NgayTH.ToString()))
                {
                    DateTime ngay = DateTime.Parse(tbCLS.FirstOrDefault().NgayTH.ToString());
                    rep.paramNgay.Value = GetNgay(ngay);
                    rep.paramThang.Value = GetThang(DateTime.Parse(tbCLS.FirstOrDefault().NgayTH.ToString()));
                    rep.paramNam.Value = GetNam(DateTime.Parse(tbCLS.FirstOrDefault().NgayTH.ToString()));
                }
                else
                {
                    rep.paramNgay.Value = GetNgay(DateTime.Parse(tbCLS.FirstOrDefault().NgayThang.ToString()));
                    rep.paramThang.Value = GetThang(DateTime.Parse(tbCLS.FirstOrDefault().NgayThang.ToString()));
                    rep.paramNam.Value = GetNam(DateTime.Parse(tbCLS.FirstOrDefault().NgayThang.ToString()));
                }
            }
            var tbBN = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == maBN)
                        select new { bn.TenBNhan, bn.DChi, bn.Tuoi, bn.GTinh }).ToList();
            if (tbBN.Count() > 0)
            {

                rep.paramHoTenBN.Value = tbBN.FirstOrDefault().TenBNhan;
                if (DungChung.Bien.MaBV == "24012")
                {
                    rep.paramTuoi.Value = DungChung.Ham.TuoitheoThang(_Data, Convert.ToInt32(_maBN), DungChung.Bien.formatAge_24012);
                }
                else
                    rep.paramTuoi.Value = tbBN.FirstOrDefault().Tuoi;
                rep.paramGioiTinh.Value = tbBN.FirstOrDefault().GTinh == 0 ? "nữ" : "nam";
                rep.paramDiaChi.Value = tbBN.FirstOrDefault().DChi;

            }
            var tbVaoVien = (from vv in _Data.VaoViens.Where(p => p.MaBNhan == maBN)
                             select new { vv.SoBA }).ToList();
            if (tbVaoVien.Count() > 0)
            {
                rep.paramSoBA.Value = tbVaoVien.FirstOrDefault().SoBA;
            }
            var tbBNKB = (from bnkb in _Data.BNKBs.Where(p => p.MaBNhan == maBN && p.MaKP == maKP)
                          select new { bnkb.ChanDoan }).ToList();
            if (tbBNKB.Count() > 0)
            {
                rep.paramChanDoan.Value = tbBNKB.Last().ChanDoan;
            }
            var tbKP = (from kp in _Data.KPhongs.Where(p => p.MaKP == maKP)
                        select new { kp.TenKP }).ToList();
            if (tbKP.Count() > 0)
            {
                rep.paramKhoaDT.Value = tbKP.FirstOrDefault().TenKP;
            }
            var tbChiDinh = (from cd in _Data.ChiDinhs.Where(p => p.IdCLS == _IdCLS)
                             select new { cd.KetLuan }).ToList();
            if (tbChiDinh.Count() > 0)
            {
                rep.paramKetLuan.Value = tbChiDinh.FirstOrDefault().KetLuan;
            }
            var tbCB = (from cb in _Data.CanBoes.Where(p => p.MaCB.Equals(_maCB))
                        select new { cb.TenCB, cb.CapBac }).ToList();
            if (tbCB.Count() > 0)
            {
                rep.paramTenBS.Value = tbCB.FirstOrDefault().TenCB;
                rep.paramChucVUBS.Value = string.IsNullOrEmpty(tbCB.FirstOrDefault().CapBac) ? "" : tbCB.FirstOrDefault().CapBac + ".";
            }


            rep.CreateDocument();
            frmIn frm = new frmIn();
            frm.prcIN.PrintingSystem = rep.PrintingSystem;
            frm.ShowDialog();

        }

        public static string GetNgay(DateTime ngay)
        {
            DateTime date = DateTime.Parse(ngay.ToShortDateString());
            return date.Day.ToString();
        }
        public static string GetThang(DateTime ngay)
        {
            DateTime date = DateTime.Parse(ngay.ToShortDateString());
            return date.Month.ToString();
        }
        public static string GetNam(DateTime ngay)
        {
            DateTime date = DateTime.Parse(ngay.ToShortDateString());
            return date.Year.ToString();
        }

        #endregion
        #region In phiếu CĐHA
        /// <summary>
        /// 
        /// 
        /// 
        /// 
        /// </summary>
        /// <param name="_data"></param>
        /// <param name="_tieunhom"></param>
        /// <param name="_IDCD"></param>

        #region Hàm xuất phiếu đo chức năng hô hấp
        public static void XuatPhieuDoCNHH(int idCLS)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            var qcb = (from cb in data.CanBoes select cb).ToList();
            var qCLSct = (from cls in data.CLS.Where(p => p.IdCLS == idCLS)
                          join cd in data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                          join clsct in data.CLScts on cd.IDCD equals clsct.IDCD
                          join kp in data.KPhongs on cls.MaKP equals kp.MaKP
                          join bn in data.BenhNhans on cls.MaBNhan equals bn.MaBNhan
                          join cb in data.CanBoes on cls.MaCB equals cb.MaCB
                          join bnkb in data.BNKBs on new { n1 = cls.MaBNhan, n2 = cls.MaKP } equals new { n1 = bnkb.MaBNhan, n2 = bnkb.MaKP }
                          select new
                          {
                              cls.IdCLS,
                              cls.NgayTH,
                              cls.MaCB,
                              cls.MaKP,
                              cls.MaCBth,
                              cls.NgayThang,
                              cb.TenCB,
                              cls.ChanDoan,
                              bn.TenBNhan,
                              bn.MaBNhan,
                              bn.Tuoi,
                              bn.GTinh,
                              bn.DChi,
                              bn.SThe,
                              kp.TenKP,
                              bnkb.Buong,
                              bnkb.Giuong,
                              clsct.KetQua,
                              cd.ChiDinh1,
                              cd.MaDV,
                              cd.KetLuan,
                              cd.LoiDan
                          }).ToList();

            var qDV = (from dv in data.DichVus
                       join tn in data.TieuNhomDVs.Where(p => p.TenRG.Equals(DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.ChucNangHoHap)) on dv.IdTieuNhom equals tn.IdTieuNhom
                       select new { dv, tn }).ToList();

            var query = (from clsct in qCLSct
                         join dv in qDV on clsct.MaDV equals dv.dv.MaDV
                         select new { clsct, dv.dv, dv.tn }).ToList();
            frmIn frm1 = new frmIn();
            BaoCao.Rep_PhieuDoCNHH rep1 = new BaoCao.Rep_PhieuDoCNHH();
            if (query.Count > 0)
            {
                rep1.TenBN.Value = query.FirstOrDefault().clsct.TenBNhan;
                rep1.SoPhieu.Value = idCLS;
                rep1.BSDT.Value = query.FirstOrDefault().clsct.TenCB;
                rep1.DiaChi.Value = query.FirstOrDefault().clsct.DChi;
                rep1.TuoiBN.Value = query.FirstOrDefault().clsct.Tuoi;
                rep1.MaBNhan.Value = query.FirstOrDefault().clsct.MaBNhan;
                rep1.Khoa.Value = query.FirstOrDefault().clsct.TenKP;
                rep1.ChanDoan.Value = query.FirstOrDefault().clsct.ChanDoan;
                rep1.Buong.Value = query.FirstOrDefault().clsct.Buong;
                rep1.Giuong.Value = query.FirstOrDefault().clsct.Giuong;
                rep1.MaDV.Value = query.FirstOrDefault().clsct.MaDV;
                int gioiTinh = int.Parse(query.FirstOrDefault().clsct.GTinh.ToString());
                if (gioiTinh == 1)
                {
                    rep1.Nu.Value = "/";
                }
                else if (gioiTinh == 0)
                {
                    rep1.Nam.Value = "/";
                }
                rep1.YCKT.Value = "- Yêu cầu kiểm tra: " + query.FirstOrDefault().dv.TenDV + " (" + query.FirstOrDefault().clsct.ChiDinh1 + ")";
                rep1.KetLuan.Value = query.FirstOrDefault().clsct.KetLuan;
                rep1.Loidan.Value = query.FirstOrDefault().clsct.LoiDan;
                if (query.FirstOrDefault().clsct.SThe.Length >= 15)
                {
                    rep1.SThe1.Value = query.FirstOrDefault().clsct.SThe.Substring(0, 3);
                    rep1.SThe2.Value = query.FirstOrDefault().clsct.SThe.Substring(3, 2);
                    rep1.SThe3.Value = query.FirstOrDefault().clsct.SThe.Substring(5, 2);
                    rep1.SThe4.Value = query.FirstOrDefault().clsct.SThe.Substring(7, 3);
                    rep1.SThe5.Value = query.FirstOrDefault().clsct.SThe.Substring(10, 5);
                }
                if (query.FirstOrDefault().clsct.NgayThang != null && DungChung.Bien.MaBV != "02005")
                    rep1.NgayCD.Value = DungChung.Ham.NgaySangChu(query.FirstOrDefault().clsct.NgayThang.Value);
                else
                    rep1.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                if (query.FirstOrDefault().clsct.NgayTH != null)
                    rep1.NgayTH.Value = DungChung.Ham.NgaySangChu(query.FirstOrDefault().clsct.NgayTH.Value);
                else
                    rep1.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                rep1.BSCK.Value = qcb.Where(p => p.MaCB.Equals(query.FirstOrDefault().clsct.MaCBth)).Select(p => p.TenCB).FirstOrDefault();
            }
            rep1.CreateDocument();
            frm1.prcIN.PrintingSystem = rep1.PrintingSystem;
            frm1.ShowDialog();
        }
        #endregion
        public class CDHA_30372
        {
            //TTCQ
            public string TenBV { get; set; }
            public Image Logo { get; set; }
            public int MaBN { get; set; }
            public string DiaChiBenhVien { get; set; }
            public string TieuDe { get; set; }
            public string SoDienThoaiLienHe { get; set; }
            public string YeuCau { get; set; }
            public string TieuDeKetQua { get; set; }


            //BN
            public string HoTen { get; set; }
            public string NgaySinh { get; set; }
            public string BSCD { get; set; }
            public string NgayChiDinh { get; set; }
            public string NgayTH { get; set; }
            public int? Tuoi { get; set; }
            public string Buong { get; set; }
            public string Giuong { get; set; }
            public string DiaChi { get; set; }
            public string Khoa { get; set; }
            public string ChanDoan { get; set; }
            public string Nam { get; set; }
            public string Nu { get; set; }
            public string MA1 { get; set; }
            public string MA2 { get; set; }
            public string MA3 { get; set; }
            public string MA4 { get; set; }
            public string MA5 { get; set; }
            public string Email { get; set; }
            public string DienThoai { get; set; }
            public string BacSyChiDinh { get; set; }


            //KQ
            public Image Anh1 { get; set; }
            public Image Anh2 { get; set; }
            public Image Anh3 { get; set; }
            public Image Anh4 { get; set; }
            public Image Anh5 { get; set; }
            public Image Anh6 { get; set; }
            public Image Anh7 { get; set; }
            public Image Anh8 { get; set; }
            public string KetQua { get; set; }
            public string KetLuan { get; set; }
            public string LoiDan { get; set; }
            public string NgayThang { get; set; }
            public string BSTH { get; set; }
        }
        public static void _inPhieu_CDHA1(QLBV_Database.QLBVEntities _Data, string _tieunhom, int _mabn, int _IDCLS, int IDCD, bool Mode, int _mkp = 0)
        {
            #region 34019
            if (DungChung.Bien.MaBV == "34019")
            {

                var cls = _Data.CLS.Where(p => p.IdCLS == _IDCLS).FirstOrDefault();
                DateTime ngaycd = cls != null ? Convert.ToDateTime(cls.NgayThang) : DateTime.Now;

                var rg = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _mabn)
                          join cls4 in _Data.CLS.Where(p => p.IdCLS == _IDCLS) on bn.MaBNhan equals cls4.MaBNhan
                          join chidinh in _Data.ChiDinhs.Where(o => InTongHop ? o.Status == 0 : true) on cls4.IdCLS equals chidinh.IdCLS
                          join dv in _Data.DichVus on chidinh.MaDV equals dv.MaDV
                          join tn in _Data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                          select new { tn.TenRG }).ToList();
                string tenRG = rg.Count >= 0 ? rg.FirstOrDefault().TenRG : "";

                var par3 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _mabn)
                            join cls4 in _Data.CLS.Where(p => p.NgayThang == ngaycd) on bn.MaBNhan equals cls4.MaBNhan
                            join kp in _Data.KPhongs on cls4.MaKP equals kp.MaKP
                            join kpTH in _Data.KPhongs on cls4.MaKPth equals kpTH.MaKP
                            join chidinh in _Data.ChiDinhs.Where(o => InTongHop ? o.Status == 0 : true) on cls4.IdCLS equals chidinh.IdCLS
                            join dv in _Data.DichVus on chidinh.MaDV equals dv.MaDV
                            join tn in _Data.TieuNhomDVs.Where(o => o.TenRG == tenRG) on dv.IdTieuNhom equals tn.IdTieuNhom
                            select new { chidinh.IDCD, cls4.STT, tn.TenTN, chidinh.Status, chidinh.SoPhieu, cls4.NgayThang, cls4.MaCB, cls4.MaKP, kp.TenKP, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, cls4.MaKPth, TenKPth = kpTH.TenKP, DiaChiKPth = kpTH.DChi, bn.Tuoi, bn.SThe, bn.HanBHDen, bn.NoiTru, chidinh.ChiDinh1, chidinh.KetLuan, dv.TenDV, cls4.NgayTH, cls4.CapCuu, bn.NgaySinh, bn.ThangSinh, bn.NamSinh, bn.DTuong, bn.HanBHTu, cls4.BarCode, chidinh.LoiDan, chidinh.TrongBH, bn.IDPerson }).ToList();
                var par41 = (from p in par3
                             join clsct in _Data.CLScts on p.IDCD equals clsct.IDCD
                             select new { p.STT, p.TenTN, p.Status, p.SoPhieu, p.NgayThang, p.MaCB, p.MaKP, p.TenKP, p.MaBNhan, p.TenBNhan, p.DChi, p.GTinh, p.MaKPth, TenKPth = p.TenKP, DiaChiKPth = p.DiaChiKPth, p.Tuoi, p.SThe, p.HanBHDen, p.NoiTru, p.ChiDinh1, p.KetLuan, p.TenDV, p.NgayTH, p.CapCuu, p.NgaySinh, p.ThangSinh, p.NamSinh, p.DTuong, p.HanBHTu, p.BarCode, p.LoiDan, clsct.KetQua, IsTrongBH = (p.TrongBH == 1), p.IDPerson }).ToList();

                //if (par4.Count > 0)
                //{
                //    if (DungChung.Bien._Visible_CDHA[1] == false)
                //    {
                //        if (par4.Exists(o => o.Status == 1))
                //            DungChung.Bien._Visible_CDHA[2] = true;
                //        else
                //            DungChung.Bien._Visible_CDHA[2] = false;
                //    }
                //}

                for (int i = 0; i < 2; i++)
                {
                    var par4 = par41.Where(o => o.IsTrongBH == (i == 0)).ToList();
                    if (par4.Count > 0)
                    {

                        repPhieuKetQua_CDHA_34019_A4 rep = new repPhieuKetQua_CDHA_34019_A4();//3
                        rep.xrPictureBox1.Image = QLBV.DungChung.Ham.GetLogo();
                        rep.SoPhieu.Value = par4.FirstOrDefault().SoPhieu;
                        rep.MaDieuTri.Value = _mabn;
                        rep.MaBN.Value = par4.FirstOrDefault().IDPerson;
                        rep.TenBV.Value = DungChung.Bien.TenCQ.ToUpper();
                        var hthong = _Data.HTHONGs.FirstOrDefault(o => o.MaBV == DungChung.Bien.MaBV);
                        if (hthong != null)
                        {
                            rep.DiaChiBV.Value = hthong.DiaChi;
                        }
                        rep.TenPhieu.Value = "PHIẾU CHỈ ĐỊNH " + par4.FirstOrDefault().TenTN.ToUpper();
                        rep.KPhong.Value = par4.FirstOrDefault().TenKPth + (!string.IsNullOrWhiteSpace(par4.FirstOrDefault().DiaChiKPth) ? (" (" + par4.FirstOrDefault().DiaChiKPth + ")") : "");
                        rep.CapCuu.Value = (par4.FirstOrDefault().CapCuu == true) ? "X" : "";
                        rep.TenBNhan.Value = par4.FirstOrDefault().TenBNhan.ToUpper();
                        rep.NgaySinh.Value = DungChung.Ham.GhepNgaySinh("/", par4.FirstOrDefault().NamSinh, par4.FirstOrDefault().ThangSinh, par4.FirstOrDefault().NgaySinh);
                        rep.GioiTinh.Value = par4.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                        rep.DiaChi.Value = par4.FirstOrDefault().DChi;
                        rep.NgayGio.Value = "Thái Bình, " + DungChung.Ham.NgaySangChu(par4.FirstOrDefault().NgayThang.Value);
                        //if (!string.IsNullOrWhiteSpace(par4.FirstOrDefault().DTuong) && par4.FirstOrDefault().DTuong == "BHYT")
                        //{
                        //    rep.BHYT.Value = "X";
                        //}
                        //else
                        //    rep.ThuPhi.Value = "X";
                        if (i == 0)
                            rep.BHYT.Value = "X";
                        else
                            rep.ThuPhi.Value = "X";
                        rep.CapCuu.Value = (par4.FirstOrDefault().CapCuu == true) ? "X" : "";

                        if (i == 0)
                        {
                            if (!string.IsNullOrWhiteSpace(par4.FirstOrDefault().SThe))
                            {
                                rep.HanThe.Value = par4.FirstOrDefault().HanBHDen != null ? par4.FirstOrDefault().HanBHDen.Value.ToString("dd/MM/yyyy") : "";
                                rep.HanTu.Value = par4.FirstOrDefault().HanBHTu != null ? par4.FirstOrDefault().HanBHTu.Value.ToString("dd/MM/yyyy") : "";
                                rep.SThe1.Value = par4.FirstOrDefault().SThe.Substring(0, 2);
                                rep.SThe2.Value = par4.FirstOrDefault().SThe.Substring(2, 1);
                                rep.SThe3.Value = par4.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe4.Value = par4.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe5.Value = par4.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe6.Value = par4.FirstOrDefault().SThe.Substring(10, 5);
                            }
                        }
                        //arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, par4.FirstOrDefault().MaKP == null ? 0 : par4.FirstOrDefault().MaKP.Value);
                        rep.paramTenKP.Value = par4.FirstOrDefault().TenKP;
                        var maKp = (par4.FirstOrDefault().MaKP == null ? 0 : par4.FirstOrDefault().MaKP.Value);
                        var kbcd = (from bnkb in _Data.BNKBs.Where(p => p.MaBNhan == _mabn && p.MaKP == maKp)
                                    select bnkb).ToList();
                        if (kbcd != null && kbcd.Count > 0)
                        {
                            rep.BenhChinh.Value = kbcd.FirstOrDefault().ChanDoan + " (" + kbcd.FirstOrDefault().MaICD + ")";
                            rep.BenhPhu.Value = kbcd.FirstOrDefault().BenhKhac;
                            if (!string.IsNullOrWhiteSpace(kbcd.FirstOrDefault().Buong))
                            {
                                var spBuong = kbcd.FirstOrDefault().Buong.Split(';');
                                if (spBuong != null && spBuong.Count() > 0)
                                {
                                    rep.paramBuong.Value = spBuong[spBuong.Count() - 1];
                                }
                            }
                            if (!string.IsNullOrWhiteSpace(kbcd.FirstOrDefault().Giuong))
                            {
                                var spGiuong = kbcd.FirstOrDefault().Giuong.Split(';');
                                if (spGiuong != null && spGiuong.Count() > 0)
                                {
                                    rep.paramGiuong.Value = spGiuong[spGiuong.Count() - 1];
                                }
                            }
                        }
                        string _kq = "";

                        var coKq = par4.Where(o => o.Status == 1).ToList();
                        if (coKq != null && coKq.Count > 0)
                        {
                            _kq = "1. Mô tả: \n";
                            foreach (var a in coKq)
                            {
                                _kq += "  -" + a.KetQua + "\n";
                            }
                            _kq = _kq + "2. Kết luận: \n";
                            foreach (var a in coKq)
                            {
                                _kq += "  -" + a.KetLuan + "\n";
                            }
                        }
                        rep.KQCC.Value = _kq;
                        if (par4.FirstOrDefault().LoiDan != null && par4.FirstOrDefault().LoiDan.ToString() != "")
                            rep.LoiDan.Value = par4.FirstOrDefault().LoiDan;
                        else
                            rep.LoiDan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                        if (par4.FirstOrDefault().NgayTH != null)
                            rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par4.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                        else
                            rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";

                        rep.DataSource = par4.ToList();
                        rep.BindingData();
                        rep.CreateDocument();
                        frmIn frm = new frmIn();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                }
                return;
            }
            #endregion
            int _idcd = 0;// phòng siêu âm bệnh viện 12121 in theo ID chỉ định
            int v1 = 0;
            if (_tieunhom == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.X_QuangKTS)//Đoài yc 10092018
            {
                _tieunhom = DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.X_Quang;
                v1 = 1;
            }
            #region 27023 lấy số trên phiếu : BN nôi trú lấy số bệnh án, bệnh nhân ngoại trú số thứ tự tăng theo ngày
            string _so = "";

            if (DungChung.Bien.MaBV == "27023")
            {
                var bnhan = _Data.BenhNhans.Where(p => p.MaBNhan == _mabn).FirstOrDefault();
                if (bnhan != null)
                {
                    if (bnhan.NoiTru == 1)
                    {
                        var qvv = _Data.VaoViens.Where(parameters => parameters.MaBNhan == _mabn).Select(p => p.SoBA).FirstOrDefault();
                        if (qvv != null)
                            _so = qvv;
                    }
                    else
                    {
                        DateTime tungay = DungChung.Ham.NgayTu(bnhan.NNhap.Value);
                        DateTime denngay = DungChung.Ham.NgayDen(bnhan.NNhap.Value);
                        var qbn = _Data.BenhNhans.Where(p => p.NNhap >= tungay && p.NNhap <= denngay).Where(p => p.NoiTru == 0).OrderBy(p => p.NNhap).ToList();
                        int count = 0;
                        foreach (var a in qbn)
                        {
                            count++;
                            if (a.MaBNhan == _mabn)
                                break;
                        }
                        _so = count.ToString();
                    }
                }

            }
            #endregion
            if ((DungChung.Bien.MaBV == "12121" || DungChung.Bien.MaBV == "27183") && IDCD > 0 && _tieunhom == "Siêu âm")
            {
                var qkp = _Data.KPhongs.Where(p => p.MaKP == DungChung.Bien.MaKP).FirstOrDefault();
                if (qkp != null && qkp.PLoai == DungChung.Bien.st_PhanLoaiKP.CanLamSang)
                    _idcd = IDCD;
            }
            var clsa = _Data.CLS.Where(p => _idcd > 0 ? true : p.IdCLS == _IDCLS).FirstOrDefault();
            DateTime Ngaycd = DateTime.Now;

            if (clsa != null)
            {
                Ngaycd = clsa.NgayThang.Value;
            }

            var par0 = (from bn in _Data.BenhNhans.Where(o => o.MaBNhan == _mabn)
                        join cls in _Data.CLS.Where(p => (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "24009") ? p.NgayThang == Ngaycd : (_idcd > 0 ? true : p.IdCLS == _IDCLS)) on bn.MaBNhan equals cls.MaBNhan
                        join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                        join chidinh in _Data.ChiDinhs.Where(p => _idcd > 0 ? p.IDCD == _idcd : true) on cls.IdCLS equals chidinh.IdCLS
                        join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                        join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                        join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                        select new
                        {
                            kp.IsDongY,
                            kp.TenKP,
                            cls.IdCLS,
                            cls.ChanDoan,
                            cls.ChanDoanYHCT,
                            cls.MaICD,
                            chidinh.IDCD,
                            chidinh.Status,
                            cls.MaCBth,// TenCBth = kq1 == null ? "" : kq1.TenCB,
                            dv.MaQD,
                            dv.TenRG,
                            dvct.STT_F,
                            dvct.STT,
                            dvct.TSBT,
                            cls.NgayTH,
                            clsct.KetQua,
                            clsct.DuongDan,
                            cls.NgayThang,
                            bn.DTuong,
                            bn.MaBNhan,
                            bn.TenBNhan,
                            bn.DChi,
                            bn.GTinh,
                            bn.NoiTru,
                            bn.Tuoi,
                            bn.SThe,
                            cls.MaCB,
                            chidinh.ChiDinh1,
                            chidinh.KetLuan,
                            TenDV = DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "24012" ? dv.TenRG : dv.TenDV,
                            chidinh.LoiDan,
                            clsct.DuongDan2,
                            cls.CapCuu,
                            clsct.KQDuKien,
                            clsct.KQTyLe,
                            clsct.KetQua_Rtf,
                            MaKP = cls.MaKP,
                            MaKPth = cls.MaKPth,
                            bn.NgaySinh,
                            bn.ThangSinh,
                            bn.NamSinh,
                            bn.HanBHDen,
                            bn.HanBHTu,
                            dv.IdTieuNhom,
                            dv.MaDV
                        }).Where(p => p.IdCLS == _IDCLS).OrderBy(p => p.STT_F).ToList();
            var par1 = (from cls in _Data.CLS.Where(p => p.IdCLS == _IDCLS)
                        join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                        join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                        select new
                        {
                            dv.MaDV,
                            dv.TenDV,
                            cls.IdCLS
                        }).ToList();
            var par = (from a in par0
                       join cb in _Data.CanBoes on a.MaCB equals cb.MaCB
                       join cbth in _Data.CanBoes on a.MaCBth equals cbth.MaCB into kq
                       join kpTH in _Data.KPhongs on a.MaKPth equals kpTH.MaKP
                       from kq1 in kq.DefaultIfEmpty()
                       select new
                       {
                           a.IsDongY,
                           a.IdCLS,
                           a.NoiTru,
                           a.DuongDan2,
                           a.ChanDoan,
                           a.MaICD,
                           a.IDCD,
                           a.Status,
                           a.MaCBth,
                           TenCBth = kq1 == null ? "" : kq1.TenCB,
                           a.MaQD,
                           a.STT,
                           a.TSBT,
                           a.NgayTH,
                           a.KetQua,
                           a.DuongDan,
                           a.NgayThang,
                           a.MaBNhan,
                           a.TenBNhan,
                           a.DChi,
                           a.GTinh,
                           a.Tuoi,
                           a.SThe,
                           a.MaCB,
                           a.DTuong,
                           cb.TenCB,
                           cb.ChucVu,
                           a.ChiDinh1,
                           a.KetLuan,
                           a.TenDV,
                           a.LoiDan,
                           a.CapCuu,
                           a.TenRG,
                           a.KQDuKien,
                           a.KQTyLe,
                           a.ChanDoanYHCT,
                           a.MaKP,
                           a.TenKP,
                           a.MaKPth,

                           a.NgaySinh,
                           a.ThangSinh,
                           a.NamSinh,
                           a.HanBHDen,
                           a.HanBHTu,
                           a.KetQua_Rtf
                           //tn.TenTN
                       }).ToList();


            var getKPTH = (from a in _Data.CLS.Where(p => p.MaBNhan == _mabn)
                           join b in _Data.KPhongs on a.MaKPth equals b.MaKP
                           select new { b.TenKP });
            var ttbx = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).ToList();

            int _makp = 0;

            if (par.Count > 0)
            {
                _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                if (DungChung.Bien._Visible_CDHA[1] == false)
                {
                    if (DungChung.Bien.MaBV != "01071" && DungChung.Bien.MaBV != "01049")
                    {
                        if (par.FirstOrDefault().Status == 1)
                        {
                            DungChung.Bien._Visible_CDHA[2] = true;
                            if (DungChung.Bien.MaBV == "24009")
                            {
                                DungChung.Bien._Visible_CDHA[1] = true;
                            }
                        }
                        else
                        {
                            DungChung.Bien._Visible_CDHA[2] = false;
                            if (DungChung.Bien.MaBV == "24009")
                            {
                                DungChung.Bien._Visible_CDHA[1] = false;
                            }
                        }
                    }
                }

            }
            var dvucd = par0.FirstOrDefault();

            switch (_tieunhom)
            {
                #region  "Chức năng hô hấp":
                case "Chức năng hô hấp":
                    if (DungChung.Bien.MaBV == "30007")
                    {
                        //XuatPhieuDoCNHH(_IDCLS);
                        frmIn frmHH = new frmIn();
                        BaoCao.Rep_PhieuDoHoHap_30007 repHH = new BaoCao.Rep_PhieuDoHoHap_30007();
                        if (par.Count > 0)
                        {

                            repHH.TenBN.Value = (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789") ? par.FirstOrDefault().TenBNhan.ToUpper() : par.FirstOrDefault().TenBNhan;


                            if (DungChung.Bien.MaBV == "27023")
                                repHH.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        repHH.So.Value = qvv.SoVV;
                                    else
                                        repHH.So.Value = "";
                                }
                            }
                            else
                                repHH.So.Value = _IDCLS;
                            repHH.SoThe.Value = par.FirstOrDefault().SThe;
                            repHH.BSDT.Value = par.FirstOrDefault().MaCB;
                            repHH.BSCK.Value = par.FirstOrDefault().MaCBth; // Bác sĩ chuyên khoa là CBth
                            repHH.DChi.Value = par.FirstOrDefault().DChi;
                            if (DungChung.Bien.MaBV == "24012")
                            {
                                repHH.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge_24012);
                            }
                            else
                                repHH.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            //if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                            //    rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            //else
                            //    rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            repHH.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                repHH.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                repHH.Nam.Value = "/";
                            }
                            //rep.KetQua.Value = LD.FirstOrDefault().KetQua;
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                repHH.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                repHH.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                repHH.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                repHH.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            repHH.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                        }

                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);

                        repHH.Buong.Value = arrThongTinBNKB[2];
                        repHH.Giuong.Value = arrThongTinBNKB[3];

                        repHH.Khoa.Value = arrThongTinBNKB[4];
                        repHH.KetLuan.Value = par.FirstOrDefault().KetLuan;
                        List<Rep_PhieuDoHoHap_30007.BC> _lCol1 = new List<Rep_PhieuDoHoHap_30007.BC>();

                        if (DungChung.Bien.MaBV != "12122" && DungChung.Bien.MaBV != "30007")
                        {
                            string[] tenDVHH = new string[4] { " Dự kiến", " Thực tế", " Tỷ lệ giảm %", " " };
                            foreach (string a in tenDVHH)
                                _lCol1.Add(new Rep_PhieuDoHoHap_30007.BC { TenDV = a });
                        }
                        else
                        {
                            if (par.Count > 0)
                            {
                                string TSTB1 = "", TSTB2 = "", TSTB3 = "", TSTB4 = "", TSTB5 = "";
                                string kq1 = "", kq2 = "", kq3 = "", kq4 = "", kq5 = "";
                                string tyle1 = "", tyle2 = "", tyle3 = "", tyle4 = "", tyle5 = "";
                                var q1 = par.Where(p => p.STT == 1).FirstOrDefault();
                                var q2 = par.Where(p => p.STT == 2).FirstOrDefault();
                                var q3 = par.Where(p => p.STT == 3).FirstOrDefault();
                                var q4 = par.Where(p => p.STT == 4).FirstOrDefault();
                                var q5 = par.Where(p => p.STT == 5).FirstOrDefault();
                                if (q1 != null)
                                {
                                    TSTB1 = q1.KQDuKien;
                                    kq1 = q1.KetQua;
                                    tyle1 = q1.KQTyLe;
                                }
                                if (q2 != null)
                                {
                                    TSTB2 = q2.KQDuKien;
                                    kq2 = q2.KetQua;
                                    tyle2 = q2.KQTyLe;
                                }
                                if (q3 != null)
                                {
                                    TSTB3 = q3.KQDuKien;
                                    kq3 = q3.KetQua;
                                    tyle3 = q3.KQTyLe;
                                }
                                if (q4 != null)
                                {
                                    TSTB4 = q4.KQDuKien;
                                    kq4 = q4.KetQua;
                                    tyle4 = q4.KQTyLe;
                                }
                                if (q5 != null)
                                {
                                    TSTB5 = q5.KQDuKien;
                                    kq5 = q5.KetQua;
                                    tyle5 = q5.KQTyLe;
                                }


                                _lCol1.Add(new Rep_PhieuDoHoHap_30007.BC { TenDV = "Dự kiến", KQ1 = TSTB1, KQ2 = TSTB2, KQ3 = TSTB3, KQ4 = TSTB4, KQ5 = TSTB5 });
                                _lCol1.Add(new Rep_PhieuDoHoHap_30007.BC { TenDV = "Thực tế", KQ1 = kq1, KQ2 = kq2, KQ3 = kq3, KQ4 = kq4, KQ5 = kq5 });
                                _lCol1.Add(new Rep_PhieuDoHoHap_30007.BC { TenDV = "Tỷ lệ giảm %", KQ1 = tyle1, KQ2 = tyle2, KQ3 = tyle3, KQ4 = tyle4, KQ5 = tyle5 });
                                _lCol1.Add(new Rep_PhieuDoHoHap_30007.BC { TenDV = "" });
                            }
                        }
                        repHH.DataSource = _lCol1;
                        repHH.DataBindings();
                        repHH.CreateDocument();
                        frmHH.prcIN.PrintingSystem = repHH.PrintingSystem;
                        frmHH.ShowDialog();
                    }
                    else if (DungChung.Bien.MaBV == "27001")
                    {
                        #region
                        frmIn frmHH = new frmIn();
                        BaoCao.Rep_PhieuDoHoHap27001 repHH = new BaoCao.Rep_PhieuDoHoHap27001();
                        if (par.Count > 0)
                        {

                            repHH.TenBN.Value = (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789") ? par.FirstOrDefault().TenBNhan.ToUpper() : par.FirstOrDefault().TenBNhan;


                            if (DungChung.Bien.MaBV == "27023")
                                repHH.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        repHH.So.Value = qvv.SoVV;
                                    else
                                        repHH.So.Value = "";
                                }
                            }
                            else
                                repHH.So.Value = _IDCLS;
                            repHH.SoThe.Value = par.FirstOrDefault().SThe;
                            repHH.BSDT.Value = par.FirstOrDefault().MaCB;
                            repHH.BSCK.Value = par.FirstOrDefault().MaCBth; // Bác sĩ chuyên khoa là CBth
                            repHH.DChi.Value = par.FirstOrDefault().DChi;
                            if (DungChung.Bien.MaBV == "24012")
                            {
                                repHH.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge_24012);
                            }
                            else
                                repHH.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            //if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                            //    rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            //else
                            //    rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            repHH.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                repHH.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                repHH.Nam.Value = "/";
                            }
                            //rep.KetQua.Value = LD.FirstOrDefault().KetQua;
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                repHH.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                repHH.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                repHH.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                repHH.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            repHH.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "  Mã ICD: " + DungChung.Ham.FreshString(par.FirstOrDefault().MaICD) : DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan);
                            //repHH.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            //repHH.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";


                        }

                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);

                        repHH.Buong.Value = arrThongTinBNKB[2];
                        repHH.Giuong.Value = arrThongTinBNKB[3];

                        repHH.Khoa.Value = arrThongTinBNKB[4];

                        List<Rep_PhieuDoHoHap.BC> _lCol1 = new List<Rep_PhieuDoHoHap.BC>();

                        if (DungChung.Bien.MaBV != "12122")
                        {
                            string[] tenDVHH = new string[4] { " Dự kiến", " Thực tế", " Tỷ lệ giảm %", " " };
                            foreach (string a in tenDVHH)
                                _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = a });
                        }
                        else
                        {
                            if (par.Count > 0)
                            {
                                string TSTB1 = "", TSTB2 = "", TSTB3 = "", TSTB4 = "", TSTB5 = "";
                                string kq1 = "", kq2 = "", kq3 = "", kq4 = "", kq5 = "";
                                var q1 = par.Where(p => p.STT == 1).FirstOrDefault();
                                var q2 = par.Where(p => p.STT == 2).FirstOrDefault();
                                var q3 = par.Where(p => p.STT == 3).FirstOrDefault();
                                var q4 = par.Where(p => p.STT == 4).FirstOrDefault();
                                var q5 = par.Where(p => p.STT == 5).FirstOrDefault();
                                if (q1 != null)
                                {
                                    TSTB1 = q1.TSBT;
                                    kq1 = q1.KetQua;
                                }
                                if (q2 != null)
                                {
                                    TSTB2 = q2.TSBT;
                                    kq2 = q2.KetQua;
                                }
                                if (q3 != null)
                                {
                                    TSTB3 = q3.TSBT;
                                    kq3 = q3.KetQua;
                                }
                                if (q4 != null)
                                {
                                    TSTB4 = q4.TSBT;
                                    kq4 = q4.KetQua;
                                }
                                if (q5 != null)
                                {
                                    TSTB5 = q5.TSBT;
                                    kq5 = q5.KetQua;
                                }


                                _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "Dự kiến", KQ1 = TSTB1, KQ2 = TSTB2, KQ3 = TSTB3, KQ4 = TSTB4, KQ5 = TSTB5 });
                                _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "Thực tế", KQ1 = kq1, KQ2 = kq2, KQ3 = kq3, KQ4 = kq4, KQ5 = kq5 });
                                _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "Tỷ lệ giảm %" });
                                _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "" });
                            }
                        }
                        repHH.DataSource = _lCol1;
                        repHH.DataBindings();
                        repHH.CreateDocument();
                        frmHH.prcIN.PrintingSystem = repHH.PrintingSystem;
                        frmHH.ShowDialog();
                        #endregion
                    }
                    else if (DungChung.Bien.MaBV == "01830")
                    {
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuDoCNHH_0183 rep3 = new BaoCao.repPhieuDoCNHH_0183();
                        if (par.Count > 0)
                        {
                            rep3.SubBand1.Visible = true;
                            rep3.labmabn.Text = _mabn.ToString();
                            if (DungChung.Bien.MaBV == "20001")
                            {
                                rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            }
                            else
                            {
                                rep3.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            }
                            if (DungChung.Bien.MaBV == "27023")
                                rep3.SoPhieu.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep3.SoPhieu.Value = qvv.SoVV;
                                    else
                                        rep3.SoPhieu.Value = "";
                                }
                            }
                            else
                                rep3.SoPhieu.Value = _IDCLS;
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep3.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep3.Nam.Value = "/";
                            }
                            rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            string str = "";
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                str = par.FirstOrDefault().KetQua;
                            rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep3.ChanDoan.Value = arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];
                            rep3.Khoa.Value = arrThongTinBNKB[4];
                            rep3.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                            rep3.TieuDe2.Value = "KẾT QUẢ " + par.FirstOrDefault().TenDV.ToUpper();
                            rep3.TenRG.Value = par.FirstOrDefault().TenRG;
                        }

                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                    }

                    else
                    {
                        frmIn frmHH = new frmIn();
                        BaoCao.Rep_PhieuDoHoHap repHH = new BaoCao.Rep_PhieuDoHoHap();
                        if (par.Count > 0)
                        {
                            repHH.TenBN.Value = (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789") ? par.FirstOrDefault().TenBNhan.ToUpper() : par.FirstOrDefault().TenBNhan;


                            if (DungChung.Bien.MaBV == "27023")
                                repHH.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        repHH.So.Value = qvv.SoVV;
                                    else
                                        repHH.So.Value = "";
                                }
                            }
                            else
                                repHH.So.Value = _IDCLS;
                            repHH.SoThe.Value = par.FirstOrDefault().SThe;
                            repHH.BSDT.Value = par.FirstOrDefault().MaCB;
                            repHH.BSCK.Value = par.FirstOrDefault().MaCBth; // Bác sĩ chuyên khoa là CBth
                            repHH.DChi.Value = par.FirstOrDefault().DChi;
                            if (DungChung.Bien.MaBV == "24012")
                            {
                                repHH.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge_24012);
                            }
                            else
                                repHH.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            //if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                            //    rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            //else
                            //    rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            repHH.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                repHH.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                repHH.Nam.Value = "/";
                            }
                            //rep.KetQua.Value = LD.FirstOrDefault().KetQua;
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                repHH.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                repHH.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                repHH.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                repHH.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            repHH.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "  Mã ICD: " + DungChung.Ham.FreshString(par.FirstOrDefault().MaICD) : DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan);
                            repHH.xrLabel32.Text = repHH.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            repHH.xrLabel34.Text = repHH.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";


                        }

                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);

                        repHH.Buong.Value = arrThongTinBNKB[2];
                        repHH.Giuong.Value = arrThongTinBNKB[3];

                        repHH.Khoa.Value = arrThongTinBNKB[4];

                        List<Rep_PhieuDoHoHap.BC> _lCol1 = new List<Rep_PhieuDoHoHap.BC>();

                        //if (DungChung.Bien.MaBV != "12122")
                        //{
                        //    string[] tenDVHH = new string[4] { " Dự kiến", " Thực tế", " Tỷ lệ giảm %", " " };
                        //    foreach (string a in tenDVHH)
                        //        _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = a });
                        //}
                        //else
                        //{
                        if (par.Count > 0)
                        {
                            string TSTB1 = "", TSTB2 = "", TSTB3 = "", TSTB4 = "", TSTB5 = "";
                            string kq1 = "", kq2 = "", kq3 = "", kq4 = "", kq5 = "";
                            var q1 = par.Where(p => p.STT == 1).FirstOrDefault();
                            var q2 = par.Where(p => p.STT == 2).FirstOrDefault();
                            var q3 = par.Where(p => p.STT == 3).FirstOrDefault();
                            var q4 = par.Where(p => p.STT == 4).FirstOrDefault();
                            var q5 = par.Where(p => p.STT == 5).FirstOrDefault();
                            if (q1 != null)
                            {
                                TSTB1 = q1.TSBT;
                                kq1 = q1.KetQua;
                            }
                            if (q2 != null)
                            {
                                TSTB2 = q2.TSBT;
                                kq2 = q2.KetQua;
                            }
                            if (q3 != null)
                            {
                                TSTB3 = q3.TSBT;
                                kq3 = q3.KetQua;
                            }
                            if (q4 != null)
                            {
                                TSTB4 = q4.TSBT;
                                kq4 = q4.KetQua;
                            }
                            if (q5 != null)
                            {
                                TSTB5 = q5.TSBT;
                                kq5 = q5.KetQua;
                            }


                            _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "Dự kiến", KQ1 = TSTB1, KQ2 = TSTB2, KQ3 = TSTB3, KQ4 = TSTB4, KQ5 = TSTB5 });
                            _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "Thực tế", KQ1 = kq1, KQ2 = kq2, KQ3 = kq3, KQ4 = kq4, KQ5 = kq5 });
                            _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "Tỷ lệ giảm %" });
                            _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "" });
                        }
                        if (DungChung.Bien.MaBV == "30010")
                        {

                            int mkpth = Convert.ToInt32(par.FirstOrDefault().MaKPth.Value);
                            repHH.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                        }//yenbg1
                        //}
                        repHH.DataSource = _lCol1;
                        repHH.DataBindings();
                        repHH.CreateDocument();
                        frmHH.prcIN.PrintingSystem = repHH.PrintingSystem;
                        frmHH.ShowDialog();
                    }
                    break;
                #endregion
                #region X quang
                case "X-Quang":
                    #region 27021
                    DungChung.Bien.checkcls = "X-Quang";
                    if (DungChung.Bien.MaBV == "27021")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang_27021 rep = new BaoCao.repPhieuChupXQuang_27021();
                        string _kq = "";
                        if (par.Count > 0)
                        {
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            rep.So.Value = _IDCLS;
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().DuongDan2 != null)
                            { rep.DuongDan.Value = par.FirstOrDefault().DuongDan2; }
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            foreach (var a in par)
                            {
                                _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            rep.YCCC.Value = _yccc;
                            foreach (var a in par)
                            {
                                _kq += " " + a.KetQua + a.KetLuan + "\n";
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];

                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion

                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789" || DungChung.Bien.MaBV == "24009" || DungChung.Bien.MaBV == "30012")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang_01071 rep = new BaoCao.repPhieuChupXQuang_01071();
                        string _kq = "";
                        string _kl = "";
                        if (par.Count > 0)
                        {
                            if (DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "01071")
                            {
                                string kieudoc1 = "";
                                string kieudoc2 = "";
                                var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                            select new
                                            {
                                                ht.KieuDoc
                                            }).ToList();
                                kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                                kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                                if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = true;
                                    DungChung.Bien._Visible_CDHA[1] = true;
                                }
                                if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = true;
                                    DungChung.Bien._Visible_CDHA[1] = false;

                                }
                                if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[1] = true;
                                    DungChung.Bien._Visible_CDHA[0] = false;
                                }
                            }
                            rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            if (DungChung.Bien.MaBV == "27023")
                                rep.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep.So.Value = qvv.SoVV;
                                    else
                                        rep.So.Value = "";
                                }
                            }
                            else
                                rep.So.Value = _IDCLS;
                            if (par.FirstOrDefault().NoiTru == 1)
                            {
                                var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                if (sovv != null)
                                    rep.sovv.Text = "Số VV: " + sovv.ToString();
                            }
                            rep.colMaBN.Text = _mabn.ToString();
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.MaCBth.Value = par.FirstOrDefault().MaCBth;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            //if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                            if (DungChung.Bien.MaBV == "12345")
                            {
                                DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH == null ? par.FirstOrDefault().NgayThang.Value : par.FirstOrDefault().NgayTH.Value);
                                DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH == null ? par.FirstOrDefault().NgayThang.Value : par.FirstOrDefault().NgayTH.Value);
                                var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                                             join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                             join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                                             join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                                             select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                                foreach (var item in _lcls)
                                {
                                    _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                                }
                            }
                            else if (DungChung.Bien.MaBV != "24009")
                            {
                                foreach (var a in par)
                                {
                                    if (DungChung.Bien.MaBV == "26007")
                                    {
                                        _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                    }
                                    else
                                        _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                }
                            }
                            rep.YCCC.Value = _yccc;
                            if (DungChung.Bien.MaBV == "24009")
                            {
                                rep.YCCC.Value = par1.FirstOrDefault().TenDV + par.FirstOrDefault().ChiDinh1;
                            }
                            if (DungChung.Bien.MaBV == "20001")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetQua + "\n";
                                }
                                _kq = _kq + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetLuan + "\n";
                                }
                            }
                            else if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetQua + "\n\n";
                                }
                                _kl = _kl + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kl += "  -" + a.KetLuan + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    if (DungChung.Bien.MaBV == "30012")
                                    {
                                        _kq += "  " + a.KetQua + "\r\n\n" + a.KetLuan;
                                    }
                                    else
                                    {
                                        _kq += " " + a.KetQua + "\n" + a.KetLuan + "\n";
                                    }
                                }
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            ////DungChung.Bien.MaBV == "01049" ? DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "  Mã ICD: " + DungChung.Ham.FreshString(par.FirstOrDefault().MaICD) : DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan); //par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            rep.KLCC.Value = _kl;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            if (par.FirstOrDefault().IsDongY == true && DungChung.Bien.MaBV == "24297")
                            {
                                rep.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _mabn, _makp);
                            }
                            else
                            {
                                rep.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + DungChung.Ham.FreshString(arrThongTinBNKB[0]) : arrThongTinBNKB[1];
                            }

                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];
                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    #region 20001
                    else if (DungChung.Bien.MaBV == "20001")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang_20001 rep = new BaoCao.repPhieuChupXQuang_20001();
                        rep.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                        if (DungChung.Bien.MaBV == "24009" && v1 == 1)
                            rep.TieuDe.Value = "PHIẾU CHỤP X-QUANG SỐ HÓA";
                        string _kq = "";
                        if (par.Count > 0)
                        {
                            //rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            if (DungChung.Bien.MaBV == "27023")
                                rep.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep.So.Value = qvv.SoVV;
                                    else
                                        rep.So.Value = "";
                                }
                            }
                            else
                                rep.So.Value = _IDCLS;
                            rep.colMaBN.Text = "Mã BN: " + _mabn.ToString();
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            //if (DungChung.Bien.MaBV == "24009")
                            //{
                            //    DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH.Value);
                            //    DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH.Value);
                            //    var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                            //                 join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                            //                 join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                            //                 join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                            //                 select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                            //    foreach (var item in _lcls)
                            //    {
                            //        _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                            //    }
                            //}
                            //else
                            //{
                            foreach (var a in par)
                            {
                                if (DungChung.Bien.MaBV == "26007")
                                {
                                    _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                }
                                else
                                    _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            //}
                            rep.YCCC.Value = _yccc;

                            if (DungChung.Bien.MaBV == "20001")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetQua + "\n";
                                }
                                _kq = _kq + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetLuan + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    _kq += " " + a.KetQua + "\n" + a.KetLuan + "\n";
                                }
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            //if (DungChung.Bien.MaBV == "20001")
                            //{
                            //    rep.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan), DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoanYHCT));// DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoanYHCT) + "[" + DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "]";
                            //}//DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                            //else
                            //    rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            //arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            //if (DungChung.Bien.MaBV == "20001")

                            //else
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    #region 27023 phiếu cắt lớp vi tính
                    else if (DungChung.Bien.MaBV == "27023" && (dvucd.TenDV.ToLower().Contains("cắt lớp vi tính") || dvucd.TenDV.ToLower().Contains("clvt") || dvucd.TenDV.ToLower().Contains("ct scanner")))
                    {
                        frmIn frm = new frmIn();
                        BaoCao.rep_PhieuChupCatLopVT rep = new BaoCao.rep_PhieuChupCatLopVT();
                        rep.TieuDe.Value = "PHIẾU CHỤP CẮT LỚP VI TÍNH";
                        string _kq = "", _mt = "";
                        if (par.Count > 0)
                        {
                            //rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            rep.So.Value = _IDCLS;
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.SThe.Value = par.FirstOrDefault().SThe;
                            rep.DTuong.Value = par.FirstOrDefault().DTuong == "BHYT" ? "Bảo hiểm y tế" : par.FirstOrDefault().DTuong;
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            int a1 = 1;
                            foreach (var a in par)
                            {
                                _yccc += a1 + ". " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                a1++;
                            }
                            //}
                            rep.YCCC.Value = _yccc;

                            foreach (var a in par)
                            {
                                _mt += "  -" + a.KetQua + "\n";
                            }
                            foreach (var a in par)
                            {
                                _kq += "  -" + a.KetLuan + "\n";
                            }

                            if (par.FirstOrDefault().NgayThang != null)
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().ChanDoan.Contains(";"))
                            {
                                string[] _arrcd = par.FirstOrDefault().ChanDoan.Split(';');
                                rep.ChanDoan.Value = _arrcd[0];
                                string benhphu = "";
                                for (int i = 1; i < _arrcd.Length; i++)
                                {
                                    benhphu += _arrcd[i] + ";";
                                }
                                rep.BenhKhac.Value = DungChung.Ham.FreshString(benhphu);
                            }
                            else
                                rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            rep.MoTa.Value = _mt;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];
                            rep.Khoa.Value = arrThongTinBNKB[4];
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    #region bv khác
                    else
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang rep = new BaoCao.repPhieuChupXQuang();
                        if (string.IsNullOrEmpty(ttbx.FirstOrDefault().Email))
                        {
                            rep.Email.Value = "";
                        }
                        else { rep.Email.Value = ttbx.FirstOrDefault().Email; }
                        if (Mode == true)
                        {
                            //rep.LoGo30372.Visible = false;
                        }
                        rep.SDT.Value = ttbx.FirstOrDefault().DThoai;
                        rep.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                        if (DungChung.Bien.MaBV == "30372")
                        {
                            switch (DungChung.Bien.MauIn)
                            {
                                case 1:
                                    rep.TieuDe.Value = "PHIẾU CHỤP CẮT LỚP VI TÍNH";
                                    break;
                                case 2:
                                    rep.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                                    //rep.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                                    break;
                                case 3:
                                    rep.TieuDe.Value = "PHIẾU CHỤP X-QUANG ";
                                    //rep.TieuDe.Value = "PHIẾU CHỤP CẮT LỚP VI TÍNH";
                                    break;
                            }
                        }
                        if (DungChung.Bien.MaBV == "24009" && v1 == 1)
                            rep.TieuDe.Value = "PHIẾU CHỤP X-QUANG SỐ HÓA";
                        string _kq = "";
                        string _kl = "";
                        string _ld = "";

                        //DateTime n1 = Frm_CDHA_Moi._Ngaytu;
                        //DateTime n2 = Frm_CDHA_Moi._Ngayden;
                        DateTime n3 = DungChung.Ham.NgayTu(Frm_CDHA_Moi.ngaythuchien); // 14017 in kq xquang trong ngày
                        DateTime n4 = DungChung.Ham.NgayDen(Frm_CDHA_Moi.ngaythuchien);
                        var paz14017 = (from bn in _Data.BenhNhans.Where(o => o.MaBNhan == _mabn) // query paz14017 cho vien 14017
                                        join bnkb in _Data.BNKBs.Where(p => p.MaKP == _makp) on bn.MaBNhan equals bnkb.MaBNhan
                                        join cls in _Data.CLS.Where(p => p.MaKPth == _mkp).Where(p => p.NgayTH >= n3 && p.NgayTH <= n4).Where(p => p.Status == 1) on bn.MaBNhan equals cls.MaBNhan
                                        //join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                        join chidinh in _Data.ChiDinhs on cls.IdCLS equals chidinh.IdCLS
                                        join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                                        join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                                        select new
                                        {
                                            bnkb.IDKB,
                                            chidinh.LoiDan,
                                            chidinh.ChiDinh1,
                                            chidinh.KetLuan,
                                            clsct.KetQua,
                                            clsct.KetQua_Rtf,
                                            cls.IdCLS,
                                            dv.TenDV
                                        }).ToList();

                        if (par.Count > 0)
                        {
                            //rep.colMaBN.Text = _mabn.ToString();
                            //rep. = par.FirstOrDefault().TenCBth;
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            if (DungChung.Bien.MaBV == "27023")
                                rep.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14017")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                    {
                                        int ngayvao = qvv.NgayVao.Value.Year;
                                        rep.So.Value = DungChung.Bien.MaBV == "14017" ? qvv.SoBA + "/" + ngayvao : qvv.SoVV;
                                    }
                                    else
                                        rep.So.Value = "";
                                }
                            }
                            else
                                rep.So.Value = _IDCLS;
                            rep.CQ.Value = DungChung.Bien.TenCQ.ToUpper();
                            rep.MaBN.Value = _mabn.ToString();
                            rep.colMaBN.Text = "Mã BN: " + _mabn.ToString();
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.SoTheFull.Value = par.FirstOrDefault().SThe;
                            if (DungChung.Bien.MaBV == "24012")
                            {
                                rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge_24012);
                            }
                            else
                                rep.Tuoi.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.CalculateAge(par.FirstOrDefault().NgaySinh, par.FirstOrDefault().ThangSinh, par.FirstOrDefault().NamSinh, "tháng.") : DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);

                            if (DungChung.Bien.MaBV == "14017")
                            {
                                if (paz14017.FirstOrDefault().LoiDan != null && paz14017.FirstOrDefault().LoiDan.ToString() != "")
                                {
                                    foreach (var a in paz14017)
                                    {
                                        _ld += a.LoiDan + "\n";
                                    }
                                }
                                else
                                    _ld = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            }
                            else
                            {
                                if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua) || !string.IsNullOrEmpty(par.FirstOrDefault().KetLuan))
                                {
                                    if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                        _ld = par.FirstOrDefault().LoiDan;
                                    else
                                        _ld = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                                    if (DungChung.Bien.MaBV == "30372")
                                    {
                                        _kl = par.FirstOrDefault().KetLuan;
                                    }
                                }
                                else
                                {
                                    _ld = null;
                                }
                            }

                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = DungChung.Bien.MaBV == "14017" ? "Nam" : "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = DungChung.Bien.MaBV == "14017" ? "Nữ" : "/";
                            }
                            string _yccc = "";
                            string _yccc1 = "";

                            foreach (var a in par)
                            {
                                if (DungChung.Bien.MaBV == "26007")
                                {
                                    _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                }
                                else
                                    _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            foreach (var a in paz14017)
                            {
                                _yccc1 += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            rep.YCCC.Value = DungChung.Bien.MaBV == "14017" ? _yccc1 : _yccc;

                            if (DungChung.Bien.MaBV == "20001")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {
                                    if (a.KetQua_Rtf == null)
                                        _kq += "  " + a.KetQua + "\n";
                                    else
                                        _kq += "  " + a.KetQua_Rtf + "\n";
                                }
                                _kq = _kq + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  " + a.KetLuan + "\n";
                                }
                            }
                            else
                            {
                                if (DungChung.Bien.MaBV == "14017")
                                {
                                    foreach (var a in paz14017)
                                    {
                                        {
                                            _kq += a.KetQua + "\r\n\n";
                                        }

                                    }
                                }
                                else
                                {
                                    foreach (var a in par)
                                    {
                                        if (DungChung.Bien.MaBV == "30372")
                                        {
                                            _kq += a.KetQua + "\r\n\n";
                                        }
                                        else
                                        {
                                            _kq += "  " + a.KetQua + "\r\n\n" + a.KetLuan;
                                        }
                                    }
                                }
                            }
                            foreach (var a in paz14017)
                            {

                                {
                                    _kl += a.KetLuan + "\r\n";
                                }
                            }

                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep.NgayCD.Value = DungChung.Bien.MaBV == "14017" ? DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, 1) : DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (DungChung.Bien.MaBV == "29247" && par.FirstOrDefault().IsDongY == true)
                            {
                                rep.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value);
                            }
                            else
                            {
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                rep.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            }
                            if (DungChung.Bien.MaBV == "14017")
                            {
                                string[] _MaICDarr = DungChung.Ham.getMaICDarrFull_SL(_Data, _mabn, DungChung.Bien.GetICD, paz14017.FirstOrDefault().IDKB);
                                string[] icd = _MaICDarr[0].Split(';');
                                string[] tenicd = _MaICDarr[1].Split(';');
                                string lydo = "";
                                if (icd.Length <= tenicd.Length)
                                {
                                    for (int i = 0; i < icd.Length; i++)
                                    {
                                        lydo += " " + icd[i] + "-" + tenicd[i] + ";";
                                    }
                                    if (icd.Length < tenicd.Length)
                                    {
                                        int cut1 = tenicd.Length - icd.Length;
                                        int cut = tenicd.Length - cut1;
                                        string mab1k = DungChung.Ham.FreshString(string.Join(";", tenicd.Skip(cut)));
                                        lydo += " " + mab1k + ";";
                                    }
                                }
                                else
                                {
                                    for (int i = 0; i < tenicd.Length; i++)
                                    {
                                        lydo += " " + icd[i] + "-" + tenicd[i] + ";";
                                    }
                                }

                                rep.ChanDoan.Value = " " + DungChung.Ham.FreshString(lydo);
                            }

                            if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua) || !string.IsNullOrEmpty(par.FirstOrDefault().KetLuan))
                            {
                                rep.Loidan.Value = _ld;
                                rep.Macb.Value = par.FirstOrDefault().MaCBth;
                                rep.KQCC.Value = _kq;

                                if (par.FirstOrDefault().NgayTH != null)
                                {
                                    rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                }
                                else
                                    rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";

                                if (DungChung.Bien.MaBV == "30372")
                                {
                                    _kl = par.FirstOrDefault().KetLuan;
                                }
                            }
                            else
                            {
                                rep.Loidan.Value = null;
                                rep.KQCC.Value = null;
                                rep.Macb.Value = null;
                                rep.NgayTH.Value = null;
                                rep.xrTable15.Visible = false;
                                rep.xrTableCell24.Visible = false;
                                rep.xrLabel88.Visible = false;
                                rep.xrTableCell17.Visible = false;
                                if (DungChung.Bien.MaBV == "30012" || DungChung.Bien.MaBV == "30010")
                                {
                                    rep.SubBand4.Visible = false;
                                    rep.SubBand5_30372.Visible = false;
                                }
                            }
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.KetLuan.Value = _kl;
                            rep.xrLabel4.Text = rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.xrLabel6.Text = rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        }
                        if (DungChung.Bien.MaBV == "30010")
                        {
                            int MKPTH = par.FirstOrDefault().MaKPth.Value;
                            rep.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == MKPTH).Select(p => p.TenKP).FirstOrDefault().ToString();
                        }

                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    break;

                #endregion
                #region X quang CR
                case "X-Quang CR":
                    #region 27021
                    if (DungChung.Bien.MaBV == "27021")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang_27021 rep = new BaoCao.repPhieuChupXQuang_27021();
                        string _kq = "";
                        if (par.Count > 0)
                        {
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            rep.So.Value = _IDCLS;
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().DuongDan2 != null)
                            { rep.DuongDan.Value = par.FirstOrDefault().DuongDan2; }
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            foreach (var a in par)
                            {
                                _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            rep.YCCC.Value = _yccc;
                            foreach (var a in par)
                            {
                                _kq += " " + a.KetQua + a.KetLuan + "\n";
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];

                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion

                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang_01071 rep = new BaoCao.repPhieuChupXQuang_01071();
                        string _kq = "";
                        if (par.Count > 0)
                        {

                            rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            if (DungChung.Bien.MaBV == "27023")
                                rep.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep.So.Value = qvv.SoVV;
                                    else
                                        rep.So.Value = "";
                                }
                            }
                            else
                                rep.So.Value = _IDCLS;
                            if (par.FirstOrDefault().NoiTru == 1)
                            {
                                var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                if (sovv != null)
                                    rep.sovv.Text = "Số VV: " + sovv.ToString();
                            }
                            rep.colMaBN.Text = _mabn.ToString();
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                            {
                                DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH.Value);
                                DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH.Value);
                                var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                                             join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                             join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                                             join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                                             select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                                foreach (var item in _lcls)
                                {
                                    _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    if (DungChung.Bien.MaBV == "26007")
                                    {
                                        _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                    }
                                    else
                                        _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                }
                            }
                            rep.YCCC.Value = _yccc;

                            if (DungChung.Bien.MaBV == "20001")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetQua + "\n";
                                }
                                _kq = _kq + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetLuan + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    _kq += " " + a.KetQua + "\n" + a.KetLuan + "\n";
                                }
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            ////DungChung.Bien.MaBV == "01049" ? DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "  Mã ICD: " + DungChung.Ham.FreshString(par.FirstOrDefault().MaICD) : DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan); //par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + DungChung.Ham.FreshString(arrThongTinBNKB[0]) : arrThongTinBNKB[1];
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    #region 20001
                    else if (DungChung.Bien.MaBV == "20001")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang_20001 rep = new BaoCao.repPhieuChupXQuang_20001();
                        rep.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                        if (DungChung.Bien.MaBV == "24009" && v1 == 1)
                            rep.TieuDe.Value = "PHIẾU CHỤP X-QUANG SỐ HÓA";
                        string _kq = "";
                        if (par.Count > 0)
                        {
                            //rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            if (DungChung.Bien.MaBV == "27023")
                                rep.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep.So.Value = qvv.SoVV;
                                    else
                                        rep.So.Value = "";
                                }
                            }
                            else
                                rep.So.Value = _IDCLS;
                            rep.colMaBN.Text = "Mã BN: " + _mabn.ToString();
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            //if (DungChung.Bien.MaBV == "24009")
                            //{
                            //    DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH.Value);
                            //    DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH.Value);
                            //    var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                            //                 join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                            //                 join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                            //                 join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                            //                 select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                            //    foreach (var item in _lcls)
                            //    {
                            //        _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                            //    }
                            //}
                            //else
                            //{
                            foreach (var a in par)
                            {
                                if (DungChung.Bien.MaBV == "26007")
                                {
                                    _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                }
                                else
                                    _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            //}
                            rep.YCCC.Value = _yccc;

                            if (DungChung.Bien.MaBV == "20001")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetQua + "\n";
                                }
                                _kq = _kq + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetLuan + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    _kq += " " + a.KetQua + "\n" + a.KetLuan + "\n";
                                }
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            //if (DungChung.Bien.MaBV == "20001")
                            //{
                            //    rep.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan), DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoanYHCT));// DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoanYHCT) + "[" + DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "]";
                            //}//DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                            //else
                            //    rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            //arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            //if (DungChung.Bien.MaBV == "20001")

                            //else
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    #region 27023 phiếu cắt lớp vi tính
                    else if (DungChung.Bien.MaBV == "27023" && (dvucd.TenDV.ToLower().Contains("cắt lớp vi tính") || dvucd.TenDV.ToLower().Contains("clvt") || dvucd.TenDV.ToLower().Contains("ct scanner")))
                    {
                        frmIn frm = new frmIn();
                        BaoCao.rep_PhieuChupCatLopVT rep = new BaoCao.rep_PhieuChupCatLopVT();
                        rep.TieuDe.Value = "PHIẾU CHỤP CẮT LỚP VI TÍNH";
                        string _kq = "", _mt = "";
                        if (par.Count > 0)
                        {
                            //rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            rep.So.Value = _IDCLS;
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.SThe.Value = par.FirstOrDefault().SThe;
                            rep.DTuong.Value = par.FirstOrDefault().DTuong == "BHYT" ? "Bảo hiểm y tế" : par.FirstOrDefault().DTuong;
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            int a1 = 1;
                            foreach (var a in par)
                            {
                                _yccc += a1 + ". " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                a1++;
                            }
                            //}
                            rep.YCCC.Value = _yccc;

                            foreach (var a in par)
                            {
                                _mt += "  -" + a.KetQua + "\n";
                            }
                            foreach (var a in par)
                            {
                                _kq += "  -" + a.KetLuan + "\n";
                            }

                            if (par.FirstOrDefault().NgayThang != null)
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().ChanDoan.Contains(";"))
                            {
                                string[] _arrcd = par.FirstOrDefault().ChanDoan.Split(';');
                                rep.ChanDoan.Value = _arrcd[0];
                                string benhphu = "";
                                for (int i = 1; i < _arrcd.Length; i++)
                                {
                                    benhphu += _arrcd[i] + ";";
                                }
                                rep.BenhKhac.Value = DungChung.Ham.FreshString(benhphu);
                            }
                            else
                                rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            rep.MoTa.Value = _mt;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];
                            rep.Khoa.Value = arrThongTinBNKB[4];
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    #region bv khác
                    else
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang rep = new BaoCao.repPhieuChupXQuang();
                        rep.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                        if (DungChung.Bien.MaBV == "24009" && v1 == 1)
                            rep.TieuDe.Value = "PHIẾU CHỤP X-QUANG SỐ HÓA";
                        string _kq = "";
                        if (par.Count > 0)
                        {
                            //rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            if (DungChung.Bien.MaBV == "27023")
                                rep.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep.So.Value = qvv.SoVV;
                                    else
                                        rep.So.Value = "";
                                }
                            }
                            else
                                rep.So.Value = _IDCLS;
                            rep.colMaBN.Text = "Mã BN: " + _mabn.ToString();
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            if (DungChung.Bien.MaBV == "24012")
                            {
                                rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge_24012);
                            }
                            else
                                rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            //if (DungChung.Bien.MaBV == "24009")
                            //{
                            //    DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH.Value);
                            //    DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH.Value);
                            //    var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                            //                 join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                            //                 join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                            //                 join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                            //                 select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                            //    foreach (var item in _lcls)
                            //    {
                            //        _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                            //    }
                            //}
                            //else
                            //{
                            foreach (var a in par)
                            {
                                if (DungChung.Bien.MaBV == "26007")
                                {
                                    _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                }
                                else
                                    _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            //}
                            rep.YCCC.Value = _yccc;

                            if (DungChung.Bien.MaBV == "20001")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetQua + "\n";
                                }
                                _kq = _kq + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetLuan + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    //if (a.KetQua_Rtf == null)
                                    _kq += "  -" + a.KetQua + "\r\n" + a.KetLuan;
                                    //else
                                    // _kq += "  -" + a.KetQua_Rtf + "\r\n" + a.KetLuan;
                                }
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    break;

                #endregion
                #region X quang DR
                case "X-Quang DR":
                    #region 27021
                    if (DungChung.Bien.MaBV == "27021")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang_27021 rep = new BaoCao.repPhieuChupXQuang_27021();
                        string _kq = "";
                        if (par.Count > 0)
                        {
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            rep.So.Value = _IDCLS;
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().DuongDan2 != null)
                            { rep.DuongDan.Value = par.FirstOrDefault().DuongDan2; }
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            foreach (var a in par)
                            {
                                _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            rep.YCCC.Value = _yccc;
                            foreach (var a in par)
                            {
                                _kq += " " + a.KetQua + a.KetLuan + "\n";
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];

                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion

                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang_01071 rep = new BaoCao.repPhieuChupXQuang_01071();
                        string _kq = "";
                        if (par.Count > 0)
                        {

                            rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            if (DungChung.Bien.MaBV == "27023")
                                rep.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep.So.Value = qvv.SoVV;
                                    else
                                        rep.So.Value = "";
                                }
                            }
                            else
                                rep.So.Value = _IDCLS;
                            if (par.FirstOrDefault().NoiTru == 1)
                            {
                                var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                if (sovv != null)
                                    rep.sovv.Text = "Số VV: " + sovv.ToString();
                            }
                            rep.colMaBN.Text = _mabn.ToString();
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                            {
                                DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH.Value);
                                DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH.Value);
                                var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                                             join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                             join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                                             join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                                             select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                                foreach (var item in _lcls)
                                {
                                    _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    if (DungChung.Bien.MaBV == "26007")
                                    {
                                        _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                    }
                                    else
                                        _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                }
                            }
                            rep.YCCC.Value = _yccc;

                            if (DungChung.Bien.MaBV == "20001")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetQua + "\n";
                                }
                                _kq = _kq + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetLuan + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    _kq += " " + a.KetQua + "\n" + a.KetLuan + "\n";
                                }
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            ////DungChung.Bien.MaBV == "01049" ? DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "  Mã ICD: " + DungChung.Ham.FreshString(par.FirstOrDefault().MaICD) : DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan); //par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + DungChung.Ham.FreshString(arrThongTinBNKB[0]) : arrThongTinBNKB[1];
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    #region 20001
                    else if (DungChung.Bien.MaBV == "20001")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang_20001 rep = new BaoCao.repPhieuChupXQuang_20001();
                        rep.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                        if (DungChung.Bien.MaBV == "24009" && v1 == 1)
                            rep.TieuDe.Value = "PHIẾU CHỤP X-QUANG SỐ HÓA";
                        string _kq = "";
                        if (par.Count > 0)
                        {
                            //rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            if (DungChung.Bien.MaBV == "27023")
                                rep.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep.So.Value = qvv.SoVV;
                                    else
                                        rep.So.Value = "";
                                }
                            }
                            else
                                rep.So.Value = _IDCLS;
                            rep.colMaBN.Text = "Mã BN: " + _mabn.ToString();
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            //if (DungChung.Bien.MaBV == "24009")
                            //{
                            //    DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH.Value);
                            //    DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH.Value);
                            //    var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                            //                 join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                            //                 join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                            //                 join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                            //                 select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                            //    foreach (var item in _lcls)
                            //    {
                            //        _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                            //    }
                            //}
                            //else
                            //{
                            foreach (var a in par)
                            {
                                if (DungChung.Bien.MaBV == "26007")
                                {
                                    _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                }
                                else
                                    _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            //}
                            rep.YCCC.Value = _yccc;

                            if (DungChung.Bien.MaBV == "20001")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetQua + "\n";
                                }
                                _kq = _kq + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetLuan + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    _kq += " " + a.KetQua + "\n" + a.KetLuan + "\n";
                                }
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            //if (DungChung.Bien.MaBV == "20001")
                            //{
                            //    rep.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan), DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoanYHCT));// DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoanYHCT) + "[" + DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "]";
                            //}//DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                            //else
                            //    rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            //arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            //if (DungChung.Bien.MaBV == "20001")

                            //else
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    #region 27023 phiếu cắt lớp vi tính
                    else if (DungChung.Bien.MaBV == "27023" && (dvucd.TenDV.ToLower().Contains("cắt lớp vi tính") || dvucd.TenDV.ToLower().Contains("clvt") || dvucd.TenDV.ToLower().Contains("ct scanner")))
                    {
                        frmIn frm = new frmIn();
                        BaoCao.rep_PhieuChupCatLopVT rep = new BaoCao.rep_PhieuChupCatLopVT();
                        rep.TieuDe.Value = "PHIẾU CHỤP CẮT LỚP VI TÍNH";
                        string _kq = "", _mt = "";
                        if (par.Count > 0)
                        {
                            //rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            rep.So.Value = _IDCLS;
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.SThe.Value = par.FirstOrDefault().SThe;
                            rep.DTuong.Value = par.FirstOrDefault().DTuong == "BHYT" ? "Bảo hiểm y tế" : par.FirstOrDefault().DTuong;
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            int a1 = 1;
                            foreach (var a in par)
                            {
                                _yccc += a1 + ". " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                a1++;
                            }
                            //}
                            rep.YCCC.Value = _yccc;

                            foreach (var a in par)
                            {
                                _mt += "  -" + a.KetQua + "\n";
                            }
                            foreach (var a in par)
                            {
                                _kq += "  -" + a.KetLuan + "\n";
                            }

                            if (par.FirstOrDefault().NgayThang != null)
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().ChanDoan.Contains(";"))
                            {
                                string[] _arrcd = par.FirstOrDefault().ChanDoan.Split(';');
                                rep.ChanDoan.Value = _arrcd[0];
                                string benhphu = "";
                                for (int i = 1; i < _arrcd.Length; i++)
                                {
                                    benhphu += _arrcd[i] + ";";
                                }
                                rep.BenhKhac.Value = DungChung.Ham.FreshString(benhphu);
                            }
                            else
                                rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            rep.MoTa.Value = _mt;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];
                            rep.Khoa.Value = arrThongTinBNKB[4];
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    #region bv khác
                    else
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang rep = new BaoCao.repPhieuChupXQuang();
                        rep.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                        if (DungChung.Bien.MaBV == "24009" && v1 == 1)
                            rep.TieuDe.Value = "PHIẾU CHỤP X-QUANG SỐ HÓA";
                        string _kq = "";
                        if (par.Count > 0)
                        {
                            //rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            if (DungChung.Bien.MaBV == "27023")
                                rep.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep.So.Value = qvv.SoVV;
                                    else
                                        rep.So.Value = "";
                                }
                            }
                            else
                                rep.So.Value = _IDCLS;
                            rep.colMaBN.Text = "Mã BN: " + _mabn.ToString();
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            //if (DungChung.Bien.MaBV == "24009")
                            //{
                            //    DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH.Value);
                            //    DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH.Value);
                            //    var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                            //                 join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                            //                 join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                            //                 join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                            //                 select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                            //    foreach (var item in _lcls)
                            //    {
                            //        _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                            //    }
                            //}
                            //else
                            //{
                            foreach (var a in par)
                            {
                                if (DungChung.Bien.MaBV == "26007")
                                {
                                    _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                }
                                else
                                    _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            //}
                            rep.YCCC.Value = _yccc;

                            if (DungChung.Bien.MaBV == "20001")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetQua + "\n";
                                }
                                _kq = _kq + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetLuan + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    //if (a.KetQua_Rtf == null)
                                    _kq += "  -" + a.KetQua + "\r\n" + a.KetLuan;
                                    //else
                                    //_kq += "  -" + a.KetQua_Rtf + "\r\n" + a.KetLuan;
                                }
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    break;

                #endregion
                #region xquang CT
                case "X-Quang CT":
                    #region 12122
                    DungChung.Bien.checkcls = "X-Quang CT"; //minhvd
                    if (DungChung.Bien.MaBV == "12122" || DungChung.Bien.MaBV == "12121")
                    {
                        frmIn frmct = new frmIn();
                        Nam_0994.repPhieuChupCTScaner repct = new Nam_0994.repPhieuChupCTScaner();
                        string _kqct = "", _motact = "";
                        string[] arrThongTinBNKB;
                        if (par.Count > 0)
                        {
                            repct.TenBN.Value = par.FirstOrDefault().TenBNhan;

                            repct.So.Value = _IDCLS;
                            repct.MaCBDT.Value = par.FirstOrDefault().TenCB;
                            repct.DChi.Value = par.FirstOrDefault().DChi;
                            repct.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, par.FirstOrDefault().MaBNhan, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                repct.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                repct.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            repct.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                repct.GTinh.Value = "Nam";
                            }
                            else if (gioiTinh == 0)
                            {
                                repct.GTinh.Value = "N?";
                            }
                            string _yccc = "";
                            foreach (var a in par)
                            {
                                _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            repct.YCCC.Value = _yccc;
                            foreach (var a in par)
                            {
                                _motact += " " + a.KetQua + a.KetLuan + "\n";
                            }
                            DateTime NgayThang = new DateTime();
                            NgayThang = par.FirstOrDefault().NgayThang ?? System.DateTime.Now.Date;
                            DateTime NgayTH = new DateTime();
                            NgayTH = par.FirstOrDefault().NgayTH ?? System.DateTime.Now.Date;
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                repct.NgayCD.Value = DungChung.Ham.NgaySangChu(NgayThang, DungChung.Bien.FormatDate);
                            else
                                repct.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                repct.NgayTH.Value = DungChung.Ham.NgaySangChu(NgayTH, DungChung.Bien.FormatDate);
                            else
                                repct.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            repct.ChuanDoan.Value = par.FirstOrDefault().ChanDoan;
                            repct.MaCBth.Value = par.FirstOrDefault().TenCBth;
                            repct.Ketluan.Value = _motact;
                            int _maBN = par.FirstOrDefault().MaBNhan;
                            int _maKP = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value; //par.FirstOrDefault().MaKP ??0;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _maBN, _maKP, true);
                            repct.Buong.Value = arrThongTinBNKB[2];
                            repct.Giuong.Value = arrThongTinBNKB[3];
                            repct.Khoa.Value = arrThongTinBNKB[4];
                        }
                        repct.CreateDocument();
                        frmct.prcIN.PrintingSystem = repct.PrintingSystem;
                        frmct.ShowDialog();
                    }
                    #endregion
                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                    {
                        frmIn frmct = new frmIn();
                        BaoCao.repPhieuChupXQuang_01071 repct = new BaoCao.repPhieuChupXQuang_01071();


                        string _kqct = "";
                        if (par.Count > 0)
                        {
                            if (DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "01071")
                            {
                                string kieudoc1 = "";
                                string kieudoc2 = "";
                                var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                            select new
                                            {
                                                ht.KieuDoc
                                            }).ToList();
                                kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                                kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                                if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = true;
                                    DungChung.Bien._Visible_CDHA[1] = true;

                                }
                                if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = true;
                                    DungChung.Bien._Visible_CDHA[1] = false;

                                }
                                if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[1] = true;
                                    DungChung.Bien._Visible_CDHA[0] = false;
                                }
                            }
                            repct.colMaBN.Text = _mabn.ToString();
                            repct.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            repct.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                            repct.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            if (DungChung.Bien.MaBV == "27023")
                                repct.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        repct.So.Value = qvv.SoVV;
                                    else
                                        repct.So.Value = "";
                                }
                            }
                            else
                                repct.So.Value = _IDCLS;
                            if (par.FirstOrDefault().NoiTru == 1)
                            {
                                var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                if (sovv != null)
                                    repct.sovv.Text = "Số VV: " + sovv.ToString();
                            }
                            repct.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            repct.DiaChi.Value = par.FirstOrDefault().DChi;
                            repct.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                repct.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                repct.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            repct.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                repct.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                repct.Nam.Value = "/";
                            }
                            string _yccc = "";
                            foreach (var a in par)
                            {
                                _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            repct.YCCC.Value = _yccc;
                            foreach (var a in par)
                            {
                                _kqct += " " + a.KetQua + a.KetLuan + "\n";
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                repct.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                repct.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                repct.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                repct.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                repct.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                repct.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                repct.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                repct.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                repct.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            repct.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "  Mã ICD: " + DungChung.Ham.FreshString(par.FirstOrDefault().MaICD) : DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan);//par.FirstOrDefault().ChanDoan;
                            repct.Macb.Value = par.FirstOrDefault().MaCBth;
                            repct.KQCC.Value = _kqct;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            repct.Buong.Value = arrThongTinBNKB[2];
                            repct.Giuong.Value = arrThongTinBNKB[3];


                            repct.Khoa.Value = arrThongTinBNKB[4];

                        }
                        repct.CreateDocument();
                        frmct.prcIN.PrintingSystem = repct.PrintingSystem;
                        frmct.ShowDialog();
                    }
                    #endregion
                    #region bv khác
                    else
                    {

                        frmIn frmct = new frmIn();
                        BaoCao.repPhieuChupXQuang repct = new BaoCao.repPhieuChupXQuang();
                        repct.TieuDe.Value = DungChung.Bien.MaBV == "24009" ? "PHIẾU CHỤP CẮT LỚP VI TÍNH" : "PHIẾU CHIẾU CHỤP X-QUANG";
                        if (DungChung.Bien.MaBV == "30372")
                        {
                            switch (DungChung.Bien.MauIn)
                            {
                                case 1:
                                    repct.TieuDe.Value = "PHIẾU CHỤP CẮT LỚP VI TÍNH";
                                    break;
                                case 2:
                                    repct.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                                    break;
                                case 3:
                                    repct.TieuDe.Value = "PHIẾU CHỤP X-QUANG";
                                    break;
                            }
                        }
                        string _kqct = "";
                        string _kl = "";
                        DateTime n3 = DungChung.Ham.NgayTu(Frm_CDHA_Moi.ngaythuchien);
                        DateTime n4 = DungChung.Ham.NgayDen(Frm_CDHA_Moi.ngaythuchien);
                        var paz14017 = (from bn in _Data.BenhNhans.Where(o => o.MaBNhan == _mabn) // query paz14017 cho vien 14017
                                        join bnkb in _Data.BNKBs.Where(p => p.MaKP == _makp) on bn.MaBNhan equals bnkb.MaBNhan
                                        join cls in _Data.CLS.Where(p => p.MaKPth == _mkp).Where(p => p.NgayTH >= n3 && p.NgayTH <= n4).Where(p => p.Status == 1) on bn.MaBNhan equals cls.MaBNhan
                                        //join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                        join chidinh in _Data.ChiDinhs on cls.IdCLS equals chidinh.IdCLS
                                        join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                                        join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                                        select new
                                        {
                                            bnkb.IDKB,
                                            chidinh.LoiDan,
                                            chidinh.ChiDinh1,
                                            chidinh.KetLuan,
                                            clsct.KetQua,
                                            clsct.KetQua_Rtf,
                                            cls.IdCLS,
                                            dv.TenDV
                                        }).ToList();
                        if (par.Count > 0)
                        {
                            if (DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "01071")
                            {
                                string kieudoc1 = "";
                                string kieudoc2 = "";
                                var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                            select new
                                            {
                                                ht.KieuDoc
                                            }).ToList();
                                kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                                kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                                if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = true;
                                    DungChung.Bien._Visible_CDHA[2] = true;

                                }
                                if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = true;
                                    DungChung.Bien._Visible_CDHA[2] = false;

                                }
                                if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[2] = true;
                                    DungChung.Bien._Visible_CDHA[0] = false;
                                }
                            }
                            repct.colMaBN.Text = _mabn.ToString();
                            repct.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            repct.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                            repct.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            if (DungChung.Bien.MaBV == "27023")
                                repct.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        repct.So.Value = qvv.SoVV;
                                    else
                                        repct.So.Value = "";
                                }
                            }
                            else
                                repct.So.Value = _IDCLS;
                            repct.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            repct.DiaChi.Value = par.FirstOrDefault().DChi;
                            repct.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (DungChung.Bien.MaBV == "30372")
                            {
                                _kl = par.FirstOrDefault().KetLuan;
                            }

                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                repct.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                repct.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            repct.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                repct.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                repct.Nam.Value = "/";
                            }
                            string _yccc = "";
                            if (DungChung.Bien.MaBV != "24009")
                            {
                                foreach (var a in par)
                                {
                                    _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                }
                                repct.YCCC.Value = _yccc;
                            }
                            else
                            {
                                repct.YCCC.Value = par1.FirstOrDefault().TenDV + par.FirstOrDefault().ChiDinh1;
                            }
                            foreach (var a in par)
                            {
                                //if (a.KetQua_Rtf == null)
                                if (DungChung.Bien.MaBV == "30372")
                                {
                                    _kqct += a.KetQua + "\r\n";
                                }
                                else
                                {
                                    _kqct += "  " + a.KetQua + "\r\n" + a.KetLuan;
                                }
                                //else
                                //_kqct += "  -" + a.KetQua_Rtf + "\r\n" + a.KetLuan;
                            }
                            foreach (var a in paz14017)
                            {

                                {
                                    _kl += a.KetLuan + "\r\n";
                                }
                            }

                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                repct.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                repct.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                repct.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                repct.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                repct.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (DungChung.Bien.MaBV == "30372")
                            {
                                _kl = par.FirstOrDefault().KetLuan;
                            }
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                repct.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                repct.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                repct.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                repct.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            repct.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            repct.Macb.Value = par.FirstOrDefault().MaCBth;
                            repct.KQCC.Value = _kqct;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            repct.Buong.Value = arrThongTinBNKB[2];
                            repct.Giuong.Value = arrThongTinBNKB[3];
                            repct.KetLuan.Value = _kl;
                            repct.Khoa.Value = arrThongTinBNKB[4];
                            if (DungChung.Bien.MaBV == "30010")
                            {
                                int MKPTH = par.FirstOrDefault().MaKPth.Value;
                                repct.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == MKPTH).Select(p => p.TenKP).FirstOrDefault().ToString();
                            }
                        }
                        if (DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "01071")
                        {
                            string kieudoc1 = "";
                            string kieudoc2 = "";
                            var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                        select new
                                        {
                                            ht.KieuDoc
                                        }).ToList();
                            kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                            kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                            if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                            {
                                DungChung.Bien._Visible_CDHA[2] = false;
                                DungChung.Bien._Visible_CDHA[0] = true;

                            }
                            if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                            {
                                DungChung.Bien._Visible_CDHA[2] = false;
                                DungChung.Bien._Visible_CDHA[0] = true;

                            }
                            if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                            {
                                DungChung.Bien._Visible_CDHA[2] = true;
                                DungChung.Bien._Visible_CDHA[0] = false;
                            }
                        }
                        repct.CreateDocument();
                        frmct.prcIN.PrintingSystem = repct.PrintingSystem;
                        frmct.ShowDialog();
                    }
                    #endregion
                    break;
                #endregion
                #region Siêu âm
                case "Siêu âm":
                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                    {
                        if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                        {
                            #region Sieu am o bung
                            if (Frm_CDHA_Moi._tendv == "Siêu âm ổ bụng_" || FRM_chidinh_Moi._tendv == "Siêu âm ổ bụng_") //sieu am o bung
                            {
                                Dictionary<string, object> _dic = new Dictionary<string, object>();

                                _dic.Add("Bacsy", par.FirstOrDefault().ChucVu + " " + par.FirstOrDefault().TenCBth);
                                if (par.FirstOrDefault().NgayTH != null)
                                {
                                    _dic.Add("Ngaythang", "Hà Nội" + ", " + " ngày " + par.FirstOrDefault().NgayTH.Value.Day + " tháng " + par.FirstOrDefault().NgayTH.Value.Month + " năm " + par.FirstOrDefault().NgayTH.Value.Year);
                                }
                                else
                                {
                                    _dic.Add("Ngaythang", "");
                                }

                                if (par.Count > 0 && par.FirstOrDefault().DuongDan != null)
                                {
                                    if (File.Exists(par.FirstOrDefault().DuongDan))
                                    {
                                        _dic.Add("Anh1", Image.FromFile(par.FirstOrDefault().DuongDan));
                                    }
                                    else
                                    {
                                        _dic.Add("Anh1", null);
                                    }

                                }
                                _dic.Add("sdt", ttbx.FirstOrDefault().DThoai != null ? ttbx.FirstOrDefault().DThoai : "");
                                string gioitinh = "";
                                if (par.FirstOrDefault().GTinh == 1)
                                {
                                    gioitinh = "Nam";
                                    _dic.Add("Sinhnam", par.FirstOrDefault().Tuoi);
                                }
                                if (par.FirstOrDefault().GTinh == 0)
                                {
                                    gioitinh = "Nữ";
                                    _dic.Add("Sinhnam", par.FirstOrDefault().NamSinh);
                                }
                                _dic.Add("Gioitinh", gioitinh);
                                if (par.FirstOrDefault().NoiTru == 1)
                                {
                                    var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                    if (sovv != null)
                                        _dic.Add("sovv", "Số VV: " + sovv.ToString());
                                }
                                _dic.Add("thuong2", (par.FirstOrDefault().CapCuu == false) ? "X" : "");
                                _dic.Add("capcuu2", (par.FirstOrDefault().CapCuu == true) ? "X" : "");

                                _dic.Add("MaCBDT", par.FirstOrDefault().MaCB);
                                _dic.Add("DiaChi", par.FirstOrDefault().DChi);
                                _dic.Add("TuoiBN", DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge));

                                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    _dic.Add("Nu", "/");
                                }
                                else if (gioiTinh == 0)
                                {
                                    _dic.Add("Nam", "/");
                                }

                                if (par.FirstOrDefault().SThe.Length >= 15)
                                {
                                    _dic.Add("SThe1", par.FirstOrDefault().SThe.Substring(0, 3));
                                    _dic.Add("SThe2", par.FirstOrDefault().SThe.Substring(3, 2));
                                    _dic.Add("SThe3", par.FirstOrDefault().SThe.Substring(5, 2));
                                    _dic.Add("SThe4", par.FirstOrDefault().SThe.Substring(7, 3));
                                    _dic.Add("SThe5", par.FirstOrDefault().SThe.Substring(10, 5));
                                    _dic.Add("visibleSb", 1);
                                }
                                else _dic.Add("visibleSb", 0);
                                _dic.Add("sophieu", _IDCLS);
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                _dic.Add("ChanDoan2", DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1]);
                                _dic.Add("Buong2", arrThongTinBNKB[2]);
                                _dic.Add("Giuong2", arrThongTinBNKB[3]);
                                _dic.Add("Khoa2", arrThongTinBNKB[4]);
                                _dic.Add("KetLuan", par.FirstOrDefault().KetLuan);
                                DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuSieuAmOBung_01071, par, _dic, false);
                            }
                            #endregion
                            else
                            {
                                #region Khác siêu âm ổ bụng 01071

                                frmIn frm3 = new frmIn();
                                BaoCao.repPhieuSieuAm_01071 rep3 = new BaoCao.repPhieuSieuAm_01071();
                                if (par.Count > 0)
                                {
                                    if (DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "01071")
                                    {
                                        string kieudoc1 = "";
                                        string kieudoc2 = "";
                                        var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                                    select new
                                                    {
                                                        ht.KieuDoc
                                                    }).ToList();
                                        kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                                        kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                                        if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                                        {
                                            DungChung.Bien._Visible_CDHA[0] = true;
                                            DungChung.Bien._Visible_CDHA[2] = true;

                                        }
                                        if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                                        {
                                            DungChung.Bien._Visible_CDHA[0] = true;
                                            DungChung.Bien._Visible_CDHA[2] = false;

                                        }
                                        if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                                        {
                                            DungChung.Bien._Visible_CDHA[2] = true;
                                            DungChung.Bien._Visible_CDHA[0] = false;
                                        }
                                    }
                                    rep3.labmabn.Text = _mabn.ToString();
                                    rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    if (DungChung.Bien.MaBV == "27023")
                                        rep3.SoPhieu.Value = _so;
                                    else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                    {
                                        if (par.Count > 0)
                                        {
                                            int mabn = par.FirstOrDefault().MaBNhan;
                                            var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                            if (qvv != null)
                                                rep3.SoPhieu.Value = qvv.SoVV;
                                            else
                                                rep3.SoPhieu.Value = "";
                                        }
                                    }
                                    else
                                        rep3.SoPhieu.Value = _IDCLS;
                                    if (par.FirstOrDefault().NoiTru == 1)
                                    {
                                        var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                        if (sovv != null)
                                            rep3.sovv.Text = "Số VV: " + sovv.ToString();
                                    }
                                    rep3.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                    rep3.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                    rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                    rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                                    rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                    rep3.SoBHYT.Value = par.FirstOrDefault().SThe;

                                    if (par.FirstOrDefault().GTinh == 1)
                                    {
                                        rep3.Nu.Value = "/";
                                    }
                                    else
                                    {
                                        rep3.Nam.Value = "/";
                                    }
                                    rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                                    rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                                    rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                                    if (par.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                        rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                        rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                        rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                        rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                    }
                                    if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                        rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                    rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                                    string str = "";
                                    if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                        str = par.FirstOrDefault().KetQua;
                                    rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                    if (par.FirstOrDefault().DuongDan != null)
                                        rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                    rep3.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                                    rep3.Buong.Value = arrThongTinBNKB[2];
                                    rep3.Giuong.Value = arrThongTinBNKB[3];
                                    rep3.tb_ChiDinh.Visible = false;
                                    rep3.Khoa.Value = arrThongTinBNKB[4];

                                }

                                rep3.CreateDocument();
                                frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                                frm3.ShowDialog();
                                #endregion
                            }
                        }
                        else
                        {
                            frmIn frm3 = new frmIn();
                            BaoCao.repPhieuSieuAm_01071 rep3 = new BaoCao.repPhieuSieuAm_01071();
                            if (par.Count > 0)
                            {
                                rep3.labmabn.Text = _mabn.ToString();
                                rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                if (DungChung.Bien.MaBV == "27023")
                                    rep3.SoPhieu.Value = _so;
                                else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                {
                                    if (par.Count > 0)
                                    {
                                        int mabn = par.FirstOrDefault().MaBNhan;
                                        var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                        if (qvv != null)
                                            rep3.SoPhieu.Value = qvv.SoVV;
                                        else
                                            rep3.SoPhieu.Value = "";
                                    }
                                }
                                else
                                    rep3.SoPhieu.Value = _IDCLS;
                                if (par.FirstOrDefault().NoiTru == 1)
                                {
                                    var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                    if (sovv != null)
                                        rep3.sovv.Text = "Số VV: " + sovv.ToString();
                                }
                                rep3.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                rep3.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                                rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep3.Nu.Value = "/";
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep3.Nam.Value = "/";
                                }
                                rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                                rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                                rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                                if (par.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                    rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                    rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                    rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                    rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                }
                                if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                    rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                else
                                    rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                if (par.FirstOrDefault().NgayTH != null)
                                    rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                                string str = "";
                                if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                    str = par.FirstOrDefault().KetQua;
                                rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                if (par.FirstOrDefault().DuongDan != null)
                                    rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                if (DungChung.Bien.MaBV == "24297" && par.FirstOrDefault().IsDongY == true)
                                {
                                    rep3.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value);
                                }
                                else { rep3.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1]; }

                                rep3.Buong.Value = arrThongTinBNKB[2];
                                rep3.Giuong.Value = arrThongTinBNKB[3];

                                rep3.Khoa.Value = arrThongTinBNKB[4];

                            }

                            rep3.CreateDocument();
                            frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                            frm3.ShowDialog();
                        }



                    }
                    #endregion
                    #region 56789
                    else if (DungChung.Bien.MaBV == "56789")
                    {
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm_HamNghi rep3 = new BaoCao.repPhieuSieuAm_HamNghi();
                        if (par.Count > 0)
                        {
                            rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            rep3.SoPhieu.Value = _IDCLS;
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = par.FirstOrDefault().NamSinh;//DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            rep3.Nam.Value = par.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                            rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = "Kết luận: " + par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            string str = "";
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                str = par.FirstOrDefault().KetQua;
                            rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep3.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];

                            rep3.Khoa.Value = arrThongTinBNKB[4];

                        }

                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                    }
                    #endregion
                    #region 30372
                    else if (DungChung.Bien.MaBV == "30372")
                    {
                        frm_SoLuongAnhIn frm = new frm_SoLuongAnhIn();
                        frm.ShowDialog();
                        int i1 = frm.SoLuongAnhin;
                        List<CDHA_30372> rep = new List<CDHA_30372>();
                        if (i1 > 0)
                        {
                            CDHA_30372 cdha = new CDHA_30372();
                            Dictionary<string, object> dicpar = new Dictionary<string, object>();
                            // tên cơ quan chủ quản   
                            int TimeFormat = Convert.ToInt32(_Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN).FirstOrDefault().FormatDate);
                            cdha.TenBV = DungChung.Bien.TenCQ;
                            cdha.Logo = DungChung.Ham.GetLogo();
                            cdha.MaBN = par.FirstOrDefault().MaBNhan;
                            string[] DuongDan = par.Where(p => p.IdCLS == _IDCLS).FirstOrDefault().DuongDan2.Split('|');

                            for (int i = 0; i < DuongDan.Length; i++)
                            {
                                switch (i)
                                {
                                    case 1:
                                        if (DuongDan[0] != null)
                                        {
                                            cdha.Anh1 = InPhieu.KiemTraTonTaiAnh(DuongDan[0].ToString());
                                        }
                                        break;
                                    case 2:
                                        if (DuongDan[1] != null)
                                        {
                                            cdha.Anh2 = InPhieu.KiemTraTonTaiAnh(DuongDan[1].ToString());
                                        }
                                        break;
                                    case 3:
                                        if (DuongDan[2] != null)
                                        {
                                            cdha.Anh3 = InPhieu.KiemTraTonTaiAnh(DuongDan[2].ToString());
                                        }
                                        break;
                                    case 4:
                                        if (DuongDan[3] != null)
                                        {
                                            cdha.Anh4 = InPhieu.KiemTraTonTaiAnh(DuongDan[3].ToString());
                                        }
                                        break;
                                    case 5:
                                        if (DuongDan[4] != null)
                                        {
                                            cdha.Anh5 = InPhieu.KiemTraTonTaiAnh(DuongDan[4].ToString());
                                        }
                                        break;
                                    case 6:
                                        if (DuongDan[5] != null)
                                        {
                                            cdha.Anh6 = InPhieu.KiemTraTonTaiAnh(DuongDan[5].ToString());
                                        }
                                        break;
                                    case 7:
                                        if (DuongDan[6] != null)
                                        {
                                            cdha.Anh7 = InPhieu.KiemTraTonTaiAnh(DuongDan[6].ToString());
                                        }
                                        break;
                                    case 8:
                                        if (DuongDan[7] != null)
                                        {
                                            cdha.Anh8 = InPhieu.KiemTraTonTaiAnh(DuongDan[7].ToString());
                                        }
                                        break;

                                    default:
                                        break;
                                }
                            }



                            cdha.DiaChiBenhVien = DungChung.Bien.DiaChi;
                            cdha.TieuDe = "PHIẾU SIÊU ÂM";
                            cdha.SoDienThoaiLienHe = "SĐT: " + _Data.HTHONGs.FirstOrDefault().SDT + " - Fax: " + _Data.HTHONGs.FirstOrDefault().Fax + "";
                            cdha.YeuCau = par.FirstOrDefault().TenDV;
                            cdha.NgaySinh = par.FirstOrDefault().NgaySinh + " / " + par.FirstOrDefault().ThangSinh + " / " + par.FirstOrDefault().NamSinh;
                            cdha.TieuDeKetQua = "KẾT QUẢ SIÊU ÂM";
                            cdha.BSCD = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            cdha.NgayChiDinh = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.NgayTH = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayTH), TimeFormat);
                            cdha.Tuoi = par.FirstOrDefault().Tuoi;
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong != null)
                            {
                                cdha.Buong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong;
                            }
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong != null)
                            {
                                cdha.Giuong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong;
                            }

                            // Thông tin bệnh nhân
                            cdha.HoTen = par.FirstOrDefault().TenBNhan.ToUpper();
                            cdha.DiaChi = par.FirstOrDefault().DChi;
                            cdha.Khoa = par.FirstOrDefault().TenKP;
                            cdha.ChanDoan = par.FirstOrDefault().ChanDoan;
                            dicpar["SoLuongAnh"] = i1;
                            if (par.FirstOrDefault().GTinh != 1)
                            {
                                cdha.Nam = "/";
                                cdha.Nu = "";
                            }
                            else
                            {
                                cdha.Nu = "/";
                                cdha.Nam = "";
                            }
                            if (par.FirstOrDefault().SThe != "")
                            {
                                cdha.MA1 = par.FirstOrDefault().SThe.Substring(0, 3);
                                cdha.MA2 = par.FirstOrDefault().SThe.Substring(3, 2);
                                cdha.MA3 = par.FirstOrDefault().SThe.Substring(5, 2);
                                cdha.MA4 = par.FirstOrDefault().SThe.Substring(7, 3);
                                cdha.MA5 = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (ttbx.Count != 0)
                            {
                                cdha.Email = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email;
                                cdha.DienThoai = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai;
                            }

                            cdha.BacSyChiDinh = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            if (par.FirstOrDefault().KetQua_Rtf == null)
                            {
                                cdha.KetQua = par.FirstOrDefault().KetQua;
                            }
                            else
                            {
                                cdha.KetQua = par.FirstOrDefault().KetQua_Rtf;
                            }

                            cdha.KetLuan = par.FirstOrDefault().KetLuan;
                            cdha.LoiDan = par.FirstOrDefault().LoiDan;
                            cdha.NgayThang = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.BSTH = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCBth).ToUpper();
                            rep.Add(cdha);
                            DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuCDHA_30372, rep.ToList(), dicpar, false);
                        }
                        else
                        {
                            MessageBox.Show("Xin hãy chọn số lượng ảnh cần in!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);

                        }
                    }
                    #endregion
                    #region Viện khác
                    else
                    {

                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm rep3 = new BaoCao.repPhieuSieuAm();
                        if (par.Count > 0)
                        {
                            var clsPrint = par.First(o => o.IdCLS == _IDCLS);
                            if (clsPrint != null)
                            {
                                if (par.FirstOrDefault().TenDV.ToLower().Contains("đầu dò âm đạo"))
                                {
                                    if (DungChung.Bien.MaBV == "24009")
                                    {
                                        rep3.SubBand4.Visible = true;
                                        rep3.xrLabel2.Text = "1. Mô tả tổn thương";
                                        rep3.xrLabel1.Text = "2. Kết luận";
                                    }
                                    else
                                    {
                                        rep3.SubBand2.Visible = true;
                                    }


                                }
                                else
                                {
                                    if (DungChung.Bien.MaBV == "24009")
                                    {
                                        rep3.SubBand3.Visible = true;
                                        rep3.xrLabel2.Text = "1. Mô tả tổn thương";
                                        rep3.xrLabel1.Text = "2. Kết luận";
                                    }
                                    else
                                    {
                                        rep3.SubBand1.Visible = true;
                                    }
                                }
                                rep3.labmabn.Text = "Mã BN: " + _mabn.ToString();
                                //if (DungChung.Bien.MaBV == "20001")
                                //{
                                rep3.TenBN.Value = clsPrint.TenBNhan.ToUpper();
                                //}
                                //else
                                //{
                                //    rep3.TenBN.Value = clsPrint.TenBNhan;
                                //}
                                if (DungChung.Bien.MaBV == "27023")
                                {
                                    rep3.SoPhieu.Value = _so;
                                    if (par.FirstOrDefault().Status == 0)
                                    {
                                        rep3.SubBand6.Visible = false;
                                    }
                                }
                                else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                {
                                    if (par.Count > 0)
                                    {
                                        int mabn = clsPrint.MaBNhan;
                                        var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                        if (qvv != null)
                                            rep3.SoPhieu.Value = qvv.SoVV;
                                        else
                                            rep3.SoPhieu.Value = "";
                                    }
                                }
                                else
                                    rep3.SoPhieu.Value = _IDCLS;
                                rep3.thuong.Text = (clsPrint.CapCuu == false) ? "X" : "";
                                rep3.capcuu.Text = (clsPrint.CapCuu == true) ? "X" : "";
                                rep3.MaCBDT.Value = clsPrint.MaCB;
                                rep3.MaCBTH.Value = clsPrint.MaCBth;
                                rep3.DiaChi.Value = clsPrint.DChi;
                                rep3.TuoiBN.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.CalculateAge(clsPrint.NgaySinh, clsPrint.ThangSinh, clsPrint.NamSinh, " tháng.") : DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                rep3.SoBHYT.Value = clsPrint.SThe;
                                int gioiTinh = int.Parse(clsPrint.GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep3.Nu.Value = "/";
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep3.Nam.Value = "/";
                                }
                                rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par1.FirstOrDefault().TenDV + " (" + clsPrint.ChiDinh1 + ")";
                                rep3.KetLuan.Value = clsPrint.KetLuan;
                                rep3.LDBS.Value = clsPrint.LoiDan;
                                if (clsPrint.SThe.Length >= 15)
                                {
                                    rep3.SThe1.Value = clsPrint.SThe.Substring(0, 3);
                                    rep3.SThe2.Value = clsPrint.SThe.Substring(3, 2);
                                    rep3.SThe3.Value = clsPrint.SThe.Substring(5, 2);
                                    rep3.SThe4.Value = clsPrint.SThe.Substring(7, 3);
                                    rep3.SThe5.Value = clsPrint.SThe.Substring(10, 5);
                                }
                                if (clsPrint.NgayThang != null && DungChung.Bien.MaBV != "02005")
                                    rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(clsPrint.NgayThang.Value, DungChung.Bien.FormatDate);
                                else
                                    rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                if (clsPrint.NgayTH != null)
                                    rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(clsPrint.NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";

                                if (clsPrint != null)
                                {
                                    rep3.Macb.Value = clsPrint.MaCBth;
                                }
                                string str = "";
                                if (string.IsNullOrEmpty(clsPrint.KetQua_Rtf))
                                    str = clsPrint.KetQua;
                                else
                                    str = clsPrint.KetQua_Rtf;
                                if (DungChung.Bien.MaBV == "30340")
                                {
                                    rep3.colKetQua.Text = str;
                                }
                                else
                                {
                                    rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                }

                                if (clsPrint.DuongDan != null)
                                    rep3.DuongDan.Value = clsPrint.DuongDan;
                                if (clsPrint.DuongDan2 != null)
                                    rep3.DuongDan2.Value = clsPrint.DuongDan2;
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                if (DungChung.Bien.MaBV == "20001")
                                    rep3.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                                else
                                {
                                    if (DungChung.Bien.MaBV == "14018")
                                    {

                                        rep3.ChanDoan.Value = DungChung.Ham.GetChanDoanKB(_Data, _mabn);
                                    }
                                    else
                                    {
                                        rep3.ChanDoan.Value = arrThongTinBNKB[1];


                                    }
                                }
                                rep3.Buong.Value = arrThongTinBNKB[2];
                                rep3.Giuong.Value = arrThongTinBNKB[3];

                                rep3.Khoa.Value = DungChung.Ham.GetTenKP_20001(arrThongTinBNKB[4] ?? "");

                            }


                            if (DungChung.Bien.MaBV == "30010")
                            {
                                int mkpth = Convert.ToInt32(par.FirstOrDefault().MaKPth.Value);
                                rep3.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                            }//yenbg1
                            rep3.CreateDocument();
                            frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                            frm3.ShowDialog();
                        }
                    }
                    break;
                #endregion
                #endregion
                #region Siêu âm màu
                case "Siêu âm màu":
                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                    {
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm_01071 rep3 = new BaoCao.repPhieuSieuAm_01071();
                        if (par.Count > 0)
                        {
                            rep3.labmabn.Text = _mabn.ToString();
                            rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            if (DungChung.Bien.MaBV == "27023")
                                rep3.SoPhieu.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep3.SoPhieu.Value = qvv.SoVV;
                                    else
                                        rep3.SoPhieu.Value = "";
                                }
                            }
                            else
                                rep3.SoPhieu.Value = _IDCLS;
                            if (par.FirstOrDefault().NoiTru == 1)
                            {
                                var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                if (sovv != null)
                                    rep3.sovv.Text = "Số VV: " + sovv.ToString();
                            }
                            rep3.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep3.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep3.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep3.Nam.Value = "/";
                            }
                            rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            string str = "";
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                str = par.FirstOrDefault().KetQua;
                            rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep3.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];

                            rep3.Khoa.Value = arrThongTinBNKB[4];

                        }

                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                    }
                    else if (DungChung.Bien.MaBV == "56789")
                    {
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm_HamNghi rep3 = new BaoCao.repPhieuSieuAm_HamNghi();
                        if (par.Count > 0)
                        {
                            rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            rep3.SoPhieu.Value = _IDCLS;
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = par.FirstOrDefault().NamSinh;//DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            rep3.Nam.Value = par.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                            rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = "Kết luận: " + par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            string str = "";
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                str = par.FirstOrDefault().KetQua;
                            rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep3.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];

                            rep3.Khoa.Value = arrThongTinBNKB[4];

                        }

                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                    }
                    #endregion
                    else
                    {
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm rep3 = new BaoCao.repPhieuSieuAm();
                        if (par.Count > 0)
                        {
                            if (DungChung.Bien.MaBV == "30010")
                            {
                                if (par.FirstOrDefault().TenDV.ToLower().Contains("đầu dò âm đạo"))
                                {
                                    rep3.SubBand1.Visible = false;
                                    rep3.SubBand2.Visible = true;
                                    rep3.xrLabel2.Text = "1. Mô tả tổn thương";
                                    rep3.xrLabel2.Visible = true;
                                    rep3.xrLabel1.Text = "2. Kết luận";
                                }
                                else
                                {
                                    rep3.SubBand1.Visible = true;
                                    rep3.SubBand2.Visible = false;
                                    rep3.SubBand3.Visible = false;
                                    rep3.SubBand4.Visible = false;
                                }

                            }
                            if (DungChung.Bien.MaBV == "24009")
                            {
                                if (par.FirstOrDefault().TenDV.ToLower().Contains("đầu dò âm đạo"))
                                {
                                    rep3.SubBand1.Visible = false;
                                    rep3.SubBand2.Visible = false;
                                    rep3.SubBand3.Visible = false;
                                    rep3.SubBand4.Visible = true;
                                    rep3.xrLabel2.Text = "1. Mô tả tổn thương";
                                    rep3.xrLabel1.Text = "2. Kết luận";
                                }


                                else
                                {

                                    rep3.SubBand1.Visible = false;
                                    rep3.SubBand2.Visible = false;
                                    rep3.SubBand3.Visible = true;
                                    rep3.SubBand4.Visible = false;
                                }
                            }
                            rep3.labmabn.Text = "Mã BN: " + _mabn.ToString();
                            if (DungChung.Bien.MaBV == "20001")
                            {
                                rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            }
                            else
                            {
                                rep3.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            }
                            if (DungChung.Bien.MaBV == "27023")
                                rep3.SoPhieu.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep3.SoPhieu.Value = qvv.SoVV;
                                    else
                                        rep3.SoPhieu.Value = "";
                                }
                            }
                            else
                                rep3.SoPhieu.Value = _IDCLS;
                            rep3.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep3.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep3.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep3.Nam.Value = "/";
                            }
                            rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            string str = "";
                            //if (string.IsNullOrEmpty(par.FirstOrDefault().KetQua_Rtf))
                            str = par.FirstOrDefault().KetQua;
                            //else
                            //str = par.FirstOrDefault().KetQua_Rtf;
                            rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep3.ChanDoan.Value = arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];

                            rep3.Khoa.Value = arrThongTinBNKB[4];

                        }

                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                    }
                    break;
                #endregion
                #region Điện tim
                case "Điện tim":
                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                    {
                        frmIn frm1 = new frmIn();
                        BaoCao.Rep_PhieuDienTim_01071 rep1 = new BaoCao.Rep_PhieuDienTim_01071();
                        if (par.Count > 0)
                        {
                            if (DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "01071")
                            {
                                string kieudoc1 = "";
                                string kieudoc2 = "";
                                var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                            select new
                                            {
                                                ht.KieuDoc
                                            }).ToList();
                                kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                                kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                                if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = true;
                                    DungChung.Bien._Visible_CDHA[2] = true;

                                }
                                if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = true;
                                    DungChung.Bien._Visible_CDHA[2] = false;

                                }
                                if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[2] = true;
                                    DungChung.Bien._Visible_CDHA[0] = false;
                                }
                            }
                            rep1.txtmabn.Text = _mabn.ToString();
                            rep1.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            if (DungChung.Bien.MaBV == "27023")
                                rep1.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep1.So.Value = qvv.SoVV;
                                    else
                                        rep1.So.Value = "";
                                }
                            }
                            else
                                rep1.So.Value = _IDCLS;
                            if (par.FirstOrDefault().NoiTru == 1)
                            {
                                var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                if (sovv != null)
                                    rep1.sovv.Text = "Số VV: " + sovv.ToString();
                            }
                            rep1.thuong.Text = (par0.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep1.capcuu.Text = (par0.FirstOrDefault().CapCuu == true) ? "X" : "";
                            rep1.SoPhieu.Value = _IDCLS;
                            rep1.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep1.TenCB.Value = par.FirstOrDefault().ChucVu + ": " + par.FirstOrDefault().TenCBth;
                            rep1.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep1.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep1.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep1.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep1.Nam.Value = "/";
                            }
                            rep1.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep1.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep1.Loidan.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep1.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep1.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep1.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep1.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep1.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep1.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep1.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep1.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep1.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep1.Macb.Value = par.FirstOrDefault().MaCBth;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);

                            if (par.FirstOrDefault().IsDongY == true && DungChung.Bien.MaBV == "24297")
                            {
                                rep1.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _mabn, _makp);
                            }
                            else
                            {
                                rep1.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            }


                            rep1.Buong.Value = arrThongTinBNKB[2];
                            rep1.Giuong.Value = arrThongTinBNKB[3];

                            rep1.Khoa.Value = arrThongTinBNKB[4];


                        }
                        rep1.CreateDocument();
                        frm1.prcIN.PrintingSystem = rep1.PrintingSystem;
                        frm1.ShowDialog();
                    }
                    #endregion
                    else
                    {
                        frmIn frm1 = new frmIn();
                        BaoCao.Rep_PhieuDienTim rep1 = new BaoCao.Rep_PhieuDienTim();
                        if (par.Count > 0)
                        {
                            rep1.txtmabn.Text = "Mã BN: " + _mabn.ToString();
                            rep1.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            if (DungChung.Bien.MaBV == "27023")
                                rep1.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep1.So.Value = qvv.SoVV;
                                    else
                                        rep1.So.Value = "";
                                }
                            }
                            else
                                rep1.So.Value = _IDCLS;

                            rep1.xrLabel10.Text = rep1.thuong.Text = (par0.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep1.xrLabel13.Text = rep1.capcuu.Text = (par0.FirstOrDefault().CapCuu == true) ? "X" : "";
                            rep1.SoPhieu.Value = _IDCLS;
                            rep1.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep1.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep1.TuoiBN.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.CalculateAge(par.FirstOrDefault().NgaySinh, par.FirstOrDefault().ThangSinh, par.FirstOrDefault().NamSinh, " tháng.") : DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep1.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep1.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep1.Nam.Value = "/";
                            }
                            rep1.YCKT.Value = "- Yêu cầu kiểm tra: " + par1.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep1.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep1.Loidan.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep1.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep1.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep1.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep1.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep1.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep1.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep1.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep1.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep1.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep1.Macb.Value = par.FirstOrDefault().MaCBth;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            if (DungChung.Bien.MaBV == "20001")
                                rep1.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                            else
                            {
                                if (DungChung.Bien.MaBV == "14018")
                                {
                                    rep1.ChanDoan.Value = DungChung.Ham.GetChanDoanKB(_Data, _mabn);
                                }
                                else
                                {
                                    rep1.ChanDoan.Value = arrThongTinBNKB[1];
                                }
                            }

                            rep1.Buong.Value = arrThongTinBNKB[2];
                            rep1.Giuong.Value = arrThongTinBNKB[3];

                            rep1.Khoa.Value = arrThongTinBNKB[4];
                            if (DungChung.Bien.MaBV == "30010") //Yenbg1
                            {
                                int mkpth = Convert.ToInt32(par.FirstOrDefault().MaKPth.Value);
                                rep1.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                            }

                        }
                        rep1.CreateDocument();
                        frm1.prcIN.PrintingSystem = rep1.PrintingSystem;
                        frm1.ShowDialog();
                    }
                    break;
                #endregion
                #region nội soi
                case "Nội soi":
                    #region 27183
                    frmIn frm2 = new frmIn();
                    if (DungChung.Bien.MaBV == "27183")
                    {

                        BaoCao.Rep_PhieuNoiSoi_27183 rep2 = new BaoCao.Rep_PhieuNoiSoi_27183();
                        if (par.Count > 0)
                        {
                            rep2.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            rep2.SoPhieu.Value = _IDCLS;
                            rep2.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep2.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep2.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep2.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep2.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep2.Nam.Value = "/";
                            }
                            rep2.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep2.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            string ddan = "", str = "";
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                str = par.FirstOrDefault().KetQua;
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().DuongDan2))
                                ddan = par.FirstOrDefault().DuongDan2;
                            rep2.hienthi(ddan);
                            rep2.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                            rep2.Loidan.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            string[] arrThongTinBNKB = { "", "", "", "", "" };
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep2.ChanDoan.Value = arrThongTinBNKB[1];
                            rep2.Buong.Value = arrThongTinBNKB[2];
                            rep2.Giuong.Value = arrThongTinBNKB[3];
                            rep2.Khoa.Value = arrThongTinBNKB[4];

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep2.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep2.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep2.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep2.NgayTT.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep2.Macb.Value = par.FirstOrDefault().MaCBth;
                        }
                        rep2.CreateDocument();
                        frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                        frm2.ShowDialog();
                    }
                    #endregion
                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")// || DungChung.Bien.MaBV != "01071"
                    {


                        if (dvucd.TenDV == "Nội soi thực quản - dạ dày - tá tràng không sinh thiết" || dvucd.TenDV == "Helicobacter pylori Ag test nhanh")
                        {
                            #region nội soi thực quản dạ dày, Helicobacter pylori Ag test nhanh
                            List<int> allMaDV = _Data.DichVus.Where(p => p.TenDV == "Nội soi thực quản - dạ dày - tá tràng không sinh thiết" || p.TenDV == "Helicobacter pylori Ag test nhanh").Select(p => p.MaDV).ToList();
                            DateTime tungay = new DateTime(dvucd.NgayThang.Value.Year, dvucd.NgayThang.Value.Month, dvucd.NgayThang.Value.Day);
                            DateTime denngay = DungChung.Ham.NgayDen(tungay);
                            var qcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn)
                                        join chidinh in _Data.ChiDinhs on cls.IdCLS equals chidinh.IdCLS
                                        join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                                        join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        join dv in _Data.DichVus.Where(p => allMaDV.Contains(p.MaDV)) on dvct.MaDV equals dv.MaDV
                                        select new
                                        {
                                            cls.ChanDoan,
                                            cls.MaICD,
                                            chidinh.IDCD,
                                            chidinh.Status,
                                            cls.MaCBth,// TenCBth = kq1 == null ? "" : kq1.TenCB,
                                            dv.MaQD,
                                            dvct.STT,
                                            dvct.TSBT,
                                            cls.NgayTH,
                                            clsct.KetQua,
                                            clsct.DuongDan,
                                            cls.NgayThang,
                                            cls.MaKP,
                                            cls.MaCB,
                                            chidinh.ChiDinh1,
                                            chidinh.KetLuan,
                                            TenDV = dv.TenDV,
                                            chidinh.LoiDan,
                                            clsct.DuongDan2,
                                            cls.CapCuu,
                                            cls.IdCLS
                                        }).Where(p => p.NgayThang >= tungay && p.NgayThang <= denngay).OrderBy(p => p.STT).ToList();
                            var qcls1 = (from a in qcls
                                         join cb in _Data.CanBoes on a.MaCB equals cb.MaCB
                                         join cbth in _Data.CanBoes on a.MaCBth equals cbth.MaCB into kq
                                         from kq1 in kq.DefaultIfEmpty()
                                         select new
                                         {
                                             a.DuongDan2,
                                             a.ChanDoan,
                                             a.MaICD,
                                             a.IDCD,
                                             a.Status,
                                             a.MaCBth,
                                             TenCBth = kq1 == null ? "" : kq1.TenCB,
                                             a.MaQD,
                                             a.STT,
                                             a.TSBT,
                                             a.NgayTH,
                                             a.KetQua,
                                             a.DuongDan,
                                             a.NgayThang,
                                             a.MaKP,
                                             a.MaCB,
                                             cb.TenCB,
                                             a.ChiDinh1,
                                             a.KetLuan,
                                             a.TenDV,
                                             a.LoiDan,
                                             a.CapCuu,
                                             a.IdCLS
                                         }).OrderBy(p => p.NgayThang).ToList();

                            BaoCao.Rep_PhieuNoiSoiThucQuan_01071 rep2 = new BaoCao.Rep_PhieuNoiSoiThucQuan_01071();
                            if (par.Count > 0 && qcls1.Count > 0)
                            {
                                rep2.txtmabn.Text = _mabn.ToString();
                                rep2.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                rep2.SoPhieu.Value = qcls1.FirstOrDefault().IdCLS; //_IDCLS;//Lấy _idcls nhỏ nhất
                                if (par.FirstOrDefault().NoiTru == 1)
                                {
                                    var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                    if (sovv != null)
                                        rep2.sovv.Text = "Số VV: " + sovv.ToString();
                                }
                                rep2.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                rep2.DiaChi.Value = par.FirstOrDefault().DChi;
                                rep2.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                rep2.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep2.Nu.Value = "/";
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep2.Nam.Value = "/";
                                }
                                //  rep2.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";// hiển thị danh sách


                                string str = "", loidan = "", ketluan = "";
                                var qnoisoithucquan = qcls1.Where(p => p.TenDV == "Nội soi thực quản - dạ dày - tá tràng không sinh thiết").ToList();
                                if (qnoisoithucquan.Count > 0 && !string.IsNullOrEmpty(qnoisoithucquan.FirstOrDefault().KetQua))
                                {
                                    str = qnoisoithucquan.FirstOrDefault().KetQua;// hiển thị danh sách
                                    rep2.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                    loidan = qnoisoithucquan.FirstOrDefault().LoiDan.Trim();
                                    ketluan = qnoisoithucquan.FirstOrDefault().KetLuan.Trim();
                                }
                                var qXNHP = qcls1.Where(p => p.TenDV == "Helicobacter pylori Ag test nhanh").ToList();
                                if (qXNHP.Count > 0 && !string.IsNullOrEmpty(qXNHP.FirstOrDefault().KetQua))
                                {
                                    str = qXNHP.FirstOrDefault().KetQua;
                                    rep2.hienthiKQ2(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                    if (loidan != "")
                                    {
                                        if (qXNHP.FirstOrDefault().LoiDan != "")
                                            loidan = loidan + "\n" + qXNHP.FirstOrDefault().LoiDan;
                                    }
                                    else
                                        loidan = qXNHP.FirstOrDefault().LoiDan;
                                    if (ketluan != "")
                                    {
                                        if (qXNHP.FirstOrDefault().KetLuan != "")
                                            ketluan = ketluan + "\n" + qXNHP.FirstOrDefault().KetLuan;
                                    }
                                    else
                                        ketluan = qXNHP.FirstOrDefault().KetLuan;
                                }

                                rep2.Loidan.Value = loidan;
                                rep2.KetLuan.Value = ketluan;// hiển thị danh sách
                                if (par.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                    rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                    rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                    rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                    rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                }
                                string[] arrThongTinBNKB = { "", "", "", "", "" };
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                rep2.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                                rep2.Buong.Value = arrThongTinBNKB[2];
                                rep2.Giuong.Value = arrThongTinBNKB[3];
                                rep2.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                rep2.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                rep2.Khoa.Value = arrThongTinBNKB[4];


                                if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                    rep2.NgayCD.Value = DungChung.Ham.NgaySangChu(qcls1.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                else
                                    rep2.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                if (par.FirstOrDefault().NgayTH != null)
                                    rep2.NgayTT.Value = DungChung.Ham.NgaySangChu(qcls1.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep2.NgayTT.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                rep2.Macb.Value = qcls1.FirstOrDefault().MaCBth;
                            }
                            rep2.CreateDocument();
                            frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                            frm2.ShowDialog();
                            #endregion
                        }
                        else
                        {
                            #region nội soi thường
                            BaoCao.Rep_PhieuNoiSoi_01071 rep2 = new BaoCao.Rep_PhieuNoiSoi_01071();
                            if (par.Count > 0)
                            {
                                rep2.txtmabn.Text = _mabn.ToString();
                                rep2.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                if (DungChung.Bien.MaBV == "27023")
                                    rep2.SoPhieu.Value = _so;
                                else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                {
                                    if (par.Count > 0)
                                    {
                                        int mabn = par.FirstOrDefault().MaBNhan;
                                        var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                        if (qvv != null)
                                            rep2.SoPhieu.Value = qvv.SoVV;
                                        else
                                            rep2.SoPhieu.Value = "";
                                    }
                                }
                                else
                                    rep2.SoPhieu.Value = _IDCLS;
                                if (par.FirstOrDefault().NoiTru == 1)
                                {
                                    var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                    if (sovv != null)
                                        rep2.sovv.Text = "Số VV: " + sovv.ToString();
                                }
                                rep2.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                rep2.DiaChi.Value = par.FirstOrDefault().DChi;
                                rep2.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                rep2.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep2.Nu.Value = "/";
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep2.Nam.Value = "/";
                                }
                                rep2.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                                rep2.KetLuan.Value = par.FirstOrDefault().KetLuan;
                                string str = "";
                                if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                    str = par.FirstOrDefault().KetQua;
                                rep2.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                rep2.Loidan.Value = par.FirstOrDefault().LoiDan;
                                if (par.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                    rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                    rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                    rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                    rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                }
                                string[] arrThongTinBNKB = { "", "", "", "", "" };
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                rep2.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                                rep2.Buong.Value = arrThongTinBNKB[2];
                                rep2.Giuong.Value = arrThongTinBNKB[3];
                                rep2.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                rep2.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                rep2.Khoa.Value = arrThongTinBNKB[4];


                                if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                    rep2.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                else
                                    rep2.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                if (par.FirstOrDefault().NgayTH != null)
                                    rep2.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep2.NgayTT.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                rep2.Macb.Value = par.FirstOrDefault().MaCBth;
                            }
                            rep2.CreateDocument();
                            frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                            frm2.ShowDialog();
                            #endregion
                        }


                    }
                    #endregion
                    #region 30372

                    if (DungChung.Bien.MaBV == "30372")
                    {

                        frm_SoLuongAnhIn frm = new frm_SoLuongAnhIn();
                        frm.ShowDialog();
                        int i1 = frm.SoLuongAnhin;
                        List<CDHA_30372> rep = new List<CDHA_30372>();
                        if (i1 > 0)
                        {
                            CDHA_30372 cdha = new CDHA_30372();
                            Dictionary<string, object> dicpar = new Dictionary<string, object>();
                            // tên cơ quan chủ quản   
                            int TimeFormat = Convert.ToInt32(_Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN).FirstOrDefault().FormatDate);
                            cdha.TenBV = DungChung.Bien.TenCQ;
                            cdha.Logo = DungChung.Ham.GetLogo();
                            cdha.MaBN = par.FirstOrDefault().MaBNhan;
                            string[] DuongDan = par.Where(p => p.IdCLS == _IDCLS).FirstOrDefault().DuongDan2.Split('|');

                            for (int i = 0; i < DuongDan.Length; i++)
                            {
                                switch (i)
                                {
                                    case 1:
                                        if (DuongDan[0] != null)
                                        {
                                            cdha.Anh1 = InPhieu.KiemTraTonTaiAnh(DuongDan[0].ToString());
                                        }
                                        break;
                                    case 2:
                                        if (DuongDan[1] != null)
                                        {
                                            cdha.Anh2 = InPhieu.KiemTraTonTaiAnh(DuongDan[1].ToString());
                                        }
                                        break;
                                    case 3:
                                        if (DuongDan[2] != null)
                                        {
                                            cdha.Anh3 = InPhieu.KiemTraTonTaiAnh(DuongDan[2].ToString());
                                        }
                                        break;
                                    case 4:
                                        if (DuongDan[3] != null)
                                        {
                                            cdha.Anh4 = InPhieu.KiemTraTonTaiAnh(DuongDan[3].ToString());
                                        }
                                        break;
                                    case 5:
                                        if (DuongDan[4] != null)
                                        {
                                            cdha.Anh5 = InPhieu.KiemTraTonTaiAnh(DuongDan[4].ToString());
                                        }
                                        break;
                                    case 6:
                                        if (DuongDan[5] != null)
                                        {
                                            cdha.Anh6 = InPhieu.KiemTraTonTaiAnh(DuongDan[5].ToString());
                                        }
                                        break;
                                    case 7:
                                        if (DuongDan[6] != null)
                                        {
                                            cdha.Anh7 = InPhieu.KiemTraTonTaiAnh(DuongDan[6].ToString());
                                        }
                                        break;
                                    case 8:
                                        if (DuongDan[7] != null)
                                        {
                                            cdha.Anh8 = InPhieu.KiemTraTonTaiAnh(DuongDan[7].ToString());
                                        }
                                        break;

                                    default:
                                        break;
                                }
                            }



                            cdha.DiaChiBenhVien = DungChung.Bien.DiaChi;
                            cdha.TieuDe = "PHIẾU NỘI SOI TIÊU HÓA";
                            cdha.SoDienThoaiLienHe = "SĐT: " + _Data.HTHONGs.FirstOrDefault().SDT + " - Fax: " + _Data.HTHONGs.FirstOrDefault().Fax + "";
                            cdha.YeuCau = par.FirstOrDefault().TenDV;
                            cdha.NgaySinh = par.FirstOrDefault().NgaySinh + " / " + par.FirstOrDefault().ThangSinh + " / " + par.FirstOrDefault().NamSinh;
                            cdha.TieuDeKetQua = "KẾT QUẢ NỘI SOI";
                            cdha.BSCD = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            cdha.NgayChiDinh = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.NgayTH = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayTH), TimeFormat);
                            cdha.Tuoi = par.FirstOrDefault().Tuoi;
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong != null)
                            {
                                cdha.Buong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong;
                            }
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong != null)
                            {
                                cdha.Giuong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong;
                            }

                            // Thông tin bệnh nhân
                            cdha.HoTen = par.FirstOrDefault().TenBNhan.ToUpper();
                            cdha.DiaChi = par.FirstOrDefault().DChi;
                            cdha.Khoa = par.FirstOrDefault().TenKP;
                            cdha.ChanDoan = par.FirstOrDefault().ChanDoan;
                            dicpar["SoLuongAnh"] = i1;
                            if (par.FirstOrDefault().GTinh != 1)
                            {
                                cdha.Nam = "/";
                                cdha.Nu = "";
                            }
                            else
                            {
                                cdha.Nu = "/";
                                cdha.Nam = "";
                            }
                            if (par.FirstOrDefault().SThe != "")
                            {
                                cdha.MA1 = par.FirstOrDefault().SThe.Substring(0, 3);
                                cdha.MA2 = par.FirstOrDefault().SThe.Substring(3, 2);
                                cdha.MA3 = par.FirstOrDefault().SThe.Substring(5, 2);
                                cdha.MA4 = par.FirstOrDefault().SThe.Substring(7, 3);
                                cdha.MA5 = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (ttbx.Count != 0)
                            {
                                cdha.Email = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email;
                                cdha.DienThoai = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai;
                            }

                            cdha.BacSyChiDinh = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            if (string.IsNullOrEmpty(par.FirstOrDefault().KetQua_Rtf))
                                cdha.KetQua = par.FirstOrDefault().KetQua;
                            else
                                cdha.KetQua = par.FirstOrDefault().KetQua_Rtf;
                            cdha.KetLuan = par.FirstOrDefault().KetLuan;
                            cdha.LoiDan = par.FirstOrDefault().LoiDan;
                            cdha.NgayThang = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.BSTH = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCBth).ToUpper();
                            rep.Add(cdha);
                            DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuCDHA_30372, rep.ToList(), dicpar, false);
                        }
                        else
                        {
                            MessageBox.Show("Xin hãy chọn số lượng ảnh cần in!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);

                        }
                    }


                    #endregion
                    #region Khác
                    else
                    {

                        BaoCao.Rep_PhieuNoiSoi Rep = new BaoCao.Rep_PhieuNoiSoi();
                        if (par.Count > 0)
                        {
                            if (DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "01071")
                            {
                                string kieudoc1 = "";
                                string kieudoc2 = "";
                                var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                            select new
                                            {
                                                ht.KieuDoc
                                            }).ToList();
                                kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                                kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                                if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = true;
                                    DungChung.Bien._Visible_CDHA[2] = true;

                                }
                                if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = true;
                                    DungChung.Bien._Visible_CDHA[2] = false;

                                }
                                if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[2] = true;
                                    DungChung.Bien._Visible_CDHA[0] = false;
                                }
                            }
                            Rep.txtmabn.Text = "Mã BN: " + _mabn.ToString();
                            Rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            if (DungChung.Bien.MaBV == "27023")
                                Rep.SoPhieu.Value = _so;

                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        Rep.SoPhieu.Value = qvv.SoVV;
                                    else
                                        Rep.SoPhieu.Value = "";
                                }
                            }
                            else
                                Rep.SoPhieu.Value = _IDCLS;
                            Rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            Rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            Rep.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            Rep.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                Rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                Rep.Nam.Value = "/";
                            }
                            Rep.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            Rep.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            string str = "";
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                str = par.FirstOrDefault().KetQua;
                            Rep.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                            Rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                Rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                Rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                Rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                Rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                Rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            string[] arrThongTinBNKB = { "", "", "", "", "" };
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            Rep.ChanDoan.Value = arrThongTinBNKB[1];
                            Rep.Buong.Value = arrThongTinBNKB[2];
                            Rep.Giuong.Value = arrThongTinBNKB[3];
                            Rep.xrLabel6.Text = Rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            Rep.xrLabel11.Text = Rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                            Rep.Khoa.Value = arrThongTinBNKB[4];


                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                Rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                Rep.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                Rep.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                Rep.NgayTT.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            Rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            if (DungChung.Bien.MaBV == "30010")
                            {
                                var maKPth = par.FirstOrDefault().MaKPth.Value;
                                Rep.KPTH.Value = _Data.KPhongs.FirstOrDefault(p => p.MaKP == maKPth).TenKP;
                            }
                        }

                        Rep.CreateDocument();
                        frm2.prcIN.PrintingSystem = Rep.PrintingSystem;

                        frm2.ShowDialog();
                    }


                    break;
                #endregion
                #endregion
                #region thủ thuật
                case "Thủ thuật":
                    frmIn frm21 = new frmIn();
                    BaoCao.Rep_PhieuNoiSoi rep21 = new BaoCao.Rep_PhieuNoiSoi();
                    if (par.Count > 0)
                    {
                        if (DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "01071")
                        {
                            string kieudoc1 = "";
                            string kieudoc2 = "";
                            var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                        select new
                                        {
                                            ht.KieuDoc
                                        }).ToList();
                            kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                            kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                            if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                            {
                                DungChung.Bien._Visible_CDHA[0] = true;
                                DungChung.Bien._Visible_CDHA[2] = true;

                            }
                            if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                            {
                                DungChung.Bien._Visible_CDHA[0] = true;
                                DungChung.Bien._Visible_CDHA[2] = false;

                            }
                            if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                            {
                                DungChung.Bien._Visible_CDHA[2] = true;
                                DungChung.Bien._Visible_CDHA[0] = false;
                            }
                        }
                        rep21.txtmabn.Text = _mabn.ToString();
                        rep21.TenBN.Value = (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789") ? par.FirstOrDefault().TenBNhan.ToUpper() : par.FirstOrDefault().TenBNhan;
                        if (DungChung.Bien.MaBV == "27023")
                            rep21.SoPhieu.Value = _so;
                        else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                        {
                            if (par.Count > 0)
                            {
                                int mabn = par.FirstOrDefault().MaBNhan;
                                var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                if (qvv != null)
                                    rep21.SoPhieu.Value = qvv.SoVV;
                                else
                                    rep21.SoPhieu.Value = "";
                            }
                        }
                        else
                            rep21.SoPhieu.Value = _IDCLS;
                        rep21.xrLabel6.Text = rep21.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                        rep21.xrLabel11.Text = rep21.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        rep21.MaCBDT.Value = par.FirstOrDefault().MaCB;
                        rep21.DiaChi.Value = par.FirstOrDefault().DChi;
                        rep21.TuoiBN.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.CalculateAge(par.FirstOrDefault().NgaySinh, par.FirstOrDefault().ThangSinh, par.FirstOrDefault().NamSinh, " tháng.") : DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                        rep21.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                        int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                        if (gioiTinh == 1)
                        {
                            rep21.Nu.Value = "/";
                        }
                        else if (gioiTinh == 0)
                        {
                            rep21.Nam.Value = "/";
                        }
                        if (DungChung.Bien.MaBV == "01830" || DungChung.Bien.MaBV == "30005")
                        {
                            rep21.lab1.Text = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                            rep21.lblHenGhiNoiSoi.Visible = false;
                            rep21.xrLabel45.Visible = false;
                        }
                        rep21.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                        rep21.KetLuan.Value = par.FirstOrDefault().KetLuan;
                        string str = "";
                        //if (DungChung.Bien.MaBV == "30372")
                        //{
                        //if (string.IsNullOrEmpty(par.FirstOrDefault().KetQua_Rtf))
                        //str = par.FirstOrDefault().KetQua;
                        //else
                        //str = par.FirstOrDefault().KetQua_Rtf;
                        //}
                        //else
                        str = par.FirstOrDefault().KetQua;

                        rep21.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                        rep21.Loidan.Value = par.FirstOrDefault().LoiDan;
                        if (par.FirstOrDefault().SThe.Length >= 15)
                        {
                            rep21.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                            rep21.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                            rep21.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                            rep21.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                            rep21.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                        }
                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                        if (DungChung.Bien.MaBV == "14018")
                        {
                            rep21.ChanDoan.Value = DungChung.Ham.GetChanDoanKB(_Data, _mabn);
                        }
                        else if (par.FirstOrDefault().IsDongY == true && DungChung.Bien.MaBV == "24297")
                        {
                            rep21.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_24297(_Data, _mabn);
                        }
                        else
                        {
                            rep21.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                        }

                        rep21.Buong.Value = arrThongTinBNKB[2];
                        rep21.Giuong.Value = arrThongTinBNKB[3];

                        rep21.Khoa.Value = arrThongTinBNKB[4];

                        if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                            rep21.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                        else
                            rep21.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                        if (par.FirstOrDefault().NgayTH != null)
                            rep21.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                        else
                            rep21.NgayTT.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                        rep21.Macb.Value = par.FirstOrDefault().MaCBth;

                    }

                    if (DungChung.Bien.MaBV == "30010") //Yenbg1
                    {
                        int KPTH = Convert.ToInt32(par.Select(p => p.MaKPth).FirstOrDefault().ToString());
                        rep21.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == KPTH).Select(p => p.TenKP).FirstOrDefault().ToString();
                    }
                    rep21.CreateDocument();
                    frm21.prcIN.PrintingSystem = rep21.PrintingSystem;
                    frm21.ShowDialog();
                    break;
                #endregion
                #region siêu âm doppler
                case "Siêu âm ( Doppler )":
                    if (DungChung.Bien.MaBV == "27023")
                    {
                        CLS.InPhieu.InPhieuSieuAmDopplerTim(_IDCLS);
                        break;
                    }
                    else
                    {
                        int _IDCD = 0;
                        int _IDCLS1 = 0;
                        if (par.Count > 0)
                            _IDCD = par.FirstOrDefault().IDCD;
                        if (par1.Count > 0)
                            _IDCLS1 = par1.FirstOrDefault().IdCLS;
                        CLS.InPhieu.InLuuHuyetNao(_Data, _IDCD, _IDCLS1, 2);
                        break;
                    }
                #endregion
                #region lưu huyết não
                case "Lưu huyết não":
                    int _IDCD2 = 0;
                    if (par.Count > 0)
                        _IDCD2 = par.FirstOrDefault().IDCD;
                    if (DungChung.Bien.MaBV == "30009")
                    {
                        CLS.InPhieu.InLuuHuyetNao_30009(_IDCD2);
                    }
                    else
                        CLS.InPhieu.InLuuHuyetNao(_Data, _IDCD2, _tieunhom, 0);
                    break;
                #endregion
                #region đo mật độ xương
                case "Đo mật độ xương":
                    int _IDCD3 = 0;
                    if (par.Count > 0)
                        _IDCD3 = par.FirstOrDefault().IDCD;
                    if (DungChung.Bien.MaBV == "30009")
                        CLS.InPhieu.InPhieuThamDoChucNang(_IDCD3, 1, DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.DoMatDoXuong);
                    else
                        CLS.InPhieu.InLuuHuyetNao1(_Data, _IDCD3, _tieunhom, 1);
                    break;
                #endregion
                #region thăm dò chức năng
                case "Thăm dò chức năng":
                    int _IDCD4 = 0;
                    if (par.Count > 0)
                        _IDCD4 = par.FirstOrDefault().IDCD;
                    CLS.InPhieu.InPhieuThamDoChucNang(_IDCD4, 1, DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.DoMatDoXuong);
                    break;
                #endregion
                #region thăm dò chức năng
                case "Đo khúc xạ máy":
                    int _IDCD44 = 0;
                    if (par.Count > 0)
                        _IDCD44 = par.FirstOrDefault().IDCD;
                    CLS.InPhieu.InPhieuThamDoChucNang(_IDCD44, 3, DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.DoKhucXaMay);
                    break;
                #endregion
                #region Nội Soi Dạ Dày
                #region 30372
                case "Nội soi Dạ Dày":
                    if (DungChung.Bien.MaBV == "30372")
                    {
                        frm_SoLuongAnhIn frm = new frm_SoLuongAnhIn();
                        frm.ShowDialog();
                        int i1 = frm.SoLuongAnhin;
                        List<CDHA_30372> rep = new List<CDHA_30372>();
                        if (i1 > 0)
                        {
                            CDHA_30372 cdha = new CDHA_30372();
                            Dictionary<string, object> dicpar = new Dictionary<string, object>();
                            // tên cơ quan chủ quản   
                            int TimeFormat = Convert.ToInt32(_Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN).FirstOrDefault().FormatDate);
                            cdha.TenBV = DungChung.Bien.TenCQ;
                            cdha.Logo = DungChung.Ham.GetLogo();
                            cdha.MaBN = par.FirstOrDefault().MaBNhan;
                            string[] DuongDan = par.Where(p => p.IdCLS == _IDCLS).FirstOrDefault().DuongDan2.Split('|');

                            for (int i = 0; i < DuongDan.Length; i++)
                            {
                                switch (i)
                                {
                                    case 1:
                                        if (DuongDan[0] != null)
                                        {
                                            cdha.Anh1 = InPhieu.KiemTraTonTaiAnh(DuongDan[0].ToString());
                                        }
                                        break;
                                    case 2:
                                        if (DuongDan[1] != null)
                                        {
                                            cdha.Anh2 = InPhieu.KiemTraTonTaiAnh(DuongDan[1].ToString());
                                        }
                                        break;
                                    case 3:
                                        if (DuongDan[2] != null)
                                        {
                                            cdha.Anh3 = InPhieu.KiemTraTonTaiAnh(DuongDan[2].ToString());
                                        }
                                        break;
                                    case 4:
                                        if (DuongDan[3] != null)
                                        {
                                            cdha.Anh4 = InPhieu.KiemTraTonTaiAnh(DuongDan[3].ToString());
                                        }
                                        break;
                                    case 5:
                                        if (DuongDan[4] != null)
                                        {
                                            cdha.Anh5 = InPhieu.KiemTraTonTaiAnh(DuongDan[4].ToString());
                                        }
                                        break;
                                    case 6:
                                        if (DuongDan[5] != null)
                                        {
                                            cdha.Anh6 = InPhieu.KiemTraTonTaiAnh(DuongDan[5].ToString());
                                        }
                                        break;
                                    case 7:
                                        if (DuongDan[6] != null)
                                        {
                                            cdha.Anh7 = InPhieu.KiemTraTonTaiAnh(DuongDan[6].ToString());
                                        }
                                        break;
                                    case 8:
                                        if (DuongDan[7] != null)
                                        {
                                            cdha.Anh8 = InPhieu.KiemTraTonTaiAnh(DuongDan[7].ToString());
                                        }
                                        break;

                                    default:
                                        break;
                                }
                            }



                            cdha.DiaChiBenhVien = DungChung.Bien.DiaChi;
                            if (Frm_CDHA_Moi._indexPhieu == 6 || Frm_CDHA_Moi._indexPhieu == 15)
                            { cdha.TieuDe = "PHIẾU NỘI SOI ĐẠI TRỰC TRÀNG"; }
                            else { cdha.TieuDe = "PHIẾU NỘI SOI DẠ DÀY"; }
                            cdha.SoDienThoaiLienHe = "SĐT: " + _Data.HTHONGs.FirstOrDefault().SDT + " - Fax: " + _Data.HTHONGs.FirstOrDefault().Fax + "";
                            cdha.YeuCau = par.FirstOrDefault().TenDV;
                            cdha.NgaySinh = par.FirstOrDefault().NgaySinh + " / " + par.FirstOrDefault().ThangSinh + " / " + par.FirstOrDefault().NamSinh;
                            cdha.TieuDeKetQua = "KẾT QUẢ NỘI SOI";
                            cdha.BSCD = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            cdha.NgayChiDinh = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.NgayTH = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayTH), TimeFormat);
                            cdha.Tuoi = par.FirstOrDefault().Tuoi;
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong != null)
                            {
                                cdha.Buong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong;
                            }
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong != null)
                            {
                                cdha.Giuong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong;
                            }

                            // Thông tin bệnh nhân
                            cdha.HoTen = par.FirstOrDefault().TenBNhan.ToUpper();
                            cdha.DiaChi = par.FirstOrDefault().DChi;
                            cdha.Khoa = par.FirstOrDefault().TenKP;
                            cdha.ChanDoan = par.FirstOrDefault().ChanDoan;
                            dicpar["SoLuongAnh"] = i1;
                            if (par.FirstOrDefault().GTinh != 1)
                            {
                                cdha.Nam = "/";
                                cdha.Nu = "";
                            }
                            else
                            {
                                cdha.Nu = "/";
                                cdha.Nam = "";
                            }
                            if (par.FirstOrDefault().SThe != "")
                            {
                                cdha.MA1 = par.FirstOrDefault().SThe.Substring(0, 3);
                                cdha.MA2 = par.FirstOrDefault().SThe.Substring(3, 2);
                                cdha.MA3 = par.FirstOrDefault().SThe.Substring(5, 2);
                                cdha.MA4 = par.FirstOrDefault().SThe.Substring(7, 3);
                                cdha.MA5 = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (ttbx.Count != 0)
                            {
                                cdha.Email = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email;
                                cdha.DienThoai = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai;
                            }

                            cdha.BacSyChiDinh = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            if (par.FirstOrDefault().KetQua_Rtf == null)
                                cdha.KetQua = par.FirstOrDefault().KetQua;
                            else
                                cdha.KetQua = par.FirstOrDefault().KetQua_Rtf;
                            cdha.KetLuan = par.FirstOrDefault().KetLuan;
                            cdha.LoiDan = par.FirstOrDefault().LoiDan;
                            cdha.NgayThang = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.BSTH = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCBth).ToUpper();
                            rep.Add(cdha);
                            DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuCDHA_30372, rep.ToList(), dicpar, false);
                        }
                        else
                        {
                            MessageBox.Show("Xin hãy chọn số lượng ảnh cần in!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);

                        }
                    }
                    break;

                #endregion
                #endregion
                #region điện não đồ
                case "Điện não đồ":
                    int _IDCD5 = 0;
                    if (par.Count > 0)
                    {
                        _IDCD5 = par.FirstOrDefault().IDCD;

                    }

                    CLS.InPhieu.InLuuHuyetNao(_Data, _IDCD5, _tieunhom, 3);
                    break;
                #endregion
                #region Nội soi cổ tử cung
                case "Nội soi Cổ Tử Cung":
                    if (DungChung.Bien.MaBV == "30372")
                    {
                        frm_SoLuongAnhIn frm = new frm_SoLuongAnhIn();
                        frm.ShowDialog();
                        int i1 = frm.SoLuongAnhin;
                        List<CDHA_30372> rep = new List<CDHA_30372>();
                        if (i1 > 0)
                        {
                            CDHA_30372 cdha = new CDHA_30372();
                            Dictionary<string, object> dicpar = new Dictionary<string, object>();
                            // tên cơ quan chủ quản   
                            int TimeFormat = Convert.ToInt32(_Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN).FirstOrDefault().FormatDate);
                            cdha.TenBV = DungChung.Bien.TenCQ;
                            cdha.Logo = DungChung.Ham.GetLogo();
                            cdha.MaBN = par.FirstOrDefault().MaBNhan;
                            string[] DuongDan = par.Where(p => p.IdCLS == _IDCLS).FirstOrDefault().DuongDan2.Split('|');

                            for (int i = 0; i < DuongDan.Length; i++)
                            {
                                switch (i)
                                {
                                    case 1:
                                        if (DuongDan[0] != null)
                                        {
                                            cdha.Anh1 = InPhieu.KiemTraTonTaiAnh(DuongDan[0].ToString());
                                        }
                                        break;
                                    case 2:
                                        if (DuongDan[1] != null)
                                        {
                                            cdha.Anh2 = InPhieu.KiemTraTonTaiAnh(DuongDan[1].ToString());
                                        }
                                        break;
                                    case 3:
                                        if (DuongDan[2] != null)
                                        {
                                            cdha.Anh3 = InPhieu.KiemTraTonTaiAnh(DuongDan[2].ToString());
                                        }
                                        break;
                                    case 4:
                                        if (DuongDan[3] != null)
                                        {
                                            cdha.Anh4 = InPhieu.KiemTraTonTaiAnh(DuongDan[3].ToString());
                                        }
                                        break;
                                    case 5:
                                        if (DuongDan[4] != null)
                                        {
                                            cdha.Anh5 = InPhieu.KiemTraTonTaiAnh(DuongDan[4].ToString());
                                        }
                                        break;
                                    case 6:
                                        if (DuongDan[5] != null)
                                        {
                                            cdha.Anh6 = InPhieu.KiemTraTonTaiAnh(DuongDan[5].ToString());
                                        }
                                        break;
                                    case 7:
                                        if (DuongDan[6] != null)
                                        {
                                            cdha.Anh7 = InPhieu.KiemTraTonTaiAnh(DuongDan[6].ToString());
                                        }
                                        break;
                                    case 8:
                                        if (DuongDan[7] != null)
                                        {
                                            cdha.Anh8 = InPhieu.KiemTraTonTaiAnh(DuongDan[7].ToString());
                                        }
                                        break;

                                    default:
                                        break;
                                }
                            }



                            cdha.DiaChiBenhVien = DungChung.Bien.DiaChi;
                            cdha.TieuDe = "PHIẾU NỘI SOI CỔ TỬ CUNG";
                            cdha.SoDienThoaiLienHe = "SĐT: " + _Data.HTHONGs.FirstOrDefault().SDT + " - Fax: " + _Data.HTHONGs.FirstOrDefault().Fax + "";
                            cdha.YeuCau = par.FirstOrDefault().TenDV;
                            cdha.NgaySinh = par.FirstOrDefault().NgaySinh + " / " + par.FirstOrDefault().ThangSinh + " / " + par.FirstOrDefault().NamSinh;
                            cdha.TieuDeKetQua = "KẾT QUẢ NỘI SOI";
                            cdha.BSCD = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            cdha.NgayChiDinh = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.NgayTH = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayTH), TimeFormat);
                            cdha.Tuoi = par.FirstOrDefault().Tuoi;
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong != null)
                            {
                                cdha.Buong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong;
                            }
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong != null)
                            {
                                cdha.Giuong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong;
                            }

                            // Thông tin bệnh nhân
                            cdha.HoTen = par.FirstOrDefault().TenBNhan.ToUpper();
                            cdha.DiaChi = par.FirstOrDefault().DChi;
                            cdha.Khoa = par.FirstOrDefault().TenKP;
                            cdha.ChanDoan = par.FirstOrDefault().ChanDoan;
                            dicpar["SoLuongAnh"] = i1;
                            if (par.FirstOrDefault().GTinh != 1)
                            {
                                cdha.Nam = "/";
                                cdha.Nu = "";
                            }
                            else
                            {
                                cdha.Nu = "/";
                                cdha.Nam = "";
                            }
                            if (par.FirstOrDefault().SThe != "")
                            {
                                cdha.MA1 = par.FirstOrDefault().SThe.Substring(0, 3);
                                cdha.MA2 = par.FirstOrDefault().SThe.Substring(3, 2);
                                cdha.MA3 = par.FirstOrDefault().SThe.Substring(5, 2);
                                cdha.MA4 = par.FirstOrDefault().SThe.Substring(7, 3);
                                cdha.MA5 = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (ttbx.Count != 0)
                            {
                                cdha.Email = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email;
                                cdha.DienThoai = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai;
                            }

                            cdha.BacSyChiDinh = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            if (par.FirstOrDefault().KetQua_Rtf == null)
                                cdha.KetQua = par.FirstOrDefault().KetQua;
                            else
                                cdha.KetQua = par.FirstOrDefault().KetQua_Rtf;

                            cdha.KetLuan = par.FirstOrDefault().KetLuan;
                            cdha.LoiDan = par.FirstOrDefault().LoiDan;
                            cdha.NgayThang = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.BSTH = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCBth).ToUpper();
                            rep.Add(cdha);
                            DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuCDHA_30372, rep.ToList(), dicpar, false);
                        }
                        else
                        {
                            MessageBox.Show("Xin hãy chọn số lượng ảnh cần in!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);

                        }
                    }

                    break;
                #endregion
                #region Nội soi tai mũi họng
                case "Nội soi Tai-Mũi-Họng":
                    if (DungChung.Bien.MaBV == "24012")
                    {
                        int _mkp4 = 0;
                        frmIn frm4 = new frmIn();
                        BaoCao.Rep_PhieuNoiSoiTMH rep4 = new BaoCao.Rep_PhieuNoiSoiTMH();
                        if (par.Count > 0)
                        {
                            _mkp4 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            rep4.paramHoTen.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            rep4.paramDiaChi.Value = par.FirstOrDefault().DChi;
                            if (DungChung.Bien.MaBV == "27023")
                                rep4.IDCLS.Value = _so;
                            else
                                rep4.IDCLS.Value = _IDCLS;
                            if (DungChung.Bien.MaBV == "24012")
                            {
                                rep4.SubBand1.Visible = false;
                                rep4.SubBand2.Visible = false;
                                rep4.SubBand3.Visible = false;
                                rep4.SubBand4.Visible = false;
                                rep4.SubBand5.Visible = false;
                                rep4.SubBand6.Visible = false;
                                rep4.SubBand9.Visible = true;
                                rep4.SubBand7.Visible = true;
                                rep4.SubBand8.Visible = true;

                            }
                            rep4.xrTableCell60.Text = "BÁC SĨ CHỈ ĐỊNH";
                            rep4.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep4.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                            rep4.paramGioiTinh.Value = par.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                            rep4.paramSThe.Value = par.FirstOrDefault().SThe;
                            rep4.paramDoiTuong.Value = par.FirstOrDefault().DTuong;
                            rep4.paramTuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep4.paramKetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep4.paraLoiDan.Value = par.FirstOrDefault().LoiDan;
                            rep4.paramPhieuSo.Value = par.FirstOrDefault().IdCLS;
                            if (par.FirstOrDefault().NgayThang != null)
                            {
                                rep4.paramNgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            }
                            else
                                rep4.paramNgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep4.paramNgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep4.paramNgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            int _makpth = 0;
                            if (par.FirstOrDefault().MaKPth != null)
                            {
                                _makpth = par.FirstOrDefault().MaKPth.Value;

                            }
                            var kp = _Data.KPhongs.Where(p => p.MaKP == _makpth).ToList();
                            if (kp.Count > 0)
                                rep4.paramPhongKham.Value = kp.FirstOrDefault().TenKP.ToUpper();
                            string a = "", b = ""; ; a = par0.FirstOrDefault().MaCB;
                            b = par.FirstOrDefault().MaCBth;

                            if (!string.IsNullOrEmpty(a))
                                rep4.paramCanBoDT.Value = DungChung.Ham._getTenCB(_Data, a).ToUpper();
                            if (!string.IsNullOrEmpty(b))
                                rep4.BSTH.Value = DungChung.Ham._getTenCB(_Data, b).ToUpper();
                            string ddan = "", ketqua = "";
                            if (par.FirstOrDefault().DuongDan2 != null)
                                ddan = par.FirstOrDefault().DuongDan2;
                            if (DungChung.Bien.MaBV == "30372")
                            {
                                if (par.FirstOrDefault().KetQua_Rtf == null)
                                    ketqua = par.FirstOrDefault().KetQua;
                                else
                                    ketqua = par.FirstOrDefault().KetQua_Rtf;
                            }
                            else
                                ketqua = par.FirstOrDefault().KetQua;
                            rep4.hienthi(ketqua, ddan);
                        }
                        var kb4 = (from kb2 in _Data.BNKBs.Where(p => p.MaBNhan == _mabn).Where(p => p.MaKP == _mkp4) select new { kb2.IDKB, kb2.ChanDoan, kb2.BenhKhac }).OrderByDescending(p => p.IDKB).ToList();
                        if (kb4.Count > 0)
                            rep4.paramChanDoan.Value = kb4.FirstOrDefault().ChanDoan + "/" + kb4.FirstOrDefault().BenhKhac;

                        rep4.CreateDocument();
                        frm4.prcIN.PrintingSystem = rep4.PrintingSystem;
                        frm4.ShowDialog();
                    }
                    else if (DungChung.Bien.MaBV == "30372")
                    {

                        frm_SoLuongAnhIn frm = new frm_SoLuongAnhIn();
                        frm.ShowDialog();
                        int i1 = frm.SoLuongAnhin;
                        List<CDHA_30372> rep = new List<CDHA_30372>();
                        if (i1 > 0)
                        {
                            CDHA_30372 cdha = new CDHA_30372();
                            Dictionary<string, object> dicpar = new Dictionary<string, object>();
                            // tên cơ quan chủ quản   
                            int TimeFormat = Convert.ToInt32(_Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN).FirstOrDefault().FormatDate);
                            cdha.TenBV = DungChung.Bien.TenCQ;
                            cdha.Logo = DungChung.Ham.GetLogo();
                            cdha.MaBN = par.FirstOrDefault().MaBNhan;
                            string[] DuongDan = par.Where(p => p.IdCLS == _IDCLS).FirstOrDefault().DuongDan2.Split('|');

                            for (int i = 0; i < DuongDan.Length; i++)
                            {
                                switch (i)
                                {
                                    case 1:
                                        if (DuongDan[0] != null)
                                        {
                                            cdha.Anh1 = InPhieu.KiemTraTonTaiAnh(DuongDan[0].ToString());
                                        }
                                        break;
                                    case 2:
                                        if (DuongDan[1] != null)
                                        {
                                            cdha.Anh2 = InPhieu.KiemTraTonTaiAnh(DuongDan[1].ToString());
                                        }
                                        break;
                                    case 3:
                                        if (DuongDan[2] != null)
                                        {
                                            cdha.Anh3 = InPhieu.KiemTraTonTaiAnh(DuongDan[2].ToString());
                                        }
                                        break;
                                    case 4:
                                        if (DuongDan[3] != null)
                                        {
                                            cdha.Anh4 = InPhieu.KiemTraTonTaiAnh(DuongDan[3].ToString());
                                        }
                                        break;
                                    case 5:
                                        if (DuongDan[4] != null)
                                        {
                                            cdha.Anh5 = InPhieu.KiemTraTonTaiAnh(DuongDan[4].ToString());
                                        }
                                        break;
                                    case 6:
                                        if (DuongDan[5] != null)
                                        {
                                            cdha.Anh6 = InPhieu.KiemTraTonTaiAnh(DuongDan[5].ToString());
                                        }
                                        break;
                                    case 7:
                                        if (DuongDan[6] != null)
                                        {
                                            cdha.Anh7 = InPhieu.KiemTraTonTaiAnh(DuongDan[6].ToString());
                                        }
                                        break;
                                    case 8:
                                        if (DuongDan[7] != null)
                                        {
                                            cdha.Anh8 = InPhieu.KiemTraTonTaiAnh(DuongDan[7].ToString());
                                        }
                                        break;

                                    default:
                                        break;
                                }
                            }
                            cdha.DiaChiBenhVien = DungChung.Bien.DiaChi;
                            cdha.TieuDe = "PHIẾU NỘI SOI - TAI - MŨI - HỌNG";
                            cdha.SoDienThoaiLienHe = "SĐT: " + _Data.HTHONGs.FirstOrDefault().SDT + " - Fax: " + _Data.HTHONGs.FirstOrDefault().Fax + "";
                            cdha.YeuCau = par.FirstOrDefault().TenDV;
                            cdha.NgaySinh = par.FirstOrDefault().NgaySinh + " / " + par.FirstOrDefault().ThangSinh + " / " + par.FirstOrDefault().NamSinh;
                            cdha.TieuDeKetQua = "KẾT QUẢ NỘI SOI";
                            cdha.BSCD = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            cdha.NgayChiDinh = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.NgayTH = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayTH), TimeFormat);
                            cdha.Tuoi = par.FirstOrDefault().Tuoi;
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong != null)
                            {
                                cdha.Buong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong;
                            }
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong != null)
                            {
                                cdha.Giuong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong;
                            }

                            // Thông tin bệnh nhân
                            cdha.HoTen = par.FirstOrDefault().TenBNhan.ToUpper();
                            cdha.DiaChi = par.FirstOrDefault().DChi;
                            cdha.Khoa = par.FirstOrDefault().TenKP;
                            cdha.ChanDoan = par.FirstOrDefault().ChanDoan;
                            dicpar["SoLuongAnh"] = i1;
                            if (par.FirstOrDefault().GTinh != 1)
                            {
                                cdha.Nam = "/";
                                cdha.Nu = "";
                            }
                            else
                            {
                                cdha.Nu = "/";
                                cdha.Nam = "";
                            }
                            if (par.FirstOrDefault().SThe != "")
                            {
                                cdha.MA1 = par.FirstOrDefault().SThe.Substring(0, 3);
                                cdha.MA2 = par.FirstOrDefault().SThe.Substring(3, 2);
                                cdha.MA3 = par.FirstOrDefault().SThe.Substring(5, 2);
                                cdha.MA4 = par.FirstOrDefault().SThe.Substring(7, 3);
                                cdha.MA5 = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (ttbx.Count != 0)
                            {
                                cdha.Email = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email;
                                cdha.DienThoai = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai;
                            }

                            cdha.BacSyChiDinh = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            if (par.FirstOrDefault().KetQua_Rtf == null)
                                cdha.KetQua = par.FirstOrDefault().KetQua;
                            else
                                cdha.KetQua = par.FirstOrDefault().KetQua_Rtf;
                            cdha.KetLuan = par.FirstOrDefault().KetLuan;
                            cdha.LoiDan = par.FirstOrDefault().LoiDan;
                            cdha.NgayThang = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.BSTH = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCBth).ToUpper();
                            rep.Add(cdha);
                            DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuCDHA_30372, rep.ToList(), dicpar, false);
                        }
                        else
                        {
                            MessageBox.Show("Xin hãy chọn số lượng ảnh cần in!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);

                        }
                    }
                    break;
                #endregion
                #region Phẫu thuật
                case "Phẫu Thuật":
                    if (DungChung.Bien.MaBV == "24012")
                    {
                        int _mkp4 = 0;
                        frmIn frm4 = new frmIn();
                        BaoCao.Rep_PhieuNoiSoiTMH rep4 = new BaoCao.Rep_PhieuNoiSoiTMH();
                        if (par.Count > 0)
                        {
                            _mkp4 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            rep4.paramHoTen.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            rep4.paramDiaChi.Value = par.FirstOrDefault().DChi;
                            if (DungChung.Bien.MaBV == "27023")
                                rep4.IDCLS.Value = _so;
                            else
                                rep4.IDCLS.Value = _IDCLS;
                            if (DungChung.Bien.MaBV == "24012")
                            {
                                rep4.SubBand1.Visible = false;
                                rep4.SubBand2.Visible = false;
                                rep4.SubBand3.Visible = false;
                                rep4.SubBand4.Visible = false;
                                rep4.SubBand5.Visible = false;
                                rep4.SubBand6.Visible = false;
                                rep4.SubBand9.Visible = true;
                                rep4.SubBand7.Visible = true;
                                rep4.SubBand8.Visible = true;

                            }
                            rep4.xrTableCell60.Text = "BÁC SĨ CHỈ ĐỊNH";
                            rep4.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep4.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                            rep4.paramGioiTinh.Value = par.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                            rep4.paramSThe.Value = par.FirstOrDefault().SThe;
                            rep4.paramDoiTuong.Value = par.FirstOrDefault().DTuong;
                            rep4.paramTuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep4.paramKetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep4.paraLoiDan.Value = par.FirstOrDefault().LoiDan;
                            rep4.paramPhieuSo.Value = par.FirstOrDefault().IdCLS;
                            if (par.FirstOrDefault().NgayThang != null)
                            {
                                rep4.paramNgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            }
                            else
                                rep4.paramNgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep4.paramNgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep4.paramNgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            int _makpth = 0;
                            if (par.FirstOrDefault().MaKPth != null)
                            {
                                _makpth = par.FirstOrDefault().MaKPth.Value;

                            }
                            var kp = _Data.KPhongs.Where(p => p.MaKP == _makpth).ToList();
                            if (kp.Count > 0)
                                rep4.paramPhongKham.Value = kp.FirstOrDefault().TenKP.ToUpper();
                            string a = "", b = ""; ; a = par0.FirstOrDefault().MaCB;
                            b = par.FirstOrDefault().MaCBth;

                            if (!string.IsNullOrEmpty(a))
                                rep4.paramCanBoDT.Value = DungChung.Ham._getTenCB(_Data, a).ToUpper();
                            if (!string.IsNullOrEmpty(b))
                                rep4.BSTH.Value = DungChung.Ham._getTenCB(_Data, b).ToUpper();
                            string ddan = "", ketqua = "";
                            if (par.FirstOrDefault().DuongDan2 != null)
                                ddan = par.FirstOrDefault().DuongDan2;
                            if (DungChung.Bien.MaBV == "30372")
                            {
                                if (par.FirstOrDefault().KetQua_Rtf == null)
                                    ketqua = par.FirstOrDefault().KetQua;
                                else
                                    ketqua = par.FirstOrDefault().KetQua_Rtf;
                            }
                            else
                                ketqua = par.FirstOrDefault().KetQua;
                            rep4.hienthi(ketqua, ddan);
                        }
                        var kb4 = (from kb2 in _Data.BNKBs.Where(p => p.MaBNhan == _mabn).Where(p => p.MaKP == _mkp4) select new { kb2.IDKB, kb2.ChanDoan, kb2.BenhKhac }).OrderByDescending(p => p.IDKB).ToList();
                        if (kb4.Count > 0)
                            rep4.paramChanDoan.Value = kb4.FirstOrDefault().ChanDoan + "/" + kb4.FirstOrDefault().BenhKhac;

                        rep4.CreateDocument();
                        frm4.prcIN.PrintingSystem = rep4.PrintingSystem;
                        frm4.ShowDialog();
                    }
                    else if (DungChung.Bien.MaBV == "30372")
                    {

                        frm_SoLuongAnhIn frm = new frm_SoLuongAnhIn();
                        frm.ShowDialog();
                        int i1 = frm.SoLuongAnhin;
                        List<CDHA_30372> rep = new List<CDHA_30372>();
                        if (i1 > 0)
                        {
                            CDHA_30372 cdha = new CDHA_30372();
                            Dictionary<string, object> dicpar = new Dictionary<string, object>();
                            // tên cơ quan chủ quản   
                            int TimeFormat = Convert.ToInt32(_Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN).FirstOrDefault().FormatDate);
                            cdha.TenBV = DungChung.Bien.TenCQ;
                            cdha.Logo = DungChung.Ham.GetLogo();
                            cdha.MaBN = par.FirstOrDefault().MaBNhan;
                            string[] DuongDan = par.Where(p => p.IdCLS == _IDCLS).FirstOrDefault().DuongDan2.Split('|');

                            for (int i = 0; i < DuongDan.Length; i++)
                            {
                                switch (i)
                                {
                                    case 1:
                                        if (DuongDan[0] != null)
                                        {
                                            cdha.Anh1 = InPhieu.KiemTraTonTaiAnh(DuongDan[0].ToString());
                                        }
                                        break;
                                    case 2:
                                        if (DuongDan[1] != null)
                                        {
                                            cdha.Anh2 = InPhieu.KiemTraTonTaiAnh(DuongDan[1].ToString());
                                        }
                                        break;
                                    case 3:
                                        if (DuongDan[2] != null)
                                        {
                                            cdha.Anh3 = InPhieu.KiemTraTonTaiAnh(DuongDan[2].ToString());
                                        }
                                        break;
                                    case 4:
                                        if (DuongDan[3] != null)
                                        {
                                            cdha.Anh4 = InPhieu.KiemTraTonTaiAnh(DuongDan[3].ToString());
                                        }
                                        break;
                                    case 5:
                                        if (DuongDan[4] != null)
                                        {
                                            cdha.Anh5 = InPhieu.KiemTraTonTaiAnh(DuongDan[4].ToString());
                                        }
                                        break;
                                    case 6:
                                        if (DuongDan[5] != null)
                                        {
                                            cdha.Anh6 = InPhieu.KiemTraTonTaiAnh(DuongDan[5].ToString());
                                        }
                                        break;
                                    case 7:
                                        if (DuongDan[6] != null)
                                        {
                                            cdha.Anh7 = InPhieu.KiemTraTonTaiAnh(DuongDan[6].ToString());
                                        }
                                        break;
                                    case 8:
                                        if (DuongDan[7] != null)
                                        {
                                            cdha.Anh8 = InPhieu.KiemTraTonTaiAnh(DuongDan[7].ToString());
                                        }
                                        break;

                                    default:
                                        break;
                                }
                            }
                            cdha.DiaChiBenhVien = DungChung.Bien.DiaChi;
                            cdha.TieuDe = "PHIẾU PHẪU THUẬT";
                            cdha.SoDienThoaiLienHe = "SĐT: " + _Data.HTHONGs.FirstOrDefault().SDT + " - Fax: " + _Data.HTHONGs.FirstOrDefault().Fax + "";
                            cdha.YeuCau = par.FirstOrDefault().TenDV;
                            cdha.NgaySinh = par.FirstOrDefault().NgaySinh + " / " + par.FirstOrDefault().ThangSinh + " / " + par.FirstOrDefault().NamSinh;
                            cdha.TieuDeKetQua = "KẾT QUẢ PHẪU THUẬT";
                            cdha.BSCD = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            cdha.NgayChiDinh = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.NgayTH = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayTH), TimeFormat);
                            cdha.Tuoi = par.FirstOrDefault().Tuoi;
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong != null)
                            {
                                cdha.Buong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong;
                            }
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong != null)
                            {
                                cdha.Giuong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong;
                            }

                            // Thông tin bệnh nhân
                            cdha.HoTen = par.FirstOrDefault().TenBNhan.ToUpper();
                            cdha.DiaChi = par.FirstOrDefault().DChi;
                            cdha.Khoa = par.FirstOrDefault().TenKP;
                            cdha.ChanDoan = par.FirstOrDefault().ChanDoan;
                            dicpar["SoLuongAnh"] = i1;
                            if (par.FirstOrDefault().GTinh != 1)
                            {
                                cdha.Nam = "/";
                                cdha.Nu = "";
                            }
                            else
                            {
                                cdha.Nu = "/";
                                cdha.Nam = "";
                            }
                            if (par.FirstOrDefault().SThe != "")
                            {
                                cdha.MA1 = par.FirstOrDefault().SThe.Substring(0, 3);
                                cdha.MA2 = par.FirstOrDefault().SThe.Substring(3, 2);
                                cdha.MA3 = par.FirstOrDefault().SThe.Substring(5, 2);
                                cdha.MA4 = par.FirstOrDefault().SThe.Substring(7, 3);
                                cdha.MA5 = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (ttbx.Count != 0)
                            {
                                cdha.Email = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email;
                                cdha.DienThoai = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai;
                            }

                            cdha.BacSyChiDinh = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            if (par.FirstOrDefault().KetQua_Rtf == null)
                                cdha.KetQua = par.FirstOrDefault().KetQua;
                            else
                                cdha.KetQua = par.FirstOrDefault().KetQua_Rtf;
                            cdha.KetLuan = par.FirstOrDefault().KetLuan;
                            cdha.LoiDan = par.FirstOrDefault().LoiDan;
                            cdha.NgayThang = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.BSTH = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCBth).ToUpper();
                            rep.Add(cdha);
                            DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuCDHA_30372, rep.ToList(), dicpar, false);
                        }
                        else
                        {
                            MessageBox.Show("Xin hãy chọn số lượng ảnh cần in!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);

                        }
                    }
                    break;
                #endregion
                #region Vacxin
                case "Vacxin":
                    break;
                    #endregion
            }
        }
        public static void _inPhieu_CDHA(QLBV_Database.QLBVEntities _Data, string _tieunhom, int _mabn, int _IDCLS, int IDCD, bool Mode, int _mkp = 0)
        {
            #region 34019
            if (DungChung.Bien.MaBV == "34019")
            {

                var cls = _Data.CLS.Where(p => p.IdCLS == _IDCLS).FirstOrDefault();
                DateTime ngaycd = cls != null ? Convert.ToDateTime(cls.NgayThang) : DateTime.Now;

                var rg = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _mabn)
                          join cls4 in _Data.CLS.Where(p => p.IdCLS == _IDCLS) on bn.MaBNhan equals cls4.MaBNhan
                          join chidinh in _Data.ChiDinhs.Where(o => InTongHop ? o.Status == 0 : true) on cls4.IdCLS equals chidinh.IdCLS
                          join dv in _Data.DichVus on chidinh.MaDV equals dv.MaDV
                          join tn in _Data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                          select new { tn.TenRG }).ToList();
                string tenRG = rg.Count >= 0 ? rg.FirstOrDefault().TenRG : "";

                var par3 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _mabn)
                            join cls4 in _Data.CLS.Where(p => p.NgayThang == ngaycd) on bn.MaBNhan equals cls4.MaBNhan
                            join kp in _Data.KPhongs on cls4.MaKP equals kp.MaKP
                            join kpTH in _Data.KPhongs on cls4.MaKPth equals kpTH.MaKP
                            join chidinh in _Data.ChiDinhs.Where(o => InTongHop ? o.Status == 0 : true) on cls4.IdCLS equals chidinh.IdCLS
                            join dv in _Data.DichVus on chidinh.MaDV equals dv.MaDV
                            join tn in _Data.TieuNhomDVs.Where(o => o.TenRG == tenRG) on dv.IdTieuNhom equals tn.IdTieuNhom
                            select new { chidinh.IDCD, cls4.STT, tn.TenTN, chidinh.Status, chidinh.SoPhieu, cls4.NgayThang, cls4.MaCB, cls4.MaKP, kp.TenKP, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, cls4.MaKPth, TenKPth = kpTH.TenKP, DiaChiKPth = kpTH.DChi, bn.Tuoi, bn.SThe, bn.HanBHDen, bn.NoiTru, chidinh.ChiDinh1, chidinh.KetLuan, dv.TenDV, cls4.NgayTH, cls4.CapCuu, bn.NgaySinh, bn.ThangSinh, bn.NamSinh, bn.DTuong, bn.HanBHTu, cls4.BarCode, chidinh.LoiDan, chidinh.TrongBH, bn.IDPerson }).ToList();
                var par41 = (from p in par3
                             join clsct in _Data.CLScts on p.IDCD equals clsct.IDCD
                             select new { p.STT, p.TenTN, p.Status, p.SoPhieu, p.NgayThang, p.MaCB, p.MaKP, p.TenKP, p.MaBNhan, p.TenBNhan, p.DChi, p.GTinh, p.MaKPth, TenKPth = p.TenKP, DiaChiKPth = p.DiaChiKPth, p.Tuoi, p.SThe, p.HanBHDen, p.NoiTru, p.ChiDinh1, p.KetLuan, p.TenDV, p.NgayTH, p.CapCuu, p.NgaySinh, p.ThangSinh, p.NamSinh, p.DTuong, p.HanBHTu, p.BarCode, p.LoiDan, clsct.KetQua, IsTrongBH = (p.TrongBH == 1), p.IDPerson }).ToList();

                //if (par4.Count > 0)
                //{
                //    if (DungChung.Bien._Visible_CDHA[1] == false)
                //    {
                //        if (par4.Exists(o => o.Status == 1))
                //            DungChung.Bien._Visible_CDHA[2] = true;
                //        else
                //            DungChung.Bien._Visible_CDHA[2] = false;
                //    }
                //}

                for (int i = 0; i < 2; i++)
                {
                    var par4 = par41.Where(o => o.IsTrongBH == (i == 0)).ToList();
                    if (par4.Count > 0)
                    {

                        repPhieuKetQua_CDHA_34019_A4 rep = new repPhieuKetQua_CDHA_34019_A4();//3
                        rep.xrPictureBox1.Image = QLBV.DungChung.Ham.GetLogo();
                        rep.SoPhieu.Value = par4.FirstOrDefault().SoPhieu;
                        rep.MaDieuTri.Value = _mabn;
                        rep.MaBN.Value = par4.FirstOrDefault().IDPerson;
                        rep.TenBV.Value = DungChung.Bien.TenCQ.ToUpper();
                        var hthong = _Data.HTHONGs.FirstOrDefault(o => o.MaBV == DungChung.Bien.MaBV);
                        if (hthong != null)
                        {
                            rep.DiaChiBV.Value = hthong.DiaChi;
                        }
                        rep.TenPhieu.Value = "PHIẾU CHỈ ĐỊNH " + par4.FirstOrDefault().TenTN.ToUpper();
                        rep.KPhong.Value = par4.FirstOrDefault().TenKPth + (!string.IsNullOrWhiteSpace(par4.FirstOrDefault().DiaChiKPth) ? (" (" + par4.FirstOrDefault().DiaChiKPth + ")") : "");
                        rep.CapCuu.Value = (par4.FirstOrDefault().CapCuu == true) ? "X" : "";
                        rep.TenBNhan.Value = par4.FirstOrDefault().TenBNhan.ToUpper();
                        rep.NgaySinh.Value = DungChung.Ham.GhepNgaySinh("/", par4.FirstOrDefault().NamSinh, par4.FirstOrDefault().ThangSinh, par4.FirstOrDefault().NgaySinh);
                        rep.GioiTinh.Value = par4.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                        rep.DiaChi.Value = par4.FirstOrDefault().DChi;
                        rep.NgayGio.Value = "Thái Bình, " + DungChung.Ham.NgaySangChu(par4.FirstOrDefault().NgayThang.Value);
                        //if (!string.IsNullOrWhiteSpace(par4.FirstOrDefault().DTuong) && par4.FirstOrDefault().DTuong == "BHYT")
                        //{
                        //    rep.BHYT.Value = "X";
                        //}
                        //else
                        //    rep.ThuPhi.Value = "X";
                        if (i == 0)
                            rep.BHYT.Value = "X";
                        else
                            rep.ThuPhi.Value = "X";
                        rep.CapCuu.Value = (par4.FirstOrDefault().CapCuu == true) ? "X" : "";

                        if (i == 0)
                        {
                            if (!string.IsNullOrWhiteSpace(par4.FirstOrDefault().SThe))
                            {
                                rep.HanThe.Value = par4.FirstOrDefault().HanBHDen != null ? par4.FirstOrDefault().HanBHDen.Value.ToString("dd/MM/yyyy") : "";
                                rep.HanTu.Value = par4.FirstOrDefault().HanBHTu != null ? par4.FirstOrDefault().HanBHTu.Value.ToString("dd/MM/yyyy") : "";
                                rep.SThe1.Value = par4.FirstOrDefault().SThe.Substring(0, 2);
                                rep.SThe2.Value = par4.FirstOrDefault().SThe.Substring(2, 1);
                                rep.SThe3.Value = par4.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe4.Value = par4.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe5.Value = par4.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe6.Value = par4.FirstOrDefault().SThe.Substring(10, 5);
                            }
                        }
                        //arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, par4.FirstOrDefault().MaKP == null ? 0 : par4.FirstOrDefault().MaKP.Value);
                        rep.paramTenKP.Value = par4.FirstOrDefault().TenKP;
                        var maKp = (par4.FirstOrDefault().MaKP == null ? 0 : par4.FirstOrDefault().MaKP.Value);
                        var kbcd = (from bnkb in _Data.BNKBs.Where(p => p.MaBNhan == _mabn && p.MaKP == maKp)
                                    select bnkb).ToList();
                        if (kbcd != null && kbcd.Count > 0)
                        {
                            rep.BenhChinh.Value = kbcd.FirstOrDefault().ChanDoan + " (" + kbcd.FirstOrDefault().MaICD + ")";
                            rep.BenhPhu.Value = kbcd.FirstOrDefault().BenhKhac;
                            if (!string.IsNullOrWhiteSpace(kbcd.FirstOrDefault().Buong))
                            {
                                var spBuong = kbcd.FirstOrDefault().Buong.Split(';');
                                if (spBuong != null && spBuong.Count() > 0)
                                {
                                    rep.paramBuong.Value = spBuong[spBuong.Count() - 1];
                                }
                            }
                            if (!string.IsNullOrWhiteSpace(kbcd.FirstOrDefault().Giuong))
                            {
                                var spGiuong = kbcd.FirstOrDefault().Giuong.Split(';');
                                if (spGiuong != null && spGiuong.Count() > 0)
                                {
                                    rep.paramGiuong.Value = spGiuong[spGiuong.Count() - 1];
                                }
                            }
                        }
                        string _kq = "";

                        var coKq = par4.Where(o => o.Status == 1).ToList();
                        if (coKq != null && coKq.Count > 0)
                        {
                            _kq = "1. Mô tả: \n";
                            foreach (var a in coKq)
                            {
                                _kq += "  -" + a.KetQua + "\n";
                            }
                            _kq = _kq + "2. Kết luận: \n";
                            foreach (var a in coKq)
                            {
                                _kq += "  -" + a.KetLuan + "\n";
                            }
                        }
                        rep.KQCC.Value = _kq;
                        if (par4.FirstOrDefault().LoiDan != null && par4.FirstOrDefault().LoiDan.ToString() != "")
                            rep.LoiDan.Value = par4.FirstOrDefault().LoiDan;
                        else
                            rep.LoiDan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                        if (par4.FirstOrDefault().NgayTH != null)
                            rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par4.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                        else
                            rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";

                        rep.DataSource = par4.ToList();
                        rep.BindingData();
                        rep.CreateDocument();
                        frmIn frm = new frmIn();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                }
                return;
            }
            #endregion
            int _idcd = 0;// phòng siêu âm bệnh viện 12121 in theo ID chỉ định
            int v1 = 0;
            if (_tieunhom == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.X_QuangKTS)//Đoài yc 10092018
            {
                _tieunhom = DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.X_Quang;
                v1 = 1;
            }
            #region 27023 lấy số trên phiếu : BN nôi trú lấy số bệnh án, bệnh nhân ngoại trú số thứ tự tăng theo ngày
            string _so = "";

            if (DungChung.Bien.MaBV == "27023")
            {
                var bnhan = _Data.BenhNhans.Where(p => p.MaBNhan == _mabn).FirstOrDefault();
                if (bnhan != null)
                {
                    if (bnhan.NoiTru == 1)
                    {
                        var qvv = _Data.VaoViens.Where(parameters => parameters.MaBNhan == _mabn).Select(p => p.SoBA).FirstOrDefault();
                        if (qvv != null)
                            _so = qvv;
                    }
                    else
                    {
                        DateTime tungay = DungChung.Ham.NgayTu(bnhan.NNhap.Value);
                        DateTime denngay = DungChung.Ham.NgayDen(bnhan.NNhap.Value);
                        var qbn = _Data.BenhNhans.Where(p => p.NNhap >= tungay && p.NNhap <= denngay).Where(p => p.NoiTru == 0).OrderBy(p => p.NNhap).ToList();
                        int count = 0;
                        foreach (var a in qbn)
                        {
                            count++;
                            if (a.MaBNhan == _mabn)
                                break;
                        }
                        _so = count.ToString();
                    }
                }

            }
            #endregion
            if ((DungChung.Bien.MaBV == "12121" || DungChung.Bien.MaBV == "27183") && IDCD > 0 && _tieunhom == "Siêu âm")
            {
                var qkp = _Data.KPhongs.Where(p => p.MaKP == DungChung.Bien.MaKP).FirstOrDefault();
                if (qkp != null && qkp.PLoai == DungChung.Bien.st_PhanLoaiKP.CanLamSang)
                    _idcd = IDCD;
            }
            var clsa = _Data.CLS.Where(p => _idcd > 0 ? true : p.IdCLS == _IDCLS).FirstOrDefault();
            DateTime Ngaycd = DateTime.Now;

            if (clsa != null)
            {
                Ngaycd = clsa.NgayThang.Value;
            }

            var par0 = (from bn in _Data.BenhNhans.Where(o => o.MaBNhan == _mabn)
                        join bnkb in _Data.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                        join cls in _Data.CLS.Where(p => (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "24009") ? p.NgayThang == Ngaycd : (_idcd > 0 ? true : p.IdCLS == _IDCLS)) on bn.MaBNhan equals cls.MaBNhan
                        join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                        join chidinh in _Data.ChiDinhs.Where(p => _idcd > 0 ? p.IDCD == IDCD : true) on cls.IdCLS equals chidinh.IdCLS
                        join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                        join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                        join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                        where cls.IdCLS == _IDCLS
                        where bnkb.MaKP == cls.MaKP
                        select new
                        {
                            kp.IsDongY,
                            kp.TenKP,
                            cls.IdCLS,
                            //cls.ChanDoan,
                            ChanDoan = DungChung.Bien.MaBV == "30372" ? bnkb.ChanDoan : cls.ChanDoan,
                            bnkb.ChanDoanBD,
                            bnkb.BenhKhac,
                            bnkb.MaICD2,
                            cls.ChanDoanYHCT,
                            cls.MaICD,
                            chidinh.IDCD,
                            chidinh.Status,
                            cls.MaCBth,// TenCBth = kq1 == null ? "" : kq1.TenCB,
                            dv.MaQD,
                            dv.TenRG,
                            dvct.STT_F,
                            dvct.STT,
                            dvct.TSBT,
                            cls.NgayTH,
                            clsct.KetQua,
                            clsct.DuongDan,
                            cls.NgayThang,
                            bn.DTuong,
                            bn.MaBNhan,
                            bn.TenBNhan,
                            bn.DChi,
                            bn.GTinh,
                            bn.NoiTru,
                            bn.Tuoi,
                            bn.SThe,
                            cls.MaCB,
                            chidinh.ChiDinh1,
                            chidinh.KetLuan,
                            TenDV = DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "24272" ? dv.TenRG : dv.TenDV,
                            chidinh.LoiDan,
                            clsct.DuongDan2,
                            cls.CapCuu,
                            clsct.KQDuKien,
                            clsct.KQTyLe,
                            clsct.KetQua_Rtf,
                            MaKP = cls.MaKP,
                            MaKPth = cls.MaKPth,
                            bn.NgaySinh,
                            bn.ThangSinh,
                            bn.NamSinh,
                            bn.HanBHDen,
                            bn.HanBHTu,
                            dv.IdTieuNhom,
                            dv.MaDV
                        }).OrderBy(p => p.STT_F).Distinct().ToList();
            var par1 = (from cls in _Data.CLS.Where(p => p.IdCLS == _IDCLS)
                        join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                        join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                        select new
                        {
                            dv.MaDV,
                            TenDV = DungChung.Bien.MaBV == "24272" ? dv.TenRG : dv.TenDV,
                            cls.IdCLS
                        }).ToList();
            var par = (from a in par0
                       join cb in _Data.CanBoes on a.MaCB equals cb.MaCB
                       join cbth in _Data.CanBoes on a.MaCBth equals cbth.MaCB into kq
                       join kpTH in _Data.KPhongs on a.MaKPth equals kpTH.MaKP
                       from kq1 in kq.DefaultIfEmpty()
                       select new
                       {
                           a.IsDongY,
                           a.IdCLS,
                           a.NoiTru,
                           a.DuongDan2,
                           a.ChanDoan,
                           a.ChanDoanBD,
                           a.BenhKhac,
                           a.MaICD,
                           a.MaICD2,
                           a.IDCD,
                           a.Status,
                           a.MaCBth,
                           TenCBth = kq1 == null ? "" : kq1.TenCB,
                           a.MaQD,
                           a.STT,
                           a.TSBT,
                           a.NgayTH,
                           a.KetQua,
                           a.DuongDan,
                           a.NgayThang,
                           a.MaBNhan,
                           a.TenBNhan,
                           a.DChi,
                           a.GTinh,
                           a.Tuoi,
                           a.SThe,
                           a.MaCB,
                           a.DTuong,
                           cb.TenCB,
                           cb.ChucVu,
                           a.ChiDinh1,
                           a.KetLuan,
                           a.TenDV,
                           a.TenRG,
                           a.LoiDan,
                           a.CapCuu,
                           a.KQDuKien,
                           a.KQTyLe,
                           a.ChanDoanYHCT,
                           a.MaKP,
                           a.TenKP,
                           a.MaKPth,
                           a.NgaySinh,
                           a.ThangSinh,
                           a.NamSinh,
                           a.HanBHDen,
                           a.HanBHTu,
                           a.KetQua_Rtf
                           //tn.TenTN
                       }).ToList();


            var getKPTH = (from a in _Data.CLS.Where(p => p.MaBNhan == _mabn)
                           join b in _Data.KPhongs on a.MaKPth equals b.MaKP
                           select new { b.TenKP });
            var ttbx = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).ToList();

            int _makp = 0;

            if (par.Count > 0)
            {
                _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                string kieudoc1 = "";
                string kieudoc2 = "";
                var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                            select new
                            {
                                ht.KieuDoc
                            }).ToList();
                kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                //if (DungChung.Bien._Visible_CDHA[1] == false)
                //{
                if (DungChung.Bien.MaBV != "01071" && DungChung.Bien.MaBV != "01049" /*&& DungChung.Bien.MaBV != "27001"*/)
                {
                    if (par.FirstOrDefault().Status == 1)
                    {
                        if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                        {
                            DungChung.Bien._Visible_CDHA[0] = true;
                            DungChung.Bien._Visible_CDHA[2] = true;

                        }
                        if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                        {
                            DungChung.Bien._Visible_CDHA[0] = true;
                            DungChung.Bien._Visible_CDHA[2] = false;

                        }
                        if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                        {
                            DungChung.Bien._Visible_CDHA[0] = false;
                            DungChung.Bien._Visible_CDHA[2] = true;
                        }
                        //if (kieudoc2 == "False")
                        //{
                        //    DungChung.Bien._Visible_CDHA[2] = false;
                        //}
                        //else
                        //{
                        //    DungChung.Bien._Visible_CDHA[2] = true;
                        //}
                        //if (DungChung.Bien.MaBV == "24009")
                        //{
                        //    DungChung.Bien._Visible_CDHA[1] = true;
                        //}
                    }
                    else
                    {
                        DungChung.Bien._Visible_CDHA[2] = false;
                        if (DungChung.Bien.MaBV == "24009")
                        {
                            DungChung.Bien._Visible_CDHA[1] = false;
                        }
                    }
                }
                //}
                if (par.FirstOrDefault().Status == 1)
                {
                    if (DungChung.Bien.MaBV == "24009")
                    {
                        DungChung.Bien._Visible_CDHA[1] = true;
                    }
                }
                else
                {
                    if (DungChung.Bien.MaBV == "24009")
                    {
                        DungChung.Bien._Visible_CDHA[1] = false;
                    }
                }
            }
            var dvucd = par0.FirstOrDefault();

            switch (_tieunhom)
            {
                #region  "Chức năng hô hấp":
                case "Chức năng hô hấp":
                    if (DungChung.Bien.MaBV == "30007")
                    {
                        //XuatPhieuDoCNHH(_IDCLS);
                        using (frmIn frmHH = new frmIn())
                        {
                            using (BaoCao.Rep_PhieuDoHoHap_30007 repHH = new BaoCao.Rep_PhieuDoHoHap_30007())
                            {
                                if (par.Count > 0)
                                {

                                    repHH.TenBN.Value = (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789") ? par.FirstOrDefault().TenBNhan.ToUpper() : par.FirstOrDefault().TenBNhan;


                                    if (DungChung.Bien.MaBV == "27023")
                                        repHH.So.Value = _so;
                                    else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                    {
                                        if (par.Count > 0)
                                        {
                                            int mabn = par.FirstOrDefault().MaBNhan;
                                            var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                            if (qvv != null)
                                                repHH.So.Value = qvv.SoVV;
                                            else
                                                repHH.So.Value = "";
                                        }
                                    }
                                    else
                                        repHH.So.Value = _IDCLS;
                                    repHH.SoThe.Value = par.FirstOrDefault().SThe;
                                    repHH.BSDT.Value = par.FirstOrDefault().MaCB;
                                    repHH.BSCK.Value = par.FirstOrDefault().MaCBth; // Bác sĩ chuyên khoa là CBth
                                    repHH.DChi.Value = par.FirstOrDefault().DChi;
                                    if (DungChung.Bien.MaBV == "24012")
                                    {
                                        repHH.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge_24012);
                                    }
                                    else
                                        repHH.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                    //if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                    //    rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                                    //else
                                    //    rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                                    repHH.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        repHH.Nu.Value = "/";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        repHH.Nam.Value = "/";
                                    }
                                    //rep.KetQua.Value = LD.FirstOrDefault().KetQua;
                                    if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                        repHH.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        repHH.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        repHH.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        repHH.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    repHH.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                                }

                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);

                                repHH.Buong.Value = arrThongTinBNKB[2];
                                repHH.Giuong.Value = arrThongTinBNKB[3];

                                repHH.Khoa.Value = arrThongTinBNKB[4];
                                repHH.KetLuan.Value = par.FirstOrDefault().KetLuan;
                                List<Rep_PhieuDoHoHap_30007.BC> _lCol1 = new List<Rep_PhieuDoHoHap_30007.BC>();

                                if (DungChung.Bien.MaBV != "12122" && DungChung.Bien.MaBV != "30007")
                                {
                                    string[] tenDVHH = new string[4] { " Dự kiến", " Thực tế", " Tỷ lệ giảm %", " " };
                                    foreach (string a in tenDVHH)
                                        _lCol1.Add(new Rep_PhieuDoHoHap_30007.BC { TenDV = a });
                                }
                                else
                                {
                                    if (par.Count > 0)
                                    {
                                        string TSTB1 = "", TSTB2 = "", TSTB3 = "", TSTB4 = "", TSTB5 = "";
                                        string kq1 = "", kq2 = "", kq3 = "", kq4 = "", kq5 = "";
                                        string tyle1 = "", tyle2 = "", tyle3 = "", tyle4 = "", tyle5 = "";
                                        var q1 = par.Where(p => p.STT == 1).FirstOrDefault();
                                        var q2 = par.Where(p => p.STT == 2).FirstOrDefault();
                                        var q3 = par.Where(p => p.STT == 3).FirstOrDefault();
                                        var q4 = par.Where(p => p.STT == 4).FirstOrDefault();
                                        var q5 = par.Where(p => p.STT == 5).FirstOrDefault();
                                        if (q1 != null)
                                        {
                                            TSTB1 = q1.KQDuKien;
                                            kq1 = q1.KetQua;
                                            tyle1 = q1.KQTyLe;
                                        }
                                        if (q2 != null)
                                        {
                                            TSTB2 = q2.KQDuKien;
                                            kq2 = q2.KetQua;
                                            tyle2 = q2.KQTyLe;
                                        }
                                        if (q3 != null)
                                        {
                                            TSTB3 = q3.KQDuKien;
                                            kq3 = q3.KetQua;
                                            tyle3 = q3.KQTyLe;
                                        }
                                        if (q4 != null)
                                        {
                                            TSTB4 = q4.KQDuKien;
                                            kq4 = q4.KetQua;
                                            tyle4 = q4.KQTyLe;
                                        }
                                        if (q5 != null)
                                        {
                                            TSTB5 = q5.KQDuKien;
                                            kq5 = q5.KetQua;
                                            tyle5 = q5.KQTyLe;
                                        }


                                        _lCol1.Add(new Rep_PhieuDoHoHap_30007.BC { TenDV = "Dự kiến", KQ1 = TSTB1, KQ2 = TSTB2, KQ3 = TSTB3, KQ4 = TSTB4, KQ5 = TSTB5 });
                                        _lCol1.Add(new Rep_PhieuDoHoHap_30007.BC { TenDV = "Thực tế", KQ1 = kq1, KQ2 = kq2, KQ3 = kq3, KQ4 = kq4, KQ5 = kq5 });
                                        _lCol1.Add(new Rep_PhieuDoHoHap_30007.BC { TenDV = "Tỷ lệ giảm %", KQ1 = tyle1, KQ2 = tyle2, KQ3 = tyle3, KQ4 = tyle4, KQ5 = tyle5 });
                                        _lCol1.Add(new Rep_PhieuDoHoHap_30007.BC { TenDV = "" });
                                    }
                                }
                                repHH.DataSource = _lCol1;
                                repHH.DataBindings();
                                repHH.CreateDocument();
                                frmHH.prcIN.PrintingSystem = repHH.PrintingSystem;
                                frmHH.ShowDialog();
                            }
                        }
                    }
                    else if (DungChung.Bien.MaBV == "27001")
                    {
                        #region
                        using (frmIn frmHH = new frmIn())
                        {
                            using (BaoCao.Rep_PhieuDoHoHap27001 repHH = new BaoCao.Rep_PhieuDoHoHap27001())
                            {
                                if (par.Count > 0)
                                {

                                    repHH.TenBN.Value = (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789") ? par.FirstOrDefault().TenBNhan.ToUpper() : par.FirstOrDefault().TenBNhan;


                                    if (DungChung.Bien.MaBV == "27023")
                                        repHH.So.Value = _so;
                                    else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                    {
                                        if (par.Count > 0)
                                        {
                                            int mabn = par.FirstOrDefault().MaBNhan;
                                            var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                            if (qvv != null)
                                                repHH.So.Value = qvv.SoVV;
                                            else
                                                repHH.So.Value = "";
                                        }
                                    }
                                    else
                                        repHH.So.Value = _IDCLS;
                                    repHH.SoThe.Value = par.FirstOrDefault().SThe;
                                    repHH.BSDT.Value = par.FirstOrDefault().MaCB;
                                    repHH.BSCK.Value = par.FirstOrDefault().MaCBth; // Bác sĩ chuyên khoa là CBth
                                    repHH.DChi.Value = par.FirstOrDefault().DChi;
                                    if (DungChung.Bien.MaBV == "24012")
                                    {
                                        repHH.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge_24012);
                                    }
                                    else
                                        repHH.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                    //if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                    //    rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                                    //else
                                    //    rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                                    repHH.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        repHH.Nu.Value = "/";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        repHH.Nam.Value = "/";
                                    }
                                    //rep.KetQua.Value = LD.FirstOrDefault().KetQua;
                                    if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                        repHH.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        repHH.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        repHH.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        repHH.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    repHH.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "  Mã ICD: " + DungChung.Ham.FreshString(par.FirstOrDefault().MaICD) : DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan);
                                    //repHH.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                    //repHH.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";


                                }

                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);

                                repHH.Buong.Value = arrThongTinBNKB[2];
                                repHH.Giuong.Value = arrThongTinBNKB[3];

                                repHH.Khoa.Value = arrThongTinBNKB[4];

                                List<Rep_PhieuDoHoHap.BC> _lCol1 = new List<Rep_PhieuDoHoHap.BC>();

                                if (DungChung.Bien.MaBV != "12122")
                                {
                                    string[] tenDVHH = new string[4] { " Dự kiến", " Thực tế", " Tỷ lệ giảm %", " " };
                                    foreach (string a in tenDVHH)
                                        _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = a });
                                }
                                else
                                {
                                    if (par.Count > 0)
                                    {
                                        string TSTB1 = "", TSTB2 = "", TSTB3 = "", TSTB4 = "", TSTB5 = "";
                                        string kq1 = "", kq2 = "", kq3 = "", kq4 = "", kq5 = "";
                                        var q1 = par.Where(p => p.STT == 1).FirstOrDefault();
                                        var q2 = par.Where(p => p.STT == 2).FirstOrDefault();
                                        var q3 = par.Where(p => p.STT == 3).FirstOrDefault();
                                        var q4 = par.Where(p => p.STT == 4).FirstOrDefault();
                                        var q5 = par.Where(p => p.STT == 5).FirstOrDefault();
                                        if (q1 != null)
                                        {
                                            TSTB1 = q1.TSBT;
                                            kq1 = q1.KetQua;
                                        }
                                        if (q2 != null)
                                        {
                                            TSTB2 = q2.TSBT;
                                            kq2 = q2.KetQua;
                                        }
                                        if (q3 != null)
                                        {
                                            TSTB3 = q3.TSBT;
                                            kq3 = q3.KetQua;
                                        }
                                        if (q4 != null)
                                        {
                                            TSTB4 = q4.TSBT;
                                            kq4 = q4.KetQua;
                                        }
                                        if (q5 != null)
                                        {
                                            TSTB5 = q5.TSBT;
                                            kq5 = q5.KetQua;
                                        }


                                        _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "Dự kiến", KQ1 = TSTB1, KQ2 = TSTB2, KQ3 = TSTB3, KQ4 = TSTB4, KQ5 = TSTB5 });
                                        _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "Thực tế", KQ1 = kq1, KQ2 = kq2, KQ3 = kq3, KQ4 = kq4, KQ5 = kq5 });
                                        _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "Tỷ lệ giảm %" });
                                        _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "" });
                                    }
                                }
                                repHH.DataSource = _lCol1;
                                repHH.DataBindings();
                                repHH.CreateDocument();
                                frmHH.prcIN.PrintingSystem = repHH.PrintingSystem;
                                frmHH.ShowDialog();
                            }
                        }
                        #endregion
                    }
                    else if (DungChung.Bien.MaBV == "01830")
                    {
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuDoCNHH_0183 rep3 = new BaoCao.repPhieuDoCNHH_0183();
                        if (par.Count > 0)
                        {
                            rep3.SubBand1.Visible = true;
                            rep3.labmabn.Text = _mabn.ToString();
                            if (DungChung.Bien.MaBV == "20001")
                            {
                                rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            }
                            else
                            {
                                rep3.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            }
                            if (DungChung.Bien.MaBV == "27023")
                                rep3.SoPhieu.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep3.SoPhieu.Value = qvv.SoVV;
                                    else
                                        rep3.SoPhieu.Value = "";
                                }
                            }
                            else
                                rep3.SoPhieu.Value = _IDCLS;
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep3.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep3.Nam.Value = "/";
                            }
                            rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            string str = "";
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                str = par.FirstOrDefault().KetQua;
                            rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep3.ChanDoan.Value = arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];
                            rep3.Khoa.Value = arrThongTinBNKB[4];
                            rep3.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                            rep3.TieuDe2.Value = "KẾT QUẢ " + par.FirstOrDefault().TenDV.ToUpper();
                            rep3.TenRG.Value = par.FirstOrDefault().TenRG;
                        }

                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                    }

                    else
                    {
                        using (frmIn frmHH = new frmIn())
                        {
                            using (BaoCao.Rep_PhieuDoHoHap repHH = new BaoCao.Rep_PhieuDoHoHap())
                            {
                                if (par.Count > 0)
                                {
                                    repHH.TenBN.Value = (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789") ? par.FirstOrDefault().TenBNhan.ToUpper() : par.FirstOrDefault().TenBNhan;


                                    if (DungChung.Bien.MaBV == "27023")
                                        repHH.So.Value = _so;
                                    else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                    {
                                        if (par.Count > 0)
                                        {
                                            int mabn = par.FirstOrDefault().MaBNhan;
                                            var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                            if (qvv != null)
                                                repHH.So.Value = qvv.SoVV;
                                            else
                                                repHH.So.Value = "";
                                        }
                                    }
                                    else
                                        repHH.So.Value = _IDCLS;
                                    repHH.SoThe.Value = par.FirstOrDefault().SThe;
                                    repHH.BSDT.Value = par.FirstOrDefault().MaCB;
                                    repHH.BSCK.Value = par.FirstOrDefault().MaCBth; // Bác sĩ chuyên khoa là CBth
                                    repHH.DChi.Value = par.FirstOrDefault().DChi;
                                    if (DungChung.Bien.MaBV == "24012")
                                    {
                                        repHH.lbl_icd_24012_1.Visible = true;
                                        repHH.lbl_icd_24012_2.Visible = true;
                                        repHH.Parameters["MaICD"].Value = par.First().MaICD /*+ ", " + par.First().MaICD2*/;
                                        repHH.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge_24012);
                                    }
                                    else
                                        repHH.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                    //if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                    //    rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                                    //else
                                    //    rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                                    repHH.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        repHH.Nu.Value = "/";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        repHH.Nam.Value = "/";
                                    }
                                    //rep.KetQua.Value = LD.FirstOrDefault().KetQua;
                                    if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                        repHH.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        repHH.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        repHH.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        repHH.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    repHH.ChanDoan.Value = (par.FirstOrDefault().ChanDoanBD != null || par.FirstOrDefault().ChanDoanBD != "") && DungChung.Bien.MaBV == "24272" ? par.FirstOrDefault().ChanDoanBD + ";" : "";//(arrChanDoanBD!=null&& arrChanDoanBD[0] != "") ? arrChanDoanBD[0] + ";" + arrThongTinBNKB[1] : arrThongTinBNKB[1];
                                    if (DungChung.Bien.MaBV != "24272")
                                    {
                                        repHH.ChanDoan.Value += DungChung.Bien.MaBV == "01049" ? DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "  Mã ICD: " + DungChung.Ham.FreshString(par.FirstOrDefault().MaICD) : DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan);

                                    }
                                    repHH.xrLabel32.Text = repHH.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                    repHH.xrLabel34.Text = repHH.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";


                                }

                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);

                                repHH.Buong.Value = arrThongTinBNKB[2];
                                repHH.Giuong.Value = arrThongTinBNKB[3];

                                repHH.Khoa.Value = arrThongTinBNKB[4];

                                List<Rep_PhieuDoHoHap.BC> _lCol1 = new List<Rep_PhieuDoHoHap.BC>();

                                //if (DungChung.Bien.MaBV != "12122")
                                //{
                                //    string[] tenDVHH = new string[4] { " Dự kiến", " Thực tế", " Tỷ lệ giảm %", " " };
                                //    foreach (string a in tenDVHH)
                                //        _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = a });
                                //}
                                //else
                                //{
                                if (par.Count > 0)
                                {
                                    string TSTB1 = "", TSTB2 = "", TSTB3 = "", TSTB4 = "", TSTB5 = "";
                                    string kq1 = "", kq2 = "", kq3 = "", kq4 = "", kq5 = "";
                                    var q1 = par.Where(p => p.STT == 1).FirstOrDefault();
                                    var q2 = par.Where(p => p.STT == 2).FirstOrDefault();
                                    var q3 = par.Where(p => p.STT == 3).FirstOrDefault();
                                    var q4 = par.Where(p => p.STT == 4).FirstOrDefault();
                                    var q5 = par.Where(p => p.STT == 5).FirstOrDefault();
                                    if (q1 != null)
                                    {
                                        TSTB1 = q1.TSBT;
                                        kq1 = q1.KetQua;
                                    }
                                    if (q2 != null)
                                    {
                                        TSTB2 = q2.TSBT;
                                        kq2 = q2.KetQua;
                                    }
                                    if (q3 != null)
                                    {
                                        TSTB3 = q3.TSBT;
                                        kq3 = q3.KetQua;
                                    }
                                    if (q4 != null)
                                    {
                                        TSTB4 = q4.TSBT;
                                        kq4 = q4.KetQua;
                                    }
                                    if (q5 != null)
                                    {
                                        TSTB5 = q5.TSBT;
                                        kq5 = q5.KetQua;
                                    }


                                    _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "Dự kiến", KQ1 = TSTB1, KQ2 = TSTB2, KQ3 = TSTB3, KQ4 = TSTB4, KQ5 = TSTB5 });
                                    _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "Thực tế", KQ1 = kq1, KQ2 = kq2, KQ3 = kq3, KQ4 = kq4, KQ5 = kq5 });
                                    _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "Tỷ lệ giảm %" });
                                    _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "" });
                                }
                                if (DungChung.Bien.MaBV == "30010")
                                {

                                    int mkpth = Convert.ToInt32(par.FirstOrDefault().MaKPth.Value);
                                    repHH.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                                }//yenbg1
                                 //}
                                repHH.DataSource = _lCol1;
                                repHH.DataBindings();
                                repHH.CreateDocument();
                                frmHH.prcIN.PrintingSystem = repHH.PrintingSystem;
                                frmHH.ShowDialog();
                            }
                        }
                    }
                    break;
                #endregion
                #region X quang
                case "X-Quang":
                    #region 27021
                    DungChung.Bien.checkcls = "X-Quang";
                    if (DungChung.Bien.MaBV == "27021")
                    {
                        using (frmIn frm = new frmIn())
                        {
                            using (BaoCao.repPhieuChupXQuang_27021 rep = new BaoCao.repPhieuChupXQuang_27021())
                            {
                                string _kq = "";
                                if (par.Count > 0)
                                {
                                    rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                                    rep.So.Value = _IDCLS;
                                    rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                    rep.DiaChi.Value = par.FirstOrDefault().DChi;
                                    rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                    if (par.FirstOrDefault().DuongDan2 != null)
                                    { rep.DuongDan.Value = par.FirstOrDefault().DuongDan2; }
                                    if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                        rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                                    else
                                        rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                                    rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep.Nu.Value = "/";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep.Nam.Value = "/";
                                    }
                                    string _yccc = "";
                                    foreach (var a in par)
                                    {
                                        _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                    }
                                    rep.YCCC.Value = _yccc;
                                    foreach (var a in par)
                                    {
                                        _kq += " " + a.KetQua + a.KetLuan + "\n";
                                    }
                                    if (par.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                        rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                        rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                        rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                        rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                    }
                                    rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                                    rep.Macb.Value = par.FirstOrDefault().MaCBth;
                                    rep.KQCC.Value = _kq;
                                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                    rep.Buong.Value = arrThongTinBNKB[2];
                                    rep.Giuong.Value = arrThongTinBNKB[3];

                                    rep.Khoa.Value = arrThongTinBNKB[4];

                                }
                                rep.CreateDocument();
                                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                frm.ShowDialog();
                            }
                        }
                    }
                    #endregion

                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789" || DungChung.Bien.MaBV == "24009" || DungChung.Bien.MaBV == "30012")
                    {
                        using (frmIn frm = new frmIn())
                        {
                            using (BaoCao.repPhieuChupXQuang_01071 rep = new BaoCao.repPhieuChupXQuang_01071())
                            {
                                string _kq = "";
                                string _kl = "";
                                if (par.Count > 0)
                                {
                                    if (DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "01071")
                                    {
                                        string kieudoc1 = "";
                                        string kieudoc2 = "";
                                        var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                                    select new
                                                    {
                                                        ht.KieuDoc
                                                    }).ToList();
                                        kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                                        kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                                        if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                                        {
                                            DungChung.Bien._Visible_CDHA[0] = true;
                                            DungChung.Bien._Visible_CDHA[1] = false;

                                        }
                                        if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                                        {
                                            DungChung.Bien._Visible_CDHA[0] = true;
                                            DungChung.Bien._Visible_CDHA[1] = false;

                                        }
                                        if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                                        {
                                            DungChung.Bien._Visible_CDHA[0] = true;
                                            DungChung.Bien._Visible_CDHA[1] = false;
                                        }
                                    }
                                    rep.colMaBN.Text = _mabn.ToString();
                                    rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    if (DungChung.Bien.MaBV == "27023")
                                        rep.So.Value = _so;
                                    else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                    {
                                        if (par.Count > 0)
                                        {
                                            int mabn = par.FirstOrDefault().MaBNhan;
                                            var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                            if (qvv != null)
                                                rep.So.Value = qvv.SoVV;
                                            else
                                                rep.So.Value = "";
                                        }
                                    }
                                    else
                                        rep.So.Value = _IDCLS;
                                    if (par.FirstOrDefault().NoiTru == 1)
                                    {
                                        var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                        if (sovv != null)
                                            rep.sovv.Text = "Số VV: " + sovv.ToString();
                                    }
                                    rep.colMaBN.Text = _mabn.ToString();
                                    rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                    rep.MaCBth.Value = par.FirstOrDefault().MaCBth;
                                    rep.DiaChi.Value = par.FirstOrDefault().DChi;
                                    rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                    if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                        rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                                    else
                                        rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                                    rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep.Nu.Value = "/";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep.Nam.Value = "/";
                                    }
                                    string _yccc = "";
                                    //if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                                    if (DungChung.Bien.MaBV == "12345")
                                    {
                                        DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH == null ? par.FirstOrDefault().NgayThang.Value : par.FirstOrDefault().NgayTH.Value);
                                        DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH == null ? par.FirstOrDefault().NgayThang.Value : par.FirstOrDefault().NgayTH.Value);
                                        var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                                                     join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                                     join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                                                     join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                                                     select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                                        foreach (var item in _lcls)
                                        {
                                            _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                                        }
                                    }
                                    else if (DungChung.Bien.MaBV != "24009" || DungChung.Bien.MaBV != "27777")
                                    {
                                        foreach (var a in par)
                                        {
                                            if (DungChung.Bien.MaBV == "26007")
                                            {
                                                _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                            }
                                            else
                                                _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                        }
                                    }
                                    rep.YCCC.Value = _yccc;
                                    if (DungChung.Bien.MaBV == "24009" || DungChung.Bien.MaBV == "27777")
                                    {
                                        rep.YCCC.Value = par1.FirstOrDefault().TenDV + par.FirstOrDefault().ChiDinh1;
                                    }
                                    if (DungChung.Bien.MaBV == "20001")
                                    {
                                        _kq = "1. Mô tả: \n";
                                        foreach (var a in par)
                                        {

                                            _kq += "  -" + a.KetQua + "\n";
                                        }
                                        _kq = _kq + "2. Kết luận: \n";
                                        foreach (var a in par)
                                        {
                                            _kq += "  -" + a.KetLuan + "\n";
                                        }
                                    }
                                    else if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                                    {
                                        _kq = "1. Mô tả: \n";
                                        foreach (var a in par)
                                        {
                                            _kq += "  -" + a.KetQua + "\n\n";
                                        }
                                        _kl = _kl + "2. Kết luận: \n";
                                        foreach (var a in par)
                                        {
                                            _kl += "  -" + a.KetLuan + "\n";
                                        }
                                    }
                                    else
                                    {
                                        foreach (var a in par)
                                        {
                                            if (DungChung.Bien.MaBV == "30012")
                                            {
                                                _kq += "  " + a.KetQua + "\r\n\n" + a.KetLuan;
                                            }
                                            else
                                            {
                                                _kq += " " + a.KetQua + "\n" + a.KetLuan + "\n";
                                            }
                                        }
                                    }
                                    if (par.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                        rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                        rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                        rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                        rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                    }

                                    if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                        rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    ////DungChung.Bien.MaBV == "01049" ? DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "  Mã ICD: " + DungChung.Ham.FreshString(par.FirstOrDefault().MaICD) : DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan); //par.FirstOrDefault().ChanDoan;
                                    rep.Macb.Value = par.FirstOrDefault().MaCBth;
                                    rep.KQCC.Value = _kq;
                                    rep.KLCC.Value = _kl;
                                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                    if (par.FirstOrDefault().IsDongY == true && DungChung.Bien.MaBV == "24297")
                                    {
                                        rep.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _mabn, _makp);
                                    }
                                    else
                                    {
                                        rep.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + DungChung.Ham.FreshString(arrThongTinBNKB[0]) : arrThongTinBNKB[1];
                                    }

                                    rep.Buong.Value = arrThongTinBNKB[2];
                                    rep.Giuong.Value = arrThongTinBNKB[3];
                                    rep.Khoa.Value = arrThongTinBNKB[4];
                                    rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                    rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                }
                                rep.CreateDocument();
                                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                frm.ShowDialog();
                            }
                        }
                    }
                    #endregion
                    #region 20001
                    else if (DungChung.Bien.MaBV == "20001")
                    {
                        using (frmIn frm = new frmIn())
                        {
                            using (BaoCao.repPhieuChupXQuang_20001 rep = new BaoCao.repPhieuChupXQuang_20001())
                            {
                                rep.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                                if (DungChung.Bien.MaBV == "24009" && v1 == 1)
                                    rep.TieuDe.Value = "PHIẾU CHỤP X-QUANG SỐ HÓA";
                                string _kq = "";
                                if (par.Count > 0)
                                {
                                    //rep.colMaBN.Text = _mabn.ToString();
                                    rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                                    if (DungChung.Bien.MaBV == "27023")
                                        rep.So.Value = _so;
                                    else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                    {
                                        if (par.Count > 0)
                                        {
                                            int mabn = par.FirstOrDefault().MaBNhan;
                                            var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                            if (qvv != null)
                                                rep.So.Value = qvv.SoVV;
                                            else
                                                rep.So.Value = "";
                                        }
                                    }
                                    else
                                        rep.So.Value = _IDCLS;
                                    rep.colMaBN.Text = "Mã BN: " + _mabn.ToString();
                                    rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                    rep.DiaChi.Value = par.FirstOrDefault().DChi;
                                    rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                    if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                        rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                                    else
                                        rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                                    rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep.Nu.Value = "/";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep.Nam.Value = "/";
                                    }
                                    string _yccc = "";
                                    //if (DungChung.Bien.MaBV == "24009")
                                    //{
                                    //    DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH.Value);
                                    //    DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH.Value);
                                    //    var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                                    //                 join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                    //                 join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                                    //                 join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                                    //                 select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                                    //    foreach (var item in _lcls)
                                    //    {
                                    //        _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                                    //    }
                                    //}
                                    //else
                                    //{
                                    foreach (var a in par)
                                    {
                                        if (DungChung.Bien.MaBV == "26007")
                                        {
                                            _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                        }
                                        else
                                            _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                    }
                                    //}
                                    rep.YCCC.Value = _yccc;

                                    if (DungChung.Bien.MaBV == "20001")
                                    {
                                        _kq = "1. Mô tả: \n";
                                        foreach (var a in par)
                                        {
                                            _kq += "  -" + a.KetQua + "\n";
                                        }
                                        _kq = _kq + "2. Kết luận: \n";
                                        foreach (var a in par)
                                        {
                                            _kq += "  -" + a.KetLuan + "\n";
                                        }
                                    }
                                    else
                                    {
                                        foreach (var a in par)
                                        {
                                            _kq += " " + a.KetQua + "\n" + a.KetLuan + "\n";
                                        }
                                    }
                                    if (par.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                        rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                        rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                        rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                        rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                    }

                                    if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                        rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    //if (DungChung.Bien.MaBV == "20001")
                                    //{
                                    //    rep.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan), DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoanYHCT));// DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoanYHCT) + "[" + DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "]";
                                    //}//DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                                    //else
                                    //    rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                                    //arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                    //if (DungChung.Bien.MaBV == "20001")

                                    //else
                                    rep.Macb.Value = par.FirstOrDefault().MaCBth;
                                    rep.KQCC.Value = _kq;
                                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                    rep.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                                    rep.Buong.Value = arrThongTinBNKB[2];
                                    rep.Giuong.Value = arrThongTinBNKB[3];

                                    rep.Khoa.Value = arrThongTinBNKB[4];
                                    rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                    rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                }
                                rep.CreateDocument();
                                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                frm.ShowDialog();
                            }
                        }
                    }
                    #endregion
                    #region 27023 phiếu cắt lớp vi tính
                    else if (DungChung.Bien.MaBV == "27023" && (dvucd.TenDV.ToLower().Contains("cắt lớp vi tính") || dvucd.TenDV.ToLower().Contains("clvt") || dvucd.TenDV.ToLower().Contains("ct scanner")))
                    {
                        using (frmIn frm = new frmIn())
                        {
                            using (BaoCao.rep_PhieuChupCatLopVT rep = new BaoCao.rep_PhieuChupCatLopVT())
                            {
                                rep.TieuDe.Value = "PHIẾU CHỤP CẮT LỚP VI TÍNH";
                                string _kq = "", _mt = "";
                                if (par.Count > 0)
                                {
                                    //rep.colMaBN.Text = _mabn.ToString();
                                    rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                                    rep.So.Value = _IDCLS;
                                    rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                    rep.DiaChi.Value = par.FirstOrDefault().DChi;
                                    rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                    if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                        rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                                    else
                                        rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                                    rep.SThe.Value = par.FirstOrDefault().SThe;
                                    rep.DTuong.Value = par.FirstOrDefault().DTuong == "BHYT" ? "Bảo hiểm y tế" : par.FirstOrDefault().DTuong;
                                    rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep.Nu.Value = "/";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep.Nam.Value = "/";
                                    }
                                    string _yccc = "";
                                    int a1 = 1;
                                    foreach (var a in par)
                                    {
                                        _yccc += a1 + ". " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                        a1++;
                                    }
                                    //}
                                    rep.YCCC.Value = _yccc;

                                    foreach (var a in par)
                                    {
                                        _mt += "  -" + a.KetQua + "\n";
                                    }
                                    foreach (var a in par)
                                    {
                                        _kq += "  -" + a.KetLuan + "\n";
                                    }

                                    if (par.FirstOrDefault().NgayThang != null)
                                        rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    if (par.FirstOrDefault().ChanDoan.Contains(";"))
                                    {
                                        string[] _arrcd = par.FirstOrDefault().ChanDoan.Split(';');
                                        rep.ChanDoan.Value = _arrcd[0];
                                        string benhphu = "";
                                        for (int i = 1; i < _arrcd.Length; i++)
                                        {
                                            benhphu += _arrcd[i] + ";";
                                        }
                                        rep.BenhKhac.Value = DungChung.Ham.FreshString(benhphu);
                                    }
                                    else
                                        rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                                    rep.Macb.Value = par.FirstOrDefault().MaCBth;
                                    rep.KQCC.Value = _kq;
                                    rep.MoTa.Value = _mt;
                                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                    rep.Buong.Value = arrThongTinBNKB[2];
                                    rep.Giuong.Value = arrThongTinBNKB[3];
                                    rep.Khoa.Value = arrThongTinBNKB[4];
                                }
                                rep.CreateDocument();
                                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                frm.ShowDialog();
                            }
                        }
                    }
                    #endregion
                    #region bv khác
                    else
                    {
                        using (frmIn frm = new frmIn())
                        {
                            using (BaoCao.repPhieuChupXQuang rep = new BaoCao.repPhieuChupXQuang())
                            {
                                if (string.IsNullOrEmpty(ttbx.FirstOrDefault().Email))
                                {
                                    rep.Email.Value = "";
                                }
                                else { rep.Email.Value = ttbx.FirstOrDefault().Email; }
                                if (Mode == true)
                                {
                                    //rep.LoGo30372.Visible = false;
                                }
                                rep.SDT.Value = ttbx.FirstOrDefault().DThoai;
                                rep.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                                //if (DungChung.Bien.MaBV == "30372")
                                //{
                                //    switch (DungChung.Bien.MauIn)
                                //    {
                                //        case 1:
                                //            rep.TieuDe.Value = "PHIẾU CHỤP CẮT LỚP VI TÍNH";
                                //            break;
                                //        case 2:
                                //            rep.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                                //            //rep.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                                //            break;
                                //        case 3:
                                //            rep.TieuDe.Value = "PHIẾU CHỤP X-QUANG ";
                                //            //rep.TieuDe.Value = "PHIẾU CHỤP CẮT LỚP VI TÍNH";
                                //            break;
                                //    }
                                //}
                                if (DungChung.Bien.MaBV == "24009" && v1 == 1)
                                    rep.TieuDe.Value = "PHIẾU CHỤP X-QUANG SỐ HÓA";
                                string _kq = "";
                                string _kl = "";
                                string _ld = "";

                                //DateTime n1 = Frm_CDHA_Moi._Ngaytu;
                                //DateTime n2 = Frm_CDHA_Moi._Ngayden;
                                DateTime n3 = DungChung.Ham.NgayTu(Frm_CDHA_Moi.ngaythuchien); // 14017 in kq xquang trong ngày
                                DateTime n4 = DungChung.Ham.NgayDen(Frm_CDHA_Moi.ngaythuchien);
                                var paz14017 = (from bn in _Data.BenhNhans.Where(o => o.MaBNhan == _mabn) // query paz14017 cho vien 14017
                                                join bnkb in _Data.BNKBs.Where(p => p.MaKP == _makp) on bn.MaBNhan equals bnkb.MaBNhan
                                                join cls in _Data.CLS.Where(p => p.MaKPth == _mkp).Where(p => p.NgayTH >= n3 && p.NgayTH <= n4).Where(p => p.Status == 1) on bn.MaBNhan equals cls.MaBNhan
                                                //join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                                join chidinh in _Data.ChiDinhs.Where(p => p.Status == 1).Where(p => p.IDCD == IDCD) on cls.IdCLS equals chidinh.IdCLS
                                                join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                                                join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                                join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                                                select new
                                                {
                                                    bnkb.IDKB,
                                                    chidinh.LoiDan,
                                                    chidinh.ChiDinh1,
                                                    chidinh.KetLuan,
                                                    clsct.KetQua,
                                                    clsct.KetQua_Rtf,
                                                    cls.IdCLS,
                                                    dv.TenDV,
                                                    dv.TenRG
                                                }).ToList();

                                if (par.Count > 0)
                                {
                                    if (paz14017.Count == 0)
                                    {
                                        //rep.xrTable14.Visible = false;
                                        //rep.xrTable11.Visible = false;
                                        //rep.xrTable2.Visible = false;
                                        //rep.colKQCC.Visible = false;
                                        //if (DungChung.Bien.MaBV == "30372")
                                        //{
                                        //    rep.xrTable15.Visible = false;
                                        //    rep.xrTable12.Visible = false;
                                        //    rep.xrTable13.Visible = false;
                                        //}
                                    }
                                    if (DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "01071")
                                    {
                                        string kieudoc1 = "";
                                        string kieudoc2 = "";
                                        var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                                    select new
                                                    {
                                                        ht.KieuDoc
                                                    }).ToList();
                                        kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                                        kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                                        if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                                        {
                                            DungChung.Bien._Visible_CDHA[0] = false;
                                            DungChung.Bien._Visible_CDHA[1] = true;

                                        }
                                        if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                                        {
                                            DungChung.Bien._Visible_CDHA[0] = false;
                                            DungChung.Bien._Visible_CDHA[1] = true;

                                        }
                                        if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                                        {
                                            DungChung.Bien._Visible_CDHA[0] = false;
                                            DungChung.Bien._Visible_CDHA[1] = true;
                                        }
                                    }
                                    //rep.colMaBN.Text = _mabn.ToString();
                                    //rep. = par.FirstOrDefault().TenCBth;
                                    rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                                    if (DungChung.Bien.MaBV == "27023")
                                        rep.So.Value = _so;
                                    else if (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14017")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                    {
                                        if (par.Count > 0)
                                        {
                                            int mabn = par.FirstOrDefault().MaBNhan;
                                            var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                            if (qvv != null)
                                            {
                                                int ngayvao = qvv.NgayVao.Value.Year;
                                                rep.So.Value = DungChung.Bien.MaBV == "14017" ? qvv.SoBA + "/" + ngayvao : qvv.SoVV;
                                            }
                                            else
                                                rep.So.Value = "";
                                        }
                                    }
                                    else if (DungChung.Bien.MaBV == "24272")
                                    {
                                        rep.So.Value = ".................";
                                    }
                                    else
                                        rep.So.Value = _IDCLS;
                                    rep.CQ.Value = DungChung.Bien.TenCQ.ToUpper();
                                    rep.MaBN.Value = _mabn.ToString();
                                    rep.colMaBN.Text = "Mã BN: " + _mabn.ToString();
                                    rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                    rep.DiaChi.Value = par.FirstOrDefault().DChi;
                                    rep.SoTheFull.Value = par.FirstOrDefault().SThe;
                                    if (DungChung.Bien.MaBV == "24012")
                                    {
                                        rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge_24012);
                                    }
                                    else
                                        rep.Tuoi.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.CalculateAge(par.FirstOrDefault().NgaySinh, par.FirstOrDefault().ThangSinh, par.FirstOrDefault().NamSinh, "tháng.") : DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);

                                    if (DungChung.Bien.MaBV == "14017")
                                    {
                                        if (paz14017.FirstOrDefault().LoiDan != null && paz14017.FirstOrDefault().LoiDan.ToString() != "")
                                        {
                                            foreach (var a in paz14017)
                                            {
                                                _ld += a.LoiDan + "\n";
                                            }
                                        }
                                        else
                                            _ld = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                                    }
                                    else
                                    {
                                        if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua) || !string.IsNullOrEmpty(par.FirstOrDefault().KetLuan))
                                        {
                                            if (string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                            {

                                            }
                                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                                _ld = par.FirstOrDefault().LoiDan;
                                            else
                                                _ld = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                                            if (DungChung.Bien.MaBV == "30372")
                                            {
                                                _kl = par.FirstOrDefault().KetLuan;
                                            }
                                        }
                                        else
                                        {
                                            _ld = null;
                                        }
                                    }

                                    rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep.Nu.Value = DungChung.Bien.MaBV == "14017" ? "Nam" : "/";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep.Nam.Value = DungChung.Bien.MaBV == "14017" ? "Nữ" : "/";
                                    }
                                    string _yccc = "";
                                    string _yccc1 = "";

                                    foreach (var a in par)
                                    {
                                        if (DungChung.Bien.MaBV == "26007")
                                        {
                                            _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                        }
                                        else
                                        {
                                            _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                            //if (DungChung.Bien.MaBV == "24272")
                                            //{
                                            //    _yccc += " " + a.TenRG + " (" + a.ChiDinh1 + ")" + "\n";
                                            //}
                                        }
                                    }
                                    foreach (var a in paz14017)
                                    {
                                        _yccc1 += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                        if (DungChung.Bien.MaBV == "24272")
                                        {
                                            _yccc1 += " " + a.TenRG + " (" + a.ChiDinh1 + ")" + "\n";
                                        }
                                    }
                                    rep.YCCC.Value = DungChung.Bien.MaBV == "14017" ? _yccc1 : _yccc;

                                    if (DungChung.Bien.MaBV == "20001")
                                    {
                                        _kq = "1. Mô tả: \n";
                                        foreach (var a in par)
                                        {
                                            if (a.KetQua_Rtf == null)
                                                _kq += "  " + a.KetQua + "\n";
                                            else
                                                _kq += "  " + a.KetQua_Rtf + "\n";
                                        }
                                        _kq = _kq + "2. Kết luận: \n";
                                        foreach (var a in par)
                                        {
                                            _kq += "  " + a.KetLuan + "\n";
                                        }
                                    }
                                    else
                                    {
                                        if (DungChung.Bien.MaBV == "14017")
                                        {
                                            foreach (var a in paz14017)
                                            {
                                                {
                                                    _kq += a.KetQua + "\r\n\n";
                                                }

                                            }
                                        }
                                        else
                                        {
                                            foreach (var a in par)
                                            {
                                                if (DungChung.Bien.MaBV == "30372")
                                                {
                                                    _kq += a.KetQua + "\r\n\n";
                                                }
                                                else if (DungChung.Bien.MaBV == "24272")
                                                {
                                                    _kq += "  " + a.KetQua;
                                                }
                                                else
                                                {
                                                    _kq += "  " + a.KetQua + "\r\n\n" + a.KetLuan;
                                                }
                                            }
                                        }
                                    }
                                    foreach (var a in paz14017)
                                    {

                                        {
                                            _kl += a.KetLuan + "\r\n";
                                        }
                                    }

                                    if (par.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                        rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                        rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                        rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                        rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                    }

                                    if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                        rep.NgayCD.Value = DungChung.Bien.MaBV == "14017" ? DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, 1) : DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    if (DungChung.Bien.MaBV == "29247" && par.FirstOrDefault().IsDongY == true)
                                    {
                                        rep.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value);
                                    }
                                    else
                                    {
                                        rep.ChanDoan.Value = (par.FirstOrDefault().ChanDoanBD != null || par.FirstOrDefault().ChanDoanBD != "") && DungChung.Bien.MaBV == "24272" ? par.FirstOrDefault().ChanDoanBD + ";" : "";
                                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                        if (DungChung.Bien.MaBV != "24272")
                                        {
                                            rep.ChanDoan.Value += DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                                        }
                                    }
                                    if (DungChung.Bien.MaBV == "24012")
                                    {
                                        rep.lbl_icd_24012_1.Visible = true;
                                        rep.lbl_icd_24012_2.Visible = true;
                                        rep.Parameters["MaICD"].Value = par.First().MaICD /*+ ", " + par.First().MaICD2*/;
                                    }
                                    if (DungChung.Bien.MaBV == "14017")
                                    {
                                        string[] _MaICDarr = DungChung.Ham.getMaICDarrFull_SL(_Data, _mabn, DungChung.Bien.GetICD, paz14017.FirstOrDefault().IDKB);
                                        string[] icd = _MaICDarr[0].Split(';');
                                        string[] tenicd = _MaICDarr[1].Split(';');
                                        string lydo = "";
                                        if (icd.Length <= tenicd.Length)
                                        {
                                            for (int i = 0; i < icd.Length; i++)
                                            {
                                                lydo += " " + icd[i] + "-" + tenicd[i] + ";";
                                            }
                                            if (icd.Length < tenicd.Length)
                                            {
                                                int cut1 = tenicd.Length - icd.Length;
                                                int cut = tenicd.Length - cut1;
                                                string mab1k = DungChung.Ham.FreshString(string.Join(";", tenicd.Skip(cut)));
                                                lydo += " " + mab1k + ";";
                                            }
                                        }
                                        else
                                        {
                                            for (int i = 0; i < tenicd.Length; i++)
                                            {
                                                lydo += " " + icd[i] + "-" + tenicd[i] + ";";
                                            }
                                        }

                                        rep.ChanDoan.Value = " " + DungChung.Ham.FreshString(lydo);
                                    }

                                    if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua) || !string.IsNullOrEmpty(par.FirstOrDefault().KetLuan))
                                    {
                                        rep.Loidan.Value = _ld;
                                        rep.Macb.Value = par.FirstOrDefault().MaCBth;
                                        rep.KQCC.Value = _kq;
                                        if (DungChung.Bien.MaBV == "24272")
                                        {
                                            rep.KetLuan.Value = "KẾT LUẬN: " + par.FirstOrDefault().KetLuan.ToUpper(); ;
                                        }

                                        if (par.FirstOrDefault().NgayTH != null)
                                        {
                                            rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                            if (DungChung.Bien.MaBV == "24272")
                                            {
                                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, 1);
                                            }
                                        }
                                        else
                                            rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";

                                        if (DungChung.Bien.MaBV == "30372")
                                        {
                                            _kl = par.FirstOrDefault().KetLuan;
                                        }
                                    }
                                    else
                                    {
                                        rep.Loidan.Value = null;
                                        rep.KQCC.Value = null;
                                        rep.Macb.Value = null;
                                        rep.NgayTH.Value = null;
                                        rep.xrTable15.Visible = false;
                                        rep.xrTableCell24.Visible = false;
                                        rep.xrLabel88.Visible = false;
                                        rep.xrTableCell17.Visible = false;
                                        if (DungChung.Bien.MaBV == "30012" || DungChung.Bien.MaBV == "30010")
                                        {
                                            rep.SubBand4.Visible = false;
                                            rep.SubBand5_30372.Visible = false;
                                        }
                                    }
                                    rep.Buong.Value = arrThongTinBNKB[2];
                                    rep.Giuong.Value = arrThongTinBNKB[3];

                                    rep.Khoa.Value = arrThongTinBNKB[4];
                                    if (DungChung.Bien.MaBV != "24272")
                                    {
                                        rep.KetLuan.Value = _kl;
                                    }
                                    rep.xrLabel4.Text = rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                    rep.xrLabel6.Text = rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                }
                                if (DungChung.Bien.MaBV == "30010")
                                {
                                    int MKPTH = par.FirstOrDefault().MaKPth.Value;
                                    rep.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == MKPTH).Select(p => p.TenKP).FirstOrDefault().ToString();
                                }

                                rep.CreateDocument();
                                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                frm.ShowDialog();
                            }
                        }
                    }
                    #endregion
                    break;

                #endregion
                #region X quang CR
                case "X-Quang CR":
                    #region 27021
                    if (DungChung.Bien.MaBV == "27021")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang_27021 rep = new BaoCao.repPhieuChupXQuang_27021();
                        string _kq = "";
                        if (par.Count > 0)
                        {
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            rep.So.Value = _IDCLS;
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().DuongDan2 != null)
                            { rep.DuongDan.Value = par.FirstOrDefault().DuongDan2; }
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            foreach (var a in par)
                            {
                                _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            rep.YCCC.Value = _yccc;
                            foreach (var a in par)
                            {
                                _kq += " " + a.KetQua + a.KetLuan + "\n";
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];

                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion

                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                    {
                        using (frmIn frm = new frmIn())
                        {
                            using (BaoCao.repPhieuChupXQuang_01071 rep = new BaoCao.repPhieuChupXQuang_01071())
                            {
                                string _kq = "";
                                if (par.Count > 0)
                                {

                                    rep.colMaBN.Text = _mabn.ToString();
                                    rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    if (DungChung.Bien.MaBV == "27023")
                                        rep.So.Value = _so;
                                    else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                    {
                                        if (par.Count > 0)
                                        {
                                            int mabn = par.FirstOrDefault().MaBNhan;
                                            var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                            if (qvv != null)
                                                rep.So.Value = qvv.SoVV;
                                            else
                                                rep.So.Value = "";
                                        }
                                    }
                                    else
                                        rep.So.Value = _IDCLS;
                                    if (par.FirstOrDefault().NoiTru == 1)
                                    {
                                        var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                        if (sovv != null)
                                            rep.sovv.Text = "Số VV: " + sovv.ToString();
                                    }
                                    rep.colMaBN.Text = _mabn.ToString();
                                    rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                    rep.DiaChi.Value = par.FirstOrDefault().DChi;
                                    rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                    if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                        rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                                    else
                                        rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                                    rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep.Nu.Value = "/";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep.Nam.Value = "/";
                                    }
                                    string _yccc = "";
                                    if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                                    {
                                        DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH.Value);
                                        DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH.Value);
                                        var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                                                     join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                                     join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                                                     join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                                                     select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                                        foreach (var item in _lcls)
                                        {
                                            _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                                        }
                                    }
                                    else
                                    {
                                        foreach (var a in par)
                                        {
                                            if (DungChung.Bien.MaBV == "26007")
                                            {
                                                _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                            }
                                            else
                                                _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                        }
                                    }
                                    rep.YCCC.Value = _yccc;

                                    if (DungChung.Bien.MaBV == "20001")
                                    {
                                        _kq = "1. Mô tả: \n";
                                        foreach (var a in par)
                                        {
                                            _kq += "  -" + a.KetQua + "\n";
                                        }
                                        _kq = _kq + "2. Kết luận: \n";
                                        foreach (var a in par)
                                        {
                                            _kq += "  -" + a.KetLuan + "\n";
                                        }
                                    }
                                    else
                                    {
                                        foreach (var a in par)
                                        {
                                            _kq += " " + a.KetQua + "\n" + a.KetLuan + "\n";
                                        }
                                    }
                                    if (par.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                        rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                        rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                        rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                        rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                    }

                                    if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                        rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    ////DungChung.Bien.MaBV == "01049" ? DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "  Mã ICD: " + DungChung.Ham.FreshString(par.FirstOrDefault().MaICD) : DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan); //par.FirstOrDefault().ChanDoan;
                                    rep.Macb.Value = par.FirstOrDefault().MaCBth;
                                    rep.KQCC.Value = _kq;
                                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                    rep.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + DungChung.Ham.FreshString(arrThongTinBNKB[0]) : arrThongTinBNKB[1];
                                    rep.Buong.Value = arrThongTinBNKB[2];
                                    rep.Giuong.Value = arrThongTinBNKB[3];

                                    rep.Khoa.Value = arrThongTinBNKB[4];
                                    rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                    rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                }
                                rep.CreateDocument();
                                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                frm.ShowDialog();
                            }
                        }
                    }
                    #endregion
                    #region 20001
                    else if (DungChung.Bien.MaBV == "20001")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang_20001 rep = new BaoCao.repPhieuChupXQuang_20001();
                        rep.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                        if (DungChung.Bien.MaBV == "24009" && v1 == 1)
                            rep.TieuDe.Value = "PHIẾU CHỤP X-QUANG SỐ HÓA";
                        string _kq = "";
                        if (par.Count > 0)
                        {
                            //rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            if (DungChung.Bien.MaBV == "27023")
                                rep.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep.So.Value = qvv.SoVV;
                                    else
                                        rep.So.Value = "";
                                }
                            }
                            else
                                rep.So.Value = _IDCLS;
                            rep.colMaBN.Text = "Mã BN: " + _mabn.ToString();
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            //if (DungChung.Bien.MaBV == "24009")
                            //{
                            //    DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH.Value);
                            //    DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH.Value);
                            //    var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                            //                 join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                            //                 join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                            //                 join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                            //                 select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                            //    foreach (var item in _lcls)
                            //    {
                            //        _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                            //    }
                            //}
                            //else
                            //{
                            foreach (var a in par)
                            {
                                if (DungChung.Bien.MaBV == "26007")
                                {
                                    _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                }
                                else
                                    _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            //}
                            rep.YCCC.Value = _yccc;

                            if (DungChung.Bien.MaBV == "20001")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetQua + "\n";
                                }
                                _kq = _kq + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetLuan + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    _kq += " " + a.KetQua + "\n" + a.KetLuan + "\n";
                                }
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            //if (DungChung.Bien.MaBV == "20001")
                            //{
                            //    rep.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan), DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoanYHCT));// DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoanYHCT) + "[" + DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "]";
                            //}//DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                            //else
                            //    rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            //arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            //if (DungChung.Bien.MaBV == "20001")

                            //else
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    #region 27023 phiếu cắt lớp vi tính
                    else if (DungChung.Bien.MaBV == "27023" && (dvucd.TenDV.ToLower().Contains("cắt lớp vi tính") || dvucd.TenDV.ToLower().Contains("clvt") || dvucd.TenDV.ToLower().Contains("ct scanner")))
                    {
                        using (frmIn frm = new frmIn())
                        {
                            using (BaoCao.rep_PhieuChupCatLopVT rep = new BaoCao.rep_PhieuChupCatLopVT())
                            {
                                rep.TieuDe.Value = "PHIẾU CHỤP CẮT LỚP VI TÍNH";
                                string _kq = "", _mt = "";
                                if (par.Count > 0)
                                {
                                    //rep.colMaBN.Text = _mabn.ToString();
                                    rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                                    rep.So.Value = _IDCLS;
                                    rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                    rep.DiaChi.Value = par.FirstOrDefault().DChi;
                                    rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                    if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                        rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                                    else
                                        rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                                    rep.SThe.Value = par.FirstOrDefault().SThe;
                                    rep.DTuong.Value = par.FirstOrDefault().DTuong == "BHYT" ? "Bảo hiểm y tế" : par.FirstOrDefault().DTuong;
                                    rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep.Nu.Value = "/";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep.Nam.Value = "/";
                                    }
                                    string _yccc = "";
                                    int a1 = 1;
                                    foreach (var a in par)
                                    {
                                        _yccc += a1 + ". " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                        a1++;
                                    }
                                    //}
                                    rep.YCCC.Value = _yccc;

                                    foreach (var a in par)
                                    {
                                        _mt += "  -" + a.KetQua + "\n";
                                    }
                                    foreach (var a in par)
                                    {
                                        _kq += "  -" + a.KetLuan + "\n";
                                    }

                                    if (par.FirstOrDefault().NgayThang != null)
                                        rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    if (par.FirstOrDefault().ChanDoan.Contains(";"))
                                    {
                                        string[] _arrcd = par.FirstOrDefault().ChanDoan.Split(';');
                                        rep.ChanDoan.Value = _arrcd[0];
                                        string benhphu = "";
                                        for (int i = 1; i < _arrcd.Length; i++)
                                        {
                                            benhphu += _arrcd[i] + ";";
                                        }
                                        rep.BenhKhac.Value = DungChung.Ham.FreshString(benhphu);
                                    }
                                    else
                                        rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                                    rep.Macb.Value = par.FirstOrDefault().MaCBth;
                                    rep.KQCC.Value = _kq;
                                    rep.MoTa.Value = _mt;
                                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                    rep.Buong.Value = arrThongTinBNKB[2];
                                    rep.Giuong.Value = arrThongTinBNKB[3];
                                    rep.Khoa.Value = arrThongTinBNKB[4];
                                }
                                rep.CreateDocument();
                                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                frm.ShowDialog();
                            }
                        }
                    }
                    #endregion
                    #region bv khác
                    else
                    {
                        using (frmIn frm = new frmIn())
                        {
                            using (BaoCao.repPhieuChupXQuang rep = new BaoCao.repPhieuChupXQuang())
                            {
                                rep.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                                if (DungChung.Bien.MaBV == "24009" && v1 == 1)
                                    rep.TieuDe.Value = "PHIẾU CHỤP X-QUANG SỐ HÓA";
                                string _kq = "";
                                if (par.Count > 0)
                                {
                                    //rep.colMaBN.Text = _mabn.ToString();
                                    rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                                    if (DungChung.Bien.MaBV == "27023")
                                        rep.So.Value = _so;
                                    else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                    {
                                        if (par.Count > 0)
                                        {
                                            int mabn = par.FirstOrDefault().MaBNhan;
                                            var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                            if (qvv != null)
                                                rep.So.Value = qvv.SoVV;
                                            else
                                                rep.So.Value = "";
                                        }
                                    }
                                    else
                                        rep.So.Value = _IDCLS;
                                    rep.colMaBN.Text = "Mã BN: " + _mabn.ToString();
                                    rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                    rep.DiaChi.Value = par.FirstOrDefault().DChi;
                                    if (DungChung.Bien.MaBV == "24012")
                                    {
                                        rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge_24012);
                                    }
                                    else
                                        rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                    if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                        rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                                    else
                                        rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                                    rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep.Nu.Value = "/";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep.Nam.Value = "/";
                                    }
                                    string _yccc = "";
                                    //if (DungChung.Bien.MaBV == "24009")
                                    //{
                                    //    DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH.Value);
                                    //    DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH.Value);
                                    //    var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                                    //                 join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                    //                 join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                                    //                 join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                                    //                 select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                                    //    foreach (var item in _lcls)
                                    //    {
                                    //        _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                                    //    }
                                    //}
                                    //else
                                    //{
                                    foreach (var a in par)
                                    {
                                        if (DungChung.Bien.MaBV == "26007")
                                        {
                                            _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                        }
                                        else
                                        {
                                            _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                            if (DungChung.Bien.MaBV == "24272")
                                            {
                                                _yccc += " " + a.TenRG + " (" + a.ChiDinh1 + ")" + "\n";
                                            }
                                        }
                                    }
                                    //}
                                    rep.YCCC.Value = _yccc;

                                    if (DungChung.Bien.MaBV == "20001")
                                    {
                                        _kq = "1. Mô tả: \n";
                                        foreach (var a in par)
                                        {
                                            _kq += "  -" + a.KetQua + "\n";
                                        }
                                        _kq = _kq + "2. Kết luận: \n";
                                        foreach (var a in par)
                                        {
                                            _kq += "  -" + a.KetLuan + "\n";
                                        }
                                    }
                                    else
                                    {
                                        foreach (var a in par)
                                        {
                                            //if (a.KetQua_Rtf == null)
                                            _kq += "  -" + a.KetQua + "\r\n" + a.KetLuan;
                                            //else
                                            // _kq += "  -" + a.KetQua_Rtf + "\r\n" + a.KetLuan;
                                        }
                                    }
                                    if (par.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                        rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                        rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                        rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                        rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                    }

                                    if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                        rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                                    rep.Macb.Value = par.FirstOrDefault().MaCBth;
                                    rep.KQCC.Value = _kq;
                                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                    rep.Buong.Value = arrThongTinBNKB[2];
                                    rep.Giuong.Value = arrThongTinBNKB[3];

                                    rep.Khoa.Value = arrThongTinBNKB[4];
                                    rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                    rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                }
                                rep.CreateDocument();
                                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                frm.ShowDialog();
                            }
                        }
                    }
                    #endregion
                    break;

                #endregion
                #region X quang DR
                case "X-Quang DR":
                    #region 27021
                    if (DungChung.Bien.MaBV == "27021")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang_27021 rep = new BaoCao.repPhieuChupXQuang_27021();
                        string _kq = "";
                        if (par.Count > 0)
                        {
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            rep.So.Value = _IDCLS;
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().DuongDan2 != null)
                            { rep.DuongDan.Value = par.FirstOrDefault().DuongDan2; }
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            foreach (var a in par)
                            {
                                _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            rep.YCCC.Value = _yccc;
                            foreach (var a in par)
                            {
                                _kq += " " + a.KetQua + a.KetLuan + "\n";
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];

                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion

                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang_01071 rep = new BaoCao.repPhieuChupXQuang_01071();
                        string _kq = "";
                        if (par.Count > 0)
                        {

                            rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            if (DungChung.Bien.MaBV == "27023")
                                rep.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep.So.Value = qvv.SoVV;
                                    else
                                        rep.So.Value = "";
                                }
                            }
                            else
                                rep.So.Value = _IDCLS;
                            if (par.FirstOrDefault().NoiTru == 1)
                            {
                                var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                if (sovv != null)
                                    rep.sovv.Text = "Số VV: " + sovv.ToString();
                            }
                            rep.colMaBN.Text = _mabn.ToString();
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                            {
                                DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH.Value);
                                DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH.Value);
                                var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                                             join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                             join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                                             join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                                             select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                                foreach (var item in _lcls)
                                {
                                    _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    if (DungChung.Bien.MaBV == "26007")
                                    {
                                        _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                    }
                                    else
                                        _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                }
                            }
                            rep.YCCC.Value = _yccc;

                            if (DungChung.Bien.MaBV == "20001")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetQua + "\n";
                                }
                                _kq = _kq + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetLuan + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    _kq += " " + a.KetQua + "\n" + a.KetLuan + "\n";
                                }
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            ////DungChung.Bien.MaBV == "01049" ? DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "  Mã ICD: " + DungChung.Ham.FreshString(par.FirstOrDefault().MaICD) : DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan); //par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + DungChung.Ham.FreshString(arrThongTinBNKB[0]) : arrThongTinBNKB[1];
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    #region 20001
                    else if (DungChung.Bien.MaBV == "20001")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang_20001 rep = new BaoCao.repPhieuChupXQuang_20001();
                        rep.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                        if (DungChung.Bien.MaBV == "24009" && v1 == 1)
                            rep.TieuDe.Value = "PHIẾU CHỤP X-QUANG SỐ HÓA";
                        string _kq = "";
                        if (par.Count > 0)
                        {
                            //rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            if (DungChung.Bien.MaBV == "27023")
                                rep.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep.So.Value = qvv.SoVV;
                                    else
                                        rep.So.Value = "";
                                }
                            }
                            else
                                rep.So.Value = _IDCLS;
                            rep.colMaBN.Text = "Mã BN: " + _mabn.ToString();
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            //if (DungChung.Bien.MaBV == "24009")
                            //{
                            //    DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH.Value);
                            //    DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH.Value);
                            //    var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                            //                 join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                            //                 join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                            //                 join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                            //                 select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                            //    foreach (var item in _lcls)
                            //    {
                            //        _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                            //    }
                            //}
                            //else
                            //{
                            foreach (var a in par)
                            {
                                if (DungChung.Bien.MaBV == "26007")
                                {
                                    _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                }
                                else
                                    _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            //}
                            rep.YCCC.Value = _yccc;

                            if (DungChung.Bien.MaBV == "20001")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetQua + "\n";
                                }
                                _kq = _kq + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetLuan + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    _kq += " " + a.KetQua + "\n" + a.KetLuan + "\n";
                                }
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            //if (DungChung.Bien.MaBV == "20001")
                            //{
                            //    rep.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan), DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoanYHCT));// DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoanYHCT) + "[" + DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "]";
                            //}//DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                            //else
                            //    rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            //arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            //if (DungChung.Bien.MaBV == "20001")

                            //else
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    #region 27023 phiếu cắt lớp vi tính
                    else if (DungChung.Bien.MaBV == "27023" && (dvucd.TenDV.ToLower().Contains("cắt lớp vi tính") || dvucd.TenDV.ToLower().Contains("clvt") || dvucd.TenDV.ToLower().Contains("ct scanner")))
                    {
                        frmIn frm = new frmIn();
                        BaoCao.rep_PhieuChupCatLopVT rep = new BaoCao.rep_PhieuChupCatLopVT();
                        rep.TieuDe.Value = "PHIẾU CHỤP CẮT LỚP VI TÍNH";
                        string _kq = "", _mt = "";
                        if (par.Count > 0)
                        {
                            //rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            rep.So.Value = _IDCLS;
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.SThe.Value = par.FirstOrDefault().SThe;
                            rep.DTuong.Value = par.FirstOrDefault().DTuong == "BHYT" ? "Bảo hiểm y tế" : par.FirstOrDefault().DTuong;
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            int a1 = 1;
                            foreach (var a in par)
                            {
                                _yccc += a1 + ". " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                a1++;
                            }
                            //}
                            rep.YCCC.Value = _yccc;

                            foreach (var a in par)
                            {
                                _mt += "  -" + a.KetQua + "\n";
                            }
                            foreach (var a in par)
                            {
                                _kq += "  -" + a.KetLuan + "\n";
                            }

                            if (par.FirstOrDefault().NgayThang != null)
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().ChanDoan.Contains(";"))
                            {
                                string[] _arrcd = par.FirstOrDefault().ChanDoan.Split(';');
                                rep.ChanDoan.Value = _arrcd[0];
                                string benhphu = "";
                                for (int i = 1; i < _arrcd.Length; i++)
                                {
                                    benhphu += _arrcd[i] + ";";
                                }
                                rep.BenhKhac.Value = DungChung.Ham.FreshString(benhphu);
                            }
                            else
                                rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            rep.MoTa.Value = _mt;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];
                            rep.Khoa.Value = arrThongTinBNKB[4];
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    #region bv khác
                    else
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang rep = new BaoCao.repPhieuChupXQuang();
                        rep.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                        if (DungChung.Bien.MaBV == "24009" && v1 == 1)
                            rep.TieuDe.Value = "PHIẾU CHỤP X-QUANG SỐ HÓA";
                        string _kq = "";
                        if (par.Count > 0)
                        {
                            //rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            if (DungChung.Bien.MaBV == "27023")
                                rep.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep.So.Value = qvv.SoVV;
                                    else
                                        rep.So.Value = "";
                                }
                            }
                            else
                                rep.So.Value = _IDCLS;
                            rep.colMaBN.Text = "Mã BN: " + _mabn.ToString();
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            //if (DungChung.Bien.MaBV == "24009")
                            //{
                            //    DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH.Value);
                            //    DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH.Value);
                            //    var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                            //                 join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                            //                 join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                            //                 join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                            //                 select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                            //    foreach (var item in _lcls)
                            //    {
                            //        _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                            //    }
                            //}
                            //else
                            //{
                            foreach (var a in par)
                            {
                                if (DungChung.Bien.MaBV == "26007")
                                {
                                    _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                }
                                else
                                {
                                    _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                    if (DungChung.Bien.MaBV == "24272")
                                    {
                                        _yccc += " " + a.TenRG + " (" + a.ChiDinh1 + ")" + "\n";
                                    }
                                }
                            }
                            //}
                            rep.YCCC.Value = _yccc;

                            if (DungChung.Bien.MaBV == "20001")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetQua + "\n";
                                }
                                _kq = _kq + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetLuan + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    //if (a.KetQua_Rtf == null)
                                    _kq += "  -" + a.KetQua + "\r\n" + a.KetLuan;
                                    //else
                                    //_kq += "  -" + a.KetQua_Rtf + "\r\n" + a.KetLuan;
                                }
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    break;

                #endregion
                #region xquang CT
                case "X-Quang CT":
                    #region 12122
                    DungChung.Bien.checkcls = "X-Quang CT"; //minhvd
                    if (DungChung.Bien.MaBV == "12122" || DungChung.Bien.MaBV == "12121")
                    {
                        frmIn frmct = new frmIn();
                        Nam_0994.repPhieuChupCTScaner repct = new Nam_0994.repPhieuChupCTScaner();
                        string _kqct = "", _motact = "";
                        string[] arrThongTinBNKB;
                        if (par.Count > 0)
                        {
                            repct.TenBN.Value = par.FirstOrDefault().TenBNhan;

                            repct.So.Value = _IDCLS;
                            repct.MaCBDT.Value = par.FirstOrDefault().TenCB;
                            repct.DChi.Value = par.FirstOrDefault().DChi;
                            repct.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, par.FirstOrDefault().MaBNhan, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                repct.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                repct.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            repct.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                repct.GTinh.Value = "Nam";
                            }
                            else if (gioiTinh == 0)
                            {
                                repct.GTinh.Value = "N?";
                            }
                            string _yccc = "";
                            foreach (var a in par)
                            {
                                _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            repct.YCCC.Value = _yccc;
                            foreach (var a in par)
                            {
                                _motact += " " + a.KetQua + a.KetLuan + "\n";
                            }
                            DateTime NgayThang = new DateTime();
                            NgayThang = par.FirstOrDefault().NgayThang ?? System.DateTime.Now.Date;
                            DateTime NgayTH = new DateTime();
                            NgayTH = par.FirstOrDefault().NgayTH ?? System.DateTime.Now.Date;
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                repct.NgayCD.Value = DungChung.Ham.NgaySangChu(NgayThang, DungChung.Bien.FormatDate);
                            else
                                repct.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                repct.NgayTH.Value = DungChung.Ham.NgaySangChu(NgayTH, DungChung.Bien.FormatDate);
                            else
                                repct.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            repct.ChuanDoan.Value = par.FirstOrDefault().ChanDoan;
                            repct.MaCBth.Value = par.FirstOrDefault().TenCBth;
                            repct.Ketluan.Value = _motact;
                            int _maBN = par.FirstOrDefault().MaBNhan;
                            int _maKP = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value; //par.FirstOrDefault().MaKP ??0;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _maBN, _maKP, true);
                            repct.Buong.Value = arrThongTinBNKB[2];
                            repct.Giuong.Value = arrThongTinBNKB[3];
                            repct.Khoa.Value = arrThongTinBNKB[4];
                        }
                        repct.CreateDocument();
                        frmct.prcIN.PrintingSystem = repct.PrintingSystem;
                        frmct.ShowDialog();
                    }
                    #endregion
                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                    {
                        using (frmIn frmct = new frmIn())
                        {
                            using (BaoCao.repPhieuChupXQuang_01071 repct = new BaoCao.repPhieuChupXQuang_01071())
                            {
                                string _kqct = "";
                                if (par.Count > 0)
                                {
                                    if (DungChung.Bien.MaBV == "01071")
                                    {
                                        string kieudoc1 = "";
                                        string kieudoc2 = "";
                                        var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                                    select new
                                                    {
                                                        ht.KieuDoc
                                                    }).ToList();
                                        kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                                        kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                                        if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                                        {
                                            DungChung.Bien._Visible_CDHA[0] = true;
                                            DungChung.Bien._Visible_CDHA[1] = false;
                                        }
                                        if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                                        {
                                            DungChung.Bien._Visible_CDHA[0] = true;
                                            DungChung.Bien._Visible_CDHA[1] = false;

                                        }
                                        if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                                        {
                                            DungChung.Bien._Visible_CDHA[0] = true;
                                            DungChung.Bien._Visible_CDHA[1] = false;
                                        }
                                    }
                                    repct.colMaBN.Text = _mabn.ToString();
                                    repct.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                    repct.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                    repct.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    if (DungChung.Bien.MaBV == "27023")
                                        repct.So.Value = _so;
                                    else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                    {
                                        if (par.Count > 0)
                                        {
                                            int mabn = par.FirstOrDefault().MaBNhan;
                                            var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                            if (qvv != null)
                                                repct.So.Value = qvv.SoVV;
                                            else
                                                repct.So.Value = "";
                                        }
                                    }
                                    else
                                        repct.So.Value = _IDCLS;
                                    if (par.FirstOrDefault().NoiTru == 1)
                                    {
                                        var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                        if (sovv != null)
                                            repct.sovv.Text = "Số VV: " + sovv.ToString();
                                    }
                                    repct.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                    repct.DiaChi.Value = par.FirstOrDefault().DChi;
                                    repct.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                    if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                        repct.Loidan.Value = par.FirstOrDefault().LoiDan;
                                    else
                                        repct.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                                    repct.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        repct.Nu.Value = "/";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        repct.Nam.Value = "/";
                                    }
                                    string _yccc = "";
                                    foreach (var a in par)
                                    {
                                        _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                    }
                                    repct.YCCC.Value = _yccc;
                                    foreach (var a in par)
                                    {
                                        _kqct += " " + a.KetQua + a.KetLuan + "\n";
                                    }
                                    if (par.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        repct.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                        repct.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                        repct.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                        repct.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                        repct.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                    }

                                    if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                        repct.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        repct.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        repct.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        repct.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    repct.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "  Mã ICD: " + DungChung.Ham.FreshString(par.FirstOrDefault().MaICD) : DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan);//par.FirstOrDefault().ChanDoan;
                                    repct.Macb.Value = par.FirstOrDefault().MaCBth;
                                    repct.KQCC.Value = _kqct;
                                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                    repct.Buong.Value = arrThongTinBNKB[2];
                                    repct.Giuong.Value = arrThongTinBNKB[3];


                                    repct.Khoa.Value = arrThongTinBNKB[4];

                                }
                                repct.CreateDocument();
                                frmct.prcIN.PrintingSystem = repct.PrintingSystem;
                                frmct.ShowDialog();
                            }
                        }
                    }
                    #endregion
                    #region bv khác
                    else
                    {

                        using (frmIn frmct = new frmIn())
                        {
                            using (BaoCao.repPhieuChupXQuang repct = new BaoCao.repPhieuChupXQuang())
                            {
                                repct.TieuDe.Value = DungChung.Bien.MaBV == "24009" ? "PHIẾU CHỤP CẮT LỚP VI TÍNH" : "PHIẾU CHIẾU CHỤP X-QUANG";
                                if (DungChung.Bien.MaBV == "30372")
                                {
                                    switch (DungChung.Bien.MauIn)
                                    {
                                        case 1:
                                            repct.TieuDe.Value = "PHIẾU CHỤP CẮT LỚP VI TÍNH";
                                            break;
                                        case 2:
                                            repct.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                                            break;
                                        case 3:
                                            repct.TieuDe.Value = "PHIẾU CHỤP X-QUANG";
                                            break;
                                    }
                                }
                                string _kqct = "";
                                string _kl = "";
                                DateTime n3 = DungChung.Ham.NgayTu(Frm_CDHA_Moi.ngaythuchien);
                                DateTime n4 = DungChung.Ham.NgayDen(Frm_CDHA_Moi.ngaythuchien);
                                var paz14017 = (from bn in _Data.BenhNhans.Where(o => o.MaBNhan == _mabn) // query paz14017 cho vien 14017
                                                join bnkb in _Data.BNKBs.Where(p => p.MaKP == _makp) on bn.MaBNhan equals bnkb.MaBNhan
                                                join cls in _Data.CLS.Where(p => p.MaKPth == _mkp).Where(p => p.NgayTH >= n3 && p.NgayTH <= n4).Where(p => p.Status == 1) on bn.MaBNhan equals cls.MaBNhan
                                                //join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                                join chidinh in _Data.ChiDinhs on cls.IdCLS equals chidinh.IdCLS
                                                join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                                                join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                                join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                                                select new
                                                {
                                                    bnkb.IDKB,
                                                    chidinh.LoiDan,
                                                    chidinh.ChiDinh1,
                                                    chidinh.KetLuan,
                                                    clsct.KetQua,
                                                    clsct.KetQua_Rtf,
                                                    cls.IdCLS,
                                                    dv.TenDV
                                                }).ToList();
                                if (par.Count > 0)
                                {
                                    repct.colMaBN.Text = _mabn.ToString();
                                    repct.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                    repct.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                    repct.TenBN.Value = par.FirstOrDefault().TenBNhan;
                                    if (DungChung.Bien.MaBV == "27023")
                                        repct.So.Value = _so;
                                    else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                    {
                                        if (par.Count > 0)
                                        {
                                            int mabn = par.FirstOrDefault().MaBNhan;
                                            var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                            if (qvv != null)
                                                repct.So.Value = qvv.SoVV;
                                            else
                                                repct.So.Value = "";
                                        }
                                    }
                                    else
                                        repct.So.Value = _IDCLS;
                                    repct.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                    repct.DiaChi.Value = par.FirstOrDefault().DChi;
                                    repct.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                    if (DungChung.Bien.MaBV == "30372")
                                    {
                                        _kl = par.FirstOrDefault().KetLuan;
                                    }

                                    if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                        repct.Loidan.Value = par.FirstOrDefault().LoiDan;
                                    else
                                        repct.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                                    repct.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        repct.Nu.Value = "/";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        repct.Nam.Value = "/";
                                    }
                                    string _yccc = "";
                                    if (DungChung.Bien.MaBV != "24009")
                                    {
                                        foreach (var a in par)
                                        {
                                            _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                            if (DungChung.Bien.MaBV == "24272")
                                            {
                                                _yccc += " " + a.TenRG + " (" + a.ChiDinh1 + ")" + "\n";
                                            }
                                        }
                                        repct.YCCC.Value = _yccc;
                                    }
                                    else
                                    {
                                        repct.YCCC.Value = par1.FirstOrDefault().TenDV + par.FirstOrDefault().ChiDinh1;
                                    }
                                    foreach (var a in par)
                                    {
                                        //if (a.KetQua_Rtf == null)
                                        if (DungChung.Bien.MaBV == "30372")
                                        {
                                            _kqct += a.KetQua + "\r\n";
                                        }
                                        else
                                        {
                                            _kqct += "  " + a.KetQua + "\r\n" + a.KetLuan;
                                        }
                                        //else
                                        //_kqct += "  -" + a.KetQua_Rtf + "\r\n" + a.KetLuan;
                                    }
                                    foreach (var a in paz14017)
                                    {

                                        {
                                            _kl += a.KetLuan + "\r\n";
                                        }
                                    }

                                    if (par.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        repct.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                        repct.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                        repct.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                        repct.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                        repct.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                    }
                                    if (DungChung.Bien.MaBV == "30372")
                                    {
                                        _kl = par.FirstOrDefault().KetLuan;
                                    }
                                    if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                        repct.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        repct.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        repct.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        repct.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    repct.Macb.Value = par.FirstOrDefault().MaCBth;
                                    repct.KQCC.Value = _kqct;
                                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                    repct.ChanDoan.Value = (par.FirstOrDefault().ChanDoanBD != null || par.FirstOrDefault().ChanDoanBD != "") && DungChung.Bien.MaBV == "24272" ? par.FirstOrDefault().ChanDoanBD + ";" : "";
                                    if (DungChung.Bien.MaBV != "24272")
                                    {
                                        repct.ChanDoan.Value += DungChung.Bien.MaBV == "30372" ? arrThongTinBNKB[1] : par.FirstOrDefault().ChanDoan;
                                    }
                                    repct.Buong.Value = arrThongTinBNKB[2];
                                    repct.Giuong.Value = arrThongTinBNKB[3];
                                    repct.KetLuan.Value = _kl;
                                    repct.Khoa.Value = arrThongTinBNKB[4];
                                    if (DungChung.Bien.MaBV == "30010")
                                    {
                                        int MKPTH = par.FirstOrDefault().MaKPth.Value;
                                        repct.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == MKPTH).Select(p => p.TenKP).FirstOrDefault().ToString();
                                    }
                                }
                                if (DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "01071")
                                {
                                    string kieudoc1 = "";
                                    string kieudoc2 = "";
                                    var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                                select new
                                                {
                                                    ht.KieuDoc
                                                }).ToList();
                                    kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                                    kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                                    if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                                    {
                                        DungChung.Bien._Visible_CDHA[0] = true;
                                        DungChung.Bien._Visible_CDHA[1] = false;

                                    }
                                    if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                                    {
                                        DungChung.Bien._Visible_CDHA[0] = true;
                                        DungChung.Bien._Visible_CDHA[1] = false;

                                    }
                                    if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                                    {
                                        DungChung.Bien._Visible_CDHA[0] = true;
                                        DungChung.Bien._Visible_CDHA[1] = false;
                                    }
                                }
                                repct.CreateDocument();
                                frmct.prcIN.PrintingSystem = repct.PrintingSystem;
                                frmct.ShowDialog();
                            }
                        }
                    }
                    #endregion
                    break;
                #endregion
                #region Siêu âm
                case "Siêu âm":
                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                    {
                        if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                        {
                            #region Sieu am o bung
                            if (Frm_CDHA_Moi._tendv == "Siêu âm ổ bụng_" || FRM_chidinh_Moi._tendv == "Siêu âm ổ bụng_") //sieu am o bung
                            {
                                Dictionary<string, object> _dic = new Dictionary<string, object>();

                                _dic.Add("Bacsy", par.FirstOrDefault().ChucVu + " " + par.FirstOrDefault().TenCBth);
                                if (par.FirstOrDefault().NgayTH != null)
                                {
                                    _dic.Add("Ngaythang", "Hà Nội" + ", " + " ngày " + par.FirstOrDefault().NgayTH.Value.Day + " tháng " + par.FirstOrDefault().NgayTH.Value.Month + " năm " + par.FirstOrDefault().NgayTH.Value.Year);
                                }
                                else
                                {
                                    _dic.Add("Ngaythang", "");
                                }

                                if (par.Count > 0 && par.FirstOrDefault().DuongDan != null)
                                {
                                    if (File.Exists(par.FirstOrDefault().DuongDan))
                                    {
                                        _dic.Add("Anh1", Image.FromFile(par.FirstOrDefault().DuongDan));
                                    }
                                    else
                                    {
                                        _dic.Add("Anh1", null);
                                    }

                                }
                                _dic.Add("sdt", ttbx.FirstOrDefault().DThoai != null ? ttbx.FirstOrDefault().DThoai : "");
                                string gioitinh = "";
                                if (par.FirstOrDefault().GTinh == 1)
                                {
                                    gioitinh = "Nam";
                                    _dic.Add("Sinhnam", par.FirstOrDefault().Tuoi);
                                }
                                if (par.FirstOrDefault().GTinh == 0)
                                {
                                    gioitinh = "Nữ";
                                    _dic.Add("Sinhnam", par.FirstOrDefault().NamSinh);
                                }
                                _dic.Add("Gioitinh", gioitinh);
                                if (par.FirstOrDefault().NoiTru == 1)
                                {
                                    var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                    if (sovv != null)
                                        _dic.Add("sovv", "Số VV: " + sovv.ToString());
                                }
                                _dic.Add("thuong2", (par.FirstOrDefault().CapCuu == false) ? "X" : "");
                                _dic.Add("capcuu2", (par.FirstOrDefault().CapCuu == true) ? "X" : "");

                                _dic.Add("MaCBDT", par.FirstOrDefault().MaCB);
                                _dic.Add("DiaChi", par.FirstOrDefault().DChi);
                                _dic.Add("TuoiBN", DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge));

                                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    _dic.Add("Nu", "/");
                                }
                                else if (gioiTinh == 0)
                                {
                                    _dic.Add("Nam", "/");
                                }

                                if (par.FirstOrDefault().SThe.Length >= 15)
                                {
                                    _dic.Add("SThe1", par.FirstOrDefault().SThe.Substring(0, 3));
                                    _dic.Add("SThe2", par.FirstOrDefault().SThe.Substring(3, 2));
                                    _dic.Add("SThe3", par.FirstOrDefault().SThe.Substring(5, 2));
                                    _dic.Add("SThe4", par.FirstOrDefault().SThe.Substring(7, 3));
                                    _dic.Add("SThe5", par.FirstOrDefault().SThe.Substring(10, 5));
                                    _dic.Add("visibleSb", 1);
                                }
                                else _dic.Add("visibleSb", 0);
                                _dic.Add("sophieu", _IDCLS);
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                _dic.Add("ChanDoan2", DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1]);
                                _dic.Add("Buong2", arrThongTinBNKB[2]);
                                _dic.Add("Giuong2", arrThongTinBNKB[3]);
                                _dic.Add("Khoa2", arrThongTinBNKB[4]);
                                _dic.Add("KetLuan", par.FirstOrDefault().KetLuan);
                                DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuSieuAmOBung_01071, par, _dic, false);
                            }
                            #endregion
                            else
                            {
                                #region Khác siêu âm ổ bụng 01071

                                frmIn frm3 = new frmIn();
                                BaoCao.repPhieuSieuAm_01071 rep3 = new BaoCao.repPhieuSieuAm_01071();
                                if (par.Count > 0)
                                {
                                    rep3.labmabn.Text = _mabn.ToString();
                                    rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    if (DungChung.Bien.MaBV == "27023")
                                        rep3.SoPhieu.Value = _so;
                                    else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                    {
                                        if (par.Count > 0)
                                        {
                                            int mabn = par.FirstOrDefault().MaBNhan;
                                            var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                            if (qvv != null)
                                                rep3.SoPhieu.Value = qvv.SoVV;
                                            else
                                                rep3.SoPhieu.Value = "";
                                        }
                                    }
                                    else
                                        rep3.SoPhieu.Value = _IDCLS;
                                    if (par.FirstOrDefault().NoiTru == 1)
                                    {
                                        var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                        if (sovv != null)
                                            rep3.sovv.Text = "Số VV: " + sovv.ToString();
                                    }
                                    rep3.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                    rep3.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                    rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                    rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                                    rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                    rep3.SoBHYT.Value = par.FirstOrDefault().SThe;

                                    if (par.FirstOrDefault().GTinh == 1)
                                    {
                                        rep3.Nu.Value = "/";
                                    }
                                    else
                                    {
                                        rep3.Nam.Value = "/";
                                    }
                                    rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                                    rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                                    rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                                    if (par.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                        rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                        rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                        rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                        rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                    }
                                    if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                        rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                    rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                                    string str = "";
                                    if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                        str = par.FirstOrDefault().KetQua;
                                    rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                    if (par.FirstOrDefault().DuongDan != null)
                                        rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                    rep3.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                                    rep3.Buong.Value = arrThongTinBNKB[2];
                                    rep3.Giuong.Value = arrThongTinBNKB[3];
                                    rep3.tb_ChiDinh.Visible = false;
                                    rep3.Khoa.Value = arrThongTinBNKB[4];

                                }

                                rep3.CreateDocument();
                                frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                                frm3.ShowDialog();
                                #endregion
                            }
                        }
                        else
                        {
                            frmIn frm3 = new frmIn();
                            BaoCao.repPhieuSieuAm_01071 rep3 = new BaoCao.repPhieuSieuAm_01071();
                            if (par.Count > 0)
                            {
                                rep3.labmabn.Text = _mabn.ToString();
                                rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                if (DungChung.Bien.MaBV == "27023")
                                    rep3.SoPhieu.Value = _so;
                                else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                {
                                    if (par.Count > 0)
                                    {
                                        int mabn = par.FirstOrDefault().MaBNhan;
                                        var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                        if (qvv != null)
                                            rep3.SoPhieu.Value = qvv.SoVV;
                                        else
                                            rep3.SoPhieu.Value = "";
                                    }
                                }
                                else
                                    rep3.SoPhieu.Value = _IDCLS;
                                if (par.FirstOrDefault().NoiTru == 1)
                                {
                                    var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                    if (sovv != null)
                                        rep3.sovv.Text = "Số VV: " + sovv.ToString();
                                }
                                rep3.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                rep3.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                                rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep3.Nu.Value = "/";
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep3.Nam.Value = "/";
                                }
                                rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                                rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                                rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                                if (par.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                    rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                    rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                    rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                    rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                }
                                if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                    rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                else
                                    rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                if (par.FirstOrDefault().NgayTH != null)
                                    rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                                string str = "";
                                if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                    str = par.FirstOrDefault().KetQua;
                                rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                if (par.FirstOrDefault().DuongDan != null)
                                    rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                if (DungChung.Bien.MaBV == "24297" && par.FirstOrDefault().IsDongY == true)
                                {
                                    rep3.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value);
                                }
                                else { rep3.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1]; }

                                rep3.Buong.Value = arrThongTinBNKB[2];
                                rep3.Giuong.Value = arrThongTinBNKB[3];

                                rep3.Khoa.Value = arrThongTinBNKB[4];

                            }

                            rep3.CreateDocument();
                            frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                            frm3.ShowDialog();
                        }



                    }
                    #endregion
                    #region 56789
                    else if (DungChung.Bien.MaBV == "56789")
                    {
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm_HamNghi rep3 = new BaoCao.repPhieuSieuAm_HamNghi();
                        if (par.Count > 0)
                        {
                            rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            rep3.SoPhieu.Value = _IDCLS;
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = par.FirstOrDefault().NamSinh;//DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            rep3.Nam.Value = par.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                            rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = "Kết luận: " + par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            string str = "";
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                str = par.FirstOrDefault().KetQua;
                            rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep3.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];

                            rep3.Khoa.Value = arrThongTinBNKB[4];

                        }

                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                    }
                    #endregion
                    #region 30372
                    else if (DungChung.Bien.MaBV == "30372")
                    {
                        using (frm_SoLuongAnhIn frm = new frm_SoLuongAnhIn())
                        {
                            frm.ShowDialog();
                            int i1 = frm.SoLuongAnhin; List<CDHA_30372> rep = new List<CDHA_30372>();
                            if (i1 > 0)
                            {
                                CDHA_30372 cdha = new CDHA_30372();
                                Dictionary<string, object> dicpar = new Dictionary<string, object>();
                                // tên cơ quan chủ quản   
                                int TimeFormat = Convert.ToInt32(_Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN).FirstOrDefault().FormatDate);
                                cdha.TenBV = DungChung.Bien.TenCQ;
                                cdha.Logo = DungChung.Ham.GetLogo();
                                cdha.MaBN = par.FirstOrDefault().MaBNhan;
                                string[] DuongDan = par.Where(p => p.IdCLS == _IDCLS).FirstOrDefault().DuongDan2.Split('|');

                                for (int i = 0; i < DuongDan.Length; i++)
                                {
                                    switch (i)
                                    {
                                        case 1:
                                            if (DuongDan[0] != null)
                                            {
                                                cdha.Anh1 = InPhieu.KiemTraTonTaiAnh(DuongDan[0].ToString());
                                            }
                                            break;
                                        case 2:
                                            if (DuongDan[1] != null)
                                            {
                                                cdha.Anh2 = InPhieu.KiemTraTonTaiAnh(DuongDan[1].ToString());
                                            }
                                            break;
                                        case 3:
                                            if (DuongDan[2] != null)
                                            {
                                                cdha.Anh3 = InPhieu.KiemTraTonTaiAnh(DuongDan[2].ToString());
                                            }
                                            break;
                                        case 4:
                                            if (DuongDan[3] != null)
                                            {
                                                cdha.Anh4 = InPhieu.KiemTraTonTaiAnh(DuongDan[3].ToString());
                                            }
                                            break;
                                        case 5:
                                            if (DuongDan[4] != null)
                                            {
                                                cdha.Anh5 = InPhieu.KiemTraTonTaiAnh(DuongDan[4].ToString());
                                            }
                                            break;
                                        case 6:
                                            if (DuongDan[5] != null)
                                            {
                                                cdha.Anh6 = InPhieu.KiemTraTonTaiAnh(DuongDan[5].ToString());
                                            }
                                            break;
                                        case 7:
                                            if (DuongDan[6] != null)
                                            {
                                                cdha.Anh7 = InPhieu.KiemTraTonTaiAnh(DuongDan[6].ToString());
                                            }
                                            break;
                                        case 8:
                                            if (DuongDan[7] != null)
                                            {
                                                cdha.Anh8 = InPhieu.KiemTraTonTaiAnh(DuongDan[7].ToString());
                                            }
                                            break;

                                        default:
                                            break;
                                    }
                                }



                                cdha.DiaChiBenhVien = DungChung.Bien.DiaChi;
                                cdha.TieuDe = "PHIẾU SIÊU ÂM";
                                cdha.SoDienThoaiLienHe = "SĐT: " + _Data.HTHONGs.FirstOrDefault().SDT + " - Fax: " + _Data.HTHONGs.FirstOrDefault().Fax + "";
                                cdha.YeuCau = par.FirstOrDefault().TenDV;
                                cdha.NgaySinh = par.FirstOrDefault().NgaySinh + " / " + par.FirstOrDefault().ThangSinh + " / " + par.FirstOrDefault().NamSinh;
                                cdha.TieuDeKetQua = "KẾT QUẢ SIÊU ÂM";
                                cdha.BSCD = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                                cdha.NgayChiDinh = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                                cdha.NgayTH = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayTH), TimeFormat);
                                cdha.Tuoi = par.FirstOrDefault().Tuoi;
                                if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong != null)
                                {
                                    cdha.Buong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong;
                                }
                                if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong != null)
                                {
                                    cdha.Giuong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong;
                                }

                                // Thông tin bệnh nhân
                                cdha.HoTen = par.FirstOrDefault().TenBNhan.ToUpper();
                                cdha.DiaChi = par.FirstOrDefault().DChi;
                                cdha.Khoa = par.FirstOrDefault().TenKP;
                                if (DungChung.Bien.MaBV == "30372")
                                {
                                    cdha.ChanDoan = par.FirstOrDefault().ChanDoanBD + "; " + par.FirstOrDefault().ChanDoan + "; " + par.FirstOrDefault().BenhKhac;
                                }
                                else
                                {
                                    cdha.ChanDoan = par.FirstOrDefault().ChanDoan;
                                }
                                dicpar["SoLuongAnh"] = i1;
                                if (par.FirstOrDefault().GTinh != 1)
                                {
                                    cdha.Nam = "/";
                                    cdha.Nu = "";
                                }
                                else
                                {
                                    cdha.Nu = "/";
                                    cdha.Nam = "";
                                }
                                if (par.FirstOrDefault().SThe != "")
                                {
                                    cdha.MA1 = par.FirstOrDefault().SThe.Substring(0, 3);
                                    cdha.MA2 = par.FirstOrDefault().SThe.Substring(3, 2);
                                    cdha.MA3 = par.FirstOrDefault().SThe.Substring(5, 2);
                                    cdha.MA4 = par.FirstOrDefault().SThe.Substring(7, 3);
                                    cdha.MA5 = par.FirstOrDefault().SThe.Substring(10, 5);
                                }
                                if (ttbx.Count != 0)
                                {
                                    cdha.Email = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email;
                                    cdha.DienThoai = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai;
                                }

                                cdha.BacSyChiDinh = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                                if (par.FirstOrDefault().KetQua_Rtf == null)
                                {
                                    cdha.KetQua = par.FirstOrDefault().KetQua;
                                }
                                else
                                {
                                    cdha.KetQua = par.FirstOrDefault().KetQua_Rtf;
                                }

                                cdha.KetLuan = par.FirstOrDefault().KetLuan;
                                cdha.LoiDan = par.FirstOrDefault().LoiDan;
                                cdha.NgayThang = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                                cdha.BSTH = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCBth).ToUpper();
                                rep.Add(cdha);
                                DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuCDHA_30372, rep.ToList(), dicpar, false);
                            }
                            else
                            {
                                MessageBox.Show("Xin hãy chọn số lượng ảnh cần in!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);

                            }
                        }
                    }
                    #endregion
                    #region Viện khác
                    else
                    {
                        using (frmIn frm3 = new frmIn())
                        {
                            using (BaoCao.repPhieuSieuAm rep3 = new BaoCao.repPhieuSieuAm())
                            {
                                if (par.Count > 0)
                                {
                                    var clsPrint = par.First(o => o.IdCLS == _IDCLS);
                                    if (clsPrint != null)
                                    {
                                        if (par.FirstOrDefault().TenDV.ToLower().Contains("đầu dò âm đạo"))
                                        {
                                            if (DungChung.Bien.MaBV == "24009" || DungChung.Bien.MaBV == "27777")
                                            {
                                                rep3.SubBand4.Visible = true;
                                                rep3.xrLabel2.Text = "1. Mô tả tổn thương";
                                                rep3.xrLabel1.Text = "2. Kết luận";
                                            }
                                            else
                                            {
                                                rep3.SubBand2.Visible = true;
                                            }


                                        }
                                        else
                                        {
                                            if (DungChung.Bien.MaBV == "24009" || DungChung.Bien.MaBV == "27777")
                                            {
                                                rep3.SubBand3.Visible = true;
                                                rep3.xrLabel2.Text = "1. Mô tả tổn thương";
                                                rep3.xrLabel1.Text = "2. Kết luận";
                                            }
                                            else
                                            {
                                                rep3.SubBand1.Visible = true;
                                            }
                                        }
                                        if (DungChung.Bien.MaBV == "24012")
                                        {
                                            rep3.lbl_icd_24012_1.Visible = true;
                                            rep3.lbl_icd_24012_2.Visible = true;
                                            rep3.Parameters["MaICD"].Value = clsPrint.MaICD /*+ ", " + clsPrint.MaICD2*/;
                                        }
                                        rep3.labmabn.Text = "Mã BN: " + _mabn.ToString();
                                        //if (DungChung.Bien.MaBV == "20001")
                                        //{
                                        rep3.TenBN.Value = clsPrint.TenBNhan.ToUpper();
                                        //}
                                        //else
                                        //{
                                        //    rep3.TenBN.Value = clsPrint.TenBNhan;
                                        //}
                                        if (DungChung.Bien.MaBV == "27023")
                                        {
                                            rep3.SoPhieu.Value = _so;
                                            if (par.FirstOrDefault().Status == 0)
                                            {
                                                rep3.SubBand6.Visible = false;
                                            }
                                        }
                                        else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                        {
                                            if (par.Count > 0)
                                            {
                                                int mabn = clsPrint.MaBNhan;
                                                var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                                if (qvv != null)
                                                    rep3.SoPhieu.Value = qvv.SoVV;
                                                else
                                                    rep3.SoPhieu.Value = "";
                                            }
                                        }
                                        else
                                            rep3.SoPhieu.Value = _IDCLS;
                                        rep3.thuong.Text = (clsPrint.CapCuu == false) ? "X" : "";
                                        rep3.capcuu.Text = (clsPrint.CapCuu == true) ? "X" : "";
                                        rep3.MaCBDT.Value = clsPrint.MaCB;
                                        rep3.MaCBTH.Value = clsPrint.MaCBth;
                                        rep3.DiaChi.Value = clsPrint.DChi;
                                        rep3.TuoiBN.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.CalculateAge(clsPrint.NgaySinh, clsPrint.ThangSinh, clsPrint.NamSinh, " tháng.") : DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                        rep3.SoBHYT.Value = clsPrint.SThe;
                                        int gioiTinh = int.Parse(clsPrint.GTinh.ToString());
                                        if (gioiTinh == 1)
                                        {
                                            rep3.Nu.Value = "/";
                                        }
                                        else if (gioiTinh == 0)
                                        {
                                            rep3.Nam.Value = "/";
                                        }
                                        rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par1.FirstOrDefault().TenDV + " (" + clsPrint.ChiDinh1 + ")";
                                        rep3.KetLuan.Value = clsPrint.KetLuan;
                                        rep3.LDBS.Value = clsPrint.LoiDan;
                                        if (clsPrint.SThe.Length >= 15)
                                        {
                                            rep3.SThe1.Value = clsPrint.SThe.Substring(0, 3);
                                            rep3.SThe2.Value = clsPrint.SThe.Substring(3, 2);
                                            rep3.SThe3.Value = clsPrint.SThe.Substring(5, 2);
                                            rep3.SThe4.Value = clsPrint.SThe.Substring(7, 3);
                                            rep3.SThe5.Value = clsPrint.SThe.Substring(10, 5);
                                        }
                                        if (clsPrint.NgayThang != null && DungChung.Bien.MaBV != "02005")
                                            rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(clsPrint.NgayThang.Value, DungChung.Bien.FormatDate);
                                        else
                                            rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                        if (clsPrint.NgayTH != null)
                                            rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(clsPrint.NgayTH.Value, DungChung.Bien.FormatDate);
                                        else
                                            rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";

                                        if (clsPrint != null)
                                        {
                                            rep3.Macb.Value = clsPrint.MaCBth;
                                        }
                                        string str = "";
                                        if (string.IsNullOrEmpty(clsPrint.KetQua_Rtf))
                                            str = clsPrint.KetQua;
                                        else
                                            str = clsPrint.KetQua_Rtf;
                                        if (DungChung.Bien.MaBV == "30340")
                                        {
                                            rep3.colKetQua.Text = str;
                                        }
                                        else
                                        {
                                            rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                        }

                                        if (clsPrint.DuongDan != null)
                                            rep3.DuongDan.Value = clsPrint.DuongDan;
                                        if (clsPrint.DuongDan2 != null)
                                            rep3.DuongDan2.Value = clsPrint.DuongDan2;
                                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                        if (DungChung.Bien.MaBV == "20001")
                                            rep3.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                                        else
                                        {
                                            if (DungChung.Bien.MaBV == "14018")
                                            {

                                                rep3.ChanDoan.Value = DungChung.Ham.GetChanDoanKB(_Data, _mabn);
                                            }
                                            else
                                            {
                                                rep3.ChanDoan.Value = (clsPrint.ChanDoanBD != null || clsPrint.ChanDoanBD != "") ? clsPrint.ChanDoanBD + ";" : "";
                                                if (DungChung.Bien.MaBV != "24272")
                                                {
                                                    rep3.ChanDoan.Value += arrThongTinBNKB[1];
                                                }
                                            }
                                        }
                                        rep3.Buong.Value = arrThongTinBNKB[2];
                                        rep3.Giuong.Value = arrThongTinBNKB[3];

                                        rep3.Khoa.Value = DungChung.Ham.GetTenKP_20001(arrThongTinBNKB[4] ?? "");

                                    }


                                    if (DungChung.Bien.MaBV == "30010")
                                    {
                                        int mkpth = Convert.ToInt32(par.FirstOrDefault().MaKPth.Value);
                                        rep3.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                                    }//yenbg1
                                    rep3.CreateDocument();
                                    frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                                    frm3.ShowDialog();
                                }
                            }
                        }
                    }
                    break;
                #endregion
                #endregion
                #region Siêu âm màu
                case "Siêu âm màu":
                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                    {
                        using (frmIn frm3 = new frmIn())
                        {
                            using (BaoCao.repPhieuSieuAm_01071 rep3 = new BaoCao.repPhieuSieuAm_01071())
                            {
                                if (par.Count > 0)
                                {
                                    rep3.labmabn.Text = _mabn.ToString();
                                    rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    if (DungChung.Bien.MaBV == "27023")
                                        rep3.SoPhieu.Value = _so;
                                    else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                    {
                                        if (par.Count > 0)
                                        {
                                            int mabn = par.FirstOrDefault().MaBNhan;
                                            var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                            if (qvv != null)
                                                rep3.SoPhieu.Value = qvv.SoVV;
                                            else
                                                rep3.SoPhieu.Value = "";
                                        }
                                    }
                                    else
                                        rep3.SoPhieu.Value = _IDCLS;
                                    if (par.FirstOrDefault().NoiTru == 1)
                                    {
                                        var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                        if (sovv != null)
                                            rep3.sovv.Text = "Số VV: " + sovv.ToString();
                                    }
                                    rep3.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                    rep3.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                    rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                    rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                                    rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                    rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep3.Nu.Value = "/";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep3.Nam.Value = "/";
                                    }
                                    rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                                    rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                                    rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                                    if (par.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                        rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                        rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                        rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                        rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                    }
                                    if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                        rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                    rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                                    string str = "";
                                    if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                        str = par.FirstOrDefault().KetQua;
                                    rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                    if (par.FirstOrDefault().DuongDan != null)
                                        rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                    rep3.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                                    rep3.Buong.Value = arrThongTinBNKB[2];
                                    rep3.Giuong.Value = arrThongTinBNKB[3];

                                    rep3.Khoa.Value = arrThongTinBNKB[4];

                                }

                                rep3.CreateDocument();
                                frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                                frm3.ShowDialog();
                            }
                        }
                    }
                    else if (DungChung.Bien.MaBV == "56789")
                    {
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm_HamNghi rep3 = new BaoCao.repPhieuSieuAm_HamNghi();
                        if (par.Count > 0)
                        {
                            rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            rep3.SoPhieu.Value = _IDCLS;
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = par.FirstOrDefault().NamSinh;//DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            rep3.Nam.Value = par.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                            rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = "Kết luận: " + par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            string str = "";
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                str = par.FirstOrDefault().KetQua;
                            rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep3.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];

                            rep3.Khoa.Value = arrThongTinBNKB[4];

                        }

                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                    }
                    #endregion
                    else
                    {
                        using (frmIn frm3 = new frmIn())
                        {
                            using (BaoCao.repPhieuSieuAm rep3 = new BaoCao.repPhieuSieuAm())
                            {
                                if (par.Count > 0)
                                {
                                    if (DungChung.Bien.MaBV == "30010")
                                    {
                                        if (par.FirstOrDefault().TenDV.ToLower().Contains("đầu dò âm đạo"))
                                        {
                                            rep3.SubBand1.Visible = false;
                                            rep3.SubBand2.Visible = true;
                                            rep3.xrLabel2.Text = "1. Mô tả tổn thương";
                                            rep3.xrLabel2.Visible = true;
                                            rep3.xrLabel1.Text = "2. Kết luận";
                                        }
                                        else
                                        {
                                            rep3.SubBand1.Visible = true;
                                            rep3.SubBand2.Visible = false;
                                            rep3.SubBand3.Visible = false;
                                            rep3.SubBand4.Visible = false;
                                        }

                                    }
                                    if (DungChung.Bien.MaBV == "24009" || DungChung.Bien.MaBV == "27777")
                                    {
                                        if (par.FirstOrDefault().TenDV.ToLower().Contains("đầu dò âm đạo"))
                                        {
                                            rep3.SubBand1.Visible = false;
                                            rep3.SubBand2.Visible = false;
                                            rep3.SubBand3.Visible = false;
                                            rep3.SubBand4.Visible = true;
                                            rep3.xrLabel2.Text = "1. Mô tả tổn thương";
                                            rep3.xrLabel1.Text = "2. Kết luận";
                                        }


                                        else
                                        {

                                            rep3.SubBand1.Visible = false;
                                            rep3.SubBand2.Visible = false;
                                            rep3.SubBand3.Visible = true;
                                            rep3.SubBand4.Visible = false;
                                        }
                                    }
                                    rep3.labmabn.Text = "Mã BN: " + _mabn.ToString();
                                    if (DungChung.Bien.MaBV == "20001")
                                    {
                                        rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    }
                                    else
                                    {
                                        rep3.TenBN.Value = par.FirstOrDefault().TenBNhan;
                                    }
                                    if (DungChung.Bien.MaBV == "27023")
                                        rep3.SoPhieu.Value = _so;
                                    else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                    {
                                        if (par.Count > 0)
                                        {
                                            int mabn = par.FirstOrDefault().MaBNhan;
                                            var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                            if (qvv != null)
                                                rep3.SoPhieu.Value = qvv.SoVV;
                                            else
                                                rep3.SoPhieu.Value = "";
                                        }
                                    }
                                    else
                                        rep3.SoPhieu.Value = _IDCLS;
                                    rep3.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                    rep3.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                    rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                    rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                                    rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                    rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep3.Nu.Value = "/";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep3.Nam.Value = "/";
                                    }
                                    rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                                    rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                                    rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                                    if (par.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                        rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                        rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                        rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                        rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                    }
                                    if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                        rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                    rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                                    string str = "";
                                    //if (string.IsNullOrEmpty(par.FirstOrDefault().KetQua_Rtf))
                                    str = par.FirstOrDefault().KetQua;
                                    //else
                                    //str = par.FirstOrDefault().KetQua_Rtf;
                                    rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                    if (par.FirstOrDefault().DuongDan != null)
                                        rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                    rep3.ChanDoan.Value = par.FirstOrDefault().ChanDoanBD != null || par.FirstOrDefault().ChanDoanBD != "" ? par.FirstOrDefault().ChanDoanBD + ";" : "";
                                    if (DungChung.Bien.MaBV != "24272")
                                    {
                                        rep3.ChanDoan.Value += arrThongTinBNKB[1];
                                    }
                                    rep3.Buong.Value = arrThongTinBNKB[2];
                                    rep3.Giuong.Value = arrThongTinBNKB[3];

                                    rep3.Khoa.Value = arrThongTinBNKB[4];

                                }

                                rep3.CreateDocument();
                                frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                                frm3.ShowDialog();
                            }
                        }
                    }
                    break;
                #endregion
                #region Điện tim
                case "Điện tim":
                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                    {
                        using (frmIn frm1 = new frmIn())
                        {
                            using (BaoCao.Rep_PhieuDienTim_01071 rep1 = new BaoCao.Rep_PhieuDienTim_01071())
                            {
                                if (par.Count > 0)
                                {
                                    if (DungChung.Bien.MaBV == "01071")
                                    {
                                        string kieudoc1 = "";
                                        string kieudoc2 = "";
                                        var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                                    select new
                                                    {
                                                        ht.KieuDoc
                                                    }).ToList();
                                        kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                                        kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                                        if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                                        {
                                            DungChung.Bien._Visible_CDHA[1] = false;
                                            DungChung.Bien._Visible_CDHA[2] = false;
                                            DungChung.Bien._Visible_CDHA[0] = true;
                                            DungChung.Bien._Visible_CDHA[3] = false;

                                        }
                                        if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                                        {
                                            DungChung.Bien._Visible_CDHA[2] = false;
                                            DungChung.Bien._Visible_CDHA[3] = false;
                                            DungChung.Bien._Visible_CDHA[0] = true;

                                            DungChung.Bien._Visible_CDHA[1] = false;

                                        }
                                        if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                                        {
                                            DungChung.Bien._Visible_CDHA[1] = false;
                                            DungChung.Bien._Visible_CDHA[2] = false;
                                            DungChung.Bien._Visible_CDHA[3] = false;
                                            DungChung.Bien._Visible_CDHA[0] = true;

                                        }
                                    }
                                    rep1.txtmabn.Text = _mabn.ToString();
                                    rep1.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    if (DungChung.Bien.MaBV == "27023")
                                        rep1.So.Value = _so;
                                    else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                    {
                                        if (par.Count > 0)
                                        {
                                            int mabn = par.FirstOrDefault().MaBNhan;
                                            var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                            if (qvv != null)
                                                rep1.So.Value = qvv.SoVV;
                                            else
                                                rep1.So.Value = "";
                                        }
                                    }
                                    else
                                        rep1.So.Value = _IDCLS;
                                    if (par.FirstOrDefault().NoiTru == 1)
                                    {
                                        var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                        if (sovv != null)
                                            rep1.sovv.Text = "Số VV: " + sovv.ToString();
                                    }
                                    rep1.thuong.Text = (par0.FirstOrDefault().CapCuu == false) ? "X" : "";
                                    rep1.capcuu.Text = (par0.FirstOrDefault().CapCuu == true) ? "X" : "";
                                    rep1.SoPhieu.Value = _IDCLS;
                                    rep1.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                    rep1.TenCB.Value = par.FirstOrDefault().ChucVu + ": " + par.FirstOrDefault().TenCBth;
                                    rep1.DiaChi.Value = par.FirstOrDefault().DChi;
                                    rep1.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                    rep1.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep1.Nu.Value = "/";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep1.Nam.Value = "/";
                                    }
                                    rep1.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                                    rep1.KetLuan.Value = par.FirstOrDefault().KetLuan;
                                    rep1.Loidan.Value = par.FirstOrDefault().LoiDan;
                                    if (par.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep1.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                        rep1.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                        rep1.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                        rep1.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                        rep1.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                    }
                                    if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                        rep1.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep1.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        rep1.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep1.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                    rep1.Macb.Value = par.FirstOrDefault().MaCBth;
                                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);

                                    if (par.FirstOrDefault().IsDongY == true && DungChung.Bien.MaBV == "24297")
                                    {
                                        rep1.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _mabn, _makp);
                                    }
                                    else
                                    {
                                        rep1.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                                    }


                                    rep1.Buong.Value = arrThongTinBNKB[2];
                                    rep1.Giuong.Value = arrThongTinBNKB[3];

                                    rep1.Khoa.Value = arrThongTinBNKB[4];


                                }
                                rep1.CreateDocument();
                                frm1.prcIN.PrintingSystem = rep1.PrintingSystem;
                                frm1.ShowDialog();
                            }
                        }  
                    }
                    #endregion
                    else
                    {
                        using (frmIn frm1 = new frmIn())
                        {
                            using (BaoCao.Rep_PhieuDienTim rep1 = new BaoCao.Rep_PhieuDienTim())
                            {
                                if (par.Count > 0)
                                {
                                    rep1.txtmabn.Text = "Mã BN: " + _mabn.ToString();
                                    rep1.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    if (DungChung.Bien.MaBV == "27023")
                                    {
                                        rep1.SubBand1.Visible = false;
                                        rep1.SubBand2.Visible = false;
                                        rep1.SubBand3.Visible = true;
                                        rep1.So.Value = _so;
                                    }
                                    else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                    {
                                        if (par.Count > 0)
                                        {
                                            int mabn = par.FirstOrDefault().MaBNhan;
                                            var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                            if (qvv != null)
                                                rep1.So.Value = qvv.SoVV;
                                            else
                                                rep1.So.Value = "";
                                        }
                                    }
                                    else
                                        rep1.So.Value = _IDCLS;
                                    if (DungChung.Bien.MaBV == "24012")
                                    {
                                        rep1.lbl_icd_24012_1.Visible = true;
                                        rep1.lbl_icd_24012_2.Visible = true;
                                        rep1.Parameters["MaICD"].Value = par.First().MaICD /*+ ", " + par.First().MaICD2*/;
                                    }
                                    rep1.xrLabel10.Text = rep1.thuong.Text = (par0.FirstOrDefault().CapCuu == false) ? "X" : "";
                                    rep1.xrLabel13.Text = rep1.capcuu.Text = (par0.FirstOrDefault().CapCuu == true) ? "X" : "";
                                    rep1.SoPhieu.Value = _IDCLS;
                                    rep1.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                    rep1.DiaChi.Value = par.FirstOrDefault().DChi;
                                    rep1.TuoiBN.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.CalculateAge(par.FirstOrDefault().NgaySinh, par.FirstOrDefault().ThangSinh, par.FirstOrDefault().NamSinh, " tháng.") : DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                    rep1.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep1.Nu.Value = "/";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep1.Nam.Value = "/";
                                    }
                                    rep1.YCKT.Value = "- Yêu cầu kiểm tra: " + par1.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                                    rep1.KetLuan.Value = par.FirstOrDefault().KetLuan;
                                    rep1.Loidan.Value = par.FirstOrDefault().LoiDan;
                                    if (par.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep1.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                        rep1.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                        rep1.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                        rep1.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                        rep1.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                    }
                                    if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                        rep1.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep1.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        rep1.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep1.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                    rep1.Macb.Value = par.FirstOrDefault().MaCBth;
                                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                    if (DungChung.Bien.MaBV == "20001")
                                        rep1.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                                    else
                                    {
                                        if (DungChung.Bien.MaBV == "14018")
                                        {
                                            rep1.ChanDoan.Value = DungChung.Ham.GetChanDoanKB(_Data, _mabn);
                                        }
                                        else
                                        {
                                            rep1.ChanDoan.Value = (par.FirstOrDefault().ChanDoanBD != null || par.FirstOrDefault().ChanDoanBD != "") && DungChung.Bien.MaBV == "24272" ? par.FirstOrDefault().ChanDoanBD + ";" : "";
                                            if (DungChung.Bien.MaBV != "24272")
                                            {
                                                rep1.ChanDoan.Value += arrThongTinBNKB[1];
                                            }
                                        }
                                    }

                                    rep1.Buong.Value = arrThongTinBNKB[2];
                                    rep1.Giuong.Value = arrThongTinBNKB[3];

                                    rep1.Khoa.Value = arrThongTinBNKB[4];
                                    if (DungChung.Bien.MaBV == "30010") //Yenbg1
                                    {
                                        int mkpth = Convert.ToInt32(par.FirstOrDefault().MaKPth.Value);
                                        rep1.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                                    }

                                }
                                if (DungChung.Bien.MaBV == "27001")
                                {
                                    rep1.SubBand1.Visible = true;
                                    rep1.SubBand2.Visible = false;
                                }
                                rep1.CreateDocument();
                                frm1.prcIN.PrintingSystem = rep1.PrintingSystem;
                                frm1.ShowDialog();
                            }
                        }
                    }
                    break;
                #endregion
                #region nội soi
                case "Nội soi":
                    #region 27183
                    frmIn frm2 = new frmIn();
                    if (DungChung.Bien.MaBV == "27183")
                    {

                        BaoCao.Rep_PhieuNoiSoi_27183 rep2 = new BaoCao.Rep_PhieuNoiSoi_27183();
                        if (par.Count > 0)
                        {
                            rep2.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            rep2.SoPhieu.Value = _IDCLS;
                            rep2.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep2.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep2.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep2.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep2.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep2.Nam.Value = "/";
                            }
                            rep2.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep2.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            string ddan = "", str = "";
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                str = par.FirstOrDefault().KetQua;
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().DuongDan2))
                                ddan = par.FirstOrDefault().DuongDan2;
                            rep2.hienthi(ddan);
                            rep2.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                            rep2.Loidan.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            string[] arrThongTinBNKB = { "", "", "", "", "" };
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep2.ChanDoan.Value = par.FirstOrDefault().ChanDoanBD != null || par.FirstOrDefault().ChanDoanBD != "" ? par.FirstOrDefault().ChanDoanBD + ";" : "";
                            rep2.ChanDoan.Value += arrThongTinBNKB[1];
                            rep2.Buong.Value = arrThongTinBNKB[2];
                            rep2.Giuong.Value = arrThongTinBNKB[3];
                            rep2.Khoa.Value = arrThongTinBNKB[4];

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep2.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep2.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep2.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep2.NgayTT.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep2.Macb.Value = par.FirstOrDefault().MaCBth;
                        }
                        rep2.CreateDocument();
                        frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                        frm2.ShowDialog();
                    }
                    #endregion
                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")// || DungChung.Bien.MaBV != "01071"
                    {


                        if (dvucd.TenDV == "Nội soi thực quản - dạ dày - tá tràng không sinh thiết" || dvucd.TenDV == "Helicobacter pylori Ag test nhanh")
                        {
                            #region nội soi thực quản dạ dày, Helicobacter pylori Ag test nhanh
                            List<int> allMaDV = _Data.DichVus.Where(p => p.TenDV == "Nội soi thực quản - dạ dày - tá tràng không sinh thiết" || p.TenDV == "Helicobacter pylori Ag test nhanh").Select(p => p.MaDV).ToList();
                            DateTime tungay = new DateTime(dvucd.NgayThang.Value.Year, dvucd.NgayThang.Value.Month, dvucd.NgayThang.Value.Day);
                            DateTime denngay = DungChung.Ham.NgayDen(tungay);
                            var qcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn)
                                        join chidinh in _Data.ChiDinhs on cls.IdCLS equals chidinh.IdCLS
                                        join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                                        join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        join dv in _Data.DichVus.Where(p => allMaDV.Contains(p.MaDV)) on dvct.MaDV equals dv.MaDV
                                        select new
                                        {
                                            cls.ChanDoan,
                                            cls.MaICD,
                                            chidinh.IDCD,
                                            chidinh.Status,
                                            cls.MaCBth,// TenCBth = kq1 == null ? "" : kq1.TenCB,
                                            dv.MaQD,
                                            dvct.STT,
                                            dvct.TSBT,
                                            cls.NgayTH,
                                            clsct.KetQua,
                                            clsct.DuongDan,
                                            cls.NgayThang,
                                            cls.MaKP,
                                            cls.MaCB,
                                            chidinh.ChiDinh1,
                                            chidinh.KetLuan,
                                            TenDV = dv.TenDV,
                                            chidinh.LoiDan,
                                            clsct.DuongDan2,
                                            cls.CapCuu,
                                            cls.IdCLS
                                        }).Where(p => p.NgayThang >= tungay && p.NgayThang <= denngay).OrderBy(p => p.STT).ToList();
                            var qcls1 = (from a in qcls
                                         join cb in _Data.CanBoes on a.MaCB equals cb.MaCB
                                         join cbth in _Data.CanBoes on a.MaCBth equals cbth.MaCB into kq
                                         from kq1 in kq.DefaultIfEmpty()
                                         select new
                                         {
                                             a.DuongDan2,
                                             a.ChanDoan,
                                             a.MaICD,
                                             a.IDCD,
                                             a.Status,
                                             a.MaCBth,
                                             TenCBth = kq1 == null ? "" : kq1.TenCB,
                                             a.MaQD,
                                             a.STT,
                                             a.TSBT,
                                             a.NgayTH,
                                             a.KetQua,
                                             a.DuongDan,
                                             a.NgayThang,
                                             a.MaKP,
                                             a.MaCB,
                                             cb.TenCB,
                                             a.ChiDinh1,
                                             a.KetLuan,
                                             a.TenDV,
                                             a.LoiDan,
                                             a.CapCuu,
                                             a.IdCLS
                                         }).OrderBy(p => p.NgayThang).ToList();

                            using (BaoCao.Rep_PhieuNoiSoiThucQuan_01071 rep2 = new BaoCao.Rep_PhieuNoiSoiThucQuan_01071())
                            {
                                if (par.Count > 0 && qcls1.Count > 0)
                                {
                                    rep2.txtmabn.Text = _mabn.ToString();
                                    rep2.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    rep2.SoPhieu.Value = qcls1.FirstOrDefault().IdCLS; //_IDCLS;//Lấy _idcls nhỏ nhất
                                    if (par.FirstOrDefault().NoiTru == 1)
                                    {
                                        var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                        if (sovv != null)
                                            rep2.sovv.Text = "Số VV: " + sovv.ToString();
                                    }
                                    rep2.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                    rep2.DiaChi.Value = par.FirstOrDefault().DChi;
                                    rep2.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                    rep2.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep2.Nu.Value = "/";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep2.Nam.Value = "/";
                                    }
                                    //  rep2.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";// hiển thị danh sách


                                    string str = "", loidan = "", ketluan = "";
                                    var qnoisoithucquan = qcls1.Where(p => p.TenDV == "Nội soi thực quản - dạ dày - tá tràng không sinh thiết").ToList();
                                    if (qnoisoithucquan.Count > 0 && !string.IsNullOrEmpty(qnoisoithucquan.FirstOrDefault().KetQua))
                                    {
                                        str = qnoisoithucquan.FirstOrDefault().KetQua;// hiển thị danh sách
                                        rep2.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                        loidan = qnoisoithucquan.FirstOrDefault().LoiDan.Trim();
                                        ketluan = qnoisoithucquan.FirstOrDefault().KetLuan.Trim();
                                    }
                                    var qXNHP = qcls1.Where(p => p.TenDV == "Helicobacter pylori Ag test nhanh").ToList();
                                    if (qXNHP.Count > 0 && !string.IsNullOrEmpty(qXNHP.FirstOrDefault().KetQua))
                                    {
                                        str = qXNHP.FirstOrDefault().KetQua;
                                        rep2.hienthiKQ2(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                        if (loidan != "")
                                        {
                                            if (qXNHP.FirstOrDefault().LoiDan != "")
                                                loidan = loidan + "\n" + qXNHP.FirstOrDefault().LoiDan;
                                        }
                                        else
                                            loidan = qXNHP.FirstOrDefault().LoiDan;
                                        if (ketluan != "")
                                        {
                                            if (qXNHP.FirstOrDefault().KetLuan != "")
                                                ketluan = ketluan + "\n" + qXNHP.FirstOrDefault().KetLuan;
                                        }
                                        else
                                            ketluan = qXNHP.FirstOrDefault().KetLuan;
                                    }

                                    rep2.Loidan.Value = loidan;
                                    rep2.KetLuan.Value = ketluan;// hiển thị danh sách
                                    if (par.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                        rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                        rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                        rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                        rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                    }
                                    string[] arrThongTinBNKB = { "", "", "", "", "" };
                                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                    rep2.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                                    rep2.Buong.Value = arrThongTinBNKB[2];
                                    rep2.Giuong.Value = arrThongTinBNKB[3];
                                    rep2.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                    rep2.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                    rep2.Khoa.Value = arrThongTinBNKB[4];


                                    if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                        rep2.NgayCD.Value = DungChung.Ham.NgaySangChu(qcls1.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep2.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        rep2.NgayTT.Value = DungChung.Ham.NgaySangChu(qcls1.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep2.NgayTT.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                    rep2.Macb.Value = qcls1.FirstOrDefault().MaCBth;
                                }
                                rep2.CreateDocument();
                                frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                                frm2.ShowDialog();
                            }
                            #endregion
                        }
                        else
                        {
                            #region nội soi thường
                            using (BaoCao.Rep_PhieuNoiSoi_01071 rep2 = new BaoCao.Rep_PhieuNoiSoi_01071())
                            {
                                if (par.Count > 0)
                                {
                                    rep2.txtmabn.Text = _mabn.ToString();
                                    rep2.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    if (DungChung.Bien.MaBV == "27023")
                                        rep2.SoPhieu.Value = _so;
                                    else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                    {
                                        if (par.Count > 0)
                                        {
                                            int mabn = par.FirstOrDefault().MaBNhan;
                                            var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                            if (qvv != null)
                                                rep2.SoPhieu.Value = qvv.SoVV;
                                            else
                                                rep2.SoPhieu.Value = "";
                                        }
                                    }
                                    else
                                        rep2.SoPhieu.Value = _IDCLS;
                                    if (par.FirstOrDefault().NoiTru == 1)
                                    {
                                        var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                        if (sovv != null)
                                            rep2.sovv.Text = "Số VV: " + sovv.ToString();
                                    }
                                    rep2.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                    rep2.DiaChi.Value = par.FirstOrDefault().DChi;
                                    rep2.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                    rep2.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep2.Nu.Value = "/";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep2.Nam.Value = "/";
                                    }
                                    rep2.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                                    rep2.KetLuan.Value = par.FirstOrDefault().KetLuan;
                                    string str = "";
                                    if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                        str = par.FirstOrDefault().KetQua;
                                    rep2.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                    rep2.Loidan.Value = par.FirstOrDefault().LoiDan;
                                    if (par.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                        rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                        rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                        rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                        rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                    }
                                    string[] arrThongTinBNKB = { "", "", "", "", "" };
                                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                    rep2.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                                    rep2.Buong.Value = arrThongTinBNKB[2];
                                    rep2.Giuong.Value = arrThongTinBNKB[3];
                                    rep2.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                    rep2.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                    rep2.Khoa.Value = arrThongTinBNKB[4];


                                    if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                        rep2.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep2.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        rep2.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep2.NgayTT.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                    rep2.Macb.Value = par.FirstOrDefault().MaCBth;
                                }
                                rep2.CreateDocument();
                                frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                                frm2.ShowDialog();
                            }
                            #endregion
                        }


                    }
                    #endregion
                    #region 30372

                    if (DungChung.Bien.MaBV == "30372")
                    {
                        using(frm_SoLuongAnhIn frm = new frm_SoLuongAnhIn())
                        {
                            frm.ShowDialog();
                            int i1 = frm.SoLuongAnhin;
                            List<CDHA_30372> rep = new List<CDHA_30372>();
                            if (i1 > 0)
                            {
                                CDHA_30372 cdha = new CDHA_30372();
                                Dictionary<string, object> dicpar = new Dictionary<string, object>();
                                // tên cơ quan chủ quản   
                                int TimeFormat = Convert.ToInt32(_Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN).FirstOrDefault().FormatDate);
                                cdha.TenBV = DungChung.Bien.TenCQ;
                                cdha.Logo = DungChung.Ham.GetLogo();
                                cdha.MaBN = par.FirstOrDefault().MaBNhan;
                                string[] DuongDan = par.Where(p => p.IdCLS == _IDCLS).FirstOrDefault().DuongDan2.Split('|');

                                for (int i = 0; i < DuongDan.Length; i++)
                                {
                                    switch (i)
                                    {
                                        case 1:
                                            if (DuongDan[0] != null)
                                            {
                                                cdha.Anh1 = InPhieu.KiemTraTonTaiAnh(DuongDan[0].ToString());
                                            }
                                            break;
                                        case 2:
                                            if (DuongDan[1] != null)
                                            {
                                                cdha.Anh2 = InPhieu.KiemTraTonTaiAnh(DuongDan[1].ToString());
                                            }
                                            break;
                                        case 3:
                                            if (DuongDan[2] != null)
                                            {
                                                cdha.Anh3 = InPhieu.KiemTraTonTaiAnh(DuongDan[2].ToString());
                                            }
                                            break;
                                        case 4:
                                            if (DuongDan[3] != null)
                                            {
                                                cdha.Anh4 = InPhieu.KiemTraTonTaiAnh(DuongDan[3].ToString());
                                            }
                                            break;
                                        case 5:
                                            if (DuongDan[4] != null)
                                            {
                                                cdha.Anh5 = InPhieu.KiemTraTonTaiAnh(DuongDan[4].ToString());
                                            }
                                            break;
                                        case 6:
                                            if (DuongDan[5] != null)
                                            {
                                                cdha.Anh6 = InPhieu.KiemTraTonTaiAnh(DuongDan[5].ToString());
                                            }
                                            break;
                                        case 7:
                                            if (DuongDan[6] != null)
                                            {
                                                cdha.Anh7 = InPhieu.KiemTraTonTaiAnh(DuongDan[6].ToString());
                                            }
                                            break;
                                        case 8:
                                            if (DuongDan[7] != null)
                                            {
                                                cdha.Anh8 = InPhieu.KiemTraTonTaiAnh(DuongDan[7].ToString());
                                            }
                                            break;

                                        default:
                                            break;
                                    }
                                }



                                cdha.DiaChiBenhVien = DungChung.Bien.DiaChi;
                                cdha.TieuDe = "PHIẾU NỘI SOI TIÊU HÓA";
                                cdha.SoDienThoaiLienHe = "SĐT: " + _Data.HTHONGs.FirstOrDefault().SDT + " - Fax: " + _Data.HTHONGs.FirstOrDefault().Fax + "";
                                cdha.YeuCau = par.FirstOrDefault().TenDV;
                                cdha.NgaySinh = par.FirstOrDefault().NgaySinh + " / " + par.FirstOrDefault().ThangSinh + " / " + par.FirstOrDefault().NamSinh;
                                cdha.TieuDeKetQua = "KẾT QUẢ NỘI SOI";
                                cdha.BSCD = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                                cdha.NgayChiDinh = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                                cdha.NgayTH = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayTH), TimeFormat);
                                cdha.Tuoi = par.FirstOrDefault().Tuoi;
                                if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong != null)
                                {
                                    cdha.Buong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong;
                                }
                                if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong != null)
                                {
                                    cdha.Giuong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong;
                                }

                                // Thông tin bệnh nhân
                                cdha.HoTen = par.FirstOrDefault().TenBNhan.ToUpper();
                                cdha.DiaChi = par.FirstOrDefault().DChi;
                                cdha.Khoa = par.FirstOrDefault().TenKP;
                                cdha.ChanDoan = par.FirstOrDefault().ChanDoan;
                                dicpar["SoLuongAnh"] = i1;
                                if (par.FirstOrDefault().GTinh != 1)
                                {
                                    cdha.Nam = "/";
                                    cdha.Nu = "";
                                }
                                else
                                {
                                    cdha.Nu = "/";
                                    cdha.Nam = "";
                                }
                                if (par.FirstOrDefault().SThe != "")
                                {
                                    cdha.MA1 = par.FirstOrDefault().SThe.Substring(0, 3);
                                    cdha.MA2 = par.FirstOrDefault().SThe.Substring(3, 2);
                                    cdha.MA3 = par.FirstOrDefault().SThe.Substring(5, 2);
                                    cdha.MA4 = par.FirstOrDefault().SThe.Substring(7, 3);
                                    cdha.MA5 = par.FirstOrDefault().SThe.Substring(10, 5);
                                }
                                if (ttbx.Count != 0)
                                {
                                    cdha.Email = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email;
                                    cdha.DienThoai = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai;
                                }

                                cdha.BacSyChiDinh = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                                if (string.IsNullOrEmpty(par.FirstOrDefault().KetQua_Rtf))
                                    cdha.KetQua = par.FirstOrDefault().KetQua;
                                else
                                    cdha.KetQua = par.FirstOrDefault().KetQua_Rtf;
                                cdha.KetLuan = par.FirstOrDefault().KetLuan;
                                cdha.LoiDan = par.FirstOrDefault().LoiDan;
                                cdha.NgayThang = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                                cdha.BSTH = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCBth).ToUpper();
                                rep.Add(cdha);
                                DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuCDHA_30372, rep.ToList(), dicpar, false);
                            }
                            else
                            {
                                MessageBox.Show("Xin hãy chọn số lượng ảnh cần in!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);

                            }
                        }
                    }


                    #endregion
                    #region Khác
                    else
                    {
                        using (BaoCao.Rep_PhieuNoiSoi Rep = new BaoCao.Rep_PhieuNoiSoi())
                        {
                            if (par.Count > 0)
                            {
                                if (DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "01071")
                                {
                                    string kieudoc1 = "";
                                    string kieudoc2 = "";
                                    var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                                select new
                                                {
                                                    ht.KieuDoc
                                                }).ToList();
                                    kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                                    kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                                    if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                                    {
                                        DungChung.Bien._Visible_CDHA[2] = false;
                                        DungChung.Bien._Visible_CDHA[0] = true;

                                    }
                                    if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                                    {
                                        DungChung.Bien._Visible_CDHA[0] = true;
                                        DungChung.Bien._Visible_CDHA[2] = false;

                                    }
                                    if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                                    {
                                        DungChung.Bien._Visible_CDHA[0] = true;
                                        DungChung.Bien._Visible_CDHA[2] = false;
                                    }
                                }
                                Rep.txtmabn.Text = "Mã BN: " + _mabn.ToString();
                                Rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                if (DungChung.Bien.MaBV == "27023")
                                    Rep.SoPhieu.Value = _so;

                                else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                {
                                    if (par.Count > 0)
                                    {
                                        int mabn = par.FirstOrDefault().MaBNhan;
                                        var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                        if (qvv != null)
                                            Rep.SoPhieu.Value = qvv.SoVV;
                                        else
                                            Rep.SoPhieu.Value = "";
                                    }
                                }
                                else
                                    Rep.SoPhieu.Value = _IDCLS;
                                if (DungChung.Bien.MaBV == "24012")
                                {
                                    Rep.lbl_icd_24012_1.Visible = true;
                                    Rep.lbl_icd_24012_2.Visible = true;
                                    Rep.Parameters["MaICD"].Value = par.First().MaICD + ", " + par.First().MaICD2;
                                }
                                Rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                Rep.DiaChi.Value = par.FirstOrDefault().DChi;
                                Rep.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                Rep.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    Rep.Nu.Value = "/";
                                }
                                else if (gioiTinh == 0)
                                {
                                    Rep.Nam.Value = "/";
                                }
                                Rep.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                                Rep.KetLuan.Value = par.FirstOrDefault().KetLuan;
                                string str = "";
                                if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                    str = par.FirstOrDefault().KetQua;
                                Rep.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                Rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                                if (par.FirstOrDefault().SThe.Length >= 15)
                                {
                                    Rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                    Rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                    Rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                    Rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                    Rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                }
                                string[] arrThongTinBNKB = { "", "", "", "", "" };
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                Rep.ChanDoan.Value = par.FirstOrDefault().ChanDoanBD != null || par.FirstOrDefault().ChanDoanBD != "" ? par.FirstOrDefault().ChanDoanBD + ";" : "";
                                if (DungChung.Bien.MaBV != "24272")
                                {
                                    Rep.ChanDoan.Value += arrThongTinBNKB[1];
                                }
                                Rep.Buong.Value = arrThongTinBNKB[2];
                                Rep.Giuong.Value = arrThongTinBNKB[3];
                                Rep.xrLabel6.Text = Rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                Rep.xrLabel11.Text = Rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                Rep.Khoa.Value = arrThongTinBNKB[4];


                                if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                    Rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                else
                                    Rep.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                if (par.FirstOrDefault().NgayTH != null)
                                    Rep.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    Rep.NgayTT.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                Rep.Macb.Value = par.FirstOrDefault().MaCBth;
                                if (DungChung.Bien.MaBV == "30010")
                                {
                                    var maKPth = par.FirstOrDefault().MaKPth.Value;
                                    Rep.KPTH.Value = _Data.KPhongs.FirstOrDefault(p => p.MaKP == maKPth).TenKP;
                                }
                            }

                            Rep.CreateDocument();
                            frm2.prcIN.PrintingSystem = Rep.PrintingSystem;

                            frm2.ShowDialog();
                        }
                    }


                    break;
                #endregion
                #endregion
                #region thủ thuật
                case "Thủ thuật":
                    using (frmIn frm21 = new frmIn())
                    {
                        using (BaoCao.Rep_PhieuNoiSoi rep21 = new BaoCao.Rep_PhieuNoiSoi())
                        {
                            if (par.Count > 0)
                            {
                                if (DungChung.Bien.MaBV == "24012")
                                {
                                    rep21.lbl_icd_24012_1.Visible = true;
                                    rep21.lbl_icd_24012_2.Visible = true;
                                    rep21.Parameters["MaICD"].Value = par.First().MaICD /*+ ", " + par.First().MaICD2*/;
                                }
                                rep21.txtmabn.Text = _mabn.ToString();
                                rep21.TenBN.Value = (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789") ? par.FirstOrDefault().TenBNhan.ToUpper() : par.FirstOrDefault().TenBNhan;
                                if (DungChung.Bien.MaBV == "27023")
                                    rep21.SoPhieu.Value = _so;
                                else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                {
                                    if (par.Count > 0)
                                    {
                                        int mabn = par.FirstOrDefault().MaBNhan;
                                        var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                        if (qvv != null)
                                            rep21.SoPhieu.Value = qvv.SoVV;
                                        else
                                            rep21.SoPhieu.Value = "";
                                    }
                                }
                                else
                                    rep21.SoPhieu.Value = _IDCLS;
                                rep21.xrLabel6.Text = rep21.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                rep21.xrLabel11.Text = rep21.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                rep21.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                rep21.DiaChi.Value = par.FirstOrDefault().DChi;
                                rep21.TuoiBN.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.CalculateAge(par.FirstOrDefault().NgaySinh, par.FirstOrDefault().ThangSinh, par.FirstOrDefault().NamSinh, " tháng.") : DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                rep21.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep21.Nu.Value = "/";
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep21.Nam.Value = "/";
                                }
                                if (DungChung.Bien.MaBV == "01830" || DungChung.Bien.MaBV == "30005")
                                {
                                    rep21.lab1.Text = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                                    rep21.lblHenGhiNoiSoi.Visible = false;
                                    rep21.xrLabel45.Visible = false;
                                }

                                rep21.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                                rep21.KetLuan.Value = par.FirstOrDefault().KetLuan;
                                string str = "";
                                //if (DungChung.Bien.MaBV == "30372")
                                //{
                                //if (string.IsNullOrEmpty(par.FirstOrDefault().KetQua_Rtf))
                                //str = par.FirstOrDefault().KetQua;
                                //else
                                //str = par.FirstOrDefault().KetQua_Rtf;
                                //}
                                //else
                                str = par.FirstOrDefault().KetQua;

                                rep21.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                rep21.Loidan.Value = par.FirstOrDefault().LoiDan;
                                if (par.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep21.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                    rep21.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                    rep21.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                    rep21.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                    rep21.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                }
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                if (DungChung.Bien.MaBV == "14018")
                                {
                                    rep21.ChanDoan.Value = DungChung.Ham.GetChanDoanKB(_Data, _mabn);
                                }
                                else if (par.FirstOrDefault().IsDongY == true && DungChung.Bien.MaBV == "24297")
                                {
                                    rep21.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_24297(_Data, _mabn);
                                }
                                else
                                {
                                    rep21.ChanDoan.Value = (par.FirstOrDefault().ChanDoanBD != null || par.FirstOrDefault().ChanDoanBD != "") && DungChung.Bien.MaBV == "24272" ? par.FirstOrDefault().ChanDoanBD + ";" : "";
                                    if (DungChung.Bien.MaBV != "24272")
                                    {
                                        rep21.ChanDoan.Value += DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                                    }
                                }

                                rep21.Buong.Value = arrThongTinBNKB[2];
                                rep21.Giuong.Value = arrThongTinBNKB[3];

                                rep21.Khoa.Value = arrThongTinBNKB[4];

                                if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                    rep21.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                else
                                    rep21.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                if (par.FirstOrDefault().NgayTH != null)
                                    rep21.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep21.NgayTT.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                rep21.Macb.Value = par.FirstOrDefault().MaCBth;

                            }

                            if (DungChung.Bien.MaBV == "30010") //Yenbg1
                            {
                                int KPTH = Convert.ToInt32(par.Select(p => p.MaKPth).FirstOrDefault().ToString());
                                rep21.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == KPTH).Select(p => p.TenKP).FirstOrDefault().ToString();
                            }
                            rep21.CreateDocument();
                            frm21.prcIN.PrintingSystem = rep21.PrintingSystem;
                            frm21.ShowDialog();
                        }
                    }
                    break;
                #endregion
                #region siêu âm doppler
                case "Siêu âm ( Doppler )":
                    if (DungChung.Bien.MaBV == "27023")
                    {
                        CLS.InPhieu.InPhieuSieuAmDopplerTim(_IDCLS);
                        break;
                    }
                    else
                    {
                        int _IDCD = 0;
                        int _IDCLS1 = 0;
                        if (par.Count > 0)
                            _IDCD = par.FirstOrDefault().IDCD;
                        if (par1.Count > 0)
                            _IDCLS1 = par1.FirstOrDefault().IdCLS;
                        CLS.InPhieu.InLuuHuyetNao1(_Data, _IDCD, _IDCLS1, 2);
                        break;
                    }
                #endregion
                #region lưu huyết não
                case "Lưu huyết não":
                    int _IDCD2 = 0;
                    if (par.Count > 0)
                        _IDCD2 = par.FirstOrDefault().IDCD;
                    if (DungChung.Bien.MaBV == "30009")
                    {
                        CLS.InPhieu.InLuuHuyetNao_30009(_IDCD2);
                    }
                    else
                        CLS.InPhieu.InLuuHuyetNao(_Data, _IDCD2, _tieunhom, 0);
                    break;
                #endregion
                #region đo mật độ xương
                case "Đo mật độ xương":
                    int _IDCD3 = 0;
                    string tieunhom = _tieunhom;
                    if (par.Count > 0)
                        _IDCD3 = par.FirstOrDefault().IDCD;
                    if (DungChung.Bien.MaBV == "30009")
                        CLS.InPhieu.InPhieuThamDoChucNang(_IDCD3, 1, DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.DoMatDoXuong);
                    else if (DungChung.Bien.MaBV == "30010")
                    {
                        CLS.InPhieu.InLuuHuyetNao30010(_Data, _IDCD3, tieunhom, 1);
                    }
                    else
                        CLS.InPhieu.InLuuHuyetNao(_Data, _IDCD3, _tieunhom, 1);
                    break;
                #endregion
                #region thăm dò chức năng
                case "Thăm dò chức năng":
                    int _IDCD4 = 0;
                    if (par.Count > 0)
                        _IDCD4 = par.FirstOrDefault().IDCD;
                    CLS.InPhieu.InPhieuThamDoChucNang(_IDCD4, 1, DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.DoMatDoXuong);
                    break;
                #endregion
                #region thăm dò chức năng
                case "Đo khúc xạ máy":
                    int _IDCD44 = 0;
                    if (par.Count > 0)
                        _IDCD44 = par.FirstOrDefault().IDCD;
                    CLS.InPhieu.InPhieuThamDoChucNang(_IDCD44, 3, DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.DoKhucXaMay);
                    break;
                #endregion
                #region Nội Soi Dạ Dày
                #region 30372
                case "Nội soi Dạ Dày":
                    if (DungChung.Bien.MaBV == "30372")
                    {
                        using (frm_SoLuongAnhIn frm = new frm_SoLuongAnhIn())
                        {
                            frm.ShowDialog();
                            int i1 = frm.SoLuongAnhin;
                            List<CDHA_30372> rep = new List<CDHA_30372>();
                            if (i1 > 0)
                            {
                                CDHA_30372 cdha = new CDHA_30372();
                                Dictionary<string, object> dicpar = new Dictionary<string, object>();
                                // tên cơ quan chủ quản   
                                int TimeFormat = Convert.ToInt32(_Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN).FirstOrDefault().FormatDate);
                                cdha.TenBV = DungChung.Bien.TenCQ;
                                cdha.Logo = DungChung.Ham.GetLogo();
                                cdha.MaBN = par.FirstOrDefault().MaBNhan;
                                // Chua in phieu
                                string[] DuongDan = par.Where(p => p.IdCLS == _IDCLS).FirstOrDefault().DuongDan2.Split('|');

                                for (int i = 0; i < DuongDan.Length; i++)
                                {
                                    switch (i)
                                    {
                                        case 1:
                                            if (DuongDan[0] != null)
                                            {
                                                cdha.Anh1 = InPhieu.KiemTraTonTaiAnh(DuongDan[0].ToString());
                                            }
                                            break;
                                        case 2:
                                            if (DuongDan[1] != null)
                                            {
                                                cdha.Anh2 = InPhieu.KiemTraTonTaiAnh(DuongDan[1].ToString());
                                            }
                                            break;
                                        case 3:
                                            if (DuongDan[2] != null)
                                            {
                                                cdha.Anh3 = InPhieu.KiemTraTonTaiAnh(DuongDan[2].ToString());
                                            }
                                            break;
                                        case 4:
                                            if (DuongDan[3] != null)
                                            {
                                                cdha.Anh4 = InPhieu.KiemTraTonTaiAnh(DuongDan[3].ToString());
                                            }
                                            break;
                                        case 5:
                                            if (DuongDan[4] != null)
                                            {
                                                cdha.Anh5 = InPhieu.KiemTraTonTaiAnh(DuongDan[4].ToString());
                                            }
                                            break;
                                        case 6:
                                            if (DuongDan[5] != null)
                                            {
                                                cdha.Anh6 = InPhieu.KiemTraTonTaiAnh(DuongDan[5].ToString());
                                            }
                                            break;
                                        case 7:
                                            if (DuongDan[6] != null)
                                            {
                                                cdha.Anh7 = InPhieu.KiemTraTonTaiAnh(DuongDan[6].ToString());
                                            }
                                            break;
                                        case 8:
                                            if (DuongDan[7] != null)
                                            {
                                                cdha.Anh8 = InPhieu.KiemTraTonTaiAnh(DuongDan[7].ToString());
                                            }
                                            break;

                                        default:
                                            break;
                                    }
                                }



                                cdha.DiaChiBenhVien = DungChung.Bien.DiaChi;
                                if (Frm_CDHA_Moi._indexPhieu == 6 || Frm_CDHA_Moi._indexPhieu == 15)
                                { cdha.TieuDe = "PHIẾU NỘI SOI ĐẠI TRỰC TRÀNG"; }
                                else { cdha.TieuDe = "PHIẾU NỘI SOI DẠ DÀY"; }
                                cdha.SoDienThoaiLienHe = "SĐT: " + _Data.HTHONGs.FirstOrDefault().SDT + " - Fax: " + _Data.HTHONGs.FirstOrDefault().Fax + "";
                                cdha.YeuCau = par.FirstOrDefault().TenDV;
                                cdha.NgaySinh = par.FirstOrDefault().NgaySinh + " / " + par.FirstOrDefault().ThangSinh + " / " + par.FirstOrDefault().NamSinh;
                                cdha.TieuDeKetQua = "KẾT QUẢ NỘI SOI";
                                cdha.BSCD = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                                cdha.NgayChiDinh = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                                cdha.NgayTH = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayTH), TimeFormat);
                                cdha.Tuoi = par.FirstOrDefault().Tuoi;
                                if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong != null)
                                {
                                    cdha.Buong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong;
                                }
                                if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong != null)
                                {
                                    cdha.Giuong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong;
                                }

                                // Thông tin bệnh nhân
                                cdha.HoTen = par.FirstOrDefault().TenBNhan.ToUpper();
                                cdha.DiaChi = par.FirstOrDefault().DChi;
                                cdha.Khoa = par.FirstOrDefault().TenKP;
                                cdha.ChanDoan = par.FirstOrDefault().ChanDoan;
                                dicpar["SoLuongAnh"] = i1;
                                if (par.FirstOrDefault().GTinh != 1)
                                {
                                    cdha.Nam = "/";
                                    cdha.Nu = "";
                                }
                                else
                                {
                                    cdha.Nu = "/";
                                    cdha.Nam = "";
                                }
                                if (par.FirstOrDefault().SThe != "")
                                {
                                    cdha.MA1 = par.FirstOrDefault().SThe.Substring(0, 3);
                                    cdha.MA2 = par.FirstOrDefault().SThe.Substring(3, 2);
                                    cdha.MA3 = par.FirstOrDefault().SThe.Substring(5, 2);
                                    cdha.MA4 = par.FirstOrDefault().SThe.Substring(7, 3);
                                    cdha.MA5 = par.FirstOrDefault().SThe.Substring(10, 5);
                                }
                                if (ttbx.Count != 0)
                                {
                                    cdha.Email = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email;
                                    cdha.DienThoai = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai;
                                }

                                cdha.BacSyChiDinh = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                                if (par.FirstOrDefault().KetQua_Rtf == null)
                                    cdha.KetQua = par.FirstOrDefault().KetQua;
                                else
                                    cdha.KetQua = par.FirstOrDefault().KetQua_Rtf;
                                cdha.KetLuan = par.FirstOrDefault().KetLuan;
                                cdha.LoiDan = par.FirstOrDefault().LoiDan;
                                cdha.NgayThang = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                                cdha.BSTH = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCBth).ToUpper();
                                rep.Add(cdha);
                                DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuCDHA_30372, rep.ToList(), dicpar, false);
                            }
                            else
                            {
                                MessageBox.Show("Xin hãy chọn số lượng ảnh cần in!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);

                            }
                        }
                    }
                            
                    break;

                #endregion
                #endregion
                #region điện não đồ
                case "Điện não đồ":
                    int _IDCD5 = 0;
                    if (par.Count > 0)
                    {
                        _IDCD5 = par.FirstOrDefault().IDCD;

                    }

                    CLS.InPhieu.InDienNaoDo(_Data, _IDCD5, _tieunhom, _mabn, _IDCLS, 3);
                    break;
                #endregion
                #region Nội soi cổ tử cung
                case "Nội soi Cổ Tử Cung":
                    if (DungChung.Bien.MaBV == "30372")
                    {
                        using (frm_SoLuongAnhIn frm = new frm_SoLuongAnhIn())
                        {
                            frm.ShowDialog();
                            int i1 = frm.SoLuongAnhin;
                            List<CDHA_30372> rep = new List<CDHA_30372>();
                            if (i1 > 0)
                            {
                                CDHA_30372 cdha = new CDHA_30372();
                                Dictionary<string, object> dicpar = new Dictionary<string, object>();
                                // tên cơ quan chủ quản   
                                int TimeFormat = Convert.ToInt32(_Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN).FirstOrDefault().FormatDate);
                                cdha.TenBV = DungChung.Bien.TenCQ;
                                cdha.Logo = DungChung.Ham.GetLogo();
                                cdha.MaBN = par.FirstOrDefault().MaBNhan;
                                string[] DuongDan = par.Where(p => p.IdCLS == _IDCLS).FirstOrDefault().DuongDan2.Split('|');

                                for (int i = 0; i < DuongDan.Length; i++)
                                {
                                    switch (i)
                                    {
                                        case 1:
                                            if (DuongDan[0] != null)
                                            {
                                                cdha.Anh1 = InPhieu.KiemTraTonTaiAnh(DuongDan[0].ToString());
                                            }
                                            break;
                                        case 2:
                                            if (DuongDan[1] != null)
                                            {
                                                cdha.Anh2 = InPhieu.KiemTraTonTaiAnh(DuongDan[1].ToString());
                                            }
                                            break;
                                        case 3:
                                            if (DuongDan[2] != null)
                                            {
                                                cdha.Anh3 = InPhieu.KiemTraTonTaiAnh(DuongDan[2].ToString());
                                            }
                                            break;
                                        case 4:
                                            if (DuongDan[3] != null)
                                            {
                                                cdha.Anh4 = InPhieu.KiemTraTonTaiAnh(DuongDan[3].ToString());
                                            }
                                            break;
                                        case 5:
                                            if (DuongDan[4] != null)
                                            {
                                                cdha.Anh5 = InPhieu.KiemTraTonTaiAnh(DuongDan[4].ToString());
                                            }
                                            break;
                                        case 6:
                                            if (DuongDan[5] != null)
                                            {
                                                cdha.Anh6 = InPhieu.KiemTraTonTaiAnh(DuongDan[5].ToString());
                                            }
                                            break;
                                        case 7:
                                            if (DuongDan[6] != null)
                                            {
                                                cdha.Anh7 = InPhieu.KiemTraTonTaiAnh(DuongDan[6].ToString());
                                            }
                                            break;
                                        case 8:
                                            if (DuongDan[7] != null)
                                            {
                                                cdha.Anh8 = InPhieu.KiemTraTonTaiAnh(DuongDan[7].ToString());
                                            }
                                            break;

                                        default:
                                            break;
                                    }
                                }



                                cdha.DiaChiBenhVien = DungChung.Bien.DiaChi;
                                cdha.TieuDe = "PHIẾU NỘI SOI CỔ TỬ CUNG";
                                cdha.SoDienThoaiLienHe = "SĐT: " + _Data.HTHONGs.FirstOrDefault().SDT + " - Fax: " + _Data.HTHONGs.FirstOrDefault().Fax + "";
                                cdha.YeuCau = par.FirstOrDefault().TenDV;
                                cdha.NgaySinh = par.FirstOrDefault().NgaySinh + " / " + par.FirstOrDefault().ThangSinh + " / " + par.FirstOrDefault().NamSinh;
                                cdha.TieuDeKetQua = "KẾT QUẢ NỘI SOI";
                                cdha.BSCD = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                                cdha.NgayChiDinh = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                                cdha.NgayTH = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayTH), TimeFormat);
                                cdha.Tuoi = par.FirstOrDefault().Tuoi;
                                if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong != null)
                                {
                                    cdha.Buong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong;
                                }
                                if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong != null)
                                {
                                    cdha.Giuong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong;
                                }

                                // Thông tin bệnh nhân
                                cdha.HoTen = par.FirstOrDefault().TenBNhan.ToUpper();
                                cdha.DiaChi = par.FirstOrDefault().DChi;
                                cdha.Khoa = par.FirstOrDefault().TenKP;
                                cdha.ChanDoan = par.FirstOrDefault().ChanDoan;
                                dicpar["SoLuongAnh"] = i1;
                                if (par.FirstOrDefault().GTinh != 1)
                                {
                                    cdha.Nam = "/";
                                    cdha.Nu = "";
                                }
                                else
                                {
                                    cdha.Nu = "/";
                                    cdha.Nam = "";
                                }
                                if (par.FirstOrDefault().SThe != "")
                                {
                                    cdha.MA1 = par.FirstOrDefault().SThe.Substring(0, 3);
                                    cdha.MA2 = par.FirstOrDefault().SThe.Substring(3, 2);
                                    cdha.MA3 = par.FirstOrDefault().SThe.Substring(5, 2);
                                    cdha.MA4 = par.FirstOrDefault().SThe.Substring(7, 3);
                                    cdha.MA5 = par.FirstOrDefault().SThe.Substring(10, 5);
                                }
                                if (ttbx.Count != 0)
                                {
                                    cdha.Email = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email;
                                    cdha.DienThoai = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai;
                                }

                                cdha.BacSyChiDinh = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                                if (par.FirstOrDefault().KetQua_Rtf == null)
                                    cdha.KetQua = par.FirstOrDefault().KetQua;
                                else
                                    cdha.KetQua = par.FirstOrDefault().KetQua_Rtf;

                                cdha.KetLuan = par.FirstOrDefault().KetLuan;
                                cdha.LoiDan = par.FirstOrDefault().LoiDan;
                                cdha.NgayThang = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                                cdha.BSTH = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCBth).ToUpper();
                                rep.Add(cdha);
                                DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuCDHA_30372, rep.ToList(), dicpar, false);
                            }
                            else
                            {
                                MessageBox.Show("Xin hãy chọn số lượng ảnh cần in!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);

                            }
                        }
                        
                    }

                    break;
                #endregion
                #region Nội soi tai mũi họng
                case "Nội soi Tai-Mũi-Họng":
                    if (DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "27777" || DungChung.Bien.MaBV == "24272")
                    {
                        int _mkp4 = 0;
                        using (frmIn frm4 = new frmIn())
                        {
using (BaoCao.Rep_PhieuNoiSoiTMH rep4 = new BaoCao.Rep_PhieuNoiSoiTMH())
                        {
                                if (par.Count > 0)
                                {
                                    if (DungChung.Bien.MaBV == "24012")
                                    {
                                        rep4.lbl_icd_24012_1.Visible = true;
                                        rep4.lbl_icd_24012_2.Visible = true;
                                        rep4.Parameters["MaICD"].Value = par.First().MaICD /*+ ", " + par.First().MaICD2*/;
                                    }
                                    _mkp4 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                                    rep4.paramHoTen.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    rep4.paramDiaChi.Value = par.FirstOrDefault().DChi;
                                    if (DungChung.Bien.MaBV == "27023")
                                        rep4.IDCLS.Value = _so;
                                    else
                                        rep4.IDCLS.Value = _IDCLS;
                                    if (DungChung.Bien.MaBV == "24012")
                                    {
                                        rep4.SubBand1.Visible = false;
                                        rep4.SubBand2.Visible = false;
                                        rep4.SubBand3.Visible = false;
                                        rep4.SubBand4.Visible = false;
                                        rep4.SubBand5.Visible = false;
                                        rep4.SubBand6.Visible = false;
                                        rep4.SubBand9.Visible = true;
                                        rep4.SubBand7.Visible = true;
                                        rep4.SubBand8.Visible = true;

                                    }
                                    rep4.xrTableCell60.Text = "BÁC SĨ CHỈ ĐỊNH";
                                    rep4.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                    rep4.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                    rep4.paramGioiTinh.Value = par.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                                    rep4.paramSThe.Value = par.FirstOrDefault().SThe;
                                    rep4.paramDoiTuong.Value = par.FirstOrDefault().DTuong;
                                    rep4.paramTuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                    rep4.paramKetLuan.Value = par.FirstOrDefault().KetLuan;
                                    rep4.paraLoiDan.Value = par.FirstOrDefault().LoiDan;
                                    rep4.paramPhieuSo.Value = par.FirstOrDefault().IdCLS;
                                    if (par.FirstOrDefault().NgayThang != null)
                                    {
                                        rep4.paramNgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    }
                                    else
                                        rep4.paramNgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        rep4.paramNgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep4.paramNgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                    int _makpth = 0;
                                    if (par.FirstOrDefault().MaKPth != null)
                                    {
                                        _makpth = par.FirstOrDefault().MaKPth.Value;

                                    }
                                    var kp = _Data.KPhongs.Where(p => p.MaKP == _makpth).ToList();
                                    if (kp.Count > 0)
                                        rep4.paramPhongKham.Value = kp.FirstOrDefault().TenKP.ToUpper();
                                    string a = "", b = ""; ; a = par0.FirstOrDefault().MaCB;
                                    b = par.FirstOrDefault().MaCBth;

                                    if (!string.IsNullOrEmpty(a))
                                        rep4.paramCanBoDT.Value = DungChung.Ham._getTenCB(_Data, a).ToUpper();
                                    if (!string.IsNullOrEmpty(b))
                                        rep4.BSTH.Value = DungChung.Ham._getTenCB(_Data, b).ToUpper();
                                    string ddan = "", ketqua = "";
                                    if (par.FirstOrDefault().DuongDan2 != null)
                                        ddan = par.FirstOrDefault().DuongDan2;
                                    if (DungChung.Bien.MaBV == "30372")
                                    {
                                        if (par.FirstOrDefault().KetQua_Rtf == null)
                                            ketqua = par.FirstOrDefault().KetQua;
                                        else
                                            ketqua = par.FirstOrDefault().KetQua_Rtf;
                                    }
                                    else
                                        ketqua = par.FirstOrDefault().KetQua;
                                    rep4.hienthi(ketqua, ddan);
                                }
                                var kb4 = (from kb2 in _Data.BNKBs.Where(p => p.MaBNhan == _mabn).Where(p => p.MaKP == _mkp4) select new { kb2.IDKB, kb2.ChanDoan, kb2.BenhKhac }).OrderByDescending(p => p.IDKB).ToList();
                                rep4.paramChanDoan.Value = (par.FirstOrDefault().ChanDoanBD != null || par.FirstOrDefault().ChanDoanBD != "") && DungChung.Bien.MaBV == "24272" ? par.FirstOrDefault().ChanDoanBD + ";" : "";
                                if (kb4.Count > 0)
                                {
                                    if (DungChung.Bien.MaBV != "24272")
                                    {
                                        rep4.paramChanDoan.Value += kb4.FirstOrDefault().ChanDoan + "/" + kb4.FirstOrDefault().BenhKhac;
                                    }
                                }
                                rep4.CreateDocument();
                                frm4.prcIN.PrintingSystem = rep4.PrintingSystem;
                                frm4.ShowDialog();
                            }
                        }
                        
                            
                    }
                    else if (DungChung.Bien.MaBV == "30372")
                    {

                        using (frm_SoLuongAnhIn frm = new frm_SoLuongAnhIn())
                        {
                            frm.ShowDialog();
                            int i1 = frm.SoLuongAnhin;
                            List<CDHA_30372> rep = new List<CDHA_30372>();
                            if (i1 > 0)
                            {
                                CDHA_30372 cdha = new CDHA_30372();
                                Dictionary<string, object> dicpar = new Dictionary<string, object>();
                                // tên cơ quan chủ quản   
                                int TimeFormat = Convert.ToInt32(_Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN).FirstOrDefault().FormatDate);
                                cdha.TenBV = DungChung.Bien.TenCQ;
                                cdha.Logo = DungChung.Ham.GetLogo();
                                cdha.MaBN = par.FirstOrDefault().MaBNhan;
                                string[] DuongDan = par.Where(p => p.IdCLS == _IDCLS).FirstOrDefault().DuongDan2.Split('|');

                                for (int i = 0; i < DuongDan.Length; i++)
                                {
                                    switch (i)
                                    {
                                        case 1:
                                            if (DuongDan[0] != null)
                                            {
                                                cdha.Anh1 = InPhieu.KiemTraTonTaiAnh(DuongDan[0].ToString());
                                            }
                                            break;
                                        case 2:
                                            if (DuongDan[1] != null)
                                            {
                                                cdha.Anh2 = InPhieu.KiemTraTonTaiAnh(DuongDan[1].ToString());
                                            }
                                            break;
                                        case 3:
                                            if (DuongDan[2] != null)
                                            {
                                                cdha.Anh3 = InPhieu.KiemTraTonTaiAnh(DuongDan[2].ToString());
                                            }
                                            break;
                                        case 4:
                                            if (DuongDan[3] != null)
                                            {
                                                cdha.Anh4 = InPhieu.KiemTraTonTaiAnh(DuongDan[3].ToString());
                                            }
                                            break;
                                        case 5:
                                            if (DuongDan[4] != null)
                                            {
                                                cdha.Anh5 = InPhieu.KiemTraTonTaiAnh(DuongDan[4].ToString());
                                            }
                                            break;
                                        case 6:
                                            if (DuongDan[5] != null)
                                            {
                                                cdha.Anh6 = InPhieu.KiemTraTonTaiAnh(DuongDan[5].ToString());
                                            }
                                            break;
                                        case 7:
                                            if (DuongDan[6] != null)
                                            {
                                                cdha.Anh7 = InPhieu.KiemTraTonTaiAnh(DuongDan[6].ToString());
                                            }
                                            break;
                                        case 8:
                                            if (DuongDan[7] != null)
                                            {
                                                cdha.Anh8 = InPhieu.KiemTraTonTaiAnh(DuongDan[7].ToString());
                                            }
                                            break;

                                        default:
                                            break;
                                    }
                                }
                                cdha.DiaChiBenhVien = DungChung.Bien.DiaChi;
                                cdha.TieuDe = "PHIẾU NỘI SOI - TAI - MŨI - HỌNG";
                                cdha.SoDienThoaiLienHe = "SĐT: " + _Data.HTHONGs.FirstOrDefault().SDT + " - Fax: " + _Data.HTHONGs.FirstOrDefault().Fax + "";
                                cdha.YeuCau = par.FirstOrDefault().TenDV;
                                cdha.NgaySinh = par.FirstOrDefault().NgaySinh + " / " + par.FirstOrDefault().ThangSinh + " / " + par.FirstOrDefault().NamSinh;
                                cdha.TieuDeKetQua = "KẾT QUẢ NỘI SOI";
                                cdha.BSCD = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                                cdha.NgayChiDinh = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                                cdha.NgayTH = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayTH), TimeFormat);
                                cdha.Tuoi = par.FirstOrDefault().Tuoi;
                                if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong != null)
                                {
                                    cdha.Buong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong;
                                }
                                if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong != null)
                                {
                                    cdha.Giuong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong;
                                }

                                // Thông tin bệnh nhân
                                cdha.HoTen = par.FirstOrDefault().TenBNhan.ToUpper();
                                cdha.DiaChi = par.FirstOrDefault().DChi;
                                cdha.Khoa = par.FirstOrDefault().TenKP;
                                cdha.ChanDoan = par.FirstOrDefault().ChanDoan;
                                dicpar["SoLuongAnh"] = i1;
                                if (par.FirstOrDefault().GTinh != 1)
                                {
                                    cdha.Nam = "/";
                                    cdha.Nu = "";
                                }
                                else
                                {
                                    cdha.Nu = "/";
                                    cdha.Nam = "";
                                }
                                if (par.FirstOrDefault().SThe != "")
                                {
                                    cdha.MA1 = par.FirstOrDefault().SThe.Substring(0, 3);
                                    cdha.MA2 = par.FirstOrDefault().SThe.Substring(3, 2);
                                    cdha.MA3 = par.FirstOrDefault().SThe.Substring(5, 2);
                                    cdha.MA4 = par.FirstOrDefault().SThe.Substring(7, 3);
                                    cdha.MA5 = par.FirstOrDefault().SThe.Substring(10, 5);
                                }
                                if (ttbx.Count != 0)
                                {
                                    cdha.Email = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email;
                                    cdha.DienThoai = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai;
                                }

                                cdha.BacSyChiDinh = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                                if (par.FirstOrDefault().KetQua_Rtf == null)
                                    cdha.KetQua = par.FirstOrDefault().KetQua;
                                else
                                    cdha.KetQua = par.FirstOrDefault().KetQua_Rtf;
                                cdha.KetLuan = par.FirstOrDefault().KetLuan;
                                cdha.LoiDan = par.FirstOrDefault().LoiDan;
                                cdha.NgayThang = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                                cdha.BSTH = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCBth).ToUpper();
                                rep.Add(cdha);
                                DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuCDHA_30372, rep.ToList(), dicpar, false);
                            }
                            else
                            {
                                MessageBox.Show("Xin hãy chọn số lượng ảnh cần in!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);

                            }
                        }
                        
                    }
                    break;
                    #endregion
            }
        }
        public static void _inPhieu_CDHA_InFull(QLBV_Database.QLBVEntities _Data, string _tieunhom, int _mabn, int _IDCLS, int IDCD, bool Mode, int _mkp = 0)
        {
            #region 34019
            if (DungChung.Bien.MaBV == "34019")
            {

                var cls = _Data.CLS.Where(p => p.IdCLS == _IDCLS).FirstOrDefault();
                DateTime ngaycd = cls != null ? Convert.ToDateTime(cls.NgayThang) : DateTime.Now;

                var rg = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _mabn)
                          join cls4 in _Data.CLS.Where(p => p.IdCLS == _IDCLS) on bn.MaBNhan equals cls4.MaBNhan
                          join chidinh in _Data.ChiDinhs.Where(o => InTongHop ? o.Status == 0 : true) on cls4.IdCLS equals chidinh.IdCLS
                          join dv in _Data.DichVus on chidinh.MaDV equals dv.MaDV
                          join tn in _Data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                          select new { tn.TenRG }).ToList();
                string tenRG = rg.Count >= 0 ? rg.FirstOrDefault().TenRG : "";

                var par3 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _mabn)
                            join cls4 in _Data.CLS.Where(p => p.NgayThang == ngaycd) on bn.MaBNhan equals cls4.MaBNhan
                            join kp in _Data.KPhongs on cls4.MaKP equals kp.MaKP
                            join kpTH in _Data.KPhongs on cls4.MaKPth equals kpTH.MaKP
                            join chidinh in _Data.ChiDinhs.Where(o => InTongHop ? o.Status == 0 : true) on cls4.IdCLS equals chidinh.IdCLS
                            join dv in _Data.DichVus on chidinh.MaDV equals dv.MaDV
                            join tn in _Data.TieuNhomDVs.Where(o => o.TenRG == tenRG) on dv.IdTieuNhom equals tn.IdTieuNhom
                            select new { chidinh.IDCD, cls4.STT, tn.TenTN, chidinh.Status, chidinh.SoPhieu, cls4.NgayThang, cls4.MaCB, cls4.MaKP, kp.TenKP, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, cls4.MaKPth, TenKPth = kpTH.TenKP, DiaChiKPth = kpTH.DChi, bn.Tuoi, bn.SThe, bn.HanBHDen, bn.NoiTru, chidinh.ChiDinh1, chidinh.KetLuan, dv.TenDV, cls4.NgayTH, cls4.CapCuu, bn.NgaySinh, bn.ThangSinh, bn.NamSinh, bn.DTuong, bn.HanBHTu, cls4.BarCode, chidinh.LoiDan, chidinh.TrongBH, bn.IDPerson }).ToList();
                var par41 = (from p in par3
                             join clsct in _Data.CLScts on p.IDCD equals clsct.IDCD
                             select new { p.STT, p.TenTN, p.Status, p.SoPhieu, p.NgayThang, p.MaCB, p.MaKP, p.TenKP, p.MaBNhan, p.TenBNhan, p.DChi, p.GTinh, p.MaKPth, TenKPth = p.TenKP, DiaChiKPth = p.DiaChiKPth, p.Tuoi, p.SThe, p.HanBHDen, p.NoiTru, p.ChiDinh1, p.KetLuan, p.TenDV, p.NgayTH, p.CapCuu, p.NgaySinh, p.ThangSinh, p.NamSinh, p.DTuong, p.HanBHTu, p.BarCode, p.LoiDan, clsct.KetQua, IsTrongBH = (p.TrongBH == 1), p.IDPerson }).ToList();

                //if (par4.Count > 0)
                //{
                //    if (DungChung.Bien._Visible_CDHA[1] == false)
                //    {
                //        if (par4.Exists(o => o.Status == 1))
                //            DungChung.Bien._Visible_CDHA[2] = true;
                //        else
                //            DungChung.Bien._Visible_CDHA[2] = false;
                //    }
                //}

                for (int i = 0; i < 2; i++)
                {
                    var par4 = par41.Where(o => o.IsTrongBH == (i == 0)).ToList();
                    if (par4.Count > 0)
                    {

                        repPhieuKetQua_CDHA_34019_A4 rep = new repPhieuKetQua_CDHA_34019_A4();//3
                        rep.xrPictureBox1.Image = QLBV.DungChung.Ham.GetLogo();
                        rep.SoPhieu.Value = par4.FirstOrDefault().SoPhieu;
                        rep.MaDieuTri.Value = _mabn;
                        rep.MaBN.Value = par4.FirstOrDefault().IDPerson;
                        rep.TenBV.Value = DungChung.Bien.TenCQ.ToUpper();
                        var hthong = _Data.HTHONGs.FirstOrDefault(o => o.MaBV == DungChung.Bien.MaBV);
                        if (hthong != null)
                        {
                            rep.DiaChiBV.Value = hthong.DiaChi;
                        }
                        rep.TenPhieu.Value = "PHIẾU CHỈ ĐỊNH " + par4.FirstOrDefault().TenTN.ToUpper();
                        rep.KPhong.Value = par4.FirstOrDefault().TenKPth + (!string.IsNullOrWhiteSpace(par4.FirstOrDefault().DiaChiKPth) ? (" (" + par4.FirstOrDefault().DiaChiKPth + ")") : "");
                        rep.CapCuu.Value = (par4.FirstOrDefault().CapCuu == true) ? "X" : "";
                        rep.TenBNhan.Value = par4.FirstOrDefault().TenBNhan.ToUpper();
                        rep.NgaySinh.Value = DungChung.Ham.GhepNgaySinh("/", par4.FirstOrDefault().NamSinh, par4.FirstOrDefault().ThangSinh, par4.FirstOrDefault().NgaySinh);
                        rep.GioiTinh.Value = par4.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                        rep.DiaChi.Value = par4.FirstOrDefault().DChi;
                        rep.NgayGio.Value = "Thái Bình, " + DungChung.Ham.NgaySangChu(par4.FirstOrDefault().NgayThang.Value);
                        //if (!string.IsNullOrWhiteSpace(par4.FirstOrDefault().DTuong) && par4.FirstOrDefault().DTuong == "BHYT")
                        //{
                        //    rep.BHYT.Value = "X";
                        //}
                        //else
                        //    rep.ThuPhi.Value = "X";
                        if (i == 0)
                            rep.BHYT.Value = "X";
                        else
                            rep.ThuPhi.Value = "X";
                        rep.CapCuu.Value = (par4.FirstOrDefault().CapCuu == true) ? "X" : "";

                        if (i == 0)
                        {
                            if (!string.IsNullOrWhiteSpace(par4.FirstOrDefault().SThe))
                            {
                                rep.HanThe.Value = par4.FirstOrDefault().HanBHDen != null ? par4.FirstOrDefault().HanBHDen.Value.ToString("dd/MM/yyyy") : "";
                                rep.HanTu.Value = par4.FirstOrDefault().HanBHTu != null ? par4.FirstOrDefault().HanBHTu.Value.ToString("dd/MM/yyyy") : "";
                                rep.SThe1.Value = par4.FirstOrDefault().SThe.Substring(0, 2);
                                rep.SThe2.Value = par4.FirstOrDefault().SThe.Substring(2, 1);
                                rep.SThe3.Value = par4.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe4.Value = par4.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe5.Value = par4.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe6.Value = par4.FirstOrDefault().SThe.Substring(10, 5);
                            }
                        }
                        //arrThongTinBNKB = laythongtinBNKB(_data, _Mabn, par4.FirstOrDefault().MaKP == null ? 0 : par4.FirstOrDefault().MaKP.Value);
                        rep.paramTenKP.Value = par4.FirstOrDefault().TenKP;
                        var maKp = (par4.FirstOrDefault().MaKP == null ? 0 : par4.FirstOrDefault().MaKP.Value);
                        var kbcd = (from bnkb in _Data.BNKBs.Where(p => p.MaBNhan == _mabn && p.MaKP == maKp)
                                    select bnkb).ToList();
                        if (kbcd != null && kbcd.Count > 0)
                        {
                            rep.BenhChinh.Value = kbcd.FirstOrDefault().ChanDoan + " (" + kbcd.FirstOrDefault().MaICD + ")";
                            rep.BenhPhu.Value = kbcd.FirstOrDefault().BenhKhac;
                            if (!string.IsNullOrWhiteSpace(kbcd.FirstOrDefault().Buong))
                            {
                                var spBuong = kbcd.FirstOrDefault().Buong.Split(';');
                                if (spBuong != null && spBuong.Count() > 0)
                                {
                                    rep.paramBuong.Value = spBuong[spBuong.Count() - 1];
                                }
                            }
                            if (!string.IsNullOrWhiteSpace(kbcd.FirstOrDefault().Giuong))
                            {
                                var spGiuong = kbcd.FirstOrDefault().Giuong.Split(';');
                                if (spGiuong != null && spGiuong.Count() > 0)
                                {
                                    rep.paramGiuong.Value = spGiuong[spGiuong.Count() - 1];
                                }
                            }
                        }
                        string _kq = "";

                        var coKq = par4.Where(o => o.Status == 1).ToList();
                        if (coKq != null && coKq.Count > 0)
                        {
                            _kq = "1. Mô tả: \n";
                            foreach (var a in coKq)
                            {
                                _kq += "  -" + a.KetQua + "\n";
                            }
                            _kq = _kq + "2. Kết luận: \n";
                            foreach (var a in coKq)
                            {
                                _kq += "  -" + a.KetLuan + "\n";
                            }
                        }
                        rep.KQCC.Value = _kq;
                        if (par4.FirstOrDefault().LoiDan != null && par4.FirstOrDefault().LoiDan.ToString() != "")
                            rep.LoiDan.Value = par4.FirstOrDefault().LoiDan;
                        else
                            rep.LoiDan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                        if (par4.FirstOrDefault().NgayTH != null)
                            rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par4.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                        else
                            rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";

                        rep.DataSource = par4.ToList();
                        rep.BindingData();
                        rep.CreateDocument();
                        frmIn frm = new frmIn();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                }
                return;
            }
            #endregion
            int _idcd = 0;// phòng siêu âm bệnh viện 12121 in theo ID chỉ định
            int v1 = 0;
            if (_tieunhom == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.X_QuangKTS)//Đoài yc 10092018
            {
                _tieunhom = DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.X_Quang;
                v1 = 1;
            }
            #region 27023 lấy số trên phiếu : BN nôi trú lấy số bệnh án, bệnh nhân ngoại trú số thứ tự tăng theo ngày
            string _so = "";

            if (DungChung.Bien.MaBV == "27023")
            {
                var bnhan = _Data.BenhNhans.Where(p => p.MaBNhan == _mabn).FirstOrDefault();
                if (bnhan != null)
                {
                    if (bnhan.NoiTru == 1)
                    {
                        var qvv = _Data.VaoViens.Where(parameters => parameters.MaBNhan == _mabn).Select(p => p.SoBA).FirstOrDefault();
                        if (qvv != null)
                            _so = qvv;
                    }
                    else
                    {
                        DateTime tungay = DungChung.Ham.NgayTu(bnhan.NNhap.Value);
                        DateTime denngay = DungChung.Ham.NgayDen(bnhan.NNhap.Value);
                        var qbn = _Data.BenhNhans.Where(p => p.NNhap >= tungay && p.NNhap <= denngay).Where(p => p.NoiTru == 0).OrderBy(p => p.NNhap).ToList();
                        int count = 0;
                        foreach (var a in qbn)
                        {
                            count++;
                            if (a.MaBNhan == _mabn)
                                break;
                        }
                        _so = count.ToString();
                    }
                }

            }
            #endregion
            if ((DungChung.Bien.MaBV == "12121" || DungChung.Bien.MaBV == "27183") && IDCD > 0 && _tieunhom == "Siêu âm")
            {
                var qkp = _Data.KPhongs.Where(p => p.MaKP == DungChung.Bien.MaKP).FirstOrDefault();
                if (qkp != null && qkp.PLoai == DungChung.Bien.st_PhanLoaiKP.CanLamSang)
                    _idcd = IDCD;
            }
            var clsa = _Data.CLS.Where(p => _idcd > 0 ? true : p.IdCLS == _IDCLS).FirstOrDefault();
            DateTime Ngaycd = DateTime.Now;

            if (clsa != null)
            {
                Ngaycd = clsa.NgayThang.Value;
            }

            var par0 = (from bn in _Data.BenhNhans.Where(o => o.MaBNhan == _mabn)
                        join cls in _Data.CLS.Where(p => (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "24009") ? p.NgayThang == Ngaycd : (_idcd > 0 ? true : p.IdCLS == _IDCLS)) on bn.MaBNhan equals cls.MaBNhan
                        join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                        join chidinh in _Data.ChiDinhs.Where(p => _idcd > 0 ? p.IDCD == _idcd : true) on cls.IdCLS equals chidinh.IdCLS
                        join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                        join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                        join bnkb in _Data.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                        join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                        select new
                        {
                            kp.IsDongY,
                            kp.TenKP,
                            cls.IdCLS,
                            cls.ChanDoan,
                            cls.ChanDoanYHCT,
                            cls.MaICD,
                            chidinh.IDCD,
                            chidinh.Status,
                            cls.MaCBth,// TenCBth = kq1 == null ? "" : kq1.TenCB,
                            dv.MaQD,
                            dv.TenRG,
                            dvct.STT_F,
                            dvct.STT,
                            dvct.TSBT,
                            cls.NgayTH,
                            clsct.KetQua,
                            clsct.DuongDan,
                            cls.NgayThang,
                            bn.DTuong,
                            bn.MaBNhan,
                            bn.TenBNhan,
                            bn.DChi,
                            bn.GTinh,
                            bn.NoiTru,
                            bn.Tuoi,
                            bnkb.ChanDoanBD,
                            bn.SThe,
                            cls.MaCB,
                            chidinh.ChiDinh1,
                            chidinh.KetLuan,
                            TenDV = DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "24012" ? dv.TenRG : dv.TenDV,
                            chidinh.LoiDan,
                            clsct.DuongDan2,
                            cls.CapCuu,
                            clsct.KQDuKien,
                            clsct.KQTyLe,
                            clsct.KetQua_Rtf,
                            MaKP = cls.MaKP,
                            MaKPth = cls.MaKPth,
                            bn.NgaySinh,
                            bn.ThangSinh,
                            bn.NamSinh,
                            bn.HanBHDen,
                            bn.HanBHTu,
                            dv.IdTieuNhom,
                            dv.MaDV
                        }).Where(p => p.IdCLS == _IDCLS).OrderBy(p => p.STT_F).ToList();
            var par1 = (from cls in _Data.CLS.Where(p => p.IdCLS == _IDCLS)
                        join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                        join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                        select new
                        {
                            dv.MaDV,
                            dv.TenDV,
                            cls.IdCLS
                        }).ToList();
            var par = (from a in par0
                       join cb in _Data.CanBoes on a.MaCB equals cb.MaCB
                       join cbth in _Data.CanBoes on a.MaCBth equals cbth.MaCB into kq
                       join kpTH in _Data.KPhongs on a.MaKPth equals kpTH.MaKP
                       from kq1 in kq.DefaultIfEmpty()
                       select new
                       {
                           a.IsDongY,
                           a.IdCLS,
                           a.NoiTru,
                           a.DuongDan2,
                           a.ChanDoan,
                           a.MaICD,
                           a.IDCD,
                           a.Status,
                           a.MaCBth,
                           TenCBth = kq1 == null ? "" : kq1.TenCB,
                           a.MaQD,
                           a.STT,
                           a.TSBT,
                           a.NgayTH,
                           a.KetQua,
                           a.DuongDan,
                           a.NgayThang,
                           a.MaBNhan,
                           a.TenBNhan,
                           a.DChi,
                           a.GTinh,
                           a.Tuoi,
                           a.SThe,
                           a.MaCB,
                           a.DTuong,
                           cb.TenCB,
                           cb.ChucVu,
                           a.ChiDinh1,
                           a.KetLuan,
                           a.TenDV,
                           a.LoiDan,
                           a.CapCuu,
                           a.TenRG,
                           a.KQDuKien,
                           a.KQTyLe,
                           a.ChanDoanYHCT,
                           a.MaKP,
                           a.TenKP,
                           a.MaKPth,
                           a.ChanDoanBD,
                           a.NgaySinh,
                           a.ThangSinh,
                           a.NamSinh,
                           a.HanBHDen,
                           a.HanBHTu,
                           a.KetQua_Rtf
                           //tn.TenTN
                       }).Distinct().ToList();


            var getKPTH = (from a in _Data.CLS.Where(p => p.MaBNhan == _mabn)
                           join b in _Data.KPhongs on a.MaKPth equals b.MaKP
                           select new { b.TenKP });
            var ttbx = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).ToList();

            int _makp = 0;

            if (par.Count > 0)
            {
                _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                if (DungChung.Bien._Visible_CDHA[1] == false)
                {
                    if (DungChung.Bien.MaBV != "01071" && DungChung.Bien.MaBV != "01049")
                    {
                        if (par.FirstOrDefault().Status == 1)
                        {
                            DungChung.Bien._Visible_CDHA[2] = true;
                            if (DungChung.Bien.MaBV == "24009")
                            {
                                DungChung.Bien._Visible_CDHA[1] = true;
                            }
                        }
                        else
                        {
                            DungChung.Bien._Visible_CDHA[2] = false;
                            if (DungChung.Bien.MaBV == "24009")
                            {
                                DungChung.Bien._Visible_CDHA[1] = false;
                            }
                        }
                    }
                }
                if (par.FirstOrDefault().Status == 1)
                {
                    if (DungChung.Bien.MaBV == "24009")
                    {
                        DungChung.Bien._Visible_CDHA[1] = true;
                    }
                }
                else
                {
                    if (DungChung.Bien.MaBV == "24009")
                    {
                        DungChung.Bien._Visible_CDHA[1] = false;
                    }
                }
            }
            var dvucd = par0.FirstOrDefault();

            switch (_tieunhom)
            {
                #region  "Chức năng hô hấp":
                case "Chức năng hô hấp":
                    if (DungChung.Bien.MaBV == "30007")
                    {
                        //XuatPhieuDoCNHH(_IDCLS);
                        using (frmIn frmHH = new frmIn())
                        {
                            using (BaoCao.Rep_PhieuDoHoHap_30007 repHH = new BaoCao.Rep_PhieuDoHoHap_30007())
                            {
                                if (par.Count > 0)
                                {

                                    repHH.TenBN.Value = (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789") ? par.FirstOrDefault().TenBNhan.ToUpper() : par.FirstOrDefault().TenBNhan;


                                    if (DungChung.Bien.MaBV == "27023")
                                        repHH.So.Value = _so;
                                    else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                    {
                                        if (par.Count > 0)
                                        {
                                            int mabn = par.FirstOrDefault().MaBNhan;
                                            var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                            if (qvv != null)
                                                repHH.So.Value = qvv.SoVV;
                                            else
                                                repHH.So.Value = "";
                                        }
                                    }
                                    else
                                        repHH.So.Value = _IDCLS;
                                    repHH.SoThe.Value = par.FirstOrDefault().SThe;
                                    repHH.BSDT.Value = par.FirstOrDefault().MaCB;
                                    repHH.BSCK.Value = par.FirstOrDefault().MaCBth; // Bác sĩ chuyên khoa là CBth
                                    repHH.DChi.Value = par.FirstOrDefault().DChi;
                                    if (DungChung.Bien.MaBV == "24012")
                                    {
                                        repHH.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge_24012);
                                    }
                                    else
                                        repHH.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                    //if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                    //    rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                                    //else
                                    //    rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                                    repHH.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        repHH.Nu.Value = "/";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        repHH.Nam.Value = "/";
                                    }
                                    //rep.KetQua.Value = LD.FirstOrDefault().KetQua;
                                    if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                        repHH.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        repHH.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        repHH.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        repHH.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    repHH.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                                }

                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);

                                repHH.Buong.Value = arrThongTinBNKB[2];
                                repHH.Giuong.Value = arrThongTinBNKB[3];

                                repHH.Khoa.Value = arrThongTinBNKB[4];
                                repHH.KetLuan.Value = par.FirstOrDefault().KetLuan;
                                List<Rep_PhieuDoHoHap_30007.BC> _lCol1 = new List<Rep_PhieuDoHoHap_30007.BC>();

                                if (DungChung.Bien.MaBV != "12122" && DungChung.Bien.MaBV != "30007")
                                {
                                    string[] tenDVHH = new string[4] { " Dự kiến", " Thực tế", " Tỷ lệ giảm %", " " };
                                    foreach (string a in tenDVHH)
                                        _lCol1.Add(new Rep_PhieuDoHoHap_30007.BC { TenDV = a });
                                }
                                else
                                {
                                    if (par.Count > 0)
                                    {
                                        string TSTB1 = "", TSTB2 = "", TSTB3 = "", TSTB4 = "", TSTB5 = "";
                                        string kq1 = "", kq2 = "", kq3 = "", kq4 = "", kq5 = "";
                                        string tyle1 = "", tyle2 = "", tyle3 = "", tyle4 = "", tyle5 = "";
                                        var q1 = par.Where(p => p.STT == 1).FirstOrDefault();
                                        var q2 = par.Where(p => p.STT == 2).FirstOrDefault();
                                        var q3 = par.Where(p => p.STT == 3).FirstOrDefault();
                                        var q4 = par.Where(p => p.STT == 4).FirstOrDefault();
                                        var q5 = par.Where(p => p.STT == 5).FirstOrDefault();
                                        if (q1 != null)
                                        {
                                            TSTB1 = q1.KQDuKien;
                                            kq1 = q1.KetQua;
                                            tyle1 = q1.KQTyLe;
                                        }
                                        if (q2 != null)
                                        {
                                            TSTB2 = q2.KQDuKien;
                                            kq2 = q2.KetQua;
                                            tyle2 = q2.KQTyLe;
                                        }
                                        if (q3 != null)
                                        {
                                            TSTB3 = q3.KQDuKien;
                                            kq3 = q3.KetQua;
                                            tyle3 = q3.KQTyLe;
                                        }
                                        if (q4 != null)
                                        {
                                            TSTB4 = q4.KQDuKien;
                                            kq4 = q4.KetQua;
                                            tyle4 = q4.KQTyLe;
                                        }
                                        if (q5 != null)
                                        {
                                            TSTB5 = q5.KQDuKien;
                                            kq5 = q5.KetQua;
                                            tyle5 = q5.KQTyLe;
                                        }


                                        _lCol1.Add(new Rep_PhieuDoHoHap_30007.BC { TenDV = "Dự kiến", KQ1 = TSTB1, KQ2 = TSTB2, KQ3 = TSTB3, KQ4 = TSTB4, KQ5 = TSTB5 });
                                        _lCol1.Add(new Rep_PhieuDoHoHap_30007.BC { TenDV = "Thực tế", KQ1 = kq1, KQ2 = kq2, KQ3 = kq3, KQ4 = kq4, KQ5 = kq5 });
                                        _lCol1.Add(new Rep_PhieuDoHoHap_30007.BC { TenDV = "Tỷ lệ giảm %", KQ1 = tyle1, KQ2 = tyle2, KQ3 = tyle3, KQ4 = tyle4, KQ5 = tyle5 });
                                        _lCol1.Add(new Rep_PhieuDoHoHap_30007.BC { TenDV = "" });
                                    }
                                }
                                repHH.DataSource = _lCol1;
                                repHH.DataBindings();
                                repHH.CreateDocument();
                                frmHH.prcIN.PrintingSystem = repHH.PrintingSystem;
                                frmHH.ShowDialog();
                            }
                        }
                        
                    }
                    else if (DungChung.Bien.MaBV == "27001")
                    {
                        #region
                        frmIn frmHH = new frmIn();
                        BaoCao.Rep_PhieuDoHoHap27001 repHH = new BaoCao.Rep_PhieuDoHoHap27001();
                        if (par.Count > 0)
                        {

                            repHH.TenBN.Value = (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789") ? par.FirstOrDefault().TenBNhan.ToUpper() : par.FirstOrDefault().TenBNhan;


                            if (DungChung.Bien.MaBV == "27023")
                                repHH.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        repHH.So.Value = qvv.SoVV;
                                    else
                                        repHH.So.Value = "";
                                }
                            }
                            else
                                repHH.So.Value = _IDCLS;
                            repHH.SoThe.Value = par.FirstOrDefault().SThe;
                            repHH.BSDT.Value = par.FirstOrDefault().MaCB;
                            repHH.BSCK.Value = par.FirstOrDefault().MaCBth; // Bác sĩ chuyên khoa là CBth
                            repHH.DChi.Value = par.FirstOrDefault().DChi;
                            if (DungChung.Bien.MaBV == "24012")
                            {
                                repHH.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge_24012);
                            }
                            else
                                repHH.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            //if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                            //    rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            //else
                            //    rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            repHH.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                repHH.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                repHH.Nam.Value = "/";
                            }
                            //rep.KetQua.Value = LD.FirstOrDefault().KetQua;
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                repHH.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                repHH.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                repHH.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                repHH.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            repHH.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "  Mã ICD: " + DungChung.Ham.FreshString(par.FirstOrDefault().MaICD) : DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan);
                            //repHH.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            //repHH.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";


                        }

                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);

                        repHH.Buong.Value = arrThongTinBNKB[2];
                        repHH.Giuong.Value = arrThongTinBNKB[3];

                        repHH.Khoa.Value = arrThongTinBNKB[4];

                        List<Rep_PhieuDoHoHap.BC> _lCol1 = new List<Rep_PhieuDoHoHap.BC>();

                        if (DungChung.Bien.MaBV != "12122")
                        {
                            string[] tenDVHH = new string[4] { " Dự kiến", " Thực tế", " Tỷ lệ giảm %", " " };
                            foreach (string a in tenDVHH)
                                _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = a });
                        }
                        else
                        {
                            if (par.Count > 0)
                            {
                                string TSTB1 = "", TSTB2 = "", TSTB3 = "", TSTB4 = "", TSTB5 = "";
                                string kq1 = "", kq2 = "", kq3 = "", kq4 = "", kq5 = "";
                                var q1 = par.Where(p => p.STT == 1).FirstOrDefault();
                                var q2 = par.Where(p => p.STT == 2).FirstOrDefault();
                                var q3 = par.Where(p => p.STT == 3).FirstOrDefault();
                                var q4 = par.Where(p => p.STT == 4).FirstOrDefault();
                                var q5 = par.Where(p => p.STT == 5).FirstOrDefault();
                                if (q1 != null)
                                {
                                    TSTB1 = q1.TSBT;
                                    kq1 = q1.KetQua;
                                }
                                if (q2 != null)
                                {
                                    TSTB2 = q2.TSBT;
                                    kq2 = q2.KetQua;
                                }
                                if (q3 != null)
                                {
                                    TSTB3 = q3.TSBT;
                                    kq3 = q3.KetQua;
                                }
                                if (q4 != null)
                                {
                                    TSTB4 = q4.TSBT;
                                    kq4 = q4.KetQua;
                                }
                                if (q5 != null)
                                {
                                    TSTB5 = q5.TSBT;
                                    kq5 = q5.KetQua;
                                }


                                _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "Dự kiến", KQ1 = TSTB1, KQ2 = TSTB2, KQ3 = TSTB3, KQ4 = TSTB4, KQ5 = TSTB5 });
                                _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "Thực tế", KQ1 = kq1, KQ2 = kq2, KQ3 = kq3, KQ4 = kq4, KQ5 = kq5 });
                                _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "Tỷ lệ giảm %" });
                                _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "" });
                            }
                        }
                        repHH.DataSource = _lCol1;
                        repHH.DataBindings();
                        repHH.CreateDocument();
                        frmHH.prcIN.PrintingSystem = repHH.PrintingSystem;
                        frmHH.ShowDialog();
                        #endregion
                    }
                    else if (DungChung.Bien.MaBV == "01830")
                    {
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuDoCNHH_0183 rep3 = new BaoCao.repPhieuDoCNHH_0183();
                        if (par.Count > 0)
                        {
                            rep3.SubBand1.Visible = true;
                            rep3.labmabn.Text = _mabn.ToString();
                            if (DungChung.Bien.MaBV == "20001")
                            {
                                rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            }
                            else
                            {
                                rep3.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            }
                            if (DungChung.Bien.MaBV == "27023")
                                rep3.SoPhieu.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep3.SoPhieu.Value = qvv.SoVV;
                                    else
                                        rep3.SoPhieu.Value = "";
                                }
                            }
                            else
                                rep3.SoPhieu.Value = _IDCLS;
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep3.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep3.Nam.Value = "/";
                            }
                            rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            string str = "";
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                str = par.FirstOrDefault().KetQua;
                            rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep3.ChanDoan.Value = par.FirstOrDefault().ChanDoanBD != null || par.FirstOrDefault().ChanDoanBD != "" ? par.FirstOrDefault().ChanDoanBD + ";" : "";
                            rep3.ChanDoan.Value += arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];
                            rep3.Khoa.Value = arrThongTinBNKB[4];
                            rep3.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                            rep3.TieuDe2.Value = "KẾT QUẢ " + par.FirstOrDefault().TenDV.ToUpper();
                            rep3.TenRG.Value = par.FirstOrDefault().TenRG;
                        }

                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                    }

                    else
                    {
                        frmIn frmHH = new frmIn();
                        BaoCao.Rep_PhieuDoHoHap repHH = new BaoCao.Rep_PhieuDoHoHap();
                        if (par.Count > 0)
                        {
                            repHH.TenBN.Value = (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789") ? par.FirstOrDefault().TenBNhan.ToUpper() : par.FirstOrDefault().TenBNhan;


                            if (DungChung.Bien.MaBV == "27023")
                                repHH.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        repHH.So.Value = qvv.SoVV;
                                    else
                                        repHH.So.Value = "";
                                }
                            }
                            else
                                repHH.So.Value = _IDCLS;
                            repHH.SoThe.Value = par.FirstOrDefault().SThe;
                            repHH.BSDT.Value = par.FirstOrDefault().MaCB;
                            repHH.BSCK.Value = par.FirstOrDefault().MaCBth; // Bác sĩ chuyên khoa là CBth
                            repHH.DChi.Value = par.FirstOrDefault().DChi;
                            if (DungChung.Bien.MaBV == "24012")
                            {
                                repHH.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge_24012);
                            }
                            else
                                repHH.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            //if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                            //    rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            //else
                            //    rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            repHH.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                repHH.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                repHH.Nam.Value = "/";
                            }
                            //rep.KetQua.Value = LD.FirstOrDefault().KetQua;
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                repHH.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                repHH.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                repHH.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                repHH.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            repHH.ChanDoan.Value += par.FirstOrDefault().ChanDoan != null || par.FirstOrDefault().ChanDoan != "" ? par.FirstOrDefault().ChanDoan + ";" : "";
                            repHH.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "  Mã ICD: " + DungChung.Ham.FreshString(par.FirstOrDefault().MaICD) : DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan);
                            repHH.xrLabel32.Text = repHH.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            repHH.xrLabel34.Text = repHH.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";


                        }

                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);

                        repHH.Buong.Value = arrThongTinBNKB[2];
                        repHH.Giuong.Value = arrThongTinBNKB[3];

                        repHH.Khoa.Value = arrThongTinBNKB[4];

                        List<Rep_PhieuDoHoHap.BC> _lCol1 = new List<Rep_PhieuDoHoHap.BC>();

                        //if (DungChung.Bien.MaBV != "12122")
                        //{
                        //    string[] tenDVHH = new string[4] { " Dự kiến", " Thực tế", " Tỷ lệ giảm %", " " };
                        //    foreach (string a in tenDVHH)
                        //        _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = a });
                        //}
                        //else
                        //{
                        if (par.Count > 0)
                        {
                            string TSTB1 = "", TSTB2 = "", TSTB3 = "", TSTB4 = "", TSTB5 = "";
                            string kq1 = "", kq2 = "", kq3 = "", kq4 = "", kq5 = "";
                            var q1 = par.Where(p => p.STT == 1).FirstOrDefault();
                            var q2 = par.Where(p => p.STT == 2).FirstOrDefault();
                            var q3 = par.Where(p => p.STT == 3).FirstOrDefault();
                            var q4 = par.Where(p => p.STT == 4).FirstOrDefault();
                            var q5 = par.Where(p => p.STT == 5).FirstOrDefault();
                            if (q1 != null)
                            {
                                TSTB1 = q1.TSBT;
                                kq1 = q1.KetQua;
                            }
                            if (q2 != null)
                            {
                                TSTB2 = q2.TSBT;
                                kq2 = q2.KetQua;
                            }
                            if (q3 != null)
                            {
                                TSTB3 = q3.TSBT;
                                kq3 = q3.KetQua;
                            }
                            if (q4 != null)
                            {
                                TSTB4 = q4.TSBT;
                                kq4 = q4.KetQua;
                            }
                            if (q5 != null)
                            {
                                TSTB5 = q5.TSBT;
                                kq5 = q5.KetQua;
                            }


                            _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "Dự kiến", KQ1 = TSTB1, KQ2 = TSTB2, KQ3 = TSTB3, KQ4 = TSTB4, KQ5 = TSTB5 });
                            _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "Thực tế", KQ1 = kq1, KQ2 = kq2, KQ3 = kq3, KQ4 = kq4, KQ5 = kq5 });
                            _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "Tỷ lệ giảm %" });
                            _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "" });
                        }
                        if (DungChung.Bien.MaBV == "30010")
                        {

                            int mkpth = Convert.ToInt32(par.FirstOrDefault().MaKPth.Value);
                            repHH.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                        }//yenbg1
                        //}
                        repHH.DataSource = _lCol1;
                        repHH.DataBindings();
                        repHH.CreateDocument();
                        frmHH.prcIN.PrintingSystem = repHH.PrintingSystem;
                        frmHH.ShowDialog();
                    }
                    break;
                #endregion
                #region X quang
                case "X-Quang":
                    #region 27021
                    DungChung.Bien.checkcls = "X-Quang";
                    if (DungChung.Bien.MaBV == "27021")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang_27021 rep = new BaoCao.repPhieuChupXQuang_27021();
                        string _kq = "";
                        if (par.Count > 0)
                        {
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            rep.So.Value = _IDCLS;
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().DuongDan2 != null)
                            { rep.DuongDan.Value = par.FirstOrDefault().DuongDan2; }
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            foreach (var a in par)
                            {
                                _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            rep.YCCC.Value = _yccc;
                            foreach (var a in par)
                            {
                                _kq += " " + a.KetQua + a.KetLuan + "\n";
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];

                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion

                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789" || DungChung.Bien.MaBV == "24009" || DungChung.Bien.MaBV == "30012")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang_01071 rep = new BaoCao.repPhieuChupXQuang_01071();
                        string _kq = "";
                        string _kl = "";
                        if (par.Count > 0)
                        {
                            if (DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "01071")
                            {
                                string kieudoc1 = "";
                                string kieudoc2 = "";
                                var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                            select new
                                            {
                                                ht.KieuDoc
                                            }).ToList();
                                kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                                kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                                if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = true;
                                    DungChung.Bien._Visible_CDHA[1] = false;

                                }
                                if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = true;
                                    DungChung.Bien._Visible_CDHA[1] = false;

                                }
                                if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = true;
                                    DungChung.Bien._Visible_CDHA[1] = false;
                                }
                            }
                            rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            if (DungChung.Bien.MaBV == "27023")
                                rep.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep.So.Value = qvv.SoVV;
                                    else
                                        rep.So.Value = "";
                                }
                            }
                            else
                                rep.So.Value = _IDCLS;
                            if (par.FirstOrDefault().NoiTru == 1)
                            {
                                var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                if (sovv != null)
                                    rep.sovv.Text = "Số VV: " + sovv.ToString();
                            }
                            rep.colMaBN.Text = _mabn.ToString();
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.MaCBth.Value = par.FirstOrDefault().MaCBth;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            //if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                            if (DungChung.Bien.MaBV == "12345")
                            {
                                DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH == null ? par.FirstOrDefault().NgayThang.Value : par.FirstOrDefault().NgayTH.Value);
                                DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH == null ? par.FirstOrDefault().NgayThang.Value : par.FirstOrDefault().NgayTH.Value);
                                var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                                             join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                             join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                                             join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                                             select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                                foreach (var item in _lcls)
                                {
                                    _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                                }
                            }
                            else if (DungChung.Bien.MaBV != "24009" || DungChung.Bien.MaBV != "27777")
                            {
                                foreach (var a in par)
                                {
                                    if (DungChung.Bien.MaBV == "26007")
                                    {
                                        _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                    }
                                    else
                                        _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                }
                            }
                            rep.YCCC.Value = _yccc;
                            if (DungChung.Bien.MaBV == "24009" || DungChung.Bien.MaBV == "27777")
                            {
                                rep.YCCC.Value = par1.FirstOrDefault().TenDV + par.FirstOrDefault().ChiDinh1;
                            }
                            if (DungChung.Bien.MaBV == "20001")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {

                                    _kq += "  -" + a.KetQua + "\n";
                                }
                                _kq = _kq + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetLuan + "\n";
                                }
                            }
                            else if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetQua + "\n\n";
                                }
                                _kl = _kl + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kl += "  -" + a.KetLuan + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    if (DungChung.Bien.MaBV == "30012")
                                    {
                                        _kq += "  " + a.KetQua + "\r\n\n" + a.KetLuan;
                                    }
                                    else
                                    {
                                        _kq += " " + a.KetQua + "\n" + a.KetLuan + "\n";
                                    }
                                }
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            ////DungChung.Bien.MaBV == "01049" ? DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "  Mã ICD: " + DungChung.Ham.FreshString(par.FirstOrDefault().MaICD) : DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan); //par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            rep.KLCC.Value = _kl;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            if (par.FirstOrDefault().IsDongY == true && DungChung.Bien.MaBV == "24297")
                            {
                                rep.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _mabn, _makp);
                            }
                            else
                            {
                                rep.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + DungChung.Ham.FreshString(arrThongTinBNKB[0]) : arrThongTinBNKB[1];
                            }

                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];
                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    #region 20001
                    else if (DungChung.Bien.MaBV == "20001")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang_20001 rep = new BaoCao.repPhieuChupXQuang_20001();
                        rep.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                        if (DungChung.Bien.MaBV == "24009" && v1 == 1)
                            rep.TieuDe.Value = "PHIẾU CHỤP X-QUANG SỐ HÓA";
                        string _kq = "";
                        if (par.Count > 0)
                        {
                            //rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            if (DungChung.Bien.MaBV == "27023")
                                rep.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep.So.Value = qvv.SoVV;
                                    else
                                        rep.So.Value = "";
                                }
                            }
                            else
                                rep.So.Value = _IDCLS;
                            rep.colMaBN.Text = "Mã BN: " + _mabn.ToString();
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            //if (DungChung.Bien.MaBV == "24009")
                            //{
                            //    DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH.Value);
                            //    DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH.Value);
                            //    var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                            //                 join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                            //                 join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                            //                 join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                            //                 select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                            //    foreach (var item in _lcls)
                            //    {
                            //        _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                            //    }
                            //}
                            //else
                            //{
                            foreach (var a in par)
                            {
                                if (DungChung.Bien.MaBV == "26007")
                                {
                                    _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                }
                                else
                                    _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            //}
                            rep.YCCC.Value = _yccc;

                            if (DungChung.Bien.MaBV == "20001")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetQua + "\n";
                                }
                                _kq = _kq + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetLuan + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    _kq += " " + a.KetQua + "\n" + a.KetLuan + "\n";
                                }
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            //if (DungChung.Bien.MaBV == "20001")
                            //{
                            //    rep.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan), DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoanYHCT));// DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoanYHCT) + "[" + DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "]";
                            //}//DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                            //else
                            //    rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            //arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            //if (DungChung.Bien.MaBV == "20001")

                            //else
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    #region 27023 phiếu cắt lớp vi tính
                    else if (DungChung.Bien.MaBV == "27023" && (dvucd.TenDV.ToLower().Contains("cắt lớp vi tính") || dvucd.TenDV.ToLower().Contains("clvt") || dvucd.TenDV.ToLower().Contains("ct scanner")))
                    {
                        frmIn frm = new frmIn();
                        BaoCao.rep_PhieuChupCatLopVT rep = new BaoCao.rep_PhieuChupCatLopVT();
                        rep.TieuDe.Value = "PHIẾU CHỤP CẮT LỚP VI TÍNH";
                        string _kq = "", _mt = "";
                        if (par.Count > 0)
                        {
                            //rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            rep.So.Value = _IDCLS;
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.SThe.Value = par.FirstOrDefault().SThe;
                            rep.DTuong.Value = par.FirstOrDefault().DTuong == "BHYT" ? "Bảo hiểm y tế" : par.FirstOrDefault().DTuong;
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            int a1 = 1;
                            foreach (var a in par)
                            {
                                _yccc += a1 + ". " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                a1++;
                            }
                            //}
                            rep.YCCC.Value = _yccc;

                            foreach (var a in par)
                            {
                                _mt += "  -" + a.KetQua + "\n";
                            }
                            foreach (var a in par)
                            {
                                _kq += "  -" + a.KetLuan + "\n";
                            }

                            if (par.FirstOrDefault().NgayThang != null)
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().ChanDoan.Contains(";"))
                            {
                                string[] _arrcd = par.FirstOrDefault().ChanDoan.Split(';');
                                rep.ChanDoan.Value = _arrcd[0];
                                string benhphu = "";
                                for (int i = 1; i < _arrcd.Length; i++)
                                {
                                    benhphu += _arrcd[i] + ";";
                                }
                                rep.BenhKhac.Value = DungChung.Ham.FreshString(benhphu);
                            }
                            else
                                rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            rep.MoTa.Value = _mt;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];
                            rep.Khoa.Value = arrThongTinBNKB[4];
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    #region bv khác
                    else
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang rep = new BaoCao.repPhieuChupXQuang();
                        if (string.IsNullOrEmpty(ttbx.FirstOrDefault().Email))
                        {
                            rep.Email.Value = "";
                        }
                        else { rep.Email.Value = ttbx.FirstOrDefault().Email; }
                        if (Mode == true)
                        {
                            //rep.LoGo30372.Visible = false;
                        }
                        rep.SDT.Value = ttbx.FirstOrDefault().DThoai;
                        rep.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                        if (DungChung.Bien.MaBV == "30372")
                        {
                            switch (DungChung.Bien.MauIn)
                            {
                                case 1:
                                    rep.TieuDe.Value = "PHIẾU CHỤP CẮT LỚP VI TÍNH";
                                    break;
                                case 2:
                                    rep.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                                    //rep.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                                    break;
                                case 3:
                                    rep.TieuDe.Value = "PHIẾU CHỤP X-QUANG ";
                                    //rep.TieuDe.Value = "PHIẾU CHỤP CẮT LỚP VI TÍNH";
                                    break;
                            }
                        }
                        if (DungChung.Bien.MaBV == "24009" && v1 == 1)
                            rep.TieuDe.Value = "PHIẾU CHỤP X-QUANG SỐ HÓA";
                        string _kq = "";
                        string _kl = "";
                        string _ld = "";

                        //DateTime n1 = Frm_CDHA_Moi._Ngaytu;
                        //DateTime n2 = Frm_CDHA_Moi._Ngayden;
                        DateTime n3 = DungChung.Ham.NgayTu(Frm_CDHA_Moi.ngaythuchien); // 14017 in kq xquang trong ngày
                        DateTime n4 = DungChung.Ham.NgayDen(Frm_CDHA_Moi.ngaythuchien);
                        var paz14017 = (from bn in _Data.BenhNhans.Where(o => o.MaBNhan == _mabn) // query paz14017 cho vien 14017
                                        join bnkb in _Data.BNKBs.Where(p => p.MaKP == _makp) on bn.MaBNhan equals bnkb.MaBNhan
                                        join cls in _Data.CLS.Where(p => p.MaKPth == _mkp).Where(p => p.NgayTH >= n3 && p.NgayTH <= n4).Where(p => p.Status == 1) on bn.MaBNhan equals cls.MaBNhan
                                        //join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                        join chidinh in _Data.ChiDinhs on cls.IdCLS equals chidinh.IdCLS
                                        join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                                        join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                                        select new
                                        {
                                            bnkb.IDKB,
                                            chidinh.LoiDan,
                                            chidinh.ChiDinh1,
                                            chidinh.KetLuan,
                                            clsct.KetQua,
                                            clsct.KetQua_Rtf,
                                            cls.IdCLS,
                                            dv.TenDV
                                        }).ToList();

                        if (par.Count > 0)
                        {
                            if (DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "01071")
                            {
                                string kieudoc1 = "";
                                string kieudoc2 = "";
                                var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                            select new
                                            {
                                                ht.KieuDoc
                                            }).ToList();
                                kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                                kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                                if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = false;
                                    DungChung.Bien._Visible_CDHA[1] = true;

                                }
                                if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = false;
                                    DungChung.Bien._Visible_CDHA[1] = true;

                                }
                                if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = false;
                                    DungChung.Bien._Visible_CDHA[1] = true;
                                }
                            }
                            //rep.colMaBN.Text = _mabn.ToString();
                            //rep. = par.FirstOrDefault().TenCBth;
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            if (DungChung.Bien.MaBV == "27023")
                                rep.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "14017")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                    {
                                        int ngayvao = qvv.NgayVao.Value.Year;
                                        rep.So.Value = DungChung.Bien.MaBV == "14017" ? qvv.SoBA + "/" + ngayvao : qvv.SoVV;
                                    }
                                    else
                                        rep.So.Value = "";
                                }
                            }
                            else
                                rep.So.Value = _IDCLS;
                            rep.CQ.Value = DungChung.Bien.TenCQ.ToUpper();
                            rep.MaBN.Value = _mabn.ToString();
                            rep.colMaBN.Text = "Mã BN: " + _mabn.ToString();
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.SoTheFull.Value = par.FirstOrDefault().SThe;
                            if (DungChung.Bien.MaBV == "24012")
                            {
                                rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge_24012);
                            }
                            else
                                rep.Tuoi.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.CalculateAge(par.FirstOrDefault().NgaySinh, par.FirstOrDefault().ThangSinh, par.FirstOrDefault().NamSinh, "tháng.") : DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);

                            if (DungChung.Bien.MaBV == "14017")
                            {
                                if (paz14017.FirstOrDefault().LoiDan != null && paz14017.FirstOrDefault().LoiDan.ToString() != "")
                                {
                                    foreach (var a in paz14017)
                                    {
                                        _ld += a.LoiDan + "\n";
                                    }
                                }
                                else
                                    _ld = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            }
                            else
                            {
                                if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua) || !string.IsNullOrEmpty(par.FirstOrDefault().KetLuan))
                                {
                                    if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                        _ld = par.FirstOrDefault().LoiDan;
                                    else
                                        _ld = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                                    if (DungChung.Bien.MaBV == "30372")
                                    {
                                        _kl = par.FirstOrDefault().KetLuan;
                                    }
                                }
                                else
                                {
                                    _ld = null;
                                }
                            }

                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = DungChung.Bien.MaBV == "14017" ? "Nam" : "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = DungChung.Bien.MaBV == "14017" ? "Nữ" : "/";
                            }
                            string _yccc = "";
                            string _yccc1 = "";

                            foreach (var a in par)
                            {
                                if (DungChung.Bien.MaBV == "26007")
                                {
                                    _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                }
                                else
                                    _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            foreach (var a in paz14017)
                            {
                                _yccc1 += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            rep.YCCC.Value = DungChung.Bien.MaBV == "14017" ? _yccc1 : _yccc;

                            if (DungChung.Bien.MaBV == "20001")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {
                                    if (a.KetQua_Rtf == null)
                                        _kq += "  " + a.KetQua + "\n";
                                    else
                                        _kq += "  " + a.KetQua_Rtf + "\n";
                                }
                                _kq = _kq + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  " + a.KetLuan + "\n";
                                }
                            }
                            else
                            {
                                if (DungChung.Bien.MaBV == "14017")
                                {
                                    foreach (var a in paz14017)
                                    {
                                        {
                                            _kq += a.KetQua + "\r\n\n";
                                        }

                                    }
                                }
                                else
                                {
                                    foreach (var a in par)
                                    {
                                        if (DungChung.Bien.MaBV == "30372")
                                        {
                                            _kq += a.KetQua + "\r\n\n";
                                        }
                                        else
                                        {
                                            _kq += "  " + a.KetQua + "\r\n\n" + a.KetLuan;
                                        }
                                    }
                                }
                            }
                            foreach (var a in paz14017)
                            {

                                {
                                    _kl += a.KetLuan + "\r\n";
                                }
                            }

                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep.NgayCD.Value = DungChung.Bien.MaBV == "14017" ? DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, 1) : DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (DungChung.Bien.MaBV == "29247" && par.FirstOrDefault().IsDongY == true)
                            {
                                rep.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value);
                            }
                            else
                            {
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                rep.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            }
                            if (DungChung.Bien.MaBV == "14017")
                            {
                                string[] _MaICDarr = DungChung.Ham.getMaICDarrFull_SL(_Data, _mabn, DungChung.Bien.GetICD, paz14017.FirstOrDefault().IDKB);
                                string[] icd = _MaICDarr[0].Split(';');
                                string[] tenicd = _MaICDarr[1].Split(';');
                                string lydo = "";
                                if (icd.Length <= tenicd.Length)
                                {
                                    for (int i = 0; i < icd.Length; i++)
                                    {
                                        lydo += " " + icd[i] + "-" + tenicd[i] + ";";
                                    }
                                    if (icd.Length < tenicd.Length)
                                    {
                                        int cut1 = tenicd.Length - icd.Length;
                                        int cut = tenicd.Length - cut1;
                                        string mab1k = DungChung.Ham.FreshString(string.Join(";", tenicd.Skip(cut)));
                                        lydo += " " + mab1k + ";";
                                    }
                                }
                                else
                                {
                                    for (int i = 0; i < tenicd.Length; i++)
                                    {
                                        lydo += " " + icd[i] + "-" + tenicd[i] + ";";
                                    }
                                }

                                rep.ChanDoan.Value = " " + DungChung.Ham.FreshString(lydo);
                            }

                            if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua) || !string.IsNullOrEmpty(par.FirstOrDefault().KetLuan))
                            {
                                rep.Loidan.Value = _ld;
                                rep.Macb.Value = par.FirstOrDefault().MaCBth;
                                rep.KQCC.Value = _kq;

                                if (par.FirstOrDefault().NgayTH != null)
                                {
                                    rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                }
                                else
                                    rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";

                                if (DungChung.Bien.MaBV == "30372")
                                {
                                    _kl = par.FirstOrDefault().KetLuan;
                                }
                            }
                            else
                            {
                                rep.Loidan.Value = null;
                                rep.KQCC.Value = null;
                                rep.Macb.Value = null;
                                rep.NgayTH.Value = null;
                                rep.xrTable15.Visible = false;
                                rep.xrTableCell24.Visible = false;
                                rep.xrLabel88.Visible = false;
                                rep.xrTableCell17.Visible = false;
                                if (DungChung.Bien.MaBV == "30012" || DungChung.Bien.MaBV == "30010")
                                {
                                    rep.SubBand4.Visible = false;
                                    rep.SubBand5_30372.Visible = false;
                                }
                            }
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.KetLuan.Value = _kl;
                            rep.xrLabel4.Text = rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.xrLabel6.Text = rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        }
                        if (DungChung.Bien.MaBV == "30010")
                        {
                            int MKPTH = par.FirstOrDefault().MaKPth.Value;
                            rep.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == MKPTH).Select(p => p.TenKP).FirstOrDefault().ToString();
                        }

                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    break;

                #endregion
                #region X quang CR
                case "X-Quang CR":
                    #region 27021
                    if (DungChung.Bien.MaBV == "27021")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang_27021 rep = new BaoCao.repPhieuChupXQuang_27021();
                        string _kq = "";
                        if (par.Count > 0)
                        {
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            rep.So.Value = _IDCLS;
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().DuongDan2 != null)
                            { rep.DuongDan.Value = par.FirstOrDefault().DuongDan2; }
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            foreach (var a in par)
                            {
                                _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            rep.YCCC.Value = _yccc;
                            foreach (var a in par)
                            {
                                _kq += " " + a.KetQua + a.KetLuan + "\n";
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];

                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion

                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang_01071 rep = new BaoCao.repPhieuChupXQuang_01071();
                        string _kq = "";
                        if (par.Count > 0)
                        {

                            rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            if (DungChung.Bien.MaBV == "27023")
                                rep.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep.So.Value = qvv.SoVV;
                                    else
                                        rep.So.Value = "";
                                }
                            }
                            else
                                rep.So.Value = _IDCLS;
                            if (par.FirstOrDefault().NoiTru == 1)
                            {
                                var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                if (sovv != null)
                                    rep.sovv.Text = "Số VV: " + sovv.ToString();
                            }
                            rep.colMaBN.Text = _mabn.ToString();
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                            {
                                DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH.Value);
                                DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH.Value);
                                var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                                             join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                             join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                                             join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                                             select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                                foreach (var item in _lcls)
                                {
                                    _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    if (DungChung.Bien.MaBV == "26007")
                                    {
                                        _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                    }
                                    else
                                        _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                }
                            }
                            rep.YCCC.Value = _yccc;

                            if (DungChung.Bien.MaBV == "20001")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetQua + "\n";
                                }
                                _kq = _kq + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetLuan + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    _kq += " " + a.KetQua + "\n" + a.KetLuan + "\n";
                                }
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            ////DungChung.Bien.MaBV == "01049" ? DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "  Mã ICD: " + DungChung.Ham.FreshString(par.FirstOrDefault().MaICD) : DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan); //par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + DungChung.Ham.FreshString(arrThongTinBNKB[0]) : arrThongTinBNKB[1];
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    #region 20001
                    else if (DungChung.Bien.MaBV == "20001")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang_20001 rep = new BaoCao.repPhieuChupXQuang_20001();
                        rep.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                        if (DungChung.Bien.MaBV == "24009" && v1 == 1)
                            rep.TieuDe.Value = "PHIẾU CHỤP X-QUANG SỐ HÓA";
                        string _kq = "";
                        if (par.Count > 0)
                        {
                            //rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            if (DungChung.Bien.MaBV == "27023")
                                rep.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep.So.Value = qvv.SoVV;
                                    else
                                        rep.So.Value = "";
                                }
                            }
                            else
                                rep.So.Value = _IDCLS;
                            rep.colMaBN.Text = "Mã BN: " + _mabn.ToString();
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            //if (DungChung.Bien.MaBV == "24009")
                            //{
                            //    DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH.Value);
                            //    DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH.Value);
                            //    var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                            //                 join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                            //                 join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                            //                 join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                            //                 select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                            //    foreach (var item in _lcls)
                            //    {
                            //        _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                            //    }
                            //}
                            //else
                            //{
                            foreach (var a in par)
                            {
                                if (DungChung.Bien.MaBV == "26007")
                                {
                                    _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                }
                                else
                                    _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            //}
                            rep.YCCC.Value = _yccc;

                            if (DungChung.Bien.MaBV == "20001")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetQua + "\n";
                                }
                                _kq = _kq + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetLuan + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    _kq += " " + a.KetQua + "\n" + a.KetLuan + "\n";
                                }
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            //if (DungChung.Bien.MaBV == "20001")
                            //{
                            //    rep.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan), DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoanYHCT));// DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoanYHCT) + "[" + DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "]";
                            //}//DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                            //else
                            //    rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            //arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            //if (DungChung.Bien.MaBV == "20001")

                            //else
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    #region 27023 phiếu cắt lớp vi tính
                    else if (DungChung.Bien.MaBV == "27023" && (dvucd.TenDV.ToLower().Contains("cắt lớp vi tính") || dvucd.TenDV.ToLower().Contains("clvt") || dvucd.TenDV.ToLower().Contains("ct scanner")))
                    {
                        frmIn frm = new frmIn();
                        BaoCao.rep_PhieuChupCatLopVT rep = new BaoCao.rep_PhieuChupCatLopVT();
                        rep.TieuDe.Value = "PHIẾU CHỤP CẮT LỚP VI TÍNH";
                        string _kq = "", _mt = "";
                        if (par.Count > 0)
                        {
                            //rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            rep.So.Value = _IDCLS;
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.SThe.Value = par.FirstOrDefault().SThe;
                            rep.DTuong.Value = par.FirstOrDefault().DTuong == "BHYT" ? "Bảo hiểm y tế" : par.FirstOrDefault().DTuong;
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            int a1 = 1;
                            foreach (var a in par)
                            {
                                _yccc += a1 + ". " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                a1++;
                            }
                            //}
                            rep.YCCC.Value = _yccc;

                            foreach (var a in par)
                            {
                                _mt += "  -" + a.KetQua + "\n";
                            }
                            foreach (var a in par)
                            {
                                _kq += "  -" + a.KetLuan + "\n";
                            }

                            if (par.FirstOrDefault().NgayThang != null)
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().ChanDoan.Contains(";"))
                            {
                                string[] _arrcd = par.FirstOrDefault().ChanDoan.Split(';');
                                rep.ChanDoan.Value = _arrcd[0];
                                string benhphu = "";
                                for (int i = 1; i < _arrcd.Length; i++)
                                {
                                    benhphu += _arrcd[i] + ";";
                                }
                                rep.BenhKhac.Value = DungChung.Ham.FreshString(benhphu);
                            }
                            else
                                rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            rep.MoTa.Value = _mt;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];
                            rep.Khoa.Value = arrThongTinBNKB[4];
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    #region bv khác
                    else
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang rep = new BaoCao.repPhieuChupXQuang();
                        rep.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                        if (DungChung.Bien.MaBV == "24009" && v1 == 1)
                            rep.TieuDe.Value = "PHIẾU CHỤP X-QUANG SỐ HÓA";
                        string _kq = "";
                        if (par.Count > 0)
                        {
                            //rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            if (DungChung.Bien.MaBV == "27023")
                                rep.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep.So.Value = qvv.SoVV;
                                    else
                                        rep.So.Value = "";
                                }
                            }
                            else
                                rep.So.Value = _IDCLS;
                            rep.colMaBN.Text = "Mã BN: " + _mabn.ToString();
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            if (DungChung.Bien.MaBV == "24012")
                            {
                                rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge_24012);
                            }
                            else
                                rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            //if (DungChung.Bien.MaBV == "24009")
                            //{
                            //    DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH.Value);
                            //    DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH.Value);
                            //    var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                            //                 join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                            //                 join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                            //                 join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                            //                 select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                            //    foreach (var item in _lcls)
                            //    {
                            //        _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                            //    }
                            //}
                            //else
                            //{
                            foreach (var a in par)
                            {
                                if (DungChung.Bien.MaBV == "26007")
                                {
                                    _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                }
                                else
                                    _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            //}
                            rep.YCCC.Value = _yccc;

                            if (DungChung.Bien.MaBV == "20001")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetQua + "\n";
                                }
                                _kq = _kq + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetLuan + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    //if (a.KetQua_Rtf == null)
                                    _kq += "  -" + a.KetQua + "\r\n" + a.KetLuan;
                                    //else
                                    // _kq += "  -" + a.KetQua_Rtf + "\r\n" + a.KetLuan;
                                }
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    break;

                #endregion
                #region X quang DR
                case "X-Quang DR":
                    #region 27021
                    if (DungChung.Bien.MaBV == "27021")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang_27021 rep = new BaoCao.repPhieuChupXQuang_27021();
                        string _kq = "";
                        if (par.Count > 0)
                        {
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            rep.So.Value = _IDCLS;
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().DuongDan2 != null)
                            { rep.DuongDan.Value = par.FirstOrDefault().DuongDan2; }
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            foreach (var a in par)
                            {
                                _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            rep.YCCC.Value = _yccc;
                            foreach (var a in par)
                            {
                                _kq += " " + a.KetQua + a.KetLuan + "\n";
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];

                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion

                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang_01071 rep = new BaoCao.repPhieuChupXQuang_01071();
                        string _kq = "";
                        if (par.Count > 0)
                        {

                            rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            if (DungChung.Bien.MaBV == "27023")
                                rep.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep.So.Value = qvv.SoVV;
                                    else
                                        rep.So.Value = "";
                                }
                            }
                            else
                                rep.So.Value = _IDCLS;
                            if (par.FirstOrDefault().NoiTru == 1)
                            {
                                var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                if (sovv != null)
                                    rep.sovv.Text = "Số VV: " + sovv.ToString();
                            }
                            rep.colMaBN.Text = _mabn.ToString();
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                            {
                                DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH.Value);
                                DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH.Value);
                                var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                                             join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                             join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                                             join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                                             select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                                foreach (var item in _lcls)
                                {
                                    _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    if (DungChung.Bien.MaBV == "26007")
                                    {
                                        _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                    }
                                    else
                                        _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                }
                            }
                            rep.YCCC.Value = _yccc;

                            if (DungChung.Bien.MaBV == "20001")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetQua + "\n";
                                }
                                _kq = _kq + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetLuan + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    _kq += " " + a.KetQua + "\n" + a.KetLuan + "\n";
                                }
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            ////DungChung.Bien.MaBV == "01049" ? DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "  Mã ICD: " + DungChung.Ham.FreshString(par.FirstOrDefault().MaICD) : DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan); //par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + DungChung.Ham.FreshString(arrThongTinBNKB[0]) : arrThongTinBNKB[1];
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    #region 20001
                    else if (DungChung.Bien.MaBV == "20001")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang_20001 rep = new BaoCao.repPhieuChupXQuang_20001();
                        rep.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                        if (DungChung.Bien.MaBV == "24009" && v1 == 1)
                            rep.TieuDe.Value = "PHIẾU CHỤP X-QUANG SỐ HÓA";
                        string _kq = "";
                        if (par.Count > 0)
                        {
                            //rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            if (DungChung.Bien.MaBV == "27023")
                                rep.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep.So.Value = qvv.SoVV;
                                    else
                                        rep.So.Value = "";
                                }
                            }
                            else
                                rep.So.Value = _IDCLS;
                            rep.colMaBN.Text = "Mã BN: " + _mabn.ToString();
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            //if (DungChung.Bien.MaBV == "24009")
                            //{
                            //    DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH.Value);
                            //    DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH.Value);
                            //    var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                            //                 join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                            //                 join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                            //                 join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                            //                 select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                            //    foreach (var item in _lcls)
                            //    {
                            //        _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                            //    }
                            //}
                            //else
                            //{
                            foreach (var a in par)
                            {
                                if (DungChung.Bien.MaBV == "26007")
                                {
                                    _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                }
                                else
                                    _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            //}
                            rep.YCCC.Value = _yccc;

                            if (DungChung.Bien.MaBV == "20001")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetQua + "\n";
                                }
                                _kq = _kq + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetLuan + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    _kq += " " + a.KetQua + "\n" + a.KetLuan + "\n";
                                }
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            //if (DungChung.Bien.MaBV == "20001")
                            //{
                            //    rep.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan), DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoanYHCT));// DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoanYHCT) + "[" + DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "]";
                            //}//DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                            //else
                            //    rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            //arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            //if (DungChung.Bien.MaBV == "20001")

                            //else
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    #region 27023 phiếu cắt lớp vi tính
                    else if (DungChung.Bien.MaBV == "27023" && (dvucd.TenDV.ToLower().Contains("cắt lớp vi tính") || dvucd.TenDV.ToLower().Contains("clvt") || dvucd.TenDV.ToLower().Contains("ct scanner")))
                    {
                        frmIn frm = new frmIn();
                        BaoCao.rep_PhieuChupCatLopVT rep = new BaoCao.rep_PhieuChupCatLopVT();
                        rep.TieuDe.Value = "PHIẾU CHỤP CẮT LỚP VI TÍNH";
                        string _kq = "", _mt = "";
                        if (par.Count > 0)
                        {
                            //rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            rep.So.Value = _IDCLS;
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.SThe.Value = par.FirstOrDefault().SThe;
                            rep.DTuong.Value = par.FirstOrDefault().DTuong == "BHYT" ? "Bảo hiểm y tế" : par.FirstOrDefault().DTuong;
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            int a1 = 1;
                            foreach (var a in par)
                            {
                                _yccc += a1 + ". " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                a1++;
                            }
                            //}
                            rep.YCCC.Value = _yccc;

                            foreach (var a in par)
                            {
                                _mt += "  -" + a.KetQua + "\n";
                            }
                            foreach (var a in par)
                            {
                                _kq += "  -" + a.KetLuan + "\n";
                            }

                            if (par.FirstOrDefault().NgayThang != null)
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().ChanDoan.Contains(";"))
                            {
                                string[] _arrcd = par.FirstOrDefault().ChanDoan.Split(';');
                                rep.ChanDoan.Value = _arrcd[0];
                                string benhphu = "";
                                for (int i = 1; i < _arrcd.Length; i++)
                                {
                                    benhphu += _arrcd[i] + ";";
                                }
                                rep.BenhKhac.Value = DungChung.Ham.FreshString(benhphu);
                            }
                            else
                                rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            rep.MoTa.Value = _mt;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];
                            rep.Khoa.Value = arrThongTinBNKB[4];
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    #region bv khác
                    else
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang rep = new BaoCao.repPhieuChupXQuang();
                        rep.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                        if (DungChung.Bien.MaBV == "24009" && v1 == 1)
                            rep.TieuDe.Value = "PHIẾU CHỤP X-QUANG SỐ HÓA";
                        string _kq = "";
                        if (par.Count > 0)
                        {
                            //rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            if (DungChung.Bien.MaBV == "27023")
                                rep.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep.So.Value = qvv.SoVV;
                                    else
                                        rep.So.Value = "";
                                }
                            }
                            else
                                rep.So.Value = _IDCLS;
                            rep.colMaBN.Text = "Mã BN: " + _mabn.ToString();
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            //if (DungChung.Bien.MaBV == "24009")
                            //{
                            //    DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH.Value);
                            //    DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH.Value);
                            //    var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                            //                 join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                            //                 join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                            //                 join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                            //                 select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                            //    foreach (var item in _lcls)
                            //    {
                            //        _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                            //    }
                            //}
                            //else
                            //{
                            foreach (var a in par)
                            {
                                if (DungChung.Bien.MaBV == "26007")
                                {
                                    _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                }
                                else
                                    _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            //}
                            rep.YCCC.Value = _yccc;

                            if (DungChung.Bien.MaBV == "20001")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetQua + "\n";
                                }
                                _kq = _kq + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetLuan + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    //if (a.KetQua_Rtf == null)
                                    _kq += "  -" + a.KetQua + "\r\n" + a.KetLuan;
                                    //else
                                    //_kq += "  -" + a.KetQua_Rtf + "\r\n" + a.KetLuan;
                                }
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            rep.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    break;

                #endregion
                #region xquang CT
                case "X-Quang CT":
                    #region 12122
                    DungChung.Bien.checkcls = "X-Quang CT"; //minhvd
                    if (DungChung.Bien.MaBV == "12122" || DungChung.Bien.MaBV == "12121")
                    {
                        frmIn frmct = new frmIn();
                        Nam_0994.repPhieuChupCTScaner repct = new Nam_0994.repPhieuChupCTScaner();
                        string _kqct = "", _motact = "";
                        string[] arrThongTinBNKB;
                        if (par.Count > 0)
                        {
                            repct.TenBN.Value = par.FirstOrDefault().TenBNhan;

                            repct.So.Value = _IDCLS;
                            repct.MaCBDT.Value = par.FirstOrDefault().TenCB;
                            repct.DChi.Value = par.FirstOrDefault().DChi;
                            repct.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, par.FirstOrDefault().MaBNhan, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                repct.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                repct.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            repct.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                repct.GTinh.Value = "Nam";
                            }
                            else if (gioiTinh == 0)
                            {
                                repct.GTinh.Value = "N?";
                            }
                            string _yccc = "";
                            foreach (var a in par)
                            {
                                _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            repct.YCCC.Value = _yccc;
                            foreach (var a in par)
                            {
                                _motact += " " + a.KetQua + a.KetLuan + "\n";
                            }
                            DateTime NgayThang = new DateTime();
                            NgayThang = par.FirstOrDefault().NgayThang ?? System.DateTime.Now.Date;
                            DateTime NgayTH = new DateTime();
                            NgayTH = par.FirstOrDefault().NgayTH ?? System.DateTime.Now.Date;
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                repct.NgayCD.Value = DungChung.Ham.NgaySangChu(NgayThang, DungChung.Bien.FormatDate);
                            else
                                repct.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                repct.NgayTH.Value = DungChung.Ham.NgaySangChu(NgayTH, DungChung.Bien.FormatDate);
                            else
                                repct.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            repct.ChuanDoan.Value = par.FirstOrDefault().ChanDoan;
                            repct.MaCBth.Value = par.FirstOrDefault().TenCBth;
                            repct.Ketluan.Value = _motact;
                            int _maBN = par.FirstOrDefault().MaBNhan;
                            int _maKP = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value; //par.FirstOrDefault().MaKP ??0;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _maBN, _maKP, true);
                            repct.Buong.Value = arrThongTinBNKB[2];
                            repct.Giuong.Value = arrThongTinBNKB[3];
                            repct.Khoa.Value = arrThongTinBNKB[4];
                        }
                        repct.CreateDocument();
                        frmct.prcIN.PrintingSystem = repct.PrintingSystem;
                        frmct.ShowDialog();
                    }
                    #endregion
                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                    {
                        frmIn frmct = new frmIn();
                        BaoCao.repPhieuChupXQuang_01071 repct = new BaoCao.repPhieuChupXQuang_01071();


                        string _kqct = "";
                        if (par.Count > 0)
                        {
                            if (DungChung.Bien.MaBV == "01071")
                            {
                                string kieudoc1 = "";
                                string kieudoc2 = "";
                                var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                            select new
                                            {
                                                ht.KieuDoc
                                            }).ToList();
                                kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                                kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                                if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = true;
                                    DungChung.Bien._Visible_CDHA[1] = false;
                                }
                                if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = true;
                                    DungChung.Bien._Visible_CDHA[1] = false;

                                }
                                if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = true;
                                    DungChung.Bien._Visible_CDHA[1] = false;
                                }
                            }
                            repct.colMaBN.Text = _mabn.ToString();
                            repct.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            repct.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                            repct.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            if (DungChung.Bien.MaBV == "27023")
                                repct.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        repct.So.Value = qvv.SoVV;
                                    else
                                        repct.So.Value = "";
                                }
                            }
                            else
                                repct.So.Value = _IDCLS;
                            if (par.FirstOrDefault().NoiTru == 1)
                            {
                                var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                if (sovv != null)
                                    repct.sovv.Text = "Số VV: " + sovv.ToString();
                            }
                            repct.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            repct.DiaChi.Value = par.FirstOrDefault().DChi;
                            repct.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                repct.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                repct.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            repct.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                repct.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                repct.Nam.Value = "/";
                            }
                            string _yccc = "";
                            foreach (var a in par)
                            {
                                _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            repct.YCCC.Value = _yccc;
                            foreach (var a in par)
                            {
                                _kqct += " " + a.KetQua + a.KetLuan + "\n";
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                repct.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                repct.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                repct.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                repct.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                repct.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                repct.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                repct.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                repct.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                repct.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            repct.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "  Mã ICD: " + DungChung.Ham.FreshString(par.FirstOrDefault().MaICD) : DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan);//par.FirstOrDefault().ChanDoan;
                            repct.Macb.Value = par.FirstOrDefault().MaCBth;
                            repct.KQCC.Value = _kqct;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            repct.Buong.Value = arrThongTinBNKB[2];
                            repct.Giuong.Value = arrThongTinBNKB[3];


                            repct.Khoa.Value = arrThongTinBNKB[4];

                        }
                        repct.CreateDocument();
                        frmct.prcIN.PrintingSystem = repct.PrintingSystem;
                        frmct.ShowDialog();
                    }
                    #endregion
                    #region bv khác
                    else
                    {

                        frmIn frmct = new frmIn();
                        BaoCao.repPhieuChupXQuang repct = new BaoCao.repPhieuChupXQuang();
                        repct.TieuDe.Value = DungChung.Bien.MaBV == "24009" ? "PHIẾU CHỤP CẮT LỚP VI TÍNH" : "PHIẾU CHIẾU CHỤP X-QUANG";
                        if (DungChung.Bien.MaBV == "30372")
                        {
                            switch (DungChung.Bien.MauIn)
                            {
                                case 1:
                                    repct.TieuDe.Value = "PHIẾU CHỤP CẮT LỚP VI TÍNH";
                                    break;
                                case 2:
                                    repct.TieuDe.Value = "PHIẾU CHIẾU CHỤP X-QUANG";
                                    break;
                                case 3:
                                    repct.TieuDe.Value = "PHIẾU CHỤP X-QUANG";
                                    break;
                            }
                        }
                        string _kqct = "";
                        string _kl = "";
                        DateTime n3 = DungChung.Ham.NgayTu(Frm_CDHA_Moi.ngaythuchien);
                        DateTime n4 = DungChung.Ham.NgayDen(Frm_CDHA_Moi.ngaythuchien);
                        var paz14017 = (from bn in _Data.BenhNhans.Where(o => o.MaBNhan == _mabn) // query paz14017 cho vien 14017
                                        join bnkb in _Data.BNKBs.Where(p => p.MaKP == _makp) on bn.MaBNhan equals bnkb.MaBNhan
                                        join cls in _Data.CLS.Where(p => p.MaKPth == _mkp).Where(p => p.NgayTH >= n3 && p.NgayTH <= n4).Where(p => p.Status == 1) on bn.MaBNhan equals cls.MaBNhan
                                        //join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                        join chidinh in _Data.ChiDinhs on cls.IdCLS equals chidinh.IdCLS
                                        join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                                        join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                                        select new
                                        {
                                            bnkb.IDKB,
                                            chidinh.LoiDan,
                                            chidinh.ChiDinh1,
                                            chidinh.KetLuan,
                                            clsct.KetQua,
                                            clsct.KetQua_Rtf,
                                            cls.IdCLS,
                                            dv.TenDV
                                        }).ToList();
                        if (par.Count > 0)
                        {
                            repct.colMaBN.Text = _mabn.ToString();
                            repct.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            repct.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                            repct.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            if (DungChung.Bien.MaBV == "27023")
                                repct.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        repct.So.Value = qvv.SoVV;
                                    else
                                        repct.So.Value = "";
                                }
                            }
                            else
                                repct.So.Value = _IDCLS;
                            repct.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            repct.DiaChi.Value = par.FirstOrDefault().DChi;
                            repct.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (DungChung.Bien.MaBV == "30372")
                            {
                                _kl = par.FirstOrDefault().KetLuan;
                            }

                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                repct.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                repct.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            repct.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                repct.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                repct.Nam.Value = "/";
                            }
                            string _yccc = "";
                            if (DungChung.Bien.MaBV != "24009")
                            {
                                foreach (var a in par)
                                {
                                    _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                }
                                repct.YCCC.Value = _yccc;
                            }
                            else
                            {
                                repct.YCCC.Value = par1.FirstOrDefault().TenDV + par.FirstOrDefault().ChiDinh1;
                            }
                            foreach (var a in par)
                            {
                                //if (a.KetQua_Rtf == null)
                                if (DungChung.Bien.MaBV == "30372")
                                {
                                    _kqct += a.KetQua + "\r\n";
                                }
                                else
                                {
                                    _kqct += "  " + a.KetQua + "\r\n" + a.KetLuan;
                                }
                                //else
                                //_kqct += "  -" + a.KetQua_Rtf + "\r\n" + a.KetLuan;
                            }
                            foreach (var a in paz14017)
                            {

                                {
                                    _kl += a.KetLuan + "\r\n";
                                }
                            }

                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                repct.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                repct.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                repct.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                repct.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                repct.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (DungChung.Bien.MaBV == "30372")
                            {
                                _kl = par.FirstOrDefault().KetLuan;
                            }
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                repct.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                repct.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                repct.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                repct.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            repct.ChanDoan.Value = par.FirstOrDefault().ChanDoan;
                            repct.Macb.Value = par.FirstOrDefault().MaCBth;
                            repct.KQCC.Value = _kqct;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            repct.Buong.Value = arrThongTinBNKB[2];
                            repct.Giuong.Value = arrThongTinBNKB[3];
                            repct.KetLuan.Value = _kl;
                            repct.Khoa.Value = arrThongTinBNKB[4];
                            if (DungChung.Bien.MaBV == "30010")
                            {
                                int MKPTH = par.FirstOrDefault().MaKPth.Value;
                                repct.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == MKPTH).Select(p => p.TenKP).FirstOrDefault().ToString();
                            }
                        }
                        if (DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "01071")
                        {
                            string kieudoc1 = "";
                            string kieudoc2 = "";
                            var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                        select new
                                        {
                                            ht.KieuDoc
                                        }).ToList();
                            kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                            kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                            if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                            {
                                DungChung.Bien._Visible_CDHA[0] = true;
                                DungChung.Bien._Visible_CDHA[1] = false;

                            }
                            if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                            {
                                DungChung.Bien._Visible_CDHA[0] = true;
                                DungChung.Bien._Visible_CDHA[1] = false;

                            }
                            if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                            {
                                DungChung.Bien._Visible_CDHA[0] = true;
                                DungChung.Bien._Visible_CDHA[1] = false;
                            }
                        }
                        repct.CreateDocument();
                        frmct.prcIN.PrintingSystem = repct.PrintingSystem;
                        frmct.ShowDialog();
                    }
                    #endregion
                    break;
                #endregion
                #region Siêu âm
                case "Siêu âm":
                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                    {
                        if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                        {
                            #region Sieu am o bung
                            if (Frm_CDHA_Moi._tendv == "Siêu âm ổ bụng_" || FRM_chidinh_Moi._tendv == "Siêu âm ổ bụng_") //sieu am o bung
                            {
                                Dictionary<string, object> _dic = new Dictionary<string, object>();

                                _dic.Add("Bacsy", par.FirstOrDefault().ChucVu + " " + par.FirstOrDefault().TenCBth);
                                if (par.FirstOrDefault().NgayTH != null)
                                {
                                    _dic.Add("Ngaythang", "Hà Nội" + ", " + " ngày " + par.FirstOrDefault().NgayTH.Value.Day + " tháng " + par.FirstOrDefault().NgayTH.Value.Month + " năm " + par.FirstOrDefault().NgayTH.Value.Year);
                                }
                                else
                                {
                                    _dic.Add("Ngaythang", "");
                                }

                                if (par.Count > 0 && par.FirstOrDefault().DuongDan != null)
                                {
                                    if (File.Exists(par.FirstOrDefault().DuongDan))
                                    {
                                        _dic.Add("Anh1", Image.FromFile(par.FirstOrDefault().DuongDan));
                                    }
                                    else
                                    {
                                        _dic.Add("Anh1", null);
                                    }

                                }
                                _dic.Add("sdt", ttbx.FirstOrDefault().DThoai != null ? ttbx.FirstOrDefault().DThoai : "");
                                string gioitinh = "";
                                if (par.FirstOrDefault().GTinh == 1)
                                {
                                    gioitinh = "Nam";
                                    _dic.Add("Sinhnam", par.FirstOrDefault().Tuoi);
                                }
                                if (par.FirstOrDefault().GTinh == 0)
                                {
                                    gioitinh = "Nữ";
                                    _dic.Add("Sinhnam", par.FirstOrDefault().NamSinh);
                                }
                                _dic.Add("Gioitinh", gioitinh);
                                if (par.FirstOrDefault().NoiTru == 1)
                                {
                                    var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                    if (sovv != null)
                                        _dic.Add("sovv", "Số VV: " + sovv.ToString());
                                }
                                _dic.Add("thuong2", (par.FirstOrDefault().CapCuu == false) ? "X" : "");
                                _dic.Add("capcuu2", (par.FirstOrDefault().CapCuu == true) ? "X" : "");

                                _dic.Add("MaCBDT", par.FirstOrDefault().MaCB);
                                _dic.Add("DiaChi", par.FirstOrDefault().DChi);
                                _dic.Add("TuoiBN", DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge));

                                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    _dic.Add("Nu", "/");
                                }
                                else if (gioiTinh == 0)
                                {
                                    _dic.Add("Nam", "/");
                                }

                                if (par.FirstOrDefault().SThe.Length >= 15)
                                {
                                    _dic.Add("SThe1", par.FirstOrDefault().SThe.Substring(0, 3));
                                    _dic.Add("SThe2", par.FirstOrDefault().SThe.Substring(3, 2));
                                    _dic.Add("SThe3", par.FirstOrDefault().SThe.Substring(5, 2));
                                    _dic.Add("SThe4", par.FirstOrDefault().SThe.Substring(7, 3));
                                    _dic.Add("SThe5", par.FirstOrDefault().SThe.Substring(10, 5));
                                    _dic.Add("visibleSb", 1);
                                }
                                else _dic.Add("visibleSb", 0);
                                _dic.Add("sophieu", _IDCLS);
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                _dic.Add("ChanDoan2", DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1]);
                                _dic.Add("Buong2", arrThongTinBNKB[2]);
                                _dic.Add("Giuong2", arrThongTinBNKB[3]);
                                _dic.Add("Khoa2", arrThongTinBNKB[4]);
                                _dic.Add("KetLuan", par.FirstOrDefault().KetLuan);
                                DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuSieuAmOBung_01071, par, _dic, false);
                            }
                            #endregion
                            else
                            {
                                #region Khác siêu âm ổ bụng 01071

                                frmIn frm3 = new frmIn();
                                BaoCao.repPhieuSieuAm_01071 rep3 = new BaoCao.repPhieuSieuAm_01071();
                                if (par.Count > 0)
                                {
                                    rep3.labmabn.Text = _mabn.ToString();
                                    rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    if (DungChung.Bien.MaBV == "27023")
                                        rep3.SoPhieu.Value = _so;
                                    else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                    {
                                        if (par.Count > 0)
                                        {
                                            int mabn = par.FirstOrDefault().MaBNhan;
                                            var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                            if (qvv != null)
                                                rep3.SoPhieu.Value = qvv.SoVV;
                                            else
                                                rep3.SoPhieu.Value = "";
                                        }
                                    }
                                    else
                                        rep3.SoPhieu.Value = _IDCLS;
                                    if (par.FirstOrDefault().NoiTru == 1)
                                    {
                                        var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                        if (sovv != null)
                                            rep3.sovv.Text = "Số VV: " + sovv.ToString();
                                    }
                                    rep3.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                    rep3.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                    rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                    rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                                    rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                    rep3.SoBHYT.Value = par.FirstOrDefault().SThe;

                                    if (par.FirstOrDefault().GTinh == 1)
                                    {
                                        rep3.Nu.Value = "/";
                                    }
                                    else
                                    {
                                        rep3.Nam.Value = "/";
                                    }
                                    rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                                    rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                                    rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                                    if (par.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                        rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                        rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                        rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                        rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                    }
                                    if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                        rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                    rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                                    string str = "";
                                    if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                        str = par.FirstOrDefault().KetQua;
                                    rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                    if (par.FirstOrDefault().DuongDan != null)
                                        rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                    rep3.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                                    rep3.Buong.Value = arrThongTinBNKB[2];
                                    rep3.Giuong.Value = arrThongTinBNKB[3];
                                    rep3.tb_ChiDinh.Visible = false;
                                    rep3.Khoa.Value = arrThongTinBNKB[4];

                                }

                                rep3.CreateDocument();
                                frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                                frm3.ShowDialog();
                                #endregion
                            }
                        }
                        else
                        {
                            frmIn frm3 = new frmIn();
                            BaoCao.repPhieuSieuAm_01071 rep3 = new BaoCao.repPhieuSieuAm_01071();
                            if (par.Count > 0)
                            {
                                rep3.labmabn.Text = _mabn.ToString();
                                rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                if (DungChung.Bien.MaBV == "27023")
                                    rep3.SoPhieu.Value = _so;
                                else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                {
                                    if (par.Count > 0)
                                    {
                                        int mabn = par.FirstOrDefault().MaBNhan;
                                        var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                        if (qvv != null)
                                            rep3.SoPhieu.Value = qvv.SoVV;
                                        else
                                            rep3.SoPhieu.Value = "";
                                    }
                                }
                                else
                                    rep3.SoPhieu.Value = _IDCLS;
                                if (par.FirstOrDefault().NoiTru == 1)
                                {
                                    var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                    if (sovv != null)
                                        rep3.sovv.Text = "Số VV: " + sovv.ToString();
                                }
                                rep3.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                rep3.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                                rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep3.Nu.Value = "/";
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep3.Nam.Value = "/";
                                }
                                rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                                rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                                rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                                if (par.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                    rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                    rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                    rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                    rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                }
                                if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                    rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                else
                                    rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                if (par.FirstOrDefault().NgayTH != null)
                                    rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                                string str = "";
                                if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                    str = par.FirstOrDefault().KetQua;
                                rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                if (par.FirstOrDefault().DuongDan != null)
                                    rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                if (DungChung.Bien.MaBV == "24297" && par.FirstOrDefault().IsDongY == true)
                                {
                                    rep3.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value);
                                }
                                else { rep3.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1]; }

                                rep3.Buong.Value = arrThongTinBNKB[2];
                                rep3.Giuong.Value = arrThongTinBNKB[3];

                                rep3.Khoa.Value = arrThongTinBNKB[4];

                            }

                            rep3.CreateDocument();
                            frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                            frm3.ShowDialog();
                        }



                    }
                    #endregion
                    #region 56789
                    else if (DungChung.Bien.MaBV == "56789")
                    {
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm_HamNghi rep3 = new BaoCao.repPhieuSieuAm_HamNghi();
                        if (par.Count > 0)
                        {
                            rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            rep3.SoPhieu.Value = _IDCLS;
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = par.FirstOrDefault().NamSinh;//DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            rep3.Nam.Value = par.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                            rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = "Kết luận: " + par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            string str = "";
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                str = par.FirstOrDefault().KetQua;
                            rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep3.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];

                            rep3.Khoa.Value = arrThongTinBNKB[4];

                        }

                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                    }
                    #endregion
                    #region 30372
                    else if (DungChung.Bien.MaBV == "30372")
                    {
                        frm_SoLuongAnhIn frm = new frm_SoLuongAnhIn();
                        frm.ShowDialog();
                        int i1 = frm.SoLuongAnhin;
                        List<CDHA_30372> rep = new List<CDHA_30372>();
                        if (i1 > 0)
                        {
                            CDHA_30372 cdha = new CDHA_30372();
                            Dictionary<string, object> dicpar = new Dictionary<string, object>();
                            // tên cơ quan chủ quản   
                            int TimeFormat = Convert.ToInt32(_Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN).FirstOrDefault().FormatDate);
                            cdha.TenBV = DungChung.Bien.TenCQ;
                            cdha.Logo = DungChung.Ham.GetLogo();
                            cdha.MaBN = par.FirstOrDefault().MaBNhan;
                            string[] DuongDan = par.Where(p => p.IdCLS == _IDCLS).FirstOrDefault().DuongDan2.Split('|');

                            for (int i = 0; i < DuongDan.Length; i++)
                            {
                                switch (i)
                                {
                                    case 1:
                                        if (DuongDan[0] != null)
                                        {
                                            cdha.Anh1 = InPhieu.KiemTraTonTaiAnh(DuongDan[0].ToString());
                                        }
                                        break;
                                    case 2:
                                        if (DuongDan[1] != null)
                                        {
                                            cdha.Anh2 = InPhieu.KiemTraTonTaiAnh(DuongDan[1].ToString());
                                        }
                                        break;
                                    case 3:
                                        if (DuongDan[2] != null)
                                        {
                                            cdha.Anh3 = InPhieu.KiemTraTonTaiAnh(DuongDan[2].ToString());
                                        }
                                        break;
                                    case 4:
                                        if (DuongDan[3] != null)
                                        {
                                            cdha.Anh4 = InPhieu.KiemTraTonTaiAnh(DuongDan[3].ToString());
                                        }
                                        break;
                                    case 5:
                                        if (DuongDan[4] != null)
                                        {
                                            cdha.Anh5 = InPhieu.KiemTraTonTaiAnh(DuongDan[4].ToString());
                                        }
                                        break;
                                    case 6:
                                        if (DuongDan[5] != null)
                                        {
                                            cdha.Anh6 = InPhieu.KiemTraTonTaiAnh(DuongDan[5].ToString());
                                        }
                                        break;
                                    case 7:
                                        if (DuongDan[6] != null)
                                        {
                                            cdha.Anh7 = InPhieu.KiemTraTonTaiAnh(DuongDan[6].ToString());
                                        }
                                        break;
                                    case 8:
                                        if (DuongDan[7] != null)
                                        {
                                            cdha.Anh8 = InPhieu.KiemTraTonTaiAnh(DuongDan[7].ToString());
                                        }
                                        break;

                                    default:
                                        break;
                                }
                            }



                            cdha.DiaChiBenhVien = DungChung.Bien.DiaChi;
                            cdha.TieuDe = "PHIẾU SIÊU ÂM";
                            cdha.SoDienThoaiLienHe = "SĐT: " + _Data.HTHONGs.FirstOrDefault().SDT + " - Fax: " + _Data.HTHONGs.FirstOrDefault().Fax + "";
                            cdha.YeuCau = par.FirstOrDefault().TenDV;
                            cdha.NgaySinh = par.FirstOrDefault().NgaySinh + " / " + par.FirstOrDefault().ThangSinh + " / " + par.FirstOrDefault().NamSinh;
                            cdha.TieuDeKetQua = "KẾT QUẢ SIÊU ÂM";
                            cdha.BSCD = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            cdha.NgayChiDinh = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.NgayTH = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayTH), TimeFormat);
                            cdha.Tuoi = par.FirstOrDefault().Tuoi;
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong != null)
                            {
                                cdha.Buong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong;
                            }
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong != null)
                            {
                                cdha.Giuong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong;
                            }

                            // Thông tin bệnh nhân
                            cdha.HoTen = par.FirstOrDefault().TenBNhan.ToUpper();
                            cdha.DiaChi = par.FirstOrDefault().DChi;
                            cdha.Khoa = par.FirstOrDefault().TenKP;
                            cdha.ChanDoan = par.FirstOrDefault().ChanDoan;
                            dicpar["SoLuongAnh"] = i1;
                            if (par.FirstOrDefault().GTinh != 1)
                            {
                                cdha.Nam = "/";
                                cdha.Nu = "";
                            }
                            else
                            {
                                cdha.Nu = "/";
                                cdha.Nam = "";
                            }
                            if (par.FirstOrDefault().SThe != "")
                            {
                                cdha.MA1 = par.FirstOrDefault().SThe.Substring(0, 3);
                                cdha.MA2 = par.FirstOrDefault().SThe.Substring(3, 2);
                                cdha.MA3 = par.FirstOrDefault().SThe.Substring(5, 2);
                                cdha.MA4 = par.FirstOrDefault().SThe.Substring(7, 3);
                                cdha.MA5 = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (ttbx.Count != 0)
                            {
                                cdha.Email = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email;
                                cdha.DienThoai = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai;
                            }

                            cdha.BacSyChiDinh = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            if (par.FirstOrDefault().KetQua_Rtf == null)
                            {
                                cdha.KetQua = par.FirstOrDefault().KetQua;
                            }
                            else
                            {
                                cdha.KetQua = par.FirstOrDefault().KetQua_Rtf;
                            }

                            cdha.KetLuan = par.FirstOrDefault().KetLuan;
                            cdha.LoiDan = par.FirstOrDefault().LoiDan;
                            cdha.NgayThang = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.BSTH = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCBth).ToUpper();
                            rep.Add(cdha);
                            DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuCDHA_30372, rep.ToList(), dicpar, false);
                        }
                        else
                        {
                            MessageBox.Show("Xin hãy chọn số lượng ảnh cần in!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);

                        }
                    }
                    #endregion
                    #region Viện khác
                    else
                    {

                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm rep3 = new BaoCao.repPhieuSieuAm();
                        if (par.Count > 0)
                        {
                            var clsPrint = par.First(o => o.IdCLS == _IDCLS);
                            if (clsPrint != null)
                            {
                                if (par.FirstOrDefault().TenDV.ToLower().Contains("đầu dò âm đạo"))
                                {
                                    if (DungChung.Bien.MaBV == "24009" || DungChung.Bien.MaBV == "27777")
                                    {
                                        rep3.SubBand4.Visible = true;
                                        rep3.xrLabel2.Text = "1. Mô tả tổn thương";
                                        rep3.xrLabel1.Text = "2. Kết luận";
                                    }
                                    else
                                    {
                                        rep3.SubBand2.Visible = true;
                                    }


                                }
                                else
                                {
                                    if (DungChung.Bien.MaBV == "24009" || DungChung.Bien.MaBV == "27777")
                                    {
                                        rep3.SubBand3.Visible = true;
                                        rep3.xrLabel2.Text = "1. Mô tả tổn thương";
                                        rep3.xrLabel1.Text = "2. Kết luận";
                                    }
                                    else
                                    {
                                        rep3.SubBand1.Visible = true;
                                    }
                                }
                                rep3.labmabn.Text = "Mã BN: " + _mabn.ToString();
                                //if (DungChung.Bien.MaBV == "20001")
                                //{
                                rep3.TenBN.Value = clsPrint.TenBNhan.ToUpper();
                                //}
                                //else
                                //{
                                //    rep3.TenBN.Value = clsPrint.TenBNhan;
                                //}
                                if (DungChung.Bien.MaBV == "27023")
                                {
                                    rep3.SoPhieu.Value = _so;
                                    if (par.FirstOrDefault().Status == 0)
                                    {
                                        rep3.SubBand6.Visible = false;
                                    }
                                }
                                else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                {
                                    if (par.Count > 0)
                                    {
                                        int mabn = clsPrint.MaBNhan;
                                        var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                        if (qvv != null)
                                            rep3.SoPhieu.Value = qvv.SoVV;
                                        else
                                            rep3.SoPhieu.Value = "";
                                    }
                                }
                                else
                                    rep3.SoPhieu.Value = _IDCLS;
                                rep3.thuong.Text = (clsPrint.CapCuu == false) ? "X" : "";
                                rep3.capcuu.Text = (clsPrint.CapCuu == true) ? "X" : "";
                                rep3.MaCBDT.Value = clsPrint.MaCB;
                                rep3.MaCBTH.Value = clsPrint.MaCBth;
                                rep3.DiaChi.Value = clsPrint.DChi;
                                rep3.TuoiBN.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.CalculateAge(clsPrint.NgaySinh, clsPrint.ThangSinh, clsPrint.NamSinh, " tháng.") : DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                rep3.SoBHYT.Value = clsPrint.SThe;
                                int gioiTinh = int.Parse(clsPrint.GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep3.Nu.Value = "/";
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep3.Nam.Value = "/";
                                }
                                rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par1.FirstOrDefault().TenDV + " (" + clsPrint.ChiDinh1 + ")";
                                rep3.KetLuan.Value = clsPrint.KetLuan;
                                rep3.LDBS.Value = clsPrint.LoiDan;
                                if (clsPrint.SThe.Length >= 15)
                                {
                                    rep3.SThe1.Value = clsPrint.SThe.Substring(0, 3);
                                    rep3.SThe2.Value = clsPrint.SThe.Substring(3, 2);
                                    rep3.SThe3.Value = clsPrint.SThe.Substring(5, 2);
                                    rep3.SThe4.Value = clsPrint.SThe.Substring(7, 3);
                                    rep3.SThe5.Value = clsPrint.SThe.Substring(10, 5);
                                }
                                if (clsPrint.NgayThang != null && DungChung.Bien.MaBV != "02005")
                                    rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(clsPrint.NgayThang.Value, DungChung.Bien.FormatDate);
                                else
                                    rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                if (clsPrint.NgayTH != null)
                                    rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(clsPrint.NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";

                                if (clsPrint != null)
                                {
                                    rep3.Macb.Value = clsPrint.MaCBth;
                                }
                                string str = "";
                                if (string.IsNullOrEmpty(clsPrint.KetQua_Rtf))
                                    str = clsPrint.KetQua;
                                else
                                    str = clsPrint.KetQua_Rtf;
                                if (DungChung.Bien.MaBV == "30340")
                                {
                                    rep3.colKetQua.Text = str;
                                }
                                else
                                {
                                    rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                }

                                if (clsPrint.DuongDan != null)
                                    rep3.DuongDan.Value = clsPrint.DuongDan;
                                if (clsPrint.DuongDan2 != null)
                                    rep3.DuongDan2.Value = clsPrint.DuongDan2;
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                if (DungChung.Bien.MaBV == "20001")
                                    rep3.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                                else
                                {
                                    if (DungChung.Bien.MaBV == "14018")
                                    {

                                        rep3.ChanDoan.Value = DungChung.Ham.GetChanDoanKB(_Data, _mabn);
                                    }
                                    else
                                    {
                                        rep3.ChanDoan.Value = arrThongTinBNKB[0] != null || arrThongTinBNKB[0] != "" ? arrThongTinBNKB[0] + ";" : "";
                                        rep3.ChanDoan.Value = arrThongTinBNKB[1];


                                    }
                                }
                                rep3.Buong.Value = arrThongTinBNKB[2];
                                rep3.Giuong.Value = arrThongTinBNKB[3];

                                rep3.Khoa.Value = DungChung.Ham.GetTenKP_20001(arrThongTinBNKB[4] ?? "");

                            }


                            if (DungChung.Bien.MaBV == "30010")
                            {
                                int mkpth = Convert.ToInt32(par.FirstOrDefault().MaKPth.Value);
                                rep3.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                            }//yenbg1
                            rep3.CreateDocument();
                            frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                            frm3.ShowDialog();
                        }
                    }
                    break;
                #endregion
                #endregion
                #region Siêu âm màu
                case "Siêu âm màu":
                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                    {
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm_01071 rep3 = new BaoCao.repPhieuSieuAm_01071();
                        if (par.Count > 0)
                        {
                            rep3.labmabn.Text = _mabn.ToString();
                            rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            if (DungChung.Bien.MaBV == "27023")
                                rep3.SoPhieu.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep3.SoPhieu.Value = qvv.SoVV;
                                    else
                                        rep3.SoPhieu.Value = "";
                                }
                            }
                            else
                                rep3.SoPhieu.Value = _IDCLS;
                            if (par.FirstOrDefault().NoiTru == 1)
                            {
                                var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                if (sovv != null)
                                    rep3.sovv.Text = "Số VV: " + sovv.ToString();
                            }
                            rep3.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep3.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep3.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep3.Nam.Value = "/";
                            }
                            rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            string str = "";
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                str = par.FirstOrDefault().KetQua;
                            rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep3.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];

                            rep3.Khoa.Value = arrThongTinBNKB[4];

                        }

                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                    }
                    else if (DungChung.Bien.MaBV == "56789")
                    {
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm_HamNghi rep3 = new BaoCao.repPhieuSieuAm_HamNghi();
                        if (par.Count > 0)
                        {
                            rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            rep3.SoPhieu.Value = _IDCLS;
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = par.FirstOrDefault().NamSinh;//DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            rep3.Nam.Value = par.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                            rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = "Kết luận: " + par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            string str = "";
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                str = par.FirstOrDefault().KetQua;
                            rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep3.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];

                            rep3.Khoa.Value = arrThongTinBNKB[4];

                        }

                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                    }
                    #endregion
                    else
                    {
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm rep3 = new BaoCao.repPhieuSieuAm();
                        if (par.Count > 0)
                        {
                            if (DungChung.Bien.MaBV == "30010")
                            {
                                if (par.FirstOrDefault().TenDV.ToLower().Contains("đầu dò âm đạo"))
                                {
                                    rep3.SubBand1.Visible = false;
                                    rep3.SubBand2.Visible = true;
                                    rep3.xrLabel2.Text = "1. Mô tả tổn thương";
                                    rep3.xrLabel2.Visible = true;
                                    rep3.xrLabel1.Text = "2. Kết luận";
                                }
                                else
                                {
                                    rep3.SubBand1.Visible = true;
                                    rep3.SubBand2.Visible = false;
                                    rep3.SubBand3.Visible = false;
                                    rep3.SubBand4.Visible = false;
                                }

                            }
                            if (DungChung.Bien.MaBV == "24009" || DungChung.Bien.MaBV == "27777")
                            {
                                if (par.FirstOrDefault().TenDV.ToLower().Contains("đầu dò âm đạo"))
                                {
                                    rep3.SubBand1.Visible = false;
                                    rep3.SubBand2.Visible = false;
                                    rep3.SubBand3.Visible = false;
                                    rep3.SubBand4.Visible = true;
                                    rep3.xrLabel2.Text = "1. Mô tả tổn thương";
                                    rep3.xrLabel1.Text = "2. Kết luận";
                                }


                                else
                                {

                                    rep3.SubBand1.Visible = false;
                                    rep3.SubBand2.Visible = false;
                                    rep3.SubBand3.Visible = true;
                                    rep3.SubBand4.Visible = false;
                                }
                            }
                            rep3.labmabn.Text = "Mã BN: " + _mabn.ToString();
                            if (DungChung.Bien.MaBV == "20001")
                            {
                                rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            }
                            else
                            {
                                rep3.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            }
                            if (DungChung.Bien.MaBV == "27023")
                                rep3.SoPhieu.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep3.SoPhieu.Value = qvv.SoVV;
                                    else
                                        rep3.SoPhieu.Value = "";
                                }
                            }
                            else
                                rep3.SoPhieu.Value = _IDCLS;
                            rep3.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep3.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep3.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep3.Nam.Value = "/";
                            }
                            rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            string str = "";
                            //if (string.IsNullOrEmpty(par.FirstOrDefault().KetQua_Rtf))
                            str = par.FirstOrDefault().KetQua;
                            //else
                            //str = par.FirstOrDefault().KetQua_Rtf;
                            rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep3.ChanDoan.Value = arrThongTinBNKB[0] != null || arrThongTinBNKB[0] != "" ? arrThongTinBNKB[0] + ";" : "";
                            rep3.ChanDoan.Value += arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];

                            rep3.Khoa.Value = arrThongTinBNKB[4];

                        }

                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                    }
                    break;
                #endregion
                #region Điện tim
                case "Điện tim":
                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                    {
                        frmIn frm1 = new frmIn();
                        BaoCao.Rep_PhieuDienTim_01071 rep1 = new BaoCao.Rep_PhieuDienTim_01071();

                        if (par.Count > 0)
                        {
                            if (DungChung.Bien.MaBV == "01071")
                            {
                                string kieudoc1 = "";
                                string kieudoc2 = "";
                                var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                            select new
                                            {
                                                ht.KieuDoc
                                            }).ToList();
                                kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                                kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                                if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[1] = false;
                                    DungChung.Bien._Visible_CDHA[2] = false;
                                    DungChung.Bien._Visible_CDHA[0] = true;
                                    DungChung.Bien._Visible_CDHA[3] = false;

                                }
                                if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                                {
                                    DungChung.Bien._Visible_CDHA[2] = false;
                                    DungChung.Bien._Visible_CDHA[3] = false;
                                    DungChung.Bien._Visible_CDHA[0] = true;

                                    DungChung.Bien._Visible_CDHA[1] = false;

                                }
                                if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[1] = false;
                                    DungChung.Bien._Visible_CDHA[2] = false;
                                    DungChung.Bien._Visible_CDHA[3] = false;
                                    DungChung.Bien._Visible_CDHA[0] = true;

                                }
                            }
                            rep1.txtmabn.Text = _mabn.ToString();
                            rep1.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            if (DungChung.Bien.MaBV == "27023")
                                rep1.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep1.So.Value = qvv.SoVV;
                                    else
                                        rep1.So.Value = "";
                                }
                            }
                            else
                                rep1.So.Value = _IDCLS;
                            if (par.FirstOrDefault().NoiTru == 1)
                            {
                                var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                if (sovv != null)
                                    rep1.sovv.Text = "Số VV: " + sovv.ToString();
                            }
                            rep1.thuong.Text = (par0.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep1.capcuu.Text = (par0.FirstOrDefault().CapCuu == true) ? "X" : "";
                            rep1.SoPhieu.Value = _IDCLS;
                            rep1.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep1.TenCB.Value = par.FirstOrDefault().ChucVu + ": " + par.FirstOrDefault().TenCBth;
                            rep1.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep1.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep1.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep1.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep1.Nam.Value = "/";
                            }
                            rep1.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep1.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep1.Loidan.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep1.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep1.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep1.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep1.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep1.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep1.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep1.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep1.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep1.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep1.Macb.Value = par.FirstOrDefault().MaCBth;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);

                            if (par.FirstOrDefault().IsDongY == true && DungChung.Bien.MaBV == "24297")
                            {
                                rep1.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _mabn, _makp);
                            }
                            else
                            {
                                rep1.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            }


                            rep1.Buong.Value = arrThongTinBNKB[2];
                            rep1.Giuong.Value = arrThongTinBNKB[3];

                            rep1.Khoa.Value = arrThongTinBNKB[4];


                        }
                        rep1.CreateDocument();
                        frm1.prcIN.PrintingSystem = rep1.PrintingSystem;
                        frm1.ShowDialog();
                    }
                    #endregion
                    else
                    {
                        frmIn frm1 = new frmIn();
                        BaoCao.Rep_PhieuDienTim rep1 = new BaoCao.Rep_PhieuDienTim();
                        if (par.Count > 0)
                        {
                            rep1.txtmabn.Text = "Mã BN: " + _mabn.ToString();
                            rep1.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            if (DungChung.Bien.MaBV == "27023")
                            {
                                rep1.SubBand1.Visible = true;
                                rep1.SubBand2.Visible = false;
                                rep1.SubBand3.Visible = false;
                                rep1.So.Value = _so;
                            }
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep1.So.Value = qvv.SoVV;
                                    else
                                        rep1.So.Value = "";
                                }
                            }
                            else
                                rep1.So.Value = _IDCLS;

                            rep1.xrLabel10.Text = rep1.thuong.Text = (par0.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep1.xrLabel13.Text = rep1.capcuu.Text = (par0.FirstOrDefault().CapCuu == true) ? "X" : "";
                            rep1.SoPhieu.Value = _IDCLS;
                            rep1.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep1.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep1.TuoiBN.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.CalculateAge(par.FirstOrDefault().NgaySinh, par.FirstOrDefault().ThangSinh, par.FirstOrDefault().NamSinh, " tháng.") : DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep1.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep1.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep1.Nam.Value = "/";
                            }
                            rep1.YCKT.Value = "- Yêu cầu kiểm tra: " + par1.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep1.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep1.Loidan.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep1.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep1.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep1.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep1.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep1.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep1.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep1.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep1.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep1.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep1.Macb.Value = par.FirstOrDefault().MaCBth;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            if (DungChung.Bien.MaBV == "20001")
                                rep1.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                            else
                            {
                                if (DungChung.Bien.MaBV == "14018")
                                {
                                    rep1.ChanDoan.Value = DungChung.Ham.GetChanDoanKB(_Data, _mabn);
                                }
                                else
                                {
                                    rep1.ChanDoan.Value = arrThongTinBNKB[0] != null || arrThongTinBNKB[0] != "" ? arrThongTinBNKB[0] + ";" : "";
                                    rep1.ChanDoan.Value += arrThongTinBNKB[1];
                                }
                            }

                            rep1.Buong.Value = arrThongTinBNKB[2];
                            rep1.Giuong.Value = arrThongTinBNKB[3];

                            rep1.Khoa.Value = arrThongTinBNKB[4];
                            if (DungChung.Bien.MaBV == "30010") //Yenbg1
                            {
                                int mkpth = Convert.ToInt32(par.FirstOrDefault().MaKPth.Value);
                                rep1.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                            }

                        }
                        rep1.CreateDocument();
                        frm1.prcIN.PrintingSystem = rep1.PrintingSystem;
                        frm1.ShowDialog();
                    }
                    break;
                #endregion
                #region nội soi
                case "Nội soi":
                    #region 27183
                    frmIn frm2 = new frmIn();
                    if (DungChung.Bien.MaBV == "27183")
                    {

                        BaoCao.Rep_PhieuNoiSoi_27183 rep2 = new BaoCao.Rep_PhieuNoiSoi_27183();
                        if (par.Count > 0)
                        {
                            rep2.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            rep2.SoPhieu.Value = _IDCLS;
                            rep2.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep2.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep2.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep2.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep2.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep2.Nam.Value = "/";
                            }
                            rep2.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep2.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            string ddan = "", str = "";
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                str = par.FirstOrDefault().KetQua;
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().DuongDan2))
                                ddan = par.FirstOrDefault().DuongDan2;
                            rep2.hienthi(ddan);
                            rep2.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                            rep2.Loidan.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            string[] arrThongTinBNKB = { "", "", "", "", "" };
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep2.ChanDoan.Value = arrThongTinBNKB[1];
                            rep2.Buong.Value = arrThongTinBNKB[2];
                            rep2.Giuong.Value = arrThongTinBNKB[3];
                            rep2.Khoa.Value = arrThongTinBNKB[4];

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep2.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep2.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep2.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep2.NgayTT.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep2.Macb.Value = par.FirstOrDefault().MaCBth;
                        }
                        rep2.CreateDocument();
                        frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                        frm2.ShowDialog();
                    }
                    #endregion
                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")// || DungChung.Bien.MaBV != "01071"
                    {


                        if (dvucd.TenDV == "Nội soi thực quản - dạ dày - tá tràng không sinh thiết" || dvucd.TenDV == "Helicobacter pylori Ag test nhanh")
                        {
                            #region nội soi thực quản dạ dày, Helicobacter pylori Ag test nhanh
                            List<int> allMaDV = _Data.DichVus.Where(p => p.TenDV == "Nội soi thực quản - dạ dày - tá tràng không sinh thiết" || p.TenDV == "Helicobacter pylori Ag test nhanh").Select(p => p.MaDV).ToList();
                            DateTime tungay = new DateTime(dvucd.NgayThang.Value.Year, dvucd.NgayThang.Value.Month, dvucd.NgayThang.Value.Day);
                            DateTime denngay = DungChung.Ham.NgayDen(tungay);
                            var qcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn)
                                        join chidinh in _Data.ChiDinhs on cls.IdCLS equals chidinh.IdCLS
                                        join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                                        join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        join dv in _Data.DichVus.Where(p => allMaDV.Contains(p.MaDV)) on dvct.MaDV equals dv.MaDV
                                        select new
                                        {
                                            cls.ChanDoan,
                                            cls.MaICD,
                                            chidinh.IDCD,
                                            chidinh.Status,
                                            cls.MaCBth,// TenCBth = kq1 == null ? "" : kq1.TenCB,
                                            dv.MaQD,
                                            dvct.STT,
                                            dvct.TSBT,
                                            cls.NgayTH,
                                            clsct.KetQua,
                                            clsct.DuongDan,
                                            cls.NgayThang,
                                            cls.MaKP,
                                            cls.MaCB,
                                            chidinh.ChiDinh1,
                                            chidinh.KetLuan,
                                            TenDV = dv.TenDV,
                                            chidinh.LoiDan,
                                            clsct.DuongDan2,
                                            cls.CapCuu,
                                            cls.IdCLS
                                        }).Where(p => p.NgayThang >= tungay && p.NgayThang <= denngay).OrderBy(p => p.STT).ToList();
                            var qcls1 = (from a in qcls
                                         join cb in _Data.CanBoes on a.MaCB equals cb.MaCB
                                         join cbth in _Data.CanBoes on a.MaCBth equals cbth.MaCB into kq
                                         from kq1 in kq.DefaultIfEmpty()
                                         select new
                                         {
                                             a.DuongDan2,
                                             a.ChanDoan,
                                             a.MaICD,
                                             a.IDCD,
                                             a.Status,
                                             a.MaCBth,
                                             TenCBth = kq1 == null ? "" : kq1.TenCB,
                                             a.MaQD,
                                             a.STT,
                                             a.TSBT,
                                             a.NgayTH,
                                             a.KetQua,
                                             a.DuongDan,
                                             a.NgayThang,
                                             a.MaKP,
                                             a.MaCB,
                                             cb.TenCB,
                                             a.ChiDinh1,
                                             a.KetLuan,
                                             a.TenDV,
                                             a.LoiDan,
                                             a.CapCuu,
                                             a.IdCLS
                                         }).OrderBy(p => p.NgayThang).ToList();

                            BaoCao.Rep_PhieuNoiSoiThucQuan_01071 rep2 = new BaoCao.Rep_PhieuNoiSoiThucQuan_01071();
                            if (par.Count > 0 && qcls1.Count > 0)
                            {
                                rep2.txtmabn.Text = _mabn.ToString();
                                rep2.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                rep2.SoPhieu.Value = qcls1.FirstOrDefault().IdCLS; //_IDCLS;//Lấy _idcls nhỏ nhất
                                if (par.FirstOrDefault().NoiTru == 1)
                                {
                                    var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                    if (sovv != null)
                                        rep2.sovv.Text = "Số VV: " + sovv.ToString();
                                }
                                rep2.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                rep2.DiaChi.Value = par.FirstOrDefault().DChi;
                                rep2.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                rep2.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep2.Nu.Value = "/";
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep2.Nam.Value = "/";
                                }
                                //  rep2.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";// hiển thị danh sách


                                string str = "", loidan = "", ketluan = "";
                                var qnoisoithucquan = qcls1.Where(p => p.TenDV == "Nội soi thực quản - dạ dày - tá tràng không sinh thiết").ToList();
                                if (qnoisoithucquan.Count > 0 && !string.IsNullOrEmpty(qnoisoithucquan.FirstOrDefault().KetQua))
                                {
                                    str = qnoisoithucquan.FirstOrDefault().KetQua;// hiển thị danh sách
                                    rep2.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                    loidan = qnoisoithucquan.FirstOrDefault().LoiDan.Trim();
                                    ketluan = qnoisoithucquan.FirstOrDefault().KetLuan.Trim();
                                }
                                var qXNHP = qcls1.Where(p => p.TenDV == "Helicobacter pylori Ag test nhanh").ToList();
                                if (qXNHP.Count > 0 && !string.IsNullOrEmpty(qXNHP.FirstOrDefault().KetQua))
                                {
                                    str = qXNHP.FirstOrDefault().KetQua;
                                    rep2.hienthiKQ2(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                    if (loidan != "")
                                    {
                                        if (qXNHP.FirstOrDefault().LoiDan != "")
                                            loidan = loidan + "\n" + qXNHP.FirstOrDefault().LoiDan;
                                    }
                                    else
                                        loidan = qXNHP.FirstOrDefault().LoiDan;
                                    if (ketluan != "")
                                    {
                                        if (qXNHP.FirstOrDefault().KetLuan != "")
                                            ketluan = ketluan + "\n" + qXNHP.FirstOrDefault().KetLuan;
                                    }
                                    else
                                        ketluan = qXNHP.FirstOrDefault().KetLuan;
                                }

                                rep2.Loidan.Value = loidan;
                                rep2.KetLuan.Value = ketluan;// hiển thị danh sách
                                if (par.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                    rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                    rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                    rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                    rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                }
                                string[] arrThongTinBNKB = { "", "", "", "", "" };
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                rep2.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                                rep2.Buong.Value = arrThongTinBNKB[2];
                                rep2.Giuong.Value = arrThongTinBNKB[3];
                                rep2.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                rep2.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                rep2.Khoa.Value = arrThongTinBNKB[4];


                                if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                    rep2.NgayCD.Value = DungChung.Ham.NgaySangChu(qcls1.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                else
                                    rep2.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                if (par.FirstOrDefault().NgayTH != null)
                                    rep2.NgayTT.Value = DungChung.Ham.NgaySangChu(qcls1.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep2.NgayTT.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                rep2.Macb.Value = qcls1.FirstOrDefault().MaCBth;
                            }
                            rep2.CreateDocument();
                            frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                            frm2.ShowDialog();
                            #endregion
                        }
                        else
                        {
                            #region nội soi thường
                            BaoCao.Rep_PhieuNoiSoi_01071 rep2 = new BaoCao.Rep_PhieuNoiSoi_01071();
                            if (par.Count > 0)
                            {
                                rep2.txtmabn.Text = _mabn.ToString();
                                rep2.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                if (DungChung.Bien.MaBV == "27023")
                                    rep2.SoPhieu.Value = _so;
                                else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                {
                                    if (par.Count > 0)
                                    {
                                        int mabn = par.FirstOrDefault().MaBNhan;
                                        var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                        if (qvv != null)
                                            rep2.SoPhieu.Value = qvv.SoVV;
                                        else
                                            rep2.SoPhieu.Value = "";
                                    }
                                }
                                else
                                    rep2.SoPhieu.Value = _IDCLS;
                                if (par.FirstOrDefault().NoiTru == 1)
                                {
                                    var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                    if (sovv != null)
                                        rep2.sovv.Text = "Số VV: " + sovv.ToString();
                                }
                                rep2.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                rep2.DiaChi.Value = par.FirstOrDefault().DChi;
                                rep2.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                rep2.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep2.Nu.Value = "/";
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep2.Nam.Value = "/";
                                }
                                rep2.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                                rep2.KetLuan.Value = par.FirstOrDefault().KetLuan;
                                string str = "";
                                if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                    str = par.FirstOrDefault().KetQua;
                                rep2.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                rep2.Loidan.Value = par.FirstOrDefault().LoiDan;
                                if (par.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                    rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                    rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                    rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                    rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                }
                                string[] arrThongTinBNKB = { "", "", "", "", "" };
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                rep2.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                                rep2.Buong.Value = arrThongTinBNKB[2];
                                rep2.Giuong.Value = arrThongTinBNKB[3];
                                rep2.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                rep2.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                rep2.Khoa.Value = arrThongTinBNKB[4];


                                if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                    rep2.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                else
                                    rep2.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                if (par.FirstOrDefault().NgayTH != null)
                                    rep2.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep2.NgayTT.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                rep2.Macb.Value = par.FirstOrDefault().MaCBth;
                            }
                            rep2.CreateDocument();
                            frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                            frm2.ShowDialog();
                            #endregion
                        }


                    }
                    #endregion
                    #region 30372

                    if (DungChung.Bien.MaBV == "30372")
                    {

                        frm_SoLuongAnhIn frm = new frm_SoLuongAnhIn();
                        frm.ShowDialog();
                        int i1 = frm.SoLuongAnhin;
                        List<CDHA_30372> rep = new List<CDHA_30372>();
                        if (i1 > 0)
                        {
                            CDHA_30372 cdha = new CDHA_30372();
                            Dictionary<string, object> dicpar = new Dictionary<string, object>();
                            // tên cơ quan chủ quản   
                            int TimeFormat = Convert.ToInt32(_Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN).FirstOrDefault().FormatDate);
                            cdha.TenBV = DungChung.Bien.TenCQ;
                            cdha.Logo = DungChung.Ham.GetLogo();
                            cdha.MaBN = par.FirstOrDefault().MaBNhan;
                            string[] DuongDan = par.Where(p => p.IdCLS == _IDCLS).FirstOrDefault().DuongDan2.Split('|');

                            for (int i = 0; i < DuongDan.Length; i++)
                            {
                                switch (i)
                                {
                                    case 1:
                                        if (DuongDan[0] != null)
                                        {
                                            cdha.Anh1 = InPhieu.KiemTraTonTaiAnh(DuongDan[0].ToString());
                                        }
                                        break;
                                    case 2:
                                        if (DuongDan[1] != null)
                                        {
                                            cdha.Anh2 = InPhieu.KiemTraTonTaiAnh(DuongDan[1].ToString());
                                        }
                                        break;
                                    case 3:
                                        if (DuongDan[2] != null)
                                        {
                                            cdha.Anh3 = InPhieu.KiemTraTonTaiAnh(DuongDan[2].ToString());
                                        }
                                        break;
                                    case 4:
                                        if (DuongDan[3] != null)
                                        {
                                            cdha.Anh4 = InPhieu.KiemTraTonTaiAnh(DuongDan[3].ToString());
                                        }
                                        break;
                                    case 5:
                                        if (DuongDan[4] != null)
                                        {
                                            cdha.Anh5 = InPhieu.KiemTraTonTaiAnh(DuongDan[4].ToString());
                                        }
                                        break;
                                    case 6:
                                        if (DuongDan[5] != null)
                                        {
                                            cdha.Anh6 = InPhieu.KiemTraTonTaiAnh(DuongDan[5].ToString());
                                        }
                                        break;
                                    case 7:
                                        if (DuongDan[6] != null)
                                        {
                                            cdha.Anh7 = InPhieu.KiemTraTonTaiAnh(DuongDan[6].ToString());
                                        }
                                        break;
                                    case 8:
                                        if (DuongDan[7] != null)
                                        {
                                            cdha.Anh8 = InPhieu.KiemTraTonTaiAnh(DuongDan[7].ToString());
                                        }
                                        break;

                                    default:
                                        break;
                                }
                            }



                            cdha.DiaChiBenhVien = DungChung.Bien.DiaChi;
                            cdha.TieuDe = "PHIẾU NỘI SOI TIÊU HÓA";
                            cdha.SoDienThoaiLienHe = "SĐT: " + _Data.HTHONGs.FirstOrDefault().SDT + " - Fax: " + _Data.HTHONGs.FirstOrDefault().Fax + "";
                            cdha.YeuCau = par.FirstOrDefault().TenDV;
                            cdha.NgaySinh = par.FirstOrDefault().NgaySinh + " / " + par.FirstOrDefault().ThangSinh + " / " + par.FirstOrDefault().NamSinh;
                            cdha.TieuDeKetQua = "KẾT QUẢ NỘI SOI";
                            cdha.BSCD = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            cdha.NgayChiDinh = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.NgayTH = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayTH), TimeFormat);
                            cdha.Tuoi = par.FirstOrDefault().Tuoi;
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong != null)
                            {
                                cdha.Buong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong;
                            }
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong != null)
                            {
                                cdha.Giuong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong;
                            }

                            // Thông tin bệnh nhân
                            cdha.HoTen = par.FirstOrDefault().TenBNhan.ToUpper();
                            cdha.DiaChi = par.FirstOrDefault().DChi;
                            cdha.Khoa = par.FirstOrDefault().TenKP;
                            cdha.ChanDoan = par.FirstOrDefault().ChanDoan;
                            dicpar["SoLuongAnh"] = i1;
                            if (par.FirstOrDefault().GTinh != 1)
                            {
                                cdha.Nam = "/";
                                cdha.Nu = "";
                            }
                            else
                            {
                                cdha.Nu = "/";
                                cdha.Nam = "";
                            }
                            if (par.FirstOrDefault().SThe != "")
                            {
                                cdha.MA1 = par.FirstOrDefault().SThe.Substring(0, 3);
                                cdha.MA2 = par.FirstOrDefault().SThe.Substring(3, 2);
                                cdha.MA3 = par.FirstOrDefault().SThe.Substring(5, 2);
                                cdha.MA4 = par.FirstOrDefault().SThe.Substring(7, 3);
                                cdha.MA5 = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (ttbx.Count != 0)
                            {
                                cdha.Email = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email;
                                cdha.DienThoai = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai;
                            }

                            cdha.BacSyChiDinh = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            if (string.IsNullOrEmpty(par.FirstOrDefault().KetQua_Rtf))
                                cdha.KetQua = par.FirstOrDefault().KetQua;
                            else
                                cdha.KetQua = par.FirstOrDefault().KetQua_Rtf;
                            cdha.KetLuan = par.FirstOrDefault().KetLuan;
                            cdha.LoiDan = par.FirstOrDefault().LoiDan;
                            cdha.NgayThang = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.BSTH = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCBth).ToUpper();
                            rep.Add(cdha);
                            DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuCDHA_30372, rep.ToList(), dicpar, false);
                        }
                        else
                        {
                            MessageBox.Show("Xin hãy chọn số lượng ảnh cần in!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);

                        }
                    }


                    #endregion
                    #region Khác
                    else
                    {

                        BaoCao.Rep_PhieuNoiSoi Rep = new BaoCao.Rep_PhieuNoiSoi();
                        if (par.Count > 0)
                        {
                            if (DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "01071")
                            {
                                string kieudoc1 = "";
                                string kieudoc2 = "";
                                var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                            select new
                                            {
                                                ht.KieuDoc
                                            }).ToList();
                                kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                                kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                                if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[2] = false;
                                    DungChung.Bien._Visible_CDHA[0] = true;

                                }
                                if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = true;
                                    DungChung.Bien._Visible_CDHA[2] = false;

                                }
                                if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = true;
                                    DungChung.Bien._Visible_CDHA[2] = false;
                                }
                            }
                            Rep.txtmabn.Text = "Mã BN: " + _mabn.ToString();
                            Rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            if (DungChung.Bien.MaBV == "27023")
                                Rep.SoPhieu.Value = _so;

                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par.Count > 0)
                                {
                                    int mabn = par.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        Rep.SoPhieu.Value = qvv.SoVV;
                                    else
                                        Rep.SoPhieu.Value = "";
                                }
                            }
                            else
                                Rep.SoPhieu.Value = _IDCLS;
                            Rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            Rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            Rep.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            Rep.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                Rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                Rep.Nam.Value = "/";
                            }
                            Rep.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            Rep.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            string str = "";
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                str = par.FirstOrDefault().KetQua;
                            Rep.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                            Rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                Rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                Rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                Rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                Rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                Rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            string[] arrThongTinBNKB = { "", "", "", "", "" };
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            Rep.ChanDoan.Value = arrThongTinBNKB[1];
                            Rep.Buong.Value = arrThongTinBNKB[2];
                            Rep.Giuong.Value = arrThongTinBNKB[3];
                            Rep.xrLabel6.Text = Rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            Rep.xrLabel11.Text = Rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                            Rep.Khoa.Value = arrThongTinBNKB[4];


                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                Rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                Rep.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                Rep.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                Rep.NgayTT.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            Rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            if (DungChung.Bien.MaBV == "30010")
                            {
                                var maKPth = par.FirstOrDefault().MaKPth.Value;
                                Rep.KPTH.Value = _Data.KPhongs.FirstOrDefault(p => p.MaKP == maKPth).TenKP;
                            }
                        }

                        Rep.CreateDocument();
                        frm2.prcIN.PrintingSystem = Rep.PrintingSystem;

                        frm2.ShowDialog();
                    }


                    break;
                #endregion
                #endregion
                #region thủ thuật
                case "Thủ thuật":
                    frmIn frm21 = new frmIn();
                    BaoCao.Rep_PhieuNoiSoi rep21 = new BaoCao.Rep_PhieuNoiSoi();
                    if (par.Count > 0)
                    {

                        rep21.txtmabn.Text = _mabn.ToString();
                        rep21.TenBN.Value = (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789") ? par.FirstOrDefault().TenBNhan.ToUpper() : par.FirstOrDefault().TenBNhan;
                        if (DungChung.Bien.MaBV == "27023")
                            rep21.SoPhieu.Value = _so;
                        else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                        {
                            if (par.Count > 0)
                            {
                                int mabn = par.FirstOrDefault().MaBNhan;
                                var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                if (qvv != null)
                                    rep21.SoPhieu.Value = qvv.SoVV;
                                else
                                    rep21.SoPhieu.Value = "";
                            }
                        }
                        else
                            rep21.SoPhieu.Value = _IDCLS;
                        rep21.xrLabel6.Text = rep21.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                        rep21.xrLabel11.Text = rep21.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        rep21.MaCBDT.Value = par.FirstOrDefault().MaCB;
                        rep21.DiaChi.Value = par.FirstOrDefault().DChi;
                        rep21.TuoiBN.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.CalculateAge(par.FirstOrDefault().NgaySinh, par.FirstOrDefault().ThangSinh, par.FirstOrDefault().NamSinh, " tháng.") : DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                        rep21.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                        int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                        if (gioiTinh == 1)
                        {
                            rep21.Nu.Value = "/";
                        }
                        else if (gioiTinh == 0)
                        {
                            rep21.Nam.Value = "/";
                        }
                        if (DungChung.Bien.MaBV == "01830" || DungChung.Bien.MaBV == "30005")
                        {
                            rep21.lab1.Text = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                            rep21.lblHenGhiNoiSoi.Visible = false;
                            rep21.xrLabel45.Visible = false;
                        }
                        rep21.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                        rep21.KetLuan.Value = par.FirstOrDefault().KetLuan;
                        string str = "";
                        //if (DungChung.Bien.MaBV == "30372")
                        //{
                        //if (string.IsNullOrEmpty(par.FirstOrDefault().KetQua_Rtf))
                        //str = par.FirstOrDefault().KetQua;
                        //else
                        //str = par.FirstOrDefault().KetQua_Rtf;
                        //}
                        //else
                        str = par.FirstOrDefault().KetQua;

                        rep21.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                        rep21.Loidan.Value = par.FirstOrDefault().LoiDan;
                        if (par.FirstOrDefault().SThe.Length >= 15)
                        {
                            rep21.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                            rep21.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                            rep21.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                            rep21.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                            rep21.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                        }
                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                        if (DungChung.Bien.MaBV == "14018")
                        {
                            rep21.ChanDoan.Value = DungChung.Ham.GetChanDoanKB(_Data, _mabn);
                        }
                        else if (par.FirstOrDefault().IsDongY == true && DungChung.Bien.MaBV == "24297")
                        {
                            rep21.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_24297(_Data, _mabn);
                        }
                        else
                        {
                            rep21.ChanDoan.Value = arrThongTinBNKB[0] != null || arrThongTinBNKB[0] != "" ? arrThongTinBNKB[0] + ";" : "";
                            rep21.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                        }

                        rep21.Buong.Value = arrThongTinBNKB[2];
                        rep21.Giuong.Value = arrThongTinBNKB[3];

                        rep21.Khoa.Value = arrThongTinBNKB[4];

                        if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                            rep21.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                        else
                            rep21.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                        if (par.FirstOrDefault().NgayTH != null)
                            rep21.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                        else
                            rep21.NgayTT.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                        rep21.Macb.Value = par.FirstOrDefault().MaCBth;

                    }

                    if (DungChung.Bien.MaBV == "30010") //Yenbg1
                    {
                        int KPTH = Convert.ToInt32(par.Select(p => p.MaKPth).FirstOrDefault().ToString());
                        rep21.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == KPTH).Select(p => p.TenKP).FirstOrDefault().ToString();
                    }
                    rep21.CreateDocument();
                    frm21.prcIN.PrintingSystem = rep21.PrintingSystem;
                    frm21.ShowDialog();
                    break;
                #endregion
                #region siêu âm doppler
                case "Siêu âm ( Doppler )":
                    if (DungChung.Bien.MaBV == "27023")
                    {
                        CLS.InPhieu.InPhieuSieuAmDopplerTim(_IDCLS);
                        break;
                    }
                    else
                    {
                        int _IDCD = 0;
                        int _IDCLS1 = 0;
                        if (par.Count > 0)
                            _IDCD = par.FirstOrDefault().IDCD;
                        if (par1.Count > 0)
                            _IDCLS1 = par1.FirstOrDefault().IdCLS;
                        CLS.InPhieu.InLuuHuyetNao1(_Data, _IDCD, _IDCLS1, 2);
                        break;
                    }
                #endregion
                #region lưu huyết não
                case "Lưu huyết não":
                    int _IDCD2 = 0;
                    if (par.Count > 0)
                        _IDCD2 = par.FirstOrDefault().IDCD;
                    if (DungChung.Bien.MaBV == "30009")
                    {
                        CLS.InPhieu.InLuuHuyetNao_30009(_IDCD2);
                    }
                    else
                        CLS.InPhieu.InLuuHuyetNao(_Data, _IDCD2, _tieunhom, 0);
                    break;
                #endregion
                #region đo mật độ xương
                case "Đo mật độ xương":
                    int _IDCD3 = 0;
                    string tieunhom = _tieunhom;
                    if (par.Count > 0)
                        _IDCD3 = par.FirstOrDefault().IDCD;
                    if (DungChung.Bien.MaBV == "30009")
                        CLS.InPhieu.InPhieuThamDoChucNang(_IDCD3, 1, DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.DoMatDoXuong);
                    else if (DungChung.Bien.MaBV == "30010")
                    {
                        CLS.InPhieu.InLuuHuyetNao30010(_Data, _IDCD3, tieunhom, 1);
                    }
                    else
                        CLS.InPhieu.InLuuHuyetNao(_Data, _IDCD3, _tieunhom, 1);
                    break;
                #endregion
                #region thăm dò chức năng
                case "Thăm dò chức năng":
                    int _IDCD4 = 0;
                    if (par.Count > 0)
                        _IDCD4 = par.FirstOrDefault().IDCD;
                    CLS.InPhieu.InPhieuThamDoChucNang(_IDCD4, 1, DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.DoMatDoXuong);
                    break;
                #endregion
                #region thăm dò chức năng
                case "Đo khúc xạ máy":
                    int _IDCD44 = 0;
                    if (par.Count > 0)
                        _IDCD44 = par.FirstOrDefault().IDCD;
                    CLS.InPhieu.InPhieuThamDoChucNang(_IDCD44, 3, DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.DoKhucXaMay);
                    break;
                #endregion
                #region Nội Soi Dạ Dày
                #region 30372
                case "Nội soi Dạ Dày":
                    if (DungChung.Bien.MaBV == "30372")
                    {
                        frm_SoLuongAnhIn frm = new frm_SoLuongAnhIn();
                        frm.ShowDialog();
                        int i1 = frm.SoLuongAnhin;
                        List<CDHA_30372> rep = new List<CDHA_30372>();
                        if (i1 > 0)
                        {
                            CDHA_30372 cdha = new CDHA_30372();
                            Dictionary<string, object> dicpar = new Dictionary<string, object>();
                            // tên cơ quan chủ quản   
                            int TimeFormat = Convert.ToInt32(_Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN).FirstOrDefault().FormatDate);
                            cdha.TenBV = DungChung.Bien.TenCQ;
                            cdha.Logo = DungChung.Ham.GetLogo();
                            cdha.MaBN = par.FirstOrDefault().MaBNhan;
                            // Chua in phieu
                            string[] DuongDan = par.Where(p => p.IdCLS == _IDCLS).FirstOrDefault().DuongDan2.Split('|');

                            for (int i = 0; i < DuongDan.Length; i++)
                            {
                                switch (i)
                                {
                                    case 1:
                                        if (DuongDan[0] != null)
                                        {
                                            cdha.Anh1 = InPhieu.KiemTraTonTaiAnh(DuongDan[0].ToString());
                                        }
                                        break;
                                    case 2:
                                        if (DuongDan[1] != null)
                                        {
                                            cdha.Anh2 = InPhieu.KiemTraTonTaiAnh(DuongDan[1].ToString());
                                        }
                                        break;
                                    case 3:
                                        if (DuongDan[2] != null)
                                        {
                                            cdha.Anh3 = InPhieu.KiemTraTonTaiAnh(DuongDan[2].ToString());
                                        }
                                        break;
                                    case 4:
                                        if (DuongDan[3] != null)
                                        {
                                            cdha.Anh4 = InPhieu.KiemTraTonTaiAnh(DuongDan[3].ToString());
                                        }
                                        break;
                                    case 5:
                                        if (DuongDan[4] != null)
                                        {
                                            cdha.Anh5 = InPhieu.KiemTraTonTaiAnh(DuongDan[4].ToString());
                                        }
                                        break;
                                    case 6:
                                        if (DuongDan[5] != null)
                                        {
                                            cdha.Anh6 = InPhieu.KiemTraTonTaiAnh(DuongDan[5].ToString());
                                        }
                                        break;
                                    case 7:
                                        if (DuongDan[6] != null)
                                        {
                                            cdha.Anh7 = InPhieu.KiemTraTonTaiAnh(DuongDan[6].ToString());
                                        }
                                        break;
                                    case 8:
                                        if (DuongDan[7] != null)
                                        {
                                            cdha.Anh8 = InPhieu.KiemTraTonTaiAnh(DuongDan[7].ToString());
                                        }
                                        break;

                                    default:
                                        break;
                                }
                            }



                            cdha.DiaChiBenhVien = DungChung.Bien.DiaChi;
                            if (Frm_CDHA_Moi._indexPhieu == 6 || Frm_CDHA_Moi._indexPhieu == 15)
                            { cdha.TieuDe = "PHIẾU NỘI SOI ĐẠI TRỰC TRÀNG"; }
                            else { cdha.TieuDe = "PHIẾU NỘI SOI DẠ DÀY"; }
                            cdha.SoDienThoaiLienHe = "SĐT: " + _Data.HTHONGs.FirstOrDefault().SDT + " - Fax: " + _Data.HTHONGs.FirstOrDefault().Fax + "";
                            cdha.YeuCau = par.FirstOrDefault().TenDV;
                            cdha.NgaySinh = par.FirstOrDefault().NgaySinh + " / " + par.FirstOrDefault().ThangSinh + " / " + par.FirstOrDefault().NamSinh;
                            cdha.TieuDeKetQua = "KẾT QUẢ NỘI SOI";
                            cdha.BSCD = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            cdha.NgayChiDinh = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.NgayTH = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayTH), TimeFormat);
                            cdha.Tuoi = par.FirstOrDefault().Tuoi;
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong != null)
                            {
                                cdha.Buong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong;
                            }
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong != null)
                            {
                                cdha.Giuong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong;
                            }

                            // Thông tin bệnh nhân
                            cdha.HoTen = par.FirstOrDefault().TenBNhan.ToUpper();
                            cdha.DiaChi = par.FirstOrDefault().DChi;
                            cdha.Khoa = par.FirstOrDefault().TenKP;
                            cdha.ChanDoan = par.FirstOrDefault().ChanDoan;
                            dicpar["SoLuongAnh"] = i1;
                            if (par.FirstOrDefault().GTinh != 1)
                            {
                                cdha.Nam = "/";
                                cdha.Nu = "";
                            }
                            else
                            {
                                cdha.Nu = "/";
                                cdha.Nam = "";
                            }
                            if (par.FirstOrDefault().SThe != "")
                            {
                                cdha.MA1 = par.FirstOrDefault().SThe.Substring(0, 3);
                                cdha.MA2 = par.FirstOrDefault().SThe.Substring(3, 2);
                                cdha.MA3 = par.FirstOrDefault().SThe.Substring(5, 2);
                                cdha.MA4 = par.FirstOrDefault().SThe.Substring(7, 3);
                                cdha.MA5 = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (ttbx.Count != 0)
                            {
                                cdha.Email = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email;
                                cdha.DienThoai = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai;
                            }

                            cdha.BacSyChiDinh = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            if (par.FirstOrDefault().KetQua_Rtf == null)
                                cdha.KetQua = par.FirstOrDefault().KetQua;
                            else
                                cdha.KetQua = par.FirstOrDefault().KetQua_Rtf;
                            cdha.KetLuan = par.FirstOrDefault().KetLuan;
                            cdha.LoiDan = par.FirstOrDefault().LoiDan;
                            cdha.NgayThang = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.BSTH = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCBth).ToUpper();
                            rep.Add(cdha);
                            DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuCDHA_30372, rep.ToList(), dicpar, false);
                        }
                        else
                        {
                            MessageBox.Show("Xin hãy chọn số lượng ảnh cần in!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);

                        }
                    }
                    break;

                #endregion
                #endregion
                #region điện não đồ
                case "Điện não đồ":
                    int _IDCD5 = 0;
                    if (par.Count > 0)
                    {
                        _IDCD5 = par.FirstOrDefault().IDCD;

                    }

                    CLS.InPhieu.InDienNaoDo(_Data, _IDCD5, _tieunhom, _mabn, _IDCLS, 3);
                    break;
                #endregion
                #region Nội soi cổ tử cung
                case "Nội soi Cổ Tử Cung":
                    if (DungChung.Bien.MaBV == "30372")
                    {
                        frm_SoLuongAnhIn frm = new frm_SoLuongAnhIn();
                        frm.ShowDialog();
                        int i1 = frm.SoLuongAnhin;
                        List<CDHA_30372> rep = new List<CDHA_30372>();
                        if (i1 > 0)
                        {
                            CDHA_30372 cdha = new CDHA_30372();
                            Dictionary<string, object> dicpar = new Dictionary<string, object>();
                            // tên cơ quan chủ quản   
                            int TimeFormat = Convert.ToInt32(_Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN).FirstOrDefault().FormatDate);
                            cdha.TenBV = DungChung.Bien.TenCQ;
                            cdha.Logo = DungChung.Ham.GetLogo();
                            cdha.MaBN = par.FirstOrDefault().MaBNhan;
                            string[] DuongDan = par.Where(p => p.IdCLS == _IDCLS).FirstOrDefault().DuongDan2.Split('|');

                            for (int i = 0; i < DuongDan.Length; i++)
                            {
                                switch (i)
                                {
                                    case 1:
                                        if (DuongDan[0] != null)
                                        {
                                            cdha.Anh1 = InPhieu.KiemTraTonTaiAnh(DuongDan[0].ToString());
                                        }
                                        break;
                                    case 2:
                                        if (DuongDan[1] != null)
                                        {
                                            cdha.Anh2 = InPhieu.KiemTraTonTaiAnh(DuongDan[1].ToString());
                                        }
                                        break;
                                    case 3:
                                        if (DuongDan[2] != null)
                                        {
                                            cdha.Anh3 = InPhieu.KiemTraTonTaiAnh(DuongDan[2].ToString());
                                        }
                                        break;
                                    case 4:
                                        if (DuongDan[3] != null)
                                        {
                                            cdha.Anh4 = InPhieu.KiemTraTonTaiAnh(DuongDan[3].ToString());
                                        }
                                        break;
                                    case 5:
                                        if (DuongDan[4] != null)
                                        {
                                            cdha.Anh5 = InPhieu.KiemTraTonTaiAnh(DuongDan[4].ToString());
                                        }
                                        break;
                                    case 6:
                                        if (DuongDan[5] != null)
                                        {
                                            cdha.Anh6 = InPhieu.KiemTraTonTaiAnh(DuongDan[5].ToString());
                                        }
                                        break;
                                    case 7:
                                        if (DuongDan[6] != null)
                                        {
                                            cdha.Anh7 = InPhieu.KiemTraTonTaiAnh(DuongDan[6].ToString());
                                        }
                                        break;
                                    case 8:
                                        if (DuongDan[7] != null)
                                        {
                                            cdha.Anh8 = InPhieu.KiemTraTonTaiAnh(DuongDan[7].ToString());
                                        }
                                        break;

                                    default:
                                        break;
                                }
                            }



                            cdha.DiaChiBenhVien = DungChung.Bien.DiaChi;
                            cdha.TieuDe = "PHIẾU NỘI SOI CỔ TỬ CUNG";
                            cdha.SoDienThoaiLienHe = "SĐT: " + _Data.HTHONGs.FirstOrDefault().SDT + " - Fax: " + _Data.HTHONGs.FirstOrDefault().Fax + "";
                            cdha.YeuCau = par.FirstOrDefault().TenDV;
                            cdha.NgaySinh = par.FirstOrDefault().NgaySinh + " / " + par.FirstOrDefault().ThangSinh + " / " + par.FirstOrDefault().NamSinh;
                            cdha.TieuDeKetQua = "KẾT QUẢ NỘI SOI";
                            cdha.BSCD = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            cdha.NgayChiDinh = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.NgayTH = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayTH), TimeFormat);
                            cdha.Tuoi = par.FirstOrDefault().Tuoi;
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong != null)
                            {
                                cdha.Buong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong;
                            }
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong != null)
                            {
                                cdha.Giuong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong;
                            }

                            // Thông tin bệnh nhân
                            cdha.HoTen = par.FirstOrDefault().TenBNhan.ToUpper();
                            cdha.DiaChi = par.FirstOrDefault().DChi;
                            cdha.Khoa = par.FirstOrDefault().TenKP;
                            cdha.ChanDoan = par.FirstOrDefault().ChanDoan;
                            dicpar["SoLuongAnh"] = i1;
                            if (par.FirstOrDefault().GTinh != 1)
                            {
                                cdha.Nam = "/";
                                cdha.Nu = "";
                            }
                            else
                            {
                                cdha.Nu = "/";
                                cdha.Nam = "";
                            }
                            if (par.FirstOrDefault().SThe != "")
                            {
                                cdha.MA1 = par.FirstOrDefault().SThe.Substring(0, 3);
                                cdha.MA2 = par.FirstOrDefault().SThe.Substring(3, 2);
                                cdha.MA3 = par.FirstOrDefault().SThe.Substring(5, 2);
                                cdha.MA4 = par.FirstOrDefault().SThe.Substring(7, 3);
                                cdha.MA5 = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (ttbx.Count != 0)
                            {
                                cdha.Email = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email;
                                cdha.DienThoai = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai;
                            }

                            cdha.BacSyChiDinh = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            if (par.FirstOrDefault().KetQua_Rtf == null)
                                cdha.KetQua = par.FirstOrDefault().KetQua;
                            else
                                cdha.KetQua = par.FirstOrDefault().KetQua_Rtf;

                            cdha.KetLuan = par.FirstOrDefault().KetLuan;
                            cdha.LoiDan = par.FirstOrDefault().LoiDan;
                            cdha.NgayThang = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.BSTH = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCBth).ToUpper();
                            rep.Add(cdha);
                            DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuCDHA_30372, rep.ToList(), dicpar, false);
                        }
                        else
                        {
                            MessageBox.Show("Xin hãy chọn số lượng ảnh cần in!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);

                        }
                    }

                    break;
                #endregion
                #region Nội soi tai mũi họng
                case "Nội soi Tai-Mũi-Họng":
                    if (DungChung.Bien.MaBV == "24012" || DungChung.Bien.MaBV == "27777")
                    {
                        int _mkp4 = 0;
                        frmIn frm4 = new frmIn();
                        BaoCao.Rep_PhieuNoiSoiTMH rep4 = new BaoCao.Rep_PhieuNoiSoiTMH();
                        if (par.Count > 0)
                        {
                            _mkp4 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            rep4.paramHoTen.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            rep4.paramDiaChi.Value = par.FirstOrDefault().DChi;
                            if (DungChung.Bien.MaBV == "27023")
                                rep4.IDCLS.Value = _so;
                            else
                                rep4.IDCLS.Value = _IDCLS;
                            if (DungChung.Bien.MaBV == "24012")
                            {
                                rep4.SubBand1.Visible = false;
                                rep4.SubBand2.Visible = false;
                                rep4.SubBand3.Visible = false;
                                rep4.SubBand4.Visible = false;
                                rep4.SubBand5.Visible = false;
                                rep4.SubBand6.Visible = false;
                                rep4.SubBand9.Visible = true;
                                rep4.SubBand7.Visible = true;
                                rep4.SubBand8.Visible = true;

                            }
                            rep4.xrTableCell60.Text = "BÁC SĨ CHỈ ĐỊNH";
                            rep4.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep4.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                            rep4.paramGioiTinh.Value = par.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                            rep4.paramSThe.Value = par.FirstOrDefault().SThe;
                            rep4.paramDoiTuong.Value = par.FirstOrDefault().DTuong;
                            rep4.paramTuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep4.paramKetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep4.paraLoiDan.Value = par.FirstOrDefault().LoiDan;
                            rep4.paramPhieuSo.Value = par.FirstOrDefault().IdCLS;
                            if (par.FirstOrDefault().NgayThang != null)
                            {
                                rep4.paramNgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            }
                            else
                                rep4.paramNgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep4.paramNgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep4.paramNgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            int _makpth = 0;
                            if (par.FirstOrDefault().MaKPth != null)
                            {
                                _makpth = par.FirstOrDefault().MaKPth.Value;

                            }
                            var kp = _Data.KPhongs.Where(p => p.MaKP == _makpth).ToList();
                            if (kp.Count > 0)
                                rep4.paramPhongKham.Value = kp.FirstOrDefault().TenKP.ToUpper();
                            string a = "", b = ""; ; a = par0.FirstOrDefault().MaCB;
                            b = par.FirstOrDefault().MaCBth;

                            if (!string.IsNullOrEmpty(a))
                                rep4.paramCanBoDT.Value = DungChung.Ham._getTenCB(_Data, a).ToUpper();
                            if (!string.IsNullOrEmpty(b))
                                rep4.BSTH.Value = DungChung.Ham._getTenCB(_Data, b).ToUpper();
                            string ddan = "", ketqua = "";
                            if (par.FirstOrDefault().DuongDan2 != null)
                                ddan = par.FirstOrDefault().DuongDan2;
                            if (DungChung.Bien.MaBV == "30372")
                            {
                                if (par.FirstOrDefault().KetQua_Rtf == null)
                                    ketqua = par.FirstOrDefault().KetQua;
                                else
                                    ketqua = par.FirstOrDefault().KetQua_Rtf;
                            }
                            else
                                ketqua = par.FirstOrDefault().KetQua;
                            rep4.hienthi(ketqua, ddan);
                        }
                        var kb4 = (from kb2 in _Data.BNKBs.Where(p => p.MaBNhan == _mabn).Where(p => p.MaKP == _mkp4) select new { kb2.IDKB, kb2.ChanDoan, kb2.BenhKhac }).OrderByDescending(p => p.IDKB).ToList();
                        if (kb4.Count > 0)
                            rep4.paramChanDoan.Value = kb4.FirstOrDefault().ChanDoan + "/" + kb4.FirstOrDefault().BenhKhac;

                        rep4.CreateDocument();
                        frm4.prcIN.PrintingSystem = rep4.PrintingSystem;
                        frm4.ShowDialog();
                    }
                    else if (DungChung.Bien.MaBV == "30372")
                    {

                        frm_SoLuongAnhIn frm = new frm_SoLuongAnhIn();
                        frm.ShowDialog();
                        int i1 = frm.SoLuongAnhin;
                        List<CDHA_30372> rep = new List<CDHA_30372>();
                        if (i1 > 0)
                        {
                            CDHA_30372 cdha = new CDHA_30372();
                            Dictionary<string, object> dicpar = new Dictionary<string, object>();
                            // tên cơ quan chủ quản   
                            int TimeFormat = Convert.ToInt32(_Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN).FirstOrDefault().FormatDate);
                            cdha.TenBV = DungChung.Bien.TenCQ;
                            cdha.Logo = DungChung.Ham.GetLogo();
                            cdha.MaBN = par.FirstOrDefault().MaBNhan;
                            string[] DuongDan = par.Where(p => p.IdCLS == _IDCLS).FirstOrDefault().DuongDan2.Split('|');

                            for (int i = 0; i < DuongDan.Length; i++)
                            {
                                switch (i)
                                {
                                    case 1:
                                        if (DuongDan[0] != null)
                                        {
                                            cdha.Anh1 = InPhieu.KiemTraTonTaiAnh(DuongDan[0].ToString());
                                        }
                                        break;
                                    case 2:
                                        if (DuongDan[1] != null)
                                        {
                                            cdha.Anh2 = InPhieu.KiemTraTonTaiAnh(DuongDan[1].ToString());
                                        }
                                        break;
                                    case 3:
                                        if (DuongDan[2] != null)
                                        {
                                            cdha.Anh3 = InPhieu.KiemTraTonTaiAnh(DuongDan[2].ToString());
                                        }
                                        break;
                                    case 4:
                                        if (DuongDan[3] != null)
                                        {
                                            cdha.Anh4 = InPhieu.KiemTraTonTaiAnh(DuongDan[3].ToString());
                                        }
                                        break;
                                    case 5:
                                        if (DuongDan[4] != null)
                                        {
                                            cdha.Anh5 = InPhieu.KiemTraTonTaiAnh(DuongDan[4].ToString());
                                        }
                                        break;
                                    case 6:
                                        if (DuongDan[5] != null)
                                        {
                                            cdha.Anh6 = InPhieu.KiemTraTonTaiAnh(DuongDan[5].ToString());
                                        }
                                        break;
                                    case 7:
                                        if (DuongDan[6] != null)
                                        {
                                            cdha.Anh7 = InPhieu.KiemTraTonTaiAnh(DuongDan[6].ToString());
                                        }
                                        break;
                                    case 8:
                                        if (DuongDan[7] != null)
                                        {
                                            cdha.Anh8 = InPhieu.KiemTraTonTaiAnh(DuongDan[7].ToString());
                                        }
                                        break;

                                    default:
                                        break;
                                }
                            }
                            cdha.DiaChiBenhVien = DungChung.Bien.DiaChi;
                            cdha.TieuDe = "PHIẾU NỘI SOI - TAI - MŨI - HỌNG";
                            cdha.SoDienThoaiLienHe = "SĐT: " + _Data.HTHONGs.FirstOrDefault().SDT + " - Fax: " + _Data.HTHONGs.FirstOrDefault().Fax + "";
                            cdha.YeuCau = par.FirstOrDefault().TenDV;
                            cdha.NgaySinh = par.FirstOrDefault().NgaySinh + " / " + par.FirstOrDefault().ThangSinh + " / " + par.FirstOrDefault().NamSinh;
                            cdha.TieuDeKetQua = "KẾT QUẢ NỘI SOI";
                            cdha.BSCD = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            cdha.NgayChiDinh = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.NgayTH = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayTH), TimeFormat);
                            cdha.Tuoi = par.FirstOrDefault().Tuoi;
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong != null)
                            {
                                cdha.Buong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong;
                            }
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong != null)
                            {
                                cdha.Giuong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong;
                            }

                            // Thông tin bệnh nhân
                            cdha.HoTen = par.FirstOrDefault().TenBNhan.ToUpper();
                            cdha.DiaChi = par.FirstOrDefault().DChi;
                            cdha.Khoa = par.FirstOrDefault().TenKP;
                            cdha.ChanDoan = par.FirstOrDefault().ChanDoan;
                            dicpar["SoLuongAnh"] = i1;
                            if (par.FirstOrDefault().GTinh != 1)
                            {
                                cdha.Nam = "/";
                                cdha.Nu = "";
                            }
                            else
                            {
                                cdha.Nu = "/";
                                cdha.Nam = "";
                            }
                            if (par.FirstOrDefault().SThe != "")
                            {
                                cdha.MA1 = par.FirstOrDefault().SThe.Substring(0, 3);
                                cdha.MA2 = par.FirstOrDefault().SThe.Substring(3, 2);
                                cdha.MA3 = par.FirstOrDefault().SThe.Substring(5, 2);
                                cdha.MA4 = par.FirstOrDefault().SThe.Substring(7, 3);
                                cdha.MA5 = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (ttbx.Count != 0)
                            {
                                cdha.Email = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email;
                                cdha.DienThoai = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai;
                            }

                            cdha.BacSyChiDinh = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            if (par.FirstOrDefault().KetQua_Rtf == null)
                                cdha.KetQua = par.FirstOrDefault().KetQua;
                            else
                                cdha.KetQua = par.FirstOrDefault().KetQua_Rtf;
                            cdha.KetLuan = par.FirstOrDefault().KetLuan;
                            cdha.LoiDan = par.FirstOrDefault().LoiDan;
                            cdha.NgayThang = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.BSTH = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCBth).ToUpper();
                            rep.Add(cdha);
                            DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuCDHA_30372, rep.ToList(), dicpar, false);
                        }
                        else
                        {
                            MessageBox.Show("Xin hãy chọn số lượng ảnh cần in!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);

                        }
                    }
                    break;
                    #endregion

            }
        }
        public static void _inPhieu_CDHA_01071_01049(QLBV_Database.QLBVEntities _Data, string _tieunhom, int _mabn, int _IDCLS, int IDCD, bool Mode, int _mkp = 0)
        {
            int _idcd = 0;// phòng siêu âm bệnh viện 12121 in theo ID chỉ định
            int v1 = 0;
            if (_tieunhom == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.X_QuangKTS)//Đoài yc 10092018
            {
                _tieunhom = DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.X_Quang;
                v1 = 1;
            }
            var clsa = _Data.CLS.Where(p => _idcd > 0 ? true : p.IdCLS == _IDCLS).FirstOrDefault();
            DateTime Ngaycd = DateTime.Now;

            if (clsa != null)
            {
                Ngaycd = clsa.NgayThang.Value;
            }

            var par0 = (from bn in _Data.BenhNhans.Where(o => o.MaBNhan == _mabn)
                        join cls in _Data.CLS.Where(p => (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "24009") ? p.NgayThang == Ngaycd : (_idcd > 0 ? true : p.IdCLS == _IDCLS)) on bn.MaBNhan equals cls.MaBNhan
                        join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                        join chidinh in _Data.ChiDinhs.Where(p => _idcd > 0 ? p.IDCD == _idcd : true) on cls.IdCLS equals chidinh.IdCLS
                        join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                        join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                        join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                        select new
                        {
                            kp.IsDongY,
                            kp.TenKP,
                            cls.IdCLS,
                            cls.ChanDoan,
                            cls.ChanDoanYHCT,
                            cls.MaICD,
                            chidinh.IDCD,
                            chidinh.Status,
                            cls.MaCBth,// TenCBth = kq1 == null ? "" : kq1.TenCB,
                            dv.MaQD,
                            dv.TenRG,
                            dvct.STT_F,
                            dvct.STT,
                            dvct.TSBT,
                            cls.NgayTH,
                            clsct.KetQua,
                            clsct.DuongDan,
                            cls.NgayThang,
                            bn.DTuong,
                            bn.MaBNhan,
                            bn.TenBNhan,
                            bn.DChi,
                            bn.GTinh,
                            bn.NoiTru,
                            bn.Tuoi,
                            bn.SThe,
                            cls.MaCB,
                            chidinh.ChiDinh1,
                            chidinh.KetLuan,
                            TenDV = DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "24012" ? dv.TenRG : dv.TenDV,
                            chidinh.LoiDan,
                            clsct.DuongDan2,
                            cls.CapCuu,
                            clsct.KQDuKien,
                            clsct.KQTyLe,
                            clsct.KetQua_Rtf,
                            MaKP = cls.MaKP,
                            MaKPth = cls.MaKPth,
                            bn.NgaySinh,
                            bn.ThangSinh,
                            bn.NamSinh,
                            bn.HanBHDen,
                            bn.HanBHTu,
                            dv.IdTieuNhom,
                            dv.MaDV
                        }).Where(p => p.IdCLS == _IDCLS).OrderBy(p => p.STT_F).ToList();
            var par1 = (from cls in _Data.CLS.Where(p => p.IdCLS == _IDCLS)
                        join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                        join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                        select new
                        {
                            dv.MaDV,
                            dv.TenDV,
                            cls.IdCLS
                        }).ToList();
            var par = (from a in par0
                       join cb in _Data.CanBoes on a.MaCB equals cb.MaCB
                       join cbth in _Data.CanBoes on a.MaCBth equals cbth.MaCB into kq
                       join kpTH in _Data.KPhongs on a.MaKPth equals kpTH.MaKP
                       from kq1 in kq.DefaultIfEmpty()
                       select new
                       {
                           a.IsDongY,
                           a.IdCLS,
                           a.NoiTru,
                           a.DuongDan2,
                           a.ChanDoan,
                           a.MaICD,
                           a.IDCD,
                           a.Status,
                           a.MaCBth,
                           TenCBth = kq1 == null ? "" : kq1.TenCB,
                           a.MaQD,
                           a.STT,
                           a.TSBT,
                           a.NgayTH,
                           a.KetQua,
                           a.DuongDan,
                           a.NgayThang,
                           a.MaBNhan,
                           a.TenBNhan,
                           a.DChi,
                           a.GTinh,
                           a.Tuoi,
                           a.SThe,
                           a.MaCB,
                           a.DTuong,
                           cb.TenCB,
                           cb.ChucVu,
                           a.ChiDinh1,
                           a.KetLuan,
                           a.TenDV,
                           a.LoiDan,
                           a.CapCuu,
                           a.TenRG,
                           a.KQDuKien,
                           a.KQTyLe,
                           a.ChanDoanYHCT,
                           a.MaKP,
                           a.TenKP,
                           a.MaKPth,
                           a.NgaySinh,
                           a.ThangSinh,
                           a.NamSinh,
                           a.HanBHDen,
                           a.HanBHTu,
                           a.KetQua_Rtf
                           //tn.TenTN
                       }).ToList();


            var getKPTH = (from a in _Data.CLS.Where(p => p.MaBNhan == _mabn)
                           join b in _Data.KPhongs on a.MaKPth equals b.MaKP
                           select new { b.TenKP });
            var ttbx = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).ToList();

            int _makp = 0;

            var dvucd = par0.FirstOrDefault();

            switch (_tieunhom)
            {
                #region  "Chức năng hô hấp":
                case "Chức năng hô hấp":
                    frmIn frmHH = new frmIn();
                    BaoCao.Rep_PhieuDoHoHap repHH = new BaoCao.Rep_PhieuDoHoHap();
                    if (par.Count > 0)
                    {
                        repHH.TenBN.Value = (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789") ? par.FirstOrDefault().TenBNhan.ToUpper() : par.FirstOrDefault().TenBNhan;
                        repHH.So.Value = _IDCLS;
                        repHH.SoThe.Value = par.FirstOrDefault().SThe;
                        repHH.BSDT.Value = par.FirstOrDefault().MaCB;
                        repHH.BSCK.Value = par.FirstOrDefault().MaCBth; // Bác sĩ chuyên khoa là CBth
                        repHH.DChi.Value = par.FirstOrDefault().DChi;
                        if (DungChung.Bien.MaBV == "24012")
                        {
                            repHH.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge_24012);
                        }
                        else
                            repHH.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                        //if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                        //    rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                        //else
                        //    rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                        repHH.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                        int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                        if (gioiTinh == 1)
                        {
                            repHH.Nu.Value = "/";
                        }
                        else if (gioiTinh == 0)
                        {
                            repHH.Nam.Value = "/";
                        }
                        //rep.KetQua.Value = LD.FirstOrDefault().KetQua;
                        if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                            repHH.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                        else
                            repHH.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                        if (par.FirstOrDefault().NgayTH != null)
                            repHH.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                        else
                            repHH.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                        repHH.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "  Mã ICD: " + DungChung.Ham.FreshString(par.FirstOrDefault().MaICD) : DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan);
                        repHH.xrLabel32.Text = repHH.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                        repHH.xrLabel34.Text = repHH.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";


                    }

                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);

                    repHH.Buong.Value = arrThongTinBNKB[2];
                    repHH.Giuong.Value = arrThongTinBNKB[3];

                    repHH.Khoa.Value = arrThongTinBNKB[4];

                    List<Rep_PhieuDoHoHap.BC> _lCol1 = new List<Rep_PhieuDoHoHap.BC>();

                    //if (DungChung.Bien.MaBV != "12122")
                    //{
                    //    string[] tenDVHH = new string[4] { " Dự kiến", " Thực tế", " Tỷ lệ giảm %", " " };
                    //    foreach (string a in tenDVHH)
                    //        _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = a });
                    //}
                    //else
                    //{
                    if (par.Count > 0)
                    {
                        string TSTB1 = "", TSTB2 = "", TSTB3 = "", TSTB4 = "", TSTB5 = "";
                        string kq1 = "", kq2 = "", kq3 = "", kq4 = "", kq5 = "";
                        var q1 = par.Where(p => p.STT == 1).FirstOrDefault();
                        var q2 = par.Where(p => p.STT == 2).FirstOrDefault();
                        var q3 = par.Where(p => p.STT == 3).FirstOrDefault();
                        var q4 = par.Where(p => p.STT == 4).FirstOrDefault();
                        var q5 = par.Where(p => p.STT == 5).FirstOrDefault();
                        if (q1 != null)
                        {
                            TSTB1 = q1.TSBT;
                            kq1 = q1.KetQua;
                        }
                        if (q2 != null)
                        {
                            TSTB2 = q2.TSBT;
                            kq2 = q2.KetQua;
                        }
                        if (q3 != null)
                        {
                            TSTB3 = q3.TSBT;
                            kq3 = q3.KetQua;
                        }
                        if (q4 != null)
                        {
                            TSTB4 = q4.TSBT;
                            kq4 = q4.KetQua;
                        }
                        if (q5 != null)
                        {
                            TSTB5 = q5.TSBT;
                            kq5 = q5.KetQua;
                        }


                        _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "Dự kiến", KQ1 = TSTB1, KQ2 = TSTB2, KQ3 = TSTB3, KQ4 = TSTB4, KQ5 = TSTB5 });
                        _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "Thực tế", KQ1 = kq1, KQ2 = kq2, KQ3 = kq3, KQ4 = kq4, KQ5 = kq5 });
                        _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "Tỷ lệ giảm %" });
                        _lCol1.Add(new Rep_PhieuDoHoHap.BC { TenDV = "" });
                    }
                    if (DungChung.Bien.MaBV == "30010")
                    {

                        int mkpth = Convert.ToInt32(par.FirstOrDefault().MaKPth.Value);
                        repHH.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                    }//yenbg1
                     //}
                    repHH.DataSource = _lCol1;
                    repHH.DataBindings();
                    repHH.CreateDocument();
                    frmHH.prcIN.PrintingSystem = repHH.PrintingSystem;
                    frmHH.ShowDialog();
                    break;
                #endregion
                #region X quang
                case "X-Quang":
                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789" || DungChung.Bien.MaBV == "24009" || DungChung.Bien.MaBV == "30012")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang_01071 rep = new BaoCao.repPhieuChupXQuang_01071();
                        string _kq = "";
                        string _kl = "";
                        if (par.Count > 0)
                        {
                            if (DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "01071")
                            {
                                string kieudoc1 = "";
                                string kieudoc2 = "";
                                var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                            select new
                                            {
                                                ht.KieuDoc
                                            }).ToList();
                                kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                                kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                                if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = true;
                                    DungChung.Bien._Visible_CDHA[1] = true;

                                }
                                if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = true;
                                    DungChung.Bien._Visible_CDHA[1] = false;

                                }
                                if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = false;
                                    DungChung.Bien._Visible_CDHA[1] = true;
                                }
                            }
                            rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            rep.So.Value = _IDCLS;
                            if (par.FirstOrDefault().NoiTru == 1)
                            {
                                var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                if (sovv != null)
                                    rep.sovv.Text = "Số VV: " + sovv.ToString();
                            }
                            rep.colMaBN.Text = _mabn.ToString();
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.MaCBth.Value = par.FirstOrDefault().MaCBth;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            //if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                            if (DungChung.Bien.MaBV == "12345")
                            {
                                DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH == null ? par.FirstOrDefault().NgayThang.Value : par.FirstOrDefault().NgayTH.Value);
                                DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH == null ? par.FirstOrDefault().NgayThang.Value : par.FirstOrDefault().NgayTH.Value);
                                var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                                             join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                             join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                                             join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                                             select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                                foreach (var item in _lcls)
                                {
                                    _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                                }
                            }
                            else if (DungChung.Bien.MaBV != "24009")
                            {
                                foreach (var a in par)
                                {
                                    if (DungChung.Bien.MaBV == "26007")
                                    {
                                        _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                    }
                                    else
                                        _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                }
                            }
                            rep.YCCC.Value = _yccc;
                            if (DungChung.Bien.MaBV == "24009")
                            {
                                rep.YCCC.Value = par1.FirstOrDefault().TenDV + par.FirstOrDefault().ChiDinh1;
                            }
                            if (DungChung.Bien.MaBV == "20001")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {

                                    _kq += "  -" + a.KetQua + "\n";
                                }
                                _kq = _kq + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetLuan + "\n";
                                }
                            }
                            else if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetQua + "\n\n";
                                }
                                _kl = _kl + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kl += "  -" + a.KetLuan + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    if (DungChung.Bien.MaBV == "30012")
                                    {
                                        _kq += "  " + a.KetQua + "\r\n\n" + a.KetLuan;
                                    }
                                    else
                                    {
                                        _kq += " " + a.KetQua + "\n" + a.KetLuan + "\n";
                                    }
                                }
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            ////DungChung.Bien.MaBV == "01049" ? DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "  Mã ICD: " + DungChung.Ham.FreshString(par.FirstOrDefault().MaICD) : DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan); //par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            rep.KLCC.Value = _kl;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            if (par.FirstOrDefault().IsDongY == true && DungChung.Bien.MaBV == "24297")
                            {
                                rep.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _mabn, _makp);
                            }
                            else
                            {
                                rep.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + DungChung.Ham.FreshString(arrThongTinBNKB[0]) : arrThongTinBNKB[1];
                            }

                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];
                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    break;

                #endregion
                #region X quang CR
                case "X-Quang CR":
                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang_01071 rep = new BaoCao.repPhieuChupXQuang_01071();
                        string _kq = "";
                        if (par.Count > 0)
                        {

                            rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            rep.So.Value = _IDCLS;
                            if (par.FirstOrDefault().NoiTru == 1)
                            {
                                var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                if (sovv != null)
                                    rep.sovv.Text = "Số VV: " + sovv.ToString();
                            }
                            rep.colMaBN.Text = _mabn.ToString();
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                            {
                                DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH.Value);
                                DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH.Value);
                                var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                                             join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                             join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                                             join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                                             select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                                foreach (var item in _lcls)
                                {
                                    _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    if (DungChung.Bien.MaBV == "26007")
                                    {
                                        _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                    }
                                    else
                                        _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                }
                            }
                            rep.YCCC.Value = _yccc;

                            if (DungChung.Bien.MaBV == "20001")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetQua + "\n";
                                }
                                _kq = _kq + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetLuan + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    _kq += " " + a.KetQua + "\n" + a.KetLuan + "\n";
                                }
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            ////DungChung.Bien.MaBV == "01049" ? DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "  Mã ICD: " + DungChung.Ham.FreshString(par.FirstOrDefault().MaICD) : DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan); //par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + DungChung.Ham.FreshString(arrThongTinBNKB[0]) : arrThongTinBNKB[1];
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    break;

                #endregion
                #region X quang DR
                case "X-Quang DR":
                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuChupXQuang_01071 rep = new BaoCao.repPhieuChupXQuang_01071();
                        string _kq = "";
                        if (par.Count > 0)
                        {

                            rep.colMaBN.Text = _mabn.ToString();
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            rep.So.Value = _IDCLS;
                            if (par.FirstOrDefault().NoiTru == 1)
                            {
                                var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                if (sovv != null)
                                    rep.sovv.Text = "Số VV: " + sovv.ToString();
                            }
                            rep.colMaBN.Text = _mabn.ToString();
                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                rep.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nam.Value = "/";
                            }
                            string _yccc = "";
                            if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                            {
                                DateTime n1 = DungChung.Ham.NgayTu(par.FirstOrDefault().NgayTH.Value);
                                DateTime n2 = DungChung.Ham.NgayDen(par.FirstOrDefault().NgayTH.Value);
                                var _lcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayTH >= n1 && p.NgayTH <= n2).Where(p => p.Status == 1)
                                             join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                             join dv in _Data.DichVus.Where(p => p.PLoai == 2) on cd.MaDV equals dv.MaDV
                                             join tn in _Data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                                             select new { dv.MaDV, dv.TenDV, cd.ChiDinh1 }).ToList();
                                foreach (var item in _lcls)
                                {
                                    _yccc += " " + item.TenDV + " (" + item.ChiDinh1 + ")" + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    if (DungChung.Bien.MaBV == "26007")
                                    {
                                        _yccc += " " + a.TenDV + " (" + a.MaQD + ")" + " - " + a.ChiDinh1 + "\n";
                                    }
                                    else
                                        _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                                }
                            }
                            rep.YCCC.Value = _yccc;

                            if (DungChung.Bien.MaBV == "20001")
                            {
                                _kq = "1. Mô tả: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetQua + "\n";
                                }
                                _kq = _kq + "2. Kết luận: \n";
                                foreach (var a in par)
                                {
                                    _kq += "  -" + a.KetLuan + "\n";
                                }
                            }
                            else
                            {
                                foreach (var a in par)
                                {
                                    _kq += " " + a.KetQua + "\n" + a.KetLuan + "\n";
                                }
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            ////DungChung.Bien.MaBV == "01049" ? DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "  Mã ICD: " + DungChung.Ham.FreshString(par.FirstOrDefault().MaICD) : DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan); //par.FirstOrDefault().ChanDoan;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.KQCC.Value = _kq;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + DungChung.Ham.FreshString(arrThongTinBNKB[0]) : arrThongTinBNKB[1];
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];

                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                    }
                    #endregion
                    break;

                #endregion
                #region xquang CT
                case "X-Quang CT":
                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                    {
                        frmIn frmct = new frmIn();
                        BaoCao.repPhieuChupXQuang_01071 repct = new BaoCao.repPhieuChupXQuang_01071();


                        string _kqct = "";
                        if (par.Count > 0)
                        {
                            if (DungChung.Bien.MaBV == "01071")
                            {
                                string kieudoc1 = "";
                                string kieudoc2 = "";
                                var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                            select new
                                            {
                                                ht.KieuDoc
                                            }).ToList();
                                kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                                kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                                if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = true;
                                    DungChung.Bien._Visible_CDHA[1] = true;
                                }
                                if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = true;
                                    DungChung.Bien._Visible_CDHA[1] = false;

                                }
                                if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = false;
                                    DungChung.Bien._Visible_CDHA[1] = true;
                                }
                            }
                            repct.colMaBN.Text = _mabn.ToString();
                            repct.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            repct.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                            repct.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            repct.So.Value = _IDCLS;
                            if (par.FirstOrDefault().NoiTru == 1)
                            {
                                var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                if (sovv != null)
                                    repct.sovv.Text = "Số VV: " + sovv.ToString();
                            }
                            repct.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            repct.DiaChi.Value = par.FirstOrDefault().DChi;
                            repct.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                                repct.Loidan.Value = par.FirstOrDefault().LoiDan;
                            else
                                repct.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                            repct.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                repct.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                repct.Nam.Value = "/";
                            }
                            string _yccc = "";
                            foreach (var a in par)
                            {
                                _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                            }
                            repct.YCCC.Value = _yccc;
                            foreach (var a in par)
                            {
                                _kqct += " " + a.KetQua + a.KetLuan + "\n";
                            }
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                repct.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                repct.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                repct.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                repct.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                repct.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                repct.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                repct.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            if (par.FirstOrDefault().NgayTH != null)
                                repct.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                repct.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            repct.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan) + "  Mã ICD: " + DungChung.Ham.FreshString(par.FirstOrDefault().MaICD) : DungChung.Ham.FreshString(par.FirstOrDefault().ChanDoan);//par.FirstOrDefault().ChanDoan;
                            repct.Macb.Value = par.FirstOrDefault().MaCBth;
                            repct.KQCC.Value = _kqct;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            repct.Buong.Value = arrThongTinBNKB[2];
                            repct.Giuong.Value = arrThongTinBNKB[3];


                            repct.Khoa.Value = arrThongTinBNKB[4];

                        }
                        repct.CreateDocument();
                        frmct.prcIN.PrintingSystem = repct.PrintingSystem;
                        frmct.ShowDialog();
                    }
                    #endregion
                    break;
                #endregion
                #region Siêu âm
                case "Siêu âm":
                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                    {
                        if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                        {
                            #region Sieu am o bung
                            if (Frm_CDHA_Moi._tendv == "Siêu âm ổ bụng_" || FRM_chidinh_Moi._tendv == "Siêu âm ổ bụng_") //sieu am o bung
                            {
                                Dictionary<string, object> _dic = new Dictionary<string, object>();

                                _dic.Add("Bacsy", par.FirstOrDefault().ChucVu + " " + par.FirstOrDefault().TenCBth);
                                if (par.FirstOrDefault().NgayTH != null)
                                {
                                    _dic.Add("Ngaythang", "Hà Nội" + ", " + " ngày " + par.FirstOrDefault().NgayTH.Value.Day + " tháng " + par.FirstOrDefault().NgayTH.Value.Month + " năm " + par.FirstOrDefault().NgayTH.Value.Year);
                                }
                                else
                                {
                                    _dic.Add("Ngaythang", "");
                                }

                                if (par.Count > 0 && par.FirstOrDefault().DuongDan != null)
                                {
                                    if (File.Exists(par.FirstOrDefault().DuongDan))
                                    {
                                        _dic.Add("Anh1", Image.FromFile(par.FirstOrDefault().DuongDan));
                                    }
                                    else
                                    {
                                        _dic.Add("Anh1", null);
                                    }

                                }
                                _dic.Add("sdt", ttbx.FirstOrDefault().DThoai != null ? ttbx.FirstOrDefault().DThoai : "");
                                string gioitinh = "";
                                if (par.FirstOrDefault().GTinh == 1)
                                {
                                    gioitinh = "Nam";
                                    _dic.Add("Sinhnam", par.FirstOrDefault().Tuoi);
                                }
                                if (par.FirstOrDefault().GTinh == 0)
                                {
                                    gioitinh = "Nữ";
                                    _dic.Add("Sinhnam", par.FirstOrDefault().NamSinh);
                                }
                                _dic.Add("Gioitinh", gioitinh);
                                if (par.FirstOrDefault().NoiTru == 1)
                                {
                                    var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                    if (sovv != null)
                                        _dic.Add("sovv", "Số VV: " + sovv.ToString());
                                }
                                _dic.Add("thuong2", (par.FirstOrDefault().CapCuu == false) ? "X" : "");
                                _dic.Add("capcuu2", (par.FirstOrDefault().CapCuu == true) ? "X" : "");

                                _dic.Add("MaCBDT", par.FirstOrDefault().MaCB);
                                _dic.Add("DiaChi", par.FirstOrDefault().DChi);
                                _dic.Add("TuoiBN", DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge));

                                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    _dic.Add("Nu", "/");
                                }
                                else if (gioiTinh == 0)
                                {
                                    _dic.Add("Nam", "/");
                                }

                                if (par.FirstOrDefault().SThe.Length >= 15)
                                {
                                    _dic.Add("SThe1", par.FirstOrDefault().SThe.Substring(0, 3));
                                    _dic.Add("SThe2", par.FirstOrDefault().SThe.Substring(3, 2));
                                    _dic.Add("SThe3", par.FirstOrDefault().SThe.Substring(5, 2));
                                    _dic.Add("SThe4", par.FirstOrDefault().SThe.Substring(7, 3));
                                    _dic.Add("SThe5", par.FirstOrDefault().SThe.Substring(10, 5));
                                    _dic.Add("visibleSb", 1);
                                }
                                else _dic.Add("visibleSb", 0);
                                _dic.Add("sophieu", _IDCLS);
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                _dic.Add("ChanDoan2", DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1]);
                                _dic.Add("Buong2", arrThongTinBNKB[2]);
                                _dic.Add("Giuong2", arrThongTinBNKB[3]);
                                _dic.Add("Khoa2", arrThongTinBNKB[4]);
                                _dic.Add("KetLuan", par.FirstOrDefault().KetLuan);
                                DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuSieuAmOBung_01071, par, _dic, false);
                            }
                            #endregion
                            else
                            {
                                #region Khác siêu âm ổ bụng 01071

                                frmIn frm3 = new frmIn();
                                BaoCao.repPhieuSieuAm_01071 rep3 = new BaoCao.repPhieuSieuAm_01071();
                                if (par.Count > 0)
                                {
                                    if (DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "01071")
                                    {
                                        string kieudoc1 = "";
                                        string kieudoc2 = "";
                                        var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                                    select new
                                                    {
                                                        ht.KieuDoc
                                                    }).ToList();
                                        kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                                        kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                                        if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                                        {
                                            DungChung.Bien._Visible_CDHA[0] = true;
                                            DungChung.Bien._Visible_CDHA[2] = true;

                                        }
                                        if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                                        {
                                            DungChung.Bien._Visible_CDHA[0] = true;
                                            DungChung.Bien._Visible_CDHA[2] = false;

                                        }
                                        if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                                        {
                                            DungChung.Bien._Visible_CDHA[2] = true;
                                            DungChung.Bien._Visible_CDHA[0] = false;
                                        }
                                    }
                                    rep3.labmabn.Text = _mabn.ToString();
                                    rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    rep3.SoPhieu.Value = _IDCLS;
                                    if (par.FirstOrDefault().NoiTru == 1)
                                    {
                                        var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                        if (sovv != null)
                                            rep3.sovv.Text = "Số VV: " + sovv.ToString();
                                    }
                                    rep3.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                    rep3.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                    rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                    rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                                    rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                    rep3.SoBHYT.Value = par.FirstOrDefault().SThe;

                                    if (par.FirstOrDefault().GTinh == 1)
                                    {
                                        rep3.Nu.Value = "/";
                                    }
                                    else
                                    {
                                        rep3.Nam.Value = "/";
                                    }
                                    rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                                    rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                                    rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                                    if (par.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                        rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                        rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                        rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                        rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                    }
                                    if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                        rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                    rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                                    string str = "";
                                    if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                        str = par.FirstOrDefault().KetQua;
                                    rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                    if (par.FirstOrDefault().DuongDan != null)
                                        rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                    rep3.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                                    rep3.Buong.Value = arrThongTinBNKB[2];
                                    rep3.Giuong.Value = arrThongTinBNKB[3];
                                    rep3.tb_ChiDinh.Visible = false;
                                    rep3.Khoa.Value = arrThongTinBNKB[4];

                                }

                                rep3.CreateDocument();
                                frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                                frm3.ShowDialog();
                                #endregion
                            }
                        }
                        else
                        {
                            frmIn frm3 = new frmIn();
                            BaoCao.repPhieuSieuAm_01071 rep3 = new BaoCao.repPhieuSieuAm_01071();
                            if (par.Count > 0)
                            {
                                rep3.labmabn.Text = _mabn.ToString();
                                rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                rep3.SoPhieu.Value = _IDCLS;
                                if (par.FirstOrDefault().NoiTru == 1)
                                {
                                    var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                    if (sovv != null)
                                        rep3.sovv.Text = "Số VV: " + sovv.ToString();
                                }
                                rep3.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                rep3.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                                rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep3.Nu.Value = "/";
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep3.Nam.Value = "/";
                                }
                                rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                                rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                                rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                                if (par.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                    rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                    rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                    rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                    rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                }
                                if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                    rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                else
                                    rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                if (par.FirstOrDefault().NgayTH != null)
                                    rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                                string str = "";
                                if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                    str = par.FirstOrDefault().KetQua;
                                rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                if (par.FirstOrDefault().DuongDan != null)
                                    rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                if (DungChung.Bien.MaBV == "24297" && par.FirstOrDefault().IsDongY == true)
                                {
                                    rep3.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value);
                                }
                                else { rep3.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1]; }

                                rep3.Buong.Value = arrThongTinBNKB[2];
                                rep3.Giuong.Value = arrThongTinBNKB[3];

                                rep3.Khoa.Value = arrThongTinBNKB[4];

                            }

                            rep3.CreateDocument();
                            frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                            frm3.ShowDialog();
                        }



                    }
                    #endregion
                    #region 56789
                    else if (DungChung.Bien.MaBV == "56789")
                    {
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm_HamNghi rep3 = new BaoCao.repPhieuSieuAm_HamNghi();
                        if (par.Count > 0)
                        {
                            rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            rep3.SoPhieu.Value = _IDCLS;
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = par.FirstOrDefault().NamSinh;//DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            rep3.Nam.Value = par.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                            rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = "Kết luận: " + par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            string str = "";
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                str = par.FirstOrDefault().KetQua;
                            rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep3.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];

                            rep3.Khoa.Value = arrThongTinBNKB[4];

                        }

                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                    }
                    #endregion
                    #region 30372
                    else if (DungChung.Bien.MaBV == "30372")
                    {
                        frm_SoLuongAnhIn frm = new frm_SoLuongAnhIn();
                        frm.ShowDialog();
                        int i1 = frm.SoLuongAnhin;
                        List<CDHA_30372> rep = new List<CDHA_30372>();
                        if (i1 > 0)
                        {
                            CDHA_30372 cdha = new CDHA_30372();
                            Dictionary<string, object> dicpar = new Dictionary<string, object>();
                            // tên cơ quan chủ quản   
                            int TimeFormat = Convert.ToInt32(_Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN).FirstOrDefault().FormatDate);
                            cdha.TenBV = DungChung.Bien.TenCQ;
                            cdha.Logo = DungChung.Ham.GetLogo();
                            cdha.MaBN = par.FirstOrDefault().MaBNhan;
                            string[] DuongDan = par.Where(p => p.IdCLS == _IDCLS).FirstOrDefault().DuongDan2.Split('|');

                            for (int i = 0; i < DuongDan.Length; i++)
                            {
                                switch (i)
                                {
                                    case 1:
                                        if (DuongDan[0] != null)
                                        {
                                            cdha.Anh1 = InPhieu.KiemTraTonTaiAnh(DuongDan[0].ToString());
                                        }
                                        break;
                                    case 2:
                                        if (DuongDan[1] != null)
                                        {
                                            cdha.Anh2 = InPhieu.KiemTraTonTaiAnh(DuongDan[1].ToString());
                                        }
                                        break;
                                    case 3:
                                        if (DuongDan[2] != null)
                                        {
                                            cdha.Anh3 = InPhieu.KiemTraTonTaiAnh(DuongDan[2].ToString());
                                        }
                                        break;
                                    case 4:
                                        if (DuongDan[3] != null)
                                        {
                                            cdha.Anh4 = InPhieu.KiemTraTonTaiAnh(DuongDan[3].ToString());
                                        }
                                        break;
                                    case 5:
                                        if (DuongDan[4] != null)
                                        {
                                            cdha.Anh5 = InPhieu.KiemTraTonTaiAnh(DuongDan[4].ToString());
                                        }
                                        break;
                                    case 6:
                                        if (DuongDan[5] != null)
                                        {
                                            cdha.Anh6 = InPhieu.KiemTraTonTaiAnh(DuongDan[5].ToString());
                                        }
                                        break;
                                    case 7:
                                        if (DuongDan[6] != null)
                                        {
                                            cdha.Anh7 = InPhieu.KiemTraTonTaiAnh(DuongDan[6].ToString());
                                        }
                                        break;
                                    case 8:
                                        if (DuongDan[7] != null)
                                        {
                                            cdha.Anh8 = InPhieu.KiemTraTonTaiAnh(DuongDan[7].ToString());
                                        }
                                        break;

                                    default:
                                        break;
                                }
                            }



                            cdha.DiaChiBenhVien = DungChung.Bien.DiaChi;
                            cdha.TieuDe = "PHIẾU SIÊU ÂM";
                            cdha.SoDienThoaiLienHe = "SĐT: " + _Data.HTHONGs.FirstOrDefault().SDT + " - Fax: " + _Data.HTHONGs.FirstOrDefault().Fax + "";
                            cdha.YeuCau = par.FirstOrDefault().TenDV;
                            cdha.NgaySinh = par.FirstOrDefault().NgaySinh + " / " + par.FirstOrDefault().ThangSinh + " / " + par.FirstOrDefault().NamSinh;
                            cdha.TieuDeKetQua = "KẾT QUẢ SIÊU ÂM";
                            cdha.BSCD = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            cdha.NgayChiDinh = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.NgayTH = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayTH), TimeFormat);
                            cdha.Tuoi = par.FirstOrDefault().Tuoi;
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong != null)
                            {
                                cdha.Buong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong;
                            }
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong != null)
                            {
                                cdha.Giuong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong;
                            }

                            // Thông tin bệnh nhân
                            cdha.HoTen = par.FirstOrDefault().TenBNhan.ToUpper();
                            cdha.DiaChi = par.FirstOrDefault().DChi;
                            cdha.Khoa = par.FirstOrDefault().TenKP;
                            cdha.ChanDoan = par.FirstOrDefault().ChanDoan;
                            dicpar["SoLuongAnh"] = i1;
                            if (par.FirstOrDefault().GTinh != 1)
                            {
                                cdha.Nam = "/";
                                cdha.Nu = "";
                            }
                            else
                            {
                                cdha.Nu = "/";
                                cdha.Nam = "";
                            }
                            if (par.FirstOrDefault().SThe != "")
                            {
                                cdha.MA1 = par.FirstOrDefault().SThe.Substring(0, 3);
                                cdha.MA2 = par.FirstOrDefault().SThe.Substring(3, 2);
                                cdha.MA3 = par.FirstOrDefault().SThe.Substring(5, 2);
                                cdha.MA4 = par.FirstOrDefault().SThe.Substring(7, 3);
                                cdha.MA5 = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (ttbx.Count != 0)
                            {
                                cdha.Email = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email;
                                cdha.DienThoai = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai;
                            }

                            cdha.BacSyChiDinh = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            if (par.FirstOrDefault().KetQua_Rtf == null)
                            {
                                cdha.KetQua = par.FirstOrDefault().KetQua;
                            }
                            else
                            {
                                cdha.KetQua = par.FirstOrDefault().KetQua_Rtf;
                            }

                            cdha.KetLuan = par.FirstOrDefault().KetLuan;
                            cdha.LoiDan = par.FirstOrDefault().LoiDan;
                            cdha.NgayThang = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.BSTH = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCBth).ToUpper();
                            rep.Add(cdha);
                            DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuCDHA_30372, rep.ToList(), dicpar, false);
                        }
                        else
                        {
                            MessageBox.Show("Xin hãy chọn số lượng ảnh cần in!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);

                        }
                    }
                    #endregion
                    #region Viện khác
                    else
                    {

                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm rep3 = new BaoCao.repPhieuSieuAm();
                        if (par.Count > 0)
                        {
                            var clsPrint = par.First(o => o.IdCLS == _IDCLS);
                            if (clsPrint != null)
                            {
                                if (par.FirstOrDefault().TenDV.ToLower().Contains("đầu dò âm đạo"))
                                {
                                    if (DungChung.Bien.MaBV == "24009")
                                    {
                                        rep3.SubBand4.Visible = true;
                                        rep3.xrLabel2.Text = "1. Mô tả tổn thương";
                                        rep3.xrLabel1.Text = "2. Kết luận";
                                    }
                                    else
                                    {
                                        rep3.SubBand2.Visible = true;
                                    }


                                }
                                else
                                {
                                    if (DungChung.Bien.MaBV == "24009")
                                    {
                                        rep3.SubBand3.Visible = true;
                                        rep3.xrLabel2.Text = "1. Mô tả tổn thương";
                                        rep3.xrLabel1.Text = "2. Kết luận";
                                    }
                                    else
                                    {
                                        rep3.SubBand1.Visible = true;
                                    }
                                }
                                rep3.labmabn.Text = "Mã BN: " + _mabn.ToString();
                                //if (DungChung.Bien.MaBV == "20001")
                                //{
                                rep3.TenBN.Value = clsPrint.TenBNhan.ToUpper();
                                //}
                                //else
                                //{
                                //    rep3.TenBN.Value = clsPrint.TenBNhan;
                                //}
                                rep3.SoPhieu.Value = _IDCLS;
                                rep3.thuong.Text = (clsPrint.CapCuu == false) ? "X" : "";
                                rep3.capcuu.Text = (clsPrint.CapCuu == true) ? "X" : "";
                                rep3.MaCBDT.Value = clsPrint.MaCB;
                                rep3.MaCBTH.Value = clsPrint.MaCBth;
                                rep3.DiaChi.Value = clsPrint.DChi;
                                rep3.TuoiBN.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.CalculateAge(clsPrint.NgaySinh, clsPrint.ThangSinh, clsPrint.NamSinh, " tháng.") : DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                rep3.SoBHYT.Value = clsPrint.SThe;
                                int gioiTinh = int.Parse(clsPrint.GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep3.Nu.Value = "/";
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep3.Nam.Value = "/";
                                }
                                rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par1.FirstOrDefault().TenDV + " (" + clsPrint.ChiDinh1 + ")";
                                rep3.KetLuan.Value = clsPrint.KetLuan;
                                rep3.LDBS.Value = clsPrint.LoiDan;
                                if (clsPrint.SThe.Length >= 15)
                                {
                                    rep3.SThe1.Value = clsPrint.SThe.Substring(0, 3);
                                    rep3.SThe2.Value = clsPrint.SThe.Substring(3, 2);
                                    rep3.SThe3.Value = clsPrint.SThe.Substring(5, 2);
                                    rep3.SThe4.Value = clsPrint.SThe.Substring(7, 3);
                                    rep3.SThe5.Value = clsPrint.SThe.Substring(10, 5);
                                }
                                if (clsPrint.NgayThang != null && DungChung.Bien.MaBV != "02005")
                                    rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(clsPrint.NgayThang.Value, DungChung.Bien.FormatDate);
                                else
                                    rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                if (clsPrint.NgayTH != null)
                                    rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(clsPrint.NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";

                                if (clsPrint != null)
                                {
                                    rep3.Macb.Value = clsPrint.MaCBth;
                                }
                                string str = "";
                                if (string.IsNullOrEmpty(clsPrint.KetQua_Rtf))
                                    str = clsPrint.KetQua;
                                else
                                    str = clsPrint.KetQua_Rtf;
                                if (DungChung.Bien.MaBV == "30340")
                                {
                                    rep3.colKetQua.Text = str;
                                }
                                else
                                {
                                    rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                }

                                if (clsPrint.DuongDan != null)
                                    rep3.DuongDan.Value = clsPrint.DuongDan;
                                if (clsPrint.DuongDan2 != null)
                                    rep3.DuongDan2.Value = clsPrint.DuongDan2;
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                if (DungChung.Bien.MaBV == "20001")
                                    rep3.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                                else
                                {
                                    if (DungChung.Bien.MaBV == "14018")
                                    {

                                        rep3.ChanDoan.Value = DungChung.Ham.GetChanDoanKB(_Data, _mabn);
                                    }
                                    else
                                    {
                                        rep3.ChanDoan.Value = arrThongTinBNKB[1];


                                    }
                                }
                                rep3.Buong.Value = arrThongTinBNKB[2];
                                rep3.Giuong.Value = arrThongTinBNKB[3];

                                rep3.Khoa.Value = DungChung.Ham.GetTenKP_20001(arrThongTinBNKB[4] ?? "");

                            }


                            if (DungChung.Bien.MaBV == "30010")
                            {
                                int mkpth = Convert.ToInt32(par.FirstOrDefault().MaKPth.Value);
                                rep3.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                            }//yenbg1
                            rep3.CreateDocument();
                            frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                            frm3.ShowDialog();
                        }
                    }
                    break;
                #endregion
                #endregion
                #region Siêu âm màu
                case "Siêu âm màu":
                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                    {
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm_01071 rep3 = new BaoCao.repPhieuSieuAm_01071();
                        if (par.Count > 0)
                        {
                            rep3.labmabn.Text = _mabn.ToString();
                            rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            rep3.SoPhieu.Value = _IDCLS;
                            if (par.FirstOrDefault().NoiTru == 1)
                            {
                                var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                if (sovv != null)
                                    rep3.sovv.Text = "Số VV: " + sovv.ToString();
                            }
                            rep3.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep3.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep3.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep3.Nam.Value = "/";
                            }
                            rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            string str = "";
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                str = par.FirstOrDefault().KetQua;
                            rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep3.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];

                            rep3.Khoa.Value = arrThongTinBNKB[4];

                        }

                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                    }
                    else if (DungChung.Bien.MaBV == "56789")
                    {
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm_HamNghi rep3 = new BaoCao.repPhieuSieuAm_HamNghi();
                        if (par.Count > 0)
                        {
                            rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            rep3.SoPhieu.Value = _IDCLS;
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = par.FirstOrDefault().NamSinh;//DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            rep3.Nam.Value = par.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                            rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = "Kết luận: " + par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            string str = "";
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                str = par.FirstOrDefault().KetQua;
                            rep3.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep3.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];

                            rep3.Khoa.Value = arrThongTinBNKB[4];

                        }

                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                    }
                    #endregion
                    break;
                #endregion
                #region Điện tim
                case "Điện tim":
                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                    {
                        frmIn frm1 = new frmIn();
                        BaoCao.Rep_PhieuDienTim_01071 rep1 = new BaoCao.Rep_PhieuDienTim_01071();

                        if (par.Count > 0)
                        {
                            if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                            {
                                string kieudoc1 = "";
                                string kieudoc2 = "";
                                var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                            select new
                                            {
                                                ht.KieuDoc
                                            }).ToList();
                                kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                                kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                                if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[1] = true;
                                    DungChung.Bien._Visible_CDHA[0] = true;

                                }
                                if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = true;
                                    DungChung.Bien._Visible_CDHA[1] = false;

                                }
                                if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[1] = true;
                                    DungChung.Bien._Visible_CDHA[0] = false;

                                }
                            }
                            rep1.txtmabn.Text = _mabn.ToString();
                            rep1.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            rep1.So.Value = _IDCLS;
                            if (par.FirstOrDefault().NoiTru == 1)
                            {
                                var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                if (sovv != null)
                                    rep1.sovv.Text = "Số VV: " + sovv.ToString();
                            }
                            rep1.thuong.Text = (par0.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep1.capcuu.Text = (par0.FirstOrDefault().CapCuu == true) ? "X" : "";
                            rep1.SoPhieu.Value = _IDCLS;
                            rep1.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep1.TenCB.Value = par.FirstOrDefault().ChucVu + ": " + par.FirstOrDefault().TenCBth;
                            rep1.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep1.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep1.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep1.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep1.Nam.Value = "/";
                            }
                            rep1.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep1.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep1.Loidan.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep1.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep1.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep1.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep1.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep1.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep1.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep1.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep1.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep1.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep1.Macb.Value = par.FirstOrDefault().MaCBth;
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);

                            if (par.FirstOrDefault().IsDongY == true && DungChung.Bien.MaBV == "24297")
                            {
                                rep1.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _mabn, _makp);
                            }
                            else
                            {
                                rep1.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            }


                            rep1.Buong.Value = arrThongTinBNKB[2];
                            rep1.Giuong.Value = arrThongTinBNKB[3];

                            rep1.Khoa.Value = arrThongTinBNKB[4];


                        }
                        rep1.CreateDocument();
                        frm1.prcIN.PrintingSystem = rep1.PrintingSystem;
                        frm1.ShowDialog();
                    }
                    #endregion
                    break;
                #endregion
                #region nội soi
                case "Nội soi":
                    #region 27183
                    frmIn frm2 = new frmIn();
                    if (DungChung.Bien.MaBV == "27183")
                    {

                        BaoCao.Rep_PhieuNoiSoi_27183 rep2 = new BaoCao.Rep_PhieuNoiSoi_27183();
                        if (par.Count > 0)
                        {
                            rep2.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            rep2.SoPhieu.Value = _IDCLS;
                            rep2.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep2.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep2.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep2.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep2.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep2.Nam.Value = "/";
                            }
                            rep2.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep2.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            string ddan = "", str = "";
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                str = par.FirstOrDefault().KetQua;
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().DuongDan2))
                                ddan = par.FirstOrDefault().DuongDan2;
                            rep2.hienthi(ddan);
                            rep2.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                            rep2.Loidan.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            string[] arrThongTinBNKB = { "", "", "", "", "" };
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep2.ChanDoan.Value = arrThongTinBNKB[1];
                            rep2.Buong.Value = arrThongTinBNKB[2];
                            rep2.Giuong.Value = arrThongTinBNKB[3];
                            rep2.Khoa.Value = arrThongTinBNKB[4];

                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep2.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep2.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep2.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep2.NgayTT.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep2.Macb.Value = par.FirstOrDefault().MaCBth;
                        }
                        rep2.CreateDocument();
                        frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                        frm2.ShowDialog();
                    }
                    #endregion
                    #region 01071
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")// || DungChung.Bien.MaBV != "01071"
                    {


                        if (dvucd.TenDV == "Nội soi thực quản - dạ dày - tá tràng không sinh thiết" || dvucd.TenDV == "Helicobacter pylori Ag test nhanh")
                        {
                            #region nội soi thực quản dạ dày, Helicobacter pylori Ag test nhanh
                            List<int> allMaDV = _Data.DichVus.Where(p => p.TenDV == "Nội soi thực quản - dạ dày - tá tràng không sinh thiết" || p.TenDV == "Helicobacter pylori Ag test nhanh").Select(p => p.MaDV).ToList();
                            DateTime tungay = new DateTime(dvucd.NgayThang.Value.Year, dvucd.NgayThang.Value.Month, dvucd.NgayThang.Value.Day);
                            DateTime denngay = DungChung.Ham.NgayDen(tungay);
                            var qcls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _mabn)
                                        join chidinh in _Data.ChiDinhs on cls.IdCLS equals chidinh.IdCLS
                                        join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                                        join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        join dv in _Data.DichVus.Where(p => allMaDV.Contains(p.MaDV)) on dvct.MaDV equals dv.MaDV
                                        select new
                                        {
                                            cls.ChanDoan,
                                            cls.MaICD,
                                            chidinh.IDCD,
                                            chidinh.Status,
                                            cls.MaCBth,// TenCBth = kq1 == null ? "" : kq1.TenCB,
                                            dv.MaQD,
                                            dvct.STT,
                                            dvct.TSBT,
                                            cls.NgayTH,
                                            clsct.KetQua,
                                            clsct.DuongDan,
                                            cls.NgayThang,
                                            cls.MaKP,
                                            cls.MaCB,
                                            chidinh.ChiDinh1,
                                            chidinh.KetLuan,
                                            TenDV = dv.TenDV,
                                            chidinh.LoiDan,
                                            clsct.DuongDan2,
                                            cls.CapCuu,
                                            cls.IdCLS
                                        }).Where(p => p.NgayThang >= tungay && p.NgayThang <= denngay).OrderBy(p => p.STT).ToList();
                            var qcls1 = (from a in qcls
                                         join cb in _Data.CanBoes on a.MaCB equals cb.MaCB
                                         join cbth in _Data.CanBoes on a.MaCBth equals cbth.MaCB into kq
                                         from kq1 in kq.DefaultIfEmpty()
                                         select new
                                         {
                                             a.DuongDan2,
                                             a.ChanDoan,
                                             a.MaICD,
                                             a.IDCD,
                                             a.Status,
                                             a.MaCBth,
                                             TenCBth = kq1 == null ? "" : kq1.TenCB,
                                             a.MaQD,
                                             a.STT,
                                             a.TSBT,
                                             a.NgayTH,
                                             a.KetQua,
                                             a.DuongDan,
                                             a.NgayThang,
                                             a.MaKP,
                                             a.MaCB,
                                             cb.TenCB,
                                             a.ChiDinh1,
                                             a.KetLuan,
                                             a.TenDV,
                                             a.LoiDan,
                                             a.CapCuu,
                                             a.IdCLS
                                         }).OrderBy(p => p.NgayThang).ToList();

                            BaoCao.Rep_PhieuNoiSoiThucQuan_01071 rep2 = new BaoCao.Rep_PhieuNoiSoiThucQuan_01071();
                            if (par.Count > 0 && qcls1.Count > 0)
                            {
                                rep2.txtmabn.Text = _mabn.ToString();
                                rep2.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                rep2.SoPhieu.Value = qcls1.FirstOrDefault().IdCLS; //_IDCLS;//Lấy _idcls nhỏ nhất
                                if (par.FirstOrDefault().NoiTru == 1)
                                {
                                    var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                    if (sovv != null)
                                        rep2.sovv.Text = "Số VV: " + sovv.ToString();
                                }
                                rep2.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                rep2.DiaChi.Value = par.FirstOrDefault().DChi;
                                rep2.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                rep2.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep2.Nu.Value = "/";
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep2.Nam.Value = "/";
                                }
                                //  rep2.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";// hiển thị danh sách


                                string str = "", loidan = "", ketluan = "";
                                var qnoisoithucquan = qcls1.Where(p => p.TenDV == "Nội soi thực quản - dạ dày - tá tràng không sinh thiết").ToList();
                                if (qnoisoithucquan.Count > 0 && !string.IsNullOrEmpty(qnoisoithucquan.FirstOrDefault().KetQua))
                                {
                                    str = qnoisoithucquan.FirstOrDefault().KetQua;// hiển thị danh sách
                                    rep2.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                    loidan = qnoisoithucquan.FirstOrDefault().LoiDan.Trim();
                                    ketluan = qnoisoithucquan.FirstOrDefault().KetLuan.Trim();
                                }
                                var qXNHP = qcls1.Where(p => p.TenDV == "Helicobacter pylori Ag test nhanh").ToList();
                                if (qXNHP.Count > 0 && !string.IsNullOrEmpty(qXNHP.FirstOrDefault().KetQua))
                                {
                                    str = qXNHP.FirstOrDefault().KetQua;
                                    rep2.hienthiKQ2(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                    if (loidan != "")
                                    {
                                        if (qXNHP.FirstOrDefault().LoiDan != "")
                                            loidan = loidan + "\n" + qXNHP.FirstOrDefault().LoiDan;
                                    }
                                    else
                                        loidan = qXNHP.FirstOrDefault().LoiDan;
                                    if (ketluan != "")
                                    {
                                        if (qXNHP.FirstOrDefault().KetLuan != "")
                                            ketluan = ketluan + "\n" + qXNHP.FirstOrDefault().KetLuan;
                                    }
                                    else
                                        ketluan = qXNHP.FirstOrDefault().KetLuan;
                                }

                                rep2.Loidan.Value = loidan;
                                rep2.KetLuan.Value = ketluan;// hiển thị danh sách
                                if (par.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                    rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                    rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                    rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                    rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                }
                                string[] arrThongTinBNKB = { "", "", "", "", "" };
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                rep2.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                                rep2.Buong.Value = arrThongTinBNKB[2];
                                rep2.Giuong.Value = arrThongTinBNKB[3];
                                rep2.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                rep2.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                rep2.Khoa.Value = arrThongTinBNKB[4];


                                if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                    rep2.NgayCD.Value = DungChung.Ham.NgaySangChu(qcls1.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                else
                                    rep2.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                if (par.FirstOrDefault().NgayTH != null)
                                    rep2.NgayTT.Value = DungChung.Ham.NgaySangChu(qcls1.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep2.NgayTT.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                rep2.Macb.Value = qcls1.FirstOrDefault().MaCBth;
                            }
                            rep2.CreateDocument();
                            frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                            frm2.ShowDialog();
                            #endregion
                        }
                        else
                        {
                            #region nội soi thường
                            BaoCao.Rep_PhieuNoiSoi_01071 rep2 = new BaoCao.Rep_PhieuNoiSoi_01071();
                            if (par.Count > 0)
                            {
                                rep2.txtmabn.Text = _mabn.ToString();
                                rep2.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                rep2.SoPhieu.Value = _IDCLS;
                                if (par.FirstOrDefault().NoiTru == 1)
                                {
                                    var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _mabn).Select(p => p.SoVV).FirstOrDefault();
                                    if (sovv != null)
                                        rep2.sovv.Text = "Số VV: " + sovv.ToString();
                                }
                                rep2.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                rep2.DiaChi.Value = par.FirstOrDefault().DChi;
                                rep2.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                rep2.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep2.Nu.Value = "/";
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep2.Nam.Value = "/";
                                }
                                rep2.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                                rep2.KetLuan.Value = par.FirstOrDefault().KetLuan;
                                string str = "";
                                if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                    str = par.FirstOrDefault().KetQua;
                                rep2.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                                rep2.Loidan.Value = par.FirstOrDefault().LoiDan;
                                if (par.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                    rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                    rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                    rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                    rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                }
                                string[] arrThongTinBNKB = { "", "", "", "", "" };
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                                rep2.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                                rep2.Buong.Value = arrThongTinBNKB[2];
                                rep2.Giuong.Value = arrThongTinBNKB[3];
                                rep2.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                rep2.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                rep2.Khoa.Value = arrThongTinBNKB[4];


                                if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                    rep2.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                else
                                    rep2.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                if (par.FirstOrDefault().NgayTH != null)
                                    rep2.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep2.NgayTT.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                rep2.Macb.Value = par.FirstOrDefault().MaCBth;
                            }
                            rep2.CreateDocument();
                            frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                            frm2.ShowDialog();
                            #endregion
                        }


                    }
                    #endregion
                    #region 30372

                    if (DungChung.Bien.MaBV == "30372")
                    {

                        frm_SoLuongAnhIn frm = new frm_SoLuongAnhIn();
                        frm.ShowDialog();
                        int i1 = frm.SoLuongAnhin;
                        List<CDHA_30372> rep = new List<CDHA_30372>();
                        if (i1 > 0)
                        {
                            CDHA_30372 cdha = new CDHA_30372();
                            Dictionary<string, object> dicpar = new Dictionary<string, object>();
                            // tên cơ quan chủ quản   
                            int TimeFormat = Convert.ToInt32(_Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN).FirstOrDefault().FormatDate);
                            cdha.TenBV = DungChung.Bien.TenCQ;
                            cdha.Logo = DungChung.Ham.GetLogo();
                            cdha.MaBN = par.FirstOrDefault().MaBNhan;
                            string[] DuongDan = par.Where(p => p.IdCLS == _IDCLS).FirstOrDefault().DuongDan2.Split('|');

                            for (int i = 0; i < DuongDan.Length; i++)
                            {
                                switch (i)
                                {
                                    case 1:
                                        if (DuongDan[0] != null)
                                        {
                                            cdha.Anh1 = InPhieu.KiemTraTonTaiAnh(DuongDan[0].ToString());
                                        }
                                        break;
                                    case 2:
                                        if (DuongDan[1] != null)
                                        {
                                            cdha.Anh2 = InPhieu.KiemTraTonTaiAnh(DuongDan[1].ToString());
                                        }
                                        break;
                                    case 3:
                                        if (DuongDan[2] != null)
                                        {
                                            cdha.Anh3 = InPhieu.KiemTraTonTaiAnh(DuongDan[2].ToString());
                                        }
                                        break;
                                    case 4:
                                        if (DuongDan[3] != null)
                                        {
                                            cdha.Anh4 = InPhieu.KiemTraTonTaiAnh(DuongDan[3].ToString());
                                        }
                                        break;
                                    case 5:
                                        if (DuongDan[4] != null)
                                        {
                                            cdha.Anh5 = InPhieu.KiemTraTonTaiAnh(DuongDan[4].ToString());
                                        }
                                        break;
                                    case 6:
                                        if (DuongDan[5] != null)
                                        {
                                            cdha.Anh6 = InPhieu.KiemTraTonTaiAnh(DuongDan[5].ToString());
                                        }
                                        break;
                                    case 7:
                                        if (DuongDan[6] != null)
                                        {
                                            cdha.Anh7 = InPhieu.KiemTraTonTaiAnh(DuongDan[6].ToString());
                                        }
                                        break;
                                    case 8:
                                        if (DuongDan[7] != null)
                                        {
                                            cdha.Anh8 = InPhieu.KiemTraTonTaiAnh(DuongDan[7].ToString());
                                        }
                                        break;

                                    default:
                                        break;
                                }
                            }



                            cdha.DiaChiBenhVien = DungChung.Bien.DiaChi;
                            cdha.TieuDe = "PHIẾU NỘI SOI TIÊU HÓA";
                            cdha.SoDienThoaiLienHe = "SĐT: " + _Data.HTHONGs.FirstOrDefault().SDT + " - Fax: " + _Data.HTHONGs.FirstOrDefault().Fax + "";
                            cdha.YeuCau = par.FirstOrDefault().TenDV;
                            cdha.NgaySinh = par.FirstOrDefault().NgaySinh + " / " + par.FirstOrDefault().ThangSinh + " / " + par.FirstOrDefault().NamSinh;
                            cdha.TieuDeKetQua = "KẾT QUẢ NỘI SOI";
                            cdha.BSCD = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            cdha.NgayChiDinh = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.NgayTH = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayTH), TimeFormat);
                            cdha.Tuoi = par.FirstOrDefault().Tuoi;
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong != null)
                            {
                                cdha.Buong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong;
                            }
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong != null)
                            {
                                cdha.Giuong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong;
                            }

                            // Thông tin bệnh nhân
                            cdha.HoTen = par.FirstOrDefault().TenBNhan.ToUpper();
                            cdha.DiaChi = par.FirstOrDefault().DChi;
                            cdha.Khoa = par.FirstOrDefault().TenKP;
                            cdha.ChanDoan = par.FirstOrDefault().ChanDoan;
                            dicpar["SoLuongAnh"] = i1;
                            if (par.FirstOrDefault().GTinh != 1)
                            {
                                cdha.Nam = "/";
                                cdha.Nu = "";
                            }
                            else
                            {
                                cdha.Nu = "/";
                                cdha.Nam = "";
                            }
                            if (par.FirstOrDefault().SThe != "")
                            {
                                cdha.MA1 = par.FirstOrDefault().SThe.Substring(0, 3);
                                cdha.MA2 = par.FirstOrDefault().SThe.Substring(3, 2);
                                cdha.MA3 = par.FirstOrDefault().SThe.Substring(5, 2);
                                cdha.MA4 = par.FirstOrDefault().SThe.Substring(7, 3);
                                cdha.MA5 = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (ttbx.Count != 0)
                            {
                                cdha.Email = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email;
                                cdha.DienThoai = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai;
                            }

                            cdha.BacSyChiDinh = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            if (string.IsNullOrEmpty(par.FirstOrDefault().KetQua_Rtf))
                                cdha.KetQua = par.FirstOrDefault().KetQua;
                            else
                                cdha.KetQua = par.FirstOrDefault().KetQua_Rtf;
                            cdha.KetLuan = par.FirstOrDefault().KetLuan;
                            cdha.LoiDan = par.FirstOrDefault().LoiDan;
                            cdha.NgayThang = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.BSTH = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCBth).ToUpper();
                            rep.Add(cdha);
                            DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuCDHA_30372, rep.ToList(), dicpar, false);
                        }
                        else
                        {
                            MessageBox.Show("Xin hãy chọn số lượng ảnh cần in!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);

                        }
                    }


                    #endregion
                    #region Khác
                    else
                    {

                        BaoCao.Rep_PhieuNoiSoi Rep = new BaoCao.Rep_PhieuNoiSoi();
                        if (par.Count > 0)
                        {
                            if (DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "01071")
                            {
                                string kieudoc1 = "";
                                string kieudoc2 = "";
                                var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                            select new
                                            {
                                                ht.KieuDoc
                                            }).ToList();
                                kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                                kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                                if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[1] = true;
                                    DungChung.Bien._Visible_CDHA[0] = true;

                                }
                                if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = true;
                                    DungChung.Bien._Visible_CDHA[1] = false;

                                }
                                if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                                {
                                    DungChung.Bien._Visible_CDHA[0] = false;
                                    DungChung.Bien._Visible_CDHA[1] = true;
                                }
                            }
                            Rep.txtmabn.Text = "Mã BN: " + _mabn.ToString();
                            Rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            Rep.SoPhieu.Value = _IDCLS;
                            Rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            Rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            Rep.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            Rep.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                Rep.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                Rep.Nam.Value = "/";
                            }
                            Rep.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            Rep.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            string str = "";
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().KetQua))
                                str = par.FirstOrDefault().KetQua;
                            Rep.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                            Rep.Loidan.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                Rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                Rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                Rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                Rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                Rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            string[] arrThongTinBNKB = { "", "", "", "", "" };
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            Rep.ChanDoan.Value = arrThongTinBNKB[1];
                            Rep.Buong.Value = arrThongTinBNKB[2];
                            Rep.Giuong.Value = arrThongTinBNKB[3];
                            Rep.xrLabel6.Text = Rep.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            Rep.xrLabel11.Text = Rep.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                            Rep.Khoa.Value = arrThongTinBNKB[4];


                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                Rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                Rep.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                Rep.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                Rep.NgayTT.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            Rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            if (DungChung.Bien.MaBV == "30010")
                            {
                                var maKPth = par.FirstOrDefault().MaKPth.Value;
                                Rep.KPTH.Value = _Data.KPhongs.FirstOrDefault(p => p.MaKP == maKPth).TenKP;
                            }
                        }

                        Rep.CreateDocument();
                        frm2.prcIN.PrintingSystem = Rep.PrintingSystem;

                        frm2.ShowDialog();
                    }


                    break;
                #endregion
                #endregion
                #region thủ thuật
                case "Thủ thuật":
                    frmIn frm21 = new frmIn();
                    BaoCao.Rep_PhieuNoiSoi rep21 = new BaoCao.Rep_PhieuNoiSoi();
                    if (par.Count > 0)
                    {

                        rep21.txtmabn.Text = _mabn.ToString();
                        rep21.TenBN.Value = (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789") ? par.FirstOrDefault().TenBNhan.ToUpper() : par.FirstOrDefault().TenBNhan;
                        rep21.SoPhieu.Value = _IDCLS;
                        rep21.xrLabel6.Text = rep21.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                        rep21.xrLabel11.Text = rep21.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                        rep21.MaCBDT.Value = par.FirstOrDefault().MaCB;
                        rep21.DiaChi.Value = par.FirstOrDefault().DChi;
                        rep21.TuoiBN.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.CalculateAge(par.FirstOrDefault().NgaySinh, par.FirstOrDefault().ThangSinh, par.FirstOrDefault().NamSinh, " tháng.") : DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                        rep21.MaBNhan.Value = par.FirstOrDefault().MaBNhan;
                        int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                        if (gioiTinh == 1)
                        {
                            rep21.Nu.Value = "/";
                        }
                        else if (gioiTinh == 0)
                        {
                            rep21.Nam.Value = "/";
                        }
                        if (DungChung.Bien.MaBV == "01830" || DungChung.Bien.MaBV == "30005")
                        {
                            rep21.lab1.Text = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                            rep21.lblHenGhiNoiSoi.Visible = false;
                            rep21.xrLabel45.Visible = false;
                        }
                        rep21.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                        rep21.KetLuan.Value = par.FirstOrDefault().KetLuan;
                        string str = "";
                        //if (DungChung.Bien.MaBV == "30372")
                        //{
                        //if (string.IsNullOrEmpty(par.FirstOrDefault().KetQua_Rtf))
                        //str = par.FirstOrDefault().KetQua;
                        //else
                        //str = par.FirstOrDefault().KetQua_Rtf;
                        //}
                        //else
                        str = par.FirstOrDefault().KetQua;

                        rep21.hienthiKQ(QLBV_Library.QLBV_Ham.InDenTrang(str, '|', ':'));
                        rep21.Loidan.Value = par.FirstOrDefault().LoiDan;
                        if (par.FirstOrDefault().SThe.Length >= 15)
                        {
                            rep21.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                            rep21.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                            rep21.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                            rep21.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                            rep21.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                        }
                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                        if (DungChung.Bien.MaBV == "14018")
                        {
                            rep21.ChanDoan.Value = DungChung.Ham.GetChanDoanKB(_Data, _mabn);
                        }
                        else if (par.FirstOrDefault().IsDongY == true && DungChung.Bien.MaBV == "24297")
                        {
                            rep21.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_24297(_Data, _mabn);
                        }
                        else
                        {
                            rep21.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                        }

                        rep21.Buong.Value = arrThongTinBNKB[2];
                        rep21.Giuong.Value = arrThongTinBNKB[3];

                        rep21.Khoa.Value = arrThongTinBNKB[4];

                        if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                            rep21.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                        else
                            rep21.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                        if (par.FirstOrDefault().NgayTH != null)
                            rep21.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                        else
                            rep21.NgayTT.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                        rep21.Macb.Value = par.FirstOrDefault().MaCBth;

                    }

                    if (DungChung.Bien.MaBV == "30010") //Yenbg1
                    {
                        int KPTH = Convert.ToInt32(par.Select(p => p.MaKPth).FirstOrDefault().ToString());
                        rep21.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == KPTH).Select(p => p.TenKP).FirstOrDefault().ToString();
                    }
                    rep21.CreateDocument();
                    frm21.prcIN.PrintingSystem = rep21.PrintingSystem;
                    frm21.ShowDialog();
                    break;
                #endregion
                #region siêu âm doppler
                case "Siêu âm ( Doppler )":
                    if (DungChung.Bien.MaBV == "27023")
                    {
                        CLS.InPhieu.InPhieuSieuAmDopplerTim(_IDCLS);
                        break;
                    }
                    else
                    {
                        int _IDCD = 0;
                        int _IDCLS1 = 0;
                        if (par.Count > 0)
                            _IDCD = par.FirstOrDefault().IDCD;
                        if (par1.Count > 0)
                            _IDCLS1 = par1.FirstOrDefault().IdCLS;
                        CLS.InPhieu.InLuuHuyetNao1(_Data, _IDCD, _IDCLS1, 2);
                        break;
                    }
                #endregion
                #region lưu huyết não
                case "Lưu huyết não":
                    int _IDCD2 = 0;
                    if (par.Count > 0)
                        _IDCD2 = par.FirstOrDefault().IDCD;
                    if (DungChung.Bien.MaBV == "30009")
                    {
                        CLS.InPhieu.InLuuHuyetNao_30009(_IDCD2);
                    }
                    else
                        CLS.InPhieu.InLuuHuyetNao(_Data, _IDCD2, _tieunhom, 0);
                    break;
                #endregion
                #region đo mật độ xương
                case "Đo mật độ xương":
                    int _IDCD3 = 0;
                    string tieunhom = _tieunhom;
                    if (par.Count > 0)
                        _IDCD3 = par.FirstOrDefault().IDCD;
                    if (DungChung.Bien.MaBV == "30009")
                        CLS.InPhieu.InPhieuThamDoChucNang(_IDCD3, 1, DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.DoMatDoXuong);
                    else if (DungChung.Bien.MaBV == "30010")
                    {
                        CLS.InPhieu.InLuuHuyetNao30010(_Data, _IDCD3, tieunhom, 1);
                    }
                    else
                        CLS.InPhieu.InLuuHuyetNao(_Data, _IDCD3, _tieunhom, 1);
                    break;
                #endregion
                #region thăm dò chức năng
                case "Thăm dò chức năng":
                    int _IDCD4 = 0;
                    if (par.Count > 0)
                        _IDCD4 = par.FirstOrDefault().IDCD;
                    CLS.InPhieu.InPhieuThamDoChucNang(_IDCD4, 1, DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.DoMatDoXuong);
                    break;
                #endregion
                #region thăm dò chức năng
                case "Đo khúc xạ máy":
                    int _IDCD44 = 0;
                    if (par.Count > 0)
                        _IDCD44 = par.FirstOrDefault().IDCD;
                    CLS.InPhieu.InPhieuThamDoChucNang(_IDCD44, 3, DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.DoKhucXaMay);
                    break;
                #endregion
                #region Nội Soi Dạ Dày
                #region 30372
                case "Nội soi Dạ Dày":
                    if (DungChung.Bien.MaBV == "30372")
                    {
                        frm_SoLuongAnhIn frm = new frm_SoLuongAnhIn();
                        frm.ShowDialog();
                        int i1 = frm.SoLuongAnhin;
                        List<CDHA_30372> rep = new List<CDHA_30372>();
                        if (i1 > 0)
                        {
                            CDHA_30372 cdha = new CDHA_30372();
                            Dictionary<string, object> dicpar = new Dictionary<string, object>();
                            // tên cơ quan chủ quản   
                            int TimeFormat = Convert.ToInt32(_Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN).FirstOrDefault().FormatDate);
                            cdha.TenBV = DungChung.Bien.TenCQ;
                            cdha.Logo = DungChung.Ham.GetLogo();
                            cdha.MaBN = par.FirstOrDefault().MaBNhan;
                            string[] DuongDan = par.Where(p => p.IdCLS == _IDCLS).FirstOrDefault().DuongDan2.Split('|');

                            for (int i = 0; i < DuongDan.Length; i++)
                            {
                                switch (i)
                                {
                                    case 1:
                                        if (DuongDan[0] != null)
                                        {
                                            cdha.Anh1 = InPhieu.KiemTraTonTaiAnh(DuongDan[0].ToString());
                                        }
                                        break;
                                    case 2:
                                        if (DuongDan[1] != null)
                                        {
                                            cdha.Anh2 = InPhieu.KiemTraTonTaiAnh(DuongDan[1].ToString());
                                        }
                                        break;
                                    case 3:
                                        if (DuongDan[2] != null)
                                        {
                                            cdha.Anh3 = InPhieu.KiemTraTonTaiAnh(DuongDan[2].ToString());
                                        }
                                        break;
                                    case 4:
                                        if (DuongDan[3] != null)
                                        {
                                            cdha.Anh4 = InPhieu.KiemTraTonTaiAnh(DuongDan[3].ToString());
                                        }
                                        break;
                                    case 5:
                                        if (DuongDan[4] != null)
                                        {
                                            cdha.Anh5 = InPhieu.KiemTraTonTaiAnh(DuongDan[4].ToString());
                                        }
                                        break;
                                    case 6:
                                        if (DuongDan[5] != null)
                                        {
                                            cdha.Anh6 = InPhieu.KiemTraTonTaiAnh(DuongDan[5].ToString());
                                        }
                                        break;
                                    case 7:
                                        if (DuongDan[6] != null)
                                        {
                                            cdha.Anh7 = InPhieu.KiemTraTonTaiAnh(DuongDan[6].ToString());
                                        }
                                        break;
                                    case 8:
                                        if (DuongDan[7] != null)
                                        {
                                            cdha.Anh8 = InPhieu.KiemTraTonTaiAnh(DuongDan[7].ToString());
                                        }
                                        break;

                                    default:
                                        break;
                                }
                            }



                            cdha.DiaChiBenhVien = DungChung.Bien.DiaChi;
                            if (Frm_CDHA_Moi._indexPhieu == 6 || Frm_CDHA_Moi._indexPhieu == 15)
                            { cdha.TieuDe = "PHIẾU NỘI SOI ĐẠI TRỰC TRÀNG"; }
                            else { cdha.TieuDe = "PHIẾU NỘI SOI DẠ DÀY"; }
                            cdha.SoDienThoaiLienHe = "SĐT: " + _Data.HTHONGs.FirstOrDefault().SDT + " - Fax: " + _Data.HTHONGs.FirstOrDefault().Fax + "";
                            cdha.YeuCau = par.FirstOrDefault().TenDV;
                            cdha.NgaySinh = par.FirstOrDefault().NgaySinh + " / " + par.FirstOrDefault().ThangSinh + " / " + par.FirstOrDefault().NamSinh;
                            cdha.TieuDeKetQua = "KẾT QUẢ NỘI SOI";
                            cdha.BSCD = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            cdha.NgayChiDinh = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.NgayTH = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayTH), TimeFormat);
                            cdha.Tuoi = par.FirstOrDefault().Tuoi;
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong != null)
                            {
                                cdha.Buong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong;
                            }
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong != null)
                            {
                                cdha.Giuong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong;
                            }

                            // Thông tin bệnh nhân
                            cdha.HoTen = par.FirstOrDefault().TenBNhan.ToUpper();
                            cdha.DiaChi = par.FirstOrDefault().DChi;
                            cdha.Khoa = par.FirstOrDefault().TenKP;
                            cdha.ChanDoan = par.FirstOrDefault().ChanDoan;
                            dicpar["SoLuongAnh"] = i1;
                            if (par.FirstOrDefault().GTinh != 1)
                            {
                                cdha.Nam = "/";
                                cdha.Nu = "";
                            }
                            else
                            {
                                cdha.Nu = "/";
                                cdha.Nam = "";
                            }
                            if (par.FirstOrDefault().SThe != "")
                            {
                                cdha.MA1 = par.FirstOrDefault().SThe.Substring(0, 3);
                                cdha.MA2 = par.FirstOrDefault().SThe.Substring(3, 2);
                                cdha.MA3 = par.FirstOrDefault().SThe.Substring(5, 2);
                                cdha.MA4 = par.FirstOrDefault().SThe.Substring(7, 3);
                                cdha.MA5 = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (ttbx.Count != 0)
                            {
                                cdha.Email = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email;
                                cdha.DienThoai = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai;
                            }

                            cdha.BacSyChiDinh = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            if (par.FirstOrDefault().KetQua_Rtf == null)
                                cdha.KetQua = par.FirstOrDefault().KetQua;
                            else
                                cdha.KetQua = par.FirstOrDefault().KetQua_Rtf;
                            cdha.KetLuan = par.FirstOrDefault().KetLuan;
                            cdha.LoiDan = par.FirstOrDefault().LoiDan;
                            cdha.NgayThang = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.BSTH = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCBth).ToUpper();
                            rep.Add(cdha);
                            DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuCDHA_30372, rep.ToList(), dicpar, false);
                        }
                        else
                        {
                            MessageBox.Show("Xin hãy chọn số lượng ảnh cần in!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);

                        }
                    }
                    break;

                #endregion
                #endregion
                #region điện não đồ
                case "Điện não đồ":
                    int _IDCD5 = 0;
                    if (par.Count > 0)
                    {
                        _IDCD5 = par.FirstOrDefault().IDCD;

                    }

                    CLS.InPhieu.InLuuHuyetNao1(_Data, _IDCD5, _tieunhom, 3);
                    break;
                #endregion
                #region Nội soi cổ tử cung
                case "Nội soi Cổ Tử Cung":
                    if (DungChung.Bien.MaBV == "30372")
                    {
                        frm_SoLuongAnhIn frm = new frm_SoLuongAnhIn();
                        frm.ShowDialog();
                        int i1 = frm.SoLuongAnhin;
                        List<CDHA_30372> rep = new List<CDHA_30372>();
                        if (i1 > 0)
                        {
                            CDHA_30372 cdha = new CDHA_30372();
                            Dictionary<string, object> dicpar = new Dictionary<string, object>();
                            // tên cơ quan chủ quản   
                            int TimeFormat = Convert.ToInt32(_Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN).FirstOrDefault().FormatDate);
                            cdha.TenBV = DungChung.Bien.TenCQ;
                            cdha.Logo = DungChung.Ham.GetLogo();
                            cdha.MaBN = par.FirstOrDefault().MaBNhan;
                            string[] DuongDan = par.Where(p => p.IdCLS == _IDCLS).FirstOrDefault().DuongDan2.Split('|');

                            for (int i = 0; i < DuongDan.Length; i++)
                            {
                                switch (i)
                                {
                                    case 1:
                                        if (DuongDan[0] != null)
                                        {
                                            cdha.Anh1 = InPhieu.KiemTraTonTaiAnh(DuongDan[0].ToString());
                                        }
                                        break;
                                    case 2:
                                        if (DuongDan[1] != null)
                                        {
                                            cdha.Anh2 = InPhieu.KiemTraTonTaiAnh(DuongDan[1].ToString());
                                        }
                                        break;
                                    case 3:
                                        if (DuongDan[2] != null)
                                        {
                                            cdha.Anh3 = InPhieu.KiemTraTonTaiAnh(DuongDan[2].ToString());
                                        }
                                        break;
                                    case 4:
                                        if (DuongDan[3] != null)
                                        {
                                            cdha.Anh4 = InPhieu.KiemTraTonTaiAnh(DuongDan[3].ToString());
                                        }
                                        break;
                                    case 5:
                                        if (DuongDan[4] != null)
                                        {
                                            cdha.Anh5 = InPhieu.KiemTraTonTaiAnh(DuongDan[4].ToString());
                                        }
                                        break;
                                    case 6:
                                        if (DuongDan[5] != null)
                                        {
                                            cdha.Anh6 = InPhieu.KiemTraTonTaiAnh(DuongDan[5].ToString());
                                        }
                                        break;
                                    case 7:
                                        if (DuongDan[6] != null)
                                        {
                                            cdha.Anh7 = InPhieu.KiemTraTonTaiAnh(DuongDan[6].ToString());
                                        }
                                        break;
                                    case 8:
                                        if (DuongDan[7] != null)
                                        {
                                            cdha.Anh8 = InPhieu.KiemTraTonTaiAnh(DuongDan[7].ToString());
                                        }
                                        break;

                                    default:
                                        break;
                                }
                            }



                            cdha.DiaChiBenhVien = DungChung.Bien.DiaChi;
                            cdha.TieuDe = "PHIẾU NỘI SOI CỔ TỬ CUNG";
                            cdha.SoDienThoaiLienHe = "SĐT: " + _Data.HTHONGs.FirstOrDefault().SDT + " - Fax: " + _Data.HTHONGs.FirstOrDefault().Fax + "";
                            cdha.YeuCau = par.FirstOrDefault().TenDV;
                            cdha.NgaySinh = par.FirstOrDefault().NgaySinh + " / " + par.FirstOrDefault().ThangSinh + " / " + par.FirstOrDefault().NamSinh;
                            cdha.TieuDeKetQua = "KẾT QUẢ NỘI SOI";
                            cdha.BSCD = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            cdha.NgayChiDinh = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.NgayTH = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayTH), TimeFormat);
                            cdha.Tuoi = par.FirstOrDefault().Tuoi;
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong != null)
                            {
                                cdha.Buong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong;
                            }
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong != null)
                            {
                                cdha.Giuong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong;
                            }

                            // Thông tin bệnh nhân
                            cdha.HoTen = par.FirstOrDefault().TenBNhan.ToUpper();
                            cdha.DiaChi = par.FirstOrDefault().DChi;
                            cdha.Khoa = par.FirstOrDefault().TenKP;
                            cdha.ChanDoan = par.FirstOrDefault().ChanDoan;
                            dicpar["SoLuongAnh"] = i1;
                            if (par.FirstOrDefault().GTinh != 1)
                            {
                                cdha.Nam = "/";
                                cdha.Nu = "";
                            }
                            else
                            {
                                cdha.Nu = "/";
                                cdha.Nam = "";
                            }
                            if (par.FirstOrDefault().SThe != "")
                            {
                                cdha.MA1 = par.FirstOrDefault().SThe.Substring(0, 3);
                                cdha.MA2 = par.FirstOrDefault().SThe.Substring(3, 2);
                                cdha.MA3 = par.FirstOrDefault().SThe.Substring(5, 2);
                                cdha.MA4 = par.FirstOrDefault().SThe.Substring(7, 3);
                                cdha.MA5 = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (ttbx.Count != 0)
                            {
                                cdha.Email = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email;
                                cdha.DienThoai = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai;
                            }

                            cdha.BacSyChiDinh = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            if (par.FirstOrDefault().KetQua_Rtf == null)
                                cdha.KetQua = par.FirstOrDefault().KetQua;
                            else
                                cdha.KetQua = par.FirstOrDefault().KetQua_Rtf;

                            cdha.KetLuan = par.FirstOrDefault().KetLuan;
                            cdha.LoiDan = par.FirstOrDefault().LoiDan;
                            cdha.NgayThang = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.BSTH = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCBth).ToUpper();
                            rep.Add(cdha);
                            DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuCDHA_30372, rep.ToList(), dicpar, false);
                        }
                        else
                        {
                            MessageBox.Show("Xin hãy chọn số lượng ảnh cần in!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);

                        }
                    }

                    break;
                #endregion
                #region Nội soi tai mũi họng
                case "Nội soi Tai-Mũi-Họng":
                    if (DungChung.Bien.MaBV == "24012")
                    {
                        int _mkp4 = 0;
                        frmIn frm4 = new frmIn();
                        BaoCao.Rep_PhieuNoiSoiTMH rep4 = new BaoCao.Rep_PhieuNoiSoiTMH();
                        if (par.Count > 0)
                        {
                            _mkp4 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            rep4.paramHoTen.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            rep4.paramDiaChi.Value = par.FirstOrDefault().DChi;
                            rep4.IDCLS.Value = _IDCLS;
                            rep4.xrTableCell60.Text = "BÁC SĨ CHỈ ĐỊNH";
                            rep4.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep4.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                            rep4.paramGioiTinh.Value = par.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                            rep4.paramSThe.Value = par.FirstOrDefault().SThe;
                            rep4.paramDoiTuong.Value = par.FirstOrDefault().DTuong;
                            rep4.paramTuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep4.paramKetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep4.paraLoiDan.Value = par.FirstOrDefault().LoiDan;
                            rep4.paramPhieuSo.Value = par.FirstOrDefault().IdCLS;
                            if (par.FirstOrDefault().NgayThang != null)
                            {
                                rep4.paramNgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            }
                            else
                                rep4.paramNgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep4.paramNgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep4.paramNgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            int _makpth = 0;
                            if (par.FirstOrDefault().MaKPth != null)
                            {
                                _makpth = par.FirstOrDefault().MaKPth.Value;

                            }
                            var kp = _Data.KPhongs.Where(p => p.MaKP == _makpth).ToList();
                            if (kp.Count > 0)
                                rep4.paramPhongKham.Value = kp.FirstOrDefault().TenKP.ToUpper();
                            string a = "", b = ""; ; a = par0.FirstOrDefault().MaCB;
                            b = par.FirstOrDefault().MaCBth;

                            if (!string.IsNullOrEmpty(a))
                                rep4.paramCanBoDT.Value = DungChung.Ham._getTenCB(_Data, a).ToUpper();
                            if (!string.IsNullOrEmpty(b))
                                rep4.BSTH.Value = DungChung.Ham._getTenCB(_Data, b).ToUpper();
                            string ddan = "", ketqua = "";
                            if (par.FirstOrDefault().DuongDan2 != null)
                                ddan = par.FirstOrDefault().DuongDan2;
                            if (DungChung.Bien.MaBV == "30372")
                            {
                                if (par.FirstOrDefault().KetQua_Rtf == null)
                                    ketqua = par.FirstOrDefault().KetQua;
                                else
                                    ketqua = par.FirstOrDefault().KetQua_Rtf;
                            }
                            else
                                ketqua = par.FirstOrDefault().KetQua;
                            rep4.hienthi(ketqua, ddan);
                        }
                        var kb4 = (from kb2 in _Data.BNKBs.Where(p => p.MaBNhan == _mabn).Where(p => p.MaKP == _mkp4) select new { kb2.IDKB, kb2.ChanDoan, kb2.BenhKhac }).OrderByDescending(p => p.IDKB).ToList();
                        if (kb4.Count > 0)
                            rep4.paramChanDoan.Value = kb4.FirstOrDefault().ChanDoan + "/" + kb4.FirstOrDefault().BenhKhac;

                        rep4.CreateDocument();
                        frm4.prcIN.PrintingSystem = rep4.PrintingSystem;
                        frm4.ShowDialog();
                    }
                    else if (DungChung.Bien.MaBV == "30372")
                    {

                        frm_SoLuongAnhIn frm = new frm_SoLuongAnhIn();
                        frm.ShowDialog();
                        int i1 = frm.SoLuongAnhin;
                        List<CDHA_30372> rep = new List<CDHA_30372>();
                        if (i1 > 0)
                        {
                            CDHA_30372 cdha = new CDHA_30372();
                            Dictionary<string, object> dicpar = new Dictionary<string, object>();
                            // tên cơ quan chủ quản   
                            int TimeFormat = Convert.ToInt32(_Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN).FirstOrDefault().FormatDate);
                            cdha.TenBV = DungChung.Bien.TenCQ;
                            cdha.Logo = DungChung.Ham.GetLogo();
                            cdha.MaBN = par.FirstOrDefault().MaBNhan;
                            string[] DuongDan = par.Where(p => p.IdCLS == _IDCLS).FirstOrDefault().DuongDan2.Split('|');

                            for (int i = 0; i < DuongDan.Length; i++)
                            {
                                switch (i)
                                {
                                    case 1:
                                        if (DuongDan[0] != null)
                                        {
                                            cdha.Anh1 = InPhieu.KiemTraTonTaiAnh(DuongDan[0].ToString());
                                        }
                                        break;
                                    case 2:
                                        if (DuongDan[1] != null)
                                        {
                                            cdha.Anh2 = InPhieu.KiemTraTonTaiAnh(DuongDan[1].ToString());
                                        }
                                        break;
                                    case 3:
                                        if (DuongDan[2] != null)
                                        {
                                            cdha.Anh3 = InPhieu.KiemTraTonTaiAnh(DuongDan[2].ToString());
                                        }
                                        break;
                                    case 4:
                                        if (DuongDan[3] != null)
                                        {
                                            cdha.Anh4 = InPhieu.KiemTraTonTaiAnh(DuongDan[3].ToString());
                                        }
                                        break;
                                    case 5:
                                        if (DuongDan[4] != null)
                                        {
                                            cdha.Anh5 = InPhieu.KiemTraTonTaiAnh(DuongDan[4].ToString());
                                        }
                                        break;
                                    case 6:
                                        if (DuongDan[5] != null)
                                        {
                                            cdha.Anh6 = InPhieu.KiemTraTonTaiAnh(DuongDan[5].ToString());
                                        }
                                        break;
                                    case 7:
                                        if (DuongDan[6] != null)
                                        {
                                            cdha.Anh7 = InPhieu.KiemTraTonTaiAnh(DuongDan[6].ToString());
                                        }
                                        break;
                                    case 8:
                                        if (DuongDan[7] != null)
                                        {
                                            cdha.Anh8 = InPhieu.KiemTraTonTaiAnh(DuongDan[7].ToString());
                                        }
                                        break;

                                    default:
                                        break;
                                }
                            }
                            cdha.DiaChiBenhVien = DungChung.Bien.DiaChi;
                            cdha.TieuDe = "PHIẾU NỘI SOI - TAI - MŨI - HỌNG";
                            cdha.SoDienThoaiLienHe = "SĐT: " + _Data.HTHONGs.FirstOrDefault().SDT + " - Fax: " + _Data.HTHONGs.FirstOrDefault().Fax + "";
                            cdha.YeuCau = par.FirstOrDefault().TenDV;
                            cdha.NgaySinh = par.FirstOrDefault().NgaySinh + " / " + par.FirstOrDefault().ThangSinh + " / " + par.FirstOrDefault().NamSinh;
                            cdha.TieuDeKetQua = "KẾT QUẢ NỘI SOI";
                            cdha.BSCD = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            cdha.NgayChiDinh = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.NgayTH = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayTH), TimeFormat);
                            cdha.Tuoi = par.FirstOrDefault().Tuoi;
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong != null)
                            {
                                cdha.Buong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Buong;
                            }
                            if (_Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong != null)
                            {
                                cdha.Giuong = _Data.BNKBs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Giuong;
                            }

                            // Thông tin bệnh nhân
                            cdha.HoTen = par.FirstOrDefault().TenBNhan.ToUpper();
                            cdha.DiaChi = par.FirstOrDefault().DChi;
                            cdha.Khoa = par.FirstOrDefault().TenKP;
                            cdha.ChanDoan = par.FirstOrDefault().ChanDoan;
                            dicpar["SoLuongAnh"] = i1;
                            if (par.FirstOrDefault().GTinh != 1)
                            {
                                cdha.Nam = "/";
                                cdha.Nu = "";
                            }
                            else
                            {
                                cdha.Nu = "/";
                                cdha.Nam = "";
                            }
                            if (par.FirstOrDefault().SThe != "")
                            {
                                cdha.MA1 = par.FirstOrDefault().SThe.Substring(0, 3);
                                cdha.MA2 = par.FirstOrDefault().SThe.Substring(3, 2);
                                cdha.MA3 = par.FirstOrDefault().SThe.Substring(5, 2);
                                cdha.MA4 = par.FirstOrDefault().SThe.Substring(7, 3);
                                cdha.MA5 = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (ttbx.Count != 0)
                            {
                                cdha.Email = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().Email;
                                cdha.DienThoai = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai == null ? "" : _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault().DThoai;
                            }

                            cdha.BacSyChiDinh = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCB);
                            if (par.FirstOrDefault().KetQua_Rtf == null)
                                cdha.KetQua = par.FirstOrDefault().KetQua;
                            else
                                cdha.KetQua = par.FirstOrDefault().KetQua_Rtf;
                            cdha.KetLuan = par.FirstOrDefault().KetLuan;
                            cdha.LoiDan = par.FirstOrDefault().LoiDan;
                            cdha.NgayThang = DungChung.Ham.NgaySangChu(Convert.ToDateTime(par.FirstOrDefault().NgayThang), TimeFormat);
                            cdha.BSTH = DungChung.Ham._getTenCB(_Data, par.FirstOrDefault().MaCBth).ToUpper();
                            rep.Add(cdha);
                            DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuCDHA_30372, rep.ToList(), dicpar, false);
                        }
                        else
                        {
                            MessageBox.Show("Xin hãy chọn số lượng ảnh cần in!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);

                        }
                    }
                    break;
                    #endregion

            }
        }

        #endregion
        #region _in phiếu CDHA mầu
        public static int _gettendv = 0;
        public static void _inPhieu_CDHA_mau(QLBV_Database.QLBVEntities _Data, string _tieunhom, int _mabn, int _IDCLS, int _IDCD)
        {
            int _idcd = 0;
            QLBV_Database.QLBVEntities _db = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            var hthong = _db.HTHONGs.FirstOrDefault(o => o.MaBV == DungChung.Bien.MaBV);
            #region 27023 lấy số trên phiếu : BN nôi trú lấy số bệnh án, bệnh nhân ngoại trú số thứ tự tăng theo ngày
            string _so = "";
            if (DungChung.Bien.MaBV == "27023")
            {
                var bnhan = _Data.BenhNhans.Where(p => p.MaBNhan == _mabn).FirstOrDefault();
                if (bnhan != null)
                {
                    if (bnhan.NoiTru == 1)
                    {
                        var qvv = _Data.VaoViens.Where(parameters => parameters.MaBNhan == _mabn).Select(p => p.SoBA).FirstOrDefault();
                        if (qvv != null)
                            _so = qvv;
                    }
                    else
                    {
                        DateTime tungay = DungChung.Ham.NgayTu(bnhan.NNhap.Value);
                        DateTime denngay = DungChung.Ham.NgayDen(bnhan.NNhap.Value);
                        var qbn = _Data.BenhNhans.Where(p => p.NNhap >= tungay && p.NNhap <= denngay).Where(p => p.NoiTru == 0).OrderBy(p => p.NNhap).ToList();
                        int count = 0;
                        foreach (var a in qbn)
                        {
                            count++;
                            if (a.MaBNhan == _mabn)
                                break;
                        }
                        _so = count.ToString();
                    }
                }

            }
            #endregion
            if (DungChung.Bien.MaBV == "12121" && _IDCD > 0 && _tieunhom == "Siêu âm")
            {
                var qkp = _Data.KPhongs.Where(p => p.MaKP == DungChung.Bien.MaKP).FirstOrDefault();
                if (qkp != null && qkp.PLoai == DungChung.Bien.st_PhanLoaiKP.CanLamSang)
                    _idcd = _IDCD;
            }
            var par = (from bn in _Data.BenhNhans
                       join cls in _Data.CLS.Where(p => _idcd > 0 ? true : p.IdCLS == _IDCLS) on bn.MaBNhan equals cls.MaBNhan
                       join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                       join chidinh in _Data.ChiDinhs.Where(p => _idcd > 0 ? p.IDCD == _idcd : true) on cls.IdCLS equals chidinh.IdCLS
                       join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                       join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                       join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                       join bnkb in _Data.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                       where bn.MaBNhan == _mabn
                       select new { bnkb.ChanDoanBD, kp.IsDongY, cls.CapCuu, cls.ChanDoan, chidinh.Status, bn.NgaySinh, bn.ThangSinh, chidinh.GhiChu, cls.MaKPth, cls.IdCLS, bn.DTuong, bn.NamSinh, cls.MaCBth, dvct.STT, cls.NgayTH, clsct.KetQua, clsct.DuongDan, clsct.DuongDan2, cls.NgayThang, cls.MaKP, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, chidinh.ChiDinh1, chidinh.KetLuan, dv.TenDV, chidinh.LoiDan, clsct.KetQua_Rtf }).ToList();
            int _makp = 0;
            string _tendv = "";
            if (par.Count > 0)
            {
                _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                _tendv = par.FirstOrDefault().TenDV;

            }
            if (par.Count > 0)
            {
                _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                if (DungChung.Bien._Visible_CDHA[1] == false)
                {
                    if (par.FirstOrDefault().Status == 1)
                        DungChung.Bien._Visible_CDHA[2] = true;
                    else
                        DungChung.Bien._Visible_CDHA[2] = false;
                }
            }
            switch (_tieunhom)
            {
                #region Nội soi màu
                case "Nội soi":

                    frmIn frm2 = new frmIn();
                    #region 27183
                    if (DungChung.Bien.MaBV == "27183")
                    {
                        BaoCao.Rep_PhieuNoiSoi_Mau_27183 rep2 = new BaoCao.Rep_PhieuNoiSoi_Mau_27183();
                        if (par.Count > 0)
                        {
                            rep2.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            rep2.SoPhieu.Value = _IDCLS;
                            _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            if (par.FirstOrDefault().NgayTH != null)
                                rep2.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value);
                            string macb = par.FirstOrDefault().MaCB;
                            string macbth = par.FirstOrDefault().MaCBth;
                            if (!string.IsNullOrEmpty(macb))
                                rep2.MaCBDT.Value = DungChung.Ham._getTenCB(_Data, macb);
                            if (!string.IsNullOrEmpty(macbth))
                                rep2.Macb.Value = DungChung.Ham._getTenCB(_Data, macbth);
                            rep2.Diachi.Value = par.FirstOrDefault().DChi;
                            rep2.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep2.MaBN.Value = par.FirstOrDefault().MaBNhan;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep2.Gioitinh.Value = "Nam";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep2.Gioitinh.Value = "Nữ";
                            }
                            rep2.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                            rep2.YCKT.Value = par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep2.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            //rep2.hienthiKQ(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                            rep2.KetQua.Value = par.FirstOrDefault().KetQua;
                            rep2.LoiDan.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                        }

                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                        rep2.ChuanDoan.Value = arrThongTinBNKB[1];
                        rep2.Buong.Value = arrThongTinBNKB[2];
                        rep2.Giuong.Value = arrThongTinBNKB[3];
                        rep2.Khoa.Value = arrThongTinBNKB[4];
                        if (par.FirstOrDefault().DuongDan2 != null)
                        { rep2.DuongDan2.Value = par.FirstOrDefault().DuongDan2; }
                        rep2.CreateDocument();
                        frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                        frm2.ShowDialog();
                        return;
                    }
                    #endregion
                    #region 26007,27001 in 4 ảnh nằm ngang
                    if (DungChung.Bien.MaBV == "26007" || DungChung.Bien.MaBV == "27001")
                    {
                        BaoCao.Rep_PhieuNoiSoi_Mau_26007 rep2 = new BaoCao.Rep_PhieuNoiSoi_Mau_26007();

                        rep2.TenPhieu.Value = "PHIẾU NỘI SOI";
                        if (par.Count > 0)
                        {
                            rep2.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            rep2.SoPhieu.Value = _IDCLS;
                            _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            if (par.FirstOrDefault().NgayTH != null)
                                rep2.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value);
                            string macb = par.FirstOrDefault().MaCB;
                            string macbth = par.FirstOrDefault().MaCBth;
                            if (!string.IsNullOrEmpty(macb))
                                rep2.MaCBDT.Value = DungChung.Ham._getTenCB(_Data, macb);
                            if (!string.IsNullOrEmpty(macbth))
                                rep2.Macb.Value = DungChung.Ham._getTenCB(_Data, macbth);
                            rep2.Diachi.Value = par.FirstOrDefault().DChi;
                            rep2.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep2.MaBN.Value = par.FirstOrDefault().MaBNhan;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep2.Gioitinh.Value = "Nam";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep2.Gioitinh.Value = "Nữ";
                            }
                            rep2.YCKT.Value = par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep2.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            //rep2.hienthiKQ(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                            //rep2.KetQua.Value = par.FirstOrDefault().KetQua;
                            rep2.paramLoaiPhieu.Value = "noisoi";
                            rep2.editPhieu(par.FirstOrDefault().KetQua, par.FirstOrDefault().DuongDan2);
                            rep2.LoiDan.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep2.ChuanDoan.Value = arrThongTinBNKB[1];
                            //rep2.Buong.Value = arrThongTinBNKB[2];
                            //rep2.Giuong.Value = arrThongTinBNKB[3];
                            rep2.Khoa.Value = arrThongTinBNKB[4];
                            if (par.FirstOrDefault().DuongDan2 != null)
                            { rep2.DuongDan2.Value = par.FirstOrDefault().DuongDan2; }
                        }
                        rep2.CreateDocument();
                        frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                        frm2.ShowDialog();
                        return;
                    }
                    #endregion
                    #region 30005 4 ảnh 2 trên 2 dưới
                    else if (DungChung.Bien.MaBV == "30005")
                    {
                        BaoCao.Rep_PhieuNoiSoi_Mau_30005 rep2 = new BaoCao.Rep_PhieuNoiSoi_Mau_30005();

                        rep2.TenPhieu.Value = "PHIẾU NỘI SOI";
                        if (par.Count > 0)
                        {
                            rep2.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            rep2.SoPhieu.Value = _IDCLS;
                            _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            if (par.FirstOrDefault().NgayTH != null)
                                rep2.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value);
                            string macb = par.FirstOrDefault().MaCB;
                            string macbth = par.FirstOrDefault().MaCBth;
                            if (!string.IsNullOrEmpty(macb))
                                rep2.MaCBDT.Value = DungChung.Ham._getTenCB(_Data, macb);
                            if (!string.IsNullOrEmpty(macbth))
                                rep2.Macb.Value = DungChung.Ham._getTenCB(_Data, macbth);
                            rep2.Diachi.Value = par.FirstOrDefault().DChi;
                            rep2.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep2.MaBN.Value = par.FirstOrDefault().MaBNhan;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep2.Gioitinh.Value = "Nam";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep2.Gioitinh.Value = "Nữ";
                            }
                            rep2.YCKT.Value = par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep2.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            //rep2.hienthiKQ(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                            //rep2.KetQua.Value = par.FirstOrDefault().KetQua;
                            rep2.paramLoaiPhieu.Value = "noisoi";
                            rep2.editPhieu(par.FirstOrDefault().KetQua, par.FirstOrDefault().DuongDan2);
                            rep2.LoiDan.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep2.ChuanDoan.Value = arrThongTinBNKB[1];
                            //rep2.Buong.Value = arrThongTinBNKB[2];
                            //rep2.Giuong.Value = arrThongTinBNKB[3];
                            rep2.Khoa.Value = arrThongTinBNKB[4];
                            if (par.FirstOrDefault().DuongDan2 != null)
                            { rep2.DuongDan2.Value = par.FirstOrDefault().DuongDan2; }
                        }
                        rep2.CreateDocument();
                        frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                        frm2.ShowDialog();
                        return;
                    }
                    #endregion
                    #region 12001 || 08104
                    if (DungChung.Bien.MaBV == "12001" || DungChung.Bien.MaBV == "08104")
                    {
                        BaoCao.Rep_PhieuNoiSoi_Mau_TD rep2 = new BaoCao.Rep_PhieuNoiSoi_Mau_TD();
                        rep2.TenPhieu.Value = "PHIẾU NỘI SOI";
                        if (par.Count > 0)
                        {
                            rep2.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            rep2.SoPhieu.Value = _IDCLS;
                            _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            if (par.FirstOrDefault().NgayTH != null)
                                rep2.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value);
                            string macb = par.FirstOrDefault().MaCB;
                            string macbth = par.FirstOrDefault().MaCBth;
                            if (!string.IsNullOrEmpty(macb))
                                rep2.MaCBDT.Value = DungChung.Ham._getTenCB(_Data, macb);
                            if (!string.IsNullOrEmpty(macbth))
                                rep2.Macb.Value = DungChung.Ham._getTenCB(_Data, macbth);
                            rep2.Diachi.Value = par.FirstOrDefault().DChi;
                            rep2.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep2.MaBN.Value = par.FirstOrDefault().MaBNhan;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep2.Gioitinh.Value = "Nam";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep2.Gioitinh.Value = "Nữ";
                            }
                            rep2.YCKT.Value = par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep2.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            //rep2.hienthiKQ(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                            //rep2.KetQua.Value = par.FirstOrDefault().KetQua;
                            rep2.paramLoaiPhieu.Value = "noisoi";
                            rep2.editPhieu(par.FirstOrDefault().KetQua, par.FirstOrDefault().DuongDan2);
                            rep2.LoiDan.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, _makp, true);
                            rep2.ChuanDoan.Value = arrThongTinBNKB[1];
                            //rep2.Buong.Value = arrThongTinBNKB[2];
                            //rep2.Giuong.Value = arrThongTinBNKB[3];
                            rep2.Khoa.Value = arrThongTinBNKB[4];
                            if (par.FirstOrDefault().DuongDan2 != null)
                            { rep2.DuongDan2.Value = par.FirstOrDefault().DuongDan2; }
                        }
                        rep2.CreateDocument();
                        frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                        frm2.ShowDialog();
                    }
                    #endregion
                    #region 30009
                    else if (DungChung.Bien.MaBV == "30009")
                    {
                        BaoCao.Rep_PhieuNoiSoi_Mau_30009 rep2 = new BaoCao.Rep_PhieuNoiSoi_Mau_30009();
                        if (par.Count > 0)
                        {
                            rep2.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            rep2.SoPhieu.Value = _IDCLS;
                            _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            if (par.FirstOrDefault().NgayTH != null)
                                rep2.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value);
                            string macb = par.FirstOrDefault().MaCB;
                            string macbth = par.FirstOrDefault().MaCBth;
                            if (!string.IsNullOrEmpty(macb))
                                rep2.MaCBDT.Value = DungChung.Ham._getTenCB(_Data, macb);
                            if (!string.IsNullOrEmpty(macbth))
                                rep2.Macb.Value = DungChung.Ham._getTenCB(_Data, macbth);
                            rep2.Diachi.Value = par.FirstOrDefault().DChi;
                            rep2.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep2.MaBN.Value = par.FirstOrDefault().MaBNhan;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep2.Gioitinh.Value = "Nam";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep2.Gioitinh.Value = "Nữ";
                            }
                            rep2.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                            rep2.YCKT.Value = par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep2.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            //rep2.hienthiKQ(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                            rep2.KetQua.Value = par.FirstOrDefault().KetQua;
                            rep2.LoiDan.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                        }

                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                        rep2.ChuanDoan.Value = arrThongTinBNKB[1];
                        rep2.Buong.Value = arrThongTinBNKB[2];
                        rep2.Giuong.Value = arrThongTinBNKB[3];
                        rep2.Khoa.Value = arrThongTinBNKB[4];
                        if (par.FirstOrDefault().DuongDan2 != null)
                        { rep2.DuongDan2.Value = par.FirstOrDefault().DuongDan2; }
                        rep2.CreateDocument();
                        frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                        frm2.ShowDialog();
                    }
                    #endregion
                    #region 01071,01049,12345,56789
                    else if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                    {
                        if ((_tendv.ToLower().Contains("polyp dạ dày") || _tendv.ToLower().Contains("polyp đại tràng") || _tendv.ToLower().Contains("polyp trực tràng")) && (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297"))
                        {
                            BaoCao.Rep_PhieuNoiSoi_Mau_6Anh rep2 = new BaoCao.Rep_PhieuNoiSoi_Mau_6Anh();
                            if (par.Count > 0)
                            {
                                rep2.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                rep2.SoPhieu.Value = _IDCLS;
                                _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                                if (par.FirstOrDefault().NgayTH != null)
                                    rep2.NgayTT.Value = DungChung.Bien.DiaDanh + ", " + DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value);
                                string macb = par.FirstOrDefault().MaCB;
                                string macbth = par.FirstOrDefault().MaCBth;
                                if (!string.IsNullOrEmpty(macb))
                                    rep2.MaCBDT.Value = _Data.CanBoes.Where(p => p.MaCB == macb).Select(p => p.TenCB).ToList().FirstOrDefault();
                                if (!string.IsNullOrEmpty(macbth))
                                    rep2.Macb.Value = DungChung.Ham._getTenCB(_Data, macbth);
                                rep2.Diachi.Value = par.FirstOrDefault().DChi;
                                rep2.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                rep2.MaBN.Value = par.FirstOrDefault().MaBNhan;
                                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep2.Gioitinh.Value = "Nam";
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep2.Gioitinh.Value = "Nữ";
                                }
                                rep2.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                                rep2.YCKT.Value = par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                                rep2.KetLuan.Value = par.FirstOrDefault().KetLuan;
                                //rep2.hienthiKQ(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                                rep2.KetQua.Value = par.FirstOrDefault().KetQua;
                                rep2.LoiDan.Value = par.FirstOrDefault().LoiDan;
                                if (par.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                    rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                    rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                    rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                    rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                }
                            }
                            //DungChung.Bien.st_TieuNhomRG_ChuyenKhoa
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                            rep2.ChuanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            rep2.Buong.Value = arrThongTinBNKB[2];
                            rep2.Giuong.Value = arrThongTinBNKB[3];
                            rep2.Khoa.Value = arrThongTinBNKB[4];
                            if (par.FirstOrDefault().DuongDan2 != null)
                            { rep2.DuongDan2.Value = par.FirstOrDefault().DuongDan2; }
                            rep2.CreateDocument();
                            frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                            frm2.ShowDialog();
                        }
                        else
                        {
                            BaoCao.Rep_PhieuNoiSoi_Mau_01071 rep2 = new BaoCao.Rep_PhieuNoiSoi_Mau_01071();
                            if (par.Count > 0)
                            {
                                rep2.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                rep2.SoPhieu.Value = _IDCLS;
                                _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                                if (par.FirstOrDefault().NgayTH != null)
                                    rep2.NgayTT.Value = DungChung.Bien.DiaDanh + ", " + DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value);
                                string macb = par.FirstOrDefault().MaCB;
                                string macbth = par.FirstOrDefault().MaCBth;
                                if (!string.IsNullOrEmpty(macb))
                                    rep2.MaCBDT.Value = _Data.CanBoes.Where(p => p.MaCB == macb).Select(p => p.TenCB).ToList().FirstOrDefault();
                                if (!string.IsNullOrEmpty(macbth))
                                    rep2.Macb.Value = DungChung.Ham._getTenCB(_Data, macbth);
                                rep2.Diachi.Value = par.FirstOrDefault().DChi;
                                rep2.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                rep2.MaBN.Value = par.FirstOrDefault().MaBNhan;
                                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep2.Gioitinh.Value = "Nam";
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep2.Gioitinh.Value = "Nữ";
                                }
                                rep2.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                                rep2.YCKT.Value = par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                                rep2.KetLuan.Value = par.FirstOrDefault().KetLuan;
                                //rep2.hienthiKQ(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                                rep2.KetQua.Value = par.FirstOrDefault().KetQua;
                                rep2.LoiDan.Value = par.FirstOrDefault().LoiDan;
                                if (par.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                    rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                    rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                    rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                    rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                }
                            }
                            //DungChung.Bien.st_TieuNhomRG_ChuyenKhoa
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                            rep2.ChuanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            rep2.Buong.Value = arrThongTinBNKB[2];
                            rep2.Giuong.Value = arrThongTinBNKB[3];
                            rep2.Khoa.Value = arrThongTinBNKB[4];
                            if (par.FirstOrDefault().DuongDan2 != null)
                            { rep2.DuongDan2.Value = par.FirstOrDefault().DuongDan2; }
                            rep2.CreateDocument();
                            frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                            frm2.ShowDialog();
                        }
                    }

                    #endregion
                    #region bv khác
                    else
                    {
                        //DungChung.Bien.st_TieuNhomRG_ChuyenKhoa
                        BaoCao.Rep_PhieuNoiSoi_Mau rep2 = new BaoCao.Rep_PhieuNoiSoi_Mau();
                        if (par.Count > 0)
                        {
                            rep2.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            if (DungChung.Bien.MaBV == "27023")
                                rep2.SoPhieu.Value = _so;
                            else
                                rep2.SoPhieu.Value = _IDCLS;
                            _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            if (DungChung.Bien.MaBV != "30010")
                            {
                                if (par.FirstOrDefault().NgayTH != null)
                                    rep2.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value);
                            }
                            else
                            {
                                if (par.FirstOrDefault().NgayThang != null)
                                    rep2.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value);
                                rep2.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value);
                            }


                            string macb = par.FirstOrDefault().MaCB;
                            string macbth = par.FirstOrDefault().MaCBth;
                            if (!string.IsNullOrEmpty(macb))
                                rep2.MaCBDT.Value = DungChung.Ham._getTenCB(_Data, macb);
                            if (!string.IsNullOrEmpty(macbth))
                                rep2.Macb.Value = DungChung.Ham._getTenCB(_Data, macbth);
                            rep2.Diachi.Value = par.FirstOrDefault().DChi;
                            rep2.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep2.MaBN.Value = par.FirstOrDefault().MaBNhan;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep2.Gioitinh.Value = "Nam";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep2.Gioitinh.Value = "Nữ";
                            }
                            rep2.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                            rep2.YCKT.Value = par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep2.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            //rep2.hienthiKQ(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                            if (DungChung.Bien.MaBV != "30372")
                                rep2.KetQua.Value = par.FirstOrDefault().KetQua;
                            else
                            {
                                if (par.FirstOrDefault().KetQua_Rtf == null)
                                    rep2.KetQua.Value = par.FirstOrDefault().KetQua;
                                else
                                    rep2.KetQua.Value = par.FirstOrDefault().KetQua;
                            }
                            rep2.LoiDan.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                        }
                        if (par.FirstOrDefault().IsDongY == true && DungChung.Bien.MaBV == "24297")
                        {
                            rep2.ChuanDoan.Value = DungChung.Ham.GetChanDoanKB_24297(_Data, _mabn);
                        }
                        else
                        {
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                            rep2.ChuanDoan.Value = arrThongTinBNKB[1];
                        }

                        rep2.Buong.Value = arrThongTinBNKB[2];
                        rep2.Giuong.Value = arrThongTinBNKB[3];
                        rep2.Khoa.Value = arrThongTinBNKB[4];
                        if (par.FirstOrDefault().DuongDan2 != null)
                        { rep2.DuongDan2.Value = par.FirstOrDefault().DuongDan2; }
                        rep2.CreateDocument();
                        frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                        frm2.ShowDialog();
                    }

                    #endregion
                    break;
                #endregion
                #region thủ thuật màu
                case "Thủ thuật":

                    frmIn frmtt = new frmIn();
                    BaoCao.Rep_PhieuNoiSoi_Mau repsa = new BaoCao.Rep_PhieuNoiSoi_Mau();
                    int _makptt = 0;

                    if (par.Count > 0)
                    {
                        repsa.TenBN.Value = par.FirstOrDefault().TenBNhan;
                        if (DungChung.Bien.MaBV == "27023")
                            repsa.SoPhieu.Value = _so;
                        else
                            repsa.SoPhieu.Value = _IDCLS;

                        _makptt = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                        if (par.FirstOrDefault().NgayTH != null)
                            repsa.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value);
                        string macb = par.FirstOrDefault().MaCB;
                        string macbth = par.FirstOrDefault().MaCBth;

                        if (!string.IsNullOrEmpty(macb))
                            repsa.MaCBDT.Value = DungChung.Ham._getTenCB(_Data, macb);
                        if (!string.IsNullOrEmpty(macbth))
                            repsa.Macb.Value = DungChung.Ham._getTenCB(_Data, macbth);
                        repsa.Diachi.Value = par.FirstOrDefault().DChi;
                        repsa.Tuoi.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.TinhTuoiBenhNhan(_Data, _mabn) : DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                        repsa.MaBN.Value = par.FirstOrDefault().MaBNhan;
                        int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                        if (gioiTinh == 1)
                        {
                            repsa.Gioitinh.Value = "Nam";
                        }
                        else if (gioiTinh == 0)
                        {
                            repsa.Gioitinh.Value = "Nữ";
                        }
                        repsa.YCKT.Value = par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                        repsa.KetLuan.Value = par.FirstOrDefault().KetLuan;
                        //repsa.hienthiKQ(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                        repsa.KetQua.Value = par.FirstOrDefault().KetQua;
                        repsa.LoiDan.Value = par.FirstOrDefault().LoiDan;
                        if (par.FirstOrDefault().SThe.Length >= 15)
                        {
                            repsa.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                            repsa.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                            repsa.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                            repsa.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                            repsa.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                        }
                    }
                    repsa.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                    if (DungChung.Bien.MaBV == "24297" && par.FirstOrDefault().IsDongY == true)
                    {
                        repsa.ChuanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value);
                    }
                    else
                    {
                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                        repsa.ChuanDoan.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.GetChanDoanKB(_Data, _mabn) : DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                    }

                    repsa.Buong.Value = arrThongTinBNKB[2];
                    repsa.Giuong.Value = arrThongTinBNKB[3];
                    if (DungChung.Bien.MaBV == "20001")
                    {
                        repsa.Khoa.Value = "";
                    }
                    else
                    {
                        repsa.Khoa.Value = arrThongTinBNKB[4];
                    }
                    if (par.FirstOrDefault().DuongDan2 != null)
                    { repsa.DuongDan2.Value = par.FirstOrDefault().DuongDan2; }

                    repsa.CreateDocument();
                    frmtt.prcIN.PrintingSystem = repsa.PrintingSystem;
                    frmtt.ShowDialog();

                    break;
                #endregion

                //duc them 23/3
                #region X quang màu
                case "X-Quang":

                    if (DungChung.Bien.MaBV == "27183")
                    {
                        #region 27183
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm_Mau_27183 rep3 = new BaoCao.repPhieuSieuAm_Mau_27183();
                        int _makp3 = 0;
                        if (par.Count > 0)
                        {
                            rep3.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            if (DungChung.Bien.MaBV == "27023")
                                rep3.SoPhieu.Value = _so;
                            else
                                rep3.SoPhieu.Value = _IDCLS;
                            _makp3 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep3.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep3.Nam.Value = "/";
                            }
                            rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }

                            // rep3.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                            rep3.ChanDoan.Value = arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];
                            rep3.Khoa.Value = arrThongTinBNKB[4];

                            //rep3.Motatonthuong.Value = convertToHTML(Mota.FirstOrDefault().KetQua);
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            if (par.FirstOrDefault().DuongDan2 != null)
                                rep3.paramDuongDan2.Value = par.FirstOrDefault().DuongDan2;


                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua, '|', ':'));
                            //rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                        }//rep3.hienthiKetQua(convertToHTML("|Gan:kích thước không to, nhu mô đậm âm và tăng sáng. Gan phải trong có khối tăng âm ranh giới rõ . \n |Mật:Đường mật trong và ngoài gan không giãn, không sỏi.\n |Thận phải:-Nhu mô đều, kích thước cao, không to",'|',':'));
                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                        #endregion
                    }
                    else if (DungChung.Bien.MaBV == "27001")
                    {
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm_Mau_1Anh_27001 rep3 = new BaoCao.repPhieuSieuAm_Mau_1Anh_27001();
                        int _makp3 = 0;
                        if (par.Count > 0)
                        {
                            if (DungChung.Bien.MaBV == "20001")
                            {
                                rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            }
                            else
                            {
                                rep3.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            }
                            if (DungChung.Bien.MaBV == "27023")
                                rep3.SoPhieu.Value = _so;
                            else
                                rep3.SoPhieu.Value = _IDCLS;
                            _makp3 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep3.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep3.Nam.Value = "/";
                            }
                            rep3.YCKT.Value = "- Chỉ định: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            // rep3.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                            rep3.ChanDoan.Value = arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];

                            rep3.Khoa.Value = arrThongTinBNKB[4];


                            //rep3.Motatonthuong.Value = convertToHTML(Mota.FirstOrDefault().KetQua);
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            if (par.FirstOrDefault().DuongDan2 != null)
                                rep3.paramDuongDan2.Value = par.FirstOrDefault().DuongDan2;


                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            //rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua, '|', ':'));
                            rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua, '|', ':'));
                            //rep3.kl.Value = QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua, '|', ':');
                            //rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                        }//rep3.hienthiKetQua(convertToHTML("|Gan:kích thước không to, nhu mô đậm âm và tăng sáng. Gan phải trong có khối tăng âm ranh giới rõ . \n |Mật:Đường mật trong và ngoài gan không giãn, không sỏi.\n |Thận phải:-Nhu mô đều, kích thước cao, không to",'|',':'));


                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                    }
                    else
                    {
                        _gettendv = 1;
                        #region BV khác
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm_Mau rep3 = new BaoCao.repPhieuSieuAm_Mau();
                        int _makp3 = 0;
                        rep3.xrLabel10.Text = "PHIẾU X-QUANG";
                        rep3.lab19.Text = "Hình ảnh X-Quang";
                        if (par.Count > 0)
                        {
                            //if (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "30303")
                            //{
                            rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            //}
                            //else
                            //{
                            //    rep3.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            //}
                            if (DungChung.Bien.MaBV == "27023")
                                rep3.SoPhieu.Value = _so;
                            else
                                rep3.SoPhieu.Value = _IDCLS;
                            _makp3 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.TinhTuoiBenhNhan(_Data, _mabn) : DungChung.Bien.MaBV == "56789" ? par.FirstOrDefault().NamSinh : DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep3.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep3.Nam.Value = "/";
                            }
                            rep3.YCKT.Value = "- Chỉ định: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            if (par.FirstOrDefault().MaKP != null)
                            {
                                int? mkp = par.FirstOrDefault().MaKP;
                                var kpcd = (from kp in _Data.KPhongs.Where(p => p.MaKP == mkp)
                                            select new { KPCD = kp.TenKP }).ToList();
                                rep3.KhoaCD.Value = kpcd.FirstOrDefault().KPCD;
                            }
                            // rep3.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                            if (DungChung.Bien.MaBV == "24297" && par.FirstOrDefault().IsDongY == true)
                            {
                                rep3.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value);
                            }
                            else
                            {
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                                rep3.ChanDoan.Value = (par.FirstOrDefault().ChanDoanBD != null || par.FirstOrDefault().ChanDoanBD != "") && DungChung.Bien.MaBV == "24272" ? par.FirstOrDefault().ChanDoanBD + ";" : "";
                                rep3.ChanDoan.Value += DungChung.Bien.MaBV == "14018" ? DungChung.Ham.GetChanDoanKB(_Data, _mabn) : DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            }

                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];

                            rep3.Khoa.Value = arrThongTinBNKB[4];


                            //rep3.Motatonthuong.Value = convertToHTML(Mota.FirstOrDefault().KetQua);
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            if (par.FirstOrDefault().DuongDan2 != null)
                                rep3.DuongDan2.Value = par.FirstOrDefault().DuongDan2;


                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            //rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua, '|', ':'));
                            if (DungChung.Bien.MaBV != "30372")
                                rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua, '|', ':'));
                            else
                            {
                                if (par.FirstOrDefault().KetQua_Rtf == null)
                                    rep3.colKetQua.Text = par.FirstOrDefault().KetQua;
                                else
                                    rep3.colKetQua.Text = par.FirstOrDefault().KetQua_Rtf;
                            }

                            //rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                        }//rep3.hienthiKetQua(convertToHTML("|Gan:kích thước không to, nhu mô đậm âm và tăng sáng. Gan phải trong có khối tăng âm ranh giới rõ . \n |Mật:Đường mật trong và ngoài gan không giãn, không sỏi.\n |Thận phải:-Nhu mô đều, kích thước cao, không to",'|',':'));
                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                        #endregion
                    }
                    break;
                #endregion

                #region Điện tim màu
                case "Điện tim":

                    if (DungChung.Bien.MaBV == "27183")
                    {
                        #region 27183
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm_Mau_27183 rep3 = new BaoCao.repPhieuSieuAm_Mau_27183();
                        int _makp3 = 0;
                        if (par.Count > 0)
                        {
                            rep3.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            if (DungChung.Bien.MaBV == "27023")
                                rep3.SoPhieu.Value = _so;
                            else
                                rep3.SoPhieu.Value = _IDCLS;
                            _makp3 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep3.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep3.Nam.Value = "/";
                            }
                            rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            // rep3.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                            rep3.ChanDoan.Value = arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];
                            rep3.Khoa.Value = arrThongTinBNKB[4];

                            //rep3.Motatonthuong.Value = convertToHTML(Mota.FirstOrDefault().KetQua);
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            if (par.FirstOrDefault().DuongDan2 != null)
                                rep3.paramDuongDan2.Value = par.FirstOrDefault().DuongDan2;


                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua, '|', ':'));
                            //rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                        }//rep3.hienthiKetQua(convertToHTML("|Gan:kích thước không to, nhu mô đậm âm và tăng sáng. Gan phải trong có khối tăng âm ranh giới rõ . \n |Mật:Đường mật trong và ngoài gan không giãn, không sỏi.\n |Thận phải:-Nhu mô đều, kích thước cao, không to",'|',':'));
                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                        #endregion
                    }
                    else
                        if (DungChung.Bien.MaBV == "27001")
                    {
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm_Mau_1Anh_27001 rep3 = new BaoCao.repPhieuSieuAm_Mau_1Anh_27001();
                        int _makp3 = 0;
                        if (par.Count > 0)
                        {
                            if (DungChung.Bien.MaBV == "20001")
                            {
                                rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            }
                            else
                            {
                                rep3.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            }
                            if (DungChung.Bien.MaBV == "27023")
                                rep3.SoPhieu.Value = _so;
                            else
                                rep3.SoPhieu.Value = _IDCLS;
                            _makp3 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep3.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep3.Nam.Value = "/";
                            }
                            rep3.YCKT.Value = "- Chỉ định: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            // rep3.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                            rep3.ChanDoan.Value = arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];

                            rep3.Khoa.Value = arrThongTinBNKB[4];


                            //rep3.Motatonthuong.Value = convertToHTML(Mota.FirstOrDefault().KetQua);
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            if (par.FirstOrDefault().DuongDan2 != null)
                                rep3.paramDuongDan2.Value = par.FirstOrDefault().DuongDan2;


                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            //rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua, '|', ':'));
                            rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua, '|', ':'));
                            //rep3.kl.Value = QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua, '|', ':');
                            //rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                        }//rep3.hienthiKetQua(convertToHTML("|Gan:kích thước không to, nhu mô đậm âm và tăng sáng. Gan phải trong có khối tăng âm ranh giới rõ . \n |Mật:Đường mật trong và ngoài gan không giãn, không sỏi.\n |Thận phải:-Nhu mô đều, kích thước cao, không to",'|',':'));
                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                    }
                    #region BV 24297
                    else if (DungChung.Bien.MaBV == "24297")
                    {
                        _gettendv = 1;
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuDienTim_Mau rep3 = new BaoCao.repPhieuDienTim_Mau();
                        int _makp3 = 0;
                        if (par.Count > 0)
                        {
                            rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            if (par.FirstOrDefault().TenDV.ToLower().Contains("lưu huyết não"))
                            {
                                rep3.txtTenPhieu.Text = "PHIẾU LƯU HUYẾT NÃO";
                                rep3.SBDienTim.Visible = false;
                                rep3.SBLuuHN.Visible = true;
                                string[] a = new string[20];
                                if (par.FirstOrDefault().KetQua != null)
                                {
                                    var lhn = par.FirstOrDefault().KetQua.Split(';');
                                    for (int i = 0; i < lhn.Count(); i++)
                                    {
                                        a[i] = lhn[i];
                                    }
                                }
                                rep3.txt01.Text = a[0];
                                rep3.txt02.Text = a[1];
                                rep3.txt03.Text = a[2];
                                rep3.txt04.Text = a[3];
                                rep3.txt05.Text = a[4];
                                rep3.txt06.Text = a[5];
                                rep3.txt07.Text = a[6];
                                rep3.txt08.Text = a[7];
                                rep3.txt09.Text = a[8];
                                rep3.txt10.Text = a[9];
                                rep3.txt11.Text = a[10];
                                rep3.txt12.Text = a[11];
                                rep3.txt13.Text = a[12];
                                rep3.txt14.Text = a[13];
                                rep3.txt15.Text = a[14];
                                rep3.txt16.Text = a[15];
                            }
                            if (DungChung.Bien.MaBV == "27023")
                                rep3.SoPhieu.Value = _so;
                            else
                                rep3.SoPhieu.Value = _IDCLS;
                            _makp3 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            var kpcd = (from kp in _Data.KPhongs.Where(p => p.MaKP == _makp3)
                                        select new { KPCD = kp.TenKP }).ToList();
                            rep3.KhoaCD.Value = kpcd.FirstOrDefault().KPCD;
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.TinhTuoiBenhNhan(_Data, _mabn) : DungChung.Bien.MaBV == "56789" ? par.FirstOrDefault().NamSinh : DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep3.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep3.Nam.Value = "/";
                            }
                            rep3.YCKT.Value = "- Chỉ định: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            // rep3.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                            if (DungChung.Bien.MaBV == "24297" && par.FirstOrDefault().IsDongY == true)
                            {
                                rep3.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value);
                            }
                            else
                            {
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                                rep3.ChanDoan.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.GetChanDoanKB(_Data, _mabn) : DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            }

                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];

                            rep3.Khoa.Value = arrThongTinBNKB[4];


                            //rep3.Motatonthuong.Value = convertToHTML(Mota.FirstOrDefault().KetQua);
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            if (par.FirstOrDefault().DuongDan2 != null)
                                rep3.paramDuongDan2.Value = par.FirstOrDefault().DuongDan2;


                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;

                            //rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                        }//rep3.hienthiKetQua(convertToHTML("|Gan:kích thước không to, nhu mô đậm âm và tăng sáng. Gan phải trong có khối tăng âm ranh giới rõ . \n |Mật:Đường mật trong và ngoài gan không giãn, không sỏi.\n |Thận phải:-Nhu mô đều, kích thước cao, không to",'|',':'));
                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                        #endregion
                    }
                    else
                    {
                        _gettendv = 1;
                        #region BV khác
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm_Mau rep3 = new BaoCao.repPhieuSieuAm_Mau();
                        int _makp3 = 0;
                        rep3.xrLabel10.Text = "Điện tim";
                        rep3.lab19.Text = "Hình ảnh Điện tim";
                        if (par.Count > 0)
                        {
                            //if (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "30303")
                            //{
                            rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            //}
                            //else
                            //{
                            //    rep3.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            //}
                            if (DungChung.Bien.MaBV == "27023")
                                rep3.SoPhieu.Value = _so;
                            else
                                rep3.SoPhieu.Value = _IDCLS;
                            _makp3 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.TinhTuoiBenhNhan(_Data, _mabn) : DungChung.Bien.MaBV == "56789" ? par.FirstOrDefault().NamSinh : DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep3.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep3.Nam.Value = "/";
                            }
                            rep3.YCKT.Value = "- Chỉ định: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            // rep3.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                            if (DungChung.Bien.MaBV == "24297" && par.FirstOrDefault().IsDongY == true)
                            {
                                rep3.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value);
                            }
                            else
                            {
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                                rep3.ChanDoan.Value = (par.FirstOrDefault().ChanDoanBD != null || par.FirstOrDefault().ChanDoanBD != "") && DungChung.Bien.MaBV == "24272" ? par.FirstOrDefault().ChanDoanBD + ";" : "";
                                rep3.ChanDoan.Value += DungChung.Bien.MaBV == "14018" ? DungChung.Ham.GetChanDoanKB(_Data, _mabn) : DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            }

                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];

                            rep3.Khoa.Value = arrThongTinBNKB[4];


                            //rep3.Motatonthuong.Value = convertToHTML(Mota.FirstOrDefault().KetQua);
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            if (par.FirstOrDefault().DuongDan2 != null)
                                rep3.DuongDan2.Value = par.FirstOrDefault().DuongDan2;


                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            //rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua, '|', ':'));
                            if (DungChung.Bien.MaBV != "30372")
                                rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua, '|', ':'));
                            else
                            {
                                if (par.FirstOrDefault().KetQua_Rtf == null)
                                    rep3.colKetQua.Text = par.FirstOrDefault().KetQua;
                                else
                                    rep3.colKetQua.Text = par.FirstOrDefault().KetQua_Rtf;
                            }

                            //rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                        }//rep3.hienthiKetQua(convertToHTML("|Gan:kích thước không to, nhu mô đậm âm và tăng sáng. Gan phải trong có khối tăng âm ranh giới rõ . \n |Mật:Đường mật trong và ngoài gan không giãn, không sỏi.\n |Thận phải:-Nhu mô đều, kích thước cao, không to",'|',':'));
                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                        #endregion
                    }
                    break;
                #endregion

                #region Lưu huyết não
                case "Lưu huyết não":
                    #region BV 24297
                    if (DungChung.Bien.MaBV == "24297")
                    {
                        _gettendv = 1;
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuDienTim_Mau rep3 = new BaoCao.repPhieuDienTim_Mau();
                        int _makp3 = 0;
                        rep3.txtTenPhieu.Text = "PHIẾU LƯU HUYẾT NÃO";
                        rep3.SBDienTim.Visible = false;
                        rep3.SBLuuHN.Visible = true;
                        if (par.Count > 0)
                        {
                            rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            if (par.FirstOrDefault().TenDV.ToLower().Contains("lưu huyết não"))
                            {
                                string[] a = new string[20];
                                if (par.FirstOrDefault().KetQua != null)
                                {
                                    var lhn = par.FirstOrDefault().KetQua.Split(';');
                                    for (int i = 0; i < lhn.Count(); i++)
                                    {
                                        a[i] = lhn[i];
                                    }
                                }
                                rep3.txt01.Text = a[0];
                                rep3.txt02.Text = a[1];
                                rep3.txt03.Text = a[2];
                                rep3.txt04.Text = a[3];
                                rep3.txt05.Text = a[4];
                                rep3.txt06.Text = a[5];
                                rep3.txt07.Text = a[6];
                                rep3.txt08.Text = a[7];
                                rep3.txt09.Text = a[8];
                                rep3.txt10.Text = a[9];
                                rep3.txt11.Text = a[10];
                                rep3.txt12.Text = a[11];
                                rep3.txt13.Text = a[12];
                                rep3.txt14.Text = a[13];
                                rep3.txt15.Text = a[14];
                                rep3.txt16.Text = a[15];
                            }
                            rep3.SoPhieu.Value = _IDCLS;
                            _makp3 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            var kpcd = (from kp in _Data.KPhongs.Where(p => p.MaKP == _makp3)
                                        select new { KPCD = kp.TenKP }).ToList();
                            rep3.KhoaCD.Value = kpcd.FirstOrDefault().KPCD;
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep3.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep3.Nam.Value = "/";
                            }
                            rep3.YCKT.Value = "- Chỉ định: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            rep3.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value);
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];
                            rep3.Khoa.Value = arrThongTinBNKB[4];
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            if (par.FirstOrDefault().DuongDan2 != null)
                                rep3.paramDuongDan2.Value = par.FirstOrDefault().DuongDan2;
                            if (par.FirstOrDefault().NgayThang != null)
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                        }
                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                        #endregion
                    }
                    break;
                #endregion

                #region siêu âm màu
                case "Siêu âm":

                    if (DungChung.Bien.MaBV == "27183")
                    {
                        #region 27183
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm_Mau_27183 rep3 = new BaoCao.repPhieuSieuAm_Mau_27183();
                        int _makp3 = 0;
                        if (par.Count > 0)
                        {
                            rep3.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            if (DungChung.Bien.MaBV == "27023")
                                rep3.SoPhieu.Value = _so;
                            else
                                rep3.SoPhieu.Value = _IDCLS;
                            _makp3 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep3.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep3.Nam.Value = "/";
                            }
                            rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            // rep3.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                            rep3.ChanDoan.Value = arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];
                            rep3.Khoa.Value = arrThongTinBNKB[4];

                            //rep3.Motatonthuong.Value = convertToHTML(Mota.FirstOrDefault().KetQua);
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            if (par.FirstOrDefault().DuongDan2 != null)
                                rep3.paramDuongDan2.Value = par.FirstOrDefault().DuongDan2;


                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua, '|', ':'));
                            //rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                        }//rep3.hienthiKetQua(convertToHTML("|Gan:kích thước không to, nhu mô đậm âm và tăng sáng. Gan phải trong có khối tăng âm ranh giới rõ . \n |Mật:Đường mật trong và ngoài gan không giãn, không sỏi.\n |Thận phải:-Nhu mô đều, kích thước cao, không to",'|',':'));
                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                        #endregion
                    }
                    else if (DungChung.Bien.MaBV == "27001")
                    {
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm_Mau_1Anh_27001 rep3 = new BaoCao.repPhieuSieuAm_Mau_1Anh_27001();
                        int _makp3 = 0;
                        if (par.Count > 0)
                        {
                            if (DungChung.Bien.MaBV == "20001")
                            {
                                rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            }
                            else
                            {
                                rep3.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            }
                            if (DungChung.Bien.MaBV == "27023")
                                rep3.SoPhieu.Value = _so;
                            else
                                rep3.SoPhieu.Value = _IDCLS;
                            _makp3 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep3.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep3.Nam.Value = "/";
                            }
                            rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            // rep3.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                            rep3.ChanDoan.Value = arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];

                            rep3.Khoa.Value = arrThongTinBNKB[4];


                            //rep3.Motatonthuong.Value = convertToHTML(Mota.FirstOrDefault().KetQua);
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            if (par.FirstOrDefault().DuongDan2 != null)
                                rep3.paramDuongDan2.Value = par.FirstOrDefault().DuongDan2;


                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            //rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua, '|', ':'));
                            rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua, '|', ':'));
                            //rep3.kl.Value = QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua, '|', ':');
                            //rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                        }//rep3.hienthiKetQua(convertToHTML("|Gan:kích thước không to, nhu mô đậm âm và tăng sáng. Gan phải trong có khối tăng âm ranh giới rõ . \n |Mật:Đường mật trong và ngoài gan không giãn, không sỏi.\n |Thận phải:-Nhu mô đều, kích thước cao, không to",'|',':'));
                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                    }
                    else
                    {
                        _gettendv = 1;
                        #region BV khác
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm_Mau rep3 = new BaoCao.repPhieuSieuAm_Mau();
                        int _makp3 = 0;
                        if (par.Count > 0)
                        {
                            //if (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "30303")
                            //{
                            rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            //}
                            //else
                            //{
                            //    rep3.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            //}
                            if (DungChung.Bien.MaBV == "27023")
                                rep3.SoPhieu.Value = _so;
                            else
                                rep3.SoPhieu.Value = _IDCLS;
                            _makp3 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;

                            var kpcd = (from kp in _Data.KPhongs.Where(p => p.MaKP == _makp3)
                                        select new { KPCD = kp.TenKP }).ToList();
                            rep3.KhoaCD.Value = kpcd.FirstOrDefault().KPCD;

                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.TinhTuoiBenhNhan(_Data, _mabn) : DungChung.Bien.MaBV == "56789" ? par.FirstOrDefault().NamSinh : DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep3.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep3.Nam.Value = "/";
                            }
                            if (DungChung.Bien.MaBV == "24297")
                            {
                                rep3.YCKT.Value = "- Chỉ định: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                                rep3.xrLabel10.Text = "PHIẾU SIÊU ÂM";
                            }
                            else
                                rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            // rep3.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                            if (DungChung.Bien.MaBV == "24297" && par.FirstOrDefault().IsDongY == true)
                            {
                                rep3.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value);
                            }
                            else
                            {
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                                rep3.ChanDoan.Value = (par.FirstOrDefault().ChanDoanBD != null || par.FirstOrDefault().ChanDoanBD != "") && DungChung.Bien.MaBV == "24272" ? par.FirstOrDefault().ChanDoanBD + ";" : "";
                                rep3.ChanDoan.Value += DungChung.Bien.MaBV == "14018" ? DungChung.Ham.GetChanDoanKB(_Data, _mabn) : DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                                rep3.ChanDoan.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.GetChanDoanKB(_Data, _mabn) : DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            }

                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];

                            rep3.Khoa.Value = arrThongTinBNKB[4];


                            //rep3.Motatonthuong.Value = convertToHTML(Mota.FirstOrDefault().KetQua);
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            if (par.FirstOrDefault().DuongDan2 != null)
                                rep3.DuongDan2.Value = par.FirstOrDefault().DuongDan2;


                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCB;
                            rep3.MacbTH.Value = par.FirstOrDefault().MaCBth;
                            //rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua, '|', ':'));
                            if (DungChung.Bien.MaBV != "30372")
                                rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua, '|', ':'));
                            else
                            {
                                if (par.FirstOrDefault().KetQua_Rtf == null)
                                    rep3.colKetQua.Text = par.FirstOrDefault().KetQua;
                                else
                                    rep3.colKetQua.Text = par.FirstOrDefault().KetQua_Rtf;
                            }

                            //rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                        }//rep3.hienthiKetQua(convertToHTML("|Gan:kích thước không to, nhu mô đậm âm và tăng sáng. Gan phải trong có khối tăng âm ranh giới rõ . \n |Mật:Đường mật trong và ngoài gan không giãn, không sỏi.\n |Thận phải:-Nhu mô đều, kích thước cao, không to",'|',':'));
                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                        #endregion
                    }
                    break;
                #endregion

                case "Siêu âm màu":
                    #region siêu âm màu
                    if (DungChung.Bien.MaBV == "27183")
                    {
                        #region 27183
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm_Mau_27183 rep3 = new BaoCao.repPhieuSieuAm_Mau_27183();
                        int _makp3 = 0;
                        if (par.Count > 0)
                        {
                            rep3.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            if (DungChung.Bien.MaBV == "27023")
                                rep3.SoPhieu.Value = _so;
                            else
                                rep3.SoPhieu.Value = _IDCLS;
                            _makp3 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep3.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep3.Nam.Value = "/";
                            }
                            rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            // rep3.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                            rep3.ChanDoan.Value = arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];
                            rep3.Khoa.Value = arrThongTinBNKB[4];

                            //rep3.Motatonthuong.Value = convertToHTML(Mota.FirstOrDefault().KetQua);
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            if (par.FirstOrDefault().DuongDan2 != null)
                                rep3.paramDuongDan2.Value = par.FirstOrDefault().DuongDan2;


                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua, '|', ':'));
                            //rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                        }//rep3.hienthiKetQua(convertToHTML("|Gan:kích thước không to, nhu mô đậm âm và tăng sáng. Gan phải trong có khối tăng âm ranh giới rõ . \n |Mật:Đường mật trong và ngoài gan không giãn, không sỏi.\n |Thận phải:-Nhu mô đều, kích thước cao, không to",'|',':'));
                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                        #endregion
                    }
                    else if (DungChung.Bien.MaBV == "27001")
                    {
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm_Mau_1Anh_27001 rep3 = new BaoCao.repPhieuSieuAm_Mau_1Anh_27001();
                        int _makp3 = 0;
                        if (par.Count > 0)
                        {
                            if (DungChung.Bien.MaBV == "20001")
                            {
                                rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            }
                            else
                            {
                                rep3.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            }
                            if (DungChung.Bien.MaBV == "27023")
                                rep3.SoPhieu.Value = _so;
                            else
                                rep3.SoPhieu.Value = _IDCLS;
                            _makp3 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep3.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep3.Nam.Value = "/";
                            }
                            rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            // rep3.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                            rep3.ChanDoan.Value = arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];

                            rep3.Khoa.Value = arrThongTinBNKB[4];


                            //rep3.Motatonthuong.Value = convertToHTML(Mota.FirstOrDefault().KetQua);
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            if (par.FirstOrDefault().DuongDan2 != null)
                                rep3.paramDuongDan2.Value = par.FirstOrDefault().DuongDan2;


                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            //rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua, '|', ':'));
                            rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua, '|', ':'));
                            //rep3.kl.Value = QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua, '|', ':');
                            //rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                        }//rep3.hienthiKetQua(convertToHTML("|Gan:kích thước không to, nhu mô đậm âm và tăng sáng. Gan phải trong có khối tăng âm ranh giới rõ . \n |Mật:Đường mật trong và ngoài gan không giãn, không sỏi.\n |Thận phải:-Nhu mô đều, kích thước cao, không to",'|',':'));
                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                    }
                    else
                    {
                        #region BV khác
                        frmIn frm3 = new frmIn();
                        BaoCao.repPhieuSieuAm_Mau rep3 = new BaoCao.repPhieuSieuAm_Mau();
                        int _makp3 = 0;
                        if (par.Count > 0)
                        {
                            if (DungChung.Bien.MaBV == "20001" || DungChung.Bien.MaBV == "30303")
                            {
                                rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            }
                            else
                            {
                                rep3.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            }
                            if (DungChung.Bien.MaBV == "27023")
                                rep3.SoPhieu.Value = _so;
                            else
                                rep3.SoPhieu.Value = _IDCLS;
                            _makp3 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep3.TuoiBN.Value = DungChung.Bien.MaBV == "56789" ? par.FirstOrDefault().NamSinh : DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep3.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep3.Nam.Value = "/";
                            }
                            rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            // rep3.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                            rep3.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];

                            rep3.Khoa.Value = arrThongTinBNKB[4];


                            //rep3.Motatonthuong.Value = convertToHTML(Mota.FirstOrDefault().KetQua);
                            if (par.FirstOrDefault().DuongDan != null)
                                rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                            if (par.FirstOrDefault().DuongDan2 != null)
                                rep3.DuongDan2.Value = par.FirstOrDefault().DuongDan2;


                            if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            if (par.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                            //rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua, '|', ':'));
                            if (DungChung.Bien.MaBV != "30372")
                                rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua, '|', ':'));
                            else
                            {
                                if (par.FirstOrDefault().KetQua_Rtf == null)
                                    rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua, '|', ':'));
                                else
                                    rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua_Rtf, '|', ':'));
                            }
                            //rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                        }//rep3.hienthiKetQua(convertToHTML("|Gan:kích thước không to, nhu mô đậm âm và tăng sáng. Gan phải trong có khối tăng âm ranh giới rõ . \n |Mật:Đường mật trong và ngoài gan không giãn, không sỏi.\n |Thận phải:-Nhu mô đều, kích thước cao, không to",'|',':'));
                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        frm3.ShowDialog();
                        #endregion
                    }
                    break;
                #endregion

                case "Siêu âm ( Doppler )":
                    #region Siêu âm ( Doppler )
                    frmIn frm31 = new frmIn();
                    BaoCao.repPhieuSieuAm_Mau rep31 = new BaoCao.repPhieuSieuAm_Mau();
                    rep31.labTieuDe.Text = "PHIẾU SIÊU ÂM DOPPLER MÀU";
                    int _makp4 = 0;
                    if (par.Count > 0)
                    {
                        rep31.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                        if (DungChung.Bien.MaBV == "27023")
                            rep31.SoPhieu.Value = _so;
                        else
                            rep31.SoPhieu.Value = _IDCLS;
                        _makp4 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                        rep31.MaCBDT.Value = par.FirstOrDefault().MaCB;
                        rep31.DiaChi.Value = par.FirstOrDefault().DChi;
                        rep31.TuoiBN.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                        rep31.SoBHYT.Value = par.FirstOrDefault().SThe;
                        int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                        if (gioiTinh == 1)
                        {
                            rep31.Nu.Value = "/";
                        }
                        else if (gioiTinh == 0)
                        {
                            rep31.Nam.Value = "/";
                        }
                        rep31.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                        rep31.KetLuan.Value = par.FirstOrDefault().KetLuan;
                        rep31.LDBS.Value = par.FirstOrDefault().LoiDan;
                        if (par.FirstOrDefault().SThe.Length >= 15)
                        {
                            rep31.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                            rep31.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                            rep31.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                            rep31.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                            rep31.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                        }
                        // rep3.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                        if (DungChung.Bien.MaBV == "24297" && par.FirstOrDefault().IsDongY == true)
                        {
                            rep31.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value);
                        }
                        else
                        {
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                            rep31.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            if (DungChung.Bien.MaBV == "24272")
                            {
                                rep31.ChanDoan.Value = par.FirstOrDefault().ChanDoanBD;
                            }
                        }

                        rep31.Buong.Value = arrThongTinBNKB[2];
                        rep31.Giuong.Value = arrThongTinBNKB[3];

                        rep31.Khoa.Value = arrThongTinBNKB[4];


                        //rep3.Motatonthuong.Value = convertToHTML(Mota.FirstOrDefault().KetQua);
                        if (par.FirstOrDefault().DuongDan != null)
                            rep31.DuongDan.Value = par.FirstOrDefault().DuongDan;
                        if (par.FirstOrDefault().DuongDan2 != null)
                            rep31.DuongDan2.Value = par.FirstOrDefault().DuongDan2;


                        if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                            rep31.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                        else
                            rep31.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                        if (par.FirstOrDefault().NgayTH != null)
                            rep31.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                        else
                            rep31.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                        rep31.Macb.Value = par.FirstOrDefault().MaCBth;
                        if (DungChung.Bien.MaBV != "30372")
                            rep31.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua + "</br>" + par.FirstOrDefault().GhiChu, '|', ':'));
                        else
                        {
                            if (par.FirstOrDefault().KetQua_Rtf == null)
                            {
                                rep31.KetQuaSA.Value = par.FirstOrDefault().KetQua + "\n" + par.FirstOrDefault().GhiChu;
                                //rep31.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua + "</br>" + par.FirstOrDefault().GhiChu, '|', ':'));
                            }
                            else
                            {
                                rep31.KetQuaSA.Value = par.FirstOrDefault().KetQua + "\n" + par.FirstOrDefault().GhiChu;
                                //rep31.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua_Rtf + "</br>" + par.FirstOrDefault().GhiChu, '|', ':'));

                            }
                        }
                        //if (DungChung.Bien.MaBV == "27183")
                        //    rep31.hienthiKetQua(par.FirstOrDefault().KetQua + "</br>" + par.FirstOrDefault().GhiChu);
                        //else
                        //    rep31.hienthiKetQua(par.FirstOrDefault().KetQua);
                        //rep31.KL.Value = par.FirstOrDefault().KetQua;
                        //rep31.hienthiKetQua(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                    }//rep31.hienthiKetQua(convertToHTML("|Gan:kích thước không to, nhu mô đậm âm và tăng sáng. Gan phải trong có khối tăng âm ranh giới rõ . \n |Mật:Đường mật trong và ngoài gan không giãn, không sỏi.\n |Thận phải:-Nhu mô đều, kích thước cao, không to",'|',':'));
                    rep31.CreateDocument();
                    frm31.prcIN.PrintingSystem = rep31.PrintingSystem;
                    frm31.ShowDialog();
                    break;
                #endregion
                case "Nội soi Tai-Mũi-Họng"://Nội soi Tai-Mũi-Họng
                    #region Nội soi Tai-Mũi-Họng

                    if (DungChung.Bien.MaBV != "02005")
                    {
                        #region  12001
                        if (DungChung.Bien.MaBV == "12001")
                        {

                            frmIn frm6 = new frmIn();
                            BaoCao.Rep_PhieuNoiSoi_Mau_TD rep2 = new BaoCao.Rep_PhieuNoiSoi_Mau_TD();
                            int dem = 0;
                            string tenphieu = "PHIẾU NỘI SOI";
                            if (par.Count > 0)
                            {
                                rep2.TenBN.Value = par.FirstOrDefault().TenBNhan;
                                rep2.SoPhieu.Value = _IDCLS;
                                string[] arrKQ = QLBV_Library.QLBV_Ham.LayChuoi('|', par.FirstOrDefault().KetQua);
                                string[] arrDD = QLBV_Library.QLBV_Ham.LayChuoi('|', par.FirstOrDefault().DuongDan);
                                if (!String.IsNullOrEmpty(arrKQ[0]) || !String.IsNullOrEmpty(arrKQ[1]) || !String.IsNullOrEmpty(arrDD[0]) || !String.IsNullOrEmpty(arrDD[1]))
                                {
                                    dem++;
                                    tenphieu = "PHIẾU NỘI SOI TAI";
                                }
                                if (!String.IsNullOrEmpty(arrKQ[2]) || !String.IsNullOrEmpty(arrKQ[3]) || !String.IsNullOrEmpty(arrDD[2]) || !String.IsNullOrEmpty(arrDD[3]))
                                {
                                    dem++;
                                    tenphieu = "PHIẾU NỘI SOI MŨI";
                                }
                                if (!String.IsNullOrEmpty(arrKQ[4]) || !String.IsNullOrEmpty(arrKQ[5]) || !String.IsNullOrEmpty(arrDD[4]) || !String.IsNullOrEmpty(arrDD[5]))
                                {
                                    dem++;
                                    tenphieu = "PHIẾU NỘI SOI HỌNG - HẠ HỌNG";
                                }
                            }
                            if (dem > 1)
                            {
                                int _mkp = 0;
                                rep2.TenPhieu.Value = "PHIẾU NỘI SOI TAI - MŨI - HỌNG";
                                BaoCao.Rep_PhieuNoiSoiTMH_12001 repTMH = new BaoCao.Rep_PhieuNoiSoiTMH_12001();
                                if (par.Count > 0)
                                {
                                    _mkp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                                    repTMH.paramHoTen.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    repTMH.paramDiaChi.Value = par.FirstOrDefault().DChi;
                                    repTMH.IDCLS.Value = par.FirstOrDefault().IdCLS;
                                    repTMH.paramGioiTinh.Value = par.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                                    repTMH.paramSThe.Value = par.FirstOrDefault().SThe;
                                    repTMH.paramDoiTuong.Value = par.FirstOrDefault().DTuong;
                                    repTMH.paramTuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                    repTMH.paramKetLuan.Value = par.FirstOrDefault().KetLuan;
                                    repTMH.paramPhieuSo.Value = par.FirstOrDefault().IdCLS;
                                    if (par.FirstOrDefault().NgayThang != null)
                                    {
                                        repTMH.paramNgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    }
                                    else
                                        repTMH.paramNgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        repTMH.paramNgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        repTMH.paramNgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                    int _makpth = 0;
                                    if (par.FirstOrDefault().MaKPth != null)
                                    {
                                        _makpth = par.FirstOrDefault().MaKPth.Value;
                                    }
                                    var kp = _Data.KPhongs.Where(p => p.MaKP == _makpth).ToList();
                                    if (kp.Count > 0)
                                        repTMH.paramPhongKham.Value = kp.FirstOrDefault().TenKP.ToUpper();
                                    string a = "", b = ""; ;
                                    a = par.FirstOrDefault().MaCB;
                                    b = par.FirstOrDefault().MaCBth;
                                    var tenCB = (from c in _Data.CanBoes
                                                 select c).ToList();
                                    if (!string.IsNullOrEmpty(a))
                                        repTMH.paramCanBoDT.Value = DungChung.Ham._getTenCB(_Data, a);
                                    if (!string.IsNullOrEmpty(b))
                                        repTMH.BSTH.Value = DungChung.Ham._getTenCB(_Data, b);
                                }
                                if (par.Count > 0)
                                {
                                    string ddan = "", ketqua = "";
                                    if (par.FirstOrDefault().DuongDan2 != null)
                                        ddan = par.FirstOrDefault().DuongDan2;
                                    if (par.FirstOrDefault().KetQua != null)
                                        ketqua = par.FirstOrDefault().KetQua;
                                    repTMH.hienthi(ketqua, ddan);
                                }
                                var kb4 = (from kb2 in _Data.BNKBs.Where(p => p.MaBNhan == _mabn).Where(p => p.MaKP == _mkp) select new { kb2.IDKB, kb2.ChanDoan, kb2.BenhKhac }).OrderByDescending(p => p.IDKB).ToList();
                                if (kb4.Count > 0)
                                    repTMH.paramChanDoan.Value = kb4.FirstOrDefault().ChanDoan + "/" + kb4.FirstOrDefault().BenhKhac;
                                repTMH.CreateDocument();
                                frm6.prcIN.PrintingSystem = repTMH.PrintingSystem;
                                frm6.ShowDialog();
                            }
                            else
                            {
                                rep2.TenPhieu.Value = tenphieu;
                                if (par.Count > 0)
                                {
                                    _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                                    if (par.FirstOrDefault().NgayTH != null)
                                        rep2.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value);
                                    string macb = par.FirstOrDefault().MaCB;
                                    string macbth = par.FirstOrDefault().MaCBth;
                                    if (!string.IsNullOrEmpty(macb))
                                        rep2.MaCBDT.Value = DungChung.Ham._getTenCB(_Data, macb);
                                    if (!string.IsNullOrEmpty(macbth))
                                        rep2.Macb.Value = DungChung.Ham._getTenCB(_Data, macbth);
                                    rep2.Diachi.Value = par.FirstOrDefault().DChi;
                                    rep2.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                    rep2.MaBN.Value = par.FirstOrDefault().MaBNhan;
                                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep2.Gioitinh.Value = "Nam";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep2.Gioitinh.Value = "Nữ";
                                    }
                                    rep2.YCKT.Value = par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                                    rep2.KetLuan.Value = par.FirstOrDefault().KetLuan;
                                    //rep2.hienthiKQ(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                                    rep2.LoiDan.Value = par.FirstOrDefault().LoiDan;
                                    if (par.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                        rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                        rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                        rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                        rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                    }
                                    rep2.paramLoaiPhieu.Value = "nstmh";
                                    rep2.editPhieu(par.FirstOrDefault().KetQua, par.FirstOrDefault().DuongDan2);
                                }
                                var kbQ4 = (from kb4 in _Data.BNKBs.Where(p => p.MaBNhan == _mabn).Where(p => p.MaKP == _makp) select new { kb4.MaKPdt, kb4.Buong, kb4.Giuong, kb4.ChanDoan, kb4.BenhKhac }).ToList();
                                if (kbQ4.Count > 0)
                                {
                                    rep2.ChuanDoan.Value = kbQ4.FirstOrDefault().ChanDoan + " (" + kbQ4.FirstOrDefault().BenhKhac + ")";
                                    //string _makp = _Data.CLS.Where(a => a.MaKP != null).Select(a => a.MaKP).FirstOrDefault().ToString();
                                    var qkp = (from kp in _Data.KPhongs
                                               where (kp.MaKP == (_makp))
                                               select new { kp.TenKP }).ToList();
                                    if (qkp.Count > 0)
                                    {
                                        rep2.Khoa.Value = qkp.FirstOrDefault().TenKP;
                                    }
                                }

                                rep2.CreateDocument();
                                frm6.prcIN.PrintingSystem = rep2.PrintingSystem;
                                frm6.ShowDialog();
                            }
                        }
                        #endregion
                        else if (DungChung.Bien.MaBV == "30009" || DungChung.Bien.MaBV == "30005" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                        {
                            frmInPhieuNS_TMH frm = new frmInPhieuNS_TMH(_IDCLS, _mabn);
                            frm.ShowDialog();
                        }
                        else if (DungChung.Bien.MaBV == "27183" || DungChung.Bien.MaBV == "27194")
                        {

                            int _mkp4 = 0;
                            frmIn frm4 = new frmIn();
                            BaoCao.Rep_PhieuNoiSoiTMH_27183 rep4 = new BaoCao.Rep_PhieuNoiSoiTMH_27183();
                            if (par.Count > 0)
                            {
                                _mkp4 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                                if (DungChung.Bien.MaBV == "27194")
                                {
                                    rep4.TenCQ.Text = DungChung.Bien.TenCQ.ToUpper();
                                    rep4.DC.Text = "ĐC: " + DungChung.Bien.DiaChi;
                                    rep4.SDT.Text = "Số điện thoại: " + DungChung.Bien.SDTCQ;
                                }
                                rep4.paramHoTen.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                rep4.paramDiaChi.Value = par.FirstOrDefault().DChi;
                                rep4.IDCLS.Value = _IDCLS;

                                rep4.paramGioiTinh.Value = par.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                                rep4.paramSThe.Value = par.FirstOrDefault().SThe;
                                rep4.paramDoiTuong.Value = par.FirstOrDefault().DTuong;
                                rep4.paramTuoi.Value = par.FirstOrDefault().NamSinh;//DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                rep4.paramKetLuan.Value = par.FirstOrDefault().KetLuan;
                                rep4.paraLoiDan.Value = par.FirstOrDefault().LoiDan;
                                rep4.paramPhieuSo.Value = par.FirstOrDefault().IdCLS;
                                if (par.FirstOrDefault().NgayThang != null)
                                {
                                    rep4.paramNgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                }
                                else
                                    rep4.paramNgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                if (par.FirstOrDefault().NgayTH != null)
                                    rep4.paramNgayTH.Value = DungChung.Bien.DiaDanh + ", " + DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep4.paramNgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                int _makpth = 0;
                                if (par.FirstOrDefault().MaKPth != null)
                                {
                                    _makpth = par.FirstOrDefault().MaKPth.Value;

                                }
                                var kp = _Data.KPhongs.Where(p => p.MaKP == _makpth).ToList();
                                if (kp.Count > 0)
                                    rep4.paramPhongKham.Value = kp.FirstOrDefault().TenKP.ToUpper();
                                string a = "", b = ""; ; a = par.FirstOrDefault().MaCB;
                                b = par.FirstOrDefault().MaCBth;

                                if (!string.IsNullOrEmpty(a))
                                    rep4.paramCanBoDT.Value = DungChung.Ham._getTenCB(_Data, a).ToUpper();
                                if (!string.IsNullOrEmpty(b))
                                    rep4.BSTH.Value = DungChung.Ham._getTenCB(_Data, b).ToUpper();
                                string ddan = "", ketqua = "";
                                if (par.FirstOrDefault().DuongDan2 != null)
                                    ddan = par.FirstOrDefault().DuongDan2;
                                if (par.FirstOrDefault().KetQua != null)
                                    ketqua = par.FirstOrDefault().KetQua;
                                rep4.hienthi(ketqua, ddan);
                            }
                            var kb4 = (from kb2 in _Data.BNKBs.Where(p => p.MaBNhan == _mabn).Where(p => p.MaKP == _mkp4) select new { kb2.IDKB, kb2.ChanDoan, kb2.BenhKhac }).OrderByDescending(p => p.IDKB).ToList();
                            if (kb4.Count > 0)
                                rep4.paramChanDoan.Value = kb4.FirstOrDefault().ChanDoan + "/" + kb4.FirstOrDefault().BenhKhac;

                            rep4.CreateDocument();
                            frm4.prcIN.PrintingSystem = rep4.PrintingSystem;
                            frm4.ShowDialog();
                        }
                        else if (DungChung.Bien.MaBV == "30007")
                        {
                            int _mkp4 = 0;
                            frmIn frm4 = new frmIn();
                            BaoCao.Rep_PhieuNoiSoiTMH_30007 rep4 = new BaoCao.Rep_PhieuNoiSoiTMH_30007();
                            if (par.Count > 0)
                            {
                                _mkp4 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                                rep4.paramHoTen.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                rep4.paramDiaChi.Value = par.FirstOrDefault().DChi.ToUpper().ToString();
                                if (DungChung.Bien.MaBV == "27023")
                                    rep4.IDCLS.Value = _so;
                                else
                                    rep4.IDCLS.Value = _IDCLS;
                                //rep4.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                //rep4.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                rep4.paramGioiTinh.Value = par.FirstOrDefault().GTinh == 1 ? "NAM" : "NỮ";
                                rep4.paramSThe.Value = par.FirstOrDefault().SThe;
                                rep4.paramDoiTuong.Value = par.FirstOrDefault().DTuong;
                                rep4.paramTuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                rep4.paramKetLuan.Value = par.FirstOrDefault().KetLuan.ToUpper().ToString();
                                rep4.paraLoiDan.Value = par.FirstOrDefault().LoiDan.ToUpper().ToString();
                                rep4.paramPhieuSo.Value = par.FirstOrDefault().IdCLS;
                                rep4.Chidinh.Value = par.FirstOrDefault().TenDV;
                                if (par.FirstOrDefault().NgayThang != null)
                                {
                                    rep4.paramNgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                }
                                else
                                    rep4.paramNgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                if (par.FirstOrDefault().NgayTH != null)
                                    rep4.paramNgayTH.Value = DungChung.Bien.DiaDanh + ", " + DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, 1);
                                else
                                    rep4.paramNgayTH.Value = DungChung.Bien.DiaDanh + ", ngày ..... tháng ..... năm ......";
                                int _makpth = 0;
                                if (par.FirstOrDefault().MaKPth != null)
                                {
                                    _makpth = par.FirstOrDefault().MaKPth.Value;

                                }
                                var kp = _Data.KPhongs.Where(p => p.MaKP == _makpth).ToList();
                                if (kp.Count > 0)
                                    rep4.paramPhongKham.Value = kp.FirstOrDefault().TenKP.ToUpper();
                                string a = "", b = ""; ; a = par.FirstOrDefault().MaCB;
                                b = par.FirstOrDefault().MaCBth;

                                if (!string.IsNullOrEmpty(a))
                                    rep4.paramCanBoDT.Value = DungChung.Ham._getTenCB(_Data, a).ToUpper();
                                if (!string.IsNullOrEmpty(b))
                                    rep4.BSTH.Value = DungChung.Ham._getTenCB(_Data, b).ToUpper();
                                string ddan = "", ketqua = "";
                                if (par.FirstOrDefault().DuongDan2 != null)
                                    ddan = par.FirstOrDefault().DuongDan2;
                                if (par.FirstOrDefault().KetQua != null)
                                    ketqua = par.FirstOrDefault().KetQua;
                                rep4.hienthi(ketqua, ddan);
                            }
                            var kb4 = (from kb2 in _Data.BNKBs.Where(p => p.MaBNhan == _mabn).Where(p => p.MaKP == _mkp4) select new { kb2.IDKB, kb2.ChanDoan, kb2.BenhKhac }).OrderByDescending(p => p.IDKB).ToList();
                            if (kb4.Count > 0)
                                rep4.paramChanDoan.Value = DungChung.Ham.FreshString(kb4.FirstOrDefault().ChanDoan.ToString()) + "/" + DungChung.Ham.FreshString(kb4.FirstOrDefault().BenhKhac);

                            rep4.CreateDocument();
                            frm4.prcIN.PrintingSystem = rep4.PrintingSystem;
                            frm4.ShowDialog();
                        }
                        #region bv 30350
                        else if (DungChung.Bien.MaBV == "30350")
                        {

                            int _mkp4 = 0;
                            frmIn frm4 = new frmIn();
                            BaoCao.Rep_PhieuNoiSoiTMH_30350 rep4 = new BaoCao.Rep_PhieuNoiSoiTMH_30350();
                            if (par.Count > 0)
                            {
                                _mkp4 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                                rep4.paramHoTen.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                rep4.paramDiaChi.Value = par.FirstOrDefault().DChi;
                                if (DungChung.Bien.MaBV == "27023")
                                    rep4.IDCLS.Value = _so;
                                else
                                    rep4.IDCLS.Value = _IDCLS;
                                rep4.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                rep4.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                rep4.paramGioiTinh.Value = par.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                                rep4.paramSThe.Value = par.FirstOrDefault().SThe;
                                rep4.paramDoiTuong.Value = par.FirstOrDefault().DTuong;
                                rep4.paramTuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                rep4.paramKetLuan.Value = par.FirstOrDefault().KetLuan;
                                rep4.paraLoiDan.Value = par.FirstOrDefault().LoiDan;
                                rep4.paramPhieuSo.Value = par.FirstOrDefault().IdCLS;
                                if (par.FirstOrDefault().NgayThang != null)
                                {
                                    rep4.paramNgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                }
                                else
                                    rep4.paramNgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                if (par.FirstOrDefault().NgayTH != null)
                                    rep4.paramNgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep4.paramNgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                int _makpth = 0;
                                if (par.FirstOrDefault().MaKPth != null)
                                {
                                    _makpth = par.FirstOrDefault().MaKPth.Value;

                                }
                                var kp = _Data.KPhongs.Where(p => p.MaKP == _makpth).ToList();
                                if (kp.Count > 0)
                                    rep4.paramPhongKham.Value = kp.FirstOrDefault().TenKP.ToUpper();
                                string a = "", b = ""; ; a = par.FirstOrDefault().MaCB;
                                b = par.FirstOrDefault().MaCBth;

                                if (!string.IsNullOrEmpty(a))
                                    rep4.paramCanBoDT.Value = DungChung.Ham._getTenCB(_Data, a).ToUpper();
                                if (!string.IsNullOrEmpty(b))
                                    rep4.BSTH.Value = DungChung.Ham._getTenCB(_Data, b).ToUpper();
                                string ddan = "", ketqua = "";
                                if (par.FirstOrDefault().DuongDan2 != null)
                                    ddan = par.FirstOrDefault().DuongDan2;
                                if (par.FirstOrDefault().KetQua != null)
                                    ketqua = par.FirstOrDefault().KetQua;
                                rep4.hienthi(ketqua, ddan);
                            }
                            var kb4 = (from kb2 in _Data.BNKBs.Where(p => p.MaBNhan == _mabn).Where(p => p.MaKP == _mkp4) select new { kb2.IDKB, kb2.ChanDoan, kb2.BenhKhac }).OrderByDescending(p => p.IDKB).ToList();
                            if (kb4.Count > 0)
                                rep4.paramChanDoan.Value = kb4.FirstOrDefault().ChanDoan + "/" + kb4.FirstOrDefault().BenhKhac;

                            rep4.CreateDocument();
                            frm4.prcIN.PrintingSystem = rep4.PrintingSystem;
                            frm4.ShowDialog();
                        }
                        #endregion
                        #region bv 01049
                        else if (DungChung.Bien.MaBV == "01049")
                        {

                            int _mkp4 = 0;
                            frmIn frm4 = new frmIn();
                            BaoCao.Rep_PhieuNoiSoiTMH_01049 rep4 = new BaoCao.Rep_PhieuNoiSoiTMH_01049();
                            if (par.Count > 0)
                            {
                                if (DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "01071")
                                {
                                    string kieudoc1 = "";
                                    string kieudoc2 = "";
                                    var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                                select new
                                                {
                                                    ht.KieuDoc
                                                }).ToList();
                                    kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                                    kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                                    if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                                    {
                                        DungChung.Bien._Visible_CDHA[0] = true;
                                        DungChung.Bien._Visible_CDHA[2] = true;

                                    }
                                    if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                                    {
                                        DungChung.Bien._Visible_CDHA[0] = true;
                                        DungChung.Bien._Visible_CDHA[2] = false;

                                    }
                                    if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                                    {
                                        DungChung.Bien._Visible_CDHA[2] = true;
                                        DungChung.Bien._Visible_CDHA[0] = false;

                                    }
                                }
                                _mkp4 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                                rep4.paramHoTen.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                rep4.paramDiaChi.Value = par.FirstOrDefault().DChi;
                                rep4.paramGioiTinh.Value = par.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                                rep4.paramDoiTuong.Value = par.FirstOrDefault().DTuong;
                                rep4.paramTuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                rep4.paramKetLuan.Value = par.FirstOrDefault().KetLuan;
                                int _makpth = 0;
                                if (par.FirstOrDefault().MaKPth != null)
                                {
                                    _makpth = par.FirstOrDefault().MaKPth.Value;
                                }
                                var kp = _Data.KPhongs.Where(p => p.MaKP == _makpth).ToList();
                                string a = "", b = ""; ; a = par.FirstOrDefault().MaCB;
                                b = par.FirstOrDefault().MaCBth;

                                if (!string.IsNullOrEmpty(a))
                                    rep4.BSDT.Value = "BS: " + _Data.CanBoes.Where(p => p.MaCB == a).FirstOrDefault().TenCB;
                                string ddan = "", ketqua = "";
                                if (par.FirstOrDefault().DuongDan2 != null)
                                    ddan = par.FirstOrDefault().DuongDan2;
                                if (par.FirstOrDefault().KetQua != null)
                                    ketqua = par.FirstOrDefault().KetQua;
                                rep4.hienthi(ketqua, ddan);
                            }
                            var kb4 = (from kb2 in _Data.BNKBs.Where(p => p.MaBNhan == _mabn).Where(p => p.MaKP == _mkp4) select new { kb2.IDKB, kb2.ChanDoan, kb2.BenhKhac, kb2.MaICD2, kb2.MaICD }).OrderByDescending(p => p.IDKB).ToList();
                            if (kb4.Count > 0)
                                rep4.ChanDoan.Value = DungChung.Ham.FreshString(kb4.FirstOrDefault().ChanDoan + ";" + kb4.FirstOrDefault().BenhKhac) + "  Mã ICD: " + DungChung.Ham.FreshString(kb4.FirstOrDefault().MaICD + ";" + kb4.FirstOrDefault().MaICD2);
                            if (par.FirstOrDefault().NgayTH != null)
                                rep4.Ngay.Value = "Ngày: " + par.FirstOrDefault().NgayTH.Value.Day + "/" + par.FirstOrDefault().NgayTH.Value.Month + "/" + par.FirstOrDefault().NgayTH.Value.Year;
                            rep4.CreateDocument();
                            frm4.prcIN.PrintingSystem = rep4.PrintingSystem;
                            frm4.ShowDialog();
                        }
                        #endregion
                        #region 30303
                        else if (DungChung.Bien.MaBV == "30303")
                        {
                            int _mkp4 = 0;
                            frmIn frm4 = new frmIn();
                            BaoCao.Rep_PhieuNoiSoiTMH_30303 rep4 = new BaoCao.Rep_PhieuNoiSoiTMH_30303();
                            if (par.Count > 0)
                            {
                                _mkp4 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                                rep4.paramHoTen.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                rep4.paramDiaChi.Value = par.FirstOrDefault().DChi;
                                if (DungChung.Bien.MaBV == "27023")
                                    rep4.IDCLS.Value = _so;
                                else
                                    rep4.IDCLS.Value = _IDCLS;
                                rep4.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                rep4.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                rep4.paramGioiTinh.Value = par.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                                rep4.paramSThe.Value = par.FirstOrDefault().SThe;
                                rep4.paramDoiTuong.Value = par.FirstOrDefault().DTuong;
                                rep4.paramTuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                rep4.paramKetLuan.Value = par.FirstOrDefault().KetLuan;
                                rep4.paraLoiDan.Value = par.FirstOrDefault().LoiDan;
                                rep4.paramPhieuSo.Value = par.FirstOrDefault().IdCLS;
                                if (par.FirstOrDefault().NgayThang != null)
                                {
                                    rep4.paramNgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                }
                                else
                                    rep4.paramNgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                if (par.FirstOrDefault().NgayTH != null)
                                    rep4.paramNgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep4.paramNgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                int _makpth = 0;
                                if (par.FirstOrDefault().MaKPth != null)
                                {
                                    _makpth = par.FirstOrDefault().MaKPth.Value;

                                }
                                var kp = _Data.KPhongs.Where(p => p.MaKP == _makpth).ToList();
                                if (kp.Count > 0)
                                    rep4.paramPhongKham.Value = kp.FirstOrDefault().TenKP.ToUpper();
                                string a = "", b = ""; ; a = par.FirstOrDefault().MaCB;
                                b = par.FirstOrDefault().MaCBth;

                                if (!string.IsNullOrEmpty(a))
                                    rep4.paramCanBoDT.Value = DungChung.Ham._getTenCB(_Data, a).ToUpper();
                                if (!string.IsNullOrEmpty(b))
                                    rep4.BSTH.Value = DungChung.Ham._getTenCB(_Data, b).ToUpper();
                                string ddan = "", ketqua = "";
                                if (par.FirstOrDefault().DuongDan2 != null)
                                    ddan = par.FirstOrDefault().DuongDan2;
                                if (par.FirstOrDefault().KetQua != null)
                                    ketqua = par.FirstOrDefault().KetQua;
                                rep4.hienthi(ketqua, ddan);
                            }
                            var kb4 = (from kb2 in _Data.BNKBs.Where(p => p.MaBNhan == _mabn).Where(p => p.MaKP == _mkp4) select new { kb2.IDKB, kb2.ChanDoan, kb2.BenhKhac }).OrderByDescending(p => p.IDKB).ToList();
                            if (kb4.Count > 0)
                                rep4.paramChanDoan.Value = kb4.FirstOrDefault().ChanDoan + "/" + kb4.FirstOrDefault().BenhKhac;

                            rep4.CreateDocument();
                            frm4.prcIN.PrintingSystem = rep4.PrintingSystem;
                            frm4.ShowDialog();
                        }
                        #endregion
                        #region 01071
                        else if (DungChung.Bien.MaBV == "01071")
                        {
                            int _mkp4 = 0;
                            frmIn frm4 = new frmIn();
                            BaoCao.Rep_PhieuNoiSoiTMH_01071 rep4 = new BaoCao.Rep_PhieuNoiSoiTMH_01071();
                            if (par.Count > 0)
                            {
                                if (DungChung.Bien.MaBV == "01071")
                                {
                                    string kieudoc1 = "";
                                    string kieudoc2 = "";
                                    var bnbb = (from ht in _Data.HThong_User.Where(p => p.TenDN == DungChung.Bien.TenDN)
                                                select new
                                                {
                                                    ht.KieuDoc
                                                }).ToList();
                                    kieudoc1 = bnbb.FirstOrDefault().KieuDoc.Split(';')[0];
                                    kieudoc2 = bnbb.FirstOrDefault().KieuDoc.Split(';')[1];
                                    if ((kieudoc1 == "True") && (kieudoc2 == "True"))
                                    {
                                        DungChung.Bien._Visible_CDHA[0] = true;
                                        DungChung.Bien._Visible_CDHA[2] = true;

                                    }
                                    if ((kieudoc1 == "True") && (kieudoc2 == "False"))
                                    {
                                        DungChung.Bien._Visible_CDHA[0] = true;
                                        DungChung.Bien._Visible_CDHA[2] = false;

                                    }
                                    if ((kieudoc1 == "False") && (kieudoc2 == "True"))
                                    {
                                        DungChung.Bien._Visible_CDHA[2] = false;
                                        DungChung.Bien._Visible_CDHA[0] = false;
                                        DungChung.Bien._Visible_CDHA[1] = false;

                                    }
                                }
                                _mkp4 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                                rep4.paramHoTen.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                rep4.paramDiaChi.Value = par.FirstOrDefault().DChi;
                                if (DungChung.Bien.MaBV == "27023")
                                    rep4.IDCLS.Value = _so;
                                else
                                    rep4.IDCLS.Value = _IDCLS;
                                rep4.paramGioiTinh.Value = par.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                                rep4.paramSThe.Value = par.FirstOrDefault().SThe;
                                rep4.paramDoiTuong.Value = par.FirstOrDefault().DTuong;
                                rep4.paramTuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                rep4.paramKetLuan.Value = par.FirstOrDefault().KetLuan;
                                rep4.paraLoiDan.Value = par.FirstOrDefault().LoiDan;
                                rep4.paramPhieuSo.Value = par.FirstOrDefault().IdCLS;
                                if (par.FirstOrDefault().NgayThang != null)
                                {
                                    rep4.paramNgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                }
                                else
                                    rep4.paramNgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                if (par.FirstOrDefault().NgayTH != null)
                                    rep4.paramNgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep4.paramNgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                int _makpth = 0;
                                if (par.FirstOrDefault().MaKPth != null)
                                {
                                    _makpth = par.FirstOrDefault().MaKPth.Value;

                                }
                                var kp = _Data.KPhongs.Where(p => p.MaKP == _makpth).ToList();
                                if (kp.Count > 0)
                                    rep4.paramPhongKham.Value = kp.FirstOrDefault().TenKP.ToUpper();
                                string a = "", b = ""; ; a = par.FirstOrDefault().MaCB;
                                b = par.FirstOrDefault().MaCBth;

                                if (!string.IsNullOrEmpty(a))
                                    rep4.paramCanBoDT.Value = DungChung.Ham._getTenCB(_Data, a).ToUpper();
                                if (!string.IsNullOrEmpty(b))
                                    rep4.BSTH.Value = DungChung.Ham._getTenCB(_Data, b).ToUpper();
                                string ddan = "", ketqua = "";
                                if (par.FirstOrDefault().DuongDan2 != null)
                                    ddan = par.FirstOrDefault().DuongDan2;
                                if (par.FirstOrDefault().KetQua != null)
                                    ketqua = par.FirstOrDefault().KetQua;
                                rep4.hienthi(ketqua, ddan);
                            }
                            var kb4 = (from kb2 in _Data.BNKBs.Where(p => p.MaBNhan == _mabn).Where(p => p.MaKP == _mkp4) select new { kb2.IDKB, kb2.ChanDoan, kb2.BenhKhac }).OrderByDescending(p => p.IDKB).ToList();
                            if (kb4.Count > 0)
                                rep4.paramChanDoan.Value = kb4.FirstOrDefault().ChanDoan + "/" + kb4.FirstOrDefault().BenhKhac;

                            rep4.CreateDocument();
                            frm4.prcIN.PrintingSystem = rep4.PrintingSystem;
                            frm4.ShowDialog();
                        }
                        #endregion
                        #region bv khác
                        else
                        {

                            int _mkp4 = 0;
                            frmIn frm4 = new frmIn();
                            BaoCao.Rep_PhieuNoiSoiTMH rep4 = new BaoCao.Rep_PhieuNoiSoiTMH();
                            if (par.Count > 0)
                            {
                                _mkp4 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                                rep4.paramHoTen.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                rep4.paramDiaChi.Value = par.FirstOrDefault().DChi;
                                if (DungChung.Bien.MaBV == "27023")
                                    rep4.IDCLS.Value = _so;
                                else
                                    rep4.IDCLS.Value = _IDCLS;
                                if (DungChung.Bien.MaBV == "24012")
                                {
                                    rep4.SubBand1.Visible = true;
                                    rep4.SubBand2.Visible = false;
                                    rep4.SubBand3.Visible = false;
                                    rep4.SubBand4.Visible = true;
                                    rep4.SubBand5.Visible = false;
                                    rep4.SubBand6.Visible = true;
                                    rep4.SubBand9.Visible = false;
                                    rep4.SubBand7.Visible = false;
                                    rep4.SubBand8.Visible = false;
                                    rep4.xrTableCell39.Text = "BÁC SĨ CHỈ ĐỊNH";

                                }

                                rep4.thuong.Text = (par.FirstOrDefault().CapCuu == false) ? "X" : "";
                                rep4.capcuu.Text = (par.FirstOrDefault().CapCuu == true) ? "X" : "";
                                rep4.paramGioiTinh.Value = par.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                                rep4.paramSThe.Value = par.FirstOrDefault().SThe;
                                rep4.paramDoiTuong.Value = par.FirstOrDefault().DTuong;
                                rep4.paramTuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                rep4.paramKetLuan.Value = par.FirstOrDefault().KetLuan;
                                rep4.paraLoiDan.Value = par.FirstOrDefault().LoiDan;
                                rep4.paramPhieuSo.Value = par.FirstOrDefault().IdCLS;

                                if (par.FirstOrDefault().NgayThang != null)
                                {
                                    rep4.paramNgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                }
                                else
                                    rep4.paramNgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                if (par.FirstOrDefault().NgayTH != null)
                                    rep4.paramNgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep4.paramNgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                                int _makpth = 0;
                                if (par.FirstOrDefault().MaKPth != null)
                                {
                                    _makpth = par.FirstOrDefault().MaKPth.Value;

                                }
                                var kp = _Data.KPhongs.Where(p => p.MaKP == _makpth).ToList();
                                if (kp.Count > 0)
                                    rep4.paramPhongKham.Value = kp.FirstOrDefault().TenKP.ToUpper();
                                string a = "", b = ""; ; a = par.FirstOrDefault().MaCB;
                                b = par.FirstOrDefault().MaCBth;

                                if (!string.IsNullOrEmpty(a))
                                    rep4.paramCanBoDT.Value = DungChung.Ham._getTenCB(_Data, a).ToUpper();
                                if (!string.IsNullOrEmpty(b))
                                    rep4.BSTH.Value = DungChung.Ham._getTenCB(_Data, b).ToUpper();
                                string ddan = "", ketqua = "";
                                if (par.FirstOrDefault().DuongDan2 != null)
                                    ddan = par.FirstOrDefault().DuongDan2;
                                if (DungChung.Bien.MaBV == "30372")
                                {
                                    if (par.FirstOrDefault().KetQua_Rtf == null)
                                        ketqua = par.FirstOrDefault().KetQua;
                                    else
                                        ketqua = par.FirstOrDefault().KetQua_Rtf;
                                }
                                else
                                    ketqua = par.FirstOrDefault().KetQua;
                                rep4.hienthi(ketqua, ddan);
                            }
                            var kb4 = (from kb2 in _Data.BNKBs.Where(p => p.MaBNhan == _mabn).Where(p => p.MaKP == _mkp4) select new { kb2.IDKB, kb2.ChanDoan, kb2.BenhKhac }).OrderByDescending(p => p.IDKB).ToList();
                            rep4.paramChanDoan.Value = (par.FirstOrDefault().ChanDoanBD != null || par.FirstOrDefault().ChanDoanBD != "") && DungChung.Bien.MaBV == "24272" ? par.FirstOrDefault().ChanDoanBD + ";" : "";
                            if (kb4.Count > 0 && DungChung.Bien.MaBV != "24272")
                                rep4.paramChanDoan.Value += kb4.FirstOrDefault().ChanDoan + "/" + kb4.FirstOrDefault().BenhKhac;

                            rep4.CreateDocument();
                            frm4.prcIN.PrintingSystem = rep4.PrintingSystem;
                            frm4.ShowDialog();
                        }
                        #endregion
                    }
                    else
                    {
                        #region 02005
                        int _mkp4 = 0;
                        frmIn frm4 = new frmIn();
                        BaoCao.repKQNoiSoiTMH_YM rep4 = new BaoCao.repKQNoiSoiTMH_YM();
                        if (par.Count > 0)
                        {
                            _mkp4 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            rep4.paramHoTen.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            rep4.paramDiaChi_BN.Value = par.FirstOrDefault().DChi;
                            rep4.paramGioiTinh.Value = par.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                            rep4.paramTuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep4.paramKetLuan.Value = par.FirstOrDefault().KetLuan;
                            int _makpth = 0;
                            if (par.FirstOrDefault().MaKPth != null)
                            {
                                _makpth = par.FirstOrDefault().MaKPth.Value;
                            }
                            var kp = _Data.KPhongs.Where(p => p.MaKP == _makpth).ToList();
                            if (kp.Count > 0)
                                rep4.paramPhongKham.Value = kp.FirstOrDefault().TenKP.ToUpper();
                            rep4.paramDiaChi_CQ.Value = DungChung.Bien.DiaChi;
                            rep4.paramLoiDan.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().NgayThang != null)
                            {
                                rep4.paramNgayIn.Value = QLBV_Library.QLBV_Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, 2);
                            }
                            else
                                rep4.paramNgayIn.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                            var c1 = (from p in par
                                      join vv in _Data.VaoViens on p.MaBNhan equals vv.MaBNhan
                                      select vv.SoBA).ToList();
                            if (c1.Count > 0)
                            {
                                rep4.paramSoBenhAn.Value = c1.FirstOrDefault();
                            }
                            string a = "";
                            a = par.FirstOrDefault().MaCB;
                            if (!string.IsNullOrEmpty(a))
                                rep4.paramtenCB.Value = DungChung.Ham._getTenCB(_Data, a);
                            //rep4.paramCanBoDT.Value = _Data.CanBoes.Where(c => c.MaCB== (par.FirstOrDefault().MaCB)).Select(c => new { c.TenCB });

                            string ddan = "", ketqua = "";
                            if (par.FirstOrDefault().DuongDan2 != null)
                                ddan = par.FirstOrDefault().DuongDan2;
                            if (par.FirstOrDefault().KetQua != null)
                                ketqua = par.FirstOrDefault().KetQua;
                            rep4.hienthi(ketqua, ddan);
                        }
                        #endregion
                        var kb4 = (from kb2 in _Data.BNKBs.Where(p => p.MaBNhan == _mabn).Where(p => p.MaKP == _mkp4) select new { kb2.ChanDoan, kb2.BenhKhac, kb2.IDKB }).OrderByDescending(p => p.IDKB).ToList();
                        if (kb4.Count > 0)
                            rep4.paramLyDo.Value = kb4.FirstOrDefault().ChanDoan + "/" + kb4.FirstOrDefault().BenhKhac;
                        rep4.CreateDocument();
                        frm4.prcIN.PrintingSystem = rep4.PrintingSystem;
                        frm4.ShowDialog();
                    }
                    break;
                #endregion
                case "Nội soi Cổ Tử Cung":
                    frmIn frm21 = new frmIn();
                    if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "24272")
                    {
                        BaoCao.Rep_PhieuNS_Co_Tu_Cung_12345 rep2 = new BaoCao.Rep_PhieuNS_Co_Tu_Cung_12345();
                        if (DungChung.Bien.MaBV == "24297")
                        {
                            rep2.xrLabel49.Visible = false;
                            rep2.xrLabel49.Visible = false;
                        }
                        if (par.Count > 0)
                        {
                            rep2.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            rep2.SoPhieu.Value = _IDCLS;
                            _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            if (par.FirstOrDefault().NgayTH != null)
                                rep2.NgayTT.Value = DungChung.Bien.DiaDanh + ", " + DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value);
                            string macb = par.FirstOrDefault().MaCB;
                            string macbth = par.FirstOrDefault().MaCBth;
                            if (!string.IsNullOrEmpty(macb))
                                rep2.MaCBDT.Value = _Data.CanBoes.Where(p => p.MaCB == macb).Select(p => p.TenCB).ToList().FirstOrDefault();
                            if (!string.IsNullOrEmpty(macbth))
                                rep2.Macb.Value = DungChung.Ham._getTenCB(_Data, macbth);
                            rep2.Diachi.Value = par.FirstOrDefault().DChi;
                            rep2.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep2.MaBN.Value = par.FirstOrDefault().MaBNhan;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep2.Gioitinh.Value = "Nam";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep2.Gioitinh.Value = "Nữ";
                            }
                            rep2.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                            rep2.YCKT.Value = par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep2.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            //rep2.hienthiKQ(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                            rep2.KetQua.Value = par.FirstOrDefault().KetQua;
                            rep2.LoiDan.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                        }
                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                        //DungChung.Bien.st_TieuNhomRG_ChuyenKhoa
                        if (DungChung.Bien.MaBV == "24297" && par.FirstOrDefault().IsDongY == true)
                        {
                            rep2.ChuanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value);
                        }
                        else
                        {
                            rep2.ChuanDoan.Value = (par.FirstOrDefault().ChanDoanBD != null || par.FirstOrDefault().ChanDoanBD != "") && DungChung.Bien.MaBV == "24272" ? par.FirstOrDefault().ChanDoanBD + ";" : "";
                            if (DungChung.Bien.MaBV != "24272")
                            {
                                rep2.ChuanDoan.Value += DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            }
                        }

                        rep2.Buong.Value = arrThongTinBNKB[2];
                        rep2.Giuong.Value = arrThongTinBNKB[3];
                        rep2.Khoa.Value = arrThongTinBNKB[4];
                        if (par.FirstOrDefault().DuongDan2 != null)
                        { rep2.DuongDan2.Value = par.FirstOrDefault().DuongDan2; }
                        rep2.CreateDocument();
                        frm21.prcIN.PrintingSystem = rep2.PrintingSystem;
                        frm21.ShowDialog();
                    }


                    else if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "56789")
                    {
                        BaoCao.Rep_PhieuNoiSoi_Mau_01071 rep2 = new BaoCao.Rep_PhieuNoiSoi_Mau_01071();
                        if (par.Count > 0)
                        {
                            rep2.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            rep2.SoPhieu.Value = _IDCLS;
                            _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            if (par.FirstOrDefault().NgayTH != null)
                                rep2.NgayTT.Value = DungChung.Bien.DiaDanh + ", " + DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value);
                            string macb = par.FirstOrDefault().MaCB;
                            string macbth = par.FirstOrDefault().MaCBth;
                            if (!string.IsNullOrEmpty(macb))
                                rep2.MaCBDT.Value = _Data.CanBoes.Where(p => p.MaCB == macb).Select(p => p.TenCB).ToList().FirstOrDefault();
                            if (!string.IsNullOrEmpty(macbth))
                                rep2.Macb.Value = DungChung.Ham._getTenCB(_Data, macbth);
                            rep2.Diachi.Value = par.FirstOrDefault().DChi;
                            rep2.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep2.MaBN.Value = par.FirstOrDefault().MaBNhan;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep2.Gioitinh.Value = "Nam";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep2.Gioitinh.Value = "Nữ";
                            }
                            rep2.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                            rep2.YCKT.Value = par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep2.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            //rep2.hienthiKQ(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                            rep2.KetQua.Value = par.FirstOrDefault().KetQua;
                            rep2.LoiDan.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                        }
                        //DungChung.Bien.st_TieuNhomRG_ChuyenKhoa
                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                        rep2.ChuanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                        rep2.Buong.Value = arrThongTinBNKB[2];
                        rep2.Giuong.Value = arrThongTinBNKB[3];
                        rep2.Khoa.Value = arrThongTinBNKB[4];
                        if (par.FirstOrDefault().DuongDan2 != null)
                        { rep2.DuongDan2.Value = par.FirstOrDefault().DuongDan2; }
                        rep2.CreateDocument();
                        frm21.prcIN.PrintingSystem = rep2.PrintingSystem;
                        frm21.ShowDialog();
                    }
                    else
                    {
                        //DungChung.Bien.st_TieuNhomRG_ChuyenKhoa
                        BaoCao.Rep_PhieuNoiSoi_Mau rep2 = new BaoCao.Rep_PhieuNoiSoi_Mau();
                        if (par.Count > 0)
                        {
                            rep2.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            if (DungChung.Bien.MaBV == "27023")
                                rep2.SoPhieu.Value = _so;
                            else
                                rep2.SoPhieu.Value = _IDCLS;
                            _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            if (DungChung.Bien.MaBV != "30010")
                            {
                                if (par.FirstOrDefault().NgayTH != null)
                                    rep2.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value);
                                rep2.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value);
                            }
                            else
                            {
                                if (par.FirstOrDefault().NgayThang != null)
                                    rep2.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value);
                                rep2.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value);
                            }

                            string macb = par.FirstOrDefault().MaCB;
                            string macbth = par.FirstOrDefault().MaCBth;
                            if (!string.IsNullOrEmpty(macb))
                                rep2.MaCBDT.Value = DungChung.Ham._getTenCB(_Data, macb);
                            if (!string.IsNullOrEmpty(macbth))
                                rep2.Macb.Value = DungChung.Ham._getTenCB(_Data, macbth);
                            rep2.Diachi.Value = par.FirstOrDefault().DChi;
                            rep2.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep2.MaBN.Value = par.FirstOrDefault().MaBNhan;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep2.Gioitinh.Value = "Nam";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep2.Gioitinh.Value = "Nữ";
                            }
                            rep2.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                            rep2.YCKT.Value = par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep2.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            //rep2.hienthiKQ(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                            if (DungChung.Bien.MaBV == "30372")
                            {
                                if (string.IsNullOrEmpty(par.FirstOrDefault().KetQua_Rtf))
                                    rep2.KetQua.Value = par.FirstOrDefault().KetQua;
                                else
                                    rep2.KetQua.Value = par.FirstOrDefault().KetQua_Rtf;
                            }
                            else
                                rep2.KetQua.Value = par.FirstOrDefault().KetQua;
                            rep2.LoiDan.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                        }

                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                        rep2.ChuanDoan.Value = (par.FirstOrDefault().ChanDoanBD != null || par.FirstOrDefault().ChanDoanBD != "") && DungChung.Bien.MaBV == "24272" ? par.FirstOrDefault().ChanDoanBD + ";" : "";
                        if (DungChung.Bien.MaBV != "24272")
                        {
                            rep2.ChuanDoan.Value += arrThongTinBNKB[1];
                        }
                        rep2.Buong.Value = arrThongTinBNKB[2];
                        rep2.Giuong.Value = arrThongTinBNKB[3];
                        rep2.Khoa.Value = arrThongTinBNKB[4];
                        if (par.FirstOrDefault().DuongDan2 != null)
                        { rep2.DuongDan2.Value = par.FirstOrDefault().DuongDan2; }
                        rep2.CreateDocument();
                        frm21.prcIN.PrintingSystem = rep2.PrintingSystem;
                        frm21.ShowDialog();
                    }
                    break;
                case "Nội soi Dạ Dày":
                    frmIn frm211 = new frmIn();
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                    {
                        if ((_tendv.ToLower().Contains("thực quản, dạ dày, tá tràng") || _tendv.ToLower().Contains("nội soi đại tràng") || _tendv.ToLower().Contains("nội soi trực tràng") || _tendv.ToLower().Contains("nội soi thực quản - dạ dày - tá tràng gây mê") || _tendv.ToLower().Contains("nội soi can thiệp - cắt polyp ống tiêu hóa > 1cm hoặc nhiều polyp") || _tendv.ToLower().Contains("nội soi đại trực tràng ống mềm không sinh thiết")) && (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049"))
                        {
                            int _loai = 0;
                            //if (_tendv.ToLower().Contains("nội soi đại tràng"))
                            //    _loai = 1;
                            //else if (_tendv.ToLower().Contains("thực quản, dạ dày, tá tràng"))
                            //    _loai = 2;
                            //else if (_tendv.ToLower().Contains("nội soi trực tràng"))
                            //    _loai = 3;
                            //else
                            //{
                            _loai = 4;
                            // }
                            PhieuNoiSoiNew_01071(_IDCLS, _loai, _mabn);
                        }
                        else
                        {
                            BaoCao.Rep_PhieuNoiSoi_Mau_01071 rep2 = new BaoCao.Rep_PhieuNoiSoi_Mau_01071();
                            if (par.Count > 0)
                            {
                                var ttbx = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault();
                                if (ttbx != null)
                                    rep2.SDT.Value = ttbx.DThoai;
                                rep2.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                rep2.SoPhieu.Value = _IDCLS;
                                _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                                if (par.FirstOrDefault().NgayTH != null)
                                    rep2.NgayTT.Value = DungChung.Bien.DiaDanh + ", " + DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value);
                                string macb = par.FirstOrDefault().MaCB;
                                string macbth = par.FirstOrDefault().MaCBth;
                                if (!string.IsNullOrEmpty(macb))
                                    rep2.MaCBDT.Value = _Data.CanBoes.Where(p => p.MaCB == macb).Select(p => p.TenCB).ToList().FirstOrDefault();
                                if (!string.IsNullOrEmpty(macbth))
                                    rep2.Macb.Value = DungChung.Ham._getTenCB(_Data, macbth);
                                rep2.Diachi.Value = par.FirstOrDefault().DChi;
                                rep2.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                                rep2.MaBN.Value = par.FirstOrDefault().MaBNhan;
                                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep2.Gioitinh.Value = "Nam";
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep2.Gioitinh.Value = "Nữ";
                                }
                                if ((DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297") && hthong.IsTV != true && (par.FirstOrDefault().TenDV.ToUpper() == "NỘI SOI DẠ DÀY QUA ĐƯỜNG MŨI" || par.FirstOrDefault().TenDV.ToUpper() == "NỘI SOI DẠ DÀY QUA ĐƯỜNG MIỆNG"))
                                    rep2.TieuDe.Value = "PHIẾU NỘI SOI DẠ DÀY";
                                else
                                    rep2.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                                rep2.YCKT.Value = par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                                rep2.KetLuan.Value = par.FirstOrDefault().KetLuan;
                                //rep2.hienthiKQ(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                                rep2.KetQua.Value = par.FirstOrDefault().KetQua;
                                rep2.LoiDan.Value = par.FirstOrDefault().LoiDan;
                                if (par.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                    rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                    rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                    rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                    rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                }
                            }
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                            //DungChung.Bien.st_TieuNhomRG_ChuyenKhoa
                            if (DungChung.Bien.MaBV == "24297" && par.FirstOrDefault().IsDongY == true)
                            {
                                rep2.ChuanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _mabn, _makp);
                            }
                            else
                            {
                                rep2.ChuanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                            }

                            rep2.Buong.Value = arrThongTinBNKB[2];
                            rep2.Giuong.Value = arrThongTinBNKB[3];
                            rep2.Khoa.Value = arrThongTinBNKB[4];
                            if (par.FirstOrDefault().DuongDan2 != null)
                            { rep2.DuongDan2.Value = par.FirstOrDefault().DuongDan2; }
                            rep2.CreateDocument();
                            frm211.prcIN.PrintingSystem = rep2.PrintingSystem;
                            frm211.ShowDialog();
                        }
                    }
                    else
                    {
                        //DungChung.Bien.st_TieuNhomRG_ChuyenKhoa
                        BaoCao.Rep_PhieuNoiSoi_Mau rep2 = new BaoCao.Rep_PhieuNoiSoi_Mau();
                        if (par.Count > 0)
                        {
                            rep2.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            if (DungChung.Bien.MaBV == "27023")
                                rep2.SoPhieu.Value = _so;
                            else
                                rep2.SoPhieu.Value = _IDCLS;
                            _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                            if (par.FirstOrDefault().NgayTH != null)
                                rep2.NgayTT.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value);
                            string macb = par.FirstOrDefault().MaCB;
                            string macbth = par.FirstOrDefault().MaCBth;
                            if (!string.IsNullOrEmpty(macb))
                                rep2.MaCBDT.Value = DungChung.Ham._getTenCB(_Data, macb);
                            if (!string.IsNullOrEmpty(macbth))
                                rep2.Macb.Value = DungChung.Ham._getTenCB(_Data, macbth);
                            rep2.Diachi.Value = par.FirstOrDefault().DChi;
                            rep2.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                            rep2.MaBN.Value = par.FirstOrDefault().MaBNhan;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep2.Gioitinh.Value = "Nam";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep2.Gioitinh.Value = "Nữ";
                            }
                            rep2.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                            rep2.YCKT.Value = par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                            rep2.KetLuan.Value = par.FirstOrDefault().KetLuan;
                            //rep2.hienthiKQ(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                            if (DungChung.Bien.MaBV == "30372")
                            {
                                if (string.IsNullOrEmpty(par.FirstOrDefault().KetQua_Rtf))
                                    rep2.KetQua.Value = par.FirstOrDefault().KetQua;
                                else
                                    rep2.KetQua.Value = par.FirstOrDefault().KetQua_Rtf;
                            }
                            else
                                rep2.KetQua.Value = par.FirstOrDefault().KetQua;
                            rep2.LoiDan.Value = par.FirstOrDefault().LoiDan;
                            if (par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                        }

                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                        rep2.ChuanDoan.Value = arrThongTinBNKB[1];
                        if (DungChung.Bien.MaBV == "24272")
                        {
                            rep2.ChuanDoan.Value = par.FirstOrDefault().ChanDoanBD;
                        }
                        rep2.Buong.Value = arrThongTinBNKB[2];
                        rep2.Giuong.Value = arrThongTinBNKB[3];
                        rep2.Khoa.Value = arrThongTinBNKB[4];
                        if (par.FirstOrDefault().DuongDan2 != null)
                        { rep2.DuongDan2.Value = par.FirstOrDefault().DuongDan2; }
                        rep2.CreateDocument();
                        frm211.prcIN.PrintingSystem = rep2.PrintingSystem;
                        frm211.ShowDialog();
                    }
                    break;
                default:
                    break;
            }
        }
        #endregion
        #region In phiếu trắc nghiệm tâm lý
        public static void InPhieu_TDCH(int idCLS, string tnhom)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            BaoCao.rep_TracNghiemTamLy rep = new BaoCao.rep_TracNghiemTamLy();
            rep.lblTN.Text = tnhom.ToUpper();
            var qdv = (from tn in data.TieuNhomDVs.Where(p => p.TenRG.ToLower().Contains("trắc nghiệm tâm lý"))
                       join dv in data.DichVus on tn.IdTieuNhom equals dv.IdTieuNhom
                       join dvct in data.DichVucts on dv.MaDV equals dvct.MaDV
                       select new
                       {
                           tn.TenTN,
                           dvct.TenDVct,
                           dvct.TSBT,
                           dvct.MaDVct,
                           dvct.STT
                       }).ToList();

            var qbncd = (from bn in data.BenhNhans
                         join ttbx in data.TTboXungs on bn.MaBNhan equals ttbx.MaBNhan
                         join nn in data.DmNNs on ttbx.MaNN equals nn.MaNN into k
                         from k1 in k.DefaultIfEmpty()
                         join cls in data.CLS.Where(p => p.IdCLS == idCLS) on bn.MaBNhan equals cls.MaBNhan
                         join kp in data.KPhongs on cls.MaKP equals kp.MaKP
                         join cd in data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                         join clsct in data.CLScts on cd.IDCD equals clsct.IDCD
                         join dvct in data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                         select new
                         {
                             cls.Status,
                             bn.TenBNhan,
                             bn.NamSinh,
                             Nam = bn.GTinh == 1 ? "/" : "",
                             Nu = bn.GTinh == 0 ? "/" : "",
                             Nghe = k1 == null ? "" : k1.TenNN,
                             bn.DChi,
                             BHYT = bn.DTuong == "BHYT" ? "x" : "",
                             KoBHYT = bn.DTuong != "BHYT" ? "x" : "",
                             cls.ChanDoan,
                             cls.MaICD,
                             cls.NgayThang,
                             dvct.MaDVct,
                             kp.TenKP
                         }).ToList();
            //int status = 1;
            if (qbncd.Count > 0)
            {
                //status=qbncd.FirstOrDefault().Status
                rep.lblKhoa.Text = qbncd.FirstOrDefault().TenKP;
                rep.lblHoTen.Text = qbncd.FirstOrDefault().TenBNhan;
                rep.lblNamSinh.Text = qbncd.FirstOrDefault().NamSinh.ToString();
                rep.lblNam.Text = qbncd.FirstOrDefault().Nu;
                rep.lblNu.Text = qbncd.FirstOrDefault().Nam;
                rep.lblNghe.Text = qbncd.FirstOrDefault().Nghe;
                rep.lblDiaChi.Text = qbncd.FirstOrDefault().DChi;
                rep.lblBHYT.Text = qbncd.FirstOrDefault().BHYT;
                rep.lblKhongBH.Text = qbncd.FirstOrDefault().KoBHYT;
                rep.lblChanDoan.Text = DungChung.Bien.MaBV == "01049" ? DungChung.Ham.FreshString(qbncd.FirstOrDefault().ChanDoan) + "  Mã ICD: " + DungChung.Ham.FreshString(qbncd.FirstOrDefault().MaICD) : DungChung.Ham.FreshString(qbncd.FirstOrDefault().ChanDoan);
                rep.lblNgayCD.Text = String.Format("{0:dd}", qbncd.FirstOrDefault().NgayThang);
                rep.lblThangCD.Text = String.Format("{0:MM}", qbncd.FirstOrDefault().NgayThang);
                rep.lblNamCD.Text = String.Format("{0:yyyy}", qbncd.FirstOrDefault().NgayThang);
            }

            var query = (from dv in qdv
                         join bn in qbncd on dv.MaDVct equals bn.MaDVct into kq
                         from kq1 in kq.DefaultIfEmpty()
                         select new
                         {
                             dv.TenTN,
                             Chon = kq1 == null ? "" : "x",
                             dv.TenDVct,
                             dv.TSBT,
                             dv.STT
                         }).OrderBy(p => p.TenTN).ThenBy(p => p.STT).ToList();

            frmIn frm = new frmIn();
            rep.DataSource = query.ToList();
            rep.BindingData();
            rep.CreateDocument();
            frm.prcIN.PrintingSystem = rep.PrintingSystem;
            frm.ShowDialog();
        }
        #endregion

        public static void PhieuNoiSoiNew_01071(int _idcls, int _loai, int _mabn)
        {
            QLBV_Database.QLBVEntities _Data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);

            var par = (from bn in _Data.BenhNhans
                       join cls in _Data.CLS.Where(p => p.IdCLS == _idcls) on bn.MaBNhan equals cls.MaBNhan
                       join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                       join chidinh in _Data.ChiDinhs on cls.IdCLS equals chidinh.IdCLS
                       join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                       join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                       join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                       where bn.MaBNhan == _mabn
                       select new { kp.IsDongY, cls.CapCuu, chidinh.Status, chidinh.GhiChu, cls.MaKPth, cls.IdCLS, bn.DTuong, bn.NamSinh, cls.MaCBth, dvct.STT, cls.NgayTH, clsct.KetQua, clsct.DuongDan, clsct.DuongDan2, cls.NgayThang, cls.MaKP, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, chidinh.ChiDinh1, chidinh.KetLuan, dv.TenDV, chidinh.LoiDan }).ToList();
            BaoCao.Rep_PhieuNoiSoi_Mau_01071_new rep2 = new BaoCao.Rep_PhieuNoiSoi_Mau_01071_new(_loai);
            frmIn frm = new frmIn();
            if (par.Count > 0)
            {
                rep2.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                rep2.SoPhieu.Value = _idcls;
                int _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                if (par.FirstOrDefault().NgayTH != null)
                    rep2.NgayTT.Value = DungChung.Bien.DiaDanh + ", " + DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value);
                string macb = par.FirstOrDefault().MaCB;
                string macbth = par.FirstOrDefault().MaCBth;
                if (!string.IsNullOrEmpty(macb))
                    rep2.MaCBDT.Value = _Data.CanBoes.Where(p => p.MaCB == macb).Select(p => p.TenCB).ToList().FirstOrDefault();
                if (!string.IsNullOrEmpty(macbth))
                    rep2.Macb.Value = DungChung.Ham._getTenCB(_Data, macbth);
                rep2.Diachi.Value = par.FirstOrDefault().DChi;
                rep2.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _mabn, DungChung.Bien.formatAge);
                rep2.MaBN.Value = par.FirstOrDefault().MaBNhan;
                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                if (gioiTinh == 1)
                {
                    rep2.txtNu.Text = "/";
                }
                else if (gioiTinh == 0)
                {
                    rep2.txtNam.Text = "/";
                }
                rep2.TieuDe.Value = "PHIẾU KẾT QUẢ " + par.FirstOrDefault().TenDV.ToUpper();
                rep2.YCKT.Value = par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                rep2.KetLuan.Value = par.FirstOrDefault().KetLuan;
                //rep2.hienthiKQ(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                rep2.KetQua.Value = par.FirstOrDefault().KetQua;
                rep2.LoiDan.Value = par.FirstOrDefault().LoiDan;
                if (par.FirstOrDefault().SThe.Length >= 15)
                {
                    rep2.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                    rep2.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                    rep2.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                    rep2.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                    rep2.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                }
            }
            //DungChung.Bien.st_TieuNhomRG_ChuyenKhoa
            if (DungChung.Bien.MaBV == "24297" && par.FirstOrDefault().IsDongY == true)
            {
                rep2.ChuanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value);
            }
            else
            {
                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                rep2.ChuanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0] : arrThongTinBNKB[1];
            }

            rep2.Buong.Value = arrThongTinBNKB[2];
            rep2.Giuong.Value = arrThongTinBNKB[3];
            rep2.Khoa.Value = arrThongTinBNKB[4];
            if (par.FirstOrDefault().DuongDan2 != null)
            { rep2.DuongDan2.Value = par.FirstOrDefault().DuongDan2; }
            rep2.CreateDocument();
            frm.prcIN.PrintingSystem = rep2.PrintingSystem;
            frm.ShowDialog();
        }
        public static void PhieuXNLao(int idCLS, string _so)
        {

            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            frmIn frm = new frmIn();
            var qcls = (from cls in data.CLS.Where(p => p.IdCLS == idCLS)
                        join cd in data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                        select new { cls.TrangThaiBP, cls.MaBNhan, cls.Status, cd.Mau_Lan_MTruongXN, cls.IdCLS }).FirstOrDefault();
            bool xnlao = true;
            if (DungChung.Bien.MaBV == "30299" && qcls != null)
            {
                var qcdall = (from cd in data.ChiDinhs.Where(p => p.IdCLS == idCLS) join dv in data.DichVus.Where(p => p.SoTT == 1 || p.SoTT == 2 || p.SoTT == 3 || p.SoTT == 4 || p.SoTT == 6) on cd.MaDV equals dv.MaDV select cd).ToList();
                if (qcdall.Count > 0)
                {
                    DialogResult _result = MessageBox.Show("Bạn muốn in phiếu vi sinh", "Xác nhận", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                    if (_result == DialogResult.Yes)
                    {
                        xnlao = false;
                        _In_XNViSinh(data, idCLS, qcls.MaBNhan ?? 0, _so);
                    }
                }
            }

            if (xnlao)
            {

                BaoCao.rep_PhieuXN_VKLao rep = new BaoCao.rep_PhieuXN_VKLao();

                if (qcls != null && qcls.Status == 1)
                {
                    frm_MauSo frmMau = new frm_MauSo(qcls.Mau_Lan_MTruongXN, qcls.TrangThaiBP, idCLS);
                    frmMau.ShowDialog();
                }

                rep.dataBindDing(idCLS);
                rep.CreateDocument();
                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                frm.ShowDialog();
            }
        }
        public static void PhieuXNLao_27023(int idCLS, string so)
        {

            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            frmIn frm = new frmIn();
            var qcls = (from cls in data.CLS.Where(p => p.IdCLS == idCLS)
                        join cd in data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                        select new { cls.TrangThaiBP, cls.MaBNhan, cls.Status, cd.Mau_Lan_MTruongXN, cls.IdCLS }).FirstOrDefault();
            bool xnlao = true;
            if (DungChung.Bien.MaBV == "30299" && qcls != null)
            {
                var qcdall = (from cd in data.ChiDinhs.Where(p => p.IdCLS == idCLS) join dv in data.DichVus.Where(p => p.SoTT == 1 || p.SoTT == 2 || p.SoTT == 3 || p.SoTT == 4 || p.SoTT == 6) on cd.MaDV equals dv.MaDV select cd).ToList();
                if (qcdall.Count > 0)
                {
                    DialogResult _result = MessageBox.Show("Bạn muốn in phiếu vi sinh", "Xác nhận", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                    if (_result == DialogResult.Yes)
                    {
                        xnlao = false;
                        _In_XNViSinh(data, idCLS, qcls.MaBNhan ?? 0, so);
                    }
                }
            }

            if (xnlao)
            {

                BaoCao.rep_PhieuXN_VKLao_27023 rep = new BaoCao.rep_PhieuXN_VKLao_27023();
                rep.so.Value = so;
                if (qcls != null && qcls.Status == 1)
                {
                    frm_MauSo frmMau = new frm_MauSo(qcls.Mau_Lan_MTruongXN, qcls.TrangThaiBP, idCLS);
                    frmMau.ShowDialog();
                }

                rep.dataBindDing(idCLS);
                rep.CreateDocument();
                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                frm.ShowDialog();
            }
        }

        #region in phiếu lưu huyết não Thanh HÀ
        private static void InLuuHuyetNao_30009(int _IDCD2)
        {
            List<ContentLHN> _lcontent = new List<ContentLHN>();

            _lcontent = XuatPhieuLuuHuyetNao(_IDCD2);
            if (_lcontent.Count() > 0)
            {
                QLBV.BaoCao.Rep_BC_PhieuLuuHuyetNao_30009 rep = new QLBV.BaoCao.Rep_BC_PhieuLuuHuyetNao_30009();
                frmIn frm = new frmIn();
                rep.lblTenCQCQ.Text = DungChung.Bien.TenCQCQ;
                rep.lblTenCQ.Text = DungChung.Bien.TenCQ;
                rep.lblNgayThang_BSCK.Text = _lcontent.FirstOrDefault().NgaytH != null ? DungChung.Ham.NgaySangChu(_lcontent.FirstOrDefault().NgaytH.Value, DungChung.Bien.FormatDate) : ("Ngày " + DateTime.Now.Day + " tháng " + DateTime.Now.Month + " năm " + DateTime.Now.Year);
                rep.lblNgayThangCD.Text = _lcontent.FirstOrDefault().Ngaycd != null ? DungChung.Ham.NgaySangChu(_lcontent.FirstOrDefault().Ngaycd.Value, DungChung.Bien.FormatDate) : ("Ngày " + DateTime.Now.Day + " tháng " + DateTime.Now.Month + " năm " + DateTime.Now.Year);
                rep.DataSource = _lcontent;
                rep.BindingData();
                rep.CreateDocument();
                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                frm.ShowDialog();
            }

        }
        public static List<ContentLHN> XuatPhieuLuuHuyetNao(int idCD)
        {
            List<ContentLHN> _lcontent = new List<ContentLHN>();
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            ContentLHN moi = new ContentLHN();

            var qCLSct = (from cls in data.CLS
                          join cd in data.ChiDinhs.Where(p => p.IDCD == idCD) on cls.IdCLS equals cd.IdCLS
                          join clsct in data.CLScts on cd.IDCD equals clsct.IDCD
                          join kp in data.KPhongs on cls.MaKP equals kp.MaKP
                          join bn in data.BenhNhans on cls.MaBNhan equals bn.MaBNhan
                          join cb in data.CanBoes on cls.MaCB equals cb.MaCB
                          join bnkb in data.BNKBs on new { n1 = cls.MaBNhan, n2 = cls.MaKP } equals new { n1 = bnkb.MaBNhan, n2 = bnkb.MaKP }
                          select new
                          {
                              cls.IdCLS,
                              cls.NgayTH,
                              cls.MaCB,
                              cls.MaKP,
                              cb.TenCB,
                              BSCK = (cls.MaCBth == null || cls.MaCBth == "") ? "" : data.CanBoes.Where(p => p.MaCB == cls.MaCBth).FirstOrDefault().TenCB,
                              bn.TenBNhan,
                              bn.DChi,
                              bn.SThe,
                              kp.TenKP,
                              bnkb.Buong,
                              bnkb.Giuong,
                              bnkb.ChanDoan,
                              bnkb.BenhKhac,
                              clsct.KetQua,
                              cd.MaDV,
                              cd.KetLuan,
                              cd.ChiDinh1,
                              cd.LoiDan,
                              cls.NgayThang
                          }).ToList();
            var qDV = (from dv in data.DichVus
                       join tn in data.TieuNhomDVs.Where(p => p.TenRG.Equals(DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.LuuHuyetNao)) on dv.IdTieuNhom equals tn.IdTieuNhom
                       select new { dv, tn }).ToList();

            var query = (from clsct in qCLSct
                         join dv in qDV on clsct.MaDV equals dv.dv.MaDV
                         select new { clsct, dv.dv, dv.tn }).ToList();

            foreach (var item in query)
            {
                moi = new ContentLHN();
                moi.HoTen = item.clsct.TenBNhan;
                moi.DiaChi = item.clsct.DChi;
                moi.STheBHYT = item.clsct.SThe;
                moi.Khoa = item.clsct.TenKP;
                moi.Buong = item.clsct.Buong;
                moi.Giuong = item.clsct.Giuong;
                moi.ChanDoan = item.clsct.ChanDoan + " " + item.clsct.BenhKhac;
                moi.YeuCau = item.dv.TenDV;
                moi.BSChiDinh = item.clsct.TenCB;
                moi.KetQua = item.clsct.KetQua;
                moi.BSCK = item.clsct.BSCK;
                moi.LoiDan = item.clsct.LoiDan;
                moi.KetLuan = item.clsct.KetLuan;
                moi.NgaytH = item.clsct.NgayTH;
                moi.Ngaycd = item.clsct.NgayThang;
                _lcontent.Add(moi);
            }
            return _lcontent;
        }
        public class ContentLHN
        {
            public string HoTen { get; set; }
            public string DiaChi { get; set; }
            public string STheBHYT { get; set; }
            public string Khoa { get; set; }
            public string Buong { get; set; }
            public string Giuong { get; set; }
            public string ChanDoan { get; set; }
            public string YeuCau { get; set; }
            public string BSChiDinh { get; set; }
            public string KetQua { get; set; }
            public string BSCK { get; set; }
            public string LoiDan { get; set; }
            public string KetLuan { get; set; }
            public DateTime? NgaytH { get; set; }
            public DateTime? Ngaycd { get; set; }
        }
        #endregion
        #region in phiếu thăm dò chức năng thanh hà
        /// <summary>
        /// 1:"KẾT QUẢ ĐO MẬT ĐỘ LOÃNG XƯƠNG";
        /// "KẾT QUẢ  THEO DÕI NHỊP TIM THAI VÀ CƠN CO TỬ CUNG  BẰNG MONITOR SẢN KHOA";
        /// </summary>
        /// <param name="_IDCD4"></param>
        /// <param name="mauphieu"></param>
        public static void InPhieuThamDoChucNang(int _IDCD4, int mauphieu, string tenRG)
        {
            List<ContentLHN> _lcontent = new List<ContentLHN>();


            //
            _lcontent = XuatPhieuThamDoChucNang(_IDCD4, tenRG);
            BaoCao.Rep_BC_PhieuThamDoChucNang_30009 rep = new BaoCao.Rep_BC_PhieuThamDoChucNang_30009(mauphieu);
            frmIn frm = new frmIn();
            if (DungChung.Bien.MaBV == "30009" && tenRG == "Đo khúc xạ máy")
            {
                rep.lblTenCQCQ.Text = DungChung.Bien.TenCQ.ToUpper();
                if (_lcontent.Count > 0)
                {
                    rep.lblTenCQ.Text = _lcontent.FirstOrDefault().Khoa;

                    if (_lcontent.FirstOrDefault().NgaytH != null && _lcontent.FirstOrDefault().Ngaycd != null)
                    {
                        DateTime date = _lcontent.FirstOrDefault().NgaytH.Value;
                        DateTime datecd = _lcontent.FirstOrDefault().Ngaycd.Value;
                        rep.lblNgayThang_BSCK.Text = date.Hour + " giờ " + date.Minute + " phút, " + "ngày " + date.Day + " tháng " + date.Month + " năm " + date.Year;
                        rep.lblNgayThangCD.Text = datecd.Hour + " giờ " + datecd.Minute + " phút, " + "ngày " + datecd.Day + " tháng " + datecd.Month + " năm " + datecd.Year;
                    }
                }

            }
            else
            {
                rep.lblTenCQCQ.Text = DungChung.Bien.TenCQCQ.ToUpper();
                rep.lblTenCQ.Text = DungChung.Bien.TenCQ.ToUpper();
                rep.lblNgayThang_BSCK.Text = DateTime.Now.Hour + " giờ " + DateTime.Now.Minute + " phút," + DungChung.Ham.NgaySangChu(DateTime.Now);
                rep.lblNgayThangCD.Text = DateTime.Now.Hour + " giờ " + DateTime.Now.Minute + " phút," + DungChung.Ham.NgaySangChu(DateTime.Now);
            }

            rep.DataSource = _lcontent;
            rep.BindingData();
            rep.CreateDocument();
            frm.prcIN.PrintingSystem = rep.PrintingSystem;
            frm.ShowDialog();
        }

        private static List<ContentLHN> XuatPhieuThamDoChucNang(int _IDCD, string tenRG)
        {
            List<ContentLHN> _lcontent = new List<ContentLHN>();
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            ContentLHN moi = new ContentLHN();
            var qCLSct = (from cls in data.CLS
                          join cd in data.ChiDinhs.Where(p => p.IDCD == _IDCD) on cls.IdCLS equals cd.IdCLS
                          join clsct in data.CLScts on cd.IDCD equals clsct.IDCD
                          join kp in data.KPhongs on cls.MaKP equals kp.MaKP
                          join bn in data.BenhNhans on cls.MaBNhan equals bn.MaBNhan
                          join cb in data.CanBoes on cls.MaCB equals cb.MaCB
                          join cbth in data.CanBoes on cls.MaCBth equals cbth.MaCB into kq
                          from cbthien in kq.DefaultIfEmpty()
                          join bnkb in data.BNKBs on new { n1 = cls.MaBNhan, n2 = cls.MaKP } equals new { n1 = bnkb.MaBNhan, n2 = bnkb.MaKP }
                          select new
                          {
                              cls.NgayThang,
                              cls.IdCLS,
                              cls.NgayTH,
                              cls.MaCB,
                              cls.MaKP,
                              TenCB = (DungChung.Bien.MaBV == "30009" && tenRG == "Đo khúc xạ máy") ? (cb.CapBac + ". " + cb.TenCB) : cb.TenCB,
                              BSCK = (DungChung.Bien.MaBV == "30009" && tenRG == "Đo khúc xạ máy") ? (cbthien != null ? (cbthien.CapBac + ". " + cbthien.TenCB) : "") : (cbthien != null ? cbthien.TenCB : ""),
                              bn.TenBNhan,
                              bn.DChi,
                              bn.SThe,
                              kp.TenKP,
                              bnkb.Buong,
                              bnkb.Giuong,
                              ChanDoan = cls.ChanDoan,
                              cls.MaICD,
                              clsct.KetQua,
                              clsct.KetQua_Rtf,
                              cd.MaDV,
                              cd.KetLuan,
                              cd.LoiDan
                          }).ToList();

            var qDV = (from dv in data.DichVus
                       join tn in data.TieuNhomDVs.Where(p => p.TenRG.Equals(tenRG)) on dv.IdTieuNhom equals tn.IdTieuNhom
                       select new { dv, tn }).ToList();

            var query = (from clsct in qCLSct
                         join dv in qDV on clsct.MaDV equals dv.dv.MaDV
                         select new { clsct, dv.dv, dv.tn }).ToList();

            foreach (var item in query)
            {
                moi = new ContentLHN();
                moi.HoTen = item.clsct.TenBNhan;
                moi.DiaChi = item.clsct.DChi;
                moi.STheBHYT = item.clsct.SThe;
                moi.Khoa = item.clsct.TenKP;
                moi.Buong = item.clsct.Buong;
                moi.Giuong = item.clsct.Giuong;
                moi.ChanDoan = DungChung.Bien.MaBV == "01049" ? DungChung.Ham.FreshString(item.clsct.ChanDoan) + "  Mã ICD: " + DungChung.Ham.FreshString(item.clsct.MaICD) : DungChung.Ham.FreshString(item.clsct.ChanDoan);
                moi.YeuCau = item.dv.TenDV;
                moi.BSChiDinh = item.clsct.TenCB;
                moi.KetQua = item.clsct.KetQua_Rtf == null ? item.clsct.KetQua : item.clsct.KetQua_Rtf;
                moi.BSCK = item.clsct.BSCK;
                moi.LoiDan = item.clsct.LoiDan;
                moi.NgaytH = item.clsct.NgayTH;
                moi.Ngaycd = item.clsct.NgayThang;
                _lcontent.Add(moi);
            }
            return _lcontent;
        }
        #endregion
        #region _InPhieu_XetNghiem
        private class ds
        {
            string donVi;

            public string DonVi
            {
                get { return donVi; }
                set { donVi = value; }
            }
            string tenDVct;

            public string TenDVct
            {
                get { return tenDVct; }
                set { tenDVct = value; }
            }
            string tenDV;

            public string TenDV
            {
                get { return tenDV; }
                set { tenDV = value; }
            }
            int sTTDV;

            public int STTDV
            {
                get { return sTTDV; }
                set { sTTDV = value; }
            }
            int sTT;

            public int STT
            {
                get { return sTT; }
                set { sTT = value; }
            }
            string tSBT;

            public string TSBT
            {
                get { return tSBT; }
                set { tSBT = value; }
            }
            string ketQua;

            public string KetQua
            {
                get { return ketQua; }
                set { ketQua = value; }
            }
            int Count;

            public int count
            {
                get { return Count; }
                set { Count = value; }
            }

            public string check { get; set; }
        }

        public class CLS_XN
        {
            public string TenDV { get; set; }
            public string TenDVct { get; set; }
            public string TSBT { get; set; }
            public string KetQua { get; set; }
            public int? STT { get; set; }
            public int? STTHT { get; set; }
            public double? TSnTu { get; set; }
            public double? TSnDen { get; set; }
            public double? TSnuTu { get; set; }
            public double? TSnuDen { get; set; }
        }

        public static void _InPhieu_XetNghiem(QLBV_Database.QLBVEntities _Data, string _tieunhom, int _Mabn, int idcls, int IsCD, List<int> _lIdCls, List<int?> _lMaDV) // IsCD -> in chi dinh hay ket qua (trong frm_chidinh_moi co dv test covid19 in chung phieu)
        {
            #region 27023 lấy số trên phiếu : BN nôi trú lấy số bệnh án, bệnh nhân ngoại trú số thứ tự tăng theo ngày, thêm cả 01071 (đức 28-09)
            string _so = "";
            if (DungChung.Bien.MaBV == "27023")
            {
                var bnhan = _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn).FirstOrDefault();
                if (bnhan != null)
                {
                    if (bnhan.NoiTru == 1)
                    {
                        var qvv = _Data.VaoViens.Where(parameters => parameters.MaBNhan == _Mabn).Select(p => p.SoBA).FirstOrDefault();
                        if (qvv != null)
                            _so = qvv;
                    }
                    else
                    {

                        DateTime tungay = DungChung.Ham.NgayTu(bnhan.NNhap.Value);
                        DateTime denngay = DungChung.Ham.NgayDen(bnhan.NNhap.Value);
                        var qbn = _Data.BenhNhans.Where(p => p.NNhap >= tungay && p.NNhap <= denngay).Where(p => p.NoiTru == 0).OrderBy(p => p.NNhap).ToList();

                        int count = 0;
                        foreach (var a in qbn)
                        {
                            count++;
                            if (a.MaBNhan == _Mabn)
                                break;
                        }
                        _so = count.ToString();
                    }
                }

            }
            #endregion
            var dongmau = (from a in _Data.CLS.Where(p => p.IdCLS == idcls)
                           join b in _Data.ChiDinhs on a.IdCLS equals b.IdCLS
                           join c in _Data.DichVus on b.MaDV equals c.MaDV
                           join d in _Data.TieuNhomDVs on c.IdTieuNhom equals d.IdTieuNhom
                           select new { c.TenDV, d.TenRG }).ToList().FirstOrDefault();
            string tendv = "";
            string tendv1 = "";
            if (dongmau != null)
            {
                tendv = dongmau.TenDV.ToLower();
                tendv1 = dongmau.TenDV;
            }



            if (DungChung.Bien.MaBV == "34019" && _tieunhom != "Trắc nghiệm tâm lý")
            {


                var par2 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                            join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                            join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                            select new { cls.MaKP, cls.NgayThang, cls.NgayTH, cls.CapCuu, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, MaCBDT = cls.MaCB, cls.MaCBth, bn.NamSinh, bn.ThangSinh, bn.NgaySinh, bn.DTuong, bn.HanBHDen, bn.HanBHTu, kp.TenKP, bn.IDPerson }).ToList();
                if (par2 != null && par2.Count > 0)
                {
                    var par41 = (from cls in _Data.CLS.Where(p => p.IdCLS == idcls)
                                 join chidinh in _Data.ChiDinhs on cls.IdCLS equals chidinh.IdCLS
                                 join dichvu in _Data.DichVus on chidinh.MaDV equals dichvu.MaDV
                                 join tn in _Data.TieuNhomDVs.Where(p => p.TenRG.Contains(_tieunhom)) on dichvu.IdTieuNhom equals tn.IdTieuNhom
                                 join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                                 join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                 select new { dvct.MaDVct, clsct.KetQua, clsct.STTHT, dvct.TenDVct, dvct.TSBT, dvct.DonVi, dichvu.TenDV, IsTrongBH = (chidinh.TrongBH == 1) }).ToList();

                    for (int i = 0; i < 2; i++)
                    {
                        var qhh = par41.Where(o => o.IsTrongBH == (i == 0)).ToList();
                        if (qhh.Count > 0)
                        {
                            frmIn frmIn = new QLBV.frmIn();
                            repPhieuKetQuaXetNghiem_34019_A4 rep = new repPhieuKetQuaXetNghiem_34019_A4();//5
                            rep.xrPictureBox1.Image = QLBV.DungChung.Ham.GetLogo();
                            //rep.SoPhieu.Value = par2.FirstOrDefault().SoPhieu;
                            rep.MaDieuTri.Value = _Mabn;
                            rep.MaBN.Value = par2.FirstOrDefault().IDPerson; ;
                            rep.TenBV.Value = DungChung.Bien.TenCQ.ToUpper();
                            var hthong = _Data.HTHONGs.FirstOrDefault(o => o.MaBV == DungChung.Bien.MaBV);
                            if (hthong != null)
                            {
                                rep.DiaChiBV.Value = hthong.DiaChi;
                            }
                            rep.TenPhieu.Value = "PHIẾU KẾT QUẢ XÉT NGHIỆM";
                            //rep.KPhong.Value = par2.FirstOrDefault().TenKPth;
                            rep.CapCuu.Value = (par2.FirstOrDefault().CapCuu == true) ? "X" : "";
                            rep.TenBNhan.Value = par2.FirstOrDefault().TenBNhan.ToUpper();
                            rep.NgaySinh.Value = DungChung.Ham.GhepNgaySinh("/", par2.FirstOrDefault().NamSinh, par2.FirstOrDefault().ThangSinh, par2.FirstOrDefault().NgaySinh);
                            rep.GioiTinh.Value = par2.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                            rep.GT = par2.FirstOrDefault().GTinh ?? 0;
                            rep.DiaChi.Value = par2.FirstOrDefault().DChi;
                            rep.NgayGio.Value = DungChung.Ham.NgaySangChu(par2.FirstOrDefault().NgayThang.Value);
                            //if (!string.IsNullOrWhiteSpace(par2.FirstOrDefault().DTuong) && par2.FirstOrDefault().DTuong == "BHYT")
                            //{
                            //    rep.BHYT.Value = "X";
                            //}
                            //else
                            //    rep.ThuPhi.Value = "X";
                            if (i == 0)
                                rep.BHYT.Value = "X";
                            else
                                rep.ThuPhi.Value = "X";
                            rep.CapCuu.Value = (par2.FirstOrDefault().CapCuu == true) ? "X" : "";

                            if (i == 0)
                            {
                                if (!string.IsNullOrWhiteSpace(par2.FirstOrDefault().SThe))
                                {
                                    rep.HanThe.Value = par2.FirstOrDefault().HanBHDen != null ? par2.FirstOrDefault().HanBHDen.Value.ToString("dd/MM/yyyy") : "";
                                    rep.HanTu.Value = par2.FirstOrDefault().HanBHTu != null ? par2.FirstOrDefault().HanBHTu.Value.ToString("dd/MM/yyyy") : "";
                                    rep.SThe1.Value = par2.FirstOrDefault().SThe.Substring(0, 2);
                                    rep.SThe2.Value = par2.FirstOrDefault().SThe.Substring(2, 1);
                                    rep.SThe3.Value = par2.FirstOrDefault().SThe.Substring(3, 2);
                                    rep.SThe4.Value = par2.FirstOrDefault().SThe.Substring(5, 2);
                                    rep.SThe5.Value = par2.FirstOrDefault().SThe.Substring(7, 3);
                                    rep.SThe6.Value = par2.FirstOrDefault().SThe.Substring(10, 5);
                                }
                            }
                            rep.paramTenKP.Value = par2.FirstOrDefault().TenKP;
                            var maKp = (par2.FirstOrDefault().MaKP == null ? 0 : par2.FirstOrDefault().MaKP.Value);
                            var kbcd = (from bnkb in _Data.BNKBs.Where(p => p.MaBNhan == _Mabn && p.MaKP == maKp)
                                        select bnkb).ToList();
                            if (kbcd != null && kbcd.Count > 0)
                            {
                                rep.BenhChinh.Value = kbcd.FirstOrDefault().ChanDoan + " (" + kbcd.FirstOrDefault().MaICD + ")";
                                rep.BenhPhu.Value = kbcd.FirstOrDefault().BenhKhac;
                                if (!string.IsNullOrWhiteSpace(kbcd.FirstOrDefault().Buong))
                                {
                                    var spBuong = kbcd.FirstOrDefault().Buong.Split(';');
                                    if (spBuong != null && spBuong.Count() > 0)
                                    {
                                        rep.paramBuong.Value = spBuong[spBuong.Count() - 1];
                                    }
                                }
                                if (!string.IsNullOrWhiteSpace(kbcd.FirstOrDefault().Giuong))
                                {
                                    var spGiuong = kbcd.FirstOrDefault().Giuong.Split(';');
                                    if (spGiuong != null && spGiuong.Count() > 0)
                                    {
                                        rep.paramGiuong.Value = spGiuong[spGiuong.Count() - 1];
                                    }
                                }
                            }
                            //rep.YCKT.Value = par2.FirstOrDefault().TenDV;
                            var list = qhh.ToList();
                            if (DungChung.Bien.MaBV == "27023")
                            {
                                foreach (var item in list)
                                {
                                    if (string.IsNullOrEmpty(item.KetQua))
                                    {
                                        MessageBox.Show("Không thể xem vì chưa có kết quả");
                                        return;
                                    }
                                }
                            }
                            rep.DataSource = qhh.ToList();
                            rep.BindingData();
                            rep.CreateDocument();
                            frmIn.prcIN.PrintingSystem = rep.PrintingSystem;
                            if (PrintNow)
                                DungChung.Ham.PrintReport(rep);
                            else
                                frmIn.ShowDialog();
                        }
                    }
                    return;
                }
            }
            #region 14018
            if (DungChung.Bien.MaBV == "14018" && (_tieunhom == "XN huyết học" || _tieunhom == "XN hóa sinh máu"))
            {
                int gioiTinh = 0;
                Dictionary<string, object> dic = new Dictionary<string, object>();
                var ttbn = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                            join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                            //join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                            //join kpth1 in _Data.KPhongs on cls.MaKPth equals kpth1.MaKP into kqKp
                            //from kpth in kqKp.DefaultIfEmpty()
                            join cb in _Data.CanBoes on cls.MaCB equals cb.MaCB
                            join cbth1 in _Data.CanBoes on cls.MaCBth equals cbth1.MaCB into kqCb
                            from cbth in kqCb.DefaultIfEmpty()
                            select new { bn.IDPerson, bn.PID, cls.NgayTH, cls.CapCuu, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, cls.MaKP, cls.MaKPth, cls.MaCBth, bn.DTuong, bn.Tuoi, bn.SThe, cls.MaCB, bn.NamSinh, TenCBth = cbth != null ? cbth.TenCB : "", cb.TenCB, cls.NgayThang }).ToList();

                dic.Add("TieuDe", _tieunhom == "XN huyết học" ? "PHIẾU TRẢ KẾT QUẢ XÉT NGHIỆM HUYẾT HỌC" : "PHIẾU TRẢ KẾT QUẢ XÉT NGHIỆM HÓA SINH");
                dic.Add("NamSinh", ttbn.FirstOrDefault().NamSinh);
                if (ttbn != null && ttbn.Count > 0)
                {
                    gioiTinh = ttbn.FirstOrDefault().GTinh ?? 0;
                    dic.Add("TenBN", ttbn.FirstOrDefault().TenBNhan.ToUpper());
                    dic.Add("GioiTinh", ttbn.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ");
                    dic.Add("MaBN", ttbn.FirstOrDefault().MaBNhan);
                    dic.Add("PID", ttbn.FirstOrDefault().PID);
                    dic.Add("IDPerson", ttbn.FirstOrDefault().IDPerson);

                    if (!string.IsNullOrWhiteSpace(ttbn.FirstOrDefault().SThe))
                    {
                        dic.Add("SoTheBHYT1", ttbn.FirstOrDefault().SThe.Substring(0, 2));
                        dic.Add("SoTheBHYT2", ttbn.FirstOrDefault().SThe.Substring(2, 1));
                        dic.Add("SoTheBHYT3", ttbn.FirstOrDefault().SThe.Substring(3, 2));
                        dic.Add("SoTheBHYT4", ttbn.FirstOrDefault().SThe.Substring(5, 2));
                        dic.Add("SoTheBHYT5", ttbn.FirstOrDefault().SThe.Substring(8, 3));
                        dic.Add("SoTheBHYT6", ttbn.FirstOrDefault().SThe.Substring(11));
                    }
                    else
                    {
                        dic.Add("SoTheBHYT1", "");
                        dic.Add("SoTheBHYT2", "");
                        dic.Add("SoTheBHYT3", "");
                        dic.Add("SoTheBHYT4", "");
                        dic.Add("SoTheBHYT5", "");
                        dic.Add("SoTheBHYT6", "");
                    }

                    var maKP = ttbn.FirstOrDefault().MaKP;
                    var bnkb = _Data.BNKBs.FirstOrDefault(o => o.MaKP == maKP && o.MaBNhan == _Mabn);
                    if (bnkb != null)
                    {
                        dic.Add("ChanDoan", DungChung.Bien.MaBV == "14018" ? DungChung.Ham.GetChanDoanKB(_Data, _Mabn) : bnkb.MaICD + ":" + bnkb.ChanDoan + (!string.IsNullOrWhiteSpace(bnkb.BenhKhac) ? (";" + bnkb.BenhKhac) : ""));
                    }

                    var arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, ttbn.FirstOrDefault().MaKP == null ? 0 : ttbn.FirstOrDefault().MaKP.Value, true);
                    dic.Add("Buong", arrThongTinBNKB[2]);
                    dic.Add("Giuong", arrThongTinBNKB[3]);
                    dic.Add("Khoa", arrThongTinBNKB[4]);
                    dic.Add("DiaChi", ttbn.FirstOrDefault().DChi);
                    dic.Add("TenCBThucHien", ttbn.FirstOrDefault().TenCBth);
                    dic.Add("TenCBDieuTri", ttbn.FirstOrDefault().TenCB);
                    dic.Add("NgayTH", ttbn.FirstOrDefault().NgayTH != null ? (ttbn.FirstOrDefault().NgayTH.Value.Hour + " giờ " + ttbn.FirstOrDefault().NgayTH.Value.Minute + " phút" + DungChung.Ham.NgaySangChu(ttbn.FirstOrDefault().NgayTH.Value)) : ("..........Ngày...tháng...năm....."));
                    dic.Add("NgayCD", ttbn.FirstOrDefault().NgayThang != null ? DungChung.Ham.NgaySangChu(ttbn.FirstOrDefault().NgayThang.Value) : ("Ngày...tháng...năm....."));
                }

                List<CLS_XN> source = new List<CLS_XN>();
                var q0 = (from cls in _Data.CLS.Where(p => p.MaBNhan == _Mabn && p.IdCLS == idcls)
                          join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                          join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                          join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                          join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                          select new CLS_XN { TenDV = dv.TenDV, TenDVct = dvct.TenDVct, TSBT = gioiTinh == 0 ? dvct.TSBTnu : dvct.TSBTn, KetQua = clsct.KetQua, STT = dvct.STT, STTHT = clsct.STTHT, TSnTu = dvct.TSnTu, TSnDen = dvct.TSnDen, TSnuTu = dvct.TSnuTu, TSnuDen = dvct.TSnuDen }).OrderBy(o => o.STT != null).ThenBy(o => o.STT).ToList();

                if (q0.Count > 0)
                {
                    var dv = new CLS_XN { TenDVct = q0.FirstOrDefault().TenDV, STT = 1, STTHT = 1 };
                    source.Add(dv);
                }
                source.AddRange(q0);

                DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuKQXN_HuyetHoc_HoaSinh_14018, source, dic, PrintNow);
                return;
            }
            #endregion

            switch (_tieunhom)
            {
                case "XN đờm":
                    //phieuxetnghiemdom(_Data, idcls); // mẫu cũ
                    if (DungChung.Bien.MaBV != "27023")
                        PhieuXNLao(idcls, _so);
                    else
                        PhieuXNLao_27023(idcls, _so);
                    break;
                #region xn chọc dò
                case "XN dịch chọc dò":
                    #region 02005
                    if (DungChung.Bien.MaBV == "02005")
                    {
                        frmIn frmcd = new frmIn();
                        BaoCao.Rep_PhieuXNNTPDCD_VX01 repcd1 = new BaoCao.Rep_PhieuXNNTPDCD_VX01();
                        int _makpcd1 = 0;

                        var parcd1 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                      join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                      select new { cls.NgayTH, cls.CapCuu, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, cls.MaKP, cls.MaCBth, bn.DTuong, bn.Tuoi, bn.SThe, cls.MaCB }).ToList();
                        if (parcd1.Count > 0)
                        {
                            _makpcd1 = parcd1.FirstOrDefault().MaKP == null ? 0 : parcd1.FirstOrDefault().MaKP.Value;
                            repcd1.DChi.Value = parcd1.FirstOrDefault().DChi;
                            repcd1.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                            repcd1.TenBNhan.Value = parcd1.FirstOrDefault().TenBNhan.ToUpper();
                            repcd1.MaBNhan.Value = parcd1.FirstOrDefault().MaBNhan;
                            repcd1.DoiTuong.Value = parcd1.FirstOrDefault().DTuong;
                            repcd1.KhoaCBDT.Value = parcd1.FirstOrDefault().MaKP;
                            repcd1.MaCBXN.Value = parcd1.FirstOrDefault().MaCBth;
                            repcd1.MaCBDT.Value = parcd1.FirstOrDefault().MaCB;
                            int gioiTinh = int.Parse(parcd1.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                repcd1.GioiTinh.Value = "Nam";
                            }
                            else if (gioiTinh == 0)
                            {
                                repcd1.GioiTinh.Value = "Nam";
                            }
                            if (parcd1.FirstOrDefault().SThe != null && parcd1.FirstOrDefault().SThe.Length >= 15)
                            {
                                repcd1.SThe.Value = parcd1.FirstOrDefault().SThe;
                            }
                            bool capcuu = parcd1.FirstOrDefault().CapCuu;
                            if (capcuu)
                            {
                                repcd1.CapCuu.Value = "X";
                            }
                            else repcd1.Thuong.Value = "X";
                            if (parcd1.FirstOrDefault().NgayTH != null)
                                repcd1.NgayTH.Value = DungChung.Ham.NgaySangChu(parcd1.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                repcd1.NgayTH.Value = ".... giờ, ngày ..... tháng ..... năm .....";
                        }
                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, parcd1.FirstOrDefault().MaKP == null ? 0 : parcd1.FirstOrDefault().MaKP.Value, true);
                        repcd1.ChanDoan.Value = arrThongTinBNKB[1];
                        repcd1.Buong.Value = arrThongTinBNKB[2];
                        repcd1.Giuong.Value = arrThongTinBNKB[3];
                        repcd1.Khoa.Value = arrThongTinBNKB[4];
                        var parx = (from cls in _Data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idcls)
                                    join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                    join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD  //select new {cls.MaBNhan }).ToList();
                                    // join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                                    join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                    // join tn in _Data.TieuNhomDVs.Where(p => p.TenRG.Contains("XN dịch chọc dò")) on dv.IdTieuNhom equals tn.IdTieuNhom
                                    group new { dvct } by new { dvct.TenDVct, dvct.TSBT, clsct.KetQua } into kq
                                    select new { TenDVct = kq.Key.TenDVct, TSBT = kq.Key.TSBT, KetQua = kq.Key.KetQua }).ToList();
                        if (parx.Count > 0)
                        {
                            repcd1.DataSource = parx.ToList();
                            repcd1.BindingData();
                        }

                        repcd1.CreateDocument();
                        frmcd.prcIN.PrintingSystem = repcd1.PrintingSystem;
                        if (PrintNow)
                            DungChung.Ham.PrintReport(repcd1);
                        else
                            frmcd.ShowDialog();
                        break;

                    }
                    #endregion
                    #region bv khác
                    else
                    {
                        frmIn frmcd = new frmIn();
                        BaoCao.Rep_PhieuXNNuocTieuPhanDCD repcd = new BaoCao.Rep_PhieuXNNuocTieuPhanDCD(_lIdCls, _lMaDV);
                        int _makpcd = 0;
                        //repcd.MaBNhan.Value = _Mabn;
                        //repcd.Status.Value = DungChung.Bien.InPhoi;
                        var parcd = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                     join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                     join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                     join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                     select new { cls.ChanDoan, cls.MaKP, cls.NgayTH, cls.NgayThang, cd.MaMay, cls.CapCuu, kp.TenKP, bn.TenBNhan, bn.NamSinh, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, cls.MaCBth, cls.Status, cls.BarCode, cls.MaKPth }).ToList();
                        if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                        {
                            repcd.SoPhieu.Value = _Mabn.ToString();
                            if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                            {
                                repcd.xrLabel47.Text = repcd.txtBarcode.Text = parcd.Count > 0 ? parcd.FirstOrDefault().BarCode : "";
                                repcd.xrLabel49.Visible = repcd.lblBarcode.Visible = true;
                                repcd.xrLabel47.Visible = repcd.txtBarcode.Visible = true;
                            }

                        }

                        else
                            repcd.SoPhieu.Value = idcls;
                        if (DungChung.Bien.MaBV == "27023")
                            repcd.So.Value = _so;
                        else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                        {
                            if (parcd.Count > 0)
                            {
                                int mabn = parcd.FirstOrDefault().MaBNhan;
                                var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                if (qvv != null)
                                    repcd.So.Value = qvv.SoVV;
                                else
                                    repcd.So.Value = "";
                            }
                        }
                        else
                            repcd.So.Value = idcls;
                        if (parcd.Count > 0)
                        {
                            if (DungChung.Bien.MaBV == "12122")
                            {
                                if (parcd.FirstOrDefault().Status == 0)
                                {
                                    repcd.lab111.Visible = false;
                                    repcd.lab113.Visible = false;
                                    repcd.colTenTKXN.Visible = false;
                                }
                                else
                                {
                                    repcd.lab110.Visible = false;
                                    repcd.lab112.Visible = false;
                                    repcd.colTenBSDT.Visible = false;
                                }
                            }
                            if (DungChung.Bien.MaBV == "30003" && !string.IsNullOrEmpty(parcd.FirstOrDefault().MaMay))
                            {
                                string _mamay = parcd.FirstOrDefault().MaMay;
                                var tenmay = _Data.DichVus.Where(p => p.PLoai > 2 && p.MaQD == _mamay).ToList();
                                if (tenmay.Count > 0)
                                {
                                    repcd.MaMay.Value = "Phương pháp xét nghiệm: [" + tenmay.FirstOrDefault().TenDV + "] [" + _mamay + "]";
                                }
                                else
                                {
                                    repcd.MaMay.Value = "Phương pháp xét nghiệm:";
                                }
                            }
                            _makpcd = parcd.FirstOrDefault().MaKP == null ? 0 : parcd.FirstOrDefault().MaKP.Value;
                            repcd.MaCBth.Value = parcd.FirstOrDefault().MaCBth;
                            if (parcd.FirstOrDefault().MaCBth != null)
                            {
                                string ma = parcd.FirstOrDefault().MaCBth.ToString();
                                var cbo = _Data.CanBoes.Where(p => p.MaCB == ma).Select(p => p.TenCB).ToList();
                                if (cbo.Count > 0)
                                    repcd.Macb.Value = (DungChung.Bien.MaBV == "12001" ? "BS: " : (DungChung.Bien.MaBV == "27023" ? "Họ tên: " : "")) + cbo.FirstOrDefault();
                            }
                            if (parcd.FirstOrDefault().MaCB != null)
                            {
                                string ma = parcd.FirstOrDefault().MaCB.ToString();
                                var cbodt = _Data.CanBoes.Where(p => p.MaCB == ma).Select(p => p.TenCB).ToList();
                                if (cbodt.Count > 0)
                                {
                                    if (DungChung.Bien.MaBV == "27023")
                                        repcd.MaCBDT.Value = "Họ tên: " + cbodt.FirstOrDefault();
                                    else
                                        repcd.MaCBDT.Value = cbodt.FirstOrDefault();
                                }
                            }

                            repcd.Khoa.Value = parcd.FirstOrDefault().TenKP;
                            repcd.NamSinh.Value = parcd.FirstOrDefault().NamSinh;
                            repcd.DiaChi.Value = parcd.FirstOrDefault().DChi;
                            repcd.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                            repcd.TenBNhan.Value = parcd.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(parcd.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                repcd.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                repcd.Nam.Value = "/";
                            }
                            if (parcd.FirstOrDefault().SThe != null && parcd.FirstOrDefault().SThe.Length >= 15)
                            {
                                repcd.SThe1.Value = parcd.FirstOrDefault().SThe.Substring(0, 3);
                                repcd.SThe2.Value = parcd.FirstOrDefault().SThe.Substring(3, 2);
                                repcd.SThe3.Value = parcd.FirstOrDefault().SThe.Substring(5, 2);
                                repcd.SThe4.Value = parcd.FirstOrDefault().SThe.Substring(7, 3);
                                repcd.SThe5.Value = parcd.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            bool capcuu = parcd.FirstOrDefault().CapCuu;
                            if (capcuu)
                            {
                                repcd.CapCuu.Value = "X";
                            }
                            else repcd.Thuong.Value = "X";
                            if (parcd.FirstOrDefault().NgayTH != null)
                                repcd.NgayTH.Value = DungChung.Ham.NgaySangChu(parcd.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                repcd.NgayTH.Value = ".... giờ, ngày ..... tháng ..... năm .....";
                            if (parcd.FirstOrDefault().NgayThang != null)
                                repcd.NgayCD.Value = DungChung.Ham.NgaySangChu(parcd.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                        }
                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makpcd, true);
                        repcd.MaICD.Value = arrThongTinBNKB[0];
                        if (DungChung.Bien.MaBV == "20001")
                            repcd.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                        else
                        {
                            repcd.ChanDoan.Value = (parcd.FirstOrDefault().ChanDoan != null || parcd.FirstOrDefault().ChanDoan != "") && DungChung.Bien.MaBV == "24272" ? parcd.FirstOrDefault().ChanDoan + ";" : "";
                            if (DungChung.Bien.MaBV != "24272")
                            {
                                repcd.ChanDoan.Value += arrThongTinBNKB[1];
                            }

                        }
                        repcd.Buong.Value = arrThongTinBNKB[2];
                        repcd.Giuong.Value = arrThongTinBNKB[3];
                        repcd.Khoa.Value = arrThongTinBNKB[4];
                        if (DungChung.Bien.MaBV == "30010")
                        {
                            int mkpth = Convert.ToInt32(parcd.FirstOrDefault().MaKPth.Value);
                            repcd.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                        }//yenbg1
                        repcd.CreateDocument();
                        frmcd.prcIN.PrintingSystem = repcd.PrintingSystem;
                        if (PrintNow)
                            DungChung.Ham.PrintReport(repcd);
                        else
                            frmcd.ShowDialog();
                    }
                    break;
                #endregion
                #endregion
                #region XN hóa sinh máu
                case "XN hóa sinh máu":
                    #region chí linh
                    if (DungChung.Bien.MaBV == "30003") // Chí Linh
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuXNHoaSinhMau_CL rep = new BaoCao.repPhieuXNHoaSinhMau_CL();
                        rep.MaBNhan.Value = _Mabn;
                        rep.Status.Value = DungChung.Bien.InPhoi;
                        rep.SoPhieu.Value = _Mabn;
                        rep.paramIdCLS.Value = idcls;
                        var par = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                   join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                   join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                   select new { cls.NgayTH, cls.NgayThang, cls.CapCuu, cd.MaMay, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, cls.MaKP }).ToList();
                        if (par.Count > 0)
                        {
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().MaMay))
                            {
                                string _mamay = par.FirstOrDefault().MaMay;
                                var tenmay = _Data.DichVus.Where(p => p.PLoai > 2 && p.MaQD == _mamay).ToList();
                                if (tenmay.Count > 0)
                                {
                                    rep.MaMay.Value = "Phương pháp xét nghiệm: [" + tenmay.FirstOrDefault().TenDV + "] [" + _mamay + "]";
                                }
                                else
                                {
                                    rep.MaMay.Value = "Phương pháp xét nghiệm:";
                                }
                            }
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                            rep.ChanDoan.Value = arrThongTinBNKB[1];
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];
                            rep.Khoa.Value = arrThongTinBNKB[4];

                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nam.Value = "X";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nu.Value = "X";
                            }
                            if (par.FirstOrDefault().SThe != null && par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            bool capcuu = par.FirstOrDefault().CapCuu;
                            if (capcuu)
                            {
                                rep.CapCuu.Value = "X";
                            }
                            else rep.Thuong.Value = "X";
                            if (par.FirstOrDefault().NgayTH != null)
                            {
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            }
                            else { rep.NgayTH.Value = "Ngày ..... tháng ...... năm....."; }
                            if (par.FirstOrDefault().NgayThang != null)
                            {
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            }
                            else { rep.NgayCD.Value = "Ngày ..... tháng ...... năm....."; }
                        }

                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        if (PrintNow)
                            DungChung.Ham.PrintReport(rep);
                        else
                            frm.ShowDialog();
                        break;
                    }
                    #endregion
                    #region 02005
                    if (DungChung.Bien.MaBV == "02005")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.Rep_PhieuXNHoaSinhMau_VX02 repvx = new BaoCao.Rep_PhieuXNHoaSinhMau_VX02();
                        repvx.MaBNhan.Value = _Mabn;
                        int _makpvx = 0;

                        var parvx = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                     join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                     select new { cls.NgayTH, cls.CapCuu, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.DTuong, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, cls.MaKP, cls.MaCBth }).ToList();
                        if (parvx.Count > 0)
                        {
                            _makpvx = parvx.FirstOrDefault().MaKP == null ? 0 : parvx.FirstOrDefault().MaKP.Value;
                            repvx.TenBNhan.Value = parvx.FirstOrDefault().TenBNhan.ToUpper();
                            repvx.DChi.Value = parvx.FirstOrDefault().DChi;
                            repvx.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                            repvx.DTuong.Value = parvx.FirstOrDefault().DTuong;
                            repvx.MaBSCD.Value = parvx.FirstOrDefault().MaCB;
                            repvx.KhoaBSCD.Value = parvx.FirstOrDefault().MaKP;
                            repvx.MaBSCK.Value = parvx.FirstOrDefault().MaCBth;
                            int gioiTinh = int.Parse(parvx.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                repvx.GioiTinh.Value = "Nam";
                            }
                            else if (gioiTinh == 0)
                            {
                                repvx.GioiTinh.Value = "Nữ";
                            }
                            repvx.SThe.Value = parvx.FirstOrDefault().SThe;
                            bool capcuu = parvx.FirstOrDefault().CapCuu;
                            if (capcuu)
                            {
                                repvx.CapCuu.Value = "X";
                            }
                            else repvx.Thuong.Value = "X";
                            if (parvx.FirstOrDefault().NgayTH != null)
                                repvx.NgayTH.Value = DungChung.Ham.NgaySangChu(parvx.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                repvx.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                        }
                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makpvx, true);
                        repvx.ChanDoan.Value = arrThongTinBNKB[1];
                        repvx.Buong.Value = arrThongTinBNKB[2];
                        repvx.Giuong.Value = arrThongTinBNKB[3];
                        repvx.Khoa.Value = arrThongTinBNKB[4];
                        var qm = (from cls in _Data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idcls)
                                  join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                  join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                  join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                  select new { dvct.TenDVct, dvct.TSBT, clsct.KetQua }).ToList();
                        if (qm.Count > 0)
                        {
                            repvx.DataSource = qm.ToList();
                            repvx.BindingData();
                            repvx.CreateDocument();
                            frm.prcIN.PrintingSystem = repvx.PrintingSystem;
                            if (PrintNow)
                                DungChung.Ham.PrintReport(repvx);
                            else
                                frm.ShowDialog();
                        }

                    }
                    #endregion
                    else
                    {
                        #region YÊn Mỹ
                        if (DungChung.Bien.MaBV == "33080")//In M?u Yên M? 
                        {
                            frmIn frm = new frmIn();
                            BaoCao.Rep_PhieuXNHoaSinhMau_YM01 repym = new BaoCao.Rep_PhieuXNHoaSinhMau_YM01();
                            repym.TenBC.Value = ("Kết quả xét nghiệm").ToUpper();
                            int _day = 0;
                            var qym1 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                        join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                        join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                                        join tn in _Data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                        select new { bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.NamSinh, cls.MaCB, cls.MaKP, cls.MaCBth, cls.NgayTH }).ToList();
                            if (qym1.Count > 0)
                            {
                                int makp = 0;
                                if (qym1.FirstOrDefault().MaKP != null)
                                {
                                    makp = qym1.FirstOrDefault().MaKP.Value;
                                }
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, makp, true);
                                repym.ChanDoan.Value = arrThongTinBNKB[1];
                                repym.MaKP.Value = makp;
                                repym.TenKP.Value = arrThongTinBNKB[4];

                                if (qym1.FirstOrDefault().NgayTH != null)
                                    _day = qym1.FirstOrDefault().NgayTH.Value.Day;
                                repym.paramMaBN.Value = qym1.FirstOrDefault().MaBNhan;
                                repym.TenBNhan.Value = qym1.FirstOrDefault().TenBNhan;
                                repym.DChi.Value = qym1.FirstOrDefault().DChi;
                                repym.NamSinh.Value = qym1.FirstOrDefault().NamSinh;
                                repym.BSCD.Value = qym1.FirstOrDefault().MaCB;
                                repym.MaBSTH.Value = qym1.FirstOrDefault().MaCBth;
                                if (qym1.FirstOrDefault().NgayTH != null)
                                {
                                    repym.NgayTH.Value = DungChung.Ham.NgaySangChu(qym1.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                }
                                else { repym.NgayTH.Value = "Ngày ..... tháng ...... năm ....."; }
                                int gioiTinh = int.Parse(qym1.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    repym.GTinh.Value = "Nam";
                                }
                                else if (gioiTinh == 0)
                                {
                                    repym.GTinh.Value = "Nữ";
                                }
                            }
                            var qym2 = (from cls in _Data.CLS.Where(p => p.MaBNhan == _Mabn)
                                        join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                        join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                        join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                                        join tn in _Data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                        where (cls.NgayTH.Value.Day == _day)
                                        where (tn.TenRG == "XN hóa sinh máu" || tn.TenRG == "XN nước tiểu" || tn.TenRG == "XN khác")
                                        select new { dvct.MaDVct, tn.TenTN, dvct.TenDVct, dvct.TSBT, dvct.DonVi, dvct.TSBTnu, clsct.KetQua, dvct.STT }).OrderBy(p => p.STT).ThenBy(p => p.TenDVct).ToList();
                            repym.DataSource = qym2.ToList();
                            repym.BindingData();
                            repym.CreateDocument();
                            frm.prcIN.PrintingSystem = repym.PrintingSystem;
                            if (PrintNow)
                                DungChung.Ham.PrintReport(repym);
                            else
                                frm.ShowDialog();
                            break;
                        }
                        #endregion

                        else
                        {
                            #region Nam sách
                            if (DungChung.Bien.MaBV == "30004")//In M?u Nam sách
                            {
                                frmIn frm = new frmIn();
                                BaoCao.repPhieuXNHoaSinhMau_NSach repns = new BaoCao.repPhieuXNHoaSinhMau_NSach();
                                // repym.TenBC.Value = ("k?t qu? xét nghi?m sinh hóa máu").ToUpper();
                                repns.SoPhieu.Value = idcls;
                                int _makpns = 0;


                                var qns1 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                            join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                            select new { cls.NgayThang, cls.CapCuu, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, cls.MaKP, cls.MaCBth, cls.NgayTH }).ToList();
                                if (qns1.Count > 0)
                                {
                                    _makpns = qns1.FirstOrDefault().MaKP == null ? 0 : qns1.FirstOrDefault().MaKP.Value;
                                    repns.TenBN.Value = qns1.FirstOrDefault().TenBNhan;
                                    repns.DiaChi.Value = qns1.FirstOrDefault().DChi;
                                    if (qns1.FirstOrDefault().Tuoi != null)
                                        repns.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                                    repns.MaCBDT.Value = qns1.FirstOrDefault().MaCB;
                                    repns.Macb.Value = qns1.FirstOrDefault().MaCBth;
                                    if (qns1.FirstOrDefault().NgayTH != null)
                                    {
                                        repns.NgayTH.Value = DungChung.Ham.NgaySangChu(qns1.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    }
                                    else { repns.NgayTH.Value = "Ngày ..... tháng ...... năm....."; }
                                    if (qns1.FirstOrDefault().NgayThang != null)
                                    {
                                        repns.NgayCD.Value = DungChung.Ham.NgaySangChu(qns1.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    }
                                    else { repns.NgayCD.Value = "Ngày ..... tháng ...... năm....."; }
                                    int gioiTinh = int.Parse(qns1.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        repns.Nu.Value = "/".ToUpper();
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        repns.Nam.Value = "/".ToUpper();
                                    }
                                    if (qns1.FirstOrDefault().SThe != null && qns1.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        repns.SThe1.Value = qns1.FirstOrDefault().SThe.Substring(0, 3);
                                        repns.SThe2.Value = qns1.FirstOrDefault().SThe.Substring(3, 2);
                                        repns.SThe3.Value = qns1.FirstOrDefault().SThe.Substring(5, 2);
                                        repns.SThe4.Value = qns1.FirstOrDefault().SThe.Substring(7, 3);
                                        repns.SThe5.Value = qns1.FirstOrDefault().SThe.Substring(10, 5);
                                    }
                                    bool capcuu = qns1.FirstOrDefault().CapCuu;
                                    if (capcuu)
                                    {
                                        repns.CapCuu.Value = "X";
                                    }
                                    else repns.Thuong.Value = "X";
                                }
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makpns, true);
                                repns.ChanDoan.Value = arrThongTinBNKB[1];
                                repns.Buong.Value = arrThongTinBNKB[2];
                                repns.Giuong.Value = arrThongTinBNKB[3];
                                repns.Khoa.Value = arrThongTinBNKB[4];

                                repns.CreateDocument();
                                frm.prcIN.PrintingSystem = repns.PrintingSystem;
                                if (PrintNow)
                                    DungChung.Ham.PrintReport(repns);
                                else
                                    frm.ShowDialog();

                            }
                            #region Nam sách new
                            else if (DungChung.Bien.MaBV == "30004")
                            {
                                string TenKP = ""; string MaMay = "";
                                List<InXNTongHop> _ltn = new List<InXNTongHop>();
                                _ltn = (from cd in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                                        join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                        join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                                        join tndv in _Data.TieuNhomDVs on dv.IdTieuNhom equals tndv.IdTieuNhom
                                        join tn in _Data.DichVucts on clsct.MaDVct equals tn.MaDVct
                                        select new InXNTongHop
                                        {
                                            IdTieuNhom = tndv.IdTieuNhom,
                                            TenTN = tndv.TenTN,
                                            MaMay = cd.MaMay ?? "",
                                            IdCLS = cd.IdCLS ?? 0,
                                            IdCD = cd.IDCD,

                                        }).ToList();
                                if (_ltn.Count() > 0)
                                {
                                    var kps = (from cls in _Data.CLS.Where(p => p.IdCLS == idcls)
                                               join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                               select new { kp.TenKP }).ToList();
                                    CLS.InPhieu._inPhieuXNTongHop_30004(_Mabn, _ltn, false, TenKP = kps.FirstOrDefault().TenKP ?? "", MaMay);
                                }
                            }
                            #endregion
                            #endregion
                            else if (DungChung.Bien.MaBV == "30299")
                            {
                                XNHoaSinhMau_30299(_Data, idcls, _Mabn);
                            }
                            else if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                            {
                                _InPhieuSinhHoaMau_01071(_Mabn, idcls, _tieunhom);
                            }

                            #region BV 27001
                            else if (DungChung.Bien.MaBV == "27001")
                            {
                                frmIn frm = new frmIn();
                                //BaoCao.rep_PhieuXNHoaSinhMau_A5 rep = new BaoCao.rep_PhieuXNHoaSinhMau_A5();
                                BaoCao.repPhieuXNHoaSinhMau rep = new BaoCao.repPhieuXNHoaSinhMau();
                                int _makp = 0;
                                rep.MaBNhan.Value = _Mabn;
                                //rep.Status.Value = DungChung.Bien.InPhoi;

                                rep.SoPhieu.Value = idcls;

                                var par = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                           join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                           select new { cls.MaKP, cls.MaCBth, cls.BarCode, cls.NgayTH, cls.NgayThang, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, cls.CapCuu, bn.Tuoi, bn.SThe, cls.MaCB, cls.MaKPth }).ToList();

                                if (DungChung.Bien.MaBV == "27023")
                                    rep.So.Value = _so;
                                else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                {
                                    if (par.Count > 0)
                                    {
                                        int mabnhan = par.FirstOrDefault().MaBNhan;
                                        var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabnhan).FirstOrDefault();
                                        if (qvv != null)
                                            rep.So.Value = qvv.SoVV;
                                        else
                                            rep.So.Value = "";
                                    }
                                }
                                else
                                    rep.So.Value = idcls;
                                if (par.Count > 0)
                                {
                                    rep.TXTBARCODE.Text = par.FirstOrDefault().BarCode == null ? "" : ("Barcode: " + par.FirstOrDefault().BarCode.ToString());
                                    _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                                    rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                    rep.Macb.Value = par.FirstOrDefault().MaCBth;
                                    rep.DiaChi.Value = par.FirstOrDefault().DChi;
                                    rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                                    rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep.Nu.Value = "/";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep.Nam.Value = "/";
                                    }
                                    if (par.FirstOrDefault().SThe != null && par.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                        rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                        rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                        rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                        rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                    }
                                    bool capcuu = par.FirstOrDefault().CapCuu;
                                    if (capcuu)
                                    {
                                        rep.CapCuu.Value = "X";
                                    }
                                    else rep.Thuong.Value = "X";
                                }

                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp, true);
                                rep.ChanDoan.Value = arrThongTinBNKB[1];
                                rep.Buong.Value = arrThongTinBNKB[2];
                                rep.Giuong.Value = arrThongTinBNKB[3];
                                rep.Khoa.Value = arrThongTinBNKB[4];

                                if (par.FirstOrDefault().NgayThang != null)
                                    rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                else
                                    rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                if (par.FirstOrDefault().NgayTH != null)
                                    rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                rep.lab110.Visible = false;
                                rep.lab112.Visible = false;
                                rep.colTenBSDT.Visible = false;
                                rep.CreateDocument();
                                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                if (PrintNow)
                                    DungChung.Ham.PrintReport(rep);
                                else
                                    frm.ShowDialog();
                            }
                            #endregion
                            #region chung
                            else
                            {
                                // Here
                                frmIn frm = new frmIn();
                                BaoCao.repPhieuXNHoaSinhMau rep = new BaoCao.repPhieuXNHoaSinhMau(_lIdCls, _lMaDV, null);
                                int _makp = 0;
                                rep.MaBNhan.Value = _Mabn;
                                rep.Status.Value = DungChung.Bien.InPhoi;
                                rep.colMaBN.Text = _Mabn.ToString();
                                rep.SoPhieu.Value = idcls;
                                if (DungChung.Bien.MaBV == "24012")
                                {
                                    rep.xrLabel86.Visible = true;
                                    rep.xrLabel87.Visible = true;
                                    rep.Parameters["MaICD"].Value = arrThongTinBNKB[0];
                                }
                                var par = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                           join bnkb in _Data.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                                           join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                           select new { bnkb.ChanDoanBD, cls.ChanDoan, cls.MaKP, cls.MaCBth, cls.NgayTH, cls.NgayThang, bn.TenBNhan, bn.NamSinh, bn.MaBNhan, bn.DChi, bn.GTinh, cls.CapCuu, bn.Tuoi, bn.SThe, cls.MaCB, cls.Status, cls.MaKPth, cls.BarCode }).ToList();

                                if (DungChung.Bien.MaBV == "30010")
                                {
                                    int Mkp = Convert.ToInt32(par.Select(p => p.MaKPth).FirstOrDefault().ToString());
                                    rep.kpth.Value = _Data.KPhongs.Where(p => p.MaKP == Mkp).Select(p => p.TenKP).FirstOrDefault().ToString();
                                } //yenbg2
                                if (DungChung.Bien.MaBV == "27023")
                                    rep.So.Value = _so;
                                else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                {
                                    if (par.Count > 0)
                                    {
                                        int mabnhan = par.FirstOrDefault().MaBNhan;
                                        var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabnhan).FirstOrDefault();
                                        if (qvv != null)
                                            rep.So.Value = qvv.SoVV;
                                        else
                                            rep.So.Value = "";
                                    }
                                }
                                else
                                    rep.So.Value = idcls;
                                if (par.Count > 0)
                                {
                                    if (DungChung.Bien.MaBV == "12122")
                                    {
                                        if (par.FirstOrDefault().Status == 0)
                                        {
                                            rep.lab111.Visible = false;
                                            rep.lab113.Visible = false;
                                            rep.colTenTKXN.Visible = false;
                                        }
                                        else
                                        {
                                            rep.lab110.Visible = false;
                                            rep.lab112.Visible = false;
                                            rep.colTenBSDT.Visible = false;
                                        }
                                    }
                                    _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                                    rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                    rep.Macb.Value = par.FirstOrDefault().MaCBth;
                                    rep.DiaChi.Value = par.FirstOrDefault().DChi;
                                    rep.NamSinh.Value = par.FirstOrDefault().NamSinh;
                                    rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                                    rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep.Nu.Value = "/";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep.Nam.Value = "/";
                                    }
                                    if (par.FirstOrDefault().SThe != null && par.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                        rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                        rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                        rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                        rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                    }
                                    bool capcuu = par.FirstOrDefault().CapCuu;
                                    if (capcuu)
                                    {
                                        rep.CapCuu.Value = "X";
                                    }
                                    else rep.Thuong.Value = "X";
                                }

                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp, true);
                                if (DungChung.Bien.MaBV == "20001")
                                    rep.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                                else
                                {
                                    rep.ChanDoan.Value = (par.FirstOrDefault().ChanDoanBD != null || par.FirstOrDefault().ChanDoanBD != "") && DungChung.Bien.MaBV == "24272" ? par.FirstOrDefault().ChanDoanBD + ";" : "";
                                    if (DungChung.Bien.MaBV != "24272")
                                    {
                                        rep.ChanDoan.Value += arrThongTinBNKB[1];
                                    }
                                }
                                rep.Buong.Value = arrThongTinBNKB[2];
                                rep.Giuong.Value = arrThongTinBNKB[3];
                                rep.Khoa.Value = arrThongTinBNKB[4];
                                rep.xrLabel64.Text = "- " + arrThongTinBNKB[4];
                                if (DungChung.Bien.MaBV == "26007")
                                {
                                    rep.NgayCD.Value = "..... giờ ....phút, ngày ..... tháng ..... năm .....";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                }
                                else
                                {
                                    if (par.FirstOrDefault().NgayThang != null)
                                        rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                }

                                //var qcls = (from dvct in DataContect.DichVucts
                                //            join dv in DataContect.DichVus on dvct.MaDV equals dv.MaDV
                                //            join tnhomdv in DataContect.TieuNhomDVs on dv.IdTieuNhom equals tnhomdv.IdTieuNhom
                                //            where (tnhomdv.TenRG.Contains("XN hóa sinh máu"))
                                //            select new { tnhomdv.TenTN, dvct.MaDVct, dvct.TenDVct, dvct.TSBT, dvct.STT }).ToList();
                                rep.CreateDocument();
                                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                if (PrintNow)
                                    DungChung.Ham.PrintReport(rep);
                                else
                                    frm.ShowDialog();
                            }
                            #endregion
                        }
                    }
                    break;
                #endregion
                #region XN huyết học
                case "XN huyết học":
                    #region Chí Linh
                    if (DungChung.Bien.MaBV == "30003") // Chí Linh
                    {
                        frmIn frm = new frmIn();
                        BaoCao.Rep_PhieuXNHuyetHoc_CL rep = new BaoCao.Rep_PhieuXNHuyetHoc_CL();
                        rep.MaBNhan.Value = _Mabn;
                        //rep.Status.Value = DungChung.Bien.InPhoi;

                        rep.SoPhieu.Value = idcls;
                        rep.paramIdCLS.Value = idcls;
                        var par = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                   join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                   join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                   select new { cls.MaCBth, cls.NgayThang, cls.CapCuu, cd.MaMay, cls.NgayTH, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, cls.MaKP }).ToList();
                        if (par.Count > 0)
                        {
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().MaMay))
                            {
                                string _mamay = par.FirstOrDefault().MaMay;
                                var tenmay = _Data.DichVus.Where(p => p.PLoai > 2 && p.MaQD == _mamay).ToList();
                                if (tenmay.Count > 0)
                                {
                                    rep.MaMay.Value = "Phương pháp xét nghiệm: [" + tenmay.FirstOrDefault().TenDV + "] [" + _mamay + "]";
                                }
                                else
                                {
                                    rep.MaMay.Value = "Phương pháp xét nghiệm:";
                                }
                            }
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                            rep.ChanDoan.Value = arrThongTinBNKB[1];
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];
                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.MaBSDT.Value = par.FirstOrDefault().MaCB;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;

                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                            rep.TenBNhan.Value = par.FirstOrDefault().TenBNhan;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nam.Value = "X";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nu.Value = "X";
                            }
                            if (par.FirstOrDefault().SThe != null && par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            bool capcuu = par.FirstOrDefault().CapCuu;
                            if (capcuu)
                            {
                                rep.CapCuu.Value = "X";
                            }
                            else rep.Thuong.Value = "X";
                            if (par.FirstOrDefault().NgayTH != null)
                            {
                                rep.paramNgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            }
                            else { rep.paramNgayTH.Value = "Ngày ..... tháng ...... năm....."; }
                            if (par.FirstOrDefault().NgayThang != null)
                            {
                                rep.paramNgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            }
                            else { rep.paramNgayCD.Value = "Ngày ..... tháng ...... năm....."; }
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        if (PrintNow)
                            DungChung.Ham.PrintReport(rep);
                        else
                            frm.ShowDialog();
                        break;
                    }
                    if (DungChung.Bien.MaBV == "02005")
                    {
                        frmIn frm1 = new frmIn();
                        BaoCao.Rep_PhieuXNHuyetHoc_VX03 rephhvx = new BaoCao.Rep_PhieuXNHuyetHoc_VX03();
                        rephhvx.MaBNhan.Value = _Mabn;
                        //rep1.Status.Value = DungChung.Bien.InPhoi;

                        var parhhvx = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                       join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                       select new { cls.NgayTH, cls.CapCuu, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, bn.DTuong, cls.MaCB, cls.MaKP, cls.MaCBth }).ToList();
                        if (parhhvx.Count > 0)
                        {
                            rephhvx.TenBNhan.Value = parhhvx.FirstOrDefault().TenBNhan.ToUpper();
                            rephhvx.DChi.Value = parhhvx.FirstOrDefault().DChi;
                            rephhvx.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                            rephhvx.DTuong.Value = parhhvx.FirstOrDefault().DTuong;
                            rephhvx.MsBSCD.Value = parhhvx.FirstOrDefault().MaCB;
                            rephhvx.KhoaBSCD.Value = parhhvx.FirstOrDefault().MaKP;
                            rephhvx.MsBSXN.Value = parhhvx.FirstOrDefault().MaCBth;
                            if (parhhvx.FirstOrDefault().NgayTH != null)
                                rephhvx.NgayTH.Value = DungChung.Ham.NgaySangChu(parhhvx.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rephhvx.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            int gioiTinh = int.Parse(parhhvx.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rephhvx.GioiTinh.Value = "Nam";
                            }
                            else if (gioiTinh == 0)
                            {
                                rephhvx.GioiTinh.Value = "Nữ";
                            }
                            rephhvx.SThe.Value = parhhvx.FirstOrDefault().SThe;
                            bool capcuu = parhhvx.FirstOrDefault().CapCuu;
                            if (capcuu)
                            {
                                rephhvx.CapCuu.Value = "X";
                            }
                            else rephhvx.Thuong.Value = "X";

                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, parhhvx.FirstOrDefault().MaKP == null ? 0 : parhhvx.FirstOrDefault().MaKP.Value, true);
                            rephhvx.ChanDoan.Value = arrThongTinBNKB[1];
                            rephhvx.Buong.Value = arrThongTinBNKB[2];
                            rephhvx.Giuong.Value = arrThongTinBNKB[3];
                            rephhvx.Khoa.Value = arrThongTinBNKB[4];

                        }

                        var qhhhh = (from cls in _Data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idcls)
                                     join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                     join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                     join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                     group new { dvct } by new { dvct.TenDVct, clsct.KetQua, dvct.STT, dvct.TSBT } into kq
                                     select new { TenDVct = kq.Key.TenDVct, KetQua = kq.Key.KetQua, kq.Key.STT, kq.Key.TSBT }).OrderBy(p => p.STT).ToList();
                        if (qhhhh.Count > 0)
                        {
                            rephhvx.DataSource = qhhhh.ToList();
                            rephhvx.BindingData();
                            rephhvx.CreateDocument();
                            frm1.prcIN.PrintingSystem = rephhvx.PrintingSystem;
                            if (PrintNow)
                                DungChung.Ham.PrintReport(rephhvx);
                            else
                                frm1.ShowDialog();
                        }

                    }
                    #endregion
                    else
                    {
                        bool _inphieuDongMau = false;
                        #region 27023
                        if (DungChung.Bien.MaBV == "27023")
                        {
                            var qTendvct = (from cd in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                                            join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                            join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                            select new { dvct.TenDVct }).ToList();
                            foreach (var a in qTendvct)
                            {
                                if (a != null)
                                {
                                    if (a.ToString().ToLower().Contains("thrombin"))
                                    {
                                        _inphieuDongMau = true;
                                        break;
                                    }
                                    if (a.ToString().ToLower().Contains("thromboplastin") || a.ToString().ToLower().Contains("TCK"))
                                    {
                                        _inphieuDongMau = true;
                                        break;
                                    }
                                    if (a.ToString().ToLower().Contains("fibrinogen") || a.ToString().ToLower().Contains("định lượng yếu tố 1") || a.ToString().ToLower().Contains("phương pháp clauss"))
                                    {
                                        _inphieuDongMau = true;
                                        break;
                                    }
                                }
                            }
                        }
                        #endregion

                        #region Yên Mỹ
                        if (DungChung.Bien.MaBV == "33080")//In M?u Yên M?
                        {
                            frmIn frm = new frmIn();
                            BaoCao.Rep_PhieuXNHoaSinhMau_YM01 repym = new BaoCao.Rep_PhieuXNHoaSinhMau_YM01();
                            int _makpym = 0;
                            repym.TenBC.Value = ("Kết quả xét nghiệm huyết học").ToUpper();

                            var qym1 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                        select new { bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.NamSinh, cls.MaCB, cls.MaKP, cls.CapCuu, cls.MaCBth, cls.NgayTH }).ToList();
                            if (qym1.Count > 0)
                            {
                                _makpym = qym1.FirstOrDefault().MaKP == null ? 0 : qym1.FirstOrDefault().MaKP.Value;
                                repym.paramMaBN.Value = qym1.FirstOrDefault().MaBNhan;
                                repym.TenBNhan.Value = qym1.FirstOrDefault().TenBNhan;
                                repym.DChi.Value = qym1.FirstOrDefault().DChi;
                                repym.NamSinh.Value = Convert.ToInt32(qym1.FirstOrDefault().NamSinh);
                                repym.BSCD.Value = qym1.FirstOrDefault().MaCB;
                                repym.MaBSTH.Value = qym1.FirstOrDefault().MaCBth;
                                if (qym1.FirstOrDefault().NgayTH != null)
                                {
                                    repym.NgayTH.Value = DungChung.Ham.NgaySangChu(qym1.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                }
                                else { repym.NgayTH.Value = "...giờ, ngày ..... tháng ...... năm 20..."; }
                                int gioiTinh = int.Parse(qym1.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    repym.GTinh.Value = "Nam";
                                }
                                else if (gioiTinh == 0)
                                {
                                    repym.GTinh.Value = "Nữ";
                                }

                            }
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makpym, true);
                            repym.ChanDoan.Value = arrThongTinBNKB[1];
                            repym.MaKP.Value = _makpym;
                            repym.TenKP.Value = arrThongTinBNKB[4];

                            var qym2 = (from cls in _Data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idcls)
                                        join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                        join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                        join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        select new { dvct.MaDVct, dvct.TenDVct, dvct.TSBT, dvct.DonVi, dvct.TSBTnu, clsct.KetQua, STT = dvct.STT == null ? 0 : dvct.STT.Value }).OrderBy(p => p.STT).ThenBy(p => p.TenDVct).ToList();

                            if (qym2.Count > 0)
                            {
                                repym.DataSource = qym2.ToList();
                                repym.BindingData();
                                repym.CreateDocument();
                                frm.prcIN.PrintingSystem = repym.PrintingSystem;
                                if (PrintNow)
                                    DungChung.Ham.PrintReport(repym);
                                else
                                    frm.ShowDialog();
                            }

                            break;
                        }
                        #endregion
                        #region 30299
                        else if (DungChung.Bien.MaBV == "30299")
                        {
                            frmIn frm1 = new frmIn();
                            BaoCao.repPhieuXNHuyetHoc_LaoPhoiHD rep1 = new BaoCao.repPhieuXNHuyetHoc_LaoPhoiHD();
                            int _makp1 = 0;
                            rep1.MaBNhan.Value = _Mabn;
                            rep1.SoPhieu.Value = idcls;
                            var par1 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                        select new { cls.MaKP, cls.MaCBth, cls.NgayTH, cls.CapCuu, cls.NgayThang, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB }).ToList();
                            if (par1.Count > 0)
                            {
                                _makp1 = par1.FirstOrDefault().MaKP == null ? 0 : par1.FirstOrDefault().MaKP.Value;
                                rep1.MaCBDT.Value = par1.FirstOrDefault().MaCB;
                                rep1.Macb.Value = par1.FirstOrDefault().MaCBth;
                                rep1.TenBN.Value = par1.FirstOrDefault().TenBNhan.ToUpper();
                                rep1.DiaChi.Value = par1.FirstOrDefault().DChi;
                                rep1.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                                int gioiTinh = int.Parse(par1.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep1.Nu.Value = "/".ToUpper();
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep1.Nam.Value = "/".ToUpper();
                                }
                                if (par1.FirstOrDefault().SThe != null && par1.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep1.SThe1.Value = par1.FirstOrDefault().SThe.Substring(0, 3);
                                    rep1.SThe2.Value = par1.FirstOrDefault().SThe.Substring(3, 2);
                                    rep1.SThe3.Value = par1.FirstOrDefault().SThe.Substring(5, 2);
                                    rep1.SThe4.Value = par1.FirstOrDefault().SThe.Substring(7, 3);
                                    rep1.SThe5.Value = par1.FirstOrDefault().SThe.Substring(10, 5);
                                }
                                bool capcuu = par1.FirstOrDefault().CapCuu;
                                if (capcuu)
                                {
                                    rep1.CapCuu.Value = "X";
                                }
                                else rep1.Thuong.Value = "X";
                                if (par1.FirstOrDefault().NgayThang != null)
                                    rep1.NgayCD.Value = DungChung.Ham.NgaySangChu(par1.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                else
                                    rep1.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                if (par1.FirstOrDefault().NgayTH != null)
                                    rep1.NgayTH.Value = DungChung.Ham.NgaySangChu(par1.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep1.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            }
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp1, true);
                            rep1.ChanDoan.Value = arrThongTinBNKB[1];
                            rep1.Buong.Value = arrThongTinBNKB[2];
                            rep1.Giuong.Value = arrThongTinBNKB[3];
                            rep1.Khoa.Value = arrThongTinBNKB[4];

                            List<YCXN> qdv = (from tn in _Data.TieuNhomDVs.Where(p => p.TenRG == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.XNHuyetHoc)
                                              join dv in _Data.DichVus on tn.IdTieuNhom equals dv.IdTieuNhom
                                              join dvct in _Data.DichVucts on dv.MaDV equals dvct.MaDV
                                              group dv by dv into kq
                                              select new YCXN { MaDV = kq.Key.MaDV, MaQD = kq.Key.MaQD, TenDV = kq.Key.TenDV, SoTT = kq.Key.SoTT ?? 0 }).OrderBy(p => p.SoTT).ToList();
                            var qcd = _Data.ChiDinhs.Where(p => p.IdCLS == idcls).ToList();
                            foreach (YCXN yc in qdv)
                            {
                                if (qcd.Where(p => p.MaDV == yc.MaDV).Count() > 0)
                                    yc.ck = "x";
                            }

                            rep1.bindingData();
                            rep1.DataSource = qdv;
                            rep1.CreateDocument();
                            frm1.prcIN.PrintingSystem = rep1.PrintingSystem;
                            if (PrintNow)
                                DungChung.Ham.PrintReport(rep1);
                            else
                                frm1.ShowDialog();
                            break;
                        }
                        else if (DungChung.Bien.MaBV == "30004")
                        {
                            string TenKP = ""; string MaMay = "";
                            List<InXNTongHop> _ltn = new List<InXNTongHop>();
                            _ltn = (from cd in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                                    join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                    join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                                    join tndv in _Data.TieuNhomDVs on dv.IdTieuNhom equals tndv.IdTieuNhom
                                    join tn in _Data.DichVucts on clsct.MaDVct equals tn.MaDVct
                                    select new InXNTongHop
                                    {
                                        IdTieuNhom = tndv.IdTieuNhom,
                                        TenTN = tndv.TenTN,
                                        MaMay = cd.MaMay ?? "",
                                        IdCLS = cd.IdCLS ?? 0,
                                        IdCD = cd.IDCD,

                                    }).ToList();
                            if (_ltn.Count() > 0)
                            {
                                var kps = (from cls in _Data.CLS.Where(p => p.IdCLS == idcls)
                                           join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                           select new { kp.TenKP }).ToList();
                                CLS.InPhieu._inPhieuXNTongHop_30004(_Mabn, _ltn, false, TenKP = kps.FirstOrDefault().TenKP ?? "", MaMay);
                            }
                        }
                        #endregion
                        #region 01071
                        else if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                        {
                            InPhieuXNHuyetHoc_01070(_Mabn, idcls, _tieunhom);

                        }
                        #endregion
                        else if (_inphieuDongMau)
                        {

                            phieuXNDongMau(_Data, idcls, _tieunhom);
                        }
                        #region BV 27001
                        else if (DungChung.Bien.MaBV == "27001")
                        {
                            frmIn frm1 = new frmIn();

                            //BaoCao.rep_PhieuXNHuyetHoc_A5 rep1 = new BaoCao.rep_PhieuXNHuyetHoc_A5();
                            BaoCao.repPhieuXNHuyetHoc rep1 = new BaoCao.repPhieuXNHuyetHoc();

                            int _makp1 = 0;
                            rep1.MaBNhan.Value = _Mabn;
                            rep1.SoPhieu.Value = idcls;
                            var par1 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                        select new { cls.MaKP, cls.MaCBth, cls.NgayTH, cls.BarCode, cls.CapCuu, cls.NgayThang, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, cls.MaKPth }).ToList();
                            if (DungChung.Bien.MaBV == "27023")
                                rep1.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par1.Count > 0)
                                {
                                    int mabn = par1.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep1.So.Value = qvv.SoVV;
                                    else
                                        rep1.So.Value = "";
                                }
                            }
                            else
                                rep1.So.Value = idcls;

                            if (par1.Count > 0)
                            {
                                string maCBth = par1.FirstOrDefault().MaCBth;
                                var cbTH = _Data.CanBoes.FirstOrDefault(o => o.MaCB == maCBth);
                                rep1.hotenck.Value = cbTH != null ? cbTH.TenCB : "";
                                rep1.txtbarcode.Text = par1.FirstOrDefault().BarCode == null ? "" : ("Barcode: " + par1.FirstOrDefault().BarCode.ToString());
                                _makp1 = par1.FirstOrDefault().MaKP == null ? 0 : par1.FirstOrDefault().MaKP.Value;
                                rep1.MaCBDT.Value = par1.FirstOrDefault().MaCB;
                                rep1.Macb.Value = par1.FirstOrDefault().MaCBth;
                                rep1.TenBN.Value = par1.FirstOrDefault().TenBNhan.ToUpper();
                                rep1.DiaChi.Value = par1.FirstOrDefault().DChi;
                                rep1.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);

                                int gioiTinh = int.Parse(par1.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep1.Nu.Value = "/".ToUpper();
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep1.Nam.Value = "/".ToUpper();
                                }
                                if (par1.FirstOrDefault().SThe != null && par1.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep1.SThe1.Value = par1.FirstOrDefault().SThe.Substring(0, 3);
                                    rep1.SThe2.Value = par1.FirstOrDefault().SThe.Substring(3, 2);
                                    rep1.SThe3.Value = par1.FirstOrDefault().SThe.Substring(5, 2);
                                    rep1.SThe4.Value = par1.FirstOrDefault().SThe.Substring(7, 3);
                                    rep1.SThe5.Value = par1.FirstOrDefault().SThe.Substring(10, 5);
                                }
                                bool capcuu = par1.FirstOrDefault().CapCuu;
                                if (capcuu)
                                {
                                    rep1.CapCuu.Value = "X";
                                }
                                else rep1.Thuong.Value = "X";
                                if (par1.FirstOrDefault().NgayThang != null)
                                    rep1.NgayCD.Value = DungChung.Ham.NgaySangChu(par1.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                else
                                    rep1.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                if (par1.FirstOrDefault().NgayTH != null)
                                    rep1.NgayTH.Value = DungChung.Ham.NgaySangChu(par1.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep1.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            }
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp1, true);
                            rep1.ChanDoan.Value = arrThongTinBNKB[1];
                            rep1.Buong.Value = arrThongTinBNKB[2];
                            rep1.Giuong.Value = arrThongTinBNKB[3];

                            rep1.Khoa.Value = arrThongTinBNKB[4];
                            if (DungChung.Bien.MaBV == "30010")
                            {
                                int mkpth = Convert.ToInt32(par1.FirstOrDefault().MaKPth.Value);
                                rep1.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                            }//yenbg1
                            rep1.TaoPhieu(1);
                            rep1.CreateDocument();
                            frm1.prcIN.PrintingSystem = rep1.PrintingSystem;
                            if (PrintNow)
                                DungChung.Ham.PrintReport(rep1);
                            else
                                frm1.ShowDialog();

                        }
                        #endregion
                        #region chung
                        else
                        {
                            frmIn frm1 = new frmIn();

                            BaoCao.repPhieuXNHuyetHoc rep1 = new BaoCao.repPhieuXNHuyetHoc(_lIdCls, _lMaDV, null);

                            int _makp1 = 0;
                            rep1.MaBNhan.Value = _Mabn;
                            rep1.SoPhieu.Value = idcls;
                            var par1 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                        join bnkb in _Data.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                                        join cb in _Data.CanBoes on cls.MaCB equals cb.MaCB
                                        select new { bnkb.ChanDoanBD, cls.ChanDoan, cls.MaKP, cls.MaCBth, cb.TenCB, cls.NgayTH, cls.CapCuu, cls.NgayThang, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, cls.Status, cls.MaKPth }).ToList();
                            if (DungChung.Bien.MaBV == "27023")
                                rep1.So.Value = _so;
                            if (DungChung.Bien.MaBV == "24012")
                            {
                                rep1.lbl_ICD_24012_1.Visible = true;
                                rep1.lbl_ICD_240122.Visible = true;
                                rep1.Parameters["MaICD"].Value = arrThongTinBNKB[0];
                            }
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par1.Count > 0)
                                {
                                    int mabn = par1.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep1.So.Value = qvv.SoVV;
                                    else
                                        rep1.So.Value = "";
                                }
                            }
                            else
                                rep1.So.Value = idcls;

                            if (par1.Count > 0)
                            {
                                if (DungChung.Bien.MaBV == "12122")
                                {
                                    if (par1.FirstOrDefault().Status == 0)
                                    {
                                        rep1.lab53.Visible = false;
                                        rep1.lab55.Visible = false;
                                        rep1.colTenTKXN.Visible = false;
                                    }
                                    else
                                    {
                                        rep1.lab54.Visible = false;
                                        rep1.lab52.Visible = false;
                                        rep1.colTenBSDT.Visible = false;
                                    }
                                }
                                _makp1 = par1.FirstOrDefault().MaKP == null ? 0 : par1.FirstOrDefault().MaKP.Value;
                                if (DungChung.Bien.MaBV == "30010")
                                {
                                    string maCBth = par1.FirstOrDefault().MaCBth;
                                    var cbTH = _Data.CanBoes.FirstOrDefault(o => o.MaCB == maCBth);
                                    rep1.hotenck.Value = cbTH != null ? "Họ tên: Người thực hiện : " + cbTH.TenCB : "";
                                }
                                else if (DungChung.Bien.MaBV == "30009")
                                {
                                    string maCBth = par1.FirstOrDefault().MaCBth;
                                    var cbTH = _Data.CanBoes.FirstOrDefault(o => o.MaCB == maCBth);
                                    rep1.hotenck.Value = cbTH != null ? "Người thực hiện:" + cbTH.TenCB : "";

                                }
                                else if (DungChung.Bien.MaBV == "30012")
                                {
                                    string maCBth = par1.FirstOrDefault().MaCBth;
                                    var cbth = _Data.CanBoes.FirstOrDefault(o => o.MaCB == maCBth);
                                    rep1.hotenck.Value = cbth != null ? DungChung.Ham._getTenCB(_Data, maCBth) : "";
                                }
                                else if (DungChung.Bien.MaBV == "30007")
                                {
                                    string maCBth = par1.FirstOrDefault().MaCBth;
                                    var cbTH = _Data.CanBoes.FirstOrDefault(o => o.MaCB == maCBth);
                                    rep1.hotenck.Value = cbTH != null ? cbTH.TenCB : "";
                                }
                                else if (DungChung.Bien.MaBV == "27183")
                                {
                                    string maCBth = par1.FirstOrDefault().MaCBth;
                                    var cbTH = _Data.CanBoes.FirstOrDefault(o => o.MaCB == maCBth);
                                    rep1.hotenck.Value = cbTH != null ? cbTH.CapBac + ". " + cbTH.TenCB : "";
                                }

                                rep1.MaCBDT.Value = par1.FirstOrDefault().MaCB;
                                rep1.Macb.Value = par1.FirstOrDefault().MaCBth;
                                rep1.TenBN.Value = par1.FirstOrDefault().TenBNhan.ToUpper();
                                rep1.DiaChi.Value = par1.FirstOrDefault().DChi;
                                rep1.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                                int gioiTinh = int.Parse(par1.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep1.Nu.Value = "/".ToUpper();
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep1.Nam.Value = "/".ToUpper();
                                }
                                if (par1.FirstOrDefault().SThe != null && par1.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep1.SThe1.Value = par1.FirstOrDefault().SThe.Substring(0, 3);
                                    rep1.SThe2.Value = par1.FirstOrDefault().SThe.Substring(3, 2);
                                    rep1.SThe3.Value = par1.FirstOrDefault().SThe.Substring(5, 2);
                                    rep1.SThe4.Value = par1.FirstOrDefault().SThe.Substring(7, 3);
                                    rep1.SThe5.Value = par1.FirstOrDefault().SThe.Substring(10, 5);
                                }
                                bool capcuu = par1.FirstOrDefault().CapCuu;
                                if (capcuu)
                                {
                                    rep1.CapCuu.Value = "X";
                                }
                                else rep1.Thuong.Value = "X";
                                if (DungChung.Bien.MaBV == "26007")
                                {
                                    rep1.NgayCD.Value = "..... giờ ....phút, ngày ..... tháng ..... năm .....";
                                    if (par1.FirstOrDefault().NgayTH != null)
                                        rep1.NgayTH.Value = DungChung.Ham.NgaySangChu(par1.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep1.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                }
                                else
                                {
                                    if (par1.FirstOrDefault().NgayThang != null)
                                        rep1.NgayCD.Value = DungChung.Ham.NgaySangChu(par1.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep1.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    if (par1.FirstOrDefault().NgayTH != null)
                                        rep1.NgayTH.Value = DungChung.Ham.NgaySangChu(par1.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep1.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                }
                            }
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp1, true);
                            if (DungChung.Bien.MaBV == "20001")
                                rep1.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                            else
                            {
                                rep1.ChanDoan.Value = (par1.FirstOrDefault().ChanDoanBD != null || par1.FirstOrDefault().ChanDoanBD != "") && DungChung.Bien.MaBV == "24272" ? par1.FirstOrDefault().ChanDoanBD + ";" : "";
                                if (DungChung.Bien.MaBV != "24272")
                                {
                                    rep1.ChanDoan.Value += arrThongTinBNKB[1];
                                }
                            }
                            rep1.Buong.Value = arrThongTinBNKB[2];
                            rep1.Giuong.Value = arrThongTinBNKB[3];

                            rep1.Khoa.Value = arrThongTinBNKB[4];
                            rep1.xrLabel97.Text = "- " + arrThongTinBNKB[4];
                            if (DungChung.Bien.MaBV == "30010")
                            {
                                int mkpth = Convert.ToInt32(par1.FirstOrDefault().MaKPth.Value);
                                rep1.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                            }//yenbg1
                            rep1.TaoPhieu(1);
                            rep1.CreateDocument();
                            frm1.prcIN.PrintingSystem = rep1.PrintingSystem;
                            if (PrintNow)
                                DungChung.Ham.PrintReport(rep1);
                            else
                                frm1.ShowDialog();

                        }
                        #endregion
                    }

                    break;
                #endregion
                #region XN nước tiểu
                case "XN nước tiểu":
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                    {
                        InPhieuXNHuyetHoc_01070(_Mabn, idcls, _tieunhom);
                    }
                    #region 30012
                    else if (DungChung.Bien.MaBV == "30012")
                    {
                        frmIn frm3 = new frmIn();
                        BaoCao.Rep_PhieuXNKhac_A4 rep3 = new BaoCao.Rep_PhieuXNKhac_A4();
                        rep3.SoPhieu.Value = idcls;
                        int _makp3 = 0;
                        rep3.TenBPham.Value = "Bệnh phẩm: sinh hóa nước tiểu";
                        var par3 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                    join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                    join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                    join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                    join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                    join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                                    group new { dvct, clsct, dv, bn } by new { bn.GTinh, cls3.NgayTH, cls3.NgayThang, bn.MaBNhan, bn.SThe, bn.TenBNhan, bn.DChi, cls3.MaKP, cls3.MaKPth, cls3.MaCB, cls3.MaCBth, dvct.STT, dv.TenDV, dvct.TenDVct, clsct.KetQua, dvct.DonVi } into kq
                                    select new { kq.Key.GTinh, kq.Key.SThe, kq.Key.NgayTH, NgayCD = kq.Key.NgayThang, kq.Key.MaCB, kq.Key.MaKP, kq.Key.MaCBth, kq.Key.TenBNhan, kq.Key.MaBNhan, kq.Key.DChi, kq.Key.TenDV, YC = kq.Key.TenDVct, KQ = kq.Key.KetQua, kq.Key.DonVi, kq.Key.STT }).OrderBy(p => p.STT).ToList();
                        if (par3.Count > 0)
                        {
                            _makp3 = par3.FirstOrDefault().MaKP == null ? 0 : par3.FirstOrDefault().MaKP.Value;
                            rep3.Macb.Value = par3.FirstOrDefault().MaCBth;
                            rep3.MaCBDT.Value = par3.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par3.FirstOrDefault().DChi;
                            rep3.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                            rep3.MaBNhan.Value = par3.FirstOrDefault().MaBNhan;
                            rep3.TenBNhan.Value = par3.FirstOrDefault().TenBNhan.ToUpper();

                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp3, true);
                            rep3.ChanDoan.Value = arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];
                            rep3.Khoa.Value = arrThongTinBNKB[4];

                            if (par3.FirstOrDefault().NgayCD != null)

                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayCD.Value, DungChung.Bien.FormatDate);
                            else rep3.NgayCD.Value = "Ngày .... tháng ..... năm .....";
                            if (par3.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else

                                rep3.NgayTH.Value = "Ngày .... tháng ..... năm .....";
                            int gioiTinh = int.Parse(par3.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep3.Nam.Value = "X".ToUpper();

                            }
                            else if (gioiTinh == 0)
                            {
                                rep3.Nu.Value = "X".ToUpper();
                            }
                            if (par3.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par3.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par3.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par3.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par3.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par3.FirstOrDefault().SThe.Substring(10, 5);
                            }
                        }
                        rep3.DataSource = par3;
                        rep3.BindingData();
                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        if (PrintNow)
                            DungChung.Ham.PrintReport(rep3);
                        else
                            frm3.ShowDialog();
                        return;
                    }
                    #endregion
                    #region 30004
                    else if (DungChung.Bien.MaBV == "30004")
                    {
                        string TenKP = ""; string MaMay = "";
                        List<InXNTongHop> _ltn = new List<InXNTongHop>();
                        _ltn = (from cd in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                                join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                                join tndv in _Data.TieuNhomDVs on dv.IdTieuNhom equals tndv.IdTieuNhom
                                join tn in _Data.DichVucts on clsct.MaDVct equals tn.MaDVct
                                select new InXNTongHop
                                {
                                    IdTieuNhom = tndv.IdTieuNhom,
                                    TenTN = tndv.TenTN,
                                    MaMay = cd.MaMay ?? "",
                                    IdCLS = cd.IdCLS ?? 0,
                                    IdCD = cd.IDCD,

                                }).ToList();
                        if (_ltn.Count() > 0)
                        {
                            var kps = (from cls in _Data.CLS.Where(p => p.IdCLS == idcls)
                                       join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                       select new { kp.TenKP }).ToList();
                            CLS.InPhieu._inPhieuXNTongHop_30004(_Mabn, _ltn, false, TenKP = kps.FirstOrDefault().TenKP ?? "", MaMay);
                        }
                    }
                    #endregion
                    #region 30009
                    else if (DungChung.Bien.MaBV == "30009")// BV Thanh Hà
                    {
                        frmIn frm2 = new frmIn();
                        BaoCao.Rep_PhieuXNNuocTieu_TH rep2 = new BaoCao.Rep_PhieuXNNuocTieu_TH();
                        rep2.MaBNhan.Value = _Mabn;
                        int _mkp2 = 0;
                        rep2.SoPhieu.Value = idcls;
                        var par2 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                    join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                    join CD in _Data.ChiDinhs on cls.IdCLS equals CD.IdCLS
                                    join clsct in _Data.CLScts on CD.IDCD equals clsct.IDCD
                                    select new { cls.MaKP, cls.NgayThang, cls.NgayTH, cls.CapCuu, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, MaCBDT = cls.MaCB, cls.MaCBth }).ToList();
                        if (par2.Count > 0)
                        {
                            _mkp2 = par2.FirstOrDefault().MaKP == null ? 0 : par2.FirstOrDefault().MaKP.Value;
                            rep2.Macb.Value = par2.FirstOrDefault().MaCBth;
                            rep2.MaCBDT.Value = par2.FirstOrDefault().MaCBDT;
                            rep2.DiaChi.Value = par2.FirstOrDefault().DChi;
                            rep2.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                            rep2.TenBNhan.Value = par2.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = par2.FirstOrDefault().GTinh.Value;
                            if (gioiTinh == 1)
                            {
                                rep2.Nu.Value = "/".ToUpper();
                            }
                            else if (gioiTinh == 0)
                            {
                                rep2.Nam.Value = "/".ToUpper();
                            }
                            if (par2.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep2.SThe1.Value = par2.FirstOrDefault().SThe.Substring(0, 3);
                                rep2.SThe2.Value = par2.FirstOrDefault().SThe.Substring(3, 2);
                                rep2.SThe3.Value = par2.FirstOrDefault().SThe.Substring(5, 2);
                                rep2.SThe4.Value = par2.FirstOrDefault().SThe.Substring(7, 3);
                                rep2.SThe5.Value = par2.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            //
                            bool capcuu = par2.FirstOrDefault().CapCuu;
                            if (capcuu)
                            {
                                rep2.CapCuu.Value = "X";
                            }
                            else rep2.Thuong.Value = "X";
                        }
                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _mkp2, true);
                        rep2.ChanDoan.Value = arrThongTinBNKB[1];
                        rep2.Buong.Value = arrThongTinBNKB[2];
                        rep2.Giuong.Value = arrThongTinBNKB[3];
                        rep2.Khoa.Value = arrThongTinBNKB[4];
                        if (par2.FirstOrDefault().NgayThang != null)
                            rep2.NgayCD.Value = DungChung.Ham.NgaySangChu(par2.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                        else
                            rep2.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                        if (par2.FirstOrDefault().NgayTH != null)
                            rep2.NgayTH.Value = DungChung.Ham.NgaySangChu(par2.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                        else
                            rep2.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                        rep2.CreateDocument();
                        frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                        if (PrintNow)
                            DungChung.Ham.PrintReport(rep2);
                        else
                            frm2.ShowDialog();
                    }
                    #endregion
                    else
                    {
                        #region 33080
                        if (DungChung.Bien.MaBV == "33080")//In M?u Yên M?
                        {
                            frmIn frm = new frmIn();
                            BaoCao.Rep_PhieuXNHoaSinhMau_YM01 repym = new BaoCao.Rep_PhieuXNHoaSinhMau_YM01();
                            int _makpym = 0;
                            repym.TenBC.Value = ("kết quả xét nghiệm nước tiểu").ToUpper();

                            var qym1 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                        select new { bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.NamSinh, cls.MaCB, cls.MaKP, cls.MaCBth, cls.NgayTH }).ToList();
                            if (qym1.Count > 0)
                            {
                                _makpym = qym1.FirstOrDefault().MaKP == null ? 0 : qym1.FirstOrDefault().MaKP.Value;
                                repym.TenBNhan.Value = qym1.FirstOrDefault().TenBNhan;
                                repym.DChi.Value = qym1.FirstOrDefault().DChi;
                                repym.NamSinh.Value = Convert.ToInt32(qym1.FirstOrDefault().NamSinh);
                                repym.BSCD.Value = qym1.FirstOrDefault().MaCB;
                                repym.MaBSTH.Value = qym1.FirstOrDefault().MaCBth;
                                if (qym1.FirstOrDefault().NgayTH != null)
                                {
                                    repym.NgayTH.Value = DungChung.Ham.NgaySangChu(qym1.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                }
                                else { repym.NgayTH.Value = "Ngày ..... tháng ...... năm 2015"; }
                                int gioiTinh = int.Parse(qym1.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    repym.GTinh.Value = "Nam";
                                }
                                else if (gioiTinh == 0)
                                {
                                    repym.GTinh.Value = "Nữ";
                                }

                            }

                            var qym2 = (from cls in _Data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idcls)
                                        join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                        join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                        join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        select new { dvct.MaDVct, dvct.TenDVct, dvct.TSBT, dvct.TSBTn, dvct.DonVi, dvct.TSBTnu, clsct.KetQua, dvct.STT }).OrderBy(p => p.STT).ThenBy(p => p.TenDVct).ToList();
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makpym, true);
                            repym.ChanDoan.Value = arrThongTinBNKB[1];
                            repym.TenKP.Value = arrThongTinBNKB[4];
                            if (qym2.Count > 0)
                            {

                                repym.DataSource = qym2.ToList();
                                repym.BindingData();
                                repym.CreateDocument();
                                frm.prcIN.PrintingSystem = repym.PrintingSystem;
                                if (PrintNow)
                                    DungChung.Ham.PrintReport(repym);
                                else
                                    frm.ShowDialog();
                            }
                        }
                        #endregion
                        else
                        {
                            #region 04018
                            if (DungChung.Bien.MaBV == "04018")
                            {
                                frmIn frm3 = new frmIn();
                                BaoCao.Rep_PhieuXNKhac_A5_d rep3 = new BaoCao.Rep_PhieuXNKhac_A5_d();
                                rep3.SoPhieu.Value = idcls;
                                int _makp3 = 0;
                                rep3.TenBPham.Value = "Bệnh phẩm: sinh hóa nước tiểu";
                                var par3 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                            join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                            join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                            join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                            join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                            join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                                            group new { dvct, clsct, dv, bn } by new { bn.GTinh, cls3.NgayTH, cls3.NgayThang, bn.MaBNhan, bn.SThe, bn.TenBNhan, bn.DChi, cls3.MaKP, cls3.MaKPth, cls3.MaCB, cls3.MaCBth, dvct.STT, dv.TenDV, dvct.TenDVct, clsct.KetQua, dvct.DonVi } into kq
                                            select new { kq.Key.GTinh, kq.Key.SThe, kq.Key.NgayTH, NgayCD = kq.Key.NgayThang, kq.Key.MaCB, kq.Key.MaKP, kq.Key.MaCBth, kq.Key.TenBNhan, kq.Key.MaBNhan, kq.Key.DChi, kq.Key.TenDV, YC = kq.Key.TenDVct, KQ = kq.Key.KetQua, kq.Key.DonVi, kq.Key.STT }).OrderBy(p => p.STT).ToList();
                                if (par3.Count > 0)
                                {
                                    _makp3 = par3.FirstOrDefault().MaKP == null ? 0 : par3.FirstOrDefault().MaKP.Value;
                                    rep3.Macb.Value = par3.FirstOrDefault().MaCBth;
                                    rep3.MaCBDT.Value = par3.FirstOrDefault().MaCB;
                                    rep3.DiaChi.Value = par3.FirstOrDefault().DChi;
                                    rep3.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                                    rep3.MaBNhan.Value = par3.FirstOrDefault().MaBNhan;
                                    rep3.TenBNhan.Value = par3.FirstOrDefault().TenBNhan.ToUpper();

                                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp3, true);
                                    rep3.ChanDoan.Value = arrThongTinBNKB[1];
                                    rep3.Buong.Value = arrThongTinBNKB[2];
                                    rep3.Giuong.Value = arrThongTinBNKB[3];
                                    rep3.Khoa.Value = arrThongTinBNKB[4];

                                    if (par3.FirstOrDefault().NgayCD != null)

                                        rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayCD.Value, DungChung.Bien.FormatDate);
                                    else rep3.NgayCD.Value = "Ngày .... tháng ..... năm .....";
                                    if (par3.FirstOrDefault().NgayTH != null)
                                        rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else

                                        rep3.NgayTH.Value = "Ngày .... tháng ..... năm .....";
                                    int gioiTinh = int.Parse(par3.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep3.Nam.Value = "X".ToUpper();

                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep3.Nu.Value = "X".ToUpper();
                                    }




                                    if (par3.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep3.SThe1.Value = par3.FirstOrDefault().SThe.Substring(0, 3);
                                        rep3.SThe2.Value = par3.FirstOrDefault().SThe.Substring(3, 2);
                                        rep3.SThe3.Value = par3.FirstOrDefault().SThe.Substring(5, 2);
                                        rep3.SThe4.Value = par3.FirstOrDefault().SThe.Substring(7, 3);
                                        rep3.SThe5.Value = par3.FirstOrDefault().SThe.Substring(10, 5);
                                    }
                                }
                                rep3.DataSource = par3;
                                rep3.BindingData();
                                rep3.CreateDocument();
                                frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                                if (PrintNow)
                                    DungChung.Ham.PrintReport(rep3);
                                else
                                    frm3.ShowDialog();
                            }
                            #endregion
                            #region 27001
                            else if (DungChung.Bien.MaBV == "27001")
                            {
                                frmIn frm2 = new frmIn();
                                //BaoCao.Rep_PhieuXNNuocTieu_A5_27001 rep2 = new BaoCao.Rep_PhieuXNNuocTieu_A5_27001();
                                BaoCao.Rep_PhieuXNNuocTieu_27001 rep2 = new BaoCao.Rep_PhieuXNNuocTieu_27001();
                                rep2.MaBNhan.Value = _Mabn;
                                int _makp2 = 0;
                                //rep.Status.Value = DungChung.Bien.InPhoi;

                                // int cls2 = Convert.ToInt32(GrvNhomDV.GetFocusedRowCellValue("IDCD"));
                                rep2.SoPhieu.Value = idcls;
                                var par2 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                            join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                            join CD in _Data.ChiDinhs on cls.IdCLS equals CD.IdCLS
                                            join clsct in _Data.CLScts on CD.IDCD equals clsct.IDCD
                                            select new { cls.MaKP, cls.NgayThang, cls.BarCode, cls.NgayTH, cls.CapCuu, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, MaCBDT = cls.MaCB, cls.MaCBth }).ToList();
                                if (par2.Count > 0)
                                {
                                    rep2.txtbarcode.Text = par2.FirstOrDefault().BarCode == null ? "" : ("Barcode: " + par2.FirstOrDefault().BarCode.ToString());
                                    _makp2 = par2.FirstOrDefault().MaKP == null ? 0 : par2.FirstOrDefault().MaKP.Value;
                                    rep2.Macb.Value = par2.FirstOrDefault().MaCBth;
                                    rep2.MaCBDT.Value = par2.FirstOrDefault().MaCBDT;
                                    rep2.DiaChi.Value = par2.FirstOrDefault().DChi;
                                    rep2.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                                    rep2.TenBNhan.Value = par2.FirstOrDefault().TenBNhan.ToUpper();
                                    int gioiTinh = int.Parse(par2.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep2.Nu.Value = "/".ToUpper();
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep2.Nam.Value = "/".ToUpper();
                                    }
                                    if (par2.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep2.SThe1.Value = par2.FirstOrDefault().SThe.Substring(0, 3);
                                        rep2.SThe2.Value = par2.FirstOrDefault().SThe.Substring(3, 2);
                                        rep2.SThe3.Value = par2.FirstOrDefault().SThe.Substring(5, 2);
                                        rep2.SThe4.Value = par2.FirstOrDefault().SThe.Substring(7, 3);
                                        rep2.SThe5.Value = par2.FirstOrDefault().SThe.Substring(10, 5);
                                    }
                                    bool capcuu = par2.FirstOrDefault().CapCuu;
                                    if (capcuu)
                                    {
                                        rep2.CapCuu.Value = "X";
                                    }
                                    else rep2.Thuong.Value = "X";
                                }
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp2, true);
                                rep2.ChanDoan.Value = arrThongTinBNKB[1];
                                rep2.Buong.Value = arrThongTinBNKB[2];
                                rep2.Giuong.Value = arrThongTinBNKB[3];
                                rep2.Khoa.Value = arrThongTinBNKB[4];

                                if (par2.FirstOrDefault().NgayThang != null)

                                    rep2.NgayCD.Value = DungChung.Ham.NgaySangChu(par2.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                else
                                    rep2.NgayCD.Value = "Ngày .... tháng ..... năm .....";
                                if (par2.FirstOrDefault().NgayTH != null)
                                    rep2.NgayTH.Value = DungChung.Ham.NgaySangChu(par2.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep2.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                rep2.CreateDocument();
                                frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                                if (PrintNow)
                                    DungChung.Ham.PrintReport(rep2);
                                else
                                    frm2.ShowDialog();

                            }
                            #endregion
                            #region 30004
                            else if (DungChung.Bien.MaBV == "30004")
                            {
                                frmIn frm2 = new frmIn();
                                BaoCao.Rep_PhieuXNNuocTieu_30004 rep2 = new BaoCao.Rep_PhieuXNNuocTieu_30004();
                                rep2.MaBNhan.Value = _Mabn;
                                int _makp2 = 0;
                                //rep.Status.Value = DungChung.Bien.InPhoi;

                                // int cls2 = Convert.ToInt32(GrvNhomDV.GetFocusedRowCellValue("IDCD"));
                                rep2.SoPhieu.Value = idcls;
                                var par2 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                            join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                            join CD in _Data.ChiDinhs on cls.IdCLS equals CD.IdCLS
                                            join clsct in _Data.CLScts on CD.IDCD equals clsct.IDCD
                                            select new { cls.MaKP, cls.NgayThang, cls.NgayTH, cls.CapCuu, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, MaCBDT = cls.MaCB, cls.MaCBth, CD.Status }).ToList();
                                if (par2.Count > 0)
                                {
                                    if (DungChung.Bien.MaBV == "12122")
                                    {
                                        if (par2.FirstOrDefault().Status == 0)
                                        {
                                            rep2.lab91.Visible = false;
                                            rep2.lab92.Visible = false;
                                            rep2.colTKXN.Visible = false;
                                        }
                                        else
                                        {
                                            rep2.lab89.Visible = false;
                                            rep2.lab90.Visible = false;
                                            rep2.colBSDT.Visible = false;
                                        }
                                    }
                                    _makp2 = par2.FirstOrDefault().MaKP == null ? 0 : par2.FirstOrDefault().MaKP.Value;
                                    rep2.Macb.Value = par2.FirstOrDefault().MaCBth;
                                    rep2.MaCBDT.Value = par2.FirstOrDefault().MaCBDT;
                                    rep2.DiaChi.Value = par2.FirstOrDefault().DChi;
                                    rep2.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                                    rep2.TenBNhan.Value = par2.FirstOrDefault().TenBNhan.ToUpper();
                                    int gioiTinh = int.Parse(par2.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep2.Nu.Value = "/".ToUpper();
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep2.Nam.Value = "/".ToUpper();
                                    }
                                    if (par2.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep2.SThe1.Value = par2.FirstOrDefault().SThe.Substring(0, 3);
                                        rep2.SThe2.Value = par2.FirstOrDefault().SThe.Substring(3, 2);
                                        rep2.SThe3.Value = par2.FirstOrDefault().SThe.Substring(5, 2);
                                        rep2.SThe4.Value = par2.FirstOrDefault().SThe.Substring(7, 3);
                                        rep2.SThe5.Value = par2.FirstOrDefault().SThe.Substring(10, 5);
                                    }
                                    bool capcuu = par2.FirstOrDefault().CapCuu;
                                    if (capcuu)
                                    {
                                        rep2.CapCuu.Value = "X";
                                    }
                                    else rep2.Thuong.Value = "X";
                                }
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp2, true);
                                rep2.ChanDoan.Value = arrThongTinBNKB[1];
                                rep2.Buong.Value = arrThongTinBNKB[2];
                                rep2.Giuong.Value = arrThongTinBNKB[3];
                                rep2.Khoa.Value = arrThongTinBNKB[4];

                                if (par2.FirstOrDefault().NgayThang != null)
                                    rep2.NgayCD.Value = DungChung.Ham.NgaySangChu(par2.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                else
                                    rep2.NgayCD.Value = "Ngày .... tháng ..... năm .....";
                                if (par2.FirstOrDefault().NgayTH != null)
                                    rep2.NgayTH.Value = DungChung.Ham.NgaySangChu(par2.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep2.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                rep2.CreateDocument();
                                frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                                if (PrintNow)
                                    DungChung.Ham.PrintReport(rep2);
                                else
                                    frm2.ShowDialog();
                            }
                            #endregion
                            #region chung
                            else
                            {
                                frmIn frm2 = new frmIn();
                                BaoCao.Rep_PhieuXNNuocTieu rep2 = new BaoCao.Rep_PhieuXNNuocTieu();
                                rep2.MaBNhan.Value = _Mabn;
                                int _makp2 = 0;
                                //rep.Status.Value = DungChung.Bien.InPhoi;

                                // int cls2 = Convert.ToInt32(GrvNhomDV.GetFocusedRowCellValue("IDCD"));
                                rep2.SoPhieu.Value = idcls;
                                var par2 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                            join bnkb in _Data.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                                            join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                            join CD in _Data.ChiDinhs on cls.IdCLS equals CD.IdCLS
                                            join clsct in _Data.CLScts on CD.IDCD equals clsct.IDCD
                                            where bnkb.MaKP == cls.MaKP
                                            select new { bnkb.ChanDoanBD, bnkb.MaICD, bnkb.MaICD2, cls.MaKP, cls.NgayThang, CD.MaMay, cls.NgayTH, cls.CapCuu, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, MaCBDT = cls.MaCB, cls.MaCBth, CD.Status, bn.NgaySinh, bn.ThangSinh, bn.NamSinh, bn.PID, bn.SoHSBA }).ToList();

                                var par3 = (from cls in _Data.CLS.Where(p => p.MaBNhan == _Mabn)
                                            join cd in _Data.ChiDinhs.Where(p => p.IdCLS == idcls) on cls.IdCLS equals cd.IdCLS
                                            join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                            join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                            join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                                            select new
                                            {
                                                dvct.TenDVct,
                                                KetQua = clsct.KetQua + " " + dvct.DonVi,
                                                dvct.TSBT,
                                                dv.TenDV,
                                            }).ToList();


                                if (par2.Count > 0)
                                {

                                    if (DungChung.Bien.MaBV == "30003" && !string.IsNullOrEmpty(par2.FirstOrDefault().MaMay))
                                    {
                                        string _mamay = par2.FirstOrDefault().MaMay;
                                        var tenmay = _Data.DichVus.Where(p => p.PLoai > 2 && p.MaQD == _mamay).ToList();
                                        if (tenmay.Count > 0)
                                        {
                                            rep2.MaMay.Value = "Phương pháp xét nghiệm: [" + tenmay.FirstOrDefault().TenDV + "] [" + _mamay + "]";
                                        }
                                        else
                                        {
                                            rep2.MaMay.Value = "Phương pháp xét nghiệm:";
                                        }
                                    }
                                    if (DungChung.Bien.MaBV == "12122")
                                    {
                                        if (par2.FirstOrDefault().Status == 0)
                                        {
                                            rep2.lab91.Visible = false;
                                            rep2.lab92.Visible = false;
                                            rep2.colTKXN.Visible = false;
                                        }
                                        else
                                        {
                                            rep2.lab89.Visible = false;
                                            rep2.lab90.Visible = false;
                                            rep2.colBSDT.Visible = false;
                                        }
                                    }
                                    if (DungChung.Bien.MaBV == "24012")
                                    {
                                        rep2.lbl_icd_24012_1.Visible = true;
                                        rep2.lbl_icd_24012_2.Visible = true;
                                        rep2.Parameters["MaICD"].Value = par2.First().MaICD + ", " + par2.First().MaICD2;
                                    }
                                    _makp2 = par2.FirstOrDefault().MaKP == null ? 0 : par2.FirstOrDefault().MaKP.Value;
                                    rep2.Macb.Value = par2.FirstOrDefault().MaCBth;
                                    rep2.PID.Value = par2.FirstOrDefault().PID;
                                    rep2.Mabenhan.Value = par2.FirstOrDefault().SoHSBA;
                                    rep2.TenCQCQ.Value = DungChung.Bien.TenCQCQ.ToUpper();
                                    rep2.TenCQ.Value = DungChung.Bien.TenCQ.ToUpper();
                                    rep2.MaCBDT.Value = par2.FirstOrDefault().MaCBDT;
                                    rep2.DiaChi.Value = par2.FirstOrDefault().DChi;
                                    rep2.NamSinh.Value = par2.FirstOrDefault().NamSinh;
                                    rep2.Tuoi.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.CalculateAge(par2.FirstOrDefault().NgaySinh, par2.FirstOrDefault().ThangSinh, par2.FirstOrDefault().NamSinh, "tháng.") : DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                                    rep2.TenBNhan.Value = par2.FirstOrDefault().TenBNhan.ToUpper();

                                    int gioiTinh = int.Parse(par2.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep2.Nu.Value = "/".ToUpper();
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep2.Nam.Value = "/".ToUpper();
                                    }
                                    if (DungChung.Bien.MaBV != "14018")
                                    {
                                        if (par2.FirstOrDefault().SThe.Length >= 15)
                                        {
                                            rep2.SThe1.Value = par2.FirstOrDefault().SThe.Substring(0, 3);
                                            rep2.SThe2.Value = par2.FirstOrDefault().SThe.Substring(3, 2);
                                            rep2.SThe3.Value = par2.FirstOrDefault().SThe.Substring(5, 2);
                                            rep2.SThe4.Value = par2.FirstOrDefault().SThe.Substring(7, 3);
                                            rep2.SThe5.Value = par2.FirstOrDefault().SThe.Substring(10, 5);
                                        }
                                    }
                                    else
                                    {
                                        if (gioiTinh == 1)
                                        {
                                            rep2.Gioitinh.Value = "Nam";
                                        }
                                        else if (gioiTinh == 0)
                                        {
                                            rep2.Gioitinh.Value = "Nữ";
                                        }

                                        if (par2.FirstOrDefault().SThe.Length >= 15)
                                        {
                                            rep2.SThe1.Value = par2.FirstOrDefault().SThe.Substring(0, 2);
                                            rep2.SThe2.Value = par2.FirstOrDefault().SThe.Substring(2, 1);
                                            rep2.SThe3.Value = par2.FirstOrDefault().SThe.Substring(3, 2);
                                            rep2.SThe4.Value = par2.FirstOrDefault().SThe.Substring(5, 2);
                                            rep2.SThe5.Value = par2.FirstOrDefault().SThe.Substring(7, 3);
                                            rep2.SThe6.Value = par2.FirstOrDefault().SThe.Substring(10);
                                        }
                                    }

                                    bool capcuu = par2.FirstOrDefault().CapCuu;
                                    if (capcuu)
                                    {
                                        rep2.CapCuu.Value = "X";
                                    }
                                    else rep2.Thuong.Value = "X";
                                }
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp2, true);
                                rep2.ChanDoan.Value = (par2.FirstOrDefault().ChanDoanBD != null || par2.FirstOrDefault().ChanDoanBD != "") && DungChung.Bien.MaBV == "24272" ? par2.FirstOrDefault().ChanDoanBD + ";" : "";
                                if (DungChung.Bien.MaBV != "24272")
                                {
                                    rep2.ChanDoan.Value += DungChung.Bien.MaBV == "14018" ? DungChung.Ham.GetChanDoanKB(_Data, _Mabn) : arrThongTinBNKB[1];
                                }
                                rep2.Buong.Value = arrThongTinBNKB[2];
                                rep2.Giuong.Value = arrThongTinBNKB[3];
                                rep2.Khoa.Value = arrThongTinBNKB[4];
                                if (DungChung.Bien.MaBV == "26007")
                                {
                                    rep2.NgayCD.Value = "..... giờ ....phút, ngày ..... tháng ..... năm .....";
                                    if (par2.FirstOrDefault().NgayTH != null)
                                        rep2.NgayTH.Value = DungChung.Ham.NgaySangChu(par2.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep2.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                }
                                else
                                {
                                    if (DungChung.Bien.MaBV == "14018")
                                    {
                                        if (par2.FirstOrDefault().NgayThang != null)
                                            rep2.NgayCD.Value = "Ngày " + par2.FirstOrDefault().NgayThang.Value.Day + " tháng " + par2.FirstOrDefault().NgayThang.Value.Month + " năm " + par2.FirstOrDefault().NgayThang.Value.Year;
                                        else
                                            rep2.NgayCD.Value = "Ngày .... tháng ..... năm .....";
                                        if (par2.FirstOrDefault().NgayTH != null)
                                            rep2.NgayTH.Value = DungChung.Ham.NgaySangChu(par2.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                        else
                                            rep2.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    }
                                    else
                                    {
                                        if (par2.FirstOrDefault().NgayThang != null)
                                            rep2.NgayCD.Value = DungChung.Ham.NgaySangChu(par2.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                        else
                                            rep2.NgayCD.Value = "Ngày .... tháng ..... năm .....";
                                        if (par2.FirstOrDefault().NgayTH != null)
                                            rep2.NgayTH.Value = DungChung.Ham.NgaySangChu(par2.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                        else
                                            rep2.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    }

                                }
                                if (DungChung.Bien.MaBV == "14018")
                                {
                                    rep2.DataSource = par3;
                                }
                                rep2.CreateDocument();
                                frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                                if (PrintNow)
                                    DungChung.Ham.PrintReport(rep2);
                                else
                                    frm2.ShowDialog();
                            }
                            #endregion
                        }
                    }
                    break;
                #endregion
                #region XN khác
                case "XN khác":
                    #region Chí linh
                    //if (DungChung.Bien.MaBV == "30003")//Chí linh
                    //{
                    //    frmIn frm3 = new frmIn();
                    //    BaoCao.Rep_PhieuXNKhac_CL rep3 = new BaoCao.Rep_PhieuXNKhac_CL();
                    //    rep3.SoPhieu.Value = idcls; //idcls
                    //    var par3 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                    //                join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                    //                join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                    //                join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                    //                select new { cls3.MaKP, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls3.MaCB, cls3.MaCBth, cdcls.ChiDinh1, cdcls.KetLuan }).ToList();
                    //    if (par3.Count > 0)
                    //    {
                    //        rep3.TenBNhan.Value = par3.FirstOrDefault().TenBNhan.ToUpper();
                    //        rep3.MaCBDT.Value = par3.FirstOrDefault().MaCB;
                    //        rep3.Macb.Value = par3.FirstOrDefault().MaCBth;
                    //        rep3.DiaChi.Value = par3.FirstOrDefault().DChi;
                    //        rep3.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                    //        rep3.MaBNhan.Value = par3.FirstOrDefault().MaBNhan;
                    //        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, par3.FirstOrDefault().MaKP);
                    //        rep3.ChanDoan.Value = arrThongTinBNKB[1];
                    //        rep3.Buong.Value = arrThongTinBNKB[2];
                    //        rep3.Giuong.Value = arrThongTinBNKB[3];
                    //        rep3.Khoa.Value = arrThongTinBNKB[4];

                    //        int gioiTinh = int.Parse(par3.FirstOrDefault().GTinh.ToString());
                    //        if (gioiTinh == 1)
                    //        { rep3.Nam.Value = "X".ToUpper();

                    //        }
                    //        else if (gioiTinh == 0)
                    //        {
                    //           rep3.Nu.Value = "X".ToUpper();
                    //        }
                    //        var parx = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                    //                    join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                    //                    join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                    //                    join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                    //                    join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                    //                    group new { dv, clsct } by new { dv.TenDV, clsct.KetQua } into kq
                    //                    select new { YC = kq.Key.TenDV, KQ = kq.Key.KetQua }).ToList();
                    //        if (parx.Count > 0)
                    //        {
                    //            rep3.DataSource = parx;
                    //            rep3.BindingData();
                    //        }
                    //        if (par3.FirstOrDefault().SThe.Length >= 15)
                    //        {
                    //            rep3.SThe1.Value = par3.FirstOrDefault().SThe.Substring(0, 3);
                    //            rep3.SThe2.Value = par3.FirstOrDefault().SThe.Substring(3, 2);
                    //            rep3.SThe3.Value = par3.FirstOrDefault().SThe.Substring(5, 2);
                    //            rep3.SThe4.Value = par3.FirstOrDefault().SThe.Substring(7, 3);
                    //            rep3.SThe5.Value = par3.FirstOrDefault().SThe.Substring(10, 5);
                    //        }
                    //    }

                    //    rep3.CreateDocument();
                    //    frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                    //    frm3.ShowDialog();
                    //    break;
                    //}
                    #endregion
                    #region 02005
                    if (DungChung.Bien.MaBV == "02005")
                    {
                        frmIn frmkvx = new frmIn();
                        BaoCao.Rep_PhieuXNKhac_VX04 repkvx = new BaoCao.Rep_PhieuXNKhac_VX04();
                        int _makpvx = 0;

                        var parkvx = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                      join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                      join cdcls in _Data.ChiDinhs on cls.IdCLS equals cdcls.IdCLS
                                      join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                      select new { cls.NgayTH, cls.CapCuu, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, bn.DTuong, cls.MaCB, cls.MaKP, cls.MaCBth }).ToList();
                        if (parkvx.Count > 0)
                        {
                            _makpvx = parkvx.FirstOrDefault().MaKP == null ? 0 : parkvx.FirstOrDefault().MaKP.Value;
                            repkvx.MaBSCD.Value = parkvx.FirstOrDefault().MaCB;
                            repkvx.DChi.Value = parkvx.FirstOrDefault().DChi;
                            repkvx.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                            repkvx.DTuong.Value = parkvx.FirstOrDefault().DTuong;
                            repkvx.MaBNhan.Value = parkvx.FirstOrDefault().MaBNhan;
                            repkvx.TenBNhan.Value = parkvx.FirstOrDefault().TenBNhan.ToUpper();
                            repkvx.SThe.Value = parkvx.FirstOrDefault().SThe;
                            repkvx.KhoaBSCD.Value = parkvx.FirstOrDefault().MaKP;
                            repkvx.MaBSXN.Value = parkvx.FirstOrDefault().MaCBth;

                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makpvx, true);
                            repkvx.CDoan.Value = arrThongTinBNKB[1];
                            repkvx.Buong.Value = arrThongTinBNKB[2];
                            repkvx.Giuong.Value = arrThongTinBNKB[3];
                            repkvx.Khoa.Value = arrThongTinBNKB[4];

                            if (parkvx.FirstOrDefault().NgayTH != null && DungChung.Bien.MaBV != "04011")
                                repkvx.NgayTH.Value = DungChung.Ham.NgaySangChu(parkvx.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                repkvx.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            int gioiTinh = int.Parse(parkvx.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                repkvx.GioiTinh.Value = "Nam";
                            }
                            else if (gioiTinh == 0)
                            {
                                repkvx.GioiTinh.Value = "Nữ";
                            }
                            bool capcuu = parkvx.FirstOrDefault().CapCuu;
                            if (capcuu)
                            {
                                repkvx.CapCuu.Value = "X";
                            }
                            else repkvx.Thuong.Value = "X";
                        }

                        var parx = (from cls in _Data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idcls)
                                    join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                    join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                    join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                    group new { dvct } by new { dvct.TenDVct, dvct.TSBT, clsct.KetQua } into kq
                                    select new { TenDVct = kq.Key.TenDVct, TSBT = kq.Key.TSBT, KetQua = kq.Key.KetQua }).ToList();
                        if (parx.Count > 0)
                        {
                            repkvx.DataSource = parx.ToList();
                            repkvx.BindingData();
                        }

                        repkvx.CreateDocument();
                        frmkvx.prcIN.PrintingSystem = repkvx.PrintingSystem;
                        if (PrintNow)
                            DungChung.Ham.PrintReport(repkvx);
                        else
                            frmkvx.ShowDialog();

                    }
                    #endregion
                    else
                    {
                        #region 08204, 04018, 30003
                        if (DungChung.Bien.MaBV == "08204" || DungChung.Bien.MaBV == "04018" || DungChung.Bien.MaBV == "30003")
                        {
                            frmIn frm3 = new frmIn();
                            BaoCao.Rep_PhieuXNKhac_A5 rep3 = new BaoCao.Rep_PhieuXNKhac_A5();
                            rep3.TenBPham.Value = "BỆNH PHẨM:";
                            rep3.SoPhieu.Value = idcls;
                            int _makp3 = 0;

                            var par3 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                        join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                        join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                        join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                                        select new { dvct.DonVi, cdcls.MaMay, dvct.TenDVct, cls3.MaKP, NgayCD = cls3.NgayThang, NgayTH = cls3.NgayTH, cls3.MaCBth, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, MaCBDT = cls3.MaCB, cdcls.ChiDinh1, cdcls.KetLuan }).ToList();
                            if (par3.Count > 0)
                            {
                                if (DungChung.Bien.MaBV == "30003")
                                {
                                    if (par3.FirstOrDefault().TenDVct.ToUpper().Contains("SARS-COV-2"))
                                    {
                                        rep3.TenBPham.Value = "BỆNH PHẨM: Dịch tỵ hầu";
                                        rep3.SubBand1.Visible = false;
                                        rep3.SubBand2.Visible = true;
                                    }
                                    if (!string.IsNullOrEmpty(par3.FirstOrDefault().MaMay))
                                    {
                                        string _mamay = par3.FirstOrDefault().MaMay;
                                        var tenmay = _Data.DichVus.Where(p => p.PLoai > 2 && p.MaQD == _mamay).ToList();
                                        if (tenmay.Count > 0)
                                        {
                                            rep3.MaMay.Value = "Phương pháp xét nghiệm: [" + tenmay.FirstOrDefault().TenDV + "] [" + _mamay + "]";
                                        }
                                        else
                                        {
                                            rep3.MaMay.Value = "Phương pháp xét nghiệm:";
                                        }
                                    }
                                }
                                _makp3 = par3.FirstOrDefault().MaKP == null ? 0 : par3.FirstOrDefault().MaKP.Value;
                                rep3.Macb.Value = par3.FirstOrDefault().MaCBth;
                                rep3.MaCBDT.Value = par3.FirstOrDefault().MaCBDT;
                                rep3.DiaChi.Value = par3.FirstOrDefault().DChi;
                                rep3.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                                rep3.MaBNhan.Value = par3.FirstOrDefault().MaBNhan;
                                rep3.TenBNhan.Value = par3.FirstOrDefault().TenBNhan.ToUpper();

                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp3, true);
                                rep3.ChanDoan.Value = arrThongTinBNKB[1];
                                rep3.Buong.Value = arrThongTinBNKB[2];
                                rep3.Giuong.Value = arrThongTinBNKB[3];
                                rep3.Khoa.Value = arrThongTinBNKB[4];

                                if (par3.FirstOrDefault().NgayCD != null)
                                    rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayCD.Value, DungChung.Bien.FormatDate);
                                else
                                    rep3.NgayCD.Value = "Ngày .... tháng ..... năm .....";
                                if (par3.FirstOrDefault().NgayTH != null)
                                    rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else

                                    rep3.NgayTH.Value = "Ngày .... tháng ..... năm .....";
                                int gioiTinh = int.Parse(par3.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 0)
                                {
                                    rep3.Nu.Value = "/".ToUpper();
                                    rep3.txtNu.Text = "x".ToUpper();
                                }
                                else if (gioiTinh == 1)
                                {
                                    rep3.Nam.Value = "/".ToUpper();
                                    rep3.txtNam.Text = "x".ToUpper();
                                }
                                var parx = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                            join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                            join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                            join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                            join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                            join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                                            group new { dv, clsct, dvct } by new { TenDV = DungChung.Bien.MaBV == "30003" ? dvct.TenDVct : dv.TenDV, clsct.KetQua, dvct.DonVi, dv.TenRG } into kq
                                            select new { YC = DungChung.Bien.MaBV == "20001" ? kq.Key.TenRG : kq.Key.TenDV, KQ = kq.Key.KetQua, kq.Key.DonVi }).ToList();
                                if (parx.Count > 0)
                                {
                                    rep3.DataSource = parx;
                                    rep3.BindingData();
                                }

                                if (par3.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep3.SThe1.Value = par3.FirstOrDefault().SThe.Substring(0, 3);
                                    rep3.SThe2.Value = par3.FirstOrDefault().SThe.Substring(3, 2);
                                    rep3.SThe3.Value = par3.FirstOrDefault().SThe.Substring(5, 2);
                                    rep3.SThe4.Value = par3.FirstOrDefault().SThe.Substring(7, 3);
                                    rep3.SThe5.Value = par3.FirstOrDefault().SThe.Substring(10, 5);
                                }
                            }
                            rep3.CreateDocument();
                            frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                            if (PrintNow)
                                DungChung.Ham.PrintReport(rep3);
                            else
                                frm3.ShowDialog();
                        }
                        #endregion
                        #region 30004
                        else if (DungChung.Bien.MaBV == "30004")
                        {
                            string TenKP = ""; string MaMay = "";
                            List<InXNTongHop> _ltn = new List<InXNTongHop>();
                            _ltn = (from cd in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                                    join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                    join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                                    join tndv in _Data.TieuNhomDVs on dv.IdTieuNhom equals tndv.IdTieuNhom
                                    join tn in _Data.DichVucts on clsct.MaDVct equals tn.MaDVct
                                    select new InXNTongHop
                                    {
                                        IdTieuNhom = tndv.IdTieuNhom,
                                        TenTN = tndv.TenTN,
                                        MaMay = cd.MaMay ?? "",
                                        IdCLS = cd.IdCLS ?? 0,
                                        IdCD = cd.IDCD,

                                    }).ToList();
                            if (_ltn.Count() > 0)
                            {
                                var kps = (from cls in _Data.CLS.Where(p => p.IdCLS == idcls)
                                           join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                           select new { kp.TenKP }).ToList();
                                CLS.InPhieu._inPhieuXNTongHop_30004(_Mabn, _ltn, false, TenKP = kps.FirstOrDefault().TenKP ?? "", MaMay);
                            }
                        }
                        #endregion
                        #region 27001
                        else if (DungChung.Bien.MaBV == "27001")
                        {
                            frmIn frm3 = new frmIn();
                            //BaoCao.Rep_PhieuXNKhac_A5_27001 rep3 = new BaoCao.Rep_PhieuXNKhac_A5_27001();
                            BaoCao.Rep_PhieuXNKhac rep3 = new BaoCao.Rep_PhieuXNKhac();
                            rep3.SoPhieu.Value = idcls;

                            var par3 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                        join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                        join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                        join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                        select new { cls3.MaKP, NgayCD = cls3.NgayThang, NgayTH = cls3.NgayTH, cls3.MaCBth, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, MaCBDT = cls3.MaCB, cdcls.ChiDinh1, cdcls.KetLuan, cls3.MaKPth }).ToList();
                            if (DungChung.Bien.MaBV == "27023")
                                rep3.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par3.Count > 0)
                                {
                                    int mabn = par3.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep3.So.Value = qvv.SoVV;
                                    else
                                        rep3.So.Value = "";
                                }
                            }
                            else
                                rep3.So.Value = idcls;
                            int _makp3 = 0;

                            if (par3.Count > 0)
                            {
                                _makp3 = par3.FirstOrDefault().MaKP == null ? 0 : par3.FirstOrDefault().MaKP.Value;
                                rep3.Macb.Value = par3.FirstOrDefault().MaCBth;
                                rep3.MaCBDT.Value = par3.FirstOrDefault().MaCBDT;
                                rep3.DiaChi.Value = par3.FirstOrDefault().DChi;
                                rep3.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                                rep3.MaBNhan.Value = par3.FirstOrDefault().MaBNhan;
                                rep3.TenBNhan.Value = par3.FirstOrDefault().TenBNhan.ToUpper();

                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp3, true);
                                rep3.ChanDoan.Value = arrThongTinBNKB[1];
                                rep3.Buong.Value = arrThongTinBNKB[2];
                                rep3.Giuong.Value = arrThongTinBNKB[3];

                                rep3.Khoa.Value = arrThongTinBNKB[4];

                                if (par3.FirstOrDefault().NgayCD != null)
                                    rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayCD.Value, DungChung.Bien.FormatDate);
                                else
                                    rep3.NgayCD.Value = "Ngày .... tháng ..... năm .....";
                                if (par3.FirstOrDefault().NgayTH != null)
                                    rep3.So.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else

                                    rep3.So.Value = "Ngày .... tháng ..... năm .....";
                                int gioiTinh = int.Parse(par3.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep3.Nu.Value = "/".ToUpper();
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep3.Nam.Value = "/".ToUpper();
                                }

                                if (par3.FirstOrDefault().SThe != null && par3.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep3.SThe1.Value = par3.FirstOrDefault().SThe.Substring(0, 3);
                                    rep3.SThe2.Value = par3.FirstOrDefault().SThe.Substring(3, 2);
                                    rep3.SThe3.Value = par3.FirstOrDefault().SThe.Substring(5, 2);
                                    rep3.SThe4.Value = par3.FirstOrDefault().SThe.Substring(7, 3);
                                    rep3.SThe5.Value = par3.FirstOrDefault().SThe.Substring(10, 5);
                                }
                            }
                            var parx = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                        join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                        join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                        join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                        //join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        group new { dv, clsct } by new { TenDV = DungChung.Bien.MaBV == "20001 " ? dv.TenRG : dv.TenDV, clsct.KetQua } into kq
                                        select new { YC = kq.Key.TenDV, KQ = kq.Key.KetQua }).ToList();
                            if (parx.Count > 0)
                            {
                                rep3.DataSource = parx;
                                rep3.BindingData();
                            }
                            if (DungChung.Bien.MaBV == "30010")
                            {
                                int mkpth = Convert.ToInt32(par3.FirstOrDefault().MaKPth.Value);
                                rep3.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                            }//yenbg1
                            rep3.CreateDocument();
                            frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                            if (PrintNow)
                                DungChung.Ham.PrintReport(rep3);
                            else
                                frm3.ShowDialog();
                        }
                        #endregion
                        #region 30005 & nhuom soi
                        else if (DungChung.Bien.MaBV == "30005" && tendv.Contains("nhuộm soi"))
                        {

                            var ttbn1 = _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn).FirstOrDefault();
                            if (ttbn1 != null)
                            {
                                frmIn frm31 = new frmIn();
                                BaoCao.Rep_PhieuXNNhuomSoi rep31 = new BaoCao.Rep_PhieuXNNhuomSoi();
                                rep31.CQCQ.Value = DungChung.Bien.TenCQCQ.ToUpper();
                                rep31.CQ.Value = DungChung.Bien.TenCQ.ToUpper();
                                rep31.SOTHE.Value = ttbn1.SThe;
                                rep31.TENBN.Value = ttbn1.TenBNhan.ToUpper();
                                rep31.NAMSINH.Value = ttbn1.NamSinh.ToString();
                                rep31.GTINH.Value = ttbn1.GTinh == 1 ? "Nam" : "Nữ";
                                rep31.DCHI.Value = ttbn1.DChi;
                                rep31.DTUONG.Value = ttbn1.DTuong == "BHYT" ? "Bảo hiểm y tế" : "Dịch vụ";
                                var parx = (from cls3 in _Data.CLS.Where(p => p.IdCLS == idcls)
                                            join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                            join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                            join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                            join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                            group new { dv, clsct } by new { TenDV = dv.TenDV, clsct.KetQua, dvct.TSBT, dvct.TenDVct, cls3.MaKP, cls3.MaCB, cls3.ChanDoan, cls3.NgayTH, cls3.NgayThang, cls3.MaCBth } into kq
                                            select new { kq.Key.TenDV, kq.Key.TenDVct, kq.Key.TSBT, kq.Key.KetQua, kq.Key.MaKP, kq.Key.MaCB, kq.Key.ChanDoan, kq.Key.NgayTH, kq.Key.NgayThang, kq.Key.MaCBth }).ToList();
                                int makp = 0;
                                string macb = "";
                                if (parx.Count > 0)
                                {
                                    makp = parx.FirstOrDefault().MaKP ?? 0;
                                    var tenkp = _Data.KPhongs.Where(p => p.MaKP == makp).FirstOrDefault();
                                    //var cd = _Data.BNKBs.Where(p => p.MaKP == makp && p.MaBNhan == _Mabn).FirstOrDefault();
                                    if (tenkp != null)
                                    {
                                        rep31.KHOAP.Value = tenkp.TenKP;
                                    }
                                    rep31.Macb.Value = parx.FirstOrDefault().MaCBth;
                                    rep31.BSCD.Value = parx.FirstOrDefault().MaCB;
                                    rep31.CHANDOAN.Value = parx.FirstOrDefault().ChanDoan;
                                    if (parx.FirstOrDefault().NgayTH != null)
                                    {
                                        rep31.NGAYKY.Value = DungChung.Ham.NgaySangChu(parx.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);//parx.FirstOrDefault().NgayTH.Value.Hour + " giờ, ngày " + parx.FirstOrDefault().NgayTH.Value.Day + " tháng " + parx.FirstOrDefault().NgayTH.Value.Month + " năm " + parx.FirstOrDefault().NgayTH.Value.Year;
                                    }
                                    else
                                        rep31.NGAYKY.Value = "ngày.....tháng....năm....";
                                    if (parx.FirstOrDefault().NgayThang != null)
                                        rep31.NgayCD.Value = DungChung.Ham.NgaySangChu(parx.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep31.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                }
                                rep31.DataSource = parx;
                                rep31.BindingData();
                                rep31.CreateDocument();
                                frm31.prcIN.PrintingSystem = rep31.PrintingSystem;
                                if (PrintNow)
                                    DungChung.Ham.PrintReport(rep31);
                                else
                                    frm31.ShowDialog();
                            }

                        }
                        #endregion
                        else if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                        {
                            InPhieuXNHuyetHoc_01070(_Mabn, idcls, _tieunhom);
                        }
                        else if (DungChung.Bien.MaBV == "30007" && tendv == "nghiệm pháp dung nạp glucose đường uống 2 mẫu không định lượng insulin")
                        {
                            frmIn frm3 = new frmIn();
                            BaoCao.Rep_PhieuGluco rep3 = new BaoCao.Rep_PhieuGluco();
                            rep3.SoPhieu.Value = idcls;
                            rep3.xrYcxn.Text = tendv1;
                            var par3 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                        join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                        join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                        join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                        select new { cls3.GhiChu, cls3.CapCuu, cls3.MaKP, NgayCD = cls3.NgayThang, NgayTH = cls3.NgayTH, cls3.MaCBth, bn.MaBNhan, bn.TenBNhan, bn.NamSinh, bn.DChi, bn.NoiTru, bn.GTinh, bn.Tuoi, bn.SThe, MaCBDT = cls3.MaCB, cdcls.ChiDinh1, cdcls.KetLuan, cdcls.Status, cls3.BarCode, cls3.MaKPth }).ToList();
                            if (DungChung.Bien.MaBV == "27023")
                                rep3.So.Value = _so;

                            if (par3.FirstOrDefault().GhiChu != null)
                            {
                                rep3.xrLabel41.Text = par3.FirstOrDefault().GhiChu;
                            }

                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par3.Count > 0)
                                {
                                    int mabn = par3.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep3.So.Value = qvv.SoVV;
                                    else
                                        rep3.So.Value = "";

                                }
                            }
                            else
                                rep3.So.Value = idcls;

                            int _makp3 = 0;

                            if (par3.Count > 0)
                            {
                                if (DungChung.Bien.MaBV == "12122")
                                {
                                    if (par3.FirstOrDefault().Status == 0)
                                    {
                                        rep3.xrTableCell4.Visible = false;
                                        rep3.xrTableCell8.Visible = false;
                                        rep3.colTenTKXN.Visible = false;
                                    }
                                    else
                                    {
                                        rep3.xrTableCell7.Visible = false;
                                        rep3.xrTableCell3.Visible = false;
                                        rep3.colTenBSDT.Visible = false;
                                    }
                                }
                                //if (par3.FirstOrDefault().NoiTru == 1)
                                //{
                                //    //var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _Mabn).Select(p => p.SoVV).FirstOrDefault();
                                //    //rep3.sovv.Text = "Số VV: " + (sovv == null ? "" : sovv.ToString());
                                //}
                                _makp3 = par3.FirstOrDefault().MaKP == null ? 0 : par3.FirstOrDefault().MaKP.Value;
                                rep3.Macb.Value = par3.FirstOrDefault().MaCBth;
                                rep3.MaCBDT.Value = par3.FirstOrDefault().MaCBDT;
                                rep3.DiaChi.Value = par3.FirstOrDefault().DChi;
                                rep3.NamSinh.Value = par3.FirstOrDefault().NamSinh;
                                rep3.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                                rep3.MaBNhan.Value = par3.FirstOrDefault().MaBNhan;
                                rep3.TenBNhan.Value = par3.FirstOrDefault().TenBNhan.ToUpper();
                                //rep3.xrLabel45.Text = rep3.thuong.Text = (par3.FirstOrDefault().CapCuu == false) ? "X" : "";
                                //rep3.xrLabel43.Text = rep3.capcuu.Text = (par3.FirstOrDefault().CapCuu == true) ? "X" : "";
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp3, true);
                                rep3.MaICD.Value = "Mã ICD: " + arrThongTinBNKB[0];
                                rep3.ChanDoan.Value = arrThongTinBNKB[1];
                                rep3.Buong.Value = arrThongTinBNKB[2];
                                rep3.Giuong.Value = arrThongTinBNKB[3];

                                rep3.Khoa.Value = arrThongTinBNKB[4];

                                if (par3.FirstOrDefault().NgayCD != null)
                                    rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayCD.Value, DungChung.Bien.FormatDate);
                                else
                                    rep3.NgayCD.Value = "Ngày .... tháng ..... năm .....";
                                if (par3.FirstOrDefault().NgayTH != null)
                                    rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else

                                    rep3.NgayTH.Value = "Ngày .... tháng ..... năm .....";
                                int gioiTinh = int.Parse(par3.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep3.Nu.Value = "/".ToUpper();
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep3.Nam.Value = "/".ToUpper();
                                }

                                if (par3.FirstOrDefault().SThe != null && par3.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep3.SThe1.Value = par3.FirstOrDefault().SThe.Substring(0, 3);
                                    rep3.SThe2.Value = par3.FirstOrDefault().SThe.Substring(3, 2);
                                    rep3.SThe3.Value = par3.FirstOrDefault().SThe.Substring(5, 2);
                                    rep3.SThe4.Value = par3.FirstOrDefault().SThe.Substring(7, 3);
                                    rep3.SThe5.Value = par3.FirstOrDefault().SThe.Substring(10, 5);
                                }
                            }
                            var parx = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                        join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                        join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                        join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                        join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        //join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        group new { dv, clsct, dvct } by new { TenDV = DungChung.Bien.MaBV == "20001 " ? dv.TenRG : dv.TenDV, clsct.KetQua, dvct.TenDVct } into kq
                                        select new { YC = kq.Key.TenDVct, KQ = kq.Key.KetQua }).ToList();
                            if (parx.Count > 0)
                            {
                                var kq1 = (from q in parx.Where(p => p.YC == "Trước uống glucose")
                                           select new { q.KQ }).ToList();
                                if (kq1.Count() > 0)
                                {
                                    rep3.truoc.Text = kq1.FirstOrDefault().KQ + " mmol/L";
                                }
                                var kq2 = (from q2 in parx.Where(p => p.YC == "Sau khi uống glucose 01 giờ")
                                           select new { q2.KQ }).ToList();
                                if (kq2.Count() > 0)
                                {
                                    rep3.sau1h.Text = kq2.FirstOrDefault().KQ + " mmol/L";
                                }
                                var kq3 = (from q3 in parx.Where(p => p.YC == "Sau khi uống glucose 02 giờ")
                                           select new { q3.KQ }).ToList();
                                if (kq3.Count() > 0)
                                {
                                    rep3.sau2h.Text = kq3.FirstOrDefault().KQ + " mmol/L";
                                }
                                rep3.DataSource = parx;
                                //rep3.BindingData();
                            }
                            if (DungChung.Bien.MaBV == "30010")
                            {
                                int mkpth = Convert.ToInt32(par3.FirstOrDefault().MaKPth.Value);
                                rep3.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                            }//yenbg1
                            rep3.CreateDocument();
                            frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                            if (PrintNow)
                                DungChung.Ham.PrintReport(rep3);
                            else
                                frm3.ShowDialog();
                        }
                        #region chung
                        else
                        {

                            frmIn frm3 = new frmIn();
                            BaoCao.Rep_PhieuXNKhac rep3 = new BaoCao.Rep_PhieuXNKhac();
                            rep3.SoPhieu.Value = idcls;
                            rep3.colMaBN.Text = _Mabn.ToString(); ;
                            var par3 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join ttbs in _Data.TTboXungs on bn.MaBNhan equals ttbs.MaBNhan
                                        join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                        join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                        join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                        join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                        join cb in _Data.CanBoes on cls3.MaCB equals cb.MaCB
                                        join bnkb in _Data.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                                        select new { bnkb.ChanDoanBD, cls3.ChanDoan, cb.TenCB, ttbs.SoKSinh, cls3.CapCuu, cls3.MaKP, NgayCD = cls3.NgayThang, NgayTH = cls3.NgayTH, cls3.MaCBth, bn.MaBNhan, bn.TenBNhan, bn.NamSinh, bn.DChi, bn.NoiTru, bn.GTinh, bn.Tuoi, bn.SThe, MaCBDT = cls3.MaCB, cdcls.ChiDinh1, cdcls.KetLuan, cdcls.Status, cls3.BarCode, cls3.MaKPth, ttbs.DThoai, ttbs.NoiLV }).ToList();
                            if (DungChung.Bien.MaBV == "27023")
                                rep3.So.Value = _so;

                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par3.Count > 0)
                                {
                                    int mabn = par3.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep3.So.Value = qvv.SoVV;
                                    else
                                        rep3.So.Value = "";

                                }
                            }
                            else
                                rep3.So.Value = idcls;

                            int _makp3 = 0;

                            if (par3.Count > 0)
                            {
                                if (DungChung.Bien.MaBV == "12122")
                                {
                                    if (par3.FirstOrDefault().Status == 0)
                                    {
                                        rep3.xrTableCell4.Visible = false;
                                        rep3.xrTableCell8.Visible = false;
                                        rep3.colTenTKXN.Visible = false;
                                    }
                                    else
                                    {
                                        rep3.xrTableCell7.Visible = false;
                                        rep3.xrTableCell3.Visible = false;
                                        rep3.colTenBSDT.Visible = false;
                                    }
                                }
                                if (par3.FirstOrDefault().NoiTru == 1)
                                {
                                    var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _Mabn).Select(p => p.SoVV).FirstOrDefault();
                                    rep3.sovv.Text = "Số VV: " + (sovv == null ? "" : sovv.ToString());
                                }
                                _makp3 = par3.FirstOrDefault().MaKP == null ? 0 : par3.FirstOrDefault().MaKP.Value;
                                rep3.TenCBCD.Value = par3.FirstOrDefault().TenCB;
                                rep3.Macb.Value = par3.FirstOrDefault().MaCBth;
                                rep3.CMT.Value = par3.FirstOrDefault().SoKSinh;
                                rep3.MaCBDT.Value = par3.FirstOrDefault().MaCBDT;
                                rep3.DiaChi.Value = par3.FirstOrDefault().DChi;
                                rep3.NamSinh.Value = par3.FirstOrDefault().NamSinh;
                                rep3.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                                rep3.MaBNhan.Value = par3.FirstOrDefault().MaBNhan;
                                rep3.TenBNhan.Value = par3.FirstOrDefault().TenBNhan.ToUpper();
                                rep3.xrLabel45.Text = rep3.thuong.Text = rep3.txtthuong.Text = (par3.FirstOrDefault().CapCuu == false) ? "X" : "";
                                rep3.xrLabel43.Text = rep3.capcuu.Text = rep3.txtcapcuu.Text = (par3.FirstOrDefault().CapCuu == true) ? "X" : "";
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp3, true);
                                rep3.MaICD.Value = "Mã ICD: " + arrThongTinBNKB[0];
                                rep3.ChanDoan.Value = (par3.FirstOrDefault().ChanDoanBD != null || par3.FirstOrDefault().ChanDoanBD != "") && DungChung.Bien.MaBV == "24272" ? par3.FirstOrDefault().ChanDoanBD + ";" : "";
                                if (DungChung.Bien.MaBV != "24272")
                                {
                                    rep3.ChanDoan.Value += arrThongTinBNKB[1];
                                }
                                rep3.Buong.Value = arrThongTinBNKB[2];
                                rep3.Giuong.Value = arrThongTinBNKB[3];
                                rep3.SDT.Value = par3.FirstOrDefault().DThoai;
                                rep3.Khoa.Value = arrThongTinBNKB[4];
                                rep3.NoiLV.Value = par3.FirstOrDefault().NoiLV;

                                if (par3.FirstOrDefault().NgayCD != null)
                                    rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayCD.Value, DungChung.Bien.FormatDate);
                                else
                                    rep3.NgayCD.Value = "Ngày .... tháng ..... năm .....";
                                if (par3.FirstOrDefault().NgayTH != null)
                                    rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else

                                    rep3.NgayTH.Value = "Ngày .... tháng ..... năm .....";
                                int gioiTinh = int.Parse(par3.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep3.Nu.Value = "/".ToUpper();
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep3.Nam.Value = "/".ToUpper();
                                }

                                if (par3.FirstOrDefault().SThe != null && par3.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep3.SThe1.Value = par3.FirstOrDefault().SThe.Substring(0, 3);
                                    rep3.SThe2.Value = par3.FirstOrDefault().SThe.Substring(3, 2);
                                    rep3.SThe3.Value = par3.FirstOrDefault().SThe.Substring(5, 2);
                                    rep3.SThe4.Value = par3.FirstOrDefault().SThe.Substring(7, 3);
                                    rep3.SThe5.Value = par3.FirstOrDefault().SThe.Substring(10, 5);
                                }
                            }
                            if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "27183")
                            {
                                rep3.txtBarcode.Text = par3.Count > 0 ? par3.FirstOrDefault().BarCode : "";
                                rep3.sovv.Visible = false;
                                rep3.lblBarcode.Visible = true;
                                rep3.txtBarcode.Visible = true;
                            }
                            var parx = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                        join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                        join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                        join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                        //join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        group new { dv, clsct } by new { TenDV = DungChung.Bien.MaBV == "20001 " ? dv.TenRG : dv.TenDV, clsct.KetQua, dv.DonVi } into kq
                                        select new { YC = kq.Key.TenDV, KQ = kq.Key.KetQua, DV = kq.Key.DonVi }).ToList();
                            if (_lIdCls != null && _lMaDV != null)
                            {
                                parx = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join cls3 in _Data.CLS.Where(p => DungChung.Bien.MaBV == "30372" ? _lIdCls.Contains(p.IdCLS) : p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                        join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                        join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                        join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                        //join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        where (DungChung.Bien.MaBV == "30372" ? _lMaDV.Contains(cdcls.MaDV) : true)
                                        group new { dv, clsct } by new { TenDV = DungChung.Bien.MaBV == "20001 " ? dv.TenRG : dv.TenDV, clsct.KetQua, dv.DonVi } into kq
                                        select new { YC = kq.Key.TenDV, KQ = kq.Key.KetQua, DV = kq.Key.DonVi }).ToList();
                            }
                            if (parx.Count > 0)
                            {
                                rep3.DataSource = parx;
                                rep3.BindingData();
                            }
                            if (DungChung.Bien.MaBV == "30010")
                            {
                                int mkpth = Convert.ToInt32(par3.FirstOrDefault().MaKPth.Value);
                                rep3.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                            }//yenbg1

                            if (DungChung.Bien.MaBV == "27183" && parx.FirstOrDefault().YC.ToUpper().Contains("COVID-19"))
                            {
                                rep3.txtDC.SizeF = new System.Drawing.SizeF(465.147F, 29.4061F);
                                rep3.txtSDT.Visible = true;
                                rep3.txtSDTParam.Visible = true;
                                rep3.SubBand1.Visible = false;
                                rep3.SubBand2.Visible = false;
                                rep3.SubBand3.Visible = false;
                                rep3.SubBand5.Visible = false;
                                rep3.SubBand3_01071_form_Covid.Visible = true;
                                rep3.SubBand4_01071_FORM_COVID.Visible = true;
                                rep3.SubBand5_frmCovid_27183.Visible = true;
                            }
                            rep3.CreateDocument();
                            frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                            if (PrintNow)
                                DungChung.Ham.PrintReport(rep3);
                            else
                                frm3.ShowDialog();
                        }
                        #endregion
                    }
                    break;
                #endregion
                #region "XN hóa sinh nội tiết tố":
                case "XN hóa sinh nội tiết tố":

                    frmIn frmnt = new frmIn();
                    BaoCao.Rep_PhieuHSNT repnt = new BaoCao.Rep_PhieuHSNT();
                    repnt.MaBNhan.Value = _Mabn;
                    repnt.Status.Value = DungChung.Bien.InPhoi;

                    repnt.SoPhieu.Value = idcls;
                    var parnt = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                 join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                 select new { cls.ChanDoan, cls.MaCBth, cls.NgayTH, cls.CapCuu, NgayCD = cls.NgayThang, bn.TenBNhan, bn.MaBNhan, bn.NamSinh, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, cls.MaKP, cls.Status, cls.BarCode }).ToList();
                    if (DungChung.Bien.MaBV == "27023")
                        repnt.So.Value = _so;
                    else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                    {
                        if (parnt.Count > 0)
                        {
                            int mabn = parnt.FirstOrDefault().MaBNhan;
                            var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                            if (qvv != null)
                                repnt.So.Value = qvv.SoVV;
                            else
                                repnt.So.Value = "";
                        }
                    }
                    else
                        repnt.So.Value = idcls;

                    if (parnt.Count > 0)
                    {
                        if (DungChung.Bien.MaBV == "12122")
                        {
                            if (parnt.FirstOrDefault().Status == 0)
                            {
                                repnt.xrTableCell27.Visible = false;
                                repnt.xrTableCell30.Visible = false;
                                repnt.xrTableCell33.Visible = false;
                            }
                            else
                            {
                                repnt.xrTableCell25.Visible = false;
                                repnt.xrTableCell28.Visible = false;
                                repnt.xrTableCell31.Visible = false;
                            }
                        }
                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, parnt.FirstOrDefault().MaKP == null ? 0 : parnt.FirstOrDefault().MaKP.Value, true);
                        repnt.ChanDoan.Value = (parnt.FirstOrDefault().ChanDoan != null || parnt.FirstOrDefault().ChanDoan != "") && DungChung.Bien.MaBV == "24272" ? parnt.FirstOrDefault().ChanDoan + ";" : "";
                        if (DungChung.Bien.MaBV != "24272")
                        {
                            repnt.ChanDoan.Value = arrThongTinBNKB[1];
                        }

                        repnt.Buong.Value = arrThongTinBNKB[2];
                        repnt.Giuong.Value = arrThongTinBNKB[3];
                        repnt.Khoa.Value = arrThongTinBNKB[4];

                        repnt.MaCBDT.Value = parnt.FirstOrDefault().MaCB;
                        repnt.DiaChi.Value = parnt.FirstOrDefault().DChi;
                        repnt.NamSinh.Value = parnt.FirstOrDefault().NamSinh;
                        repnt.Tuoi.Value = Convert.ToInt32(parnt.FirstOrDefault().Tuoi);
                        repnt.TenBN.Value = (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789") ? parnt.FirstOrDefault().TenBNhan.ToUpper() : parnt.FirstOrDefault().TenBNhan;
                        if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                        {
                            repnt.txtBarcode.Text = parnt.Count > 0 ? parnt.FirstOrDefault().BarCode : "";
                            repnt.lblBarcode.Visible = true;
                            repnt.txtBarcode.Visible = true;
                        }
                        if (parnt.FirstOrDefault().NgayCD != null)

                            repnt.NgayCD.Value = DungChung.Ham.NgaySangChu(parnt.FirstOrDefault().NgayCD.Value, DungChung.Bien.FormatDate);
                        else
                            repnt.NgayCD.Value = "Ngày .... tháng ..... năm .....";

                        if (parnt.FirstOrDefault().NgayTH != null)
                            repnt.NgayTH.Value = DungChung.Ham.NgaySangChu(parnt.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                        else

                            repnt.NgayTH.Value = "Ngày .... tháng ..... năm .....";
                        int gioiTinh = int.Parse(parnt.FirstOrDefault().GTinh.ToString());
                        if (gioiTinh == 1)
                        {
                            repnt.Nu.Value = "/";
                        }
                        else if (gioiTinh == 0)
                        {
                            repnt.Nam.Value = "/";
                        }
                        if (parnt.FirstOrDefault().SThe != null && parnt.FirstOrDefault().SThe.Length >= 15)
                        {
                            repnt.SThe1.Value = parnt.FirstOrDefault().SThe.Substring(0, 3);
                            repnt.SThe2.Value = parnt.FirstOrDefault().SThe.Substring(3, 2);
                            repnt.SThe3.Value = parnt.FirstOrDefault().SThe.Substring(5, 2);
                            repnt.SThe4.Value = parnt.FirstOrDefault().SThe.Substring(7, 3);
                            repnt.SThe5.Value = parnt.FirstOrDefault().SThe.Substring(10, 5);
                        }

                        bool capcuu = parnt.FirstOrDefault().CapCuu;
                        if (capcuu)
                        {
                            repnt.CapCuu.Value = "X";
                        }
                        else repnt.Thuong.Value = "X";
                        string _macb = "", _macbth = "";
                        if (!string.IsNullOrEmpty(parnt.FirstOrDefault().MaCB))
                        {
                            _macb = parnt.FirstOrDefault().MaCB;
                            var cb = _Data.CanBoes.Where(p => p.MaCB == _macb).ToList();
                            if (cb.Count > 0)
                                repnt.BSDT.Value = cb.FirstOrDefault().TenCB;
                        }
                        if (!string.IsNullOrEmpty(parnt.FirstOrDefault().MaCBth))
                        {
                            _macbth = parnt.FirstOrDefault().MaCBth;
                            var cb = _Data.CanBoes.Where(p => p.MaCB == _macbth).ToList();
                            if (cb.Count > 0)
                                repnt.TKXN.Value = cb.FirstOrDefault().TenCB;
                        }

                    }

                    repnt.CreateDocument();
                    frmnt.prcIN.PrintingSystem = repnt.PrintingSystem;
                    if (PrintNow)
                        DungChung.Ham.PrintReport(repnt);
                    else
                        frmnt.ShowDialog();
                    break;
                #endregion
                #region XN tế bào nước dịch
                case "XN tế bào nước dịch":
                    if (DungChung.Bien.MaBV == "12122")
                    {

                        InXN_NuocDich(idcls);
                    }
                    else
                    {
                        _In_XNTeBaoNuocDich(_Data, idcls, _tieunhom, _so);
                    }
                    break;
                #endregion
                #region XN vi sinh
                case "XN vi sinh":
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                    {
                        frmIn frm3 = new frmIn();
                        BaoCao.Rep_PhieuXNKhac rep3 = new BaoCao.Rep_PhieuXNKhac();
                        rep3.SoPhieu.Value = idcls;
                        rep3.colMaBN.Text = _Mabn.ToString();
                        var par3 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                    join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                    join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                    join ttbs in _Data.TTboXungs on bn.MaBNhan equals ttbs.MaBNhan
                                    //join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                    //join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                    select new { cls3.CapCuu, cls3.MaKP, NgayCD = cls3.NgayThang, NgayTH = cls3.NgayTH, cls3.MaCBth, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.NoiTru, bn.GTinh, bn.Tuoi, bn.SThe, MaCBDT = cls3.MaCB, cdcls.ChiDinh1, cdcls.KetLuan, cls3.BarCode, ttbs.SoKSinh, ttbs.NoiLV }).ToList();
                        //if (DungChung.Bien.MaBV == "27023")
                        //    rep3.So.Value = _so;
                        //else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                        //{
                        //    if (par3.Count > 0)
                        //    {
                        //        int mabn = par3.FirstOrDefault().MaBNhan;
                        //        var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                        //        if (qvv != null)
                        //            rep3.So.Value = qvv.SoVV;
                        //        else
                        //            rep3.So.Value = "";
                        //    }
                        //}
                        //else
                        rep3.So.Value = idcls;
                        int _makp3 = 0;
                        if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                        {
                            rep3.Barcode.Value = rep3.txtBarcode.Text = par3.Count > 0 ? par3.FirstOrDefault().BarCode : "";
                            rep3.sovv.Visible = false;
                            rep3.lblBarcode.Visible = true;
                            rep3.txtBarcode.Visible = true;
                        }
                        if (par3.Count > 0)
                        {
                            if (par3.FirstOrDefault().NoiTru == 1)
                            {
                                var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _Mabn).Select(p => p.SoVV).FirstOrDefault();
                                if (sovv != null)
                                    rep3.sovv.Text = "Số VV: " + sovv.ToString();
                            }
                            if (!string.IsNullOrEmpty(par3.FirstOrDefault().NoiLV))
                                rep3.NoiLV.Value = par3.FirstOrDefault().NoiLV;
                            _makp3 = par3.FirstOrDefault().MaKP == null ? 0 : par3.FirstOrDefault().MaKP.Value;
                            rep3.Macb.Value = par3.FirstOrDefault().MaCBth;
                            rep3.MaCBDT.Value = par3.FirstOrDefault().MaCBDT;
                            rep3.DiaChi.Value = par3.FirstOrDefault().DChi;
                            rep3.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                            rep3.MaBNhan.Value = par3.FirstOrDefault().MaBNhan;
                            rep3.TenBNhan.Value = par3.FirstOrDefault().TenBNhan.ToUpper();
                            rep3.txtthuong.Text = rep3.thuong.Text = (par3.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep3.txtcapcuu.Text = rep3.capcuu.Text = (par3.FirstOrDefault().CapCuu == true) ? "X" : "";
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp3, true);
                            rep3.MaICD.Value = arrThongTinBNKB[0];
                            rep3.ChanDoan.Value = arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];
                            rep3.CMT.Value = "";
                            if (par3.FirstOrDefault().SoKSinh != null)
                                rep3.CMT.Value = par3.FirstOrDefault().SoKSinh.ToString();

                            rep3.Khoa.Value = arrThongTinBNKB[4];

                            if (par3.FirstOrDefault().NgayCD != null)
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayCD.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = "Ngày .... tháng ..... năm .....";
                            if (par3.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else

                                rep3.NgayTH.Value = "Ngày .... tháng ..... năm .....";
                            int gioiTinh = int.Parse(par3.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep3.Nu.Value = "/".ToUpper();
                            }
                            else if (gioiTinh == 0)
                            {
                                rep3.Nam.Value = "/".ToUpper();
                            }

                            if (par3.FirstOrDefault().SThe != null && par3.FirstOrDefault().SThe.Length >= 15)
                            {

                                rep3.SThe.Value = par3.FirstOrDefault().SThe.ToString();
                                rep3.SThe1.Value = par3.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par3.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par3.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par3.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par3.FirstOrDefault().SThe.Substring(10, 5);
                            }
                        }
                        var parx = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                    join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                    join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                    join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                    join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                    //join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                    group new { dv, clsct } by new { TenDV = DungChung.Bien.MaBV == "20001 " ? dv.TenRG : dv.TenDV, dv.DonVi, clsct.KetQua } into kq
                                    select new { YC = kq.Key.TenDV, KQ = IsCD == 1 ? null : kq.Key.KetQua, DV = kq.Key.DonVi }).ToList();
                        if (parx.Count > 0)
                        {
                            if (parx.FirstOrDefault().YC.ToString().ToUpper().Contains("TEST NHANH KHÁNG NGUYÊN VI RÚT SAR-COV-2") || parx.FirstOrDefault().YC.ToString().ToUpper().Contains("TEST NHANH KHÁNG NGUYÊN VI RÚT SARS-COV-2") || parx.FirstOrDefault().YC.ToString().ToUpper().Contains("REALTIME PCR SARS-COV-2"))
                            {
                                rep3.xrNoiLV.Visible = true;
                                rep3.lblNoiLV.Visible = true;
                                rep3.SubBand1.Visible = false;
                                rep3.SubBand2.Visible = false;
                                rep3.SubBand3.Visible = false;
                                rep3.SubBand4.Visible = false;
                                rep3.xrLine2.Visible = false;
                                rep3.SubBand3_01071_form_Covid.Visible = true;
                                rep3.SubBand4_01071_FORM_COVID.Visible = true;
                                rep3.xrTableCell3.Text = "BÁC SỸ CHỈ ĐỊNH";
                                if (IsCD == 1)
                                {
                                    rep3.NgayTH.Value = "Ngày....tháng...năm......";
                                    rep3.colTenTKXN.Visible = false;
                                }
                            }
                            rep3.DataSource = parx;
                            rep3.BindingData();
                        }
                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        if (PrintNow)
                            DungChung.Ham.PrintReport(rep3);
                        else
                            frm3.ShowDialog();
                    }
                    else if (DungChung.Bien.MaBV == "30004")
                    {
                        string TenKP = ""; string MaMay = "";
                        List<InXNTongHop> _ltn = new List<InXNTongHop>();
                        _ltn = (from cd in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                                join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                                join tndv in _Data.TieuNhomDVs on dv.IdTieuNhom equals tndv.IdTieuNhom
                                join tn in _Data.DichVucts on clsct.MaDVct equals tn.MaDVct
                                select new InXNTongHop
                                {
                                    IdTieuNhom = tndv.IdTieuNhom,
                                    TenTN = tndv.TenTN,
                                    MaMay = cd.MaMay ?? "",
                                    IdCLS = cd.IdCLS ?? 0,
                                    IdCD = cd.IDCD,

                                }).ToList();
                        if (_ltn.Count() > 0)
                        {
                            var kps = (from cls in _Data.CLS.Where(p => p.IdCLS == idcls)
                                       join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                       select new { kp.TenKP }).ToList();
                            CLS.InPhieu._inPhieuXNTongHop_30004(_Mabn, _ltn, false, TenKP = kps.FirstOrDefault().TenKP ?? "", MaMay);
                        }
                    }
                    else if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                    {
                        frmIn frm = new frmIn();
                        Rep_PhieuXNVinhSinh_BaoNgoc rep = new Rep_PhieuXNVinhSinh_BaoNgoc();
                        rep.MaBNhan.Value = idcls;
                        rep.SoPhieu.Value = _Mabn;
                        rep.paramIdCLS.Value = idcls;
                        var par = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                   join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                   select new { cls.MaCBth, cls.NgayThang, cls.CapCuu, cls.NgayTH, bn.TenBNhan, bn.NamSinh, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, cls.MaKP }).ToList();
                        if (par.Count > 0)
                        {
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.MaBSDT.Value = par.FirstOrDefault().MaCB;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.lblTenXN.Text = "VI SINH";
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                            rep.TenBNhan.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            rep.NamSinh.Value = par.FirstOrDefault().NamSinh;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.lblGioiTinh.Text = "Nam";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.lblGioiTinh.Text = "Nữ";
                            }
                            if (par.FirstOrDefault().NgayTH != null)
                            {
                                rep.paramNgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            }
                            else { rep.paramNgayTH.Value = "Ngày ..... tháng ...... năm....."; }
                            if (par.FirstOrDefault().NgayThang != null)
                            {
                                rep.paramNgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            }
                            else { rep.paramNgayCD.Value = "Ngày ..... tháng ...... năm....."; }
                            var qcls = (from chidinh in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                                        join clsct in _Data.CLScts.Where(p => p.Status != -1) on chidinh.IDCD equals clsct.IDCD
                                        join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                                        join tndv in _Data.TieuNhomDVs on dv.IdTieuNhom equals tndv.IdTieuNhom
                                        where tndv.TenRG == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.XNViSinh
                                        select new Rep_PhieuXNHuyetHoc_01071.BaoCao { MaDVct = clsct.MaDVct, TenDVct = dvct.TenDVct, KetQua = clsct.KetQua, TSBT = dvct.TSBT, TenDV = dv.TenDV, MaTam = dv.MaTam, MaDV = dv.MaDV, DonVi = dvct.DonVi, STTDV = dv.SoTT ?? 1, STTdvct = dvct.STT }).ToList();

                            var qdv = (from cls in qcls
                                       group cls by new { cls.STTDV, cls.KetQua, cls.DonVi, cls.TSBT, cls.TenDVct, cls.MaDVct, cls.STTdvct, cls.TenDV } into kq
                                       select new Rep_PhieuXNHuyetHoc_01071.BaoCao { MaDVct = kq.Key.MaDVct, KetQua = kq.Key.KetQua, DonVi = kq.Key.DonVi, TSBT = kq.Key.TSBT, TenDVct = kq.Key.TenDVct, TenDV = kq.Key.TenDV, STTDV = -1, STTdvct = kq.Key.STTdvct, STTNhomHT = 0 }).OrderBy(p => p.STTDV).ThenBy(p => p.STTdvct).ToList();
                            rep.DataSource = qdv.OrderBy(p => p.STTDV).ThenBy(p => p.STTdvct).ToList();

                            rep.dataBinhding();
                            rep.CreateDocument();
                            frm.prcIN.PrintingSystem = rep.PrintingSystem;
                            if (PrintNow)
                                DungChung.Ham.PrintReport(rep);
                            else
                                frm.ShowDialog();
                        }
                    }
                    else
                        _In_XNViSinh(_Data, idcls, _Mabn, _so, _lIdCls, _lMaDV);
                    break;
                #endregion
                case "XN hóa sinh miễn dịch":
                    xnhoasinhmiendich(_Data, _Mabn, idcls, _so);
                    break;
                case "XN mô bệnh học":
                    //if(DungChung.Bien.MaBV == "27023")
                    //{

                    //    PhieuXNMoBenhHoc_New(_Mabn, idcls);
                    //}
                    //else
                    QLBV.FormThamSo.frm_kqcls.InPhieuXNGiaiPhauSinhThiet(idcls, _Mabn);
                    break;
                case "XN Tế bào học":
                    PhieuXNTeBaoHoc_New(_Mabn, idcls);
                    break;
                #region XN Đông cầm máu
                case "XN Đông cầm máu":
                    {

                        if ((DungChung.Bien.MaBV == "30010" || DungChung.Bien.MaBV == "30009" || DungChung.Bien.MaBV == "30012") && dongmau.TenRG.ToLower().Contains("đông cầm máu"))
                        {
                            #region 30010 || 30012
                            var bn1 = (from benhnhan in _Data.BenhNhans
                                       join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on benhnhan.MaBNhan equals cls.MaBNhan
                                       select new { cls.CapCuu, benhnhan.NNhap, benhnhan.MaBNhan, benhnhan.SThe, benhnhan.TenBNhan, benhnhan.Tuoi, benhnhan.GTinh, benhnhan.DChi, cls.NgayThang, cls.MaCB, cls.MaCBth, cls.NgayTH, cls.MaKP, cls.MaKPth }).FirstOrDefault();

                            BaoCao.rep_XNRoiLoanDongMau rep3 = new BaoCao.rep_XNRoiLoanDongMau();
                            if (bn1 != null)
                            {
                                //int noichuyen = 3;// 1- nơi khác chuyển đến (MaBV != null), 2- Y tế tư (CDNoiGT != null) , 3-Tự đến
                                string ngaythang = "";
                                int stt = 1;

                                //khoa phòng chỉ định
                                var khoa = _Data.KPhongs.Where(p => p.MaKP == bn1.MaKP).FirstOrDefault();
                                if (khoa != null && khoa.TenKP != null)
                                    rep3.celKhoa.Text = "Khoa: " + khoa.TenKP;
                                var vv = _Data.VaoViens.Where(p => p.MaBNhan == bn1.MaBNhan).ToList().FirstOrDefault();
                                //thông tin chung
                                rep3.celHoTen.Text = bn1.TenBNhan;
                                rep3.celCQCQ.Text = DungChung.Bien.TenCQCQ.ToUpper();
                                rep3.celCQ.Text = DungChung.Bien.TenCQ.ToUpper();
                                rep3.celDChi.Text = "Địa chỉ: " + bn1.DChi;
                                rep3.celSo.Text = vv != null ? vv.SoBA : "";
                                rep3.thuong.Text = bn1.CapCuu == false ? "X" : "";
                                rep3.capcuu.Text = bn1.CapCuu == true ? "X" : "";
                                if (bn1.SThe != null && bn1.SThe.Length >= 15)
                                {
                                    rep3.SThe5.Text = bn1.SThe;
                                }

                                rep3.celTuoi.Text = bn1.Tuoi == null ? "Tuổi:" : ("Tuổi: " + bn1.Tuoi.ToString());
                                if (bn1.GTinh == 1)
                                    rep3.celGTinh.Text = "Giới tính : Nam";
                                else
                                    rep3.celGTinh.Text = "Giới tính : Nữ";

                                // lấy thoongt in phòng, buồng giường
                                var qbnkb = _Data.BNKBs.Where(p => p.MaBNhan == bn1.MaBNhan && p.MaKP == bn1.MaKP).FirstOrDefault();
                                if (qbnkb != null)
                                {
                                    rep3.celChanDoan.Text = "Chẩn đoán lâm sàng: " + qbnkb.ChanDoan;
                                    rep3.celBuong.Text = "Buồng: " + qbnkb.Buong;
                                    rep3.celGiuong.Text = "Giường: " + qbnkb.Giuong;
                                }

                                // ngày tháng, bác sỹ chỉ định và ngày tháng, bác sỹ thực hiện
                                if (bn1.NgayThang != null)
                                {
                                    rep3.ngayyeucau.Text = "Ngày " + bn1.NgayThang.Value.Day + " tháng " + bn1.NgayThang.Value.Month + " năm " + bn1.NgayThang.Value.Year;
                                    ngaythang = bn1.NgayThang.Value.ToString("dd/MM/yyyy");
                                }
                                if (bn1.NgayTH != null)
                                {
                                    rep3.ngayth.Text = "Ngày " + bn1.NgayTH.Value.Day + " tháng " + bn1.NgayTH.Value.Month + " năm " + bn1.NgayTH.Value.Year;

                                }
                                if (DungChung.Bien.MaBV == "30010")
                                {
                                    int mkpth = Convert.ToInt32(bn1.MaKPth.Value);
                                    rep3.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                                }//yenbg1
                                var canbo = _Data.CanBoes.Where(p => p.MaCB == bn1.MaCB).FirstOrDefault();
                                if (canbo != null)
                                    rep3.txt_BSCD.Text = canbo.TenCB;
                                var dv1 = (from dv in _Data.DichVus.Where(p => DungChung.Bien.MaBV != "30012" ? (p.TenDV.ToLower().Contains(DungChung.Bien.MaBV == "30010" ? "thời gian prothrombin (pt: prothrombin time), (các tên khác: tq; tỷ lệ prothrombin) bằng máy tự động" : "thời gian prothrombin(pt:prothrombin time - thời gian prothrombin) (các tên khác như tq: tỷ lệ prothrombin) bằng máy tự động")
                                    || p.TenDV.ToLower().Contains(DungChung.Bien.MaBV == "30010" ? "thời gian thromboplastin một phần hoạt hóa (aptt: activated partial thromboplastin time), (tên khác: tck) bằng máy tự động" : "thời gian thromboplastin một phần hoạt hoá (aptt: activated partial thromboplastin time), (tên khác: tck) bằng máy tự động")
                                    || p.TenDV.ToLower().Contains(DungChung.Bien.MaBV == "30010" ? "thời gian thrombin (tt: thrombin time) bằng máy tự động" : "thời gian thrombin (tt: thrombin time) bằng máy tự động")
                                    || p.TenDV.ToLower().Contains(DungChung.Bien.MaBV == "30010" ? "định lượng fibrinogen (tên khác: định lượng yếu tố i), phương pháp clauss- phương pháp trực tiếp, bằng máy tự động" : "định lượng fibrinogen (tên khác: định lượng yếu tố i), phương pháp clauss- phương pháp trực tiếp, bằng máy tự động"))

                                    : (p.TenDV.ToLower().Contains("thời gian prothrombin(pt:prothrombin time - thời gian prothrombin) (các tên khác như tq: tỷ lệ prothrombin) bằng máy bán tự động")
                                    || p.TenDV.ToLower().Contains("thời gian thromboplastin một phần hoạt hoá (aptt: activated partial thromboplastin time), (tên khác: tck) bằng máy bán tự động")
                                    || p.TenDV.ToLower().Contains("thời gian thrombin (tt: thrombin time) bằng máy bán tự động")
                                    || p.TenDV.ToLower().Contains("định lượng fibrinogen (tên khác: định lượng yếu tố i), phương pháp clauss- phương pháp trực tiếp, bằng máy bán tự động")))
                                           join dvct in _Data.DichVucts on dv.MaDV equals dvct.MaDV
                                           join tn in _Data.TieuNhomDVs.Where(p => p.TenRG.ToLower().Contains("đông cầm máu")) on dv.IdTieuNhom equals tn.IdTieuNhom
                                           select new
                                           {
                                               STT = DungChung.Bien.MaBV != "30012" ? (dv.TenDV.ToLower().Contains(DungChung.Bien.MaBV == "30010" ? "thời gian prothrombin (pt: prothrombin time), (các tên khác: tq; tỷ lệ prothrombin) bằng máy tự động" : "thời gian prothrombin(pt:prothrombin time - thời gian prothrombin) (các tên khác như tq: tỷ lệ prothrombin) bằng máy tự động") ? 1 : (dv.TenDV.ToLower().Contains(DungChung.Bien.MaBV == "30010" ? "thời gian thromboplastin một phần hoạt hóa (aptt: activated partial thromboplastin time), (tên khác: tck) bằng máy tự động" : "thời gian thromboplastin một phần hoạt hoá (aptt: activated partial thromboplastin time), (tên khác: tck) bằng máy tự động") ? 2 : (dv.TenDV.ToLower().Contains(DungChung.Bien.MaBV == "30010" ? "thời gian thrombin (tt: thrombin time) bằng máy tự động" : "thời gian thrombin (tt: thrombin time) bằng máy tự động") ? 3 : 4)))
                                               : (dv.TenDV.ToLower().Contains("thời gian prothrombin(pt:prothrombin time - thời gian prothrombin) (các tên khác như tq: tỷ lệ prothrombin) bằng máy bán tự động") ? 1 : (dv.TenDV.ToLower().Contains("thời gian thromboplastin một phần hoạt hoá (aptt: activated partial thromboplastin time), (tên khác: tck) bằng máy bán tự động") ? 2 : (dv.TenDV.ToLower().Contains("thời gian thrombin (tt: thrombin time) bằng máy bán tự động") ? 3 : 4))),
                                               dvct.TenDVct,
                                               STTCT = dvct.STT,
                                               dv.TenDV,
                                               dvct.MaDVct,
                                               dvct.TSBT,
                                               dvct.DonVi,
                                               dv.MaDV
                                           }).ToList();

                                var dv2 = (from dv in _Data.DichVus
                                           join dvct in _Data.DichVucts on dv.MaDV equals dvct.MaDV
                                           //join tn in _Data.TieuNhomDVs.Where(p => p.TenRG.ToLower().Contains("đông cầm máu")) on dv.IdTieuNhom equals tn.IdTieuNhom
                                           join tn in _Data.TieuNhomDVs.Where(p => p.IdTieuNhom == 1052) on dv.IdTieuNhom equals tn.IdTieuNhom
                                           select new
                                           {
                                               STT = DungChung.Bien.MaBV != "30012" ? (dv.TenDV.ToLower().Contains(DungChung.Bien.MaBV == "30010" || DungChung.Bien.MaBV == "30009" ? "thời gian prothrombin (pt: prothrombin time), (các tên khác: tq; tỷ lệ prothrombin) bằng máy tự động" : "thời gian prothrombin(pt:prothrombin time - thời gian prothrombin) (các tên khác như tq: tỷ lệ prothrombin) bằng máy tự động") ? 1 : (dv.TenDV.ToLower().Contains(DungChung.Bien.MaBV == "30010" || DungChung.Bien.MaBV == "30009" ? "thời gian thromboplastin một phần hoạt hóa (aptt: activated partial thromboplastin time), (tên khác: tck) bằng máy tự động" : "thời gian thromboplastin một phần hoạt hoá (aptt: activated partial thromboplastin time), (tên khác: tck) bằng máy tự động") ? 2 : (dv.TenDV.ToLower().Contains(DungChung.Bien.MaBV == "30010" || DungChung.Bien.MaBV == "30009" ? "thời gian thrombin (tt: thrombin time) bằng máy tự động" : "thời gian thrombin (tt: thrombin time) bằng máy tự động") ? 3 : 4)))
                                               : (dv.TenDV.ToLower().Contains("thời gian prothrombin(pt:prothrombin time - thời gian prothrombin) (các tên khác như tq: tỷ lệ prothrombin) bằng máy bán tự động") ? 1 : (dv.TenDV.ToLower().Contains("thời gian thromboplastin một phần hoạt hoá (aptt: activated partial thromboplastin time), (tên khác: tck) bằng máy bán tự động") ? 2 : (dv.TenDV.ToLower().Contains("thời gian thrombin (tt: thrombin time) bằng máy bán tự động") ? 3 : 4))),
                                               dvct.TenDVct,
                                               STTCT = dvct.STT,
                                               dv.TenDV,
                                               dvct.MaDVct,
                                               dvct.TSBT,
                                               dvct.DonVi,
                                               dv.MaDV
                                           }).ToList();

                                // kết quả xét nghiệm
                                List<ds> _ds = new List<ds>();
                                var kqcls = (from cd in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                                             join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                             join dvct in _Data.DichVucts.Where(p => p.Status == 1) on clsct.MaDVct equals dvct.MaDVct
                                             join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                                             join tn in _Data.TieuNhomDVs.Where(p => p.TenRG.ToLower().Contains("đông cầm máu")) on dv.IdTieuNhom equals tn.IdTieuNhom
                                             select new { cd.MaDV, dvct.TenDVct, STTCT = dvct.STT, clsct.KetQua, dv.TenDV, dvct.MaDVct, dvct.TSBT, dvct.DonVi }).ToList();
                                if (DungChung.Bien.MaBV == "30009")
                                {
                                    foreach (var item in dv2)
                                    {
                                        ds moi = new ds();
                                        moi.STT = item.STT;
                                        moi.TenDV = item.TenDV;
                                        moi.STTDV = item.STTCT ?? 0;
                                        moi.DonVi = item.DonVi;
                                        moi.TSBT = item.TSBT;

                                        foreach (var item2 in kqcls)
                                        {
                                            if (item.MaDVct == item2.MaDVct && item.MaDV == item2.MaDV)
                                                moi.KetQua = item2.KetQua;
                                        }
                                        _ds.Add(moi);
                                    }
                                }
                                else
                                {
                                    foreach (var item in dv1)
                                    {
                                        ds moi = new ds();
                                        moi.STT = item.STT;
                                        moi.TenDV = item.TenDV;
                                        moi.STTDV = item.STTCT ?? 0;
                                        moi.DonVi = item.DonVi;
                                        moi.TSBT = item.TSBT;

                                        foreach (var item2 in kqcls)
                                        {
                                            if (item.MaDVct == item2.MaDVct && item.MaDV == item2.MaDV)
                                                moi.KetQua = item2.KetQua;
                                        }
                                        _ds.Add(moi);
                                    }
                                }

                                _ds = _ds.OrderBy(p => p.STT).ThenBy(p => p.STTDV).ToList();
                                rep3.dv1.Text = _ds.Count > 0 ? _ds.Skip(0).FirstOrDefault().DonVi : "";
                                rep3.dv2.Text = _ds.Count > 1 ? _ds.Skip(1).FirstOrDefault().DonVi : "";
                                rep3.dv3.Text = _ds.Count > 2 ? _ds.Skip(2).FirstOrDefault().DonVi : "";
                                rep3.dv4.Text = _ds.Count > 3 ? _ds.Skip(3).FirstOrDefault().DonVi : "";
                                rep3.dv5.Text = _ds.Count > 4 ? _ds.Skip(4).FirstOrDefault().DonVi : "";

                                rep3.dv6.Text = _ds.Count > 5 ? _ds.Skip(5).FirstOrDefault().DonVi : "";
                                rep3.dv7.Text = _ds.Count > 6 ? _ds.Skip(6).FirstOrDefault().DonVi : "";
                                rep3.dv8.Text = _ds.Count > 7 ? _ds.Skip(7).FirstOrDefault().DonVi : "";

                                rep3.cs1.Text = _ds.Count > 0 ? _ds.Skip(0).FirstOrDefault().TSBT : "";
                                rep3.cs2.Text = _ds.Count > 1 ? _ds.Skip(1).FirstOrDefault().TSBT : "";
                                rep3.cs3.Text = _ds.Count > 2 ? _ds.Skip(2).FirstOrDefault().TSBT : "";
                                rep3.cs4.Text = _ds.Count > 3 ? _ds.Skip(3).FirstOrDefault().TSBT : "";
                                rep3.cs5.Text = _ds.Count > 4 ? _ds.Skip(4).FirstOrDefault().TSBT : "";
                                rep3.cs6.Text = _ds.Count > 5 ? _ds.Skip(5).FirstOrDefault().TSBT : "";
                                rep3.cs7.Text = _ds.Count > 6 ? _ds.Skip(6).FirstOrDefault().TSBT : "";
                                rep3.cs8.Text = _ds.Count > 7 ? _ds.Skip(7).FirstOrDefault().TSBT : "";

                                rep3.kq1.Text = _ds.Count > 0 ? _ds.Skip(0).FirstOrDefault().KetQua : "";
                                rep3.kq2.Text = _ds.Count > 1 ? _ds.Skip(1).FirstOrDefault().KetQua : "";
                                rep3.kq3.Text = _ds.Count > 2 ? _ds.Skip(2).FirstOrDefault().KetQua : "";
                                rep3.kq4.Text = _ds.Count > 3 ? _ds.Skip(3).FirstOrDefault().KetQua : "";
                                rep3.kq5.Text = _ds.Count > 4 ? _ds.Skip(4).FirstOrDefault().KetQua : "";
                                rep3.kq6.Text = _ds.Count > 5 ? _ds.Skip(5).FirstOrDefault().KetQua : "";
                                rep3.kq7.Text = _ds.Count > 6 ? _ds.Skip(6).FirstOrDefault().KetQua : "";
                                rep3.kq8.Text = _ds.Count > 7 ? _ds.Skip(7).FirstOrDefault().KetQua : "";
                                rep3.CreateDocument();
                            }
                            frmIn inphieu = new frmIn();
                            inphieu.prcIN.PrintingSystem = rep3.PrintingSystem;
                            if (PrintNow)
                                DungChung.Ham.PrintReport(rep3);
                            else
                                inphieu.ShowDialog();
                            #endregion
                        }
                        #region 30004
                        else if (DungChung.Bien.MaBV == "30004")
                        {
                            string TenKP = ""; string MaMay = "";
                            List<InXNTongHop> _ltn = new List<InXNTongHop>();
                            _ltn = (from cd in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                                    join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                    join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                                    join tndv in _Data.TieuNhomDVs on dv.IdTieuNhom equals tndv.IdTieuNhom
                                    join tn in _Data.DichVucts on clsct.MaDVct equals tn.MaDVct
                                    select new InXNTongHop
                                    {
                                        IdTieuNhom = tndv.IdTieuNhom,
                                        TenTN = tndv.TenTN,
                                        MaMay = cd.MaMay ?? "",
                                        IdCLS = cd.IdCLS ?? 0,
                                        IdCD = cd.IDCD,

                                    }).ToList();
                            if (_ltn.Count() > 0)
                            {
                                var kps = (from cls in _Data.CLS.Where(p => p.IdCLS == idcls)
                                           join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                           select new { kp.TenKP }).ToList();
                                CLS.InPhieu._inPhieuXNTongHop_30004(_Mabn, _ltn, false, TenKP = kps.FirstOrDefault().TenKP ?? "", MaMay);
                            }
                        }
                        #endregion
                        #region 30003
                        else if (DungChung.Bien.MaBV == "30003" && dongmau.TenRG.ToLower().Contains("đông cầm máu"))
                        {
                            var bn1 = (from benhnhan in _Data.BenhNhans
                                       join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on benhnhan.MaBNhan equals cls.MaBNhan
                                       select new { cls.CapCuu, benhnhan.NNhap, benhnhan.MaBNhan, benhnhan.SThe, benhnhan.TenBNhan, benhnhan.Tuoi, benhnhan.GTinh, benhnhan.DChi, cls.NgayThang, cls.MaCB, cls.MaCBth, cls.NgayTH, cls.MaKP, cls.GhiChu }).FirstOrDefault();

                            BaoCao.rep_XNRoiLoanDongMau_30003 rep3 = new BaoCao.rep_XNRoiLoanDongMau_30003();
                            if (bn1 != null)
                            {
                                //int noichuyen = 3;// 1- nơi khác chuyển đến (MaBV != null), 2- Y tế tư (CDNoiGT != null) , 3-Tự đến
                                string ngaythang = "";
                                int stt = 1;

                                //khoa phòng chỉ định
                                var khoa = _Data.KPhongs.Where(p => p.MaKP == bn1.MaKP).FirstOrDefault();
                                if (khoa != null && khoa.TenKP != null)
                                    rep3.celKhoa.Text = "Khoa: " + khoa.TenKP;
                                var vv = _Data.VaoViens.Where(p => p.MaBNhan == bn1.MaBNhan).ToList().FirstOrDefault();
                                //thông tin chung
                                rep3.celHoTen.Text = bn1.TenBNhan;
                                rep3.celCQCQ.Text = DungChung.Bien.TenCQCQ.ToUpper();
                                rep3.celCQ.Text = DungChung.Bien.TenCQ.ToUpper();
                                rep3.celDChi.Text = "Địa chỉ: " + bn1.DChi;
                                rep3.celSo.Text = vv != null ? vv.SoBA : "";
                                rep3.thuong.Text = bn1.CapCuu == false ? "X" : "";
                                rep3.capcuu.Text = bn1.CapCuu == true ? "X" : "";
                                if (bn1.SThe != null && bn1.SThe.Length >= 15)
                                {
                                    rep3.SThe5.Text = bn1.SThe;
                                }

                                rep3.celTuoi.Text = bn1.Tuoi == null ? "Tuổi:" : ("Tuổi: " + bn1.Tuoi.ToString());
                                if (bn1.GTinh == 1)
                                {
                                    rep3.lblNam.Text = "";
                                    rep3.lblNu.Text = "\\";
                                }
                                //rep3.celGTinh.Text = "Giới tính : Nam";

                                else
                                {
                                    rep3.lblNam.Text = "\\";
                                    rep3.lblNu.Text = "";
                                }
                                //rep3.celGTinh.Text = "Giới tính : Nữ";

                                // lấy thoongt in phòng, buồng giường
                                var qbnkb = _Data.BNKBs.Where(p => p.MaBNhan == bn1.MaBNhan && p.MaKP == bn1.MaKP).FirstOrDefault();
                                if (qbnkb != null)
                                {
                                    rep3.celChanDoan.Text = "Chẩn đoán lâm sàng: " + qbnkb.ChanDoan;
                                    rep3.celBuong.Text = "Buồng: " + qbnkb.Buong;
                                    rep3.celGiuong.Text = "Giường: " + qbnkb.Giuong;
                                }

                                // ngày tháng, bác sỹ chỉ định và ngày tháng, bác sỹ thực hiện
                                if (bn1.NgayThang != null)
                                {
                                    rep3.ngayyeucau.Text = "Ngày " + bn1.NgayThang.Value.Day + " tháng " + bn1.NgayThang.Value.Month + " năm " + bn1.NgayThang.Value.Year;
                                    ngaythang = bn1.NgayThang.Value.ToString("dd/MM/yyyy");
                                }
                                if (bn1.NgayTH != null)
                                {
                                    rep3.ngayth.Text = "Ngày " + bn1.NgayTH.Value.Day + " tháng " + bn1.NgayTH.Value.Month + " năm " + bn1.NgayTH.Value.Year;

                                }
                                rep3.celNhanXet.Text = bn1.GhiChu;
                                var canbo = _Data.CanBoes.Where(p => p.MaCB == bn1.MaCB).FirstOrDefault();
                                if (canbo != null)
                                    rep3.txt_BSCD.Text = canbo.TenCB;

                                // kết quả xét nghiệm
                                var qdvct = (from tn in _Data.TieuNhomDVs.Where(p => p.TenRG.ToLower().Contains("đông cầm máu"))
                                             join dv in _Data.DichVus on tn.IdTieuNhom equals dv.IdTieuNhom
                                             join dvct in _Data.DichVucts.Where(p => p.Status == 1) on dv.MaDV equals dvct.MaDV
                                             select new { STT = dv.SoTT, STTCT = dvct.STT_R, dv.TenDV, dv.MaDV, dvct.MaDVct, dvct.TSBT, dvct.DonVi }).ToList();

                                var qdv = (from dv in qdvct group dv by new { dv.MaDV } into kq select new { MaDV = kq.Key.MaDV, count = kq.Count() }).ToList();

                                var qdvctCount = (from dvct in qdvct join dvu in qdv on dvct.MaDV equals dvu.MaDV select new { dvct.STT, STTCT = dvct.STTCT, dvct.TenDV, dvct.MaDV, dvct.MaDVct, dvct.TSBT, dvct.DonVi, dvu.count }).ToList();

                                var kqcls = (from cd in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                                             join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                             join dvct in _Data.DichVucts.Where(p => p.Status == 1) on clsct.MaDVct equals dvct.MaDVct
                                             join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                                             join tn in _Data.TieuNhomDVs.Where(p => p.TenRG.ToLower().Contains("đông cầm máu")) on dv.IdTieuNhom equals tn.IdTieuNhom
                                             select new { cd.MaDV, dvct.TenDVct, STTCT = dvct.STT, STT = dv.SoTT, clsct.KetQua, dv.TenDV, dvct.MaDVct, dvct.TSBT, dvct.DonVi }).OrderBy(p => p.STT).ThenBy(p => p.STTCT).ToList();
                                List<ds> _ds = new List<ds>();
                                foreach (var item in qdvctCount)
                                {
                                    ds moi = new ds();
                                    moi.STT = item.STT ?? 0;
                                    moi.TenDV = item.TenDV;
                                    moi.STTDV = 0;//item.STTCT ?? 0;
                                    moi.DonVi = item.DonVi;
                                    moi.TSBT = item.TSBT;
                                    moi.count = item.count;
                                    foreach (var item2 in kqcls)
                                    {
                                        if (item.MaDVct == item2.MaDVct)
                                        {
                                            moi.KetQua = item2.KetQua;
                                            moi.check = "X";
                                        }
                                    }
                                    _ds.Add(moi);
                                }
                                rep3.DataSource = _ds;
                                rep3.BindingData();

                                rep3.CreateDocument();
                                frmIn inphieu = new frmIn();
                                inphieu.prcIN.PrintingSystem = rep3.PrintingSystem;
                                if (PrintNow)
                                    DungChung.Ham.PrintReport(rep3);
                                else
                                    inphieu.ShowDialog();
                            }
                            else
                                MessageBox.Show("Không có dữ liệu");
                        }
                        #endregion

                        else
                            _InPhieuXNCamMau_01071(_Mabn, idcls, _tieunhom, _lIdCls, _lMaDV);
                    }
                    break;
                #endregion
                case "XN Nồng độ cồn":
                    frmIn frm32 = new frmIn();
                    BaoCao.rep_PhieuYCXNNongDoConTrongMau rep32 = new BaoCao.rep_PhieuYCXNNongDoConTrongMau();
                    var par32 = (from cls3 in _Data.CLS.Where(p => p.IdCLS == idcls)
                                 join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                 join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                 select new { cls3.MaCB, cls3.TrangThaiBP, cls3.TrangThaiBN, cls3.MaCBLayMau, cls3.MaCBth, cdcls.MaMay, cls3.NgayTH }).ToList();
                    var _lcb = _Data.CanBoes.ToList();
                    var ttbn = _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn).FirstOrDefault();
                    rep32.tencqcq.Value = DungChung.Bien.TenCQCQ.ToUpper();
                    rep32.tencq.Value = DungChung.Bien.TenCQ.ToUpper();
                    if (par32.Count > 0)
                    {
                        if (ttbn != null)
                            rep32.HoTen.Value = ttbn.TenBNhan;
                        rep32.TinhTrangMau.Value = par32.FirstOrDefault().TrangThaiBP;
                        rep32.TinhTrangBN.Value = par32.FirstOrDefault().TrangThaiBN;
                        if (par32.FirstOrDefault().MaCB != null)
                        {
                            string macb = par32.FirstOrDefault().MaCB;
                            var tencb1 = _lcb.Where(p => p.MaCB == macb).FirstOrDefault();
                            if (tencb1 != null)
                                rep32.BSCD.Value = tencb1.TenCB.ToString();
                        }
                        if (par32.FirstOrDefault().MaCBLayMau != null)
                        {
                            string macb = par32.FirstOrDefault().MaCBLayMau;
                            var tencb1 = _lcb.Where(p => p.MaCB == macb).FirstOrDefault();
                            if (tencb1 != null)
                                rep32.NguoiLayMau.Value = tencb1.TenCB.ToString();
                        }
                        if (par32.FirstOrDefault().MaCBth != null)
                        {
                            string macb = par32.FirstOrDefault().MaCBth;
                            var tencb1 = _lcb.Where(p => p.MaCB == macb).FirstOrDefault();
                            if (tencb1 != null)
                                rep32.BSTH.Value = tencb1.TenCB.ToString();
                        }
                        if (par32.FirstOrDefault().NgayTH != null)
                            rep32.NgayGio.Value = par32.FirstOrDefault().NgayTH.Value.Hour + "Giờ, ngày " + par32.FirstOrDefault().NgayTH.Value.Day + " tháng " + par32.FirstOrDefault().NgayTH.Value.Month + " năm " + par32.FirstOrDefault().NgayTH.Value.Year;
                        var _lkq = (from cd in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                                    join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                    join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                    select new { cd.MaMay, clsct.KetQua, dvct.TenDVct, dvct.TSBT, dvct.DonVi }).ToList();
                        rep32.DataSource = _lkq;
                        rep32.BindingData();
                        rep32.CreateDocument();
                        frm32.prcIN.PrintingSystem = rep32.PrintingSystem;
                        if (PrintNow)
                            DungChung.Ham.PrintReport(rep32);
                        else
                            frm32.ShowDialog();
                    }
                    break;
                #region XN ung thư
                case "XN Ung thư":
                    if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                    {
                        InPhieuXNHuyetHoc_01070(_Mabn, idcls, _tieunhom);
                    }
                    else
                    {
                        frmIn frm311 = new frmIn();
                        BaoCao.Rep_PhieuXNKhac rep311 = new BaoCao.Rep_PhieuXNKhac();
                        rep311.SoPhieu.Value = idcls;
                        rep311.colMaBN.Text = _Mabn.ToString(); ;
                        var par311 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                      join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                      join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                      join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                      join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                      select new { cls3.CapCuu, cls3.MaKP, NgayCD = cls3.NgayThang, NgayTH = cls3.NgayTH, cls3.MaCBth, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.NoiTru, bn.GTinh, bn.Tuoi, bn.SThe, MaCBDT = cls3.MaCB, cdcls.ChiDinh1, cdcls.KetLuan, cdcls.Status, cls3.BarCode }).ToList();
                        if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                        {
                            rep311.txtBarcode.Text = par311.Count > 0 ? par311.FirstOrDefault().BarCode : "";
                            rep311.lblBarcode.Visible = true;
                            rep311.txtBarcode.Visible = true;
                            rep311.sovv.Visible = false;
                        }
                        if (DungChung.Bien.MaBV == "27023")
                            rep311.So.Value = _so;
                        else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                        {
                            if (par311.Count > 0)
                            {
                                int mabn = par311.FirstOrDefault().MaBNhan;
                                var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                if (qvv != null)
                                    rep311.So.Value = qvv.SoVV;
                                else
                                    rep311.So.Value = "";

                            }
                        }
                        else
                            rep311.So.Value = idcls;
                        int _makp31 = 0;

                        if (par311.Count > 0)
                        {
                            if (DungChung.Bien.MaBV == "12122")
                            {
                                if (par311.FirstOrDefault().Status == 0)
                                {
                                    rep311.xrTableCell4.Visible = false;
                                    rep311.xrTableCell8.Visible = false;
                                    rep311.colTenTKXN.Visible = false;
                                }
                                else
                                {
                                    rep311.xrTableCell7.Visible = false;
                                    rep311.xrTableCell3.Visible = false;
                                    rep311.colTenBSDT.Visible = false;
                                }
                            }
                            if (par311.FirstOrDefault().NoiTru == 1)
                            {
                                var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _Mabn).Select(p => p.SoVV).FirstOrDefault();
                                if (sovv != null)
                                    rep311.sovv.Text = "Số VV: " + sovv.ToString();
                            }
                            _makp31 = par311.FirstOrDefault().MaKP == null ? 0 : par311.FirstOrDefault().MaKP.Value;
                            rep311.Macb.Value = par311.FirstOrDefault().MaCBth;
                            rep311.MaCBDT.Value = par311.FirstOrDefault().MaCBDT;
                            rep311.DiaChi.Value = par311.FirstOrDefault().DChi;
                            rep311.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                            rep311.MaBNhan.Value = par311.FirstOrDefault().MaBNhan;
                            rep311.TenBNhan.Value = par311.FirstOrDefault().TenBNhan.ToUpper();
                            rep311.thuong.Text = (par311.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep311.capcuu.Text = (par311.FirstOrDefault().CapCuu == true) ? "X" : "";
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp31, true);
                            rep311.MaICD.Value = "Mã ICD: " + arrThongTinBNKB[0];
                            rep311.ChanDoan.Value = DungChung.Bien.MaBV != "24272" ? arrThongTinBNKB[1] : "";
                            rep311.Buong.Value = arrThongTinBNKB[2];
                            rep311.Giuong.Value = arrThongTinBNKB[3];

                            rep311.Khoa.Value = arrThongTinBNKB[4];

                            if (par311.FirstOrDefault().NgayCD != null)
                                rep311.NgayCD.Value = DungChung.Ham.NgaySangChu(par311.FirstOrDefault().NgayCD.Value, DungChung.Bien.FormatDate);
                            else
                                rep311.NgayCD.Value = "Ngày .... tháng ..... năm .....";
                            if (par311.FirstOrDefault().NgayTH != null)
                                rep311.NgayTH.Value = DungChung.Ham.NgaySangChu(par311.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else

                                rep311.NgayTH.Value = "Ngày .... tháng ..... năm .....";
                            int gioiTinh = int.Parse(par311.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep311.Nu.Value = "/".ToUpper();
                            }
                            else if (gioiTinh == 0)
                            {
                                rep311.Nam.Value = "/".ToUpper();
                            }

                            if (par311.FirstOrDefault().SThe != null && par311.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep311.SThe1.Value = par311.FirstOrDefault().SThe.Substring(0, 3);
                                rep311.SThe2.Value = par311.FirstOrDefault().SThe.Substring(3, 2);
                                rep311.SThe3.Value = par311.FirstOrDefault().SThe.Substring(5, 2);
                                rep311.SThe4.Value = par311.FirstOrDefault().SThe.Substring(7, 3);
                                rep311.SThe5.Value = par311.FirstOrDefault().SThe.Substring(10, 5);
                            }
                        }
                        var parx1 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                     join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                     join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                     join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                     join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                     //join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                     group new { dv, clsct } by new { TenDV = DungChung.Bien.MaBV == "20001 " ? dv.TenRG : dv.TenDV, clsct.KetQua } into kq
                                     select new { YC = kq.Key.TenDV, KQ = kq.Key.KetQua }).ToList();
                        if (parx1.Count > 0)
                        {
                            rep311.DataSource = parx1;
                            rep311.BindingData();
                        }
                        rep311.CreateDocument();
                        frm311.prcIN.PrintingSystem = rep311.PrintingSystem;
                        if (PrintNow)
                            DungChung.Ham.PrintReport(rep311);
                        else
                            frm311.ShowDialog();
                    }
                    break;
                #endregion
                case "XN miễn dịch":
                    if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                    {

                        InPhieuXNHuyetHoc_01070(_Mabn, idcls, _tieunhom);
                    }
                    else if (DungChung.Bien.MaBV == "30004")
                    {
                        string TenKP = ""; string MaMay = "";
                        List<InXNTongHop> _ltn = new List<InXNTongHop>();
                        _ltn = (from cd in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                                join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                                join tndv in _Data.TieuNhomDVs on dv.IdTieuNhom equals tndv.IdTieuNhom
                                join tn in _Data.DichVucts on clsct.MaDVct equals tn.MaDVct
                                select new InXNTongHop
                                {
                                    IdTieuNhom = tndv.IdTieuNhom,
                                    TenTN = tndv.TenTN,
                                    MaMay = cd.MaMay ?? "",
                                    IdCLS = cd.IdCLS ?? 0,
                                    IdCD = cd.IDCD,

                                }).ToList();
                        if (_ltn.Count() > 0)
                        {
                            var kps = (from cls in _Data.CLS.Where(p => p.IdCLS == idcls)
                                       join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                       select new { kp.TenKP }).ToList();
                            CLS.InPhieu._inPhieuXNTongHop_30004(_Mabn, _ltn, false, TenKP = kps.FirstOrDefault().TenKP ?? "", MaMay);
                        }
                    }
                    else
                    {

                        InPhieuXetNghiemMienDich(_Data, _Mabn, idcls, _tieunhom);
                    }
                    break;
                case "Trắc nghiệm tâm lý":
                    if (DungChung.Bien.MaBV == "34019")
                    {


                        var par2 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                    join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                    join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                    select new { cls.MaKP, cls.NgayThang, cls.NgayTH, cls.CapCuu, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, MaCBDT = cls.MaCB, cls.MaCBth, bn.NamSinh, bn.ThangSinh, bn.NgaySinh, bn.DTuong, bn.HanBHDen, bn.HanBHTu, kp.TenKP, bn.IDPerson }).ToList();
                        if (par2 != null && par2.Count > 0)
                        {
                            DateTime ngaycd = Convert.ToDateTime(par2.FirstOrDefault().NgayThang);
                            var par41 = (from cls in _Data.CLS.Where(p => p.NgayThang == ngaycd)
                                         join chidinh in _Data.ChiDinhs on cls.IdCLS equals chidinh.IdCLS
                                         join dichvu in _Data.DichVus on chidinh.MaDV equals dichvu.MaDV
                                         join tn in _Data.TieuNhomDVs.Where(p => p.TenRG.Contains(_tieunhom)) on dichvu.IdTieuNhom equals tn.IdTieuNhom
                                         join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                                         join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                         select new { clsct.KetQua, clsct.STTHT, dvct.TenDVct, dichvu.TenDV, clsct.MaDVct, IsTrongBH = (chidinh.TrongBH == 1) }).ToList();

                            for (int i = 0; i < 2; i++)
                            {
                                var qhh_h = par41.Where(o => o.IsTrongBH == (i == 0)).ToList();
                                if (qhh_h.Count > 0)
                                {

                                    List<KQTNTL> kqtntl = new List<KQTNTL>();

                                    foreach (var item in qhh_h)
                                    {
                                        KQTNTL kqTN = new KQTNTL();
                                        kqTN.KetQua = item.KetQua;
                                        kqTN.TenDVct = item.TenDVct;
                                        kqTN.MaDVct = item.MaDVct;
                                        kqTN.TenDV = item.TenDV;
                                        int kq = 0;
                                        if (int.TryParse(item.KetQua, out kq))
                                        {
                                            var kqct = (from k in _Data.KQcts.Where(o => o.MaDVct == item.MaDVct && !(o.Tu == null && o.Den == null))
                                                        select k).ToList();
                                            if (kqct != null && kqct.Count > 0)
                                            {
                                                foreach (var ct in kqct)
                                                {
                                                    if (ct.Tu != null && ct.Den != null && ct.Tu <= kq && ct.Den >= kq)
                                                    {
                                                        kqTN.KetLuan = ct.KetLuan;
                                                        break;
                                                    }
                                                    else if (ct.Tu != null && ct.Den == null && ct.Tu <= kq)
                                                    {
                                                        kqTN.KetLuan = ct.KetLuan;
                                                        break;
                                                    }
                                                    else if (ct.Tu == null && ct.Den != null && ct.Den >= kq)
                                                    {
                                                        kqTN.KetLuan = ct.KetLuan;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                        kqtntl.Add(kqTN);
                                    }

                                    frmIn frmIn = new QLBV.frmIn();
                                    repPhieuKetQua_TNTamLy_34019_A4 rep = new repPhieuKetQua_TNTamLy_34019_A4();//4
                                    rep.xrPictureBox1.Image = QLBV.DungChung.Ham.GetLogo();
                                    //rep.SoPhieu.Value = par2.FirstOrDefault().SoPhieu;
                                    rep.MaDieuTri.Value = _Mabn;
                                    rep.MaBN.Value = par2.FirstOrDefault().IDPerson;
                                    rep.TenBV.Value = DungChung.Bien.TenCQ.ToUpper();
                                    var hthong = _Data.HTHONGs.FirstOrDefault(o => o.MaBV == DungChung.Bien.MaBV);
                                    if (hthong != null)
                                    {
                                        rep.DiaChiBV.Value = hthong.DiaChi;
                                    }
                                    rep.TenPhieu.Value = "PHIẾU KẾT QUẢ TRẮC NGHIỆM TÂM LÝ";
                                    //rep.KPhong.Value = par2.FirstOrDefault().TenKPth;
                                    rep.CapCuu.Value = (par2.FirstOrDefault().CapCuu == true) ? "X" : "";
                                    rep.TenBNhan.Value = par2.FirstOrDefault().TenBNhan.ToUpper();
                                    rep.NgaySinh.Value = DungChung.Ham.GhepNgaySinh("/", par2.FirstOrDefault().NamSinh, par2.FirstOrDefault().ThangSinh, par2.FirstOrDefault().NgaySinh);
                                    rep.GioiTinh.Value = par2.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                                    rep.DiaChi.Value = par2.FirstOrDefault().DChi;
                                    rep.NgayGio.Value = DungChung.Ham.NgaySangChu(DateTime.Now);
                                    //if (!string.IsNullOrWhiteSpace(par2.FirstOrDefault().DTuong) && par2.FirstOrDefault().DTuong == "BHYT")
                                    //{
                                    //    rep.BHYT.Value = "X";
                                    //}
                                    //else
                                    //    rep.ThuPhi.Value = "X";
                                    if (i == 0)
                                        rep.BHYT.Value = "X";
                                    else
                                        rep.ThuPhi.Value = "X";
                                    rep.CapCuu.Value = (par2.FirstOrDefault().CapCuu == true) ? "X" : "";
                                    if (i == 0)
                                    {
                                        if (!string.IsNullOrWhiteSpace(par2.FirstOrDefault().SThe))
                                        {
                                            rep.HanThe.Value = par2.FirstOrDefault().HanBHDen != null ? par2.FirstOrDefault().HanBHDen.Value.ToString("dd/MM/yyyy") : "";
                                            rep.HanTu.Value = par2.FirstOrDefault().HanBHTu != null ? par2.FirstOrDefault().HanBHTu.Value.ToString("dd/MM/yyyy") : "";
                                            rep.SThe1.Value = par2.FirstOrDefault().SThe.Substring(0, 2);
                                            rep.SThe2.Value = par2.FirstOrDefault().SThe.Substring(2, 1);
                                            rep.SThe3.Value = par2.FirstOrDefault().SThe.Substring(3, 2);
                                            rep.SThe4.Value = par2.FirstOrDefault().SThe.Substring(5, 2);
                                            rep.SThe5.Value = par2.FirstOrDefault().SThe.Substring(7, 3);
                                            rep.SThe6.Value = par2.FirstOrDefault().SThe.Substring(10, 5);
                                        }
                                    }
                                    rep.paramTenKP.Value = par2.FirstOrDefault().TenKP;
                                    var maKp = (par2.FirstOrDefault().MaKP == null ? 0 : par2.FirstOrDefault().MaKP.Value);
                                    var kbcd = (from bnkb in _Data.BNKBs.Where(p => p.MaBNhan == _Mabn && p.MaKP == maKp)
                                                select bnkb).ToList();
                                    if (kbcd != null && kbcd.Count > 0)
                                    {
                                        rep.BenhChinh.Value = kbcd.FirstOrDefault().ChanDoan + " (" + kbcd.FirstOrDefault().MaICD + ")";
                                        rep.BenhPhu.Value = kbcd.FirstOrDefault().BenhKhac;
                                        if (!string.IsNullOrWhiteSpace(kbcd.FirstOrDefault().Buong))
                                        {
                                            var spBuong = kbcd.FirstOrDefault().Buong.Split(';');
                                            if (spBuong != null && spBuong.Count() > 0)
                                            {
                                                rep.paramBuong.Value = spBuong[spBuong.Count() - 1];
                                            }
                                        }
                                        if (!string.IsNullOrWhiteSpace(kbcd.FirstOrDefault().Giuong))
                                        {
                                            var spGiuong = kbcd.FirstOrDefault().Giuong.Split(';');
                                            if (spGiuong != null && spGiuong.Count() > 0)
                                            {
                                                rep.paramGiuong.Value = spGiuong[spGiuong.Count() - 1];
                                            }
                                        }
                                    }
                                    //rep.YCKT.Value = par2.FirstOrDefault().TenDV;
                                    rep.DataSource = kqtntl.ToList();
                                    rep.BindingData();
                                    rep.CreateDocument();
                                    frmIn.prcIN.PrintingSystem = rep.PrintingSystem;
                                    if (PrintNow)
                                        DungChung.Ham.PrintReport(rep);
                                    else
                                        frmIn.ShowDialog();
                                }
                            }
                        }
                    }
                    break;
                case "XN tế bào dịch":

                    frmIn frmin = new frmIn();
                    BaoCao.repPhieuXNHuyetHoc rep12 = new BaoCao.repPhieuXNHuyetHoc(_lIdCls, _lMaDV, null);
                    // Kiểu phiếu xét nghiệm Tế bào dịch dùng chung với Phiếu huyết học                      
                    int _makp12 = 0;
                    rep12.MaBNhan.Value = _Mabn;
                    rep12.SoPhieu.Value = idcls;
                    var par12 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                 join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                 select new { cls.MaKP, cls.MaCBth, cls.NgayTH, cls.BarCode, cls.CapCuu, cls.NgayThang, bn.TenBNhan, bn.NamSinh, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, cls.MaKPth }).ToList();
                    if (DungChung.Bien.MaBV == "27023")
                        rep12.So.Value = _so;
                    else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                    {
                        if (par12.Count > 0)
                        {
                            int mabn = par12.FirstOrDefault().MaBNhan;
                            var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                            if (qvv != null)
                                rep12.So.Value = qvv.SoVV;
                            else
                                rep12.So.Value = "";
                        }
                    }
                    else
                        rep12.So.Value = idcls;

                    if (par12.Count > 0)
                    {
                        rep12.txtbarcode.Text = par12.FirstOrDefault().BarCode == null ? "" : ("Barcode: " + par12.FirstOrDefault().BarCode.ToString());
                        _makp12 = par12.FirstOrDefault().MaKP == null ? 0 : par12.FirstOrDefault().MaKP.Value;
                        rep12.MaCBDT.Value = par12.FirstOrDefault().MaCB;
                        rep12.Macb.Value = par12.FirstOrDefault().MaCBth;
                        rep12.TenBN.Value = par12.FirstOrDefault().TenBNhan.ToUpper();
                        rep12.DiaChi.Value = par12.FirstOrDefault().DChi;
                        rep12.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                        rep12.NamSinh.Value = par12.FirstOrDefault().NamSinh;
                        int gioiTinh = int.Parse(par12.FirstOrDefault().GTinh.ToString());
                        if (gioiTinh == 1)
                        {
                            rep12.Nu.Value = "/".ToUpper();
                        }
                        else if (gioiTinh == 0)
                        {
                            rep12.Nam.Value = "/".ToUpper();
                        }
                        if (par12.FirstOrDefault().SThe != null && par12.FirstOrDefault().SThe.Length >= 15)
                        {
                            rep12.SThe1.Value = par12.FirstOrDefault().SThe.Substring(0, 3);
                            rep12.SThe2.Value = par12.FirstOrDefault().SThe.Substring(3, 2);
                            rep12.SThe3.Value = par12.FirstOrDefault().SThe.Substring(5, 2);
                            rep12.SThe4.Value = par12.FirstOrDefault().SThe.Substring(7, 3);
                            rep12.SThe5.Value = par12.FirstOrDefault().SThe.Substring(10, 5);
                        }
                        bool capcuu = par12.FirstOrDefault().CapCuu;
                        if (capcuu)
                        {
                            rep12.CapCuu.Value = "X";
                        }
                        else rep12.Thuong.Value = "X";
                        if (par12.FirstOrDefault().NgayThang != null)
                            rep12.NgayCD.Value = DungChung.Ham.NgaySangChu(par12.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                        else
                            rep12.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                        if (par12.FirstOrDefault().NgayTH != null)
                            rep12.NgayTH.Value = DungChung.Ham.NgaySangChu(par12.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                        else
                            rep12.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                    }
                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp12, true);
                    rep12.ChanDoan.Value = arrThongTinBNKB[1];
                    rep12.Buong.Value = arrThongTinBNKB[2];
                    rep12.Giuong.Value = arrThongTinBNKB[3];

                    rep12.Khoa.Value = arrThongTinBNKB[4];
                    if (DungChung.Bien.MaBV == "30010")
                    {
                        int mkpth = Convert.ToInt32(par12.FirstOrDefault().MaKPth.Value);
                        rep12.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                    }//yenbg1
                    rep12.TaoPhieu(0);
                    rep12.CreateDocument();
                    frmin.prcIN.PrintingSystem = rep12.PrintingSystem;
                    if (PrintNow)
                        DungChung.Ham.PrintReport(rep12);
                    else
                        frmin.ShowDialog();


                    break;

                default:
                    System.Windows.Forms.MessageBox.Show("Mẫu phiếu chưa được thiết lập cho: " + _tieunhom);
                    break;
            }
        }
        public static void _InPhieu_XetNghiem_30372(QLBV_Database.QLBVEntities _Data, string _tieunhom, int _Mabn, int idcls, int IsCD, List<int> _lIdCls, List<int?> _lMaDV, List<int> _IdCD)
        {
            #region 27023 lấy số trên phiếu : BN nôi trú lấy số bệnh án, bệnh nhân ngoại trú số thứ tự tăng theo ngày, thêm cả 01071 (đức 28-09)
            string _so = "";
            if (DungChung.Bien.MaBV == "27023")
            {
                var bnhan = _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn).FirstOrDefault();
                if (bnhan != null)
                {
                    if (bnhan.NoiTru == 1)
                    {
                        var qvv = _Data.VaoViens.Where(parameters => parameters.MaBNhan == _Mabn).Select(p => p.SoBA).FirstOrDefault();
                        if (qvv != null)
                            _so = qvv;
                    }
                    else
                    {

                        DateTime tungay = DungChung.Ham.NgayTu(bnhan.NNhap.Value);
                        DateTime denngay = DungChung.Ham.NgayDen(bnhan.NNhap.Value);
                        var qbn = _Data.BenhNhans.Where(p => p.NNhap >= tungay && p.NNhap <= denngay).Where(p => p.NoiTru == 0).OrderBy(p => p.NNhap).ToList();

                        int count = 0;
                        foreach (var a in qbn)
                        {
                            count++;
                            if (a.MaBNhan == _Mabn)
                                break;
                        }
                        _so = count.ToString();
                    }
                }

            }
            #endregion
            var dongmau = (from a in _Data.CLS.Where(p => p.IdCLS == idcls)
                           join b in _Data.ChiDinhs on a.IdCLS equals b.IdCLS
                           join c in _Data.DichVus on b.MaDV equals c.MaDV
                           join d in _Data.TieuNhomDVs on c.IdTieuNhom equals d.IdTieuNhom
                           select new { c.TenDV, d.TenRG }).ToList().FirstOrDefault();
            string tendv = "";
            string tendv1 = "";
            if (dongmau != null)
            {
                tendv = dongmau.TenDV.ToLower();
                tendv1 = dongmau.TenDV;
            }



            if (DungChung.Bien.MaBV == "34019" && _tieunhom != "Trắc nghiệm tâm lý")
            {


                var par2 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                            join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                            join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                            select new { cls.MaKP, cls.NgayThang, cls.NgayTH, cls.CapCuu, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, MaCBDT = cls.MaCB, cls.MaCBth, bn.NamSinh, bn.ThangSinh, bn.NgaySinh, bn.DTuong, bn.HanBHDen, bn.HanBHTu, kp.TenKP, bn.IDPerson }).ToList();
                if (par2 != null && par2.Count > 0)
                {
                    var par41 = (from cls in _Data.CLS.Where(p => p.IdCLS == idcls)
                                 join chidinh in _Data.ChiDinhs on cls.IdCLS equals chidinh.IdCLS
                                 join dichvu in _Data.DichVus on chidinh.MaDV equals dichvu.MaDV
                                 join tn in _Data.TieuNhomDVs.Where(p => p.TenRG.Contains(_tieunhom)) on dichvu.IdTieuNhom equals tn.IdTieuNhom
                                 join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                                 join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                 select new { dvct.MaDVct, clsct.KetQua, clsct.STTHT, dvct.TenDVct, dvct.TSBT, dvct.DonVi, dichvu.TenDV, IsTrongBH = (chidinh.TrongBH == 1) }).ToList();

                    for (int i = 0; i < 2; i++)
                    {
                        var qhh = par41.Where(o => o.IsTrongBH == (i == 0)).ToList();
                        if (qhh.Count > 0)
                        {
                            frmIn frmIn = new QLBV.frmIn();
                            repPhieuKetQuaXetNghiem_34019_A4 rep = new repPhieuKetQuaXetNghiem_34019_A4();//5
                            rep.xrPictureBox1.Image = QLBV.DungChung.Ham.GetLogo();
                            //rep.SoPhieu.Value = par2.FirstOrDefault().SoPhieu;
                            rep.MaDieuTri.Value = _Mabn;
                            rep.MaBN.Value = par2.FirstOrDefault().IDPerson; ;
                            rep.TenBV.Value = DungChung.Bien.TenCQ.ToUpper();
                            var hthong = _Data.HTHONGs.FirstOrDefault(o => o.MaBV == DungChung.Bien.MaBV);
                            if (hthong != null)
                            {
                                rep.DiaChiBV.Value = hthong.DiaChi;
                            }
                            rep.TenPhieu.Value = "PHIẾU KẾT QUẢ XÉT NGHIỆM";
                            //rep.KPhong.Value = par2.FirstOrDefault().TenKPth;
                            rep.CapCuu.Value = (par2.FirstOrDefault().CapCuu == true) ? "X" : "";
                            rep.TenBNhan.Value = par2.FirstOrDefault().TenBNhan.ToUpper();
                            rep.NgaySinh.Value = DungChung.Ham.GhepNgaySinh("/", par2.FirstOrDefault().NamSinh, par2.FirstOrDefault().ThangSinh, par2.FirstOrDefault().NgaySinh);
                            rep.GioiTinh.Value = par2.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                            rep.GT = par2.FirstOrDefault().GTinh ?? 0;
                            rep.DiaChi.Value = par2.FirstOrDefault().DChi;
                            rep.NgayGio.Value = DungChung.Ham.NgaySangChu(par2.FirstOrDefault().NgayThang.Value);
                            //if (!string.IsNullOrWhiteSpace(par2.FirstOrDefault().DTuong) && par2.FirstOrDefault().DTuong == "BHYT")
                            //{
                            //    rep.BHYT.Value = "X";
                            //}
                            //else
                            //    rep.ThuPhi.Value = "X";
                            if (i == 0)
                                rep.BHYT.Value = "X";
                            else
                                rep.ThuPhi.Value = "X";
                            rep.CapCuu.Value = (par2.FirstOrDefault().CapCuu == true) ? "X" : "";

                            if (i == 0)
                            {
                                if (!string.IsNullOrWhiteSpace(par2.FirstOrDefault().SThe))
                                {
                                    rep.HanThe.Value = par2.FirstOrDefault().HanBHDen != null ? par2.FirstOrDefault().HanBHDen.Value.ToString("dd/MM/yyyy") : "";
                                    rep.HanTu.Value = par2.FirstOrDefault().HanBHTu != null ? par2.FirstOrDefault().HanBHTu.Value.ToString("dd/MM/yyyy") : "";
                                    rep.SThe1.Value = par2.FirstOrDefault().SThe.Substring(0, 2);
                                    rep.SThe2.Value = par2.FirstOrDefault().SThe.Substring(2, 1);
                                    rep.SThe3.Value = par2.FirstOrDefault().SThe.Substring(3, 2);
                                    rep.SThe4.Value = par2.FirstOrDefault().SThe.Substring(5, 2);
                                    rep.SThe5.Value = par2.FirstOrDefault().SThe.Substring(7, 3);
                                    rep.SThe6.Value = par2.FirstOrDefault().SThe.Substring(10, 5);
                                }
                            }
                            rep.paramTenKP.Value = par2.FirstOrDefault().TenKP;
                            var maKp = (par2.FirstOrDefault().MaKP == null ? 0 : par2.FirstOrDefault().MaKP.Value);
                            var kbcd = (from bnkb in _Data.BNKBs.Where(p => p.MaBNhan == _Mabn && p.MaKP == maKp)
                                        select bnkb).ToList();
                            if (kbcd != null && kbcd.Count > 0)
                            {
                                rep.BenhChinh.Value = kbcd.FirstOrDefault().ChanDoan + " (" + kbcd.FirstOrDefault().MaICD + ")";
                                rep.BenhPhu.Value = kbcd.FirstOrDefault().BenhKhac;
                                if (!string.IsNullOrWhiteSpace(kbcd.FirstOrDefault().Buong))
                                {
                                    var spBuong = kbcd.FirstOrDefault().Buong.Split(';');
                                    if (spBuong != null && spBuong.Count() > 0)
                                    {
                                        rep.paramBuong.Value = spBuong[spBuong.Count() - 1];
                                    }
                                }
                                if (!string.IsNullOrWhiteSpace(kbcd.FirstOrDefault().Giuong))
                                {
                                    var spGiuong = kbcd.FirstOrDefault().Giuong.Split(';');
                                    if (spGiuong != null && spGiuong.Count() > 0)
                                    {
                                        rep.paramGiuong.Value = spGiuong[spGiuong.Count() - 1];
                                    }
                                }
                            }
                            //rep.YCKT.Value = par2.FirstOrDefault().TenDV;
                            var list = qhh.ToList();
                            if (DungChung.Bien.MaBV == "27023")
                            {
                                foreach (var item in list)
                                {
                                    if (string.IsNullOrEmpty(item.KetQua))
                                    {
                                        MessageBox.Show("Không thể xem vì chưa có kết quả");
                                        return;
                                    }
                                }
                            }
                            rep.DataSource = qhh.ToList();
                            rep.BindingData();
                            rep.CreateDocument();
                            frmIn.prcIN.PrintingSystem = rep.PrintingSystem;
                            if (PrintNow)
                                DungChung.Ham.PrintReport(rep);
                            else
                                frmIn.ShowDialog();
                        }
                    }
                    return;
                }
            }
            #region 14018
            if (DungChung.Bien.MaBV == "14018" && (_tieunhom == "XN huyết học" || _tieunhom == "XN hóa sinh máu"))
            {
                int gioiTinh = 0;
                Dictionary<string, object> dic = new Dictionary<string, object>();
                var ttbn = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                            join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                            //join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                            //join kpth1 in _Data.KPhongs on cls.MaKPth equals kpth1.MaKP into kqKp
                            //from kpth in kqKp.DefaultIfEmpty()
                            join cb in _Data.CanBoes on cls.MaCB equals cb.MaCB
                            join cbth1 in _Data.CanBoes on cls.MaCBth equals cbth1.MaCB into kqCb
                            from cbth in kqCb.DefaultIfEmpty()
                            select new { bn.IDPerson, bn.PID, cls.NgayTH, cls.CapCuu, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, cls.MaKP, cls.MaKPth, cls.MaCBth, bn.DTuong, bn.Tuoi, bn.SThe, cls.MaCB, bn.NamSinh, TenCBth = cbth != null ? cbth.TenCB : "", cb.TenCB, cls.NgayThang }).ToList();

                dic.Add("TieuDe", _tieunhom == "XN huyết học" ? "PHIẾU TRẢ KẾT QUẢ XÉT NGHIỆM HUYẾT HỌC" : "PHIẾU TRẢ KẾT QUẢ XÉT NGHIỆM HÓA SINH");
                dic.Add("NamSinh", ttbn.FirstOrDefault().NamSinh);
                if (ttbn != null && ttbn.Count > 0)
                {
                    gioiTinh = ttbn.FirstOrDefault().GTinh ?? 0;
                    dic.Add("TenBN", ttbn.FirstOrDefault().TenBNhan.ToUpper());
                    dic.Add("GioiTinh", ttbn.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ");
                    dic.Add("MaBN", ttbn.FirstOrDefault().MaBNhan);
                    dic.Add("PID", ttbn.FirstOrDefault().PID);
                    dic.Add("IDPerson", ttbn.FirstOrDefault().IDPerson);

                    if (!string.IsNullOrWhiteSpace(ttbn.FirstOrDefault().SThe))
                    {
                        dic.Add("SoTheBHYT1", ttbn.FirstOrDefault().SThe.Substring(0, 2));
                        dic.Add("SoTheBHYT2", ttbn.FirstOrDefault().SThe.Substring(2, 1));
                        dic.Add("SoTheBHYT3", ttbn.FirstOrDefault().SThe.Substring(3, 2));
                        dic.Add("SoTheBHYT4", ttbn.FirstOrDefault().SThe.Substring(5, 2));
                        dic.Add("SoTheBHYT5", ttbn.FirstOrDefault().SThe.Substring(8, 3));
                        dic.Add("SoTheBHYT6", ttbn.FirstOrDefault().SThe.Substring(11));
                    }
                    else
                    {
                        dic.Add("SoTheBHYT1", "");
                        dic.Add("SoTheBHYT2", "");
                        dic.Add("SoTheBHYT3", "");
                        dic.Add("SoTheBHYT4", "");
                        dic.Add("SoTheBHYT5", "");
                        dic.Add("SoTheBHYT6", "");
                    }

                    var maKP = ttbn.FirstOrDefault().MaKP;
                    var bnkb = _Data.BNKBs.FirstOrDefault(o => o.MaKP == maKP && o.MaBNhan == _Mabn);
                    if (bnkb != null)
                    {
                        dic.Add("ChanDoan", DungChung.Bien.MaBV == "14018" ? DungChung.Ham.GetChanDoanKB(_Data, _Mabn) : bnkb.MaICD + ":" + bnkb.ChanDoan + (!string.IsNullOrWhiteSpace(bnkb.BenhKhac) ? (";" + bnkb.BenhKhac) : ""));
                    }

                    var arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, ttbn.FirstOrDefault().MaKP == null ? 0 : ttbn.FirstOrDefault().MaKP.Value, true);
                    dic.Add("Buong", arrThongTinBNKB[2]);
                    dic.Add("Giuong", arrThongTinBNKB[3]);
                    dic.Add("Khoa", arrThongTinBNKB[4]);
                    dic.Add("DiaChi", ttbn.FirstOrDefault().DChi);
                    dic.Add("TenCBThucHien", ttbn.FirstOrDefault().TenCBth);
                    dic.Add("TenCBDieuTri", ttbn.FirstOrDefault().TenCB);
                    dic.Add("NgayTH", ttbn.FirstOrDefault().NgayTH != null ? (ttbn.FirstOrDefault().NgayTH.Value.Hour + " giờ " + ttbn.FirstOrDefault().NgayTH.Value.Minute + " phút" + DungChung.Ham.NgaySangChu(ttbn.FirstOrDefault().NgayTH.Value)) : ("..........Ngày...tháng...năm....."));
                    dic.Add("NgayCD", ttbn.FirstOrDefault().NgayThang != null ? DungChung.Ham.NgaySangChu(ttbn.FirstOrDefault().NgayThang.Value) : ("Ngày...tháng...năm....."));
                }

                List<CLS_XN> source = new List<CLS_XN>();
                var q0 = (from cls in _Data.CLS.Where(p => p.MaBNhan == _Mabn && p.IdCLS == idcls)
                          join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                          join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                          join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                          join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                          select new CLS_XN { TenDV = dv.TenDV, TenDVct = dvct.TenDVct, TSBT = gioiTinh == 0 ? dvct.TSBTnu : dvct.TSBTn, KetQua = clsct.KetQua, STT = dvct.STT, STTHT = clsct.STTHT, TSnTu = dvct.TSnTu, TSnDen = dvct.TSnDen, TSnuTu = dvct.TSnuTu, TSnuDen = dvct.TSnuDen }).OrderBy(o => o.STT != null).ThenBy(o => o.STT).ToList();

                if (q0.Count > 0)
                {
                    var dv = new CLS_XN { TenDVct = q0.FirstOrDefault().TenDV, STT = 1, STTHT = 1 };
                    source.Add(dv);
                }
                source.AddRange(q0);

                DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuKQXN_HuyetHoc_HoaSinh_14018, source, dic, PrintNow);
                return;
            }
            #endregion

            switch (_tieunhom)
            {
                case "XN đờm":
                    //phieuxetnghiemdom(_Data, idcls); // mẫu cũ
                    if (DungChung.Bien.MaBV != "27023")
                        PhieuXNLao(idcls, _so);
                    else
                        PhieuXNLao_27023(idcls, _so);
                    break;
                #region xn chọc dò
                case "XN dịch chọc dò":
                    #region 02005
                    if (DungChung.Bien.MaBV == "02005")
                    {
                        frmIn frmcd = new frmIn();
                        BaoCao.Rep_PhieuXNNTPDCD_VX01 repcd1 = new BaoCao.Rep_PhieuXNNTPDCD_VX01();
                        int _makpcd1 = 0;

                        var parcd1 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                      join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                      select new { cls.NgayTH, cls.CapCuu, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, cls.MaKP, cls.MaCBth, bn.DTuong, bn.Tuoi, bn.SThe, cls.MaCB }).ToList();
                        if (parcd1.Count > 0)
                        {
                            _makpcd1 = parcd1.FirstOrDefault().MaKP == null ? 0 : parcd1.FirstOrDefault().MaKP.Value;
                            repcd1.DChi.Value = parcd1.FirstOrDefault().DChi;
                            repcd1.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                            repcd1.TenBNhan.Value = parcd1.FirstOrDefault().TenBNhan.ToUpper();
                            repcd1.MaBNhan.Value = parcd1.FirstOrDefault().MaBNhan;
                            repcd1.DoiTuong.Value = parcd1.FirstOrDefault().DTuong;
                            repcd1.KhoaCBDT.Value = parcd1.FirstOrDefault().MaKP;
                            repcd1.MaCBXN.Value = parcd1.FirstOrDefault().MaCBth;
                            repcd1.MaCBDT.Value = parcd1.FirstOrDefault().MaCB;
                            int gioiTinh = int.Parse(parcd1.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                repcd1.GioiTinh.Value = "Nam";
                            }
                            else if (gioiTinh == 0)
                            {
                                repcd1.GioiTinh.Value = "Nam";
                            }
                            if (parcd1.FirstOrDefault().SThe != null && parcd1.FirstOrDefault().SThe.Length >= 15)
                            {
                                repcd1.SThe.Value = parcd1.FirstOrDefault().SThe;
                            }
                            bool capcuu = parcd1.FirstOrDefault().CapCuu;
                            if (capcuu)
                            {
                                repcd1.CapCuu.Value = "X";
                            }
                            else repcd1.Thuong.Value = "X";
                            if (parcd1.FirstOrDefault().NgayTH != null)
                                repcd1.NgayTH.Value = DungChung.Ham.NgaySangChu(parcd1.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                repcd1.NgayTH.Value = ".... giờ, ngày ..... tháng ..... năm .....";
                        }
                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, parcd1.FirstOrDefault().MaKP == null ? 0 : parcd1.FirstOrDefault().MaKP.Value, true);
                        repcd1.ChanDoan.Value = arrThongTinBNKB[1];
                        repcd1.Buong.Value = arrThongTinBNKB[2];
                        repcd1.Giuong.Value = arrThongTinBNKB[3];
                        repcd1.Khoa.Value = arrThongTinBNKB[4];
                        var parx = (from cls in _Data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idcls)
                                    join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                    join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD  //select new {cls.MaBNhan }).ToList();
                                    // join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                                    join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                    // join tn in _Data.TieuNhomDVs.Where(p => p.TenRG.Contains("XN dịch chọc dò")) on dv.IdTieuNhom equals tn.IdTieuNhom
                                    group new { dvct } by new { dvct.TenDVct, dvct.TSBT, clsct.KetQua } into kq
                                    select new { TenDVct = kq.Key.TenDVct, TSBT = kq.Key.TSBT, KetQua = kq.Key.KetQua }).ToList();
                        if (parx.Count > 0)
                        {
                            repcd1.DataSource = parx.ToList();
                            repcd1.BindingData();
                        }

                        repcd1.CreateDocument();
                        frmcd.prcIN.PrintingSystem = repcd1.PrintingSystem;
                        if (PrintNow)
                            DungChung.Ham.PrintReport(repcd1);
                        else
                            frmcd.ShowDialog();
                        break;

                    }
                    #endregion
                    #region bv khác
                    else
                    {
                        frmIn frmcd = new frmIn();
                        BaoCao.Rep_PhieuXNNuocTieuPhanDCD repcd = new BaoCao.Rep_PhieuXNNuocTieuPhanDCD(_lIdCls, _lMaDV);
                        int _makpcd = 0;
                        //repcd.MaBNhan.Value = _Mabn;
                        //repcd.Status.Value = DungChung.Bien.InPhoi;
                        var parcd = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                     join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                     join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                     join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                     select new { cls.ChanDoan, cls.MaKP, cls.NgayTH, cls.NgayThang, cd.MaMay, cls.CapCuu, kp.TenKP, bn.TenBNhan, bn.NamSinh, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, cls.MaCBth, cls.Status, cls.BarCode, cls.MaKPth }).ToList();
                        if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                        {
                            repcd.SoPhieu.Value = _Mabn.ToString();
                            if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                            {
                                repcd.xrLabel47.Text = repcd.txtBarcode.Text = parcd.Count > 0 ? parcd.FirstOrDefault().BarCode : "";
                                repcd.xrLabel49.Visible = repcd.lblBarcode.Visible = true;
                                repcd.xrLabel47.Visible = repcd.txtBarcode.Visible = true;
                            }

                        }

                        else
                            repcd.SoPhieu.Value = idcls;
                        if (DungChung.Bien.MaBV == "27023")
                            repcd.So.Value = _so;
                        else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                        {
                            if (parcd.Count > 0)
                            {
                                int mabn = parcd.FirstOrDefault().MaBNhan;
                                var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                if (qvv != null)
                                    repcd.So.Value = qvv.SoVV;
                                else
                                    repcd.So.Value = "";
                            }
                        }
                        else
                            repcd.So.Value = idcls;
                        if (parcd.Count > 0)
                        {
                            if (DungChung.Bien.MaBV == "12122")
                            {
                                if (parcd.FirstOrDefault().Status == 0)
                                {
                                    repcd.lab111.Visible = false;
                                    repcd.lab113.Visible = false;
                                    repcd.colTenTKXN.Visible = false;
                                }
                                else
                                {
                                    repcd.lab110.Visible = false;
                                    repcd.lab112.Visible = false;
                                    repcd.colTenBSDT.Visible = false;
                                }
                            }
                            if (DungChung.Bien.MaBV == "30003" && !string.IsNullOrEmpty(parcd.FirstOrDefault().MaMay))
                            {
                                string _mamay = parcd.FirstOrDefault().MaMay;
                                var tenmay = _Data.DichVus.Where(p => p.PLoai > 2 && p.MaQD == _mamay).ToList();
                                if (tenmay.Count > 0)
                                {
                                    repcd.MaMay.Value = "Phương pháp xét nghiệm: [" + tenmay.FirstOrDefault().TenDV + "] [" + _mamay + "]";
                                }
                                else
                                {
                                    repcd.MaMay.Value = "Phương pháp xét nghiệm:";
                                }
                            }
                            _makpcd = parcd.FirstOrDefault().MaKP == null ? 0 : parcd.FirstOrDefault().MaKP.Value;
                            repcd.MaCBth.Value = parcd.FirstOrDefault().MaCBth;
                            if (parcd.FirstOrDefault().MaCBth != null)
                            {
                                string ma = parcd.FirstOrDefault().MaCBth.ToString();
                                var cbo = _Data.CanBoes.Where(p => p.MaCB == ma).Select(p => p.TenCB).ToList();
                                if (cbo.Count > 0)
                                    repcd.Macb.Value = (DungChung.Bien.MaBV == "12001" ? "BS: " : (DungChung.Bien.MaBV == "27023" ? "Họ tên: " : "")) + cbo.FirstOrDefault();
                            }
                            if (parcd.FirstOrDefault().MaCB != null)
                            {
                                string ma = parcd.FirstOrDefault().MaCB.ToString();
                                var cbodt = _Data.CanBoes.Where(p => p.MaCB == ma).Select(p => p.TenCB).ToList();
                                if (cbodt.Count > 0)
                                {
                                    if (DungChung.Bien.MaBV == "27023")
                                        repcd.MaCBDT.Value = "Họ tên: " + cbodt.FirstOrDefault();
                                    else
                                        repcd.MaCBDT.Value = cbodt.FirstOrDefault();
                                }
                            }

                            repcd.Khoa.Value = parcd.FirstOrDefault().TenKP;
                            repcd.NamSinh.Value = parcd.FirstOrDefault().NamSinh;
                            repcd.DiaChi.Value = parcd.FirstOrDefault().DChi;
                            repcd.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                            repcd.TenBNhan.Value = parcd.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = int.Parse(parcd.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                repcd.Nu.Value = "/";
                            }
                            else if (gioiTinh == 0)
                            {
                                repcd.Nam.Value = "/";
                            }
                            if (parcd.FirstOrDefault().SThe != null && parcd.FirstOrDefault().SThe.Length >= 15)
                            {
                                repcd.SThe1.Value = parcd.FirstOrDefault().SThe.Substring(0, 3);
                                repcd.SThe2.Value = parcd.FirstOrDefault().SThe.Substring(3, 2);
                                repcd.SThe3.Value = parcd.FirstOrDefault().SThe.Substring(5, 2);
                                repcd.SThe4.Value = parcd.FirstOrDefault().SThe.Substring(7, 3);
                                repcd.SThe5.Value = parcd.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            bool capcuu = parcd.FirstOrDefault().CapCuu;
                            if (capcuu)
                            {
                                repcd.CapCuu.Value = "X";
                            }
                            else repcd.Thuong.Value = "X";
                            if (parcd.FirstOrDefault().NgayTH != null)
                                repcd.NgayTH.Value = DungChung.Ham.NgaySangChu(parcd.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                repcd.NgayTH.Value = ".... giờ, ngày ..... tháng ..... năm .....";
                            if (parcd.FirstOrDefault().NgayThang != null)
                                repcd.NgayCD.Value = DungChung.Ham.NgaySangChu(parcd.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                        }
                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makpcd, true);
                        repcd.MaICD.Value = arrThongTinBNKB[0];
                        if (DungChung.Bien.MaBV == "20001")
                            repcd.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                        else
                        {
                            repcd.ChanDoan.Value = (parcd.FirstOrDefault().ChanDoan != null || parcd.FirstOrDefault().ChanDoan != "") && DungChung.Bien.MaBV == "24272" ? parcd.FirstOrDefault().ChanDoan + ";" : "";
                            if (DungChung.Bien.MaBV != "24272")
                            {
                                repcd.ChanDoan.Value += arrThongTinBNKB[1];
                            }

                        }
                        repcd.Buong.Value = arrThongTinBNKB[2];
                        repcd.Giuong.Value = arrThongTinBNKB[3];
                        repcd.Khoa.Value = arrThongTinBNKB[4];
                        if (DungChung.Bien.MaBV == "30010")
                        {
                            int mkpth = Convert.ToInt32(parcd.FirstOrDefault().MaKPth.Value);
                            repcd.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                        }//yenbg1
                        repcd.CreateDocument();
                        frmcd.prcIN.PrintingSystem = repcd.PrintingSystem;
                        if (PrintNow)
                            DungChung.Ham.PrintReport(repcd);
                        else
                            frmcd.ShowDialog();
                    }
                    break;
                #endregion
                #endregion
                #region XN hóa sinh máu
                case "XN hóa sinh máu":
                    #region chí linh
                    if (DungChung.Bien.MaBV == "30003") // Chí Linh
                    {
                        frmIn frm = new frmIn();
                        BaoCao.repPhieuXNHoaSinhMau_CL rep = new BaoCao.repPhieuXNHoaSinhMau_CL();
                        rep.MaBNhan.Value = _Mabn;
                        rep.Status.Value = DungChung.Bien.InPhoi;
                        rep.SoPhieu.Value = _Mabn;
                        rep.paramIdCLS.Value = idcls;
                        var par = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                   join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                   join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                   select new { cls.NgayTH, cls.NgayThang, cls.CapCuu, cd.MaMay, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, cls.MaKP }).ToList();
                        if (par.Count > 0)
                        {
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().MaMay))
                            {
                                string _mamay = par.FirstOrDefault().MaMay;
                                var tenmay = _Data.DichVus.Where(p => p.PLoai > 2 && p.MaQD == _mamay).ToList();
                                if (tenmay.Count > 0)
                                {
                                    rep.MaMay.Value = "Phương pháp xét nghiệm: [" + tenmay.FirstOrDefault().TenDV + "] [" + _mamay + "]";
                                }
                                else
                                {
                                    rep.MaMay.Value = "Phương pháp xét nghiệm:";
                                }
                            }
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                            rep.ChanDoan.Value = arrThongTinBNKB[1];
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];
                            rep.Khoa.Value = arrThongTinBNKB[4];

                            rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                            rep.TenBN.Value = par.FirstOrDefault().TenBNhan;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nam.Value = "X";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nu.Value = "X";
                            }
                            if (par.FirstOrDefault().SThe != null && par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            bool capcuu = par.FirstOrDefault().CapCuu;
                            if (capcuu)
                            {
                                rep.CapCuu.Value = "X";
                            }
                            else rep.Thuong.Value = "X";
                            if (par.FirstOrDefault().NgayTH != null)
                            {
                                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            }
                            else { rep.NgayTH.Value = "Ngày ..... tháng ...... năm....."; }
                            if (par.FirstOrDefault().NgayThang != null)
                            {
                                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            }
                            else { rep.NgayCD.Value = "Ngày ..... tháng ...... năm....."; }
                        }

                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        if (PrintNow)
                            DungChung.Ham.PrintReport(rep);
                        else
                            frm.ShowDialog();
                        break;
                    }
                    #endregion
                    #region 02005
                    if (DungChung.Bien.MaBV == "02005")
                    {
                        frmIn frm = new frmIn();
                        BaoCao.Rep_PhieuXNHoaSinhMau_VX02 repvx = new BaoCao.Rep_PhieuXNHoaSinhMau_VX02();
                        repvx.MaBNhan.Value = _Mabn;
                        int _makpvx = 0;

                        var parvx = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                     join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                     select new { cls.NgayTH, cls.CapCuu, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.DTuong, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, cls.MaKP, cls.MaCBth }).ToList();
                        if (parvx.Count > 0)
                        {
                            _makpvx = parvx.FirstOrDefault().MaKP == null ? 0 : parvx.FirstOrDefault().MaKP.Value;
                            repvx.TenBNhan.Value = parvx.FirstOrDefault().TenBNhan.ToUpper();
                            repvx.DChi.Value = parvx.FirstOrDefault().DChi;
                            repvx.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                            repvx.DTuong.Value = parvx.FirstOrDefault().DTuong;
                            repvx.MaBSCD.Value = parvx.FirstOrDefault().MaCB;
                            repvx.KhoaBSCD.Value = parvx.FirstOrDefault().MaKP;
                            repvx.MaBSCK.Value = parvx.FirstOrDefault().MaCBth;
                            int gioiTinh = int.Parse(parvx.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                repvx.GioiTinh.Value = "Nam";
                            }
                            else if (gioiTinh == 0)
                            {
                                repvx.GioiTinh.Value = "Nữ";
                            }
                            repvx.SThe.Value = parvx.FirstOrDefault().SThe;
                            bool capcuu = parvx.FirstOrDefault().CapCuu;
                            if (capcuu)
                            {
                                repvx.CapCuu.Value = "X";
                            }
                            else repvx.Thuong.Value = "X";
                            if (parvx.FirstOrDefault().NgayTH != null)
                                repvx.NgayTH.Value = DungChung.Ham.NgaySangChu(parvx.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                repvx.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                        }
                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makpvx, true);
                        repvx.ChanDoan.Value = arrThongTinBNKB[1];
                        repvx.Buong.Value = arrThongTinBNKB[2];
                        repvx.Giuong.Value = arrThongTinBNKB[3];
                        repvx.Khoa.Value = arrThongTinBNKB[4];
                        var qm = (from cls in _Data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idcls)
                                  join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                  join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                  join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                  select new { dvct.TenDVct, dvct.TSBT, clsct.KetQua }).ToList();
                        if (qm.Count > 0)
                        {
                            repvx.DataSource = qm.ToList();
                            repvx.BindingData();
                            repvx.CreateDocument();
                            frm.prcIN.PrintingSystem = repvx.PrintingSystem;
                            if (PrintNow)
                                DungChung.Ham.PrintReport(repvx);
                            else
                                frm.ShowDialog();
                        }

                    }
                    #endregion
                    else
                    {
                        #region YÊn Mỹ
                        if (DungChung.Bien.MaBV == "33080")//In M?u Yên M? 
                        {
                            frmIn frm = new frmIn();
                            BaoCao.Rep_PhieuXNHoaSinhMau_YM01 repym = new BaoCao.Rep_PhieuXNHoaSinhMau_YM01();
                            repym.TenBC.Value = ("Kết quả xét nghiệm").ToUpper();
                            int _day = 0;
                            var qym1 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                        join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                        join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                                        join tn in _Data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                        select new { bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.NamSinh, cls.MaCB, cls.MaKP, cls.MaCBth, cls.NgayTH }).ToList();
                            if (qym1.Count > 0)
                            {
                                int makp = 0;
                                if (qym1.FirstOrDefault().MaKP != null)
                                {
                                    makp = qym1.FirstOrDefault().MaKP.Value;
                                }
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, makp, true);
                                repym.ChanDoan.Value = arrThongTinBNKB[1];
                                repym.MaKP.Value = makp;
                                repym.TenKP.Value = arrThongTinBNKB[4];

                                if (qym1.FirstOrDefault().NgayTH != null)
                                    _day = qym1.FirstOrDefault().NgayTH.Value.Day;
                                repym.paramMaBN.Value = qym1.FirstOrDefault().MaBNhan;
                                repym.TenBNhan.Value = qym1.FirstOrDefault().TenBNhan;
                                repym.DChi.Value = qym1.FirstOrDefault().DChi;
                                repym.NamSinh.Value = qym1.FirstOrDefault().NamSinh;
                                repym.BSCD.Value = qym1.FirstOrDefault().MaCB;
                                repym.MaBSTH.Value = qym1.FirstOrDefault().MaCBth;
                                if (qym1.FirstOrDefault().NgayTH != null)
                                {
                                    repym.NgayTH.Value = DungChung.Ham.NgaySangChu(qym1.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                }
                                else { repym.NgayTH.Value = "Ngày ..... tháng ...... năm ....."; }
                                int gioiTinh = int.Parse(qym1.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    repym.GTinh.Value = "Nam";
                                }
                                else if (gioiTinh == 0)
                                {
                                    repym.GTinh.Value = "Nữ";
                                }
                            }
                            var qym2 = (from cls in _Data.CLS.Where(p => p.MaBNhan == _Mabn)
                                        join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                        join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                        join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                                        join tn in _Data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                        where (cls.NgayTH.Value.Day == _day)
                                        where (tn.TenRG == "XN hóa sinh máu" || tn.TenRG == "XN nước tiểu" || tn.TenRG == "XN khác")
                                        select new { dvct.MaDVct, tn.TenTN, dvct.TenDVct, dvct.TSBT, dvct.DonVi, dvct.TSBTnu, clsct.KetQua, dvct.STT }).OrderBy(p => p.STT).ThenBy(p => p.TenDVct).ToList();
                            repym.DataSource = qym2.ToList();
                            repym.BindingData();
                            repym.CreateDocument();
                            frm.prcIN.PrintingSystem = repym.PrintingSystem;
                            if (PrintNow)
                                DungChung.Ham.PrintReport(repym);
                            else
                                frm.ShowDialog();
                            break;
                        }
                        #endregion

                        else
                        {
                            #region Nam sách
                            if (DungChung.Bien.MaBV == "300041")//In M?u Nam sách
                            {
                                frmIn frm = new frmIn();
                                BaoCao.repPhieuXNHoaSinhMau_NSach repns = new BaoCao.repPhieuXNHoaSinhMau_NSach();
                                // repym.TenBC.Value = ("k?t qu? xét nghi?m sinh hóa máu").ToUpper();
                                repns.SoPhieu.Value = idcls;
                                int _makpns = 0;


                                var qns1 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                            join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                            select new { cls.NgayThang, cls.CapCuu, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, cls.MaKP, cls.MaCBth, cls.NgayTH }).ToList();
                                if (qns1.Count > 0)
                                {
                                    _makpns = qns1.FirstOrDefault().MaKP == null ? 0 : qns1.FirstOrDefault().MaKP.Value;
                                    repns.TenBN.Value = qns1.FirstOrDefault().TenBNhan;
                                    repns.DiaChi.Value = qns1.FirstOrDefault().DChi;
                                    if (qns1.FirstOrDefault().Tuoi != null)
                                        repns.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                                    repns.MaCBDT.Value = qns1.FirstOrDefault().MaCB;
                                    repns.Macb.Value = qns1.FirstOrDefault().MaCBth;
                                    if (qns1.FirstOrDefault().NgayTH != null)
                                    {
                                        repns.NgayTH.Value = DungChung.Ham.NgaySangChu(qns1.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    }
                                    else { repns.NgayTH.Value = "Ngày ..... tháng ...... năm....."; }
                                    if (qns1.FirstOrDefault().NgayThang != null)
                                    {
                                        repns.NgayCD.Value = DungChung.Ham.NgaySangChu(qns1.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    }
                                    else { repns.NgayCD.Value = "Ngày ..... tháng ...... năm....."; }
                                    int gioiTinh = int.Parse(qns1.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        repns.Nu.Value = "/".ToUpper();
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        repns.Nam.Value = "/".ToUpper();
                                    }
                                    if (qns1.FirstOrDefault().SThe != null && qns1.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        repns.SThe1.Value = qns1.FirstOrDefault().SThe.Substring(0, 3);
                                        repns.SThe2.Value = qns1.FirstOrDefault().SThe.Substring(3, 2);
                                        repns.SThe3.Value = qns1.FirstOrDefault().SThe.Substring(5, 2);
                                        repns.SThe4.Value = qns1.FirstOrDefault().SThe.Substring(7, 3);
                                        repns.SThe5.Value = qns1.FirstOrDefault().SThe.Substring(10, 5);
                                    }
                                    bool capcuu = qns1.FirstOrDefault().CapCuu;
                                    if (capcuu)
                                    {
                                        repns.CapCuu.Value = "X";
                                    }
                                    else repns.Thuong.Value = "X";
                                }
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makpns, true);
                                repns.ChanDoan.Value = arrThongTinBNKB[1];
                                repns.Buong.Value = arrThongTinBNKB[2];
                                repns.Giuong.Value = arrThongTinBNKB[3];
                                repns.Khoa.Value = arrThongTinBNKB[4];

                                repns.CreateDocument();
                                frm.prcIN.PrintingSystem = repns.PrintingSystem;
                                if (PrintNow)
                                    DungChung.Ham.PrintReport(repns);
                                else
                                    frm.ShowDialog();

                            }
                            #region Nam sách new
                            else if (DungChung.Bien.MaBV == "30004")
                            {
                                string TenKP = ""; string MaMay = "";
                                List<InXNTongHop> _ltn = new List<InXNTongHop>();
                                _ltn = (from cd in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                                        join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                        join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                                        join tndv in _Data.TieuNhomDVs on dv.IdTieuNhom equals tndv.IdTieuNhom
                                        join tn in _Data.DichVucts on clsct.MaDVct equals tn.MaDVct
                                        select new InXNTongHop
                                        {
                                            IdTieuNhom = tndv.IdTieuNhom,
                                            TenTN = tndv.TenTN,
                                            MaMay = cd.MaMay ?? "",
                                            IdCLS = cd.IdCLS ?? 0,
                                            IdCD = cd.IDCD,

                                        }).ToList();
                                if (_ltn.Count() > 0)
                                {
                                    var kps = (from cls in _Data.CLS.Where(p => p.IdCLS == idcls)
                                               join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                               select new { kp.TenKP }).ToList();
                                    CLS.InPhieu._inPhieuXNTongHop_30004(_Mabn, _ltn, false, TenKP = kps.FirstOrDefault().TenKP ?? "", MaMay);
                                }
                            }
                            #endregion
                            #endregion
                            else if (DungChung.Bien.MaBV == "30299")
                            {
                                XNHoaSinhMau_30299(_Data, idcls, _Mabn);
                            }
                            else if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                            {
                                _InPhieuSinhHoaMau_01071(_Mabn, idcls, _tieunhom);
                            }

                            #region BV 27001
                            else if (DungChung.Bien.MaBV == "27001")
                            {
                                frmIn frm = new frmIn();
                                //BaoCao.rep_PhieuXNHoaSinhMau_A5 rep = new BaoCao.rep_PhieuXNHoaSinhMau_A5();
                                BaoCao.repPhieuXNHoaSinhMau rep = new BaoCao.repPhieuXNHoaSinhMau();
                                int _makp = 0;
                                rep.MaBNhan.Value = _Mabn;
                                //rep.Status.Value = DungChung.Bien.InPhoi;

                                rep.SoPhieu.Value = idcls;

                                var par = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                           join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                           select new { cls.MaKP, cls.MaCBth, cls.BarCode, cls.NgayTH, cls.NgayThang, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, cls.CapCuu, bn.Tuoi, bn.SThe, cls.MaCB, cls.MaKPth }).ToList();

                                if (DungChung.Bien.MaBV == "27023")
                                    rep.So.Value = _so;
                                else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                {
                                    if (par.Count > 0)
                                    {
                                        int mabnhan = par.FirstOrDefault().MaBNhan;
                                        var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabnhan).FirstOrDefault();
                                        if (qvv != null)
                                            rep.So.Value = qvv.SoVV;
                                        else
                                            rep.So.Value = "";
                                    }
                                }
                                else
                                    rep.So.Value = idcls;
                                if (par.Count > 0)
                                {
                                    rep.TXTBARCODE.Text = par.FirstOrDefault().BarCode == null ? "" : ("Barcode: " + par.FirstOrDefault().BarCode.ToString());
                                    _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                                    rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                    rep.Macb.Value = par.FirstOrDefault().MaCBth;
                                    rep.DiaChi.Value = par.FirstOrDefault().DChi;
                                    rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                                    rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep.Nu.Value = "/";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep.Nam.Value = "/";
                                    }
                                    if (par.FirstOrDefault().SThe != null && par.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                        rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                        rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                        rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                        rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                    }
                                    bool capcuu = par.FirstOrDefault().CapCuu;
                                    if (capcuu)
                                    {
                                        rep.CapCuu.Value = "X";
                                    }
                                    else rep.Thuong.Value = "X";
                                }

                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp, true);
                                rep.ChanDoan.Value = arrThongTinBNKB[1];
                                rep.Buong.Value = arrThongTinBNKB[2];
                                rep.Giuong.Value = arrThongTinBNKB[3];
                                rep.Khoa.Value = arrThongTinBNKB[4];

                                if (par.FirstOrDefault().NgayThang != null)
                                    rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                else
                                    rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                if (par.FirstOrDefault().NgayTH != null)
                                    rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                rep.lab110.Visible = false;
                                rep.lab112.Visible = false;
                                rep.colTenBSDT.Visible = false;
                                rep.CreateDocument();
                                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                if (PrintNow)
                                    DungChung.Ham.PrintReport(rep);
                                else
                                    frm.ShowDialog();
                            }
                            #endregion
                            #region chung
                            else
                            {
                                // Here
                                frmIn frm = new frmIn();
                                BaoCao.repPhieuXNHoaSinhMau rep = new BaoCao.repPhieuXNHoaSinhMau(_lIdCls, _lMaDV, _IdCD);
                                int _makp = 0;
                                rep.MaBNhan.Value = _Mabn;
                                rep.Status.Value = DungChung.Bien.InPhoi;
                                rep.colMaBN.Text = _Mabn.ToString();
                                rep.SoPhieu.Value = idcls;
                                if (DungChung.Bien.MaBV == "24012")
                                {
                                    rep.xrLabel86.Visible = true;
                                    rep.xrLabel87.Visible = true;
                                    rep.Parameters["MaICD"].Value = arrThongTinBNKB[0];
                                }
                                var par = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                           join bnkb in _Data.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                                           join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                           select new { bnkb.ChanDoanBD, cls.ChanDoan, cls.MaKP, cls.MaCBth, cls.NgayTH, cls.NgayThang, bn.TenBNhan, bn.NamSinh, bn.MaBNhan, bn.DChi, bn.GTinh, cls.CapCuu, bn.Tuoi, bn.SThe, cls.MaCB, cls.Status, cls.MaKPth, cls.BarCode }).ToList();

                                if (DungChung.Bien.MaBV == "30010")
                                {
                                    int Mkp = Convert.ToInt32(par.Select(p => p.MaKPth).FirstOrDefault().ToString());
                                    rep.kpth.Value = _Data.KPhongs.Where(p => p.MaKP == Mkp).Select(p => p.TenKP).FirstOrDefault().ToString();
                                } //yenbg2
                                if (DungChung.Bien.MaBV == "27023")
                                    rep.So.Value = _so;
                                else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                                {
                                    if (par.Count > 0)
                                    {
                                        int mabnhan = par.FirstOrDefault().MaBNhan;
                                        var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabnhan).FirstOrDefault();
                                        if (qvv != null)
                                            rep.So.Value = qvv.SoVV;
                                        else
                                            rep.So.Value = "";
                                    }
                                }
                                else
                                    rep.So.Value = idcls;
                                if (par.Count > 0)
                                {
                                    if (DungChung.Bien.MaBV == "12122")
                                    {
                                        if (par.FirstOrDefault().Status == 0)
                                        {
                                            rep.lab111.Visible = false;
                                            rep.lab113.Visible = false;
                                            rep.colTenTKXN.Visible = false;
                                        }
                                        else
                                        {
                                            rep.lab110.Visible = false;
                                            rep.lab112.Visible = false;
                                            rep.colTenBSDT.Visible = false;
                                        }
                                    }
                                    _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                                    rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                                    rep.Macb.Value = par.FirstOrDefault().MaCBth;
                                    rep.DiaChi.Value = par.FirstOrDefault().DChi;
                                    rep.NamSinh.Value = par.FirstOrDefault().NamSinh;
                                    rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                                    rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep.Nu.Value = "/";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep.Nam.Value = "/";
                                    }
                                    if (par.FirstOrDefault().SThe != null && par.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                        rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                        rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                        rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                        rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                                    }
                                    bool capcuu = par.FirstOrDefault().CapCuu;
                                    if (capcuu)
                                    {
                                        rep.CapCuu.Value = "X";
                                    }
                                    else rep.Thuong.Value = "X";
                                }

                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp, true);
                                if (DungChung.Bien.MaBV == "20001")
                                    rep.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                                else
                                {
                                    rep.ChanDoan.Value = (par.FirstOrDefault().ChanDoanBD != null || par.FirstOrDefault().ChanDoanBD != "") && DungChung.Bien.MaBV == "24272" ? par.FirstOrDefault().ChanDoanBD + ";" : "";
                                    if (DungChung.Bien.MaBV != "24272")
                                    {
                                        rep.ChanDoan.Value += arrThongTinBNKB[1];
                                    }
                                }
                                rep.Buong.Value = arrThongTinBNKB[2];
                                rep.Giuong.Value = arrThongTinBNKB[3];
                                rep.Khoa.Value = arrThongTinBNKB[4];
                                rep.xrLabel64.Text = "- " + arrThongTinBNKB[4];
                                if (DungChung.Bien.MaBV == "26007")
                                {
                                    rep.NgayCD.Value = "..... giờ ....phút, ngày ..... tháng ..... năm .....";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                }
                                else
                                {
                                    if (par.FirstOrDefault().NgayThang != null)
                                        rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    if (par.FirstOrDefault().NgayTH != null)
                                        rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                }

                                //var qcls = (from dvct in DataContect.DichVucts
                                //            join dv in DataContect.DichVus on dvct.MaDV equals dv.MaDV
                                //            join tnhomdv in DataContect.TieuNhomDVs on dv.IdTieuNhom equals tnhomdv.IdTieuNhom
                                //            where (tnhomdv.TenRG.Contains("XN hóa sinh máu"))
                                //            select new { tnhomdv.TenTN, dvct.MaDVct, dvct.TenDVct, dvct.TSBT, dvct.STT }).ToList();
                                rep.CreateDocument();
                                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                if (PrintNow)
                                    DungChung.Ham.PrintReport(rep);
                                else
                                    frm.ShowDialog();
                            }
                            #endregion
                        }
                    }
                    break;
                #endregion
                #region XN huyết học
                case "XN huyết học":
                    #region Chí Linh
                    if (DungChung.Bien.MaBV == "30003") // Chí Linh
                    {
                        frmIn frm = new frmIn();
                        BaoCao.Rep_PhieuXNHuyetHoc_CL rep = new BaoCao.Rep_PhieuXNHuyetHoc_CL();
                        rep.MaBNhan.Value = _Mabn;
                        //rep.Status.Value = DungChung.Bien.InPhoi;

                        rep.SoPhieu.Value = idcls;
                        rep.paramIdCLS.Value = idcls;
                        var par = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                   join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                   join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                   select new { cls.MaCBth, cls.NgayThang, cls.CapCuu, cd.MaMay, cls.NgayTH, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, cls.MaKP }).ToList();
                        if (par.Count > 0)
                        {
                            if (!string.IsNullOrEmpty(par.FirstOrDefault().MaMay))
                            {
                                string _mamay = par.FirstOrDefault().MaMay;
                                var tenmay = _Data.DichVus.Where(p => p.PLoai > 2 && p.MaQD == _mamay).ToList();
                                if (tenmay.Count > 0)
                                {
                                    rep.MaMay.Value = "Phương pháp xét nghiệm: [" + tenmay.FirstOrDefault().TenDV + "] [" + _mamay + "]";
                                }
                                else
                                {
                                    rep.MaMay.Value = "Phương pháp xét nghiệm:";
                                }
                            }
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                            rep.ChanDoan.Value = arrThongTinBNKB[1];
                            rep.Buong.Value = arrThongTinBNKB[2];
                            rep.Giuong.Value = arrThongTinBNKB[3];
                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.MaBSDT.Value = par.FirstOrDefault().MaCB;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;

                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                            rep.TenBNhan.Value = par.FirstOrDefault().TenBNhan;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nam.Value = "X";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nu.Value = "X";
                            }
                            if (par.FirstOrDefault().SThe != null && par.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                                rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                                rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                                rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                                rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            bool capcuu = par.FirstOrDefault().CapCuu;
                            if (capcuu)
                            {
                                rep.CapCuu.Value = "X";
                            }
                            else rep.Thuong.Value = "X";
                            if (par.FirstOrDefault().NgayTH != null)
                            {
                                rep.paramNgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            }
                            else { rep.paramNgayTH.Value = "Ngày ..... tháng ...... năm....."; }
                            if (par.FirstOrDefault().NgayThang != null)
                            {
                                rep.paramNgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            }
                            else { rep.paramNgayCD.Value = "Ngày ..... tháng ...... năm....."; }
                        }
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        if (PrintNow)
                            DungChung.Ham.PrintReport(rep);
                        else
                            frm.ShowDialog();
                        break;
                    }
                    if (DungChung.Bien.MaBV == "02005")
                    {
                        frmIn frm1 = new frmIn();
                        BaoCao.Rep_PhieuXNHuyetHoc_VX03 rephhvx = new BaoCao.Rep_PhieuXNHuyetHoc_VX03();
                        rephhvx.MaBNhan.Value = _Mabn;
                        //rep1.Status.Value = DungChung.Bien.InPhoi;

                        var parhhvx = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                       join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                       select new { cls.NgayTH, cls.CapCuu, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, bn.DTuong, cls.MaCB, cls.MaKP, cls.MaCBth }).ToList();
                        if (parhhvx.Count > 0)
                        {
                            rephhvx.TenBNhan.Value = parhhvx.FirstOrDefault().TenBNhan.ToUpper();
                            rephhvx.DChi.Value = parhhvx.FirstOrDefault().DChi;
                            rephhvx.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                            rephhvx.DTuong.Value = parhhvx.FirstOrDefault().DTuong;
                            rephhvx.MsBSCD.Value = parhhvx.FirstOrDefault().MaCB;
                            rephhvx.KhoaBSCD.Value = parhhvx.FirstOrDefault().MaKP;
                            rephhvx.MsBSXN.Value = parhhvx.FirstOrDefault().MaCBth;
                            if (parhhvx.FirstOrDefault().NgayTH != null)
                                rephhvx.NgayTH.Value = DungChung.Ham.NgaySangChu(parhhvx.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                rephhvx.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            int gioiTinh = int.Parse(parhhvx.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rephhvx.GioiTinh.Value = "Nam";
                            }
                            else if (gioiTinh == 0)
                            {
                                rephhvx.GioiTinh.Value = "Nữ";
                            }
                            rephhvx.SThe.Value = parhhvx.FirstOrDefault().SThe;
                            bool capcuu = parhhvx.FirstOrDefault().CapCuu;
                            if (capcuu)
                            {
                                rephhvx.CapCuu.Value = "X";
                            }
                            else rephhvx.Thuong.Value = "X";

                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, parhhvx.FirstOrDefault().MaKP == null ? 0 : parhhvx.FirstOrDefault().MaKP.Value, true);
                            rephhvx.ChanDoan.Value = arrThongTinBNKB[1];
                            rephhvx.Buong.Value = arrThongTinBNKB[2];
                            rephhvx.Giuong.Value = arrThongTinBNKB[3];
                            rephhvx.Khoa.Value = arrThongTinBNKB[4];

                        }

                        var qhhhh = (from cls in _Data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idcls)
                                     join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                     join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                     join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                     group new { dvct } by new { dvct.TenDVct, clsct.KetQua, dvct.STT, dvct.TSBT } into kq
                                     select new { TenDVct = kq.Key.TenDVct, KetQua = kq.Key.KetQua, kq.Key.STT, kq.Key.TSBT }).OrderBy(p => p.STT).ToList();
                        if (qhhhh.Count > 0)
                        {
                            rephhvx.DataSource = qhhhh.ToList();
                            rephhvx.BindingData();
                            rephhvx.CreateDocument();
                            frm1.prcIN.PrintingSystem = rephhvx.PrintingSystem;
                            if (PrintNow)
                                DungChung.Ham.PrintReport(rephhvx);
                            else
                                frm1.ShowDialog();
                        }

                    }
                    #endregion
                    else
                    {
                        bool _inphieuDongMau = false;
                        #region 27023
                        if (DungChung.Bien.MaBV == "27023")
                        {
                            var qTendvct = (from cd in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                                            join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                            join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                            select new { dvct.TenDVct }).ToList();
                            foreach (var a in qTendvct)
                            {
                                if (a != null)
                                {
                                    if (a.ToString().ToLower().Contains("thrombin"))
                                    {
                                        _inphieuDongMau = true;
                                        break;
                                    }
                                    if (a.ToString().ToLower().Contains("thromboplastin") || a.ToString().ToLower().Contains("TCK"))
                                    {
                                        _inphieuDongMau = true;
                                        break;
                                    }
                                    if (a.ToString().ToLower().Contains("fibrinogen") || a.ToString().ToLower().Contains("định lượng yếu tố 1") || a.ToString().ToLower().Contains("phương pháp clauss"))
                                    {
                                        _inphieuDongMau = true;
                                        break;
                                    }
                                }
                            }
                        }
                        #endregion

                        #region Yên Mỹ
                        if (DungChung.Bien.MaBV == "33080")//In M?u Yên M?
                        {
                            frmIn frm = new frmIn();
                            BaoCao.Rep_PhieuXNHoaSinhMau_YM01 repym = new BaoCao.Rep_PhieuXNHoaSinhMau_YM01();
                            int _makpym = 0;
                            repym.TenBC.Value = ("Kết quả xét nghiệm huyết học").ToUpper();

                            var qym1 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                        select new { bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.NamSinh, cls.MaCB, cls.MaKP, cls.CapCuu, cls.MaCBth, cls.NgayTH }).ToList();
                            if (qym1.Count > 0)
                            {
                                _makpym = qym1.FirstOrDefault().MaKP == null ? 0 : qym1.FirstOrDefault().MaKP.Value;
                                repym.paramMaBN.Value = qym1.FirstOrDefault().MaBNhan;
                                repym.TenBNhan.Value = qym1.FirstOrDefault().TenBNhan;
                                repym.DChi.Value = qym1.FirstOrDefault().DChi;
                                repym.NamSinh.Value = Convert.ToInt32(qym1.FirstOrDefault().NamSinh);
                                repym.BSCD.Value = qym1.FirstOrDefault().MaCB;
                                repym.MaBSTH.Value = qym1.FirstOrDefault().MaCBth;
                                if (qym1.FirstOrDefault().NgayTH != null)
                                {
                                    repym.NgayTH.Value = DungChung.Ham.NgaySangChu(qym1.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                }
                                else { repym.NgayTH.Value = "...giờ, ngày ..... tháng ...... năm 20..."; }
                                int gioiTinh = int.Parse(qym1.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    repym.GTinh.Value = "Nam";
                                }
                                else if (gioiTinh == 0)
                                {
                                    repym.GTinh.Value = "Nữ";
                                }

                            }
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makpym, true);
                            repym.ChanDoan.Value = arrThongTinBNKB[1];
                            repym.MaKP.Value = _makpym;
                            repym.TenKP.Value = arrThongTinBNKB[4];

                            var qym2 = (from cls in _Data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idcls)
                                        join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                        join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                        join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        select new { dvct.MaDVct, dvct.TenDVct, dvct.TSBT, dvct.DonVi, dvct.TSBTnu, clsct.KetQua, STT = dvct.STT == null ? 0 : dvct.STT.Value }).OrderBy(p => p.STT).ThenBy(p => p.TenDVct).ToList();

                            if (qym2.Count > 0)
                            {
                                repym.DataSource = qym2.ToList();
                                repym.BindingData();
                                repym.CreateDocument();
                                frm.prcIN.PrintingSystem = repym.PrintingSystem;
                                if (PrintNow)
                                    DungChung.Ham.PrintReport(repym);
                                else
                                    frm.ShowDialog();
                            }

                            break;
                        }
                        #endregion
                        #region 30299
                        else if (DungChung.Bien.MaBV == "30299")
                        {
                            frmIn frm1 = new frmIn();
                            BaoCao.repPhieuXNHuyetHoc_LaoPhoiHD rep1 = new BaoCao.repPhieuXNHuyetHoc_LaoPhoiHD();
                            int _makp1 = 0;
                            rep1.MaBNhan.Value = _Mabn;
                            rep1.SoPhieu.Value = idcls;
                            var par1 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                        select new { cls.MaKP, cls.MaCBth, cls.NgayTH, cls.CapCuu, cls.NgayThang, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB }).ToList();
                            if (par1.Count > 0)
                            {
                                _makp1 = par1.FirstOrDefault().MaKP == null ? 0 : par1.FirstOrDefault().MaKP.Value;
                                rep1.MaCBDT.Value = par1.FirstOrDefault().MaCB;
                                rep1.Macb.Value = par1.FirstOrDefault().MaCBth;
                                rep1.TenBN.Value = par1.FirstOrDefault().TenBNhan.ToUpper();
                                rep1.DiaChi.Value = par1.FirstOrDefault().DChi;
                                rep1.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                                int gioiTinh = int.Parse(par1.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep1.Nu.Value = "/".ToUpper();
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep1.Nam.Value = "/".ToUpper();
                                }
                                if (par1.FirstOrDefault().SThe != null && par1.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep1.SThe1.Value = par1.FirstOrDefault().SThe.Substring(0, 3);
                                    rep1.SThe2.Value = par1.FirstOrDefault().SThe.Substring(3, 2);
                                    rep1.SThe3.Value = par1.FirstOrDefault().SThe.Substring(5, 2);
                                    rep1.SThe4.Value = par1.FirstOrDefault().SThe.Substring(7, 3);
                                    rep1.SThe5.Value = par1.FirstOrDefault().SThe.Substring(10, 5);
                                }
                                bool capcuu = par1.FirstOrDefault().CapCuu;
                                if (capcuu)
                                {
                                    rep1.CapCuu.Value = "X";
                                }
                                else rep1.Thuong.Value = "X";
                                if (par1.FirstOrDefault().NgayThang != null)
                                    rep1.NgayCD.Value = DungChung.Ham.NgaySangChu(par1.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                else
                                    rep1.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                if (par1.FirstOrDefault().NgayTH != null)
                                    rep1.NgayTH.Value = DungChung.Ham.NgaySangChu(par1.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep1.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            }
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp1, true);
                            rep1.ChanDoan.Value = arrThongTinBNKB[1];
                            rep1.Buong.Value = arrThongTinBNKB[2];
                            rep1.Giuong.Value = arrThongTinBNKB[3];
                            rep1.Khoa.Value = arrThongTinBNKB[4];

                            List<YCXN> qdv = (from tn in _Data.TieuNhomDVs.Where(p => p.TenRG == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.XNHuyetHoc)
                                              join dv in _Data.DichVus on tn.IdTieuNhom equals dv.IdTieuNhom
                                              join dvct in _Data.DichVucts on dv.MaDV equals dvct.MaDV
                                              group dv by dv into kq
                                              select new YCXN { MaDV = kq.Key.MaDV, MaQD = kq.Key.MaQD, TenDV = kq.Key.TenDV, SoTT = kq.Key.SoTT ?? 0 }).OrderBy(p => p.SoTT).ToList();
                            var qcd = _Data.ChiDinhs.Where(p => p.IdCLS == idcls).ToList();
                            foreach (YCXN yc in qdv)
                            {
                                if (qcd.Where(p => p.MaDV == yc.MaDV).Count() > 0)
                                    yc.ck = "x";
                            }

                            rep1.bindingData();
                            rep1.DataSource = qdv;
                            rep1.CreateDocument();
                            frm1.prcIN.PrintingSystem = rep1.PrintingSystem;
                            if (PrintNow)
                                DungChung.Ham.PrintReport(rep1);
                            else
                                frm1.ShowDialog();
                            break;
                        }
                        else if (DungChung.Bien.MaBV == "30004")
                        {
                            string TenKP = ""; string MaMay = "";
                            List<InXNTongHop> _ltn = new List<InXNTongHop>();
                            _ltn = (from cd in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                                    join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                    join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                                    join tndv in _Data.TieuNhomDVs on dv.IdTieuNhom equals tndv.IdTieuNhom
                                    join tn in _Data.DichVucts on clsct.MaDVct equals tn.MaDVct
                                    select new InXNTongHop
                                    {
                                        IdTieuNhom = tndv.IdTieuNhom,
                                        TenTN = tndv.TenTN,
                                        MaMay = cd.MaMay ?? "",
                                        IdCLS = cd.IdCLS ?? 0,
                                        IdCD = cd.IDCD,

                                    }).ToList();
                            if (_ltn.Count() > 0)
                            {
                                var kps = (from cls in _Data.CLS.Where(p => p.IdCLS == idcls)
                                           join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                           select new { kp.TenKP }).ToList();
                                CLS.InPhieu._inPhieuXNTongHop_30004(_Mabn, _ltn, false, TenKP = kps.FirstOrDefault().TenKP ?? "", MaMay);
                            }
                        }
                        #endregion
                        #region 01071
                        else if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                        {
                            InPhieuXNHuyetHoc_01070(_Mabn, idcls, _tieunhom);

                        }
                        #endregion
                        else if (_inphieuDongMau)
                        {

                            phieuXNDongMau(_Data, idcls, _tieunhom);
                        }
                        #region BV 27001
                        else if (DungChung.Bien.MaBV == "27001")
                        {
                            frmIn frm1 = new frmIn();

                            //BaoCao.rep_PhieuXNHuyetHoc_A5 rep1 = new BaoCao.rep_PhieuXNHuyetHoc_A5();
                            BaoCao.repPhieuXNHuyetHoc rep1 = new BaoCao.repPhieuXNHuyetHoc();

                            int _makp1 = 0;
                            rep1.MaBNhan.Value = _Mabn;
                            rep1.SoPhieu.Value = idcls;
                            var par1 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                        select new { cls.MaKP, cls.MaCBth, cls.NgayTH, cls.BarCode, cls.CapCuu, cls.NgayThang, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, cls.MaKPth }).ToList();
                            if (DungChung.Bien.MaBV == "27023")
                                rep1.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par1.Count > 0)
                                {
                                    int mabn = par1.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep1.So.Value = qvv.SoVV;
                                    else
                                        rep1.So.Value = "";
                                }
                            }
                            else
                                rep1.So.Value = idcls;

                            if (par1.Count > 0)
                            {
                                string maCBth = par1.FirstOrDefault().MaCBth;
                                var cbTH = _Data.CanBoes.FirstOrDefault(o => o.MaCB == maCBth);
                                rep1.hotenck.Value = cbTH != null ? cbTH.TenCB : "";
                                rep1.txtbarcode.Text = par1.FirstOrDefault().BarCode == null ? "" : ("Barcode: " + par1.FirstOrDefault().BarCode.ToString());
                                _makp1 = par1.FirstOrDefault().MaKP == null ? 0 : par1.FirstOrDefault().MaKP.Value;
                                rep1.MaCBDT.Value = par1.FirstOrDefault().MaCB;
                                rep1.Macb.Value = par1.FirstOrDefault().MaCBth;
                                rep1.TenBN.Value = par1.FirstOrDefault().TenBNhan.ToUpper();
                                rep1.DiaChi.Value = par1.FirstOrDefault().DChi;
                                rep1.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);

                                int gioiTinh = int.Parse(par1.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep1.Nu.Value = "/".ToUpper();
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep1.Nam.Value = "/".ToUpper();
                                }
                                if (par1.FirstOrDefault().SThe != null && par1.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep1.SThe1.Value = par1.FirstOrDefault().SThe.Substring(0, 3);
                                    rep1.SThe2.Value = par1.FirstOrDefault().SThe.Substring(3, 2);
                                    rep1.SThe3.Value = par1.FirstOrDefault().SThe.Substring(5, 2);
                                    rep1.SThe4.Value = par1.FirstOrDefault().SThe.Substring(7, 3);
                                    rep1.SThe5.Value = par1.FirstOrDefault().SThe.Substring(10, 5);
                                }
                                bool capcuu = par1.FirstOrDefault().CapCuu;
                                if (capcuu)
                                {
                                    rep1.CapCuu.Value = "X";
                                }
                                else rep1.Thuong.Value = "X";
                                if (par1.FirstOrDefault().NgayThang != null)
                                    rep1.NgayCD.Value = DungChung.Ham.NgaySangChu(par1.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                else
                                    rep1.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                if (par1.FirstOrDefault().NgayTH != null)
                                    rep1.NgayTH.Value = DungChung.Ham.NgaySangChu(par1.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep1.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            }
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp1, true);
                            rep1.ChanDoan.Value = arrThongTinBNKB[1];
                            rep1.Buong.Value = arrThongTinBNKB[2];
                            rep1.Giuong.Value = arrThongTinBNKB[3];

                            rep1.Khoa.Value = arrThongTinBNKB[4];
                            if (DungChung.Bien.MaBV == "30010")
                            {
                                int mkpth = Convert.ToInt32(par1.FirstOrDefault().MaKPth.Value);
                                rep1.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                            }//yenbg1
                            rep1.TaoPhieu(1);
                            rep1.CreateDocument();
                            frm1.prcIN.PrintingSystem = rep1.PrintingSystem;
                            if (PrintNow)
                                DungChung.Ham.PrintReport(rep1);
                            else
                                frm1.ShowDialog();

                        }
                        #endregion
                        #region chung
                        else
                        {
                            frmIn frm1 = new frmIn();

                            BaoCao.repPhieuXNHuyetHoc rep1 = new BaoCao.repPhieuXNHuyetHoc(_lIdCls, _lMaDV, _IdCD);

                            int _makp1 = 0;
                            rep1.MaBNhan.Value = _Mabn;
                            rep1.SoPhieu.Value = idcls;
                            var par1 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                        join bnkb in _Data.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                                        join cb in _Data.CanBoes on cls.MaCB equals cb.MaCB
                                        select new { bnkb.ChanDoanBD, cls.ChanDoan, cls.MaKP, cls.MaCBth, cb.TenCB, cls.NgayTH, cls.CapCuu, cls.NgayThang, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, cls.Status, cls.MaKPth }).ToList();
                            if (DungChung.Bien.MaBV == "27023")
                                rep1.So.Value = _so;
                            if (DungChung.Bien.MaBV == "24012")
                            {
                                rep1.lbl_ICD_24012_1.Visible = true;
                                rep1.lbl_ICD_240122.Visible = true;
                                rep1.Parameters["MaICD"].Value = arrThongTinBNKB[0];
                            }
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par1.Count > 0)
                                {
                                    int mabn = par1.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep1.So.Value = qvv.SoVV;
                                    else
                                        rep1.So.Value = "";
                                }
                            }
                            else
                                rep1.So.Value = idcls;

                            if (par1.Count > 0)
                            {
                                if (DungChung.Bien.MaBV == "12122")
                                {
                                    if (par1.FirstOrDefault().Status == 0)
                                    {
                                        rep1.lab53.Visible = false;
                                        rep1.lab55.Visible = false;
                                        rep1.colTenTKXN.Visible = false;
                                    }
                                    else
                                    {
                                        rep1.lab54.Visible = false;
                                        rep1.lab52.Visible = false;
                                        rep1.colTenBSDT.Visible = false;
                                    }
                                }
                                _makp1 = par1.FirstOrDefault().MaKP == null ? 0 : par1.FirstOrDefault().MaKP.Value;
                                if (DungChung.Bien.MaBV == "30010")
                                {
                                    string maCBth = par1.FirstOrDefault().MaCBth;
                                    var cbTH = _Data.CanBoes.FirstOrDefault(o => o.MaCB == maCBth);
                                    rep1.hotenck.Value = cbTH != null ? "Họ tên: Người thực hiện : " + cbTH.TenCB : "";
                                }
                                else if (DungChung.Bien.MaBV == "30009")
                                {
                                    string maCBth = par1.FirstOrDefault().MaCBth;
                                    var cbTH = _Data.CanBoes.FirstOrDefault(o => o.MaCB == maCBth);
                                    rep1.hotenck.Value = cbTH != null ? "Người thực hiện:" + cbTH.TenCB : "";

                                }
                                else if (DungChung.Bien.MaBV == "30012")
                                {
                                    string maCBth = par1.FirstOrDefault().MaCBth;
                                    var cbth = _Data.CanBoes.FirstOrDefault(o => o.MaCB == maCBth);
                                    rep1.hotenck.Value = cbth != null ? DungChung.Ham._getTenCB(_Data, maCBth) : "";
                                }
                                else if (DungChung.Bien.MaBV == "30007")
                                {
                                    string maCBth = par1.FirstOrDefault().MaCBth;
                                    var cbTH = _Data.CanBoes.FirstOrDefault(o => o.MaCB == maCBth);
                                    rep1.hotenck.Value = cbTH != null ? cbTH.TenCB : "";
                                }
                                else if (DungChung.Bien.MaBV == "27183")
                                {
                                    string maCBth = par1.FirstOrDefault().MaCBth;
                                    var cbTH = _Data.CanBoes.FirstOrDefault(o => o.MaCB == maCBth);
                                    rep1.hotenck.Value = cbTH != null ? cbTH.CapBac + ". " + cbTH.TenCB : "";
                                }

                                rep1.MaCBDT.Value = par1.FirstOrDefault().MaCB;
                                rep1.Macb.Value = par1.FirstOrDefault().MaCBth;
                                rep1.TenBN.Value = par1.FirstOrDefault().TenBNhan.ToUpper();
                                rep1.DiaChi.Value = par1.FirstOrDefault().DChi;
                                rep1.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                                int gioiTinh = int.Parse(par1.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep1.Nu.Value = "/".ToUpper();
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep1.Nam.Value = "/".ToUpper();
                                }
                                if (par1.FirstOrDefault().SThe != null && par1.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep1.SThe1.Value = par1.FirstOrDefault().SThe.Substring(0, 3);
                                    rep1.SThe2.Value = par1.FirstOrDefault().SThe.Substring(3, 2);
                                    rep1.SThe3.Value = par1.FirstOrDefault().SThe.Substring(5, 2);
                                    rep1.SThe4.Value = par1.FirstOrDefault().SThe.Substring(7, 3);
                                    rep1.SThe5.Value = par1.FirstOrDefault().SThe.Substring(10, 5);
                                }
                                bool capcuu = par1.FirstOrDefault().CapCuu;
                                if (capcuu)
                                {
                                    rep1.CapCuu.Value = "X";
                                }
                                else rep1.Thuong.Value = "X";
                                if (DungChung.Bien.MaBV == "26007")
                                {
                                    rep1.NgayCD.Value = "..... giờ ....phút, ngày ..... tháng ..... năm .....";
                                    if (par1.FirstOrDefault().NgayTH != null)
                                        rep1.NgayTH.Value = DungChung.Ham.NgaySangChu(par1.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep1.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                }
                                else
                                {
                                    if (par1.FirstOrDefault().NgayThang != null)
                                        rep1.NgayCD.Value = DungChung.Ham.NgaySangChu(par1.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep1.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    if (par1.FirstOrDefault().NgayTH != null)
                                        rep1.NgayTH.Value = DungChung.Ham.NgaySangChu(par1.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep1.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                }
                            }
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp1, true);
                            if (DungChung.Bien.MaBV == "20001")
                                rep1.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(arrThongTinBNKB[1], arrThongTinBNKB[6]);
                            else
                            {
                                rep1.ChanDoan.Value = (par1.FirstOrDefault().ChanDoanBD != null || par1.FirstOrDefault().ChanDoanBD != "") && DungChung.Bien.MaBV == "24272" ? par1.FirstOrDefault().ChanDoanBD + ";" : "";
                                if (DungChung.Bien.MaBV != "24272")
                                {
                                    rep1.ChanDoan.Value += arrThongTinBNKB[1];
                                }
                            }
                            rep1.Buong.Value = arrThongTinBNKB[2];
                            rep1.Giuong.Value = arrThongTinBNKB[3];

                            rep1.Khoa.Value = arrThongTinBNKB[4];
                            rep1.xrLabel97.Text = "- " + arrThongTinBNKB[4];
                            if (DungChung.Bien.MaBV == "30010")
                            {
                                int mkpth = Convert.ToInt32(par1.FirstOrDefault().MaKPth.Value);
                                rep1.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                            }//yenbg1
                            rep1.TaoPhieu(1);
                            rep1.CreateDocument();
                            frm1.prcIN.PrintingSystem = rep1.PrintingSystem;
                            if (PrintNow)
                                DungChung.Ham.PrintReport(rep1);
                            else
                                frm1.ShowDialog();

                        }
                        #endregion
                    }

                    break;
                #endregion
                #region XN nước tiểu
                case "XN nước tiểu":
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                    {
                        InPhieuXNHuyetHoc_01070(_Mabn, idcls, _tieunhom);
                    }
                    #region 30012
                    else if (DungChung.Bien.MaBV == "30012")
                    {
                        frmIn frm3 = new frmIn();
                        BaoCao.Rep_PhieuXNKhac_A4 rep3 = new BaoCao.Rep_PhieuXNKhac_A4();
                        rep3.SoPhieu.Value = idcls;
                        int _makp3 = 0;
                        rep3.TenBPham.Value = "Bệnh phẩm: sinh hóa nước tiểu";
                        var par3 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                    join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                    join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                    join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                    join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                    join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                                    group new { dvct, clsct, dv, bn } by new { bn.GTinh, cls3.NgayTH, cls3.NgayThang, bn.MaBNhan, bn.SThe, bn.TenBNhan, bn.DChi, cls3.MaKP, cls3.MaKPth, cls3.MaCB, cls3.MaCBth, dvct.STT, dv.TenDV, dvct.TenDVct, clsct.KetQua, dvct.DonVi } into kq
                                    select new { kq.Key.GTinh, kq.Key.SThe, kq.Key.NgayTH, NgayCD = kq.Key.NgayThang, kq.Key.MaCB, kq.Key.MaKP, kq.Key.MaCBth, kq.Key.TenBNhan, kq.Key.MaBNhan, kq.Key.DChi, kq.Key.TenDV, YC = kq.Key.TenDVct, KQ = kq.Key.KetQua, kq.Key.DonVi, kq.Key.STT }).OrderBy(p => p.STT).ToList();
                        if (par3.Count > 0)
                        {
                            _makp3 = par3.FirstOrDefault().MaKP == null ? 0 : par3.FirstOrDefault().MaKP.Value;
                            rep3.Macb.Value = par3.FirstOrDefault().MaCBth;
                            rep3.MaCBDT.Value = par3.FirstOrDefault().MaCB;
                            rep3.DiaChi.Value = par3.FirstOrDefault().DChi;
                            rep3.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                            rep3.MaBNhan.Value = par3.FirstOrDefault().MaBNhan;
                            rep3.TenBNhan.Value = par3.FirstOrDefault().TenBNhan.ToUpper();

                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp3, true);
                            rep3.ChanDoan.Value = arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];
                            rep3.Khoa.Value = arrThongTinBNKB[4];

                            if (par3.FirstOrDefault().NgayCD != null)

                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayCD.Value, DungChung.Bien.FormatDate);
                            else rep3.NgayCD.Value = "Ngày .... tháng ..... năm .....";
                            if (par3.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else

                                rep3.NgayTH.Value = "Ngày .... tháng ..... năm .....";
                            int gioiTinh = int.Parse(par3.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep3.Nam.Value = "X".ToUpper();

                            }
                            else if (gioiTinh == 0)
                            {
                                rep3.Nu.Value = "X".ToUpper();
                            }
                            if (par3.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep3.SThe1.Value = par3.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par3.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par3.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par3.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par3.FirstOrDefault().SThe.Substring(10, 5);
                            }
                        }
                        rep3.DataSource = par3;
                        rep3.BindingData();
                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        if (PrintNow)
                            DungChung.Ham.PrintReport(rep3);
                        else
                            frm3.ShowDialog();
                        return;
                    }
                    #endregion
                    #region 30004
                    else if (DungChung.Bien.MaBV == "30004")
                    {
                        string TenKP = ""; string MaMay = "";
                        List<InXNTongHop> _ltn = new List<InXNTongHop>();
                        _ltn = (from cd in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                                join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                                join tndv in _Data.TieuNhomDVs on dv.IdTieuNhom equals tndv.IdTieuNhom
                                join tn in _Data.DichVucts on clsct.MaDVct equals tn.MaDVct
                                select new InXNTongHop
                                {
                                    IdTieuNhom = tndv.IdTieuNhom,
                                    TenTN = tndv.TenTN,
                                    MaMay = cd.MaMay ?? "",
                                    IdCLS = cd.IdCLS ?? 0,
                                    IdCD = cd.IDCD,

                                }).ToList();
                        if (_ltn.Count() > 0)
                        {
                            var kps = (from cls in _Data.CLS.Where(p => p.IdCLS == idcls)
                                       join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                       select new { kp.TenKP }).ToList();
                            CLS.InPhieu._inPhieuXNTongHop_30004(_Mabn, _ltn, false, TenKP = kps.FirstOrDefault().TenKP ?? "", MaMay);
                        }
                    }
                    #endregion
                    #region 30009
                    else if (DungChung.Bien.MaBV == "30009")// BV Thanh Hà
                    {
                        frmIn frm2 = new frmIn();
                        BaoCao.Rep_PhieuXNNuocTieu_TH rep2 = new BaoCao.Rep_PhieuXNNuocTieu_TH();
                        rep2.MaBNhan.Value = _Mabn;
                        int _mkp2 = 0;
                        rep2.SoPhieu.Value = idcls;
                        var par2 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                    join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                    join CD in _Data.ChiDinhs on cls.IdCLS equals CD.IdCLS
                                    join clsct in _Data.CLScts on CD.IDCD equals clsct.IDCD
                                    select new { cls.MaKP, cls.NgayThang, cls.NgayTH, cls.CapCuu, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, MaCBDT = cls.MaCB, cls.MaCBth }).ToList();
                        if (par2.Count > 0)
                        {
                            _mkp2 = par2.FirstOrDefault().MaKP == null ? 0 : par2.FirstOrDefault().MaKP.Value;
                            rep2.Macb.Value = par2.FirstOrDefault().MaCBth;
                            rep2.MaCBDT.Value = par2.FirstOrDefault().MaCBDT;
                            rep2.DiaChi.Value = par2.FirstOrDefault().DChi;
                            rep2.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                            rep2.TenBNhan.Value = par2.FirstOrDefault().TenBNhan.ToUpper();
                            int gioiTinh = par2.FirstOrDefault().GTinh.Value;
                            if (gioiTinh == 1)
                            {
                                rep2.Nu.Value = "/".ToUpper();
                            }
                            else if (gioiTinh == 0)
                            {
                                rep2.Nam.Value = "/".ToUpper();
                            }
                            if (par2.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep2.SThe1.Value = par2.FirstOrDefault().SThe.Substring(0, 3);
                                rep2.SThe2.Value = par2.FirstOrDefault().SThe.Substring(3, 2);
                                rep2.SThe3.Value = par2.FirstOrDefault().SThe.Substring(5, 2);
                                rep2.SThe4.Value = par2.FirstOrDefault().SThe.Substring(7, 3);
                                rep2.SThe5.Value = par2.FirstOrDefault().SThe.Substring(10, 5);
                            }
                            //
                            bool capcuu = par2.FirstOrDefault().CapCuu;
                            if (capcuu)
                            {
                                rep2.CapCuu.Value = "X";
                            }
                            else rep2.Thuong.Value = "X";
                        }
                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _mkp2, true);
                        rep2.ChanDoan.Value = arrThongTinBNKB[1];
                        rep2.Buong.Value = arrThongTinBNKB[2];
                        rep2.Giuong.Value = arrThongTinBNKB[3];
                        rep2.Khoa.Value = arrThongTinBNKB[4];
                        if (par2.FirstOrDefault().NgayThang != null)
                            rep2.NgayCD.Value = DungChung.Ham.NgaySangChu(par2.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                        else
                            rep2.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                        if (par2.FirstOrDefault().NgayTH != null)
                            rep2.NgayTH.Value = DungChung.Ham.NgaySangChu(par2.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                        else
                            rep2.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                        rep2.CreateDocument();
                        frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                        if (PrintNow)
                            DungChung.Ham.PrintReport(rep2);
                        else
                            frm2.ShowDialog();
                    }
                    #endregion
                    else
                    {
                        #region 33080
                        if (DungChung.Bien.MaBV == "33080")//In M?u Yên M?
                        {
                            frmIn frm = new frmIn();
                            BaoCao.Rep_PhieuXNHoaSinhMau_YM01 repym = new BaoCao.Rep_PhieuXNHoaSinhMau_YM01();
                            int _makpym = 0;
                            repym.TenBC.Value = ("kết quả xét nghiệm nước tiểu").ToUpper();

                            var qym1 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                        select new { bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.NamSinh, cls.MaCB, cls.MaKP, cls.MaCBth, cls.NgayTH }).ToList();
                            if (qym1.Count > 0)
                            {
                                _makpym = qym1.FirstOrDefault().MaKP == null ? 0 : qym1.FirstOrDefault().MaKP.Value;
                                repym.TenBNhan.Value = qym1.FirstOrDefault().TenBNhan;
                                repym.DChi.Value = qym1.FirstOrDefault().DChi;
                                repym.NamSinh.Value = Convert.ToInt32(qym1.FirstOrDefault().NamSinh);
                                repym.BSCD.Value = qym1.FirstOrDefault().MaCB;
                                repym.MaBSTH.Value = qym1.FirstOrDefault().MaCBth;
                                if (qym1.FirstOrDefault().NgayTH != null)
                                {
                                    repym.NgayTH.Value = DungChung.Ham.NgaySangChu(qym1.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                }
                                else { repym.NgayTH.Value = "Ngày ..... tháng ...... năm 2015"; }
                                int gioiTinh = int.Parse(qym1.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    repym.GTinh.Value = "Nam";
                                }
                                else if (gioiTinh == 0)
                                {
                                    repym.GTinh.Value = "Nữ";
                                }

                            }

                            var qym2 = (from cls in _Data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idcls)
                                        join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                        join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                        join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        select new { dvct.MaDVct, dvct.TenDVct, dvct.TSBT, dvct.TSBTn, dvct.DonVi, dvct.TSBTnu, clsct.KetQua, dvct.STT }).OrderBy(p => p.STT).ThenBy(p => p.TenDVct).ToList();
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makpym, true);
                            repym.ChanDoan.Value = arrThongTinBNKB[1];
                            repym.TenKP.Value = arrThongTinBNKB[4];
                            if (qym2.Count > 0)
                            {

                                repym.DataSource = qym2.ToList();
                                repym.BindingData();
                                repym.CreateDocument();
                                frm.prcIN.PrintingSystem = repym.PrintingSystem;
                                if (PrintNow)
                                    DungChung.Ham.PrintReport(repym);
                                else
                                    frm.ShowDialog();
                            }
                        }
                        #endregion
                        else
                        {
                            #region 04018
                            if (DungChung.Bien.MaBV == "04018")
                            {
                                frmIn frm3 = new frmIn();
                                BaoCao.Rep_PhieuXNKhac_A5_d rep3 = new BaoCao.Rep_PhieuXNKhac_A5_d();
                                rep3.SoPhieu.Value = idcls;
                                int _makp3 = 0;
                                rep3.TenBPham.Value = "Bệnh phẩm: sinh hóa nước tiểu";
                                var par3 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                            join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                            join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                            join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                            join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                            join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                                            group new { dvct, clsct, dv, bn } by new { bn.GTinh, cls3.NgayTH, cls3.NgayThang, bn.MaBNhan, bn.SThe, bn.TenBNhan, bn.DChi, cls3.MaKP, cls3.MaKPth, cls3.MaCB, cls3.MaCBth, dvct.STT, dv.TenDV, dvct.TenDVct, clsct.KetQua, dvct.DonVi } into kq
                                            select new { kq.Key.GTinh, kq.Key.SThe, kq.Key.NgayTH, NgayCD = kq.Key.NgayThang, kq.Key.MaCB, kq.Key.MaKP, kq.Key.MaCBth, kq.Key.TenBNhan, kq.Key.MaBNhan, kq.Key.DChi, kq.Key.TenDV, YC = kq.Key.TenDVct, KQ = kq.Key.KetQua, kq.Key.DonVi, kq.Key.STT }).OrderBy(p => p.STT).ToList();
                                if (par3.Count > 0)
                                {
                                    _makp3 = par3.FirstOrDefault().MaKP == null ? 0 : par3.FirstOrDefault().MaKP.Value;
                                    rep3.Macb.Value = par3.FirstOrDefault().MaCBth;
                                    rep3.MaCBDT.Value = par3.FirstOrDefault().MaCB;
                                    rep3.DiaChi.Value = par3.FirstOrDefault().DChi;
                                    rep3.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                                    rep3.MaBNhan.Value = par3.FirstOrDefault().MaBNhan;
                                    rep3.TenBNhan.Value = par3.FirstOrDefault().TenBNhan.ToUpper();

                                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp3, true);
                                    rep3.ChanDoan.Value = arrThongTinBNKB[1];
                                    rep3.Buong.Value = arrThongTinBNKB[2];
                                    rep3.Giuong.Value = arrThongTinBNKB[3];
                                    rep3.Khoa.Value = arrThongTinBNKB[4];

                                    if (par3.FirstOrDefault().NgayCD != null)

                                        rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayCD.Value, DungChung.Bien.FormatDate);
                                    else rep3.NgayCD.Value = "Ngày .... tháng ..... năm .....";
                                    if (par3.FirstOrDefault().NgayTH != null)
                                        rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else

                                        rep3.NgayTH.Value = "Ngày .... tháng ..... năm .....";
                                    int gioiTinh = int.Parse(par3.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep3.Nam.Value = "X".ToUpper();

                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep3.Nu.Value = "X".ToUpper();
                                    }




                                    if (par3.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep3.SThe1.Value = par3.FirstOrDefault().SThe.Substring(0, 3);
                                        rep3.SThe2.Value = par3.FirstOrDefault().SThe.Substring(3, 2);
                                        rep3.SThe3.Value = par3.FirstOrDefault().SThe.Substring(5, 2);
                                        rep3.SThe4.Value = par3.FirstOrDefault().SThe.Substring(7, 3);
                                        rep3.SThe5.Value = par3.FirstOrDefault().SThe.Substring(10, 5);
                                    }
                                }
                                rep3.DataSource = par3;
                                rep3.BindingData();
                                rep3.CreateDocument();
                                frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                                if (PrintNow)
                                    DungChung.Ham.PrintReport(rep3);
                                else
                                    frm3.ShowDialog();
                            }
                            #endregion
                            #region 27001
                            else if (DungChung.Bien.MaBV == "27001")
                            {
                                frmIn frm2 = new frmIn();
                                //BaoCao.Rep_PhieuXNNuocTieu_A5_27001 rep2 = new BaoCao.Rep_PhieuXNNuocTieu_A5_27001();
                                BaoCao.Rep_PhieuXNNuocTieu_27001 rep2 = new BaoCao.Rep_PhieuXNNuocTieu_27001();
                                rep2.MaBNhan.Value = _Mabn;
                                int _makp2 = 0;
                                //rep.Status.Value = DungChung.Bien.InPhoi;

                                // int cls2 = Convert.ToInt32(GrvNhomDV.GetFocusedRowCellValue("IDCD"));
                                rep2.SoPhieu.Value = idcls;
                                var par2 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                            join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                            join CD in _Data.ChiDinhs on cls.IdCLS equals CD.IdCLS
                                            join clsct in _Data.CLScts on CD.IDCD equals clsct.IDCD
                                            select new { cls.MaKP, cls.NgayThang, cls.BarCode, cls.NgayTH, cls.CapCuu, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, MaCBDT = cls.MaCB, cls.MaCBth }).ToList();
                                if (par2.Count > 0)
                                {
                                    rep2.txtbarcode.Text = par2.FirstOrDefault().BarCode == null ? "" : ("Barcode: " + par2.FirstOrDefault().BarCode.ToString());
                                    _makp2 = par2.FirstOrDefault().MaKP == null ? 0 : par2.FirstOrDefault().MaKP.Value;
                                    rep2.Macb.Value = par2.FirstOrDefault().MaCBth;
                                    rep2.MaCBDT.Value = par2.FirstOrDefault().MaCBDT;
                                    rep2.DiaChi.Value = par2.FirstOrDefault().DChi;
                                    rep2.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                                    rep2.TenBNhan.Value = par2.FirstOrDefault().TenBNhan.ToUpper();
                                    int gioiTinh = int.Parse(par2.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep2.Nu.Value = "/".ToUpper();
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep2.Nam.Value = "/".ToUpper();
                                    }
                                    if (par2.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep2.SThe1.Value = par2.FirstOrDefault().SThe.Substring(0, 3);
                                        rep2.SThe2.Value = par2.FirstOrDefault().SThe.Substring(3, 2);
                                        rep2.SThe3.Value = par2.FirstOrDefault().SThe.Substring(5, 2);
                                        rep2.SThe4.Value = par2.FirstOrDefault().SThe.Substring(7, 3);
                                        rep2.SThe5.Value = par2.FirstOrDefault().SThe.Substring(10, 5);
                                    }
                                    bool capcuu = par2.FirstOrDefault().CapCuu;
                                    if (capcuu)
                                    {
                                        rep2.CapCuu.Value = "X";
                                    }
                                    else rep2.Thuong.Value = "X";
                                }
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp2, true);
                                rep2.ChanDoan.Value = arrThongTinBNKB[1];
                                rep2.Buong.Value = arrThongTinBNKB[2];
                                rep2.Giuong.Value = arrThongTinBNKB[3];
                                rep2.Khoa.Value = arrThongTinBNKB[4];

                                if (par2.FirstOrDefault().NgayThang != null)

                                    rep2.NgayCD.Value = DungChung.Ham.NgaySangChu(par2.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                else
                                    rep2.NgayCD.Value = "Ngày .... tháng ..... năm .....";
                                if (par2.FirstOrDefault().NgayTH != null)
                                    rep2.NgayTH.Value = DungChung.Ham.NgaySangChu(par2.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep2.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                rep2.CreateDocument();
                                frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                                if (PrintNow)
                                    DungChung.Ham.PrintReport(rep2);
                                else
                                    frm2.ShowDialog();

                            }
                            #endregion
                            #region 30004
                            else if (DungChung.Bien.MaBV == "30004")
                            {
                                frmIn frm2 = new frmIn();
                                BaoCao.Rep_PhieuXNNuocTieu_30004 rep2 = new BaoCao.Rep_PhieuXNNuocTieu_30004();
                                rep2.MaBNhan.Value = _Mabn;
                                int _makp2 = 0;
                                //rep.Status.Value = DungChung.Bien.InPhoi;

                                // int cls2 = Convert.ToInt32(GrvNhomDV.GetFocusedRowCellValue("IDCD"));
                                rep2.SoPhieu.Value = idcls;
                                var par2 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                            join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                            join CD in _Data.ChiDinhs on cls.IdCLS equals CD.IdCLS
                                            join clsct in _Data.CLScts on CD.IDCD equals clsct.IDCD
                                            select new { cls.MaKP, cls.NgayThang, cls.NgayTH, cls.CapCuu, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, MaCBDT = cls.MaCB, cls.MaCBth, CD.Status }).ToList();
                                if (par2.Count > 0)
                                {
                                    if (DungChung.Bien.MaBV == "12122")
                                    {
                                        if (par2.FirstOrDefault().Status == 0)
                                        {
                                            rep2.lab91.Visible = false;
                                            rep2.lab92.Visible = false;
                                            rep2.colTKXN.Visible = false;
                                        }
                                        else
                                        {
                                            rep2.lab89.Visible = false;
                                            rep2.lab90.Visible = false;
                                            rep2.colBSDT.Visible = false;
                                        }
                                    }
                                    _makp2 = par2.FirstOrDefault().MaKP == null ? 0 : par2.FirstOrDefault().MaKP.Value;
                                    rep2.Macb.Value = par2.FirstOrDefault().MaCBth;
                                    rep2.MaCBDT.Value = par2.FirstOrDefault().MaCBDT;
                                    rep2.DiaChi.Value = par2.FirstOrDefault().DChi;
                                    rep2.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                                    rep2.TenBNhan.Value = par2.FirstOrDefault().TenBNhan.ToUpper();
                                    int gioiTinh = int.Parse(par2.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep2.Nu.Value = "/".ToUpper();
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep2.Nam.Value = "/".ToUpper();
                                    }
                                    if (par2.FirstOrDefault().SThe.Length >= 15)
                                    {
                                        rep2.SThe1.Value = par2.FirstOrDefault().SThe.Substring(0, 3);
                                        rep2.SThe2.Value = par2.FirstOrDefault().SThe.Substring(3, 2);
                                        rep2.SThe3.Value = par2.FirstOrDefault().SThe.Substring(5, 2);
                                        rep2.SThe4.Value = par2.FirstOrDefault().SThe.Substring(7, 3);
                                        rep2.SThe5.Value = par2.FirstOrDefault().SThe.Substring(10, 5);
                                    }
                                    bool capcuu = par2.FirstOrDefault().CapCuu;
                                    if (capcuu)
                                    {
                                        rep2.CapCuu.Value = "X";
                                    }
                                    else rep2.Thuong.Value = "X";
                                }
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp2, true);
                                rep2.ChanDoan.Value = arrThongTinBNKB[1];
                                rep2.Buong.Value = arrThongTinBNKB[2];
                                rep2.Giuong.Value = arrThongTinBNKB[3];
                                rep2.Khoa.Value = arrThongTinBNKB[4];

                                if (par2.FirstOrDefault().NgayThang != null)
                                    rep2.NgayCD.Value = DungChung.Ham.NgaySangChu(par2.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                else
                                    rep2.NgayCD.Value = "Ngày .... tháng ..... năm .....";
                                if (par2.FirstOrDefault().NgayTH != null)
                                    rep2.NgayTH.Value = DungChung.Ham.NgaySangChu(par2.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else
                                    rep2.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                rep2.CreateDocument();
                                frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                                if (PrintNow)
                                    DungChung.Ham.PrintReport(rep2);
                                else
                                    frm2.ShowDialog();
                            }
                            #endregion
                            #region chung
                            else
                            {
                                frmIn frm2 = new frmIn();
                                BaoCao.Rep_PhieuXNNuocTieu rep2 = new BaoCao.Rep_PhieuXNNuocTieu();
                                rep2.MaBNhan.Value = _Mabn;
                                int _makp2 = 0;
                                //rep.Status.Value = DungChung.Bien.InPhoi;

                                // int cls2 = Convert.ToInt32(GrvNhomDV.GetFocusedRowCellValue("IDCD"));
                                rep2.SoPhieu.Value = idcls;
                                var par2 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                            join bnkb in _Data.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                                            join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                            join CD in _Data.ChiDinhs on cls.IdCLS equals CD.IdCLS
                                            join clsct in _Data.CLScts on CD.IDCD equals clsct.IDCD
                                            where bnkb.MaKP == cls.MaKP
                                            select new { bnkb.ChanDoanBD, bnkb.MaICD, bnkb.MaICD2, cls.MaKP, cls.NgayThang, CD.MaMay, cls.NgayTH, cls.CapCuu, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, MaCBDT = cls.MaCB, cls.MaCBth, CD.Status, bn.NgaySinh, bn.ThangSinh, bn.NamSinh, bn.PID, bn.SoHSBA }).ToList();

                                var par3 = (from cls in _Data.CLS.Where(p => p.MaBNhan == _Mabn)
                                            join cd in _Data.ChiDinhs.Where(p => p.IdCLS == idcls) on cls.IdCLS equals cd.IdCLS
                                            join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                            join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                            join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                                            select new
                                            {
                                                dvct.TenDVct,
                                                KetQua = clsct.KetQua + " " + dvct.DonVi,
                                                dvct.TSBT,
                                                dv.TenDV,
                                            }).ToList();


                                if (par2.Count > 0)
                                {

                                    if (DungChung.Bien.MaBV == "30003" && !string.IsNullOrEmpty(par2.FirstOrDefault().MaMay))
                                    {
                                        string _mamay = par2.FirstOrDefault().MaMay;
                                        var tenmay = _Data.DichVus.Where(p => p.PLoai > 2 && p.MaQD == _mamay).ToList();
                                        if (tenmay.Count > 0)
                                        {
                                            rep2.MaMay.Value = "Phương pháp xét nghiệm: [" + tenmay.FirstOrDefault().TenDV + "] [" + _mamay + "]";
                                        }
                                        else
                                        {
                                            rep2.MaMay.Value = "Phương pháp xét nghiệm:";
                                        }
                                    }
                                    if (DungChung.Bien.MaBV == "12122")
                                    {
                                        if (par2.FirstOrDefault().Status == 0)
                                        {
                                            rep2.lab91.Visible = false;
                                            rep2.lab92.Visible = false;
                                            rep2.colTKXN.Visible = false;
                                        }
                                        else
                                        {
                                            rep2.lab89.Visible = false;
                                            rep2.lab90.Visible = false;
                                            rep2.colBSDT.Visible = false;
                                        }
                                    }
                                    if (DungChung.Bien.MaBV == "24012")
                                    {
                                        rep2.lbl_icd_24012_1.Visible = true;
                                        rep2.lbl_icd_24012_2.Visible = true;
                                        rep2.Parameters["MaICD"].Value = par2.First().MaICD + ", " + par2.First().MaICD2;
                                    }
                                    _makp2 = par2.FirstOrDefault().MaKP == null ? 0 : par2.FirstOrDefault().MaKP.Value;
                                    rep2.Macb.Value = par2.FirstOrDefault().MaCBth;
                                    rep2.PID.Value = par2.FirstOrDefault().PID;
                                    rep2.Mabenhan.Value = par2.FirstOrDefault().SoHSBA;
                                    rep2.TenCQCQ.Value = DungChung.Bien.TenCQCQ.ToUpper();
                                    rep2.TenCQ.Value = DungChung.Bien.TenCQ.ToUpper();
                                    rep2.MaCBDT.Value = par2.FirstOrDefault().MaCBDT;
                                    rep2.DiaChi.Value = par2.FirstOrDefault().DChi;
                                    rep2.NamSinh.Value = par2.FirstOrDefault().NamSinh;
                                    rep2.Tuoi.Value = DungChung.Bien.MaBV == "14018" ? DungChung.Ham.CalculateAge(par2.FirstOrDefault().NgaySinh, par2.FirstOrDefault().ThangSinh, par2.FirstOrDefault().NamSinh, "tháng.") : DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                                    rep2.TenBNhan.Value = par2.FirstOrDefault().TenBNhan.ToUpper();

                                    int gioiTinh = int.Parse(par2.FirstOrDefault().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep2.Nu.Value = "/".ToUpper();
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep2.Nam.Value = "/".ToUpper();
                                    }
                                    if (DungChung.Bien.MaBV != "14018")
                                    {
                                        if (par2.FirstOrDefault().SThe.Length >= 15)
                                        {
                                            rep2.SThe1.Value = par2.FirstOrDefault().SThe.Substring(0, 3);
                                            rep2.SThe2.Value = par2.FirstOrDefault().SThe.Substring(3, 2);
                                            rep2.SThe3.Value = par2.FirstOrDefault().SThe.Substring(5, 2);
                                            rep2.SThe4.Value = par2.FirstOrDefault().SThe.Substring(7, 3);
                                            rep2.SThe5.Value = par2.FirstOrDefault().SThe.Substring(10, 5);
                                        }
                                    }
                                    else
                                    {
                                        if (gioiTinh == 1)
                                        {
                                            rep2.Gioitinh.Value = "Nam";
                                        }
                                        else if (gioiTinh == 0)
                                        {
                                            rep2.Gioitinh.Value = "Nữ";
                                        }

                                        if (par2.FirstOrDefault().SThe.Length >= 15)
                                        {
                                            rep2.SThe1.Value = par2.FirstOrDefault().SThe.Substring(0, 2);
                                            rep2.SThe2.Value = par2.FirstOrDefault().SThe.Substring(2, 1);
                                            rep2.SThe3.Value = par2.FirstOrDefault().SThe.Substring(3, 2);
                                            rep2.SThe4.Value = par2.FirstOrDefault().SThe.Substring(5, 2);
                                            rep2.SThe5.Value = par2.FirstOrDefault().SThe.Substring(7, 3);
                                            rep2.SThe6.Value = par2.FirstOrDefault().SThe.Substring(10);
                                        }
                                    }

                                    bool capcuu = par2.FirstOrDefault().CapCuu;
                                    if (capcuu)
                                    {
                                        rep2.CapCuu.Value = "X";
                                    }
                                    else rep2.Thuong.Value = "X";
                                }
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp2, true);
                                rep2.ChanDoan.Value = (par2.FirstOrDefault().ChanDoanBD != null || par2.FirstOrDefault().ChanDoanBD != "") && DungChung.Bien.MaBV == "24272" ? par2.FirstOrDefault().ChanDoanBD + ";" : "";
                                if (DungChung.Bien.MaBV != "24272")
                                {
                                    rep2.ChanDoan.Value += DungChung.Bien.MaBV == "14018" ? DungChung.Ham.GetChanDoanKB(_Data, _Mabn) : arrThongTinBNKB[1];
                                }
                                rep2.Buong.Value = arrThongTinBNKB[2];
                                rep2.Giuong.Value = arrThongTinBNKB[3];
                                rep2.Khoa.Value = arrThongTinBNKB[4];
                                if (DungChung.Bien.MaBV == "26007")
                                {
                                    rep2.NgayCD.Value = "..... giờ ....phút, ngày ..... tháng ..... năm .....";
                                    if (par2.FirstOrDefault().NgayTH != null)
                                        rep2.NgayTH.Value = DungChung.Ham.NgaySangChu(par2.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep2.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                }
                                else
                                {
                                    if (DungChung.Bien.MaBV == "14018")
                                    {
                                        if (par2.FirstOrDefault().NgayThang != null)
                                            rep2.NgayCD.Value = "Ngày " + par2.FirstOrDefault().NgayThang.Value.Day + " tháng " + par2.FirstOrDefault().NgayThang.Value.Month + " năm " + par2.FirstOrDefault().NgayThang.Value.Year;
                                        else
                                            rep2.NgayCD.Value = "Ngày .... tháng ..... năm .....";
                                        if (par2.FirstOrDefault().NgayTH != null)
                                            rep2.NgayTH.Value = DungChung.Ham.NgaySangChu(par2.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                        else
                                            rep2.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    }
                                    else
                                    {
                                        if (par2.FirstOrDefault().NgayThang != null)
                                            rep2.NgayCD.Value = DungChung.Ham.NgaySangChu(par2.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                        else
                                            rep2.NgayCD.Value = "Ngày .... tháng ..... năm .....";
                                        if (par2.FirstOrDefault().NgayTH != null)
                                            rep2.NgayTH.Value = DungChung.Ham.NgaySangChu(par2.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                        else
                                            rep2.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                    }

                                }
                                if (DungChung.Bien.MaBV == "14018")
                                {
                                    rep2.DataSource = par3;
                                }
                                rep2.CreateDocument();
                                frm2.prcIN.PrintingSystem = rep2.PrintingSystem;
                                if (PrintNow)
                                    DungChung.Ham.PrintReport(rep2);
                                else
                                    frm2.ShowDialog();
                            }
                            #endregion
                        }
                    }
                    break;
                #endregion
                #region XN khác
                case "XN khác":
                    #region Chí linh
                    //if (DungChung.Bien.MaBV == "30003")//Chí linh
                    //{
                    //    frmIn frm3 = new frmIn();
                    //    BaoCao.Rep_PhieuXNKhac_CL rep3 = new BaoCao.Rep_PhieuXNKhac_CL();
                    //    rep3.SoPhieu.Value = idcls; //idcls
                    //    var par3 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                    //                join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                    //                join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                    //                join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                    //                select new { cls3.MaKP, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls3.MaCB, cls3.MaCBth, cdcls.ChiDinh1, cdcls.KetLuan }).ToList();
                    //    if (par3.Count > 0)
                    //    {
                    //        rep3.TenBNhan.Value = par3.FirstOrDefault().TenBNhan.ToUpper();
                    //        rep3.MaCBDT.Value = par3.FirstOrDefault().MaCB;
                    //        rep3.Macb.Value = par3.FirstOrDefault().MaCBth;
                    //        rep3.DiaChi.Value = par3.FirstOrDefault().DChi;
                    //        rep3.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                    //        rep3.MaBNhan.Value = par3.FirstOrDefault().MaBNhan;
                    //        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, par3.FirstOrDefault().MaKP);
                    //        rep3.ChanDoan.Value = arrThongTinBNKB[1];
                    //        rep3.Buong.Value = arrThongTinBNKB[2];
                    //        rep3.Giuong.Value = arrThongTinBNKB[3];
                    //        rep3.Khoa.Value = arrThongTinBNKB[4];

                    //        int gioiTinh = int.Parse(par3.FirstOrDefault().GTinh.ToString());
                    //        if (gioiTinh == 1)
                    //        { rep3.Nam.Value = "X".ToUpper();

                    //        }
                    //        else if (gioiTinh == 0)
                    //        {
                    //           rep3.Nu.Value = "X".ToUpper();
                    //        }
                    //        var parx = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                    //                    join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                    //                    join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                    //                    join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                    //                    join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                    //                    group new { dv, clsct } by new { dv.TenDV, clsct.KetQua } into kq
                    //                    select new { YC = kq.Key.TenDV, KQ = kq.Key.KetQua }).ToList();
                    //        if (parx.Count > 0)
                    //        {
                    //            rep3.DataSource = parx;
                    //            rep3.BindingData();
                    //        }
                    //        if (par3.FirstOrDefault().SThe.Length >= 15)
                    //        {
                    //            rep3.SThe1.Value = par3.FirstOrDefault().SThe.Substring(0, 3);
                    //            rep3.SThe2.Value = par3.FirstOrDefault().SThe.Substring(3, 2);
                    //            rep3.SThe3.Value = par3.FirstOrDefault().SThe.Substring(5, 2);
                    //            rep3.SThe4.Value = par3.FirstOrDefault().SThe.Substring(7, 3);
                    //            rep3.SThe5.Value = par3.FirstOrDefault().SThe.Substring(10, 5);
                    //        }
                    //    }

                    //    rep3.CreateDocument();
                    //    frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                    //    frm3.ShowDialog();
                    //    break;
                    //}
                    #endregion
                    #region 02005
                    if (DungChung.Bien.MaBV == "02005")
                    {
                        frmIn frmkvx = new frmIn();
                        BaoCao.Rep_PhieuXNKhac_VX04 repkvx = new BaoCao.Rep_PhieuXNKhac_VX04();
                        int _makpvx = 0;

                        var parkvx = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                      join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                      join cdcls in _Data.ChiDinhs on cls.IdCLS equals cdcls.IdCLS
                                      join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                      select new { cls.NgayTH, cls.CapCuu, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, bn.DTuong, cls.MaCB, cls.MaKP, cls.MaCBth }).ToList();
                        if (parkvx.Count > 0)
                        {
                            _makpvx = parkvx.FirstOrDefault().MaKP == null ? 0 : parkvx.FirstOrDefault().MaKP.Value;
                            repkvx.MaBSCD.Value = parkvx.FirstOrDefault().MaCB;
                            repkvx.DChi.Value = parkvx.FirstOrDefault().DChi;
                            repkvx.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                            repkvx.DTuong.Value = parkvx.FirstOrDefault().DTuong;
                            repkvx.MaBNhan.Value = parkvx.FirstOrDefault().MaBNhan;
                            repkvx.TenBNhan.Value = parkvx.FirstOrDefault().TenBNhan.ToUpper();
                            repkvx.SThe.Value = parkvx.FirstOrDefault().SThe;
                            repkvx.KhoaBSCD.Value = parkvx.FirstOrDefault().MaKP;
                            repkvx.MaBSXN.Value = parkvx.FirstOrDefault().MaCBth;

                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makpvx, true);
                            repkvx.CDoan.Value = arrThongTinBNKB[1];
                            repkvx.Buong.Value = arrThongTinBNKB[2];
                            repkvx.Giuong.Value = arrThongTinBNKB[3];
                            repkvx.Khoa.Value = arrThongTinBNKB[4];

                            if (parkvx.FirstOrDefault().NgayTH != null && DungChung.Bien.MaBV != "04011")
                                repkvx.NgayTH.Value = DungChung.Ham.NgaySangChu(parkvx.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else
                                repkvx.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                            int gioiTinh = int.Parse(parkvx.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                repkvx.GioiTinh.Value = "Nam";
                            }
                            else if (gioiTinh == 0)
                            {
                                repkvx.GioiTinh.Value = "Nữ";
                            }
                            bool capcuu = parkvx.FirstOrDefault().CapCuu;
                            if (capcuu)
                            {
                                repkvx.CapCuu.Value = "X";
                            }
                            else repkvx.Thuong.Value = "X";
                        }

                        var parx = (from cls in _Data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idcls)
                                    join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                    join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                    join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                    group new { dvct } by new { dvct.TenDVct, dvct.TSBT, clsct.KetQua } into kq
                                    select new { TenDVct = kq.Key.TenDVct, TSBT = kq.Key.TSBT, KetQua = kq.Key.KetQua }).ToList();
                        if (parx.Count > 0)
                        {
                            repkvx.DataSource = parx.ToList();
                            repkvx.BindingData();
                        }

                        repkvx.CreateDocument();
                        frmkvx.prcIN.PrintingSystem = repkvx.PrintingSystem;
                        if (PrintNow)
                            DungChung.Ham.PrintReport(repkvx);
                        else
                            frmkvx.ShowDialog();

                    }
                    #endregion
                    else
                    {
                        #region 08204, 04018, 30003
                        if (DungChung.Bien.MaBV == "08204" || DungChung.Bien.MaBV == "04018" || DungChung.Bien.MaBV == "30003")
                        {
                            frmIn frm3 = new frmIn();
                            BaoCao.Rep_PhieuXNKhac_A5 rep3 = new BaoCao.Rep_PhieuXNKhac_A5();
                            rep3.TenBPham.Value = "BỆNH PHẨM:";
                            rep3.SoPhieu.Value = idcls;
                            int _makp3 = 0;

                            var par3 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                        join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                        join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                        join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                                        select new { dvct.DonVi, cdcls.MaMay, dvct.TenDVct, cls3.MaKP, NgayCD = cls3.NgayThang, NgayTH = cls3.NgayTH, cls3.MaCBth, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, MaCBDT = cls3.MaCB, cdcls.ChiDinh1, cdcls.KetLuan }).ToList();
                            if (par3.Count > 0)
                            {
                                if (DungChung.Bien.MaBV == "30003")
                                {
                                    if (par3.FirstOrDefault().TenDVct.ToUpper().Contains("SARS-COV-2"))
                                    {
                                        rep3.TenBPham.Value = "BỆNH PHẨM: Dịch tỵ hầu";
                                        rep3.SubBand1.Visible = false;
                                        rep3.SubBand2.Visible = true;
                                    }
                                    if (!string.IsNullOrEmpty(par3.FirstOrDefault().MaMay))
                                    {
                                        string _mamay = par3.FirstOrDefault().MaMay;
                                        var tenmay = _Data.DichVus.Where(p => p.PLoai > 2 && p.MaQD == _mamay).ToList();
                                        if (tenmay.Count > 0)
                                        {
                                            rep3.MaMay.Value = "Phương pháp xét nghiệm: [" + tenmay.FirstOrDefault().TenDV + "] [" + _mamay + "]";
                                        }
                                        else
                                        {
                                            rep3.MaMay.Value = "Phương pháp xét nghiệm:";
                                        }
                                    }
                                }
                                _makp3 = par3.FirstOrDefault().MaKP == null ? 0 : par3.FirstOrDefault().MaKP.Value;
                                rep3.Macb.Value = par3.FirstOrDefault().MaCBth;
                                rep3.MaCBDT.Value = par3.FirstOrDefault().MaCBDT;
                                rep3.DiaChi.Value = par3.FirstOrDefault().DChi;
                                rep3.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                                rep3.MaBNhan.Value = par3.FirstOrDefault().MaBNhan;
                                rep3.TenBNhan.Value = par3.FirstOrDefault().TenBNhan.ToUpper();

                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp3, true);
                                rep3.ChanDoan.Value = arrThongTinBNKB[1];
                                rep3.Buong.Value = arrThongTinBNKB[2];
                                rep3.Giuong.Value = arrThongTinBNKB[3];
                                rep3.Khoa.Value = arrThongTinBNKB[4];

                                if (par3.FirstOrDefault().NgayCD != null)
                                    rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayCD.Value, DungChung.Bien.FormatDate);
                                else
                                    rep3.NgayCD.Value = "Ngày .... tháng ..... năm .....";
                                if (par3.FirstOrDefault().NgayTH != null)
                                    rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else

                                    rep3.NgayTH.Value = "Ngày .... tháng ..... năm .....";
                                int gioiTinh = int.Parse(par3.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 0)
                                {
                                    rep3.Nu.Value = "/".ToUpper();
                                    rep3.txtNu.Text = "x".ToUpper();
                                }
                                else if (gioiTinh == 1)
                                {
                                    rep3.Nam.Value = "/".ToUpper();
                                    rep3.txtNam.Text = "x".ToUpper();
                                }
                                var parx = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                            join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                            join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                            join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                            join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                            join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                                            group new { dv, clsct, dvct } by new { TenDV = DungChung.Bien.MaBV == "30003" ? dvct.TenDVct : dv.TenDV, clsct.KetQua, dvct.DonVi, dv.TenRG } into kq
                                            select new { YC = DungChung.Bien.MaBV == "20001" ? kq.Key.TenRG : kq.Key.TenDV, KQ = kq.Key.KetQua, kq.Key.DonVi }).ToList();
                                if (parx.Count > 0)
                                {
                                    rep3.DataSource = parx;
                                    rep3.BindingData();
                                }

                                if (par3.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep3.SThe1.Value = par3.FirstOrDefault().SThe.Substring(0, 3);
                                    rep3.SThe2.Value = par3.FirstOrDefault().SThe.Substring(3, 2);
                                    rep3.SThe3.Value = par3.FirstOrDefault().SThe.Substring(5, 2);
                                    rep3.SThe4.Value = par3.FirstOrDefault().SThe.Substring(7, 3);
                                    rep3.SThe5.Value = par3.FirstOrDefault().SThe.Substring(10, 5);
                                }
                            }
                            rep3.CreateDocument();
                            frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                            if (PrintNow)
                                DungChung.Ham.PrintReport(rep3);
                            else
                                frm3.ShowDialog();
                        }
                        #endregion
                        #region 30004
                        else if (DungChung.Bien.MaBV == "30004")
                        {
                            string TenKP = ""; string MaMay = "";
                            List<InXNTongHop> _ltn = new List<InXNTongHop>();
                            _ltn = (from cd in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                                    join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                    join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                                    join tndv in _Data.TieuNhomDVs on dv.IdTieuNhom equals tndv.IdTieuNhom
                                    join tn in _Data.DichVucts on clsct.MaDVct equals tn.MaDVct
                                    select new InXNTongHop
                                    {
                                        IdTieuNhom = tndv.IdTieuNhom,
                                        TenTN = tndv.TenTN,
                                        MaMay = cd.MaMay ?? "",
                                        IdCLS = cd.IdCLS ?? 0,
                                        IdCD = cd.IDCD,

                                    }).ToList();
                            if (_ltn.Count() > 0)
                            {
                                var kps = (from cls in _Data.CLS.Where(p => p.IdCLS == idcls)
                                           join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                           select new { kp.TenKP }).ToList();
                                CLS.InPhieu._inPhieuXNTongHop_30004(_Mabn, _ltn, false, TenKP = kps.FirstOrDefault().TenKP ?? "", MaMay);
                            }
                        }
                        #endregion
                        #region 27001
                        else if (DungChung.Bien.MaBV == "27001")
                        {
                            frmIn frm3 = new frmIn();
                            //BaoCao.Rep_PhieuXNKhac_A5_27001 rep3 = new BaoCao.Rep_PhieuXNKhac_A5_27001();
                            BaoCao.Rep_PhieuXNKhac rep3 = new BaoCao.Rep_PhieuXNKhac();
                            rep3.SoPhieu.Value = idcls;

                            var par3 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                        join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                        join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                        join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                        select new { cls3.MaKP, NgayCD = cls3.NgayThang, NgayTH = cls3.NgayTH, cls3.MaCBth, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, MaCBDT = cls3.MaCB, cdcls.ChiDinh1, cdcls.KetLuan, cls3.MaKPth }).ToList();
                            if (DungChung.Bien.MaBV == "27023")
                                rep3.So.Value = _so;
                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par3.Count > 0)
                                {
                                    int mabn = par3.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep3.So.Value = qvv.SoVV;
                                    else
                                        rep3.So.Value = "";
                                }
                            }
                            else
                                rep3.So.Value = idcls;
                            int _makp3 = 0;

                            if (par3.Count > 0)
                            {
                                _makp3 = par3.FirstOrDefault().MaKP == null ? 0 : par3.FirstOrDefault().MaKP.Value;
                                rep3.Macb.Value = par3.FirstOrDefault().MaCBth;
                                rep3.MaCBDT.Value = par3.FirstOrDefault().MaCBDT;
                                rep3.DiaChi.Value = par3.FirstOrDefault().DChi;
                                rep3.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                                rep3.MaBNhan.Value = par3.FirstOrDefault().MaBNhan;
                                rep3.TenBNhan.Value = par3.FirstOrDefault().TenBNhan.ToUpper();

                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp3, true);
                                rep3.ChanDoan.Value = arrThongTinBNKB[1];
                                rep3.Buong.Value = arrThongTinBNKB[2];
                                rep3.Giuong.Value = arrThongTinBNKB[3];

                                rep3.Khoa.Value = arrThongTinBNKB[4];

                                if (par3.FirstOrDefault().NgayCD != null)
                                    rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayCD.Value, DungChung.Bien.FormatDate);
                                else
                                    rep3.NgayCD.Value = "Ngày .... tháng ..... năm .....";
                                if (par3.FirstOrDefault().NgayTH != null)
                                    rep3.So.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else

                                    rep3.So.Value = "Ngày .... tháng ..... năm .....";
                                int gioiTinh = int.Parse(par3.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep3.Nu.Value = "/".ToUpper();
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep3.Nam.Value = "/".ToUpper();
                                }

                                if (par3.FirstOrDefault().SThe != null && par3.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep3.SThe1.Value = par3.FirstOrDefault().SThe.Substring(0, 3);
                                    rep3.SThe2.Value = par3.FirstOrDefault().SThe.Substring(3, 2);
                                    rep3.SThe3.Value = par3.FirstOrDefault().SThe.Substring(5, 2);
                                    rep3.SThe4.Value = par3.FirstOrDefault().SThe.Substring(7, 3);
                                    rep3.SThe5.Value = par3.FirstOrDefault().SThe.Substring(10, 5);
                                }
                            }
                            var parx = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                        join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                        join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                        join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                        //join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        group new { dv, clsct } by new { TenDV = DungChung.Bien.MaBV == "20001 " ? dv.TenRG : dv.TenDV, clsct.KetQua } into kq
                                        select new { YC = kq.Key.TenDV, KQ = kq.Key.KetQua }).ToList();
                            if (parx.Count > 0)
                            {
                                rep3.DataSource = parx;
                                rep3.BindingData();
                            }
                            if (DungChung.Bien.MaBV == "30010")
                            {
                                int mkpth = Convert.ToInt32(par3.FirstOrDefault().MaKPth.Value);
                                rep3.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                            }//yenbg1
                            rep3.CreateDocument();
                            frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                            if (PrintNow)
                                DungChung.Ham.PrintReport(rep3);
                            else
                                frm3.ShowDialog();
                        }
                        #endregion
                        #region 30005 & nhuom soi
                        else if (DungChung.Bien.MaBV == "30005" && tendv.Contains("nhuộm soi"))
                        {

                            var ttbn1 = _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn).FirstOrDefault();
                            if (ttbn1 != null)
                            {
                                frmIn frm31 = new frmIn();
                                BaoCao.Rep_PhieuXNNhuomSoi rep31 = new BaoCao.Rep_PhieuXNNhuomSoi();
                                rep31.CQCQ.Value = DungChung.Bien.TenCQCQ.ToUpper();
                                rep31.CQ.Value = DungChung.Bien.TenCQ.ToUpper();
                                rep31.SOTHE.Value = ttbn1.SThe;
                                rep31.TENBN.Value = ttbn1.TenBNhan.ToUpper();
                                rep31.NAMSINH.Value = ttbn1.NamSinh.ToString();
                                rep31.GTINH.Value = ttbn1.GTinh == 1 ? "Nam" : "Nữ";
                                rep31.DCHI.Value = ttbn1.DChi;
                                rep31.DTUONG.Value = ttbn1.DTuong == "BHYT" ? "Bảo hiểm y tế" : "Dịch vụ";
                                var parx = (from cls3 in _Data.CLS.Where(p => p.IdCLS == idcls)
                                            join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                            join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                            join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                            join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                            group new { dv, clsct } by new { TenDV = dv.TenDV, clsct.KetQua, dvct.TSBT, dvct.TenDVct, cls3.MaKP, cls3.MaCB, cls3.ChanDoan, cls3.NgayTH, cls3.NgayThang, cls3.MaCBth } into kq
                                            select new { kq.Key.TenDV, kq.Key.TenDVct, kq.Key.TSBT, kq.Key.KetQua, kq.Key.MaKP, kq.Key.MaCB, kq.Key.ChanDoan, kq.Key.NgayTH, kq.Key.NgayThang, kq.Key.MaCBth }).ToList();
                                int makp = 0;
                                string macb = "";
                                if (parx.Count > 0)
                                {
                                    makp = parx.FirstOrDefault().MaKP ?? 0;
                                    var tenkp = _Data.KPhongs.Where(p => p.MaKP == makp).FirstOrDefault();
                                    //var cd = _Data.BNKBs.Where(p => p.MaKP == makp && p.MaBNhan == _Mabn).FirstOrDefault();
                                    if (tenkp != null)
                                    {
                                        rep31.KHOAP.Value = tenkp.TenKP;
                                    }
                                    rep31.Macb.Value = parx.FirstOrDefault().MaCBth;
                                    rep31.BSCD.Value = parx.FirstOrDefault().MaCB;
                                    rep31.CHANDOAN.Value = parx.FirstOrDefault().ChanDoan;
                                    if (parx.FirstOrDefault().NgayTH != null)
                                    {
                                        rep31.NGAYKY.Value = DungChung.Ham.NgaySangChu(parx.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);//parx.FirstOrDefault().NgayTH.Value.Hour + " giờ, ngày " + parx.FirstOrDefault().NgayTH.Value.Day + " tháng " + parx.FirstOrDefault().NgayTH.Value.Month + " năm " + parx.FirstOrDefault().NgayTH.Value.Year;
                                    }
                                    else
                                        rep31.NGAYKY.Value = "ngày.....tháng....năm....";
                                    if (parx.FirstOrDefault().NgayThang != null)
                                        rep31.NgayCD.Value = DungChung.Ham.NgaySangChu(parx.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                                    else
                                        rep31.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                                }
                                rep31.DataSource = parx;
                                rep31.BindingData();
                                rep31.CreateDocument();
                                frm31.prcIN.PrintingSystem = rep31.PrintingSystem;
                                if (PrintNow)
                                    DungChung.Ham.PrintReport(rep31);
                                else
                                    frm31.ShowDialog();
                            }

                        }
                        #endregion
                        else if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                        {
                            InPhieuXNHuyetHoc_01070(_Mabn, idcls, _tieunhom);
                        }
                        else if (DungChung.Bien.MaBV == "30007" && tendv == "nghiệm pháp dung nạp glucose đường uống 2 mẫu không định lượng insulin")
                        {
                            frmIn frm3 = new frmIn();
                            BaoCao.Rep_PhieuGluco rep3 = new BaoCao.Rep_PhieuGluco();
                            rep3.SoPhieu.Value = idcls;
                            rep3.xrYcxn.Text = tendv1;
                            var par3 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                        join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                        join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                        join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                        select new { cls3.GhiChu, cls3.CapCuu, cls3.MaKP, NgayCD = cls3.NgayThang, NgayTH = cls3.NgayTH, cls3.MaCBth, bn.MaBNhan, bn.TenBNhan, bn.NamSinh, bn.DChi, bn.NoiTru, bn.GTinh, bn.Tuoi, bn.SThe, MaCBDT = cls3.MaCB, cdcls.ChiDinh1, cdcls.KetLuan, cdcls.Status, cls3.BarCode, cls3.MaKPth }).ToList();
                            if (DungChung.Bien.MaBV == "27023")
                                rep3.So.Value = _so;

                            if (par3.FirstOrDefault().GhiChu != null)
                            {
                                rep3.xrLabel41.Text = par3.FirstOrDefault().GhiChu;
                            }

                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par3.Count > 0)
                                {
                                    int mabn = par3.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep3.So.Value = qvv.SoVV;
                                    else
                                        rep3.So.Value = "";

                                }
                            }
                            else
                                rep3.So.Value = idcls;

                            int _makp3 = 0;

                            if (par3.Count > 0)
                            {
                                if (DungChung.Bien.MaBV == "12122")
                                {
                                    if (par3.FirstOrDefault().Status == 0)
                                    {
                                        rep3.xrTableCell4.Visible = false;
                                        rep3.xrTableCell8.Visible = false;
                                        rep3.colTenTKXN.Visible = false;
                                    }
                                    else
                                    {
                                        rep3.xrTableCell7.Visible = false;
                                        rep3.xrTableCell3.Visible = false;
                                        rep3.colTenBSDT.Visible = false;
                                    }
                                }
                                //if (par3.FirstOrDefault().NoiTru == 1)
                                //{
                                //    //var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _Mabn).Select(p => p.SoVV).FirstOrDefault();
                                //    //rep3.sovv.Text = "Số VV: " + (sovv == null ? "" : sovv.ToString());
                                //}
                                _makp3 = par3.FirstOrDefault().MaKP == null ? 0 : par3.FirstOrDefault().MaKP.Value;
                                rep3.Macb.Value = par3.FirstOrDefault().MaCBth;
                                rep3.MaCBDT.Value = par3.FirstOrDefault().MaCBDT;
                                rep3.DiaChi.Value = par3.FirstOrDefault().DChi;
                                rep3.NamSinh.Value = par3.FirstOrDefault().NamSinh;
                                rep3.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                                rep3.MaBNhan.Value = par3.FirstOrDefault().MaBNhan;
                                rep3.TenBNhan.Value = par3.FirstOrDefault().TenBNhan.ToUpper();
                                //rep3.xrLabel45.Text = rep3.thuong.Text = (par3.FirstOrDefault().CapCuu == false) ? "X" : "";
                                //rep3.xrLabel43.Text = rep3.capcuu.Text = (par3.FirstOrDefault().CapCuu == true) ? "X" : "";
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp3, true);
                                rep3.MaICD.Value = "Mã ICD: " + arrThongTinBNKB[0];
                                rep3.ChanDoan.Value = arrThongTinBNKB[1];
                                rep3.Buong.Value = arrThongTinBNKB[2];
                                rep3.Giuong.Value = arrThongTinBNKB[3];

                                rep3.Khoa.Value = arrThongTinBNKB[4];

                                if (par3.FirstOrDefault().NgayCD != null)
                                    rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayCD.Value, DungChung.Bien.FormatDate);
                                else
                                    rep3.NgayCD.Value = "Ngày .... tháng ..... năm .....";
                                if (par3.FirstOrDefault().NgayTH != null)
                                    rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else

                                    rep3.NgayTH.Value = "Ngày .... tháng ..... năm .....";
                                int gioiTinh = int.Parse(par3.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep3.Nu.Value = "/".ToUpper();
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep3.Nam.Value = "/".ToUpper();
                                }

                                if (par3.FirstOrDefault().SThe != null && par3.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep3.SThe1.Value = par3.FirstOrDefault().SThe.Substring(0, 3);
                                    rep3.SThe2.Value = par3.FirstOrDefault().SThe.Substring(3, 2);
                                    rep3.SThe3.Value = par3.FirstOrDefault().SThe.Substring(5, 2);
                                    rep3.SThe4.Value = par3.FirstOrDefault().SThe.Substring(7, 3);
                                    rep3.SThe5.Value = par3.FirstOrDefault().SThe.Substring(10, 5);
                                }
                            }
                            var parx = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                        join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                        join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                        join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                        join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        //join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        group new { dv, clsct, dvct } by new { TenDV = DungChung.Bien.MaBV == "20001 " ? dv.TenRG : dv.TenDV, clsct.KetQua, dvct.TenDVct } into kq
                                        select new { YC = kq.Key.TenDVct, KQ = kq.Key.KetQua }).ToList();
                            if (parx.Count > 0)
                            {
                                var kq1 = (from q in parx.Where(p => p.YC == "Trước uống glucose")
                                           select new { q.KQ }).ToList();
                                if (kq1.Count() > 0)
                                {
                                    rep3.truoc.Text = kq1.FirstOrDefault().KQ + " mmol/L";
                                }
                                var kq2 = (from q2 in parx.Where(p => p.YC == "Sau khi uống glucose 01 giờ")
                                           select new { q2.KQ }).ToList();
                                if (kq2.Count() > 0)
                                {
                                    rep3.sau1h.Text = kq2.FirstOrDefault().KQ + " mmol/L";
                                }
                                var kq3 = (from q3 in parx.Where(p => p.YC == "Sau khi uống glucose 02 giờ")
                                           select new { q3.KQ }).ToList();
                                if (kq3.Count() > 0)
                                {
                                    rep3.sau2h.Text = kq3.FirstOrDefault().KQ + " mmol/L";
                                }
                                rep3.DataSource = parx;
                                //rep3.BindingData();
                            }
                            if (DungChung.Bien.MaBV == "30010")
                            {
                                int mkpth = Convert.ToInt32(par3.FirstOrDefault().MaKPth.Value);
                                rep3.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                            }//yenbg1
                            rep3.CreateDocument();
                            frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                            if (PrintNow)
                                DungChung.Ham.PrintReport(rep3);
                            else
                                frm3.ShowDialog();
                        }
                        #region chung
                        else
                        {

                            frmIn frm3 = new frmIn();
                            BaoCao.Rep_PhieuXNKhac rep3 = new BaoCao.Rep_PhieuXNKhac();
                            rep3.SoPhieu.Value = idcls;
                            rep3.colMaBN.Text = _Mabn.ToString(); ;
                            var par3 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join ttbs in _Data.TTboXungs on bn.MaBNhan equals ttbs.MaBNhan
                                        join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                        join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                        join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                        join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                        join cb in _Data.CanBoes on cls3.MaCB equals cb.MaCB
                                        join bnkb in _Data.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                                        select new { bnkb.ChanDoanBD, cls3.ChanDoan, cb.TenCB, ttbs.SoKSinh, cls3.CapCuu, cls3.MaKP, NgayCD = cls3.NgayThang, NgayTH = cls3.NgayTH, cls3.MaCBth, bn.MaBNhan, bn.TenBNhan, bn.NamSinh, bn.DChi, bn.NoiTru, bn.GTinh, bn.Tuoi, bn.SThe, MaCBDT = cls3.MaCB, cdcls.ChiDinh1, cdcls.KetLuan, cdcls.Status, cls3.BarCode, cls3.MaKPth, ttbs.DThoai, ttbs.NoiLV }).ToList();
                            if (DungChung.Bien.MaBV == "27023")
                                rep3.So.Value = _so;

                            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                            {
                                if (par3.Count > 0)
                                {
                                    int mabn = par3.FirstOrDefault().MaBNhan;
                                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                    if (qvv != null)
                                        rep3.So.Value = qvv.SoVV;
                                    else
                                        rep3.So.Value = "";

                                }
                            }
                            else
                                rep3.So.Value = idcls;

                            int _makp3 = 0;

                            if (par3.Count > 0)
                            {
                                if (DungChung.Bien.MaBV == "12122")
                                {
                                    if (par3.FirstOrDefault().Status == 0)
                                    {
                                        rep3.xrTableCell4.Visible = false;
                                        rep3.xrTableCell8.Visible = false;
                                        rep3.colTenTKXN.Visible = false;
                                    }
                                    else
                                    {
                                        rep3.xrTableCell7.Visible = false;
                                        rep3.xrTableCell3.Visible = false;
                                        rep3.colTenBSDT.Visible = false;
                                    }
                                }
                                if (par3.FirstOrDefault().NoiTru == 1)
                                {
                                    var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _Mabn).Select(p => p.SoVV).FirstOrDefault();
                                    rep3.sovv.Text = "Số VV: " + (sovv == null ? "" : sovv.ToString());
                                }
                                _makp3 = par3.FirstOrDefault().MaKP == null ? 0 : par3.FirstOrDefault().MaKP.Value;
                                rep3.TenCBCD.Value = par3.FirstOrDefault().TenCB;
                                rep3.Macb.Value = par3.FirstOrDefault().MaCBth;
                                rep3.CMT.Value = par3.FirstOrDefault().SoKSinh;
                                rep3.MaCBDT.Value = par3.FirstOrDefault().MaCBDT;
                                rep3.DiaChi.Value = par3.FirstOrDefault().DChi;
                                rep3.NamSinh.Value = par3.FirstOrDefault().NamSinh;
                                rep3.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                                rep3.MaBNhan.Value = par3.FirstOrDefault().MaBNhan;
                                rep3.TenBNhan.Value = par3.FirstOrDefault().TenBNhan.ToUpper();
                                rep3.xrLabel45.Text = rep3.thuong.Text = rep3.txtthuong.Text = (par3.FirstOrDefault().CapCuu == false) ? "X" : "";
                                rep3.xrLabel43.Text = rep3.capcuu.Text = rep3.txtcapcuu.Text = (par3.FirstOrDefault().CapCuu == true) ? "X" : "";
                                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp3, true);
                                rep3.MaICD.Value = "Mã ICD: " + arrThongTinBNKB[0];
                                rep3.ChanDoan.Value = (par3.FirstOrDefault().ChanDoanBD != null || par3.FirstOrDefault().ChanDoanBD != "") && DungChung.Bien.MaBV == "24272" ? par3.FirstOrDefault().ChanDoanBD + ";" : "";
                                if (DungChung.Bien.MaBV != "24272")
                                {
                                    rep3.ChanDoan.Value += arrThongTinBNKB[1];
                                }
                                rep3.Buong.Value = arrThongTinBNKB[2];
                                rep3.Giuong.Value = arrThongTinBNKB[3];
                                rep3.SDT.Value = par3.FirstOrDefault().DThoai;
                                rep3.Khoa.Value = arrThongTinBNKB[4];
                                rep3.NoiLV.Value = par3.FirstOrDefault().NoiLV;

                                if (par3.FirstOrDefault().NgayCD != null)
                                    rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayCD.Value, DungChung.Bien.FormatDate);
                                else
                                    rep3.NgayCD.Value = "Ngày .... tháng ..... năm .....";
                                if (par3.FirstOrDefault().NgayTH != null)
                                    rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                                else

                                    rep3.NgayTH.Value = "Ngày .... tháng ..... năm .....";
                                int gioiTinh = int.Parse(par3.FirstOrDefault().GTinh.ToString());
                                if (gioiTinh == 1)
                                {
                                    rep3.Nu.Value = "/".ToUpper();
                                }
                                else if (gioiTinh == 0)
                                {
                                    rep3.Nam.Value = "/".ToUpper();
                                }

                                if (par3.FirstOrDefault().SThe != null && par3.FirstOrDefault().SThe.Length >= 15)
                                {
                                    rep3.SThe1.Value = par3.FirstOrDefault().SThe.Substring(0, 3);
                                    rep3.SThe2.Value = par3.FirstOrDefault().SThe.Substring(3, 2);
                                    rep3.SThe3.Value = par3.FirstOrDefault().SThe.Substring(5, 2);
                                    rep3.SThe4.Value = par3.FirstOrDefault().SThe.Substring(7, 3);
                                    rep3.SThe5.Value = par3.FirstOrDefault().SThe.Substring(10, 5);
                                }
                            }
                            if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "27183")
                            {
                                rep3.txtBarcode.Text = par3.Count > 0 ? par3.FirstOrDefault().BarCode : "";
                                rep3.sovv.Visible = false;
                                rep3.lblBarcode.Visible = true;
                                rep3.txtBarcode.Visible = true;
                            }
                            var parx = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                        join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                        join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                        join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                        //join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        group new { dv, clsct } by new { TenDV = DungChung.Bien.MaBV == "20001 " ? dv.TenRG : dv.TenDV, clsct.KetQua, dv.DonVi } into kq
                                        select new { YC = kq.Key.TenDV, KQ = kq.Key.KetQua, DV = kq.Key.DonVi }).ToList();
                            if (_lIdCls != null && _lMaDV != null)
                            {
                                parx = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                        join cls3 in _Data.CLS.Where(p => DungChung.Bien.MaBV == "30372" ? _lIdCls.Contains(p.IdCLS) : p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                        join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                        join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                        join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                        //join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        where (DungChung.Bien.MaBV == "30372" ? _lMaDV.Contains(cdcls.MaDV) : true)
                                        group new { dv, clsct } by new { TenDV = DungChung.Bien.MaBV == "20001 " ? dv.TenRG : dv.TenDV, clsct.KetQua, dv.DonVi } into kq
                                        select new { YC = kq.Key.TenDV, KQ = kq.Key.KetQua, DV = kq.Key.DonVi }).ToList();
                            }
                            if (parx.Count > 0)
                            {
                                rep3.DataSource = parx;
                                rep3.BindingData();
                            }
                            if (DungChung.Bien.MaBV == "30010")
                            {
                                int mkpth = Convert.ToInt32(par3.FirstOrDefault().MaKPth.Value);
                                rep3.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                            }//yenbg1

                            if (DungChung.Bien.MaBV == "27183" && parx.FirstOrDefault().YC.ToUpper().Contains("COVID-19"))
                            {
                                rep3.txtDC.SizeF = new System.Drawing.SizeF(465.147F, 29.4061F);
                                rep3.txtSDT.Visible = true;
                                rep3.txtSDTParam.Visible = true;
                                rep3.SubBand1.Visible = false;
                                rep3.SubBand2.Visible = false;
                                rep3.SubBand3.Visible = false;
                                rep3.SubBand5.Visible = false;
                                rep3.SubBand3_01071_form_Covid.Visible = true;
                                rep3.SubBand4_01071_FORM_COVID.Visible = true;
                                rep3.SubBand5_frmCovid_27183.Visible = true;
                            }
                            rep3.CreateDocument();
                            frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                            if (PrintNow)
                                DungChung.Ham.PrintReport(rep3);
                            else
                                frm3.ShowDialog();
                        }
                        #endregion
                    }
                    break;
                #endregion
                #region "XN hóa sinh nội tiết tố":
                case "XN hóa sinh nội tiết tố":

                    frmIn frmnt = new frmIn();
                    BaoCao.Rep_PhieuHSNT repnt = new BaoCao.Rep_PhieuHSNT();
                    repnt.MaBNhan.Value = _Mabn;
                    repnt.Status.Value = DungChung.Bien.InPhoi;

                    repnt.SoPhieu.Value = idcls;
                    var parnt = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                 join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                 select new { cls.ChanDoan, cls.MaCBth, cls.NgayTH, cls.CapCuu, NgayCD = cls.NgayThang, bn.TenBNhan, bn.MaBNhan, bn.NamSinh, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, cls.MaKP, cls.Status, cls.BarCode }).ToList();
                    if (DungChung.Bien.MaBV == "27023")
                        repnt.So.Value = _so;
                    else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                    {
                        if (parnt.Count > 0)
                        {
                            int mabn = parnt.FirstOrDefault().MaBNhan;
                            var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                            if (qvv != null)
                                repnt.So.Value = qvv.SoVV;
                            else
                                repnt.So.Value = "";
                        }
                    }
                    else
                        repnt.So.Value = idcls;

                    if (parnt.Count > 0)
                    {
                        if (DungChung.Bien.MaBV == "12122")
                        {
                            if (parnt.FirstOrDefault().Status == 0)
                            {
                                repnt.xrTableCell27.Visible = false;
                                repnt.xrTableCell30.Visible = false;
                                repnt.xrTableCell33.Visible = false;
                            }
                            else
                            {
                                repnt.xrTableCell25.Visible = false;
                                repnt.xrTableCell28.Visible = false;
                                repnt.xrTableCell31.Visible = false;
                            }
                        }
                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, parnt.FirstOrDefault().MaKP == null ? 0 : parnt.FirstOrDefault().MaKP.Value, true);
                        repnt.ChanDoan.Value = (parnt.FirstOrDefault().ChanDoan != null || parnt.FirstOrDefault().ChanDoan != "") && DungChung.Bien.MaBV == "24272" ? parnt.FirstOrDefault().ChanDoan + ";" : "";
                        if (DungChung.Bien.MaBV != "24272")
                        {
                            repnt.ChanDoan.Value = arrThongTinBNKB[1];
                        }

                        repnt.Buong.Value = arrThongTinBNKB[2];
                        repnt.Giuong.Value = arrThongTinBNKB[3];
                        repnt.Khoa.Value = arrThongTinBNKB[4];

                        repnt.MaCBDT.Value = parnt.FirstOrDefault().MaCB;
                        repnt.DiaChi.Value = parnt.FirstOrDefault().DChi;
                        repnt.NamSinh.Value = parnt.FirstOrDefault().NamSinh;
                        repnt.Tuoi.Value = Convert.ToInt32(parnt.FirstOrDefault().Tuoi);
                        repnt.TenBN.Value = (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789") ? parnt.FirstOrDefault().TenBNhan.ToUpper() : parnt.FirstOrDefault().TenBNhan;
                        if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                        {
                            repnt.txtBarcode.Text = parnt.Count > 0 ? parnt.FirstOrDefault().BarCode : "";
                            repnt.lblBarcode.Visible = true;
                            repnt.txtBarcode.Visible = true;
                        }
                        if (parnt.FirstOrDefault().NgayCD != null)

                            repnt.NgayCD.Value = DungChung.Ham.NgaySangChu(parnt.FirstOrDefault().NgayCD.Value, DungChung.Bien.FormatDate);
                        else
                            repnt.NgayCD.Value = "Ngày .... tháng ..... năm .....";

                        if (parnt.FirstOrDefault().NgayTH != null)
                            repnt.NgayTH.Value = DungChung.Ham.NgaySangChu(parnt.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                        else

                            repnt.NgayTH.Value = "Ngày .... tháng ..... năm .....";
                        int gioiTinh = int.Parse(parnt.FirstOrDefault().GTinh.ToString());
                        if (gioiTinh == 1)
                        {
                            repnt.Nu.Value = "/";
                        }
                        else if (gioiTinh == 0)
                        {
                            repnt.Nam.Value = "/";
                        }
                        if (parnt.FirstOrDefault().SThe != null && parnt.FirstOrDefault().SThe.Length >= 15)
                        {
                            repnt.SThe1.Value = parnt.FirstOrDefault().SThe.Substring(0, 3);
                            repnt.SThe2.Value = parnt.FirstOrDefault().SThe.Substring(3, 2);
                            repnt.SThe3.Value = parnt.FirstOrDefault().SThe.Substring(5, 2);
                            repnt.SThe4.Value = parnt.FirstOrDefault().SThe.Substring(7, 3);
                            repnt.SThe5.Value = parnt.FirstOrDefault().SThe.Substring(10, 5);
                        }

                        bool capcuu = parnt.FirstOrDefault().CapCuu;
                        if (capcuu)
                        {
                            repnt.CapCuu.Value = "X";
                        }
                        else repnt.Thuong.Value = "X";
                        string _macb = "", _macbth = "";
                        if (!string.IsNullOrEmpty(parnt.FirstOrDefault().MaCB))
                        {
                            _macb = parnt.FirstOrDefault().MaCB;
                            var cb = _Data.CanBoes.Where(p => p.MaCB == _macb).ToList();
                            if (cb.Count > 0)
                                repnt.BSDT.Value = cb.FirstOrDefault().TenCB;
                        }
                        if (!string.IsNullOrEmpty(parnt.FirstOrDefault().MaCBth))
                        {
                            _macbth = parnt.FirstOrDefault().MaCBth;
                            var cb = _Data.CanBoes.Where(p => p.MaCB == _macbth).ToList();
                            if (cb.Count > 0)
                                repnt.TKXN.Value = cb.FirstOrDefault().TenCB;
                        }

                    }

                    repnt.CreateDocument();
                    frmnt.prcIN.PrintingSystem = repnt.PrintingSystem;
                    if (PrintNow)
                        DungChung.Ham.PrintReport(repnt);
                    else
                        frmnt.ShowDialog();
                    break;
                #endregion
                #region XN tế bào nước dịch
                case "XN tế bào nước dịch":
                    if (DungChung.Bien.MaBV == "12122")
                    {

                        InXN_NuocDich(idcls);
                    }
                    else
                    {
                        _In_XNTeBaoNuocDich(_Data, idcls, _tieunhom, _so);
                    }
                    break;
                #endregion
                #region XN vi sinh
                case "XN vi sinh":
                    if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                    {
                        frmIn frm3 = new frmIn();
                        BaoCao.Rep_PhieuXNKhac rep3 = new BaoCao.Rep_PhieuXNKhac();
                        rep3.SoPhieu.Value = idcls;
                        rep3.colMaBN.Text = _Mabn.ToString();
                        var par3 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                    join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                    join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                    join ttbs in _Data.TTboXungs on bn.MaBNhan equals ttbs.MaBNhan
                                    //join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                    //join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                    select new { cls3.CapCuu, cls3.MaKP, NgayCD = cls3.NgayThang, NgayTH = cls3.NgayTH, cls3.MaCBth, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.NoiTru, bn.GTinh, bn.Tuoi, bn.SThe, MaCBDT = cls3.MaCB, cdcls.ChiDinh1, cdcls.KetLuan, cls3.BarCode, ttbs.SoKSinh, ttbs.NoiLV }).ToList();
                        //if (DungChung.Bien.MaBV == "27023")
                        //    rep3.So.Value = _so;
                        //else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                        //{
                        //    if (par3.Count > 0)
                        //    {
                        //        int mabn = par3.FirstOrDefault().MaBNhan;
                        //        var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                        //        if (qvv != null)
                        //            rep3.So.Value = qvv.SoVV;
                        //        else
                        //            rep3.So.Value = "";
                        //    }
                        //}
                        //else
                        rep3.So.Value = idcls;
                        int _makp3 = 0;
                        if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                        {
                            rep3.Barcode.Value = rep3.txtBarcode.Text = par3.Count > 0 ? par3.FirstOrDefault().BarCode : "";
                            rep3.sovv.Visible = false;
                            rep3.lblBarcode.Visible = true;
                            rep3.txtBarcode.Visible = true;
                        }
                        if (par3.Count > 0)
                        {
                            if (par3.FirstOrDefault().NoiTru == 1)
                            {
                                var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _Mabn).Select(p => p.SoVV).FirstOrDefault();
                                if (sovv != null)
                                    rep3.sovv.Text = "Số VV: " + sovv.ToString();
                            }
                            if (!string.IsNullOrEmpty(par3.FirstOrDefault().NoiLV))
                                rep3.NoiLV.Value = par3.FirstOrDefault().NoiLV;
                            _makp3 = par3.FirstOrDefault().MaKP == null ? 0 : par3.FirstOrDefault().MaKP.Value;
                            rep3.Macb.Value = par3.FirstOrDefault().MaCBth;
                            rep3.MaCBDT.Value = par3.FirstOrDefault().MaCBDT;
                            rep3.DiaChi.Value = par3.FirstOrDefault().DChi;
                            rep3.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                            rep3.MaBNhan.Value = par3.FirstOrDefault().MaBNhan;
                            rep3.TenBNhan.Value = par3.FirstOrDefault().TenBNhan.ToUpper();
                            rep3.txtthuong.Text = rep3.thuong.Text = (par3.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep3.txtcapcuu.Text = rep3.capcuu.Text = (par3.FirstOrDefault().CapCuu == true) ? "X" : "";
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp3, true);
                            rep3.MaICD.Value = arrThongTinBNKB[0];
                            rep3.ChanDoan.Value = arrThongTinBNKB[1];
                            rep3.Buong.Value = arrThongTinBNKB[2];
                            rep3.Giuong.Value = arrThongTinBNKB[3];
                            rep3.CMT.Value = "";
                            if (par3.FirstOrDefault().SoKSinh != null)
                                rep3.CMT.Value = par3.FirstOrDefault().SoKSinh.ToString();

                            rep3.Khoa.Value = arrThongTinBNKB[4];

                            if (par3.FirstOrDefault().NgayCD != null)
                                rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayCD.Value, DungChung.Bien.FormatDate);
                            else
                                rep3.NgayCD.Value = "Ngày .... tháng ..... năm .....";
                            if (par3.FirstOrDefault().NgayTH != null)
                                rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else

                                rep3.NgayTH.Value = "Ngày .... tháng ..... năm .....";
                            int gioiTinh = int.Parse(par3.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep3.Nu.Value = "/".ToUpper();
                            }
                            else if (gioiTinh == 0)
                            {
                                rep3.Nam.Value = "/".ToUpper();
                            }

                            if (par3.FirstOrDefault().SThe != null && par3.FirstOrDefault().SThe.Length >= 15)
                            {

                                rep3.SThe.Value = par3.FirstOrDefault().SThe.ToString();
                                rep3.SThe1.Value = par3.FirstOrDefault().SThe.Substring(0, 3);
                                rep3.SThe2.Value = par3.FirstOrDefault().SThe.Substring(3, 2);
                                rep3.SThe3.Value = par3.FirstOrDefault().SThe.Substring(5, 2);
                                rep3.SThe4.Value = par3.FirstOrDefault().SThe.Substring(7, 3);
                                rep3.SThe5.Value = par3.FirstOrDefault().SThe.Substring(10, 5);
                            }
                        }
                        var parx = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                    join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                    join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                    join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                    join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                    //join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                    group new { dv, clsct } by new { TenDV = DungChung.Bien.MaBV == "20001 " ? dv.TenRG : dv.TenDV, dv.DonVi, clsct.KetQua } into kq
                                    select new { YC = kq.Key.TenDV, KQ = IsCD == 1 ? null : kq.Key.KetQua, DV = kq.Key.DonVi }).ToList();
                        if (parx.Count > 0)
                        {
                            if (parx.FirstOrDefault().YC.ToString().ToUpper().Contains("TEST NHANH KHÁNG NGUYÊN VI RÚT SAR-COV-2") || parx.FirstOrDefault().YC.ToString().ToUpper().Contains("TEST NHANH KHÁNG NGUYÊN VI RÚT SARS-COV-2") || parx.FirstOrDefault().YC.ToString().ToUpper().Contains("REALTIME PCR SARS-COV-2"))
                            {
                                rep3.xrNoiLV.Visible = true;
                                rep3.lblNoiLV.Visible = true;
                                rep3.SubBand1.Visible = false;
                                rep3.SubBand2.Visible = false;
                                rep3.SubBand3.Visible = false;
                                rep3.SubBand4.Visible = false;
                                rep3.xrLine2.Visible = false;
                                rep3.SubBand3_01071_form_Covid.Visible = true;
                                rep3.SubBand4_01071_FORM_COVID.Visible = true;
                                rep3.xrTableCell3.Text = "BÁC SỸ CHỈ ĐỊNH";
                                if (IsCD == 1)
                                {
                                    rep3.NgayTH.Value = "Ngày....tháng...năm......";
                                    rep3.colTenTKXN.Visible = false;
                                }
                            }
                            rep3.DataSource = parx;
                            rep3.BindingData();
                        }
                        rep3.CreateDocument();
                        frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                        if (PrintNow)
                            DungChung.Ham.PrintReport(rep3);
                        else
                            frm3.ShowDialog();
                    }
                    else if (DungChung.Bien.MaBV == "30004")
                    {
                        string TenKP = ""; string MaMay = "";
                        List<InXNTongHop> _ltn = new List<InXNTongHop>();
                        _ltn = (from cd in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                                join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                                join tndv in _Data.TieuNhomDVs on dv.IdTieuNhom equals tndv.IdTieuNhom
                                join tn in _Data.DichVucts on clsct.MaDVct equals tn.MaDVct
                                select new InXNTongHop
                                {
                                    IdTieuNhom = tndv.IdTieuNhom,
                                    TenTN = tndv.TenTN,
                                    MaMay = cd.MaMay ?? "",
                                    IdCLS = cd.IdCLS ?? 0,
                                    IdCD = cd.IDCD,

                                }).ToList();
                        if (_ltn.Count() > 0)
                        {
                            var kps = (from cls in _Data.CLS.Where(p => p.IdCLS == idcls)
                                       join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                       select new { kp.TenKP }).ToList();
                            CLS.InPhieu._inPhieuXNTongHop_30004(_Mabn, _ltn, false, TenKP = kps.FirstOrDefault().TenKP ?? "", MaMay);
                        }
                    }
                    else if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789")
                    {
                        frmIn frm = new frmIn();
                        Rep_PhieuXNVinhSinh_BaoNgoc rep = new Rep_PhieuXNVinhSinh_BaoNgoc();
                        rep.MaBNhan.Value = idcls;
                        rep.SoPhieu.Value = _Mabn;
                        rep.paramIdCLS.Value = idcls;
                        var par = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                   join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                   select new { cls.MaCBth, cls.NgayThang, cls.CapCuu, cls.NgayTH, bn.TenBNhan, bn.NamSinh, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, cls.MaKP }).ToList();
                        if (par.Count > 0)
                        {
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                            rep.Khoa.Value = arrThongTinBNKB[4];
                            rep.MaBSDT.Value = par.FirstOrDefault().MaCB;
                            rep.Macb.Value = par.FirstOrDefault().MaCBth;
                            rep.lblTenXN.Text = "VI SINH";
                            rep.DiaChi.Value = par.FirstOrDefault().DChi;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                            rep.TenBNhan.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                            rep.NamSinh.Value = par.FirstOrDefault().NamSinh;
                            int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.lblGioiTinh.Text = "Nam";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.lblGioiTinh.Text = "Nữ";
                            }
                            if (par.FirstOrDefault().NgayTH != null)
                            {
                                rep.paramNgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            }
                            else { rep.paramNgayTH.Value = "Ngày ..... tháng ...... năm....."; }
                            if (par.FirstOrDefault().NgayThang != null)
                            {
                                rep.paramNgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                            }
                            else { rep.paramNgayCD.Value = "Ngày ..... tháng ...... năm....."; }
                            var qcls = (from chidinh in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                                        join clsct in _Data.CLScts.Where(p => p.Status != -1) on chidinh.IDCD equals clsct.IDCD
                                        join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                        join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                                        join tndv in _Data.TieuNhomDVs on dv.IdTieuNhom equals tndv.IdTieuNhom
                                        where tndv.TenRG == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.XNViSinh
                                        select new Rep_PhieuXNHuyetHoc_01071.BaoCao { MaDVct = clsct.MaDVct, TenDVct = dvct.TenDVct, KetQua = clsct.KetQua, TSBT = dvct.TSBT, TenDV = dv.TenDV, MaTam = dv.MaTam, MaDV = dv.MaDV, DonVi = dvct.DonVi, STTDV = dv.SoTT ?? 1, STTdvct = dvct.STT }).ToList();

                            var qdv = (from cls in qcls
                                       group cls by new { cls.STTDV, cls.KetQua, cls.DonVi, cls.TSBT, cls.TenDVct, cls.MaDVct, cls.STTdvct, cls.TenDV } into kq
                                       select new Rep_PhieuXNHuyetHoc_01071.BaoCao { MaDVct = kq.Key.MaDVct, KetQua = kq.Key.KetQua, DonVi = kq.Key.DonVi, TSBT = kq.Key.TSBT, TenDVct = kq.Key.TenDVct, TenDV = kq.Key.TenDV, STTDV = -1, STTdvct = kq.Key.STTdvct, STTNhomHT = 0 }).OrderBy(p => p.STTDV).ThenBy(p => p.STTdvct).ToList();
                            rep.DataSource = qdv.OrderBy(p => p.STTDV).ThenBy(p => p.STTdvct).ToList();

                            rep.dataBinhding();
                            rep.CreateDocument();
                            frm.prcIN.PrintingSystem = rep.PrintingSystem;
                            if (PrintNow)
                                DungChung.Ham.PrintReport(rep);
                            else
                                frm.ShowDialog();
                        }
                    }
                    else
                        _In_XNViSinh(_Data, idcls, _Mabn, _so, _lIdCls, _lMaDV);
                    break;
                #endregion
                case "XN hóa sinh miễn dịch":
                    xnhoasinhmiendich(_Data, _Mabn, idcls, _so);
                    break;
                case "XN mô bệnh học":
                    //if(DungChung.Bien.MaBV == "27023")
                    //{

                    //    PhieuXNMoBenhHoc_New(_Mabn, idcls);
                    //}
                    //else
                    QLBV.FormThamSo.frm_kqcls.InPhieuXNGiaiPhauSinhThiet(idcls, _Mabn);
                    break;
                case "XN Tế bào học":
                    PhieuXNTeBaoHoc_New(_Mabn, idcls);
                    break;
                #region XN Đông cầm máu
                case "XN Đông cầm máu":
                    {

                        if ((DungChung.Bien.MaBV == "30010" || DungChung.Bien.MaBV == "30009" || DungChung.Bien.MaBV == "30012") && dongmau.TenRG.ToLower().Contains("đông cầm máu"))
                        {
                            #region 30010 || 30012
                            var bn1 = (from benhnhan in _Data.BenhNhans
                                       join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on benhnhan.MaBNhan equals cls.MaBNhan
                                       select new { cls.CapCuu, benhnhan.NNhap, benhnhan.MaBNhan, benhnhan.SThe, benhnhan.TenBNhan, benhnhan.Tuoi, benhnhan.GTinh, benhnhan.DChi, cls.NgayThang, cls.MaCB, cls.MaCBth, cls.NgayTH, cls.MaKP, cls.MaKPth }).FirstOrDefault();

                            BaoCao.rep_XNRoiLoanDongMau rep3 = new BaoCao.rep_XNRoiLoanDongMau();
                            if (bn1 != null)
                            {
                                //int noichuyen = 3;// 1- nơi khác chuyển đến (MaBV != null), 2- Y tế tư (CDNoiGT != null) , 3-Tự đến
                                string ngaythang = "";
                                int stt = 1;

                                //khoa phòng chỉ định
                                var khoa = _Data.KPhongs.Where(p => p.MaKP == bn1.MaKP).FirstOrDefault();
                                if (khoa != null && khoa.TenKP != null)
                                    rep3.celKhoa.Text = "Khoa: " + khoa.TenKP;
                                var vv = _Data.VaoViens.Where(p => p.MaBNhan == bn1.MaBNhan).ToList().FirstOrDefault();
                                //thông tin chung
                                rep3.celHoTen.Text = bn1.TenBNhan;
                                rep3.celCQCQ.Text = DungChung.Bien.TenCQCQ.ToUpper();
                                rep3.celCQ.Text = DungChung.Bien.TenCQ.ToUpper();
                                rep3.celDChi.Text = "Địa chỉ: " + bn1.DChi;
                                rep3.celSo.Text = vv != null ? vv.SoBA : "";
                                rep3.thuong.Text = bn1.CapCuu == false ? "X" : "";
                                rep3.capcuu.Text = bn1.CapCuu == true ? "X" : "";
                                if (bn1.SThe != null && bn1.SThe.Length >= 15)
                                {
                                    rep3.SThe5.Text = bn1.SThe;
                                }

                                rep3.celTuoi.Text = bn1.Tuoi == null ? "Tuổi:" : ("Tuổi: " + bn1.Tuoi.ToString());
                                if (bn1.GTinh == 1)
                                    rep3.celGTinh.Text = "Giới tính : Nam";
                                else
                                    rep3.celGTinh.Text = "Giới tính : Nữ";

                                // lấy thoongt in phòng, buồng giường
                                var qbnkb = _Data.BNKBs.Where(p => p.MaBNhan == bn1.MaBNhan && p.MaKP == bn1.MaKP).FirstOrDefault();
                                if (qbnkb != null)
                                {
                                    rep3.celChanDoan.Text = "Chẩn đoán lâm sàng: " + qbnkb.ChanDoan;
                                    rep3.celBuong.Text = "Buồng: " + qbnkb.Buong;
                                    rep3.celGiuong.Text = "Giường: " + qbnkb.Giuong;
                                }

                                // ngày tháng, bác sỹ chỉ định và ngày tháng, bác sỹ thực hiện
                                if (bn1.NgayThang != null)
                                {
                                    rep3.ngayyeucau.Text = "Ngày " + bn1.NgayThang.Value.Day + " tháng " + bn1.NgayThang.Value.Month + " năm " + bn1.NgayThang.Value.Year;
                                    ngaythang = bn1.NgayThang.Value.ToString("dd/MM/yyyy");
                                }
                                if (bn1.NgayTH != null)
                                {
                                    rep3.ngayth.Text = "Ngày " + bn1.NgayTH.Value.Day + " tháng " + bn1.NgayTH.Value.Month + " năm " + bn1.NgayTH.Value.Year;

                                }
                                if (DungChung.Bien.MaBV == "30010")
                                {
                                    int mkpth = Convert.ToInt32(bn1.MaKPth.Value);
                                    rep3.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                                }//yenbg1
                                var canbo = _Data.CanBoes.Where(p => p.MaCB == bn1.MaCB).FirstOrDefault();
                                if (canbo != null)
                                    rep3.txt_BSCD.Text = canbo.TenCB;
                                var dv1 = (from dv in _Data.DichVus.Where(p => DungChung.Bien.MaBV != "30012" ? (p.TenDV.ToLower().Contains(DungChung.Bien.MaBV == "30010" ? "thời gian prothrombin (pt: prothrombin time), (các tên khác: tq; tỷ lệ prothrombin) bằng máy tự động" : "thời gian prothrombin(pt:prothrombin time - thời gian prothrombin) (các tên khác như tq: tỷ lệ prothrombin) bằng máy tự động")
                                    || p.TenDV.ToLower().Contains(DungChung.Bien.MaBV == "30010" ? "thời gian thromboplastin một phần hoạt hóa (aptt: activated partial thromboplastin time), (tên khác: tck) bằng máy tự động" : "thời gian thromboplastin một phần hoạt hoá (aptt: activated partial thromboplastin time), (tên khác: tck) bằng máy tự động")
                                    || p.TenDV.ToLower().Contains(DungChung.Bien.MaBV == "30010" ? "thời gian thrombin (tt: thrombin time) bằng máy tự động" : "thời gian thrombin (tt: thrombin time) bằng máy tự động")
                                    || p.TenDV.ToLower().Contains(DungChung.Bien.MaBV == "30010" ? "định lượng fibrinogen (tên khác: định lượng yếu tố i), phương pháp clauss- phương pháp trực tiếp, bằng máy tự động" : "định lượng fibrinogen (tên khác: định lượng yếu tố i), phương pháp clauss- phương pháp trực tiếp, bằng máy tự động"))

                                    : (p.TenDV.ToLower().Contains("thời gian prothrombin(pt:prothrombin time - thời gian prothrombin) (các tên khác như tq: tỷ lệ prothrombin) bằng máy bán tự động")
                                    || p.TenDV.ToLower().Contains("thời gian thromboplastin một phần hoạt hoá (aptt: activated partial thromboplastin time), (tên khác: tck) bằng máy bán tự động")
                                    || p.TenDV.ToLower().Contains("thời gian thrombin (tt: thrombin time) bằng máy bán tự động")
                                    || p.TenDV.ToLower().Contains("định lượng fibrinogen (tên khác: định lượng yếu tố i), phương pháp clauss- phương pháp trực tiếp, bằng máy bán tự động")))
                                           join dvct in _Data.DichVucts on dv.MaDV equals dvct.MaDV
                                           join tn in _Data.TieuNhomDVs.Where(p => p.TenRG.ToLower().Contains("đông cầm máu")) on dv.IdTieuNhom equals tn.IdTieuNhom
                                           select new
                                           {
                                               STT = DungChung.Bien.MaBV != "30012" ? (dv.TenDV.ToLower().Contains(DungChung.Bien.MaBV == "30010" ? "thời gian prothrombin (pt: prothrombin time), (các tên khác: tq; tỷ lệ prothrombin) bằng máy tự động" : "thời gian prothrombin(pt:prothrombin time - thời gian prothrombin) (các tên khác như tq: tỷ lệ prothrombin) bằng máy tự động") ? 1 : (dv.TenDV.ToLower().Contains(DungChung.Bien.MaBV == "30010" ? "thời gian thromboplastin một phần hoạt hóa (aptt: activated partial thromboplastin time), (tên khác: tck) bằng máy tự động" : "thời gian thromboplastin một phần hoạt hoá (aptt: activated partial thromboplastin time), (tên khác: tck) bằng máy tự động") ? 2 : (dv.TenDV.ToLower().Contains(DungChung.Bien.MaBV == "30010" ? "thời gian thrombin (tt: thrombin time) bằng máy tự động" : "thời gian thrombin (tt: thrombin time) bằng máy tự động") ? 3 : 4)))
                                               : (dv.TenDV.ToLower().Contains("thời gian prothrombin(pt:prothrombin time - thời gian prothrombin) (các tên khác như tq: tỷ lệ prothrombin) bằng máy bán tự động") ? 1 : (dv.TenDV.ToLower().Contains("thời gian thromboplastin một phần hoạt hoá (aptt: activated partial thromboplastin time), (tên khác: tck) bằng máy bán tự động") ? 2 : (dv.TenDV.ToLower().Contains("thời gian thrombin (tt: thrombin time) bằng máy bán tự động") ? 3 : 4))),
                                               dvct.TenDVct,
                                               STTCT = dvct.STT,
                                               dv.TenDV,
                                               dvct.MaDVct,
                                               dvct.TSBT,
                                               dvct.DonVi,
                                               dv.MaDV
                                           }).ToList();

                                var dv2 = (from dv in _Data.DichVus
                                           join dvct in _Data.DichVucts on dv.MaDV equals dvct.MaDV
                                           //join tn in _Data.TieuNhomDVs.Where(p => p.TenRG.ToLower().Contains("đông cầm máu")) on dv.IdTieuNhom equals tn.IdTieuNhom
                                           join tn in _Data.TieuNhomDVs.Where(p => p.IdTieuNhom == 1052) on dv.IdTieuNhom equals tn.IdTieuNhom
                                           select new
                                           {
                                               STT = DungChung.Bien.MaBV != "30012" ? (dv.TenDV.ToLower().Contains(DungChung.Bien.MaBV == "30010" || DungChung.Bien.MaBV == "30009" ? "thời gian prothrombin (pt: prothrombin time), (các tên khác: tq; tỷ lệ prothrombin) bằng máy tự động" : "thời gian prothrombin(pt:prothrombin time - thời gian prothrombin) (các tên khác như tq: tỷ lệ prothrombin) bằng máy tự động") ? 1 : (dv.TenDV.ToLower().Contains(DungChung.Bien.MaBV == "30010" || DungChung.Bien.MaBV == "30009" ? "thời gian thromboplastin một phần hoạt hóa (aptt: activated partial thromboplastin time), (tên khác: tck) bằng máy tự động" : "thời gian thromboplastin một phần hoạt hoá (aptt: activated partial thromboplastin time), (tên khác: tck) bằng máy tự động") ? 2 : (dv.TenDV.ToLower().Contains(DungChung.Bien.MaBV == "30010" || DungChung.Bien.MaBV == "30009" ? "thời gian thrombin (tt: thrombin time) bằng máy tự động" : "thời gian thrombin (tt: thrombin time) bằng máy tự động") ? 3 : 4)))
                                               : (dv.TenDV.ToLower().Contains("thời gian prothrombin(pt:prothrombin time - thời gian prothrombin) (các tên khác như tq: tỷ lệ prothrombin) bằng máy bán tự động") ? 1 : (dv.TenDV.ToLower().Contains("thời gian thromboplastin một phần hoạt hoá (aptt: activated partial thromboplastin time), (tên khác: tck) bằng máy bán tự động") ? 2 : (dv.TenDV.ToLower().Contains("thời gian thrombin (tt: thrombin time) bằng máy bán tự động") ? 3 : 4))),
                                               dvct.TenDVct,
                                               STTCT = dvct.STT,
                                               dv.TenDV,
                                               dvct.MaDVct,
                                               dvct.TSBT,
                                               dvct.DonVi,
                                               dv.MaDV
                                           }).ToList();

                                // kết quả xét nghiệm
                                List<ds> _ds = new List<ds>();
                                var kqcls = (from cd in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                                             join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                             join dvct in _Data.DichVucts.Where(p => p.Status == 1) on clsct.MaDVct equals dvct.MaDVct
                                             join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                                             join tn in _Data.TieuNhomDVs.Where(p => p.TenRG.ToLower().Contains("đông cầm máu")) on dv.IdTieuNhom equals tn.IdTieuNhom
                                             select new { cd.MaDV, dvct.TenDVct, STTCT = dvct.STT, clsct.KetQua, dv.TenDV, dvct.MaDVct, dvct.TSBT, dvct.DonVi }).ToList();
                                if (DungChung.Bien.MaBV == "30009")
                                {
                                    foreach (var item in dv2)
                                    {
                                        ds moi = new ds();
                                        moi.STT = item.STT;
                                        moi.TenDV = item.TenDV;
                                        moi.STTDV = item.STTCT ?? 0;
                                        moi.DonVi = item.DonVi;
                                        moi.TSBT = item.TSBT;

                                        foreach (var item2 in kqcls)
                                        {
                                            if (item.MaDVct == item2.MaDVct && item.MaDV == item2.MaDV)
                                                moi.KetQua = item2.KetQua;
                                        }
                                        _ds.Add(moi);
                                    }
                                }
                                else
                                {
                                    foreach (var item in dv1)
                                    {
                                        ds moi = new ds();
                                        moi.STT = item.STT;
                                        moi.TenDV = item.TenDV;
                                        moi.STTDV = item.STTCT ?? 0;
                                        moi.DonVi = item.DonVi;
                                        moi.TSBT = item.TSBT;

                                        foreach (var item2 in kqcls)
                                        {
                                            if (item.MaDVct == item2.MaDVct && item.MaDV == item2.MaDV)
                                                moi.KetQua = item2.KetQua;
                                        }
                                        _ds.Add(moi);
                                    }
                                }

                                _ds = _ds.OrderBy(p => p.STT).ThenBy(p => p.STTDV).ToList();
                                rep3.dv1.Text = _ds.Count > 0 ? _ds.Skip(0).FirstOrDefault().DonVi : "";
                                rep3.dv2.Text = _ds.Count > 1 ? _ds.Skip(1).FirstOrDefault().DonVi : "";
                                rep3.dv3.Text = _ds.Count > 2 ? _ds.Skip(2).FirstOrDefault().DonVi : "";
                                rep3.dv4.Text = _ds.Count > 3 ? _ds.Skip(3).FirstOrDefault().DonVi : "";
                                rep3.dv5.Text = _ds.Count > 4 ? _ds.Skip(4).FirstOrDefault().DonVi : "";

                                rep3.dv6.Text = _ds.Count > 5 ? _ds.Skip(5).FirstOrDefault().DonVi : "";
                                rep3.dv7.Text = _ds.Count > 6 ? _ds.Skip(6).FirstOrDefault().DonVi : "";
                                rep3.dv8.Text = _ds.Count > 7 ? _ds.Skip(7).FirstOrDefault().DonVi : "";

                                rep3.cs1.Text = _ds.Count > 0 ? _ds.Skip(0).FirstOrDefault().TSBT : "";
                                rep3.cs2.Text = _ds.Count > 1 ? _ds.Skip(1).FirstOrDefault().TSBT : "";
                                rep3.cs3.Text = _ds.Count > 2 ? _ds.Skip(2).FirstOrDefault().TSBT : "";
                                rep3.cs4.Text = _ds.Count > 3 ? _ds.Skip(3).FirstOrDefault().TSBT : "";
                                rep3.cs5.Text = _ds.Count > 4 ? _ds.Skip(4).FirstOrDefault().TSBT : "";
                                rep3.cs6.Text = _ds.Count > 5 ? _ds.Skip(5).FirstOrDefault().TSBT : "";
                                rep3.cs7.Text = _ds.Count > 6 ? _ds.Skip(6).FirstOrDefault().TSBT : "";
                                rep3.cs8.Text = _ds.Count > 7 ? _ds.Skip(7).FirstOrDefault().TSBT : "";

                                rep3.kq1.Text = _ds.Count > 0 ? _ds.Skip(0).FirstOrDefault().KetQua : "";
                                rep3.kq2.Text = _ds.Count > 1 ? _ds.Skip(1).FirstOrDefault().KetQua : "";
                                rep3.kq3.Text = _ds.Count > 2 ? _ds.Skip(2).FirstOrDefault().KetQua : "";
                                rep3.kq4.Text = _ds.Count > 3 ? _ds.Skip(3).FirstOrDefault().KetQua : "";
                                rep3.kq5.Text = _ds.Count > 4 ? _ds.Skip(4).FirstOrDefault().KetQua : "";
                                rep3.kq6.Text = _ds.Count > 5 ? _ds.Skip(5).FirstOrDefault().KetQua : "";
                                rep3.kq7.Text = _ds.Count > 6 ? _ds.Skip(6).FirstOrDefault().KetQua : "";
                                rep3.kq8.Text = _ds.Count > 7 ? _ds.Skip(7).FirstOrDefault().KetQua : "";
                                rep3.CreateDocument();
                            }
                            frmIn inphieu = new frmIn();
                            inphieu.prcIN.PrintingSystem = rep3.PrintingSystem;
                            if (PrintNow)
                                DungChung.Ham.PrintReport(rep3);
                            else
                                inphieu.ShowDialog();
                            #endregion
                        }
                        #region 30004
                        else if (DungChung.Bien.MaBV == "30004")
                        {
                            string TenKP = ""; string MaMay = "";
                            List<InXNTongHop> _ltn = new List<InXNTongHop>();
                            _ltn = (from cd in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                                    join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                    join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                                    join tndv in _Data.TieuNhomDVs on dv.IdTieuNhom equals tndv.IdTieuNhom
                                    join tn in _Data.DichVucts on clsct.MaDVct equals tn.MaDVct
                                    select new InXNTongHop
                                    {
                                        IdTieuNhom = tndv.IdTieuNhom,
                                        TenTN = tndv.TenTN,
                                        MaMay = cd.MaMay ?? "",
                                        IdCLS = cd.IdCLS ?? 0,
                                        IdCD = cd.IDCD,

                                    }).ToList();
                            if (_ltn.Count() > 0)
                            {
                                var kps = (from cls in _Data.CLS.Where(p => p.IdCLS == idcls)
                                           join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                           select new { kp.TenKP }).ToList();
                                CLS.InPhieu._inPhieuXNTongHop_30004(_Mabn, _ltn, false, TenKP = kps.FirstOrDefault().TenKP ?? "", MaMay);
                            }
                        }
                        #endregion
                        #region 30003
                        else if (DungChung.Bien.MaBV == "30003" && dongmau.TenRG.ToLower().Contains("đông cầm máu"))
                        {
                            var bn1 = (from benhnhan in _Data.BenhNhans
                                       join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on benhnhan.MaBNhan equals cls.MaBNhan
                                       select new { cls.CapCuu, benhnhan.NNhap, benhnhan.MaBNhan, benhnhan.SThe, benhnhan.TenBNhan, benhnhan.Tuoi, benhnhan.GTinh, benhnhan.DChi, cls.NgayThang, cls.MaCB, cls.MaCBth, cls.NgayTH, cls.MaKP, cls.GhiChu }).FirstOrDefault();

                            BaoCao.rep_XNRoiLoanDongMau_30003 rep3 = new BaoCao.rep_XNRoiLoanDongMau_30003();
                            if (bn1 != null)
                            {
                                //int noichuyen = 3;// 1- nơi khác chuyển đến (MaBV != null), 2- Y tế tư (CDNoiGT != null) , 3-Tự đến
                                string ngaythang = "";
                                int stt = 1;

                                //khoa phòng chỉ định
                                var khoa = _Data.KPhongs.Where(p => p.MaKP == bn1.MaKP).FirstOrDefault();
                                if (khoa != null && khoa.TenKP != null)
                                    rep3.celKhoa.Text = "Khoa: " + khoa.TenKP;
                                var vv = _Data.VaoViens.Where(p => p.MaBNhan == bn1.MaBNhan).ToList().FirstOrDefault();
                                //thông tin chung
                                rep3.celHoTen.Text = bn1.TenBNhan;
                                rep3.celCQCQ.Text = DungChung.Bien.TenCQCQ.ToUpper();
                                rep3.celCQ.Text = DungChung.Bien.TenCQ.ToUpper();
                                rep3.celDChi.Text = "Địa chỉ: " + bn1.DChi;
                                rep3.celSo.Text = vv != null ? vv.SoBA : "";
                                rep3.thuong.Text = bn1.CapCuu == false ? "X" : "";
                                rep3.capcuu.Text = bn1.CapCuu == true ? "X" : "";
                                if (bn1.SThe != null && bn1.SThe.Length >= 15)
                                {
                                    rep3.SThe5.Text = bn1.SThe;
                                }

                                rep3.celTuoi.Text = bn1.Tuoi == null ? "Tuổi:" : ("Tuổi: " + bn1.Tuoi.ToString());
                                if (bn1.GTinh == 1)
                                {
                                    rep3.lblNam.Text = "";
                                    rep3.lblNu.Text = "\\";
                                }
                                //rep3.celGTinh.Text = "Giới tính : Nam";

                                else
                                {
                                    rep3.lblNam.Text = "\\";
                                    rep3.lblNu.Text = "";
                                }
                                //rep3.celGTinh.Text = "Giới tính : Nữ";

                                // lấy thoongt in phòng, buồng giường
                                var qbnkb = _Data.BNKBs.Where(p => p.MaBNhan == bn1.MaBNhan && p.MaKP == bn1.MaKP).FirstOrDefault();
                                if (qbnkb != null)
                                {
                                    rep3.celChanDoan.Text = "Chẩn đoán lâm sàng: " + qbnkb.ChanDoan;
                                    rep3.celBuong.Text = "Buồng: " + qbnkb.Buong;
                                    rep3.celGiuong.Text = "Giường: " + qbnkb.Giuong;
                                }

                                // ngày tháng, bác sỹ chỉ định và ngày tháng, bác sỹ thực hiện
                                if (bn1.NgayThang != null)
                                {
                                    rep3.ngayyeucau.Text = "Ngày " + bn1.NgayThang.Value.Day + " tháng " + bn1.NgayThang.Value.Month + " năm " + bn1.NgayThang.Value.Year;
                                    ngaythang = bn1.NgayThang.Value.ToString("dd/MM/yyyy");
                                }
                                if (bn1.NgayTH != null)
                                {
                                    rep3.ngayth.Text = "Ngày " + bn1.NgayTH.Value.Day + " tháng " + bn1.NgayTH.Value.Month + " năm " + bn1.NgayTH.Value.Year;

                                }
                                rep3.celNhanXet.Text = bn1.GhiChu;
                                var canbo = _Data.CanBoes.Where(p => p.MaCB == bn1.MaCB).FirstOrDefault();
                                if (canbo != null)
                                    rep3.txt_BSCD.Text = canbo.TenCB;

                                // kết quả xét nghiệm
                                var qdvct = (from tn in _Data.TieuNhomDVs.Where(p => p.TenRG.ToLower().Contains("đông cầm máu"))
                                             join dv in _Data.DichVus on tn.IdTieuNhom equals dv.IdTieuNhom
                                             join dvct in _Data.DichVucts.Where(p => p.Status == 1) on dv.MaDV equals dvct.MaDV
                                             select new { STT = dv.SoTT, STTCT = dvct.STT_R, dv.TenDV, dv.MaDV, dvct.MaDVct, dvct.TSBT, dvct.DonVi }).ToList();

                                var qdv = (from dv in qdvct group dv by new { dv.MaDV } into kq select new { MaDV = kq.Key.MaDV, count = kq.Count() }).ToList();

                                var qdvctCount = (from dvct in qdvct join dvu in qdv on dvct.MaDV equals dvu.MaDV select new { dvct.STT, STTCT = dvct.STTCT, dvct.TenDV, dvct.MaDV, dvct.MaDVct, dvct.TSBT, dvct.DonVi, dvu.count }).ToList();

                                var kqcls = (from cd in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                                             join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                             join dvct in _Data.DichVucts.Where(p => p.Status == 1) on clsct.MaDVct equals dvct.MaDVct
                                             join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                                             join tn in _Data.TieuNhomDVs.Where(p => p.TenRG.ToLower().Contains("đông cầm máu")) on dv.IdTieuNhom equals tn.IdTieuNhom
                                             select new { cd.MaDV, dvct.TenDVct, STTCT = dvct.STT, STT = dv.SoTT, clsct.KetQua, dv.TenDV, dvct.MaDVct, dvct.TSBT, dvct.DonVi }).OrderBy(p => p.STT).ThenBy(p => p.STTCT).ToList();
                                List<ds> _ds = new List<ds>();
                                foreach (var item in qdvctCount)
                                {
                                    ds moi = new ds();
                                    moi.STT = item.STT ?? 0;
                                    moi.TenDV = item.TenDV;
                                    moi.STTDV = 0;//item.STTCT ?? 0;
                                    moi.DonVi = item.DonVi;
                                    moi.TSBT = item.TSBT;
                                    moi.count = item.count;
                                    foreach (var item2 in kqcls)
                                    {
                                        if (item.MaDVct == item2.MaDVct)
                                        {
                                            moi.KetQua = item2.KetQua;
                                            moi.check = "X";
                                        }
                                    }
                                    _ds.Add(moi);
                                }
                                rep3.DataSource = _ds;
                                rep3.BindingData();

                                rep3.CreateDocument();
                                frmIn inphieu = new frmIn();
                                inphieu.prcIN.PrintingSystem = rep3.PrintingSystem;
                                if (PrintNow)
                                    DungChung.Ham.PrintReport(rep3);
                                else
                                    inphieu.ShowDialog();
                            }
                            else
                                MessageBox.Show("Không có dữ liệu");
                        }
                        #endregion

                        else
                            _InPhieuXNCamMau_01071(_Mabn, idcls, _tieunhom, _lIdCls, _lMaDV);
                    }
                    break;
                #endregion
                case "XN Nồng độ cồn":
                    frmIn frm32 = new frmIn();
                    BaoCao.rep_PhieuYCXNNongDoConTrongMau rep32 = new BaoCao.rep_PhieuYCXNNongDoConTrongMau();
                    var par32 = (from cls3 in _Data.CLS.Where(p => p.IdCLS == idcls)
                                 join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                 join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                 select new { cls3.MaCB, cls3.TrangThaiBP, cls3.TrangThaiBN, cls3.MaCBLayMau, cls3.MaCBth, cdcls.MaMay, cls3.NgayTH }).ToList();
                    var _lcb = _Data.CanBoes.ToList();
                    var ttbn = _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn).FirstOrDefault();
                    rep32.tencqcq.Value = DungChung.Bien.TenCQCQ.ToUpper();
                    rep32.tencq.Value = DungChung.Bien.TenCQ.ToUpper();
                    if (par32.Count > 0)
                    {
                        if (ttbn != null)
                            rep32.HoTen.Value = ttbn.TenBNhan;
                        rep32.TinhTrangMau.Value = par32.FirstOrDefault().TrangThaiBP;
                        rep32.TinhTrangBN.Value = par32.FirstOrDefault().TrangThaiBN;
                        if (par32.FirstOrDefault().MaCB != null)
                        {
                            string macb = par32.FirstOrDefault().MaCB;
                            var tencb1 = _lcb.Where(p => p.MaCB == macb).FirstOrDefault();
                            if (tencb1 != null)
                                rep32.BSCD.Value = tencb1.TenCB.ToString();
                        }
                        if (par32.FirstOrDefault().MaCBLayMau != null)
                        {
                            string macb = par32.FirstOrDefault().MaCBLayMau;
                            var tencb1 = _lcb.Where(p => p.MaCB == macb).FirstOrDefault();
                            if (tencb1 != null)
                                rep32.NguoiLayMau.Value = tencb1.TenCB.ToString();
                        }
                        if (par32.FirstOrDefault().MaCBth != null)
                        {
                            string macb = par32.FirstOrDefault().MaCBth;
                            var tencb1 = _lcb.Where(p => p.MaCB == macb).FirstOrDefault();
                            if (tencb1 != null)
                                rep32.BSTH.Value = tencb1.TenCB.ToString();
                        }
                        if (par32.FirstOrDefault().NgayTH != null)
                            rep32.NgayGio.Value = par32.FirstOrDefault().NgayTH.Value.Hour + "Giờ, ngày " + par32.FirstOrDefault().NgayTH.Value.Day + " tháng " + par32.FirstOrDefault().NgayTH.Value.Month + " năm " + par32.FirstOrDefault().NgayTH.Value.Year;
                        var _lkq = (from cd in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                                    join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                    join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                    select new { cd.MaMay, clsct.KetQua, dvct.TenDVct, dvct.TSBT, dvct.DonVi }).ToList();
                        rep32.DataSource = _lkq;
                        rep32.BindingData();
                        rep32.CreateDocument();
                        frm32.prcIN.PrintingSystem = rep32.PrintingSystem;
                        if (PrintNow)
                            DungChung.Ham.PrintReport(rep32);
                        else
                            frm32.ShowDialog();
                    }
                    break;
                #region XN ung thư
                case "XN Ung thư":
                    if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                    {
                        InPhieuXNHuyetHoc_01070(_Mabn, idcls, _tieunhom);
                    }
                    else
                    {
                        frmIn frm311 = new frmIn();
                        BaoCao.Rep_PhieuXNKhac rep311 = new BaoCao.Rep_PhieuXNKhac();
                        rep311.SoPhieu.Value = idcls;
                        rep311.colMaBN.Text = _Mabn.ToString(); ;
                        var par311 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                      join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                      join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                      join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                      join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                      select new { cls3.CapCuu, cls3.MaKP, NgayCD = cls3.NgayThang, NgayTH = cls3.NgayTH, cls3.MaCBth, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.NoiTru, bn.GTinh, bn.Tuoi, bn.SThe, MaCBDT = cls3.MaCB, cdcls.ChiDinh1, cdcls.KetLuan, cdcls.Status, cls3.BarCode }).ToList();
                        if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                        {
                            rep311.txtBarcode.Text = par311.Count > 0 ? par311.FirstOrDefault().BarCode : "";
                            rep311.lblBarcode.Visible = true;
                            rep311.txtBarcode.Visible = true;
                            rep311.sovv.Visible = false;
                        }
                        if (DungChung.Bien.MaBV == "27023")
                            rep311.So.Value = _so;
                        else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                        {
                            if (par311.Count > 0)
                            {
                                int mabn = par311.FirstOrDefault().MaBNhan;
                                var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                                if (qvv != null)
                                    rep311.So.Value = qvv.SoVV;
                                else
                                    rep311.So.Value = "";

                            }
                        }
                        else
                            rep311.So.Value = idcls;
                        int _makp31 = 0;

                        if (par311.Count > 0)
                        {
                            if (DungChung.Bien.MaBV == "12122")
                            {
                                if (par311.FirstOrDefault().Status == 0)
                                {
                                    rep311.xrTableCell4.Visible = false;
                                    rep311.xrTableCell8.Visible = false;
                                    rep311.colTenTKXN.Visible = false;
                                }
                                else
                                {
                                    rep311.xrTableCell7.Visible = false;
                                    rep311.xrTableCell3.Visible = false;
                                    rep311.colTenBSDT.Visible = false;
                                }
                            }
                            if (par311.FirstOrDefault().NoiTru == 1)
                            {
                                var sovv = _Data.VaoViens.Where(p => p.MaBNhan == _Mabn).Select(p => p.SoVV).FirstOrDefault();
                                if (sovv != null)
                                    rep311.sovv.Text = "Số VV: " + sovv.ToString();
                            }
                            _makp31 = par311.FirstOrDefault().MaKP == null ? 0 : par311.FirstOrDefault().MaKP.Value;
                            rep311.Macb.Value = par311.FirstOrDefault().MaCBth;
                            rep311.MaCBDT.Value = par311.FirstOrDefault().MaCBDT;
                            rep311.DiaChi.Value = par311.FirstOrDefault().DChi;
                            rep311.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                            rep311.MaBNhan.Value = par311.FirstOrDefault().MaBNhan;
                            rep311.TenBNhan.Value = par311.FirstOrDefault().TenBNhan.ToUpper();
                            rep311.thuong.Text = (par311.FirstOrDefault().CapCuu == false) ? "X" : "";
                            rep311.capcuu.Text = (par311.FirstOrDefault().CapCuu == true) ? "X" : "";
                            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp31, true);
                            rep311.MaICD.Value = "Mã ICD: " + arrThongTinBNKB[0];
                            rep311.ChanDoan.Value = DungChung.Bien.MaBV != "24272" ? arrThongTinBNKB[1] : "";
                            rep311.Buong.Value = arrThongTinBNKB[2];
                            rep311.Giuong.Value = arrThongTinBNKB[3];

                            rep311.Khoa.Value = arrThongTinBNKB[4];

                            if (par311.FirstOrDefault().NgayCD != null)
                                rep311.NgayCD.Value = DungChung.Ham.NgaySangChu(par311.FirstOrDefault().NgayCD.Value, DungChung.Bien.FormatDate);
                            else
                                rep311.NgayCD.Value = "Ngày .... tháng ..... năm .....";
                            if (par311.FirstOrDefault().NgayTH != null)
                                rep311.NgayTH.Value = DungChung.Ham.NgaySangChu(par311.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                            else

                                rep311.NgayTH.Value = "Ngày .... tháng ..... năm .....";
                            int gioiTinh = int.Parse(par311.FirstOrDefault().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep311.Nu.Value = "/".ToUpper();
                            }
                            else if (gioiTinh == 0)
                            {
                                rep311.Nam.Value = "/".ToUpper();
                            }

                            if (par311.FirstOrDefault().SThe != null && par311.FirstOrDefault().SThe.Length >= 15)
                            {
                                rep311.SThe1.Value = par311.FirstOrDefault().SThe.Substring(0, 3);
                                rep311.SThe2.Value = par311.FirstOrDefault().SThe.Substring(3, 2);
                                rep311.SThe3.Value = par311.FirstOrDefault().SThe.Substring(5, 2);
                                rep311.SThe4.Value = par311.FirstOrDefault().SThe.Substring(7, 3);
                                rep311.SThe5.Value = par311.FirstOrDefault().SThe.Substring(10, 5);
                            }
                        }
                        var parx1 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                     join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                                     join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                                     join dv in _Data.DichVus on cdcls.MaDV equals dv.MaDV
                                     join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                                     //join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                     group new { dv, clsct } by new { TenDV = DungChung.Bien.MaBV == "20001 " ? dv.TenRG : dv.TenDV, clsct.KetQua } into kq
                                     select new { YC = kq.Key.TenDV, KQ = kq.Key.KetQua }).ToList();
                        if (parx1.Count > 0)
                        {
                            rep311.DataSource = parx1;
                            rep311.BindingData();
                        }
                        rep311.CreateDocument();
                        frm311.prcIN.PrintingSystem = rep311.PrintingSystem;
                        if (PrintNow)
                            DungChung.Ham.PrintReport(rep311);
                        else
                            frm311.ShowDialog();
                    }
                    break;
                #endregion
                case "XN miễn dịch":
                    if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                    {

                        InPhieuXNHuyetHoc_01070(_Mabn, idcls, _tieunhom);
                    }
                    else if (DungChung.Bien.MaBV == "30004")
                    {
                        string TenKP = ""; string MaMay = "";
                        List<InXNTongHop> _ltn = new List<InXNTongHop>();
                        _ltn = (from cd in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                                join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                join dv in _Data.DichVus on cd.MaDV equals dv.MaDV
                                join tndv in _Data.TieuNhomDVs on dv.IdTieuNhom equals tndv.IdTieuNhom
                                join tn in _Data.DichVucts on clsct.MaDVct equals tn.MaDVct
                                select new InXNTongHop
                                {
                                    IdTieuNhom = tndv.IdTieuNhom,
                                    TenTN = tndv.TenTN,
                                    MaMay = cd.MaMay ?? "",
                                    IdCLS = cd.IdCLS ?? 0,
                                    IdCD = cd.IDCD,

                                }).ToList();
                        if (_ltn.Count() > 0)
                        {
                            var kps = (from cls in _Data.CLS.Where(p => p.IdCLS == idcls)
                                       join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                       select new { kp.TenKP }).ToList();
                            CLS.InPhieu._inPhieuXNTongHop_30004(_Mabn, _ltn, false, TenKP = kps.FirstOrDefault().TenKP ?? "", MaMay);
                        }
                    }
                    else
                    {

                        InPhieuXetNghiemMienDich(_Data, _Mabn, idcls, _tieunhom);
                    }
                    break;
                case "Trắc nghiệm tâm lý":
                    if (DungChung.Bien.MaBV == "34019")
                    {


                        var par2 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                    join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                    join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                    select new { cls.MaKP, cls.NgayThang, cls.NgayTH, cls.CapCuu, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, MaCBDT = cls.MaCB, cls.MaCBth, bn.NamSinh, bn.ThangSinh, bn.NgaySinh, bn.DTuong, bn.HanBHDen, bn.HanBHTu, kp.TenKP, bn.IDPerson }).ToList();
                        if (par2 != null && par2.Count > 0)
                        {
                            DateTime ngaycd = Convert.ToDateTime(par2.FirstOrDefault().NgayThang);
                            var par41 = (from cls in _Data.CLS.Where(p => p.NgayThang == ngaycd)
                                         join chidinh in _Data.ChiDinhs on cls.IdCLS equals chidinh.IdCLS
                                         join dichvu in _Data.DichVus on chidinh.MaDV equals dichvu.MaDV
                                         join tn in _Data.TieuNhomDVs.Where(p => p.TenRG.Contains(_tieunhom)) on dichvu.IdTieuNhom equals tn.IdTieuNhom
                                         join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                                         join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                         select new { clsct.KetQua, clsct.STTHT, dvct.TenDVct, dichvu.TenDV, clsct.MaDVct, IsTrongBH = (chidinh.TrongBH == 1) }).ToList();

                            for (int i = 0; i < 2; i++)
                            {
                                var qhh_h = par41.Where(o => o.IsTrongBH == (i == 0)).ToList();
                                if (qhh_h.Count > 0)
                                {

                                    List<KQTNTL> kqtntl = new List<KQTNTL>();

                                    foreach (var item in qhh_h)
                                    {
                                        KQTNTL kqTN = new KQTNTL();
                                        kqTN.KetQua = item.KetQua;
                                        kqTN.TenDVct = item.TenDVct;
                                        kqTN.MaDVct = item.MaDVct;
                                        kqTN.TenDV = item.TenDV;
                                        int kq = 0;
                                        if (int.TryParse(item.KetQua, out kq))
                                        {
                                            var kqct = (from k in _Data.KQcts.Where(o => o.MaDVct == item.MaDVct && !(o.Tu == null && o.Den == null))
                                                        select k).ToList();
                                            if (kqct != null && kqct.Count > 0)
                                            {
                                                foreach (var ct in kqct)
                                                {
                                                    if (ct.Tu != null && ct.Den != null && ct.Tu <= kq && ct.Den >= kq)
                                                    {
                                                        kqTN.KetLuan = ct.KetLuan;
                                                        break;
                                                    }
                                                    else if (ct.Tu != null && ct.Den == null && ct.Tu <= kq)
                                                    {
                                                        kqTN.KetLuan = ct.KetLuan;
                                                        break;
                                                    }
                                                    else if (ct.Tu == null && ct.Den != null && ct.Den >= kq)
                                                    {
                                                        kqTN.KetLuan = ct.KetLuan;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                        kqtntl.Add(kqTN);
                                    }

                                    frmIn frmIn = new QLBV.frmIn();
                                    repPhieuKetQua_TNTamLy_34019_A4 rep = new repPhieuKetQua_TNTamLy_34019_A4();//4
                                    rep.xrPictureBox1.Image = QLBV.DungChung.Ham.GetLogo();
                                    //rep.SoPhieu.Value = par2.FirstOrDefault().SoPhieu;
                                    rep.MaDieuTri.Value = _Mabn;
                                    rep.MaBN.Value = par2.FirstOrDefault().IDPerson;
                                    rep.TenBV.Value = DungChung.Bien.TenCQ.ToUpper();
                                    var hthong = _Data.HTHONGs.FirstOrDefault(o => o.MaBV == DungChung.Bien.MaBV);
                                    if (hthong != null)
                                    {
                                        rep.DiaChiBV.Value = hthong.DiaChi;
                                    }
                                    rep.TenPhieu.Value = "PHIẾU KẾT QUẢ TRẮC NGHIỆM TÂM LÝ";
                                    //rep.KPhong.Value = par2.FirstOrDefault().TenKPth;
                                    rep.CapCuu.Value = (par2.FirstOrDefault().CapCuu == true) ? "X" : "";
                                    rep.TenBNhan.Value = par2.FirstOrDefault().TenBNhan.ToUpper();
                                    rep.NgaySinh.Value = DungChung.Ham.GhepNgaySinh("/", par2.FirstOrDefault().NamSinh, par2.FirstOrDefault().ThangSinh, par2.FirstOrDefault().NgaySinh);
                                    rep.GioiTinh.Value = par2.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";
                                    rep.DiaChi.Value = par2.FirstOrDefault().DChi;
                                    rep.NgayGio.Value = DungChung.Ham.NgaySangChu(DateTime.Now);
                                    //if (!string.IsNullOrWhiteSpace(par2.FirstOrDefault().DTuong) && par2.FirstOrDefault().DTuong == "BHYT")
                                    //{
                                    //    rep.BHYT.Value = "X";
                                    //}
                                    //else
                                    //    rep.ThuPhi.Value = "X";
                                    if (i == 0)
                                        rep.BHYT.Value = "X";
                                    else
                                        rep.ThuPhi.Value = "X";
                                    rep.CapCuu.Value = (par2.FirstOrDefault().CapCuu == true) ? "X" : "";
                                    if (i == 0)
                                    {
                                        if (!string.IsNullOrWhiteSpace(par2.FirstOrDefault().SThe))
                                        {
                                            rep.HanThe.Value = par2.FirstOrDefault().HanBHDen != null ? par2.FirstOrDefault().HanBHDen.Value.ToString("dd/MM/yyyy") : "";
                                            rep.HanTu.Value = par2.FirstOrDefault().HanBHTu != null ? par2.FirstOrDefault().HanBHTu.Value.ToString("dd/MM/yyyy") : "";
                                            rep.SThe1.Value = par2.FirstOrDefault().SThe.Substring(0, 2);
                                            rep.SThe2.Value = par2.FirstOrDefault().SThe.Substring(2, 1);
                                            rep.SThe3.Value = par2.FirstOrDefault().SThe.Substring(3, 2);
                                            rep.SThe4.Value = par2.FirstOrDefault().SThe.Substring(5, 2);
                                            rep.SThe5.Value = par2.FirstOrDefault().SThe.Substring(7, 3);
                                            rep.SThe6.Value = par2.FirstOrDefault().SThe.Substring(10, 5);
                                        }
                                    }
                                    rep.paramTenKP.Value = par2.FirstOrDefault().TenKP;
                                    var maKp = (par2.FirstOrDefault().MaKP == null ? 0 : par2.FirstOrDefault().MaKP.Value);
                                    var kbcd = (from bnkb in _Data.BNKBs.Where(p => p.MaBNhan == _Mabn && p.MaKP == maKp)
                                                select bnkb).ToList();
                                    if (kbcd != null && kbcd.Count > 0)
                                    {
                                        rep.BenhChinh.Value = kbcd.FirstOrDefault().ChanDoan + " (" + kbcd.FirstOrDefault().MaICD + ")";
                                        rep.BenhPhu.Value = kbcd.FirstOrDefault().BenhKhac;
                                        if (!string.IsNullOrWhiteSpace(kbcd.FirstOrDefault().Buong))
                                        {
                                            var spBuong = kbcd.FirstOrDefault().Buong.Split(';');
                                            if (spBuong != null && spBuong.Count() > 0)
                                            {
                                                rep.paramBuong.Value = spBuong[spBuong.Count() - 1];
                                            }
                                        }
                                        if (!string.IsNullOrWhiteSpace(kbcd.FirstOrDefault().Giuong))
                                        {
                                            var spGiuong = kbcd.FirstOrDefault().Giuong.Split(';');
                                            if (spGiuong != null && spGiuong.Count() > 0)
                                            {
                                                rep.paramGiuong.Value = spGiuong[spGiuong.Count() - 1];
                                            }
                                        }
                                    }
                                    //rep.YCKT.Value = par2.FirstOrDefault().TenDV;
                                    rep.DataSource = kqtntl.ToList();
                                    rep.BindingData();
                                    rep.CreateDocument();
                                    frmIn.prcIN.PrintingSystem = rep.PrintingSystem;
                                    if (PrintNow)
                                        DungChung.Ham.PrintReport(rep);
                                    else
                                        frmIn.ShowDialog();
                                }
                            }
                        }
                    }
                    break;
                case "XN tế bào dịch":

                    frmIn frmin = new frmIn();
                    BaoCao.repPhieuXNHuyetHoc rep12 = new BaoCao.repPhieuXNHuyetHoc(_lIdCls, _lMaDV, null);
                    // Kiểu phiếu xét nghiệm Tế bào dịch dùng chung với Phiếu huyết học                      
                    int _makp12 = 0;
                    rep12.MaBNhan.Value = _Mabn;
                    rep12.SoPhieu.Value = idcls;
                    var par12 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                                 join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                 select new { cls.MaKP, cls.MaCBth, cls.NgayTH, cls.BarCode, cls.CapCuu, cls.NgayThang, bn.TenBNhan, bn.NamSinh, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, cls.MaKPth }).ToList();
                    if (DungChung.Bien.MaBV == "27023")
                        rep12.So.Value = _so;
                    else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                    {
                        if (par12.Count > 0)
                        {
                            int mabn = par12.FirstOrDefault().MaBNhan;
                            var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                            if (qvv != null)
                                rep12.So.Value = qvv.SoVV;
                            else
                                rep12.So.Value = "";
                        }
                    }
                    else
                        rep12.So.Value = idcls;

                    if (par12.Count > 0)
                    {
                        rep12.txtbarcode.Text = par12.FirstOrDefault().BarCode == null ? "" : ("Barcode: " + par12.FirstOrDefault().BarCode.ToString());
                        _makp12 = par12.FirstOrDefault().MaKP == null ? 0 : par12.FirstOrDefault().MaKP.Value;
                        rep12.MaCBDT.Value = par12.FirstOrDefault().MaCB;
                        rep12.Macb.Value = par12.FirstOrDefault().MaCBth;
                        rep12.TenBN.Value = par12.FirstOrDefault().TenBNhan.ToUpper();
                        rep12.DiaChi.Value = par12.FirstOrDefault().DChi;
                        rep12.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                        rep12.NamSinh.Value = par12.FirstOrDefault().NamSinh;
                        int gioiTinh = int.Parse(par12.FirstOrDefault().GTinh.ToString());
                        if (gioiTinh == 1)
                        {
                            rep12.Nu.Value = "/".ToUpper();
                        }
                        else if (gioiTinh == 0)
                        {
                            rep12.Nam.Value = "/".ToUpper();
                        }
                        if (par12.FirstOrDefault().SThe != null && par12.FirstOrDefault().SThe.Length >= 15)
                        {
                            rep12.SThe1.Value = par12.FirstOrDefault().SThe.Substring(0, 3);
                            rep12.SThe2.Value = par12.FirstOrDefault().SThe.Substring(3, 2);
                            rep12.SThe3.Value = par12.FirstOrDefault().SThe.Substring(5, 2);
                            rep12.SThe4.Value = par12.FirstOrDefault().SThe.Substring(7, 3);
                            rep12.SThe5.Value = par12.FirstOrDefault().SThe.Substring(10, 5);
                        }
                        bool capcuu = par12.FirstOrDefault().CapCuu;
                        if (capcuu)
                        {
                            rep12.CapCuu.Value = "X";
                        }
                        else rep12.Thuong.Value = "X";
                        if (par12.FirstOrDefault().NgayThang != null)
                            rep12.NgayCD.Value = DungChung.Ham.NgaySangChu(par12.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                        else
                            rep12.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                        if (par12.FirstOrDefault().NgayTH != null)
                            rep12.NgayTH.Value = DungChung.Ham.NgaySangChu(par12.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                        else
                            rep12.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
                    }
                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp12, true);
                    rep12.ChanDoan.Value = arrThongTinBNKB[1];
                    rep12.Buong.Value = arrThongTinBNKB[2];
                    rep12.Giuong.Value = arrThongTinBNKB[3];

                    rep12.Khoa.Value = arrThongTinBNKB[4];
                    if (DungChung.Bien.MaBV == "30010")
                    {
                        int mkpth = Convert.ToInt32(par12.FirstOrDefault().MaKPth.Value);
                        rep12.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                    }//yenbg1
                    rep12.TaoPhieu(0);
                    rep12.CreateDocument();
                    frmin.prcIN.PrintingSystem = rep12.PrintingSystem;
                    if (PrintNow)
                        DungChung.Ham.PrintReport(rep12);
                    else
                        frmin.ShowDialog();


                    break;

                default:
                    System.Windows.Forms.MessageBox.Show("Mẫu phiếu chưa được thiết lập cho: " + _tieunhom);
                    break;
            }
        }

        public class KQTNTL
        {
            public string KetQua { get; set; }
            public string TenDVct { get; set; }
            public string MaDVct { get; set; }
            public string KetLuan { get; set; }
            public string TenDV { get; set; }
        }

        private static void InPhieuXNHuyetHoc_01070(int _Mabn, int idcls, string tenTN)
        {
            QLBV_Database.QLBVEntities _Data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            var par = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                       join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                       join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                       select new { kp.IsDongY, cls.MaCBth, cls.NgayThang, cls.CapCuu, cls.NgayTH, bn.TenBNhan, bn.NamSinh, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, cls.MaKP, cls.BarCode }).ToList();
            frmIn frm = new frmIn();
            Rep_PhieuXNHuyetHoc_01071 rep = new Rep_PhieuXNHuyetHoc_01071(tenTN, par.Count() > 0 ? par.FirstOrDefault().GTinh ?? 0 : 0);
            //string _So = "";

            rep.MaBNhan.Value = idcls;
            //rep.Status.Value = DungChung.Bien.InPhoi;
            if (tenTN == "XN nước tiểu")
            { rep.lblTenXN.Text = "SINH HÓA NƯỚC TIỂU"; }
            else if (tenTN == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.XNHoaSinhMau)
            { rep.lblTenXN.Text = "SINH HÓA MÁU"; }
            else if (tenTN == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.XNKhac) rep.lblTenXN.Text = "";
            else if (tenTN == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.XNUngThu) rep.lblTenXN.Text = "UNG THƯ";
            else if (tenTN == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.XNMienDich) rep.lblTenXN.Text = "MIỄN DỊCH";
            rep.SoPhieu.Value = _Mabn; //số phiếu lấy theo mã bn đức 28-09
            rep.paramIdCLS.Value = idcls;

            if (par.Count > 0)
            {

                rep.txtBarcode.Text = par.Count > 0 ? par.FirstOrDefault().BarCode : "";
                rep.lblBarcode.Visible = true;
                rep.txtBarcode.Visible = true;
                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                rep.MaICD.Value = arrThongTinBNKB[0];
                if (DungChung.Bien.MaBV == "24297" && par.FirstOrDefault().IsDongY == true)
                {
                    rep.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _Mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value);
                }
                else
                {
                    rep.ChanDoan.Value = arrThongTinBNKB[1];
                }
                rep.Buong.Value = arrThongTinBNKB[2];
                rep.Giuong.Value = arrThongTinBNKB[3];
                rep.Khoa.Value = arrThongTinBNKB[4];
                rep.MaBSDT.Value = par.FirstOrDefault().MaCB;
                rep.Macb.Value = par.FirstOrDefault().MaCBth;

                rep.DiaChi.Value = par.FirstOrDefault().DChi;
                rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                rep.TenBNhan.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                rep.NamSinh.Value = par.FirstOrDefault().NamSinh;
                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                if (gioiTinh == 1)
                {
                    rep.Gtinh.Value = "Nam";
                }
                else if (gioiTinh == 0)
                {
                    rep.Gtinh.Value = "Nữ";
                }
                if (par.FirstOrDefault().SThe != null && par.FirstOrDefault().SThe.Length >= 15)
                {
                    rep.SThe.Value = par.FirstOrDefault().SThe;
                }
                bool capcuu = par.FirstOrDefault().CapCuu;
                if (capcuu)
                {
                    rep.CapCuu.Value = "X";
                }
                else rep.Thuong.Value = "X";
                if (par.FirstOrDefault().NgayTH != null)
                {
                    rep.paramNgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                }
                else { rep.paramNgayTH.Value = "Ngày ..... tháng ...... năm....."; }
                if (par.FirstOrDefault().NgayThang != null)
                {
                    rep.paramNgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                }
                else { rep.paramNgayCD.Value = "Ngày ..... tháng ...... năm....."; }
                var qcls = (from chidinh in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                            join clsct in _Data.CLScts.Where(p => p.Status != -1) on chidinh.IDCD equals clsct.IDCD
                            join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                            join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                            join tndv in _Data.TieuNhomDVs on dv.IdTieuNhom equals tndv.IdTieuNhom
                            where tndv.TenRG == tenTN
                            select new Rep_PhieuXNHuyetHoc_01071.BaoCao { MaDVct = clsct.MaDVct, TenDVct = dvct.TenDVct, KetQua = clsct.KetQua, TSBT = dvct.TSBT, TenDV = dv.TenDV, MaTam = dv.MaTam, MaDV = dv.MaDV, DonVi = dvct.DonVi, STTDV = dv.SoTT ?? 1, STTdvct = dvct.STT }).ToList();

                var qdv = (from cls in qcls.Where(p => tenTN == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.XNHuyetHoc ? p.STTDV == 1 : true)
                           group cls by new { cls.MaDV, cls.TenDV, cls.MaTam, cls.STTDV, cls.KetQua, cls.DonVi, cls.TSBT, cls.TenDVct, cls.MaDVct, cls.STTdvct } into kq
                           select new Rep_PhieuXNHuyetHoc_01071.BaoCao { MaDVct = kq.Key.MaDVct, KetQua = kq.Key.KetQua, DonVi = kq.Key.DonVi, TSBT = kq.Key.TSBT, MaDV = kq.Key.MaDV, TenDVct = kq.Key.TenDVct, TenDV = kq.Key.TenDV, STTDV = -1, STTdvct = kq.Key.STTdvct, STTNhomHT = kq.Key.STTDV ?? 0 }).OrderBy(p => p.STTDV).ThenBy(p => p.STTdvct).ToList();
                int num = 1;
                //var qdvOderby = (from dv in qdv select new {dv.MaDV, dv.STTDV, STTNhomHT = num++ }).ToList();
                // qcls = (from a in qcls join b in qdvOderby on a.MaDV equals b.MaDV select new Rep_PhieuXNHuyetHoc_01071.BaoCao { MaDVct = a.MaDVct, TenDVct = a.TenDVct, KetQua = a.KetQua, TSBT = a.TSBT, TenDV = a.TenDV, MaTam = a.MaTam, MaDV = a.MaDV, DonVi = a.DonVi, STTDV = a.STTDV, STTdvct = a.STTdvct, STTNhomHT = b.STTNhomHT }).ToList();
                // qdv.AddRange(qcls);     
                if (tenTN == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.XNHuyetHoc)
                {
                    var b = (from cls in qcls.Where(p => p.STTDV > 1)
                             group cls by new { cls.MaDVct, cls.TenDVct, cls.KetQua, cls.STTDV, cls.DonVi, cls.TSBT } into kq
                             select new Rep_PhieuXNHuyetHoc_01071.BaoCao { MaDVct = kq.Key.MaDVct, KetQua = kq.Key.KetQua, DonVi = kq.Key.DonVi, TSBT = kq.Key.TSBT, STTNhomHT = 2, TenDV = "a", TenDVct = kq.Key.TenDVct }).OrderBy(p => p.STTDV).ToList();
                    qdv.AddRange(b);
                }
                rep.DataSource = qdv.OrderBy(p => p.STTDV).ThenBy(p => p.STTdvct).ToList();
                rep.dataBinhding();
                rep.CreateDocument();
                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                frm.ShowDialog();

            }


        }

        private static void _InPhieuSinhHoaMau_01071(int _Mabn, int idcls, string tenTN)
        {
            QLBV_Database.QLBVEntities _Data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            var par = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                       join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                       join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                       join cb in _Data.CanBoes on cls.MaCB equals cb.MaCB
                       select new { kp.IsDongY, cls.MaCBth, cls.NgayThang, cls.CapCuu, cls.NgayTH, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, cls.MaKP, cls.BarCode, cb.TenCB, cb.ChucVu }).ToList();
            frmIn frm = new frmIn();
            Rep_PhieuXNHuyetHoc_01071 rep = new Rep_PhieuXNHuyetHoc_01071(tenTN, par.Count() > 0 ? par.FirstOrDefault().GTinh ?? 0 : 0);
            //string _So = "";

            rep.MaBNhan.Value = idcls;
            //rep.Status.Value = DungChung.Bien.InPhoi;
            if (tenTN == "XN nước tiểu")
            { rep.lblTenXN.Text = "SINH HÓA NƯỚC TIỂU"; }
            else if (tenTN == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.XNHoaSinhMau)
            { rep.lblTenXN.Text = "SINH HÓA MÁU"; }
            rep.SoPhieu.Value = _Mabn; //số phiếu lấy theo mã bn đức 28-09
            rep.paramIdCLS.Value = idcls;

            if (par.Count > 0)
            {

                rep.txtBarcode.Text = par.Count > 0 ? par.FirstOrDefault().BarCode : "";
                rep.lblBarcode.Visible = true;
                rep.txtBarcode.Visible = true;
                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                rep.MaICD.Value = arrThongTinBNKB[0];
                if (par.FirstOrDefault().IsDongY == true && DungChung.Bien.MaBV == "24297")
                {
                    rep.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_24297(_Data, _Mabn);
                }
                else
                {
                    rep.ChanDoan.Value = arrThongTinBNKB[1];
                }

                rep.Buong.Value = arrThongTinBNKB[2];
                rep.Giuong.Value = arrThongTinBNKB[3];
                rep.Khoa.Value = arrThongTinBNKB[4];
                rep.MaBSDT.Value = par.FirstOrDefault().MaCB;
                rep.Macb.Value = par.FirstOrDefault().MaCBth;

                rep.DiaChi.Value = par.FirstOrDefault().DChi;
                rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                rep.TenBNhan.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                if (gioiTinh == 1)
                {
                    rep.Gtinh.Value = "Nam";
                }
                else if (gioiTinh == 0)
                {
                    rep.Gtinh.Value = "Nữ";
                }
                if (par.FirstOrDefault().SThe != null && par.FirstOrDefault().SThe.Length >= 15)
                {
                    rep.SThe.Value = par.FirstOrDefault().SThe;
                }
                bool capcuu = par.FirstOrDefault().CapCuu;
                if (capcuu)
                {
                    rep.CapCuu.Value = "X";
                }
                else rep.Thuong.Value = "X";
                if (par.FirstOrDefault().NgayTH != null)
                {
                    rep.paramNgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                }
                else { rep.paramNgayTH.Value = "Ngày ..... tháng ...... năm....."; }
                if (par.FirstOrDefault().NgayThang != null)
                {
                    rep.paramNgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                }
                else { rep.paramNgayCD.Value = "Ngày ..... tháng ...... năm....."; }

                if (DungChung.Bien.MaBV == "24297")
                {
                    rep.BSCD.Value = par.FirstOrDefault().ChucVu + ": " + par.FirstOrDefault().TenCB;
                }
                var qcls = (from chidinh in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                            join clsct in _Data.CLScts.Where(p => p.Status != -1) on chidinh.IDCD equals clsct.IDCD
                            join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                            join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                            join tndv in _Data.TieuNhomDVs on dv.IdTieuNhom equals tndv.IdTieuNhom
                            where tndv.TenRG == tenTN
                            select new Rep_PhieuXNHuyetHoc_01071.BaoCao { MaDVct = clsct.MaDVct, TenDVct = dvct.TenDVct, KetQua = clsct.KetQua, TSBT = dvct.TSBT, TenDV = dv.TenDV, MaTam = dv.MaTam, MaDV = dv.MaDV, DonVi = dvct.DonVi, STTDV = dv.SoTT ?? 1, STTdvct = dvct.STT }).ToList();

                var qdv = (from cls in qcls
                           group cls by new { cls.STTDV, cls.KetQua, cls.DonVi, cls.TSBT, cls.TenDVct, cls.MaDVct, cls.STTdvct } into kq
                           select new Rep_PhieuXNHuyetHoc_01071.BaoCao { MaDVct = kq.Key.MaDVct, KetQua = kq.Key.KetQua, DonVi = kq.Key.DonVi, TSBT = kq.Key.TSBT, TenDVct = kq.Key.TenDVct, TenDV = "Xét nghiệm hóa sinh máu", STTDV = -1, STTdvct = kq.Key.STTdvct, STTNhomHT = 0 }).OrderBy(p => p.STTDV).ThenBy(p => p.STTdvct).ToList();
                int num = 1;
                //var qdvOderby = (from dv in qdv select new {dv.MaDV, dv.STTDV, STTNhomHT = num++ }).ToList();
                // qcls = (from a in qcls join b in qdvOderby on a.MaDV equals b.MaDV select new Rep_PhieuXNHuyetHoc_01071.BaoCao { MaDVct = a.MaDVct, TenDVct = a.TenDVct, KetQua = a.KetQua, TSBT = a.TSBT, TenDV = a.TenDV, MaTam = a.MaTam, MaDV = a.MaDV, DonVi = a.DonVi, STTDV = a.STTDV, STTdvct = a.STTdvct, STTNhomHT = b.STTNhomHT }).ToList();
                // qdv.AddRange(qcls);               
                rep.DataSource = qdv.OrderBy(p => p.STTDV).ThenBy(p => p.STTdvct).ToList();
                rep.dataBinhding();
                rep.CreateDocument();
                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                frm.ShowDialog();

            }
        }

        public class XNTongHop
        {
            public int IdCLS { get; set; }
            public int IdCD { get; set; }
            public string MaCBth { get; set; }
            public DateTime? NgayTH { get; set; }
            public int? MaKP { get; set; }
            public string MaDVct { get; set; }
            public string TenDVct { get; set; }
            public string DonVi { get; set; }
            public int? MaDV { get; set; }
            public string TenDV { get; set; }
            public string TenTN { get; set; }
            public string TenRG { get; set; }
            public string KetQua { get; set; }
            public string PPXN { get; set; }
            public DateTime? ThoiGian { get; set; }

            public string TSBT { get; set; }
            public int? STT { get; set; }
            public int? SoTT { get; set; }
            public int? STT_F { get; set; }
            public int STT_R { get; set; }
            public int IdTieuNhom { get; set; }
            public string GhiChu { get; set; }
            public string MaMay { get; set; }
            public string MaCB { get; set; }
            public string MaQuyTrinh { get; set; }

        }

        private static string GhepTSBT(string gt, double? tu, double? den, string madvct)
        {
            string rs = "";
            string fr = "";
            string to = "";
            if (den != null)
            {
                rs = string.Format("{0}{1} - {2}", gt, tu ?? 0, den);
                //rs = string.Format("{0}{1} - {2}", gt, tu ?? 0, den);
            }
            // format trị số DV HDL-C 
            //if (madvct == "sh06")
            //{
            //  fr = string.Format("{0:0.000}", tu); 
            //  to = string.Format("{0:0.0000}", den);
            //  rs = string.Format("{0} ≥ {1}", gt, fr);
            //}
            if (madvct == "nt01.04")
            {
                fr = string.Format("{0:0.000}", tu);
                to = string.Format("{0:0.000}", den);
                rs = string.Format("{0}{1} - {2}", gt, fr, to);
            }
            if (madvct == "nt01.06")
            {
                fr = string.Format("{0:0.0}", tu);
                to = string.Format("{0:0.0}", den);
                rs = string.Format("{0}{1} - {2}", gt, fr, to);
            }
            return rs;
        }
        public static string _getTenRG = "";
        public static string _getBHYT = "";

        public static void _inPhieuXNTongHop_30004(int _Mabn, List<InXNTongHop> _xnTH, bool _intheokp, string tenKP, string maMay)
        {
            string mota = "";
            var _ltn = _xnTH.Select(o => o.IdTieuNhom).ToList();
            var idCLSs = _xnTH.Select(o => o.IdCLS).ToList();
            QLBV_Database.QLBVEntities _Data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            var q1 = (from cls in _Data.CLS.Where(p => p.Status == 1 && p.MaBNhan == _Mabn && ((DungChung.Bien.MaBV == "30372" || DungChung.Bien.MaBV == "30004") ? idCLSs.Contains(p.IdCLS) : true))
                      join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                      join clsct in _Data.CLScts.Where(o => DungChung.Bien.MaBV == "30372" ? o.Is_Execute == true : true) on cd.IDCD equals clsct.IDCD

                      select new { cls, cd, clsct }).ToList();
            var Mota = (from cls in _Data.CLS.Where(p => p.MaBNhan == _Mabn && idCLSs.Contains(p.IdCLS))
                        select new { cls }).ToList();
            if (Mota.Count > 0)
            {
                int dem = 1;
                foreach (var item in Mota)
                {
                    if (!string.IsNullOrWhiteSpace(item.cls.GhiChu))
                    {
                        mota += "- " + item.cls.GhiChu + "\r\n";
                        dem++;
                    }
                    if (dem == 2)
                    {
                        break;
                    }
                }
            }
            var bn = _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn).FirstOrDefault();
            var gt = bn.GTinh;
            var ttbs = _Data.TTboXungs.FirstOrDefault(o => o.MaBNhan == _Mabn);
            List<int> dskp = q1.Select(p => p.cls.MaKP ?? 0).Distinct().ToList();
            var _ldv0 = (from tn in _Data.TieuNhomDVs.Where(p => p.IDNhom == 1)
                         join dv in _Data.DichVus.Where(p => p.PLoai == 2) on tn.IdTieuNhom equals dv.IdTieuNhom
                         join dvct in _Data.DichVucts on dv.MaDV equals dvct.MaDV
                         select new { tn.TenTN, STT = ((DungChung.Bien.MaBV == "30372" || DungChung.Bien.MaBV == "30004") ? dvct.STT : tn.STT), dv.TenDV, dvct.MaDVct, dvct.DonVi, dvct.TSnTu, dvct.TSnDen, dvct.TSnuTu, dvct.TSnuDen, dvct.TSBT, dvct.TenDVct, dv.SoTT, dvct.STT_R, tn.IdTieuNhom, tn.TenRG, dvct.STT_F }).ToList();
            var _ldv = (from dv in _ldv0
                        select new { TSBT = (DungChung.Bien.MaBV == "30372" ? (gt == 1 ? GhepTSBT("", dv.TSnTu, dv.TSnDen, dv.MaDVct) : GhepTSBT("", dv.TSnuTu, dv.TSnuDen, dv.MaDVct)) : dv.TSBT), dv.TenTN, dv.TenRG, dv.TenDVct, dv.TenDV, dv.STT_R, dv.STT, dv.SoTT, dv.MaDVct, dv.IdTieuNhom, dv.DonVi, dv.STT_F }).ToList();
            var _lbnkb = _Data.BNKBs.Where(p => p.MaBNhan == _Mabn).ToList();
            if (_intheokp)
            {

            }
            else
            {
                var q22 = (from cls in q1
                           join dv in _ldv.Where(p => _ltn.Contains(p.IdTieuNhom)) on cls.clsct.MaDVct equals dv.MaDVct
                           select new XNTongHop
                           {
                               IdCLS = cls.cls.IdCLS,
                               IdCD = cls.cd.IDCD,
                               MaCBth = cls.cls.MaCBth,
                               NgayTH = cls.cls.NgayTH,
                               MaKP = cls.cls.MaKP,
                               MaDVct = cls.clsct.MaDVct,
                               TenDVct = dv.TenDVct,
                               DonVi = dv.DonVi,
                               MaDV = cls.cd.MaDV,
                               TenDV = dv.TenDV,
                               TenTN = dv.TenTN.ToUpper(),
                               TenRG = dv.TenRG,
                               KetQua = cls.clsct.KetQua,
                               TSBT = dv.TSBT,
                               STT = dv.STT,
                               STT_F = dv.STT_F,
                               SoTT = dv.SoTT,
                               STT_R = dv.STT_R,

                               IdTieuNhom = dv.IdTieuNhom,
                               MaMay = DungChung.Bien.MaBV == "30004" ? cls.clsct.MaMayct : cls.cd.MaMay,
                               MaCB = cls.cls.MaCB
                           }).OrderBy(p => p.STT_F).ThenBy(p => p.STT_F).ThenBy(p => p.STT_R).ToList();
                var q2 = (from q in q22
                          select new XNTongHop { DonVi = q.DonVi, IdCLS = q.IdCLS, IdTieuNhom = q.IdTieuNhom, KetQua = DungChung.Bien.MaBV == "14018" ? (q.TenRG == "XN nước tiểu" ? (q.KetQua == "" ? "Negative" : q.KetQua + " " + q.DonVi) : q.KetQua) : q.KetQua, MaCBth = q.MaCBth, MaDV = ((q22.Where(o => o.MaDV == q.MaDV).Count() <= 1 && DungChung.Bien.MaBV == "30372") ? 0 : q.MaDV), MaDVct = q.MaDVct, MaKP = q.MaKP, MaMay = q.MaMay, NgayTH = q.NgayTH, SoTT = q.SoTT, STT = q.STT, STT_R = q.STT_R, TenDV = ((q22.Where(o => o.MaDV == q.MaDV).Count() <= 1 && DungChung.Bien.MaBV == "30372") ? "" : q.TenDV), TenDVct = q.TenDVct, TenRG = q.TenRG, TenTN = q.TenTN, TSBT = q.TSBT, MaCB = q.MaCB }).ToList();
                var maDV = q2.Select(o => o.MaDV).Distinct().ToList();

                if (DungChung.Bien.MaBV == "30372")
                {
                    foreach (var item in maDV)
                    {
                        var q2ByMaDV = q2.Where(o => o.MaDV == item).ToList();
                        int dem = 0;
                        foreach (var subItem in q2ByMaDV)
                        {
                            if (subItem.TenRG != "XN huyết học" && subItem.TenRG != "XN dịch chọc dò")
                            {
                                dem++;
                                q2.FirstOrDefault(o => o.MaDVct == subItem.MaDVct && o.IdCLS == subItem.IdCLS).STT = dem;
                            }
                        }
                    }
                }
                var _lcd = _lbnkb.Where(p => dskp.Contains(p.MaKP ?? 0)).Select(p => p.ChanDoan).ToArray();
                string cd = string.Join(";", _lcd);
                if (q2.Count() > 0 && bn != null)
                {
                    var clsln = (from a in q2
                                 select new { a.MaCBth, a.NgayTH, a.IdCLS }).OrderByDescending(p => p.IdCLS).ToList();
                    frmIn frm = new frmIn();
                    BaoCao.Rep_PhieuXNTongHop rep = new BaoCao.Rep_PhieuXNTongHop(bn.GTinh ?? 0);
                    if (clsln.Count() > 0)
                    {
                        string _macb = clsln.FirstOrDefault().MaCBth;
                        var tencb = _Data.CanBoes.Where(p => p.MaCB == _macb).ToList();
                        if (tencb.Count() > 0)
                        {
                            rep.colTenTKXN.Text = DungChung.Bien.MaBV == "30004" ? "" : tencb.FirstOrDefault().CapBac + "." + tencb.FirstOrDefault().TenCB;
                            rep.colTenTKXN2.Text = DungChung.Bien.MaBV == "30004" ? "" : tencb.FirstOrDefault().CapBac + "." + tencb.FirstOrDefault().TenCB;
                        }
                        rep.paramNgayTH.Value = DungChung.Ham.NgaySangChu(clsln.FirstOrDefault().NgayTH.Value);
                    }
                    _getTenRG = q2.Select(p => p.TenRG).Distinct().FirstOrDefault();


                    if (q2.Select(p => p.TenRG).Distinct().FirstOrDefault() == "XN nước tiểu")
                    {
                        rep.xrLabel49.Text = "PHIẾU TRẢ KẾT QUẢ XÉT NGHIỆM NƯỚC TIỂU";
                    }
                    if (q2.Select(o => o.MaCB).Distinct().Count() == 1)
                    {
                        rep.lblBSChiDinhTittle.Visible = true;
                        rep.lblBSChiDinh.Visible = true;
                        var macb = q2.FirstOrDefault().MaCB;
                        var cbo = _Data.CanBoes.FirstOrDefault(o => o.MaCB == macb);
                        if (cbo != null)
                        {
                            rep.BSChiDinh.Value = cbo.ChucVu + " " + cbo.TenCB;
                        }
                    }
                    else
                    {
                        rep.lblBSChiDinhTittle.Visible = false;
                        rep.lblBSChiDinh.Visible = false;
                    }
                    var _faxx = _Data.HTHONGs.Where(p => p.MaBV == DungChung.Bien.MaBV).Select(q => q.Fax).ToList();
                    rep.DiaChiPK.Value = DungChung.Bien.DiaChi;
                    if (_faxx.Count > 0)
                        rep.SDTFax.Value = "SĐT: " + DungChung.Bien.SDTCQ + " - Fax: " + _faxx.FirstOrDefault();
                    else
                        rep.SDTFax.Value = "SĐT: " + DungChung.Bien.SDTCQ + " - Fax:";
                    if (ttbs != null)
                    {
                        rep.Email.Value = ttbs.Email;
                        rep.SoDienThoaiBN.Value = ttbs.DThoai;
                    }
                    rep.NgaySinh.Value = DungChung.Ham.GhepNgaySinh("/", bn.NamSinh, bn.ThangSinh, bn.NgaySinh);
                    rep.TenKP.Value = tenKP;
                    rep.TenCQCQ.Value = DungChung.Bien.TenCQ;
                    rep.MaBNhan.Value = DungChung.Bien.MaBV == "14018" ? (_getTenRG.ToString() == "XN nước tiểu" ? _Mabn.ToString() : "Số : " + _Mabn) : "Số : " + _Mabn;
                    rep.MaMay.Value = maMay;
                    rep.TenBNhan.Value = bn.TenBNhan.ToUpper();
                    rep.ChanDoan.Value = DungChung.Ham.FreshString(cd);
                    rep.Tuoi.Value = bn.Tuoi;
                    rep.NamSinh.Value = bn.NamSinh;
                    rep.Gtinh.Value = bn.GTinh == 1 ? "Nam" : "Nữ";
                    rep.DiaChi.Value = bn.DChi;
                    rep.SThe.Value = bn.SThe;
                    rep.PID.Value = bn.PID;
                    //rep.MaBenhAn.Value=;
                    _getBHYT = bn.SThe;
                    if (_getBHYT.Length >= 10)
                    {
                        rep.The1.Text = _getBHYT.Substring(0, 2);
                        rep.The2.Text = _getBHYT.Substring(2, 1);
                        rep.The3.Text = _getBHYT.Substring(3, 2);
                        rep.The4.Text = _getBHYT.Substring(5, 2);
                        rep.The5.Text = _getBHYT.Substring(7, 3);
                        rep.The6.Text = _getBHYT.Substring(10);
                    }
                    if (DungChung.Bien.MaBV == "30372")
                        rep.lab55.Text = "PHÒNG XÉT NGHIỆM";
                    rep.xrMota.Text = mota;
                    rep.DataSource = q2.OrderBy(p => p.SoTT).ToList();
                    rep.dataBinhding();
                    rep.CreateDocument();
                    frm.prcIN.PrintingSystem = rep.PrintingSystem;
                    frm.ShowDialog();
                }
                else
                {
                    MessageBox.Show("Bệnh nhân chưa có kết quả");
                }
            }
        }

        public static void _inPhieuXNTongHop24012(int _Mabn, List<QLBV.FormThamSo.frm_InXnTongHop.InXNTongHop> _xnTH, bool _intheokp, string tenKP, string maMay, int idcls)
        {
            QLBV_Database.QLBVEntities _Data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            var _ltn = _xnTH.Select(o => o.IdTieuNhom).ToList(); //tạo 1 list chứa idcls  của _xnTH, ở q1 thêm đk .Where(p => _ít_CLS.Contains(p.idcls))
            var idCLSs = _xnTH.Select(o => o.IdCLS).ToList();
            var q1 = (from cls in _Data.CLS.Where(p => p.Status == 1 && p.MaBNhan == _Mabn)
                      join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                      join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                      select new { cls, cd, clsct }).ToList();
            var lstCls = (from cls in _Data.CLS.Where(p => p.MaBNhan == _Mabn && idcls == p.IdCLS)
                          select new { cls }).ToList();
            var bn = _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn).FirstOrDefault();
            var ttbs = _Data.TTboXungs.FirstOrDefault(o => o.MaBNhan == _Mabn);
            List<int> dskp = q1.Select(p => p.cls.MaKP ?? 0).Distinct().ToList();
            var _ldv0 = (from tn in _Data.TieuNhomDVs.Where(p => p.IDNhom == 1)
                         join dv in _Data.DichVus.Where(p => p.PLoai == 2) on tn.IdTieuNhom equals dv.IdTieuNhom
                         join dvct in _Data.DichVucts on dv.MaDV equals dvct.MaDV
                         select new { tn.TenTN, STT = tn.STT, dv.TenDV, dvct.MaDVct, dvct.DonVi, dvct.TSnTu, dvct.TSnDen, dvct.TSnuTu, dvct.TSnuDen, dvct.TSBT, dvct.TenDVct, dv.SoTT, dvct.STT_R, tn.IdTieuNhom, tn.TenRG, dvct.STT_F, dvct.MaQuyTrinh }).ToList();
            var _ldv = (from dv in _ldv0
                        select new { TSBT = dv.TSBT, dv.TenTN, dv.TenRG, dv.TenDVct, dv.TenDV, dv.STT_R, dv.STT, dv.SoTT, dv.MaDVct, dv.IdTieuNhom, dv.DonVi, dv.STT_F, dv.MaQuyTrinh }).ToList();
            var _lbnkb = _Data.BNKBs.Where(p => p.MaBNhan == _Mabn).ToList();
            if (_intheokp)
            {

            }
            else
            {
                var q22 = (from cls in q1
                           join dv in _ldv.Where(p => _ltn.Contains(p.IdTieuNhom)) on cls.clsct.MaDVct equals dv.MaDVct
                           select new XNTongHop
                           {
                               IdCLS = cls.cls.IdCLS,
                               IdCD = cls.cd.IDCD,
                               MaCBth = cls.cls.MaCBth,
                               NgayTH = cls.cls.NgayTH,
                               MaKP = cls.cls.MaKP,
                               MaDVct = cls.clsct.MaDVct,
                               TenDVct = dv.TenDVct,
                               DonVi = dv.DonVi,
                               MaDV = cls.cd.MaDV,
                               TenDV = dv.TenDV,
                               TenTN = dv.TenTN.ToUpper(),
                               TenRG = dv.TenRG,
                               KetQua = cls.clsct.KetQua,
                               PPXN = cls.clsct.PPXN_Quytrinhdo,
                               ThoiGian = cls.clsct.ThoiGian,
                               TSBT = dv.TSBT,
                               STT = dv.STT,
                               STT_F = dv.STT_F,
                               SoTT = dv.SoTT,
                               STT_R = dv.STT_R,
                               IdTieuNhom = dv.IdTieuNhom,
                               MaMay = cls.cd.MaMay,
                               MaCB = cls.cls.MaCB,
                               GhiChu = cls.cls.GhiChu,
                               MaQuyTrinh = dv.MaQuyTrinh
                           }).OrderBy(p => p.STT_F).ThenBy(p => p.STT_F).ThenBy(p => p.STT_R).Distinct().ToList();
                var q2 = (from q in q22
                          select new XNTongHop { GhiChu = q.GhiChu, DonVi = q.DonVi, IdCLS = q.IdCLS, IdTieuNhom = q.IdTieuNhom, PPXN = q.PPXN, ThoiGian = q.ThoiGian, KetQua = DungChung.Bien.MaBV == "14018" ? (q.TenRG == "XN nước tiểu" ? (q.KetQua == "" ? "Negative" : q.KetQua + " " + q.DonVi) : q.KetQua) : q.KetQua, MaCBth = q.MaCBth, MaDV = ((q22.Where(o => o.MaDV == q.MaDV).Count() <= 1 && DungChung.Bien.MaBV == "30372") ? 0 : q.MaDV), MaDVct = q.MaDVct, MaKP = q.MaKP, MaMay = q.MaMay, NgayTH = q.NgayTH, SoTT = q.SoTT, STT = q.STT, STT_R = q.STT_R, STT_F = q.STT_F, TenDV = ((q22.Where(o => o.MaDV == q.MaDV).Count() <= 1 && DungChung.Bien.MaBV == "30372") ? "" : q.TenDV), TenDVct = q.TenDVct, TenRG = q.TenRG, TenTN = q.TenTN, TSBT = q.TSBT, MaCB = q.MaCB, MaQuyTrinh = q.MaQuyTrinh }).ToList();
                var maDV = q2.Select(o => o.MaDV).Distinct().ToList();
                var _lcd = _lbnkb.Where(p => dskp.Contains(p.MaKP ?? 0)).Select(p => p.ChanDoan).ToArray();
                string cd = string.Join(";", _lcd);
                if (q2.Count() > 0 && bn != null)
                {
                    var clsln = (from a in q2
                                 select new { a.MaCBth, a.NgayTH, a.IdCLS }).OrderByDescending(p => p.IdCLS).ToList();
                    frmIn frm = new frmIn();
                    BaoCao.Rep_PhieuXNTongHop24012 rep = new BaoCao.Rep_PhieuXNTongHop24012(bn.GTinh ?? 0);
                    if (clsln.Count() > 0)
                    {
                        string _macb = clsln.FirstOrDefault().MaCBth;
                        var tencb = _Data.CanBoes.Where(p => p.MaCB == _macb).ToList();
                        if (tencb.Count() > 0)
                        {
                            //rep.BSTH.Value = tencb.FirstOrDefault().CapBac + "." + tencb.FirstOrDefault().TenCB;
                        }
                        rep.ThoiGianThucHien.Value = DungChung.Ham.NgaySangChu(clsln.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                        if (idcls > 0) // phiếu in 1 DV
                        {
                            _macb = clsln.Where(p => p.IdCLS == idcls).FirstOrDefault().MaCBth;
                            tencb = _Data.CanBoes.Where(p => p.MaCB == _macb).ToList();
                            if (tencb.Count() > 0)
                            {
                                //rep.BSTH.Value = tencb.FirstOrDefault().CapBac + "." + tencb.FirstOrDefault().TenCB;
                            }
                            //rep.paramNgayTH.Value = DungChung.Ham.NgaySangChu(clsln.Where(p => p.IdCLS == idcls).FirstOrDefault().NgayTH.Value);
                            rep.ThoiGianThucHien.Value = DungChung.Ham.NgaySangChu(clsln.Where(p => p.IdCLS == idcls).FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                        }
                    }
                    _getTenRG = q2.Select(p => p.TenRG).Distinct().FirstOrDefault();
                    rep.TenCQCQ.Value = DungChung.Bien.TenCQCQ;
                    rep.TenCQ.Value = DungChung.Bien.TenCQ;
                    rep.TenBN.Value = bn.TenBNhan;
                    if (bn.GTinh == 0)
                        rep.GioiTinh.Value = "Nữ";
                    if (bn.GTinh == 1)
                        rep.GioiTinh.Value = "Nam";
                    rep.NamSinh.Value = bn.NamSinh;
                    rep.DiaChi.Value = bn.DChi;
                    rep.KPhong.Value = tenKP;
                    string muchuong = "";
                    switch (bn.DTuong)
                    {
                        case "BHYT":
                            {
                                if (bn.MucHuong == 4)
                                    muchuong = " (80%)";
                                else if (bn.MucHuong == 3)
                                    muchuong = " (95%)";
                                else
                                    muchuong = " (100%)";

                                rep.DoiTuong.Value = bn.DTuong + muchuong;
                            }
                            break;

                        default:
                            {
                                rep.DoiTuong.Value = bn.DTuong;
                            }
                            break;
                    }

                    rep.MaBN.Value = _Mabn;

                    //Benh Pham
                    var qmnt = (from cls in _Data.CLS.Where(p => p.MaBNhan == _Mabn).Where(p => p.IdCLS == idcls)
                                join cds in _Data.ChiDinhs on cls.IdCLS equals cds.IdCLS
                                join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                join dv in _Data.DichVus on cds.MaDV equals dv.MaDV
                                join tn in _Data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                select new { dchi = kp.DChi, ylenh = dv.TenDV + "(" + cds.ChiDinh1 + ")", cds.ChiDinh1, cls.STT, tn.TenTN, cds.Status, cds.LoaiMau, cls.NgayThang, cls.MaKP, cls.MaCB, kp.TenKP, dv.TenDV, dv.SoTT, tn.TenRG, cds.DonGia, cls.MaKPth, dv.MaDV, STT_F = Byte.MaxValue, cls.NgayTH }).OrderBy(p => p.SoTT).ToList();
                    if (qmnt.Count() > 0)
                    {
                        if (qmnt.FirstOrDefault().TenRG == "XN hóa sinh máu" || qmnt.FirstOrDefault().TenRG == "XN huyết học" || qmnt.FirstOrDefault().TenRG == "XN vi sinh")
                        {
                            rep.BenhPham.Value = "Máu";
                        }
                        else if (qmnt.FirstOrDefault().TenRG == "XN đờm" || qmnt.FirstOrDefault().TenRG == "XN khác")
                        {
                            rep.BenhPham.Value = "";
                        }
                        else if (qmnt.FirstOrDefault().TenRG == "XN mô bệnh học")
                        {
                            rep.BenhPham.Value = "Mô";
                        }
                        else if (qmnt.FirstOrDefault().TenRG == "XN nước tiểu")
                        {
                            rep.BenhPham.Value = "Nước Tiểu";
                        }
                        else if (qmnt.FirstOrDefault().TenRG == "XN tế bào dịch")
                        {
                            rep.BenhPham.Value = "Dịch";
                        }
                        rep.ThoiGianChiDinh.Value = "Ngày " + qmnt.FirstOrDefault().NgayThang.Value.Day + " tháng " + qmnt.FirstOrDefault().NgayThang.Value.Month + " năm " + qmnt.FirstOrDefault().NgayThang.Value.Year;
                        rep.ThoiGianThucHien.Value = "Ngày " + qmnt.FirstOrDefault().NgayTH.Value.Day + " tháng " + qmnt.FirstOrDefault().NgayTH.Value.Month + " năm " + qmnt.FirstOrDefault().NgayTH.Value.Year;
                        rep.ThoiGianValidKQ.Value = qmnt.FirstOrDefault().NgayTH.Value.ToString("HH:mm") + "  " + qmnt.FirstOrDefault().NgayTH.Value.ToShortDateString();
                        rep.NgayHieuLuc.Value = DungChung.Bien.ngayCNhat;
                        rep.TenTN.Value = qmnt.FirstOrDefault().TenTN.ToUpper();
                        rep.TenDV.Value = qmnt.FirstOrDefault().TenDV;

                    }
                    if (lstCls.Count() > 0)
                    {
                        string tencb = "";
                        string macb = "";
                        List<CanBo> canboes = new List<CanBo>();
                        if (!string.IsNullOrEmpty(lstCls.FirstOrDefault().cls.ThoiGianLayMau.ToString()))
                            rep.ThoiGianLayMau.Value = lstCls.FirstOrDefault().cls.ThoiGianLayMau.Value.ToString("HH:mm") + "  " + lstCls.FirstOrDefault().cls.ThoiGianLayMau.Value.ToShortDateString();
                        if (!string.IsNullOrEmpty(lstCls.FirstOrDefault().cls.ThoiGianNhanMau.ToString()))
                            rep.ThoiGianNhanMau.Value = lstCls.FirstOrDefault().cls.ThoiGianNhanMau.Value.ToString("HH:mm") + "  " + lstCls.FirstOrDefault().cls.ThoiGianNhanMau.Value.ToShortDateString();
                        macb = lstCls.FirstOrDefault().cls.MaCBLayMau;
                        if (macb != null)
                        {
                            canboes = _Data.CanBoes.Where(p => p.MaCB == macb).ToList();
                            if (canboes.Count() > 0)
                            {
                                rep.CBLayMau.Value = canboes.FirstOrDefault().TenCB;
                            }
                        }
                        macb = lstCls.FirstOrDefault().cls.MaCBNhanMau;
                        if (macb != null)
                        {
                            canboes = _Data.CanBoes.Where(p => p.MaCB == macb).ToList();
                            if (canboes.Count() > 0)
                            {
                                rep.CBNhanMau.Value = canboes.FirstOrDefault().TenCB;
                            }
                        }
                    }

                    //Chan doan
                    var bnkbs = (from cls in _Data.CLS
                                 join bnkb in _Data.BNKBs on cls.MaBNhan equals bnkb.MaBNhan
                                 where cls.IdCLS == idcls && bnkb.MaKP == cls.MaKP
                                 select bnkb).ToList();
                    if (bnkbs.Count() > 0)
                    {
                        rep.ChanDoan.Value = bnkbs.FirstOrDefault().ChanDoan;
                    }

                    //Truong khoa
                    var truongkhoa = (from cls in _Data.CLS
                                      join cb in _Data.CanBoes on cls.MaCBth equals cb.MaCB
                                      //join ad in _Data.ADMINs on cls.MaCBth equals ad.MaCB
                                      //join ht in _Data.HThong_User on ad.TenDN equals ht.TenDN
                                      where cls.IdCLS == idcls
                                      select cb.TenCB).ToList();
                    if (truongkhoa.Count() > 0)
                    {
                        rep.TruongKhoa.Value = truongkhoa.FirstOrDefault();
                    }

                    //BS Chi dinh
                    var cbs = (from cls in _Data.CLS
                               join cb in _Data.CanBoes on cls.MaCB equals cb.MaCB
                               where cls.IdCLS == idcls
                               select cb.TenCB).ToList();
                    if (cbs.Count() > 0)
                    {
                        rep.BSDieuTri.Value = cbs.FirstOrDefault();
                    }

                    //rep.xrMota.Text = mota;
                    List<DulieuXN> l1 = new List<DulieuXN>();
                    if (DungChung.Bien.check == 1)
                    {
                        foreach (var item1 in q2)
                        {
                            foreach (var item in _xnTH)
                            {
                                if (item1.IdCLS == item.IdCLS)
                                {
                                    DulieuXN a = new DulieuXN();
                                    a.DonVi = item1.DonVi;
                                    a.KetQua = item1.KetQua;
                                    a.ppxn = item1.PPXN;
                                    a.ThoiGian = item1.ThoiGian;
                                    a.IdCLS = item1.IdCLS;
                                    a.IdTieuNhom = item1.IdCLS;
                                    a.MaCB = item1.MaCB;
                                    a.MaCBth = item1.MaCBth;
                                    a.MaDVct = item1.MaDVct;
                                    a.MaKP = item1.MaKP;
                                    a.MaMay = item1.MaMay;
                                    a.NgayTH = item1.NgayTH;
                                    a.SoTT = item1.SoTT;
                                    a.STT = item1.STT;
                                    a.STT_F = item1.STT_F;
                                    a.STT_R = item1.STT_R;
                                    a.TenDV = item1.TenDV;
                                    a.TenDVct = item1.TenDVct;
                                    a.TenRG = item1.TenRG;
                                    a.TenTN = item1.TenTN;
                                    a.TSBT = item1.TSBT;
                                    a.GhiChu = item1.GhiChu;
                                    a.MaQuyTrinh = item1.MaQuyTrinh;
                                    l1.Add(a);
                                }
                            }
                        }
                        rep.DataSource = l1.OrderBy(p => p.STT_F).ToList();
                    }
                    else if (DungChung.Bien.check == 0)
                    {
                        foreach (var item1 in q2)
                        {
                            if (item1.IdCLS == DungChung.Bien.maidcls)
                            {
                                DulieuXN a = new DulieuXN();
                                a.DonVi = item1.DonVi;
                                a.KetQua = item1.KetQua;
                                a.ppxn = item1.PPXN;
                                a.ThoiGian = item1.ThoiGian;
                                a.IdCLS = item1.IdCLS;
                                a.IdTieuNhom = item1.IdCLS;
                                a.MaCB = item1.MaCB;
                                a.MaCBth = item1.MaCBth;
                                a.MaDVct = item1.MaDVct;
                                a.MaKP = item1.MaKP;
                                a.MaMay = item1.MaMay;
                                a.NgayTH = item1.NgayTH;
                                a.SoTT = item1.SoTT;
                                a.STT = item1.STT;
                                a.STT_F = item1.STT_F;
                                a.STT_R = item1.STT_R;
                                a.TenDV = item1.TenDV;
                                a.TenDVct = item1.TenDVct;
                                a.TenRG = item1.TenRG;
                                a.TenTN = item1.TenTN;
                                a.TSBT = item1.TSBT;
                                a.GhiChu = item1.GhiChu;
                                a.MaQuyTrinh = item1.MaQuyTrinh;
                                l1.Add(a);
                            }
                        }
                        rep.DataSource = l1.OrderBy(p => p.STT_F).ToList();
                    }
                    else
                    {
                        rep.DataSource = q2.OrderBy(p => p.SoTT).ToList();
                    }
                    rep.DataBinding();
                    rep.CreateDocument();
                    frm.prcIN.PrintingSystem = rep.PrintingSystem;
                    frm.ShowDialog();
                }
            }
        }
        #region 24272
        public static void _inPhieuXNTongHop_24272(int _Mabn, int _TrongDM, List<QLBV.FormThamSo.frm_InXnTongHop.InXNTongHop> _xnTH, bool _intheokp, string tenKP, string maMay, int idcls = 0) // thêm biến idcls cho các phiếu đơn)
        {
            string mota = "";
            var _ltn = _xnTH.Select(o => o.IdTieuNhom).ToList(); //tạo 1 list chứa idcls  của _xnTH, ở q1 thêm đk .Where(p => _ít_CLS.Contains(p.idcls))
            var idCLSs = _xnTH.Select(o => o.IdCLS).ToList();
            QLBV_Database.QLBVEntities _Data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            var q1 = (from cls in _Data.CLS.Where(p => p.Status == 1 && p.MaBNhan == _Mabn && idCLSs.Contains(p.IdCLS) /*((DungChung.Bien.MaBV == "30372" || DungChung.Bien.MaBV == "30004") ? idCLSs.Contains(p.IdCLS) : true)*/)
                      join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                      join clsct in _Data.CLScts.Where(o => DungChung.Bien.MaBV == "30372" ? o.Is_Execute == true : true) on cd.IDCD equals clsct.IDCD
                      select new { cls, cd, clsct }).ToList();
            if (_TrongDM == 0)
            {
                q1 = (from cls in _Data.CLS.Where(p => p.Status == 1 && p.MaBNhan == _Mabn && idCLSs.Contains(p.IdCLS) /*((DungChung.Bien.MaBV == "30372" || DungChung.Bien.MaBV == "30004") ? idCLSs.Contains(p.IdCLS) : true)*/)
                      join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                      join clsct in _Data.CLScts.Where(o => DungChung.Bien.MaBV == "30372" ? o.Is_Execute == true : true) on cd.IDCD equals clsct.IDCD
                      where cd.TrongBH == 0
                      select new { cls, cd, clsct }).ToList();
            }
            else if (_TrongDM == 1)
            {
                q1 = (from cls in _Data.CLS.Where(p => p.Status == 1 && p.MaBNhan == _Mabn && idCLSs.Contains(p.IdCLS) /*((DungChung.Bien.MaBV == "30372" || DungChung.Bien.MaBV == "30004") ? idCLSs.Contains(p.IdCLS) : true)*/)
                      join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                      join clsct in _Data.CLScts.Where(o => DungChung.Bien.MaBV == "30372" ? o.Is_Execute == true : true) on cd.IDCD equals clsct.IDCD
                      where cd.TrongBH == 1
                      select new { cls, cd, clsct }).ToList();
            }
            if (q1.Count < 0)
            {
                MessageBox.Show("Không có dịch vụ!!");
                return;
            }
            var Mota = (from cls in _Data.CLS.Where(p => p.MaBNhan == _Mabn && idCLSs.Contains(p.IdCLS))
                        select new { cls }).ToList();
            if (Mota.Count > 0)
            {
                int dem = 1;
                foreach (var item in Mota)
                {
                    if (!string.IsNullOrWhiteSpace(item.cls.GhiChu))
                    {
                        mota += "- " + item.cls.GhiChu + "\r\n";
                        dem++;
                    }
                    if (dem == 2)
                    {
                        break;
                    }
                }
            }
            var bnnh = _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn).FirstOrDefault();
            var gt = bnnh.GTinh;
            var ttbs = _Data.TTboXungs.FirstOrDefault(o => o.MaBNhan == _Mabn);
            List<int> dskp = q1.Select(p => p.cls.MaKP ?? 0).Distinct().ToList();
            var _ldv0 = (from tn in _Data.TieuNhomDVs.Where(p => p.IDNhom == 1)
                         join dv in _Data.DichVus.Where(p => p.PLoai == 2) on tn.IdTieuNhom equals dv.IdTieuNhom
                         join dvct in _Data.DichVucts on dv.MaDV equals dvct.MaDV
                         select new { tn.TenTN, STT = ((DungChung.Bien.MaBV == "30372" || DungChung.Bien.MaBV == "30004") ? dvct.STT : tn.STT), dv.TenDV, dvct.MaDVct, dvct.DonVi, dvct.TSnTu, dvct.TSnDen, dvct.TSnuTu, dvct.TSnuDen, dvct.TSBT, dvct.TenDVct, dv.SoTT, dvct.STT_R, tn.IdTieuNhom, tn.TenRG, dvct.STT_F }).ToList();
            var _ldv = (from dv in _ldv0
                        select new { TSBT = (DungChung.Bien.MaBV == "30372" ? (gt == 1 ? GhepTSBT("", dv.TSnTu, dv.TSnDen, dv.MaDVct) : GhepTSBT("", dv.TSnuTu, dv.TSnuDen, dv.MaDVct)) : dv.TSBT), dv.TenTN, dv.TenRG, dv.TenDVct, dv.TenDV, dv.STT_R, dv.STT, dv.SoTT, dv.MaDVct, dv.IdTieuNhom, dv.DonVi, dv.STT_F }).ToList();
            var _lbnkb = _Data.BNKBs.Where(p => p.MaBNhan == _Mabn).ToList();
            if (_intheokp)
            {

            }
            else
            {
                var q22 = (from cls in q1
                           join dv in _ldv.Where(p => _ltn.Contains(p.IdTieuNhom)) on cls.clsct.MaDVct equals dv.MaDVct
                           select new XNTongHop
                           {
                               IdCLS = cls.cls.IdCLS,
                               IdCD = cls.cd.IDCD,
                               MaCBth = cls.cls.MaCBth,
                               NgayTH = cls.cls.NgayTH,
                               MaKP = cls.cls.MaKP,
                               MaDVct = cls.clsct.MaDVct,
                               TenDVct = dv.TenDVct,
                               DonVi = dv.DonVi,
                               MaDV = cls.cd.MaDV,
                               TenDV = dv.TenDV,
                               TenTN = dv.TenTN.ToUpper(),
                               TenRG = dv.TenRG,
                               KetQua = cls.clsct.KetQua,
                               PPXN = cls.clsct.PPXN_Quytrinhdo,
                               ThoiGian = cls.clsct.ThoiGian,
                               TSBT = (DungChung.Bien.MaBV == "24272" && dv.TSBT.Contains("|")) ? (bnnh.GTinh == 1 ? dv.TSBT.Split('|')[0] : dv.TSBT.Split('|')[1]) : dv.TSBT,
                               STT = dv.STT,
                               STT_F = dv.STT_F,
                               SoTT = dv.SoTT,
                               STT_R = dv.STT_R,
                               IdTieuNhom = dv.IdTieuNhom,
                               MaMay = cls.cd.MaMay,
                               MaCB = cls.cls.MaCB,
                               GhiChu = cls.cls.GhiChu
                           }).OrderBy(p => p.STT_F).ThenBy(p => p.STT_F).ThenBy(p => p.STT_R).Distinct().ToList();
                var q2 = (from q in q22
                          select new XNTongHop { GhiChu = q.GhiChu, DonVi = q.DonVi, IdCLS = q.IdCLS, IdTieuNhom = q.IdTieuNhom, PPXN = q.PPXN, ThoiGian = q.ThoiGian, KetQua = DungChung.Bien.MaBV == "14018" ? (q.TenRG == "XN nước tiểu" ? (q.KetQua == "" ? "Negative" : q.KetQua + " " + q.DonVi) : q.KetQua) : q.KetQua, MaCBth = q.MaCBth, MaDV = ((q22.Where(o => o.MaDV == q.MaDV).Count() <= 1 && DungChung.Bien.MaBV == "30372") ? 0 : q.MaDV), MaDVct = q.MaDVct, MaKP = q.MaKP, MaMay = q.MaMay, NgayTH = q.NgayTH, SoTT = q.SoTT, STT = q.STT, STT_R = q.STT_R, STT_F = q.STT_F, TenDV = ((q22.Where(o => o.MaDV == q.MaDV).Count() <= 1 && DungChung.Bien.MaBV == "30372") ? "" : q.TenDV), TenDVct = q.TenDVct, TenRG = q.TenRG, TenTN = q.TenTN, TSBT = q.TSBT, MaCB = q.MaCB }).ToList();
                var maDV = q2.Select(o => o.MaDV).Distinct().ToList();

                var _lcd = _lbnkb.Where(p => dskp.Contains(p.MaKP ?? 0)).Select(p => p.ChanDoan).ToArray();
                string cd = string.Join(";", _lcd);
                if (q2.Count() > 0 && bnnh != null)
                {
                    var clsln = (from a in q2
                                 select new { a.MaCBth, a.NgayTH, a.IdCLS }).OrderByDescending(p => p.IdCLS).ToList();
                    frmIn frm = new frmIn();
                    BaoCao.Rep_PhieuXNTongHop rep = new BaoCao.Rep_PhieuXNTongHop(bnnh.GTinh ?? 0);
                    if (clsln.Count() > 0)
                    {
                        string _macb = clsln.FirstOrDefault().MaCBth;
                        var tencb = _Data.CanBoes.Where(p => p.MaCB == _macb).ToList();
                        if (tencb.Count() > 0)
                        {
                            rep.BSTH.Value = tencb.FirstOrDefault().CapBac + "." + tencb.FirstOrDefault().TenCB;
                        }
                        rep.paramNgayTH.Value = DungChung.Ham.NgaySangChu(clsln.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                        if (idcls > 0) // phiếu in 1 DV
                        {
                            _macb = clsln.Where(p => p.IdCLS == idcls).FirstOrDefault().MaCBth;
                            tencb = _Data.CanBoes.Where(p => p.MaCB == _macb).ToList();
                            if (tencb.Count() > 0)
                            {
                                rep.BSTH.Value = tencb.FirstOrDefault().CapBac + "." + tencb.FirstOrDefault().TenCB;
                            }
                            //rep.paramNgayTH.Value = DungChung.Ham.NgaySangChu(clsln.Where(p => p.IdCLS == idcls).FirstOrDefault().NgayTH.Value);
                            rep.paramNgayTH.Value = DungChung.Ham.NgaySangChu(clsln.Where(p => p.IdCLS == idcls).FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                        }
                    }
                    _getTenRG = q2.Select(p => p.TenRG).Distinct().FirstOrDefault();


                    if (q2.Select(p => p.TenRG).Distinct().FirstOrDefault() == "XN nước tiểu")
                    {
                        rep.xrLabel49.Text = "PHIẾU TRẢ KẾT QUẢ XÉT NGHIỆM NƯỚC TIỂU";
                    }
                    if (q2.Select(o => o.MaCB).Distinct().Count() == 1)
                    {
                        rep.lblBSChiDinhTittle.Visible = true;
                        rep.lblBSChiDinh.Visible = true;
                        var macb = q2.FirstOrDefault().MaCB;
                        var cbo = _Data.CanBoes.FirstOrDefault(o => o.MaCB == macb);
                        if (cbo != null)
                        {
                            rep.BSChiDinh.Value = cbo.ChucVu + " " + cbo.TenCB;
                        }
                    }
                    else
                    {
                        rep.lblBSChiDinhTittle.Visible = false;
                        rep.lblBSChiDinh.Visible = false;
                    }
                    var _faxx = _Data.HTHONGs.Where(p => p.MaBV == DungChung.Bien.MaBV).Select(q => q.Fax).ToList();
                    rep.DiaChiPK.Value = DungChung.Bien.DiaChi;
                    if (_faxx.Count > 0)
                        rep.SDTFax.Value = "SĐT: " + DungChung.Bien.SDTCQ + " - Fax: " + _faxx.FirstOrDefault();
                    else
                        rep.SDTFax.Value = "SĐT: " + DungChung.Bien.SDTCQ + " - Fax:";
                    if (ttbs != null)
                    {
                        rep.Email.Value = ttbs.Email;
                        rep.SoDienThoaiBN.Value = ttbs.DThoai;
                    }
                    rep.NgaySinh.Value = DungChung.Ham.GhepNgaySinh("/", bnnh.NamSinh, bnnh.ThangSinh, bnnh.NgaySinh);
                    rep.TenKP.Value = tenKP;
                    rep.TenCQCQ.Value = DungChung.Bien.TenCQ;
                    rep.MaBNhan.Value = "Số : " + _Mabn;
                    rep.MaMay.Value = maMay;
                    rep.TenBNhan.Value = bnnh.TenBNhan.ToUpper();
                    rep.ChanDoan.Value = DungChung.Ham.FreshString(cd);
                    rep.Tuoi.Value = bnnh.Tuoi;
                    rep.NamSinh.Value = bnnh.NamSinh;
                    rep.Gtinh.Value = bnnh.GTinh == 1 ? "Nam" : "Nữ";
                    rep.DiaChi.Value = bnnh.DChi;
                    rep.SThe.Value = bnnh.SThe;
                    rep.PID.Value = bnnh.PID;
                    _getBHYT = bnnh.SThe;
                    if (_getBHYT.Length >= 10)
                    {
                        rep.The1.Text = _getBHYT.Substring(0, 2);
                        rep.The2.Text = _getBHYT.Substring(2, 1);
                        rep.The3.Text = _getBHYT.Substring(3, 2);
                        rep.The4.Text = _getBHYT.Substring(5, 2);
                        rep.The5.Text = _getBHYT.Substring(7, 3);
                        rep.The6.Text = _getBHYT.Substring(10);
                    }
                    rep.xrMota.Text = mota;
                    List<DulieuXN> l1 = new List<DulieuXN>();
                    rep.DataSource = q2.OrderBy(p => p.SoTT).ToList();
                    rep.dataBinhding();
                    rep.CreateDocument();
                    frm.prcIN.PrintingSystem = rep.PrintingSystem;
                    frm.ShowDialog();
                }
            }
        }

        #endregion
        public static void _inPhieuXNTongHop(int _Mabn, List<QLBV.FormThamSo.frm_InXnTongHop.InXNTongHop> _xnTH, bool _intheokp, string tenKP, string maMay, int idcls, List<int> id) // thêm biến idcls cho các phiếu đơn)
        {
            string mota = "";
            var _ltn = _xnTH.Select(o => o.IdTieuNhom).ToList(); //tạo 1 list chứa idcls  của _xnTH, ở q1 thêm đk .Where(p => _ít_CLS.Contains(p.idcls))
            var idCLSs = _xnTH.Select(o => o.IdCLS).ToList();
            QLBV_Database.QLBVEntities _Data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            var q1 = (from cls in _Data.CLS.Where(p => p.Status == 1 && p.MaBNhan == _Mabn && idCLSs.Contains(p.IdCLS) /*((DungChung.Bien.MaBV == "30372" || DungChung.Bien.MaBV == "30004") ? idCLSs.Contains(p.IdCLS) : true)*/)
                      join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                      join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                      select new { cls, cd, clsct }).ToList();
            if(DungChung.Bien.MaBV == "30372" && id.Count > 0)
            {
                q1 = (from cls in _Data.CLS.Where(p => p.Status == 1 && p.MaBNhan == _Mabn && idCLSs.Contains(p.IdCLS) /*((DungChung.Bien.MaBV == "30372" || DungChung.Bien.MaBV == "30004") ? idCLSs.Contains(p.IdCLS) : true)*/)
                      join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                      join clsct in _Data.CLScts.Where(o => DungChung.Bien.MaBV == "30372" ? o.Is_Execute == true : true) on cd.IDCD equals clsct.IDCD
                      select new { cls, cd, clsct }).ToList();
            }    
            var Mota = (from cls in _Data.CLS.Where(p => p.MaBNhan == _Mabn && idCLSs.Contains(p.IdCLS))
                        select new { cls }).ToList();
            if (Mota.Count > 0)
            {
                int dem = 1;
                foreach (var item in Mota)
                {
                    if (!string.IsNullOrWhiteSpace(item.cls.GhiChu))
                    {
                        mota += "- " + item.cls.GhiChu + "\r\n";
                        dem++;
                    }
                    if (dem == 2)
                    {
                        break;
                    }
                }
            }
            var bn = _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn).FirstOrDefault();
            var gt = bn.GTinh;
            var ttbs = _Data.TTboXungs.FirstOrDefault(o => o.MaBNhan == _Mabn);
            List<int> dskp = q1.Select(p => p.cls.MaKP ?? 0).Distinct().ToList();
            var _ldv0 = (from tn in _Data.TieuNhomDVs.Where(p => p.IDNhom == 1)
                         join dv in _Data.DichVus.Where(p => p.PLoai == 2) on tn.IdTieuNhom equals dv.IdTieuNhom
                         join dvct in _Data.DichVucts on dv.MaDV equals dvct.MaDV
                         select new { tn.TenTN, STT = ((DungChung.Bien.MaBV == "30372" || DungChung.Bien.MaBV == "30004") ? dvct.STT : tn.STT), dv.TenDV, dvct.MaDVct, dvct.DonVi, dvct.TSnTu, dvct.TSnDen, dvct.TSnuTu, dvct.TSnuDen, dvct.TSBT, dvct.TenDVct, dv.SoTT, dvct.STT_R, tn.IdTieuNhom, tn.TenRG, dvct.STT_F }).ToList();
            var _ldv = (from dv in _ldv0
                        select new { TSBT = (DungChung.Bien.MaBV == "30372" ? (gt == 1 ? GhepTSBT("", dv.TSnTu, dv.TSnDen, dv.MaDVct) : GhepTSBT("", dv.TSnuTu, dv.TSnuDen, dv.MaDVct)) : dv.TSBT), dv.TenTN, dv.TenRG, dv.TenDVct, dv.TenDV, dv.STT_R, dv.STT, dv.SoTT, dv.MaDVct, dv.IdTieuNhom, dv.DonVi, dv.STT_F }).ToList();
            var _lbnkb = _Data.BNKBs.Where(p => p.MaBNhan == _Mabn).ToList();
            if (_intheokp)
            {

            }
            else
            {
                var q22 = (from cls in q1
                           join dv in _ldv.Where(p => _ltn.Contains(p.IdTieuNhom)) on cls.clsct.MaDVct equals dv.MaDVct
                           select new XNTongHop
                           {
                               IdCLS = cls.cls.IdCLS,
                               IdCD = cls.cd.IDCD,
                               MaCBth = cls.cls.MaCBth,
                               NgayTH = cls.cls.NgayTH,
                               MaKP = cls.cls.MaKP,
                               MaDVct = cls.clsct.MaDVct,
                               TenDVct = dv.TenDVct,
                               DonVi = dv.DonVi,
                               MaDV = cls.cd.MaDV,
                               TenDV = dv.TenDV,
                               TenTN = dv.TenTN.ToUpper(),
                               TenRG = dv.TenRG,
                               KetQua = cls.clsct.KetQua,
                               PPXN = cls.clsct.PPXN_Quytrinhdo,
                               ThoiGian = cls.clsct.ThoiGian,
                               TSBT = dv.TSBT,
                               STT = dv.STT,
                               STT_F = dv.STT_F,
                               SoTT = dv.SoTT,
                               STT_R = dv.STT_R,
                               IdTieuNhom = dv.IdTieuNhom,
                               MaMay = DungChung.Bien.MaBV == "30004" ? cls.clsct.MaMayct : cls.cd.MaMay,
                               MaCB = cls.cls.MaCB,
                               GhiChu = cls.cls.GhiChu
                           }).OrderBy(p => p.STT_F).ThenBy(p => p.STT_F).ThenBy(p => p.STT_R).Distinct().ToList();
                var q2 = (from q in q22
                          select new XNTongHop { GhiChu = q.GhiChu, DonVi = q.DonVi, IdCLS = q.IdCLS, IdTieuNhom = q.IdTieuNhom, PPXN = q.PPXN, ThoiGian = q.ThoiGian, KetQua = DungChung.Bien.MaBV == "14018" ? (q.TenRG == "XN nước tiểu" ? (q.KetQua == "" ? "Negative" : q.KetQua + " " + q.DonVi) : q.KetQua) : q.KetQua, MaCBth = q.MaCBth, MaDV = ((q22.Where(o => o.MaDV == q.MaDV).Count() <= 1 && DungChung.Bien.MaBV == "30372") ? 0 : q.MaDV), MaDVct = q.MaDVct, MaKP = q.MaKP, MaMay = q.MaMay, NgayTH = q.NgayTH, SoTT = q.SoTT, STT = q.STT, STT_R = q.STT_R, STT_F = q.STT_F, TenDV = ((q22.Where(o => o.MaDV == q.MaDV).Count() <= 1 && DungChung.Bien.MaBV == "30372") ? "" : q.TenDV), TenDVct = q.TenDVct, TenRG = q.TenRG, TenTN = q.TenTN, TSBT = q.TSBT, MaCB = q.MaCB }).ToList();
                var maDV = q2.Select(o => o.MaDV).Distinct().ToList();
                var _lcd = _lbnkb.Where(p => dskp.Contains(p.MaKP ?? 0)).Select(p => p.ChanDoan).ToArray();
                if (DungChung.Bien.MaBV == "30372")
                {
                    foreach (var item in maDV)
                    {
                        var q2ByMaDV = q2.Where(o => o.MaDV == item).ToList();
                        int dem = 0;
                        foreach (var subItem in q2ByMaDV)
                        {
                            if (subItem.TenRG != "XN huyết học" && subItem.TenRG != "XN dịch chọc dò")
                            {
                                dem++;
                                q2.FirstOrDefault(o => o.MaDVct == subItem.MaDVct && o.IdCLS == subItem.IdCLS).STT = dem;
                            }
                        }
                    }
                    _lcd = _lbnkb.Where(p => dskp.Contains(p.MaKP ?? 0)).Select(p => p.ChanDoanBD + "; " + p.ChanDoan + "; " + p.BenhKhac).ToArray();
                }
                string cd = string.Join(";", _lcd);
                if (q2.Count() > 0 && bn != null)
                {
                    var clsln = (from a in q2
                                 select new { a.MaCBth, a.NgayTH, a.IdCLS }).OrderByDescending(p => p.IdCLS).ToList();
                    frmIn frm = new frmIn();
                    BaoCao.Rep_PhieuXNTongHop rep = new BaoCao.Rep_PhieuXNTongHop(bn.GTinh ?? 0);
                    if (clsln.Count() > 0)
                    {
                        string _macb = clsln.FirstOrDefault().MaCBth;
                        var tencb = _Data.CanBoes.Where(p => p.MaCB == _macb).ToList();
                        if (tencb.Count() > 0)
                        {
                            rep.BSTH.Value = DungChung.Bien.MaBV == "30004" ? "" : tencb.FirstOrDefault().CapBac + "." + tencb.FirstOrDefault().TenCB;
                        }
                        rep.paramNgayTH.Value = DungChung.Ham.NgaySangChu(clsln.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                        if (idcls > 0) // phiếu in 1 DV
                        {
                            _macb = clsln.Where(p => p.IdCLS == idcls).FirstOrDefault().MaCBth;
                            tencb = _Data.CanBoes.Where(p => p.MaCB == _macb).ToList();
                            if (tencb.Count() > 0)
                            {
                                rep.BSTH.Value = DungChung.Bien.MaBV == "30004" ? "" : tencb.FirstOrDefault().CapBac + "." + tencb.FirstOrDefault().TenCB;
                            }
                            //rep.paramNgayTH.Value = DungChung.Ham.NgaySangChu(clsln.Where(p => p.IdCLS == idcls).FirstOrDefault().NgayTH.Value);
                            rep.paramNgayTH.Value = DungChung.Ham.NgaySangChu(clsln.Where(p => p.IdCLS == idcls).FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                        }
                    }
                    _getTenRG = q2.Select(p => p.TenRG).Distinct().FirstOrDefault();


                    if (q2.Select(p => p.TenRG).Distinct().FirstOrDefault() == "XN nước tiểu")
                    {
                        rep.xrLabel49.Text = "PHIẾU TRẢ KẾT QUẢ XÉT NGHIỆM NƯỚC TIỂU";
                    }
                    if (q2.Select(o => o.MaCB).Distinct().Count() == 1)
                    {
                        rep.lblBSChiDinhTittle.Visible = true;
                        rep.lblBSChiDinh.Visible = true;
                        var macb = q2.FirstOrDefault().MaCB;
                        var cbo = _Data.CanBoes.FirstOrDefault(o => o.MaCB == macb);
                        if (cbo != null)
                        {
                            rep.BSChiDinh.Value = cbo.ChucVu + " " + cbo.TenCB;
                        }
                    }
                    else
                    {
                        rep.lblBSChiDinhTittle.Visible = false;
                        rep.lblBSChiDinh.Visible = false;
                    }
                    var _faxx = _Data.HTHONGs.Where(p => p.MaBV == DungChung.Bien.MaBV).Select(q => q.Fax).ToList();
                    rep.DiaChiPK.Value = DungChung.Bien.DiaChi;
                    if (_faxx.Count > 0)
                        rep.SDTFax.Value = "SĐT: " + DungChung.Bien.SDTCQ + " - Fax: " + _faxx.FirstOrDefault();
                    else
                        rep.SDTFax.Value = "SĐT: " + DungChung.Bien.SDTCQ + " - Fax:";
                    if (ttbs != null)
                    {
                        rep.Email.Value = ttbs.Email;
                        rep.SoDienThoaiBN.Value = ttbs.DThoai;
                    }
                    rep.NgaySinh.Value = DungChung.Ham.GhepNgaySinh("/", bn.NamSinh, bn.ThangSinh, bn.NgaySinh);
                    rep.TenKP.Value = tenKP;
                    rep.TenCQCQ.Value = DungChung.Bien.TenCQ;
                    rep.MaBNhan.Value = DungChung.Bien.MaBV == "14018" ? (_getTenRG.ToString() == "XN nước tiểu" ? _Mabn.ToString() : "Số : " + _Mabn) : "Số : " + _Mabn;
                    rep.MaMay.Value = maMay;
                    rep.TenBNhan.Value = bn.TenBNhan.ToUpper();
                    if (DungChung.Bien.MaBV == "27194")
                    {
                        string a = "";
                        var chandoan = (from bnkb in _Data.BNKBs.Where(p => p.MaBNhan == _Mabn)
                                        select new { bnkb }).ToList();
                        var canlamsang = (from cls in _Data.CLS.Where(p => p.IdCLS == idcls && p.MaBNhan == _Mabn)
                                          select new { cls }).ToList();
                        foreach (var item in chandoan)
                        {
                            if (canlamsang.Count > 0 && canlamsang.FirstOrDefault().cls.MaKP == item.bnkb.MaKP)
                            {
                                a += item.bnkb.ChanDoan + "; " + item.bnkb.BenhKhac;
                            }
                        }
                        rep.ChanDoan.Value = a;
                    }
                    else
                    {
                        rep.ChanDoan.Value = DungChung.Ham.FreshString(cd);
                    }
                    rep.Tuoi.Value = bn.Tuoi;
                    rep.NamSinh.Value = bn.NamSinh;
                    rep.Gtinh.Value = bn.GTinh == 1 ? "Nam" : "Nữ";
                    rep.DiaChi.Value = bn.DChi;
                    rep.SThe.Value = bn.SThe;
                    rep.PID.Value = bn.PID;
                    //rep.MaBenhAn.Value=;
                    _getBHYT = bn.SThe;
                    if (_getBHYT.Length >= 10)
                    {
                        rep.The1.Text = _getBHYT.Substring(0, 2);
                        rep.The2.Text = _getBHYT.Substring(2, 1);
                        rep.The3.Text = _getBHYT.Substring(3, 2);
                        rep.The4.Text = _getBHYT.Substring(5, 2);
                        rep.The5.Text = _getBHYT.Substring(7, 3);
                        rep.The6.Text = _getBHYT.Substring(10);
                    }
                    if (DungChung.Bien.MaBV == "30372")
                        rep.lab55.Text = "PHÒNG XÉT NGHIỆM";


                    rep.xrMota.Text = mota;
                    List<DulieuXN> l1 = new List<DulieuXN>();
                    if (DungChung.Bien.MaBV == "24012" && DungChung.Bien.check == 1)
                    {
                        foreach (var item1 in q2)
                        {
                            foreach (var item in _xnTH)
                            {
                                if (item1.IdCLS == item.IdCLS)
                                {
                                    DulieuXN a = new DulieuXN();
                                    a.DonVi = item1.DonVi;
                                    a.KetQua = item1.KetQua;
                                    a.ppxn = item1.PPXN;
                                    a.ThoiGian = item1.ThoiGian;
                                    a.IdCLS = item1.IdCLS;
                                    a.IdTieuNhom = item1.IdCLS;
                                    a.MaCB = item1.MaCB;
                                    a.MaCBth = item1.MaCBth;
                                    a.MaDVct = item1.MaDVct;
                                    a.MaKP = item1.MaKP;
                                    a.MaMay = item1.MaMay;
                                    a.NgayTH = item1.NgayTH;
                                    a.SoTT = item1.SoTT;
                                    a.STT = item1.STT;
                                    a.STT_F = item1.STT_F;
                                    a.STT_R = item1.STT_R;
                                    a.TenDV = item1.TenDV;
                                    a.TenDVct = item1.TenDVct;
                                    a.TenRG = item1.TenRG;
                                    a.TenTN = item1.TenTN;
                                    a.TSBT = item1.TSBT;
                                    a.GhiChu = item1.GhiChu;
                                    l1.Add(a);
                                }
                            }
                        }
                        rep.DataSource = l1.OrderBy(p => p.STT_F).ToList();
                    }
                    else if (DungChung.Bien.MaBV == "24012" && DungChung.Bien.check == 0)
                    {
                        foreach (var item1 in q2)
                        {
                            if (item1.IdCLS == DungChung.Bien.maidcls)
                            {
                                DulieuXN a = new DulieuXN();
                                a.DonVi = item1.DonVi;
                                a.KetQua = item1.KetQua;
                                a.ppxn = item1.PPXN;
                                a.ThoiGian = item1.ThoiGian;
                                a.IdCLS = item1.IdCLS;
                                a.IdTieuNhom = item1.IdCLS;
                                a.MaCB = item1.MaCB;
                                a.MaCBth = item1.MaCBth;
                                a.MaDVct = item1.MaDVct;
                                a.MaKP = item1.MaKP;
                                a.MaMay = item1.MaMay;
                                a.NgayTH = item1.NgayTH;
                                a.SoTT = item1.SoTT;
                                a.STT = item1.STT;
                                a.STT_F = item1.STT_F;
                                a.STT_R = item1.STT_R;
                                a.TenDV = item1.TenDV;
                                a.TenDVct = item1.TenDVct;
                                a.TenRG = item1.TenRG;
                                a.TenTN = item1.TenTN;
                                a.TSBT = item1.TSBT;
                                a.GhiChu = item1.GhiChu;
                                l1.Add(a);
                            }
                        }
                        rep.DataSource = l1.OrderBy(p => p.STT_F).ToList();
                    }
                    else if (DungChung.Bien.MaBV == "30372")
                    {
                        rep.DataSource = q2.OrderBy(p => p.STT).ToList();
                    }
                    else
                    {
                        rep.DataSource = DungChung.Bien.MaBV == "30004" ? q2.OrderBy(p => p.STT_F).ToList() : q2.OrderBy(p => p.SoTT).ToList();
                    }
                    rep.dataBinhding();
                    rep.CreateDocument();
                    frm.prcIN.PrintingSystem = rep.PrintingSystem;
                    frm.ShowDialog();
                }
            }
        }
        public class DulieuXN
        {
            public int IdCLS { get; set; }
            public int IdTieuNhom { get; set; }
            public string TenRG { get; set; }
            public string MaCBth { get; set; }
            public int? MaKP { get; set; }
            public DateTime? NgayTH { get; set; }
            public int? SoTT { get; set; }
            public int? STT { get; set; }
            public int? STT_R { get; set; }
            public int? STT_F { get; set; }
            public string TenDV { get; set; }
            public string TenTN { get; set; }
            public string MaCB { get; set; }
            public string MaDVct { get; set; }
            public string TenDVct { get; set; }
            public string KetQua { get; set; }
            public string TSBT { get; set; }
            public string DonVi { get; set; }
            public string MaMay { get; set; }
            public string ppxn { get; set; }
            public string GhiChu { get; set; }
            public DateTime? ThoiGian { get; set; }
            public string MaQuyTrinh { get; set; }

        }
        private static void _InPhieuXNCamMau_01071(int _Mabn, int idcls, string tenTN, List<int> _lIdCls, List<int?> _lMaDV)
        {
            QLBV_Database.QLBVEntities _Data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            var par = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                       join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                       join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                       select new { kp.IsDongY, cls.MaCBth, cls.NgayThang, cls.CapCuu, cls.NgayTH, cls.BarCode, bn.TenBNhan, bn.NamSinh, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, cls.MaKP, cls.Status }).ToList();
            frmIn frm = new frmIn();
            Rep_PhieuXNHuyetHoc_01071 rep = new Rep_PhieuXNHuyetHoc_01071(tenTN, par.Count() > 0 ? par.FirstOrDefault().GTinh ?? 0 : 0);
            //string _So = "";
            if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
            {
                rep.txtBarcode.Text = par.Count > 0 ? par.FirstOrDefault().BarCode : "";
                rep.lblBarcode.Visible = true;
                rep.txtBarcode.Visible = true;
            }
            rep.MaBNhan.Value = idcls;
            //rep.Status.Value = DungChung.Bien.InPhoi;
            if (tenTN == "XN Đông cầm máu")
            { rep.lblTenXN.Text = "ĐÔNG MÁU"; }
            rep.SoPhieu.Value = _Mabn; //số phiếu lấy theo mã bn đức 28-09
            rep.paramIdCLS.Value = idcls;

            if (par.Count > 0)
            {
                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                if (DungChung.Bien.MaBV == "24297" && par.FirstOrDefault().IsDongY == true)
                {
                    rep.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_Data, _Mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value);
                }
                else
                {
                    rep.ChanDoan.Value = DungChung.Bien.MaBV == "01049" ? arrThongTinBNKB[1] + "   Mã ICD :" + arrThongTinBNKB[0] : arrThongTinBNKB[1];
                }

                rep.Buong.Value = arrThongTinBNKB[2];
                rep.Giuong.Value = arrThongTinBNKB[3];
                rep.Khoa.Value = arrThongTinBNKB[4];
                rep.MaBSDT.Value = par.FirstOrDefault().MaCB;
                rep.Macb.Value = par.FirstOrDefault().MaCBth;

                rep.DiaChi.Value = par.FirstOrDefault().DChi;
                rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                rep.TenBNhan.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                rep.NamSinh.Value = par.FirstOrDefault().NamSinh;
                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                if (gioiTinh == 1)
                {
                    rep.lblGioiTinh.Text = "Nam";
                }
                else if (gioiTinh == 0)
                {
                    rep.lblGioiTinh.Text = "Nữ";
                }
                if (par.FirstOrDefault().SThe != null && par.FirstOrDefault().SThe.Length >= 15)
                {
                    rep.SThe.Value = par.FirstOrDefault().SThe;
                }
                bool capcuu = par.FirstOrDefault().CapCuu;
                if (capcuu)
                {
                    rep.CapCuu.Value = "X";
                }
                else rep.Thuong.Value = "X";
                if (par.FirstOrDefault().NgayTH != null)
                {
                    rep.paramNgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                }
                else { rep.paramNgayTH.Value = "Ngày ..... tháng ...... năm....."; }
                if (par.FirstOrDefault().NgayThang != null)
                {
                    rep.paramNgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                }
                else { rep.paramNgayCD.Value = "Ngày ..... tháng ...... năm....."; }
                var qcls = (from chidinh in _Data.ChiDinhs.Where(p => p.IdCLS == idcls)
                            join clsct in _Data.CLScts.Where(p => p.Status != -1) on chidinh.IDCD equals clsct.IDCD
                            join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                            join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                            join tndv in _Data.TieuNhomDVs on dv.IdTieuNhom equals tndv.IdTieuNhom
                            where tndv.TenRG == tenTN
                            select new Rep_PhieuXNHuyetHoc_01071.BaoCao { MaDVct = clsct.MaDVct, TenDVct = dvct.TenDVct, KetQua = clsct.KetQua, TSBT = dvct.TSBT, TenDV = dv.TenDV, MaTam = dv.MaTam, MaDV = dv.MaDV, DonVi = dvct.DonVi, STTDV = dv.SoTT ?? 1, STTdvct = dvct.STT, STT_F = (dvct.STT_F ?? Byte.MaxValue) }).ToList();
                if (_lIdCls != null && _lMaDV != null && _lIdCls.Count() > 0 && _lMaDV.Count() > 0)
                {
                    qcls = (from chidinh in _Data.ChiDinhs.Where(p => (DungChung.Bien.MaBV == "30372" && _lIdCls != null) ? _lIdCls.Contains(p.IdCLS ?? 0) : p.IdCLS == idcls)
                            join clsct in _Data.CLScts.Where(p => p.Status != -1) on chidinh.IDCD equals clsct.IDCD
                            join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                            join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                            join tndv in _Data.TieuNhomDVs on dv.IdTieuNhom equals tndv.IdTieuNhom
                            where tndv.TenRG == tenTN && ((DungChung.Bien.MaBV == "30372" && _lMaDV != null) ? _lMaDV.Contains(dv.MaDV) : true)
                            select new Rep_PhieuXNHuyetHoc_01071.BaoCao { MaDVct = clsct.MaDVct, TenDVct = dvct.TenDVct, KetQua = clsct.KetQua, TSBT = dvct.TSBT, TenDV = dv.TenDV, MaTam = dv.MaTam, MaDV = dv.MaDV, DonVi = dvct.DonVi, STTDV = dv.SoTT ?? 1, STTdvct = dvct.STT, STT_F = (dvct.STT_F ?? Byte.MaxValue) }).ToList();
                }
                if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                {
                    var qdv = (from cls in qcls
                               group cls by new { cls.MaDV, cls.TenDVct, cls.MaTam, cls.STTDV, cls.KetQua, cls.TSBT, cls.DonVi, cls.STT_F } into kq
                               select new Rep_PhieuXNHuyetHoc_01071.BaoCao { MaDVct = kq.Key.MaTam, MaDV = kq.Key.MaDV, TenDVct = kq.Key.TenDVct, TenDV = "Phiếu xét nghiệm đông cầm máu", STTDV = -1, STTdvct = kq.Key.STTDV, STTNhomHT = 0, DonVi = kq.Key.DonVi, KetQua = kq.Key.KetQua, TSBT = kq.Key.TSBT, STT_F = kq.Key.STT_F }).OrderBy(p => p.STT_F).ThenBy(p => p.STT_F).ToList();
                    int num = 1;
                    var qdvOderby = (from dv in qdv select new { dv.MaDV, dv.STTDV, STTNhomHT = num++ }).ToList();
                    rep.DataSource = qdv.OrderBy(p => p.STT_F).ThenBy(p => p.STT_F).ToList();
                }
                else
                {
                    var qdv = (from cls in qcls
                               group cls by new { cls.MaDV, cls.TenDVct, cls.MaTam, cls.STTDV, cls.KetQua, cls.TSBT, cls.DonVi } into kq
                               select new Rep_PhieuXNHuyetHoc_01071.BaoCao { MaDVct = kq.Key.MaTam, MaDV = kq.Key.MaDV, TenDVct = kq.Key.TenDVct, TenDV = "Phiếu xét nghiệm đông cầm máu", STTDV = -1, STTdvct = kq.Key.STTDV, STTNhomHT = 0, DonVi = kq.Key.DonVi, KetQua = kq.Key.KetQua, TSBT = kq.Key.TSBT }).OrderBy(p => p.STTDV).ThenBy(p => p.STTdvct).ToList();
                    int num = 1;
                    var qdvOderby = (from dv in qdv select new { dv.MaDV, dv.STTDV, STTNhomHT = num++ }).ToList();
                    //qcls = (from a in qcls join b in qdvOderby on a.MaDV equals b.MaDV select new Rep_PhieuXNHuyetHoc_01071.BaoCao { MaDVct = a.MaDVct, TenDVct = a.TenDVct, KetQua = a.KetQua, TSBT = a.TSBT, TenDV = a.TenDV, MaTam = a.MaTam, MaDV = a.MaDV, DonVi = a.DonVi, STTDV = a.STTDV, STTdvct = a.STTdvct, STTNhomHT = b.STTNhomHT }).ToList();
                    //qdv.AddRange(qcls);
                    rep.DataSource = qdv.OrderBy(p => p.STTDV).ThenBy(p => p.STTdvct).ToList();
                }
                //var qhhh5 = (from cls in _Data.CLS.Where(p => p.IdCLS == idcls)
                //             join chidinh in _Data.ChiDinhs on cls.IdCLS equals chidinh.IdCLS
                //             join dichvu in _Data.DichVus on chidinh.MaDV equals dichvu.MaDV
                //             join tn in _Data.TieuNhomDVs on dichvu.IdTieuNhom equals tn.IdTieuNhom
                //             join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                //             join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                //             select new { KetQuact = dvct.KetQua, clsct.MaDVct, clsct.KetQua, dvct.STT, dvct.TSnTu, dvct.TSnDen, dvct.TSnuTu, dvct.TSnuDen, chidinh.MaDV, cls.Status }).ToList();



                //if (DungChung.Bien.MaBV == "27023")
                //{
                //    if (qhhh5.Count() > 0)
                //    {
                //        foreach (var item in qhhh5)
                //        {
                //            if (item.Status == 0)
                //            {
                //                rep.celKQ.Text = "";
                //            }
                //        }
                //    }
                //}
                rep.dataBinhding();
                rep.CreateDocument();
                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                frm.ShowDialog();

            }
        }
        private static bool phieuXNDongMau(QLBV_Database.QLBVEntities data, int idcls, string _tieunhom)
        {
            try
            {
                var bn = (from benhnhan in data.BenhNhans
                          join cls in data.CLS.Where(p => p.IdCLS == idcls) on benhnhan.MaBNhan equals cls.MaBNhan
                          select new { benhnhan.NNhap, benhnhan.MaBNhan, benhnhan.SThe, benhnhan.TenBNhan, benhnhan.NamSinh, benhnhan.Tuoi, benhnhan.GTinh, benhnhan.DChi, cls.NgayThang, cls.MaCB, cls.MaCBth, cls.NgayTH, cls.MaKP }).FirstOrDefault();
                if (bn != null)
                {
                    //int noichuyen = 3;// 1- nơi khác chuyển đến (MaBV != null), 2- Y tế tư (CDNoiGT != null) , 3-Tự đến
                    string ngaythang = "";
                    int stt = 1;
                    BaoCao.rep_XNDongMau rep = new BaoCao.rep_XNDongMau();
                    //khoa phòng chỉ định
                    var khoa = data.KPhongs.Where(p => p.MaKP == bn.MaKP).FirstOrDefault();
                    if (khoa != null && khoa.TenKP != null)
                        rep.celKhoa.Text = "Khoa: " + khoa.TenKP;

                    //thông tin chung
                    rep.celHoTen.Text = bn.TenBNhan;
                    rep.celCQCQ.Text = DungChung.Bien.TenCQCQ.ToUpper();
                    rep.celCQ.Text = DungChung.Bien.TenCQ.ToUpper();
                    rep.celDChi.Text = "Địa chỉ: " + bn.DChi;
                    rep.celNamSinh.Text = bn.NamSinh;
                    if (DungChung.Bien.MaBV == "27023")
                    {

                        var qvv = data.VaoViens.Where(p => p.MaBNhan == bn.MaBNhan).FirstOrDefault();
                        if (qvv != null && qvv.SoBA != null)
                            rep.celSo.Text = "Số: " + qvv.SoBA.ToString();
                        else
                            rep.celSo.Text = "Số: ";
                    }
                    else
                        rep.celSo.Text = "Số: " + bn.MaBNhan.ToString();
                    rep.celSoThe.Text = "Số thẻ BHYT: " + bn.SThe;
                    rep.celTuoi.Text = bn.Tuoi == null ? "Tuổi:" : ("Tuổi: " + bn.Tuoi.ToString());
                    if (bn.GTinh == 1)
                        rep.celGTinh.Text = "Giới tính : Nam";
                    else
                        rep.celGTinh.Text = "Giới tính : Nữ";

                    // lấy thoongt in phòng, buồng giường
                    var qbnkb = data.BNKBs.Where(p => p.MaBNhan == bn.MaBNhan && p.MaKP == bn.MaKP).FirstOrDefault();
                    if (qbnkb != null)
                    {
                        rep.celChanDoan.Text = "Chẩn đoán: " + qbnkb.ChanDoan;
                        rep.celBuong.Text = "Buồng: " + qbnkb.Buong;
                        rep.celGiuong.Text = "số giường: " + qbnkb.Giuong;
                    }

                    // ngày tháng, bác sỹ chỉ định và ngày tháng, bác sỹ thực hiện
                    if (bn.NgayThang != null)
                    {
                        rep.ngayyeucau.Text = "Ngày " + bn.NgayThang.Value.Day + " tháng " + bn.NgayThang.Value.Month + " năm " + bn.NgayThang.Value.Year;
                        ngaythang = bn.NgayThang.Value.ToString("dd/MM/yyyy");
                    }
                    if (bn.NgayTH != null)
                    {
                        rep.ngayth.Text = "Ngày " + bn.NgayTH.Value.Day + " tháng " + bn.NgayTH.Value.Month + " năm " + bn.NgayTH.Value.Year;

                    }

                    var canbo = data.CanBoes.Where(p => p.MaCB == bn.MaCB).FirstOrDefault();
                    if (canbo != null)
                        rep.txt_BSCD.Text = canbo.TenCB;
                    var canboth = data.CanBoes.Where(p => p.MaCB == bn.MaCBth).FirstOrDefault();
                    //if (canboth != null)
                    //    rep.txtCanBoTH.Text = canboth.TenCB;

                    // kết quả xét nghiệm
                    var kqcls = (from cd in data.ChiDinhs.Where(p => p.IdCLS == idcls)
                                 join clsct in data.CLScts on cd.IDCD equals clsct.IDCD
                                 join dvct in data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                 join dv in data.DichVus on cd.MaDV equals dv.MaDV
                                 join tn in data.TieuNhomDVs.Where(p => p.TenRG == _tieunhom) on dv.IdTieuNhom equals tn.IdTieuNhom
                                 select new { cd.MaDV, dvct.TenDVct, dvct.STT, clsct.KetQua, dv.TenDV, dvct.MaDVct, dvct.TSBT, dvct.DonVi }).ToList();

                    rep.DataSource = kqcls;
                    rep.BindingData();
                    rep.CreateDocument();
                    frmIn inphieu = new frmIn();
                    inphieu.prcIN.PrintingSystem = rep.PrintingSystem;
                    inphieu.ShowDialog();
                    return true;
                }
                else return false;

            }
            catch (Exception)
            {

                return false;
            }
        }

        internal static void PhieuChupCatLopViTinh(int _IDCD)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);


            var par = (from bn in data.BenhNhans
                       join cls in data.CLS on bn.MaBNhan equals cls.MaBNhan
                       join chidinh in data.ChiDinhs.Where(p => p.IDCD == _IDCD) on cls.IdCLS equals chidinh.IdCLS
                       join clsct in data.CLScts on chidinh.IDCD equals clsct.IDCD
                       join dvct in data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                       join dv in data.DichVus on dvct.MaDV equals dv.MaDV
                       join cb in data.CanBoes on cls.MaCB equals cb.MaCB
                       join cbb in data.CanBoes on cls.MaCBth equals cbb.MaCB
                       select new { cls.ChanDoan, cls.MaICD, cls.IdCLS, chidinh.IDCD, chidinh.Status, cls.MaCBth, TenCBth = cbb.TenCB, dvct.STT, cls.NgayTH, clsct.KetQua, clsct.DuongDan, cls.NgayThang, cls.MaKP, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, cb.TenCB, chidinh.ChiDinh1, chidinh.KetLuan, dv.TenDV, chidinh.LoiDan }).ToList();
            frmIn frmct = new frmIn();
            Nam_0994.repPhieuChupCatLopViTinh repct = new Nam_0994.repPhieuChupCatLopViTinh();
            string _kqct = "", _motact = "";
            string[] arrThongTinBNKB;
            if (par.Count > 0)
            {
                repct.TenBN.Value = par.FirstOrDefault().TenBNhan;
                if (DungChung.Bien.MaBV == "27023")
                    repct.So.Value = par.FirstOrDefault().IdCLS;
                else
                    repct.So.Value = _IDCD;
                repct.MaCBDT.Value = par.FirstOrDefault().TenCB;
                repct.DChi.Value = par.FirstOrDefault().DChi;
                repct.Tuoi.Value = DungChung.Ham.TuoitheoThang(data, par.FirstOrDefault().MaBNhan, DungChung.Bien.formatAge);
                if (par.FirstOrDefault().LoiDan != null && par.FirstOrDefault().LoiDan.ToString() != "")
                    repct.Loidan.Value = par.FirstOrDefault().LoiDan;
                else
                    repct.Loidan.Value = "- Giữ gìn, bảo quản phim cẩn thận." + "\n" + "- Nhớ mang theo phim này vào lần khám sau.";
                repct.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                if (gioiTinh == 1)
                {
                    repct.GTinh.Value = "Nam";
                }
                else if (gioiTinh == 0)
                {
                    repct.GTinh.Value = "N?";
                }
                string _yccc = "";
                foreach (var a in par)
                {
                    _yccc += " " + a.TenDV + " (" + a.ChiDinh1 + ")" + "\n";
                }
                repct.YCCC.Value = _yccc;
                foreach (var a in par)
                {
                    _motact += " " + a.KetQua + "\n";
                    _kqct += " " + a.KetLuan + "\n";
                }
                DateTime NgayThang = new DateTime();
                NgayThang = par.FirstOrDefault().NgayThang ?? System.DateTime.Now.Date;
                DateTime NgayTH = new DateTime();
                NgayTH = par.FirstOrDefault().NgayTH ?? System.DateTime.Now.Date;
                if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                    repct.NgayCD.Value = DungChung.Ham.NgaySangChu(NgayThang, DungChung.Bien.FormatDate);
                else
                    repct.NgayCD.Value = "..... gi?, ngày ..... tháng ..... nam .....";
                if (par.FirstOrDefault().NgayTH != null)
                    repct.NgayTH.Value = DungChung.Ham.NgaySangChu(NgayTH, DungChung.Bien.FormatDate);
                else
                    repct.NgayTH.Value = "..... gi?, ngày ..... tháng ..... nam .....";
                repct.ChuanDoan.Value = par.FirstOrDefault().ChanDoan;
                repct.MaCBth.Value = par.FirstOrDefault().TenCBth;
                repct.Mota.Value = _motact;
                repct.Ketluan.Value = _kqct;
                int _maBN = par.FirstOrDefault().MaBNhan;
                int _maKP = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value; //par.FirstOrDefault().MaKP ??0;
                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(data, _maBN, _maKP, true);
                repct.Buong.Value = arrThongTinBNKB[2];
                repct.Giuong.Value = arrThongTinBNKB[3];
                repct.Khoa.Value = arrThongTinBNKB[4];
            }
            repct.CreateDocument();
            frmct.prcIN.PrintingSystem = repct.PrintingSystem;
            frmct.ShowDialog();

        }

        internal static void PhieuSieuAmMau4D(int _IDCD, int mau)
        {
            QLBV_Database.QLBVEntities _Data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            var par = (from bn in _Data.BenhNhans
                       join cls in _Data.CLS on bn.MaBNhan equals cls.MaBNhan
                       join chidinh in _Data.ChiDinhs.Where(p => p.IDCD == _IDCD) on cls.IdCLS equals chidinh.IdCLS
                       join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                       join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                       join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                       join cb in _Data.CanBoes on cls.MaCBth equals cb.MaCB
                       select new { chidinh.Status, cls.MaKPth, cls.IdCLS, bn.DTuong, bn.NoiTinh, bn.NamSinh, cls.MaCBth, TenCBth = cb.TenCB, dvct.STT, cls.NgayTH, clsct.KetQua, clsct.DuongDan, clsct.DuongDan2, cls.NgayThang, cls.MaKP, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, chidinh.ChiDinh1, chidinh.KetLuan, dv.TenDV, chidinh.LoiDan }).ToList();
            int _mabn = 0;
            int _makp = 0;
            if (par.Count > 0)
                _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
            if (par.Count > 0)
            {
                _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                _mabn = par.FirstOrDefault().MaBNhan;
                if (DungChung.Bien._Visible_CDHA[1] == false)
                {
                    if (par.FirstOrDefault().Status == 1)
                        DungChung.Bien._Visible_CDHA[2] = true;
                    else
                        DungChung.Bien._Visible_CDHA[2] = false;
                }
            }
            if (mau == 0)
            {
                #region bệnh viện 12345
                if (DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297")
                {
                    frmIn frm3 = new frmIn();
                    BaoCao.repPhieuSieuAmThai_4D5D_12345 rep3 = new BaoCao.repPhieuSieuAmThai_4D5D_12345();
                    int _makp3 = 0;
                    if (par.Count > 0)
                    {
                        rep3.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                        rep3.GioiTinh.Value = par.FirstOrDefault().GTinh == 1 ? "Nam" : "Nữ";

                        rep3.SoPhieu.Value = _IDCD;
                        _makp3 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                        rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                        rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                        rep3.TuoiBN.Value = par.FirstOrDefault().Tuoi;
                        rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                        rep3.TenPhieu.Value = par.FirstOrDefault().TenDV.ToUpper();
                        rep3.TenBacSi.Value = par.FirstOrDefault().TenCBth;
                        //rep3.lblLuuY.DataBindings.Add("Html", "", "Value");
                        int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());

                        if (gioiTinh == 1)
                        {
                            rep3.Nu.Value = "/";
                        }
                        else if (gioiTinh == 0)
                        {
                            rep3.Nam.Value = "/";
                        }
                        rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                        rep3.KetLuan.Value = "♦ " + par.FirstOrDefault().KetLuan;
                        rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                        if (par.FirstOrDefault().SThe.Length >= 15)
                        {
                            rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                            rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                            rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                            rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                            rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                        }
                        // rep3.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                        rep3.ChanDoan.Value = arrThongTinBNKB[1];
                        rep3.Buong.Value = arrThongTinBNKB[2];
                        rep3.Giuong.Value = arrThongTinBNKB[3];
                        rep3.Khoa.Value = arrThongTinBNKB[4];

                        //rep3.Motatonthuong.Value = convertToHTML(Mota.FirstOrDefault().KetQua);
                        if (par.FirstOrDefault().DuongDan != null)
                            rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                        if (par.FirstOrDefault().DuongDan2 != null)
                            rep3.paramDuongDan2.Value = par.FirstOrDefault().DuongDan2;


                        if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                            rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                        else
                            rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                        if (par.FirstOrDefault().NgayTH != null)
                            rep3.celNgayThang.Text = DungChung.Bien.DiaDanh + ", ngày " + par.FirstOrDefault().NgayTH.Value.Day + " tháng " + par.FirstOrDefault().NgayTH.Value.Month + " năm " + par.FirstOrDefault().NgayTH.Value.Year;
                        else
                            rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                        rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                        rep3.hienthiKetQua(par.FirstOrDefault().KetQua);
                        //rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                    }//rep3.hienthiKetQua(convertToHTML("|Gan:kích thước không to, nhu mô đậm âm và tăng sáng. Gan phải trong có khối tăng âm ranh giới rõ . \n |Mật:Đường mật trong và ngoài gan không giãn, không sỏi.\n |Thận phải:-Nhu mô đều, kích thước cao, không to",'|',':'));
                    rep3.CreateDocument();
                    frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                    frm3.ShowDialog();
                }
                #endregion
                else
                {

                    frmIn frm3 = new frmIn();
                    BaoCao.repPhieuSieuAm_Mau4D_27183 rep3 = new BaoCao.repPhieuSieuAm_Mau4D_27183();
                    int _makp3 = 0;
                    if (par.Count > 0)
                    {
                        rep3.TenBN.Value = par.FirstOrDefault().TenBNhan;

                        rep3.SoPhieu.Value = _IDCD;
                        _makp3 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                        rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                        rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                        rep3.TuoiBN.Value = par.FirstOrDefault().Tuoi;
                        rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                        int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());

                        if (gioiTinh == 1)
                        {
                            rep3.Nu.Value = "/";
                        }
                        else if (gioiTinh == 0)
                        {
                            rep3.Nam.Value = "/";
                        }
                        rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                        rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                        rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                        if (par.FirstOrDefault().SThe.Length >= 15)
                        {
                            rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                            rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                            rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                            rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                            rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                        }
                        // rep3.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                        arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                        rep3.ChanDoan.Value = arrThongTinBNKB[1];
                        rep3.Buong.Value = arrThongTinBNKB[2];
                        rep3.Giuong.Value = arrThongTinBNKB[3];
                        rep3.Khoa.Value = arrThongTinBNKB[4];

                        //rep3.Motatonthuong.Value = convertToHTML(Mota.FirstOrDefault().KetQua);
                        if (par.FirstOrDefault().DuongDan != null)
                            rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                        if (par.FirstOrDefault().DuongDan2 != null)
                            rep3.paramDuongDan2.Value = par.FirstOrDefault().DuongDan2;


                        if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                            rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                        else
                            rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                        if (par.FirstOrDefault().NgayTH != null)
                            rep3.celNgayThang.Text = DungChung.Bien.DiaDanh + ", ngày " + par.FirstOrDefault().NgayTH.Value.Day + " tháng " + par.FirstOrDefault().NgayTH.Value.Month + " năm " + par.FirstOrDefault().NgayTH.Value.Year;
                        else
                            rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                        rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                        if (DungChung.Bien.MaBV == "27183")
                            rep3.hienthiKetQua27183(par.FirstOrDefault().KetQua);
                        else
                            rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(par.FirstOrDefault().KetQua, '|', ':'));
                        //rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                    }//rep3.hienthiKetQua(convertToHTML("|Gan:kích thước không to, nhu mô đậm âm và tăng sáng. Gan phải trong có khối tăng âm ranh giới rõ . \n |Mật:Đường mật trong và ngoài gan không giãn, không sỏi.\n |Thận phải:-Nhu mô đều, kích thước cao, không to",'|',':'));
                    rep3.CreateDocument();
                    frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                    frm3.ShowDialog();
                }
            }
            else
            {
                frmIn frm3 = new frmIn();
                BaoCao.repPhieuSieuAm_Mau4D_27183_2Thai rep3 = new BaoCao.repPhieuSieuAm_Mau4D_27183_2Thai();
                int _makp3 = 0;
                if (par.Count > 0)
                {
                    rep3.TenBN.Value = par.FirstOrDefault().TenBNhan;

                    rep3.SoPhieu.Value = _IDCD;
                    _makp3 = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                    rep3.MaCBDT.Value = par.FirstOrDefault().MaCB;
                    rep3.DiaChi.Value = par.FirstOrDefault().DChi;
                    rep3.TuoiBN.Value = par.FirstOrDefault().Tuoi;
                    rep3.SoBHYT.Value = par.FirstOrDefault().SThe;
                    int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());

                    if (gioiTinh == 1)
                    {
                        rep3.Nu.Value = "/";
                    }
                    else if (gioiTinh == 0)
                    {
                        rep3.Nam.Value = "/";
                    }
                    rep3.YCKT.Value = "- Yêu cầu kiểm tra: " + par.FirstOrDefault().TenDV + " (" + par.FirstOrDefault().ChiDinh1 + ")";
                    rep3.KetLuan.Value = par.FirstOrDefault().KetLuan;
                    rep3.LDBS.Value = par.FirstOrDefault().LoiDan;
                    if (par.FirstOrDefault().SThe.Length >= 15)
                    {
                        rep3.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                        rep3.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                        rep3.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                        rep3.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                        rep3.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                    }
                    // rep3.TieuDe.Value = "PHIẾU " + par.FirstOrDefault().TenDV.ToUpper();
                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _mabn, par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value, true);
                    rep3.ChanDoan.Value = arrThongTinBNKB[1];
                    rep3.Buong.Value = arrThongTinBNKB[2];
                    rep3.Giuong.Value = arrThongTinBNKB[3];
                    rep3.Khoa.Value = arrThongTinBNKB[4];

                    //rep3.Motatonthuong.Value = convertToHTML(Mota.FirstOrDefault().KetQua);
                    if (par.FirstOrDefault().DuongDan != null)
                        rep3.DuongDan.Value = par.FirstOrDefault().DuongDan;
                    if (par.FirstOrDefault().DuongDan2 != null)
                        rep3.paramDuongDan2.Value = par.FirstOrDefault().DuongDan2;


                    if (par.FirstOrDefault().NgayThang != null && DungChung.Bien.MaBV != "02005")
                        rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                    else
                        rep3.NgayCD.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                    if (par.FirstOrDefault().NgayTH != null)
                        rep3.celNgayThang.Text = DungChung.Bien.DiaDanh + ", ngày " + par.FirstOrDefault().NgayTH.Value.Day + " tháng " + par.FirstOrDefault().NgayTH.Value.Month + " năm " + par.FirstOrDefault().NgayTH.Value.Year;
                    else
                        rep3.NgayTH.Value = ".....giờ, ngày ..... tháng ..... năm ......";
                    rep3.Macb.Value = par.FirstOrDefault().MaCBth;
                    string kq = par.FirstOrDefault().KetQua.Replace('|', ' ');
                    if (DungChung.Bien.MaBV == "27183")
                        rep3.hienthiKetQua27183(kq);
                    else
                        rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.InDenTrang(kq, '|', ':'));
                    //rep3.hienthiKetQua(QLBV_Library.QLBV_Ham.convertHTML(par.FirstOrDefault().KetQua, "red", "RoyalBlue", '|', ':', "yes"));
                }//rep3.hienthiKetQua(convertToHTML("|Gan:kích thước không to, nhu mô đậm âm và tăng sáng. Gan phải trong có khối tăng âm ranh giới rõ . \n |Mật:Đường mật trong và ngoài gan không giãn, không sỏi.\n |Thận phải:-Nhu mô đều, kích thước cao, không to",'|',':'));
                rep3.CreateDocument();
                frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                frm3.ShowDialog();
            }
        }
        #region Phieu sieu am 35-40 tuan 12345
        internal static void PhieuSieuAmMau35Tuan_12345(int _IDCD, List<frm_KetQuaSieuAmThai35w_12345.BienKQ> kq)
        {
            QLBV_Database.QLBVEntities _Data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            var par = (from bn in _Data.BenhNhans
                       join cls in _Data.CLS on bn.MaBNhan equals cls.MaBNhan
                       join chidinh in _Data.ChiDinhs.Where(p => p.IDCD == _IDCD) on cls.IdCLS equals chidinh.IdCLS
                       join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                       join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                       join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV

                       select new { chidinh.Status, cls.MaKPth, cls.IdCLS, bn.DTuong, bn.NoiTinh, bn.NamSinh, cls.MaCBth, dvct.STT, cls.NgayTH, cls.ChanDoan, clsct.KetQua, clsct.DuongDan, clsct.DuongDan2, cls.NgayThang, cls.MaKP, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, chidinh.ChiDinh1, chidinh.KetLuan, dv.TenDV, chidinh.LoiDan }).ToList();
            var parr0 = (from p in par join cb in _Data.CanBoes on p.MaCBth equals cb.MaCB select new { cb.TenCB, cb.ChucVu }).ToList();

            int _mabn = 0;
            int _makp = 0;
            Dictionary<string, object> _dic = new Dictionary<string, object>();
            if (par.Count > 0)
                _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
            if (par.Count > 0)
            {
                _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                _mabn = par.FirstOrDefault().MaBNhan;
                if (DungChung.Bien._Visible_CDHA[1] == false)
                {
                    if (par.FirstOrDefault().Status == 1)
                        DungChung.Bien._Visible_CDHA[2] = true;
                    else
                        DungChung.Bien._Visible_CDHA[2] = false;
                }
                _dic.Add("Hoten", par.FirstOrDefault().TenBNhan.ToUpper());
                _dic.Add("DChi", par.FirstOrDefault().DChi);
                //string gioitinh = "";
                //if (par.FirstOrDefault().GTinh == 0)
                //{
                //    gioitinh = "Nữ";
                //}
                //if (par.FirstOrDefault().GTinh == 1)
                //{
                //    gioitinh = "Nam";
                //}

                //_dic.Add("Gioitinh", "Giới tính: " + gioitinh);
                string s1 = kq.FirstOrDefault().HamMat + Environment.NewLine + kq.FirstOrDefault().TuChi + Environment.NewLine + kq.FirstOrDefault().XuongSo + Environment.NewLine + kq.FirstOrDefault().CotSongHeXuong + Environment.NewLine + kq.FirstOrDefault().CacNaoThat + Environment.NewLine + kq.FirstOrDefault().TimThai;
                string s2 = kq.FirstOrDefault().OBung1 + Environment.NewLine + kq.FirstOrDefault().OBung2 + Environment.NewLine + kq.FirstOrDefault().OBung3 + Environment.NewLine + kq.FirstOrDefault().OBung4 + Environment.NewLine + kq.FirstOrDefault().OBung5 + Environment.NewLine + kq.FirstOrDefault().OBung6 + Environment.NewLine + kq.FirstOrDefault().Nguc;
                string s3 = "Rau thai: " + kq.FirstOrDefault().RauThai;
                _dic.Add("Oso1", s1);
                _dic.Add("Oso2", s2);
                _dic.Add("RauThai", s3);
                _dic.Add("Tuoi", "Tuổi: " + par.FirstOrDefault().Tuoi);
                _dic.Add("ChanDoan", par.FirstOrDefault().ChanDoan);
                _dic.Add("KetLuan", par.FirstOrDefault().KetLuan.ToString());
                _dic.Add("LoiDan", par.FirstOrDefault().LoiDan.ToString());
                var hthong = _Data.HTHONGs.FirstOrDefault(o => o.MaBV == DungChung.Bien.MaBV);
                if (hthong != null && !string.IsNullOrWhiteSpace(hthong.ImageURL))
                {
                    var path = hthong.ImageURL + DungChung.Bien.LogoPath;
                    if (File.Exists(path))
                    {
                        _dic.Add("Logo", path.ToString());
                    }
                }
                //_dic.Add("Logo",par.)
                var sdt = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).Select(p => p.DThoai).ToList();
                //if (sdt.FirstOrDefault() != null) _dic.Add("DThoai", "SĐT: " + sdt.FirstOrDefault().ToString());
                if (par.FirstOrDefault().DuongDan != null)
                    _dic.Add("Anh1", par.FirstOrDefault().DuongDan);
                //if (par.FirstOrDefault().DuongDan2 != null)
                //    _dic.Add("Anh2", par.FirstOrDefault().DuongDan2);
                if (parr0.Count > 0)
                    _dic.Add("Bacsy", parr0.FirstOrDefault().ChucVu + ": " + parr0.FirstOrDefault().TenCB);
                if (par.FirstOrDefault().NgayTH != null)
                    _dic.Add("Ngaythang", /**DungChung.Bien.DiaDanh+ */" Ngày " + par.FirstOrDefault().NgayTH.Value.Day + " tháng " + par.FirstOrDefault().NgayTH.Value.Month + " năm " + par.FirstOrDefault().NgayTH.Value.Year + " " + par.FirstOrDefault().NgayTH.Value.Hour + ":" + par.FirstOrDefault().NgayTH.Value.Minute);
                DungChung.Ham.Print(DungChung.PrintConfig.Rep_Sieuamthai3540tuan_12345, kq, _dic, false);
            }
        }
        #endregion

        #region  Phiếu siêu âm 01071 _ 01049 
        internal static void PhieuSieuAmMau4D_01071(int _IDCD, int mau, int giaodien, List<frm_KetQuaSieuAmThai4D.BienKQ> kq)
        {
            QLBV_Database.QLBVEntities _Data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            var par = (from bn in _Data.BenhNhans
                       join cls in _Data.CLS on bn.MaBNhan equals cls.MaBNhan
                       join chidinh in _Data.ChiDinhs.Where(p => p.IDCD == _IDCD) on cls.IdCLS equals chidinh.IdCLS
                       join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                       join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                       join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV

                       select new { chidinh.Status, cls.MaKPth, cls.IdCLS, bn.DTuong, bn.NoiTinh, bn.NamSinh, cls.MaCBth, dvct.STT, cls.NgayTH, cls.ChanDoan, clsct.KetQua, clsct.DuongDan, clsct.DuongDan2, cls.NgayThang, cls.MaKP, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, chidinh.ChiDinh1, chidinh.KetLuan, dv.TenDV, chidinh.LoiDan }).ToList();
            var parr0 = (from p in par join cb in _Data.CanBoes on p.MaCBth equals cb.MaCB select new { cb.TenCB, cb.ChucVu }).ToList();

            int _mabn = 0;
            int _makp = 0;
            Dictionary<string, object> _dic = new Dictionary<string, object>();
            if (par.Count > 0)
                _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
            if (par.Count > 0)
            {
                _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                _mabn = par.FirstOrDefault().MaBNhan;
                if (DungChung.Bien._Visible_CDHA[1] == false)
                {
                    if (par.FirstOrDefault().Status == 1)
                        DungChung.Bien._Visible_CDHA[2] = true;
                    else
                        DungChung.Bien._Visible_CDHA[2] = false;
                }
                _dic.Add("Hoten", "Họ và tên: " + par.FirstOrDefault().TenBNhan.ToUpper());
                _dic.Add("DChi", "Địa chỉ: " + par.FirstOrDefault().DChi);
                string gioitinh = "";
                if (par.FirstOrDefault().GTinh == 0)
                {
                    gioitinh = "Nữ";
                }
                if (par.FirstOrDefault().GTinh == 1)
                {
                    gioitinh = "Nam";
                }

                _dic.Add("Gioitinh", "Giới tính: " + gioitinh);
                _dic.Add("Tuoi", "Tuổi: " + par.FirstOrDefault().Tuoi);
                _dic.Add("ChanDoan", "Chẩn đoán: " + par.FirstOrDefault().ChanDoan);
                _dic.Add("KetLuan", par.FirstOrDefault().KetLuan.ToString());
                _dic.Add("LoiDan", par.FirstOrDefault().LoiDan.ToString());
                var sdt = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).Select(p => p.DThoai).ToList();
                if (sdt.FirstOrDefault() != null) _dic.Add("DThoai", "SĐT: " + sdt.FirstOrDefault().ToString());
                if (par.FirstOrDefault().DuongDan != null)
                    _dic.Add("Anh1", par.FirstOrDefault().DuongDan);
                if (par.FirstOrDefault().DuongDan2 != null)
                    _dic.Add("Anh2", par.FirstOrDefault().DuongDan2);
                if (parr0.Count > 0)
                    _dic.Add("Bacsy", parr0.FirstOrDefault().ChucVu + " " + parr0.FirstOrDefault().TenCB);
                if (par.FirstOrDefault().NgayTH != null)
                    _dic.Add("Ngaythang", DungChung.Bien.DiaDanh + " ,ngày " + par.FirstOrDefault().NgayTH.Value.Day + " tháng " + par.FirstOrDefault().NgayTH.Value.Month + " năm " + par.FirstOrDefault().NgayTH.Value.Year);
            }

            if (mau == 0)
            {
                if (giaodien == 1)
                {
                    _dic.Add("MauInThai", 1);
                    DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuSieuAmThai_01071, kq, _dic, false);
                }
                else
                {
                    if (giaodien == 2)
                    {
                        _dic.Add("MauInThai", 2);
                        DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuSieuAmThai_01071, kq, _dic, false);
                    }
                    else
                    {
                        _dic.Add("MauInThai", 3);
                        DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuSieuAmThai_01071, kq, _dic, false);
                    }
                }
            }
            else
            {
                _dic.Add("MauInThai", 4);
                DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuSieuAmThai_01071, kq, _dic, false);

            }
        }
        #endregion


        #region Phiếu siêu âm 24297
        internal static void PhieuSieuAmMau4D_24297(int _IDCD, int mau, int giaodien, List<frm_KetQuaSieuAmThai4D.BienKQ> kq)
        {
            QLBV_Database.QLBVEntities _Data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            var par = (from bn in _Data.BenhNhans
                       join cls in _Data.CLS on bn.MaBNhan equals cls.MaBNhan
                       join chidinh in _Data.ChiDinhs.Where(p => p.IDCD == _IDCD) on cls.IdCLS equals chidinh.IdCLS
                       join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                       join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                       join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV

                       select new { chidinh.Status, cls.MaKPth, cls.IdCLS, bn.DTuong, bn.NoiTinh, bn.NamSinh, cls.MaCBth, dvct.STT, cls.NgayTH, cls.ChanDoan, clsct.KetQua, clsct.DuongDan, clsct.DuongDan2, cls.NgayThang, cls.MaKP, bn.MaBNhan, bn.TenBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, chidinh.ChiDinh1, chidinh.KetLuan, dv.TenDV, chidinh.LoiDan }).ToList();
            var parr0 = (from p in par join cb in _Data.CanBoes on p.MaCBth equals cb.MaCB select new { cb.TenCB, cb.ChucVu }).ToList();

            int _mabn = 0;
            int _makp = 0;
            Dictionary<string, object> _dic = new Dictionary<string, object>();
            if (par.Count > 0)
                _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
            if (par.Count > 0)
            {
                _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                _mabn = par.FirstOrDefault().MaBNhan;
                if (DungChung.Bien._Visible_CDHA[1] == false)
                {
                    if (par.FirstOrDefault().Status == 1)
                        DungChung.Bien._Visible_CDHA[2] = true;
                    else
                        DungChung.Bien._Visible_CDHA[2] = false;
                }
                _dic.Add("Hoten", "Họ và tên: " + par.FirstOrDefault().TenBNhan.ToUpper());
                _dic.Add("DChi", "Địa chỉ: " + par.FirstOrDefault().DChi);
                string gioitinh = "";
                if (par.FirstOrDefault().GTinh == 0)
                {
                    gioitinh = "Nữ";
                }
                if (par.FirstOrDefault().GTinh == 1)
                {
                    gioitinh = "Nam";
                }

                _dic.Add("Gioitinh", "Giới tính: " + gioitinh);
                _dic.Add("Tuoi", "Tuổi: " + par.FirstOrDefault().Tuoi);
                _dic.Add("ChanDoan", "Chẩn đoán: " + par.FirstOrDefault().ChanDoan);
                _dic.Add("KetLuan", par.FirstOrDefault().KetLuan.ToString());
                _dic.Add("LoiDan", par.FirstOrDefault().LoiDan.ToString());
                var sdt = _Data.TTboXungs.Where(p => p.MaBNhan == _mabn).Select(p => p.DThoai).ToList();
                if (sdt.FirstOrDefault() != null) _dic.Add("DThoai", "SĐT: " + sdt.FirstOrDefault().ToString());
                if (par.FirstOrDefault().DuongDan != null)
                    _dic.Add("Anh1", par.FirstOrDefault().DuongDan);
                if (par.FirstOrDefault().DuongDan2 != null)
                    _dic.Add("Anh2", par.FirstOrDefault().DuongDan2);
                if (parr0.Count > 0)
                    _dic.Add("Bacsy", parr0.FirstOrDefault().ChucVu + " " + parr0.FirstOrDefault().TenCB);
                if (par.FirstOrDefault().NgayTH != null)
                    _dic.Add("Ngaythang", DungChung.Bien.DiaDanh + " ,ngày " + par.FirstOrDefault().NgayTH.Value.Day + " tháng " + par.FirstOrDefault().NgayTH.Value.Month + " năm " + par.FirstOrDefault().NgayTH.Value.Year);
            }

            if (mau == 0)
            {
                if (giaodien == 1)
                {
                    _dic.Add("MauInThai", 1);
                    DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuSieuAmThai_24297, kq, _dic, false);
                }
                else
                {
                    if (giaodien == 2)
                    {
                        _dic.Add("MauInThai", 2);
                        DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuSieuAmThai_24297, kq, _dic, false);
                    }
                    else
                    {
                        _dic.Add("MauInThai", 3);
                        DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuSieuAmThai_24297, kq, _dic, false);
                    }
                }
            }
            else
            {
                _dic.Add("MauInThai", 4);
                DungChung.Ham.Print(DungChung.PrintConfig.Rep_PhieuSieuAmThai_01071, kq, _dic, false);

            }
        }

        #endregion



        private static void XNHoaSinhMau_30299(QLBV_Database.QLBVEntities _Data, int idcls, int _Mabn)
        {
            frmIn frm = new frmIn();
            BaoCao.repPhieuXNHoaSinhMau_30299 rep = new BaoCao.repPhieuXNHoaSinhMau_30299();
            int _makp = 0;
            rep.MaBNhan.Value = _Mabn;
            rep.Status.Value = DungChung.Bien.InPhoi;

            rep.SoPhieu.Value = idcls;
            var par = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                       join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                       select new { cls.MaKP, cls.MaCBth, cls.NgayTH, cls.NgayThang, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, cls.CapCuu, bn.Tuoi, bn.SThe, cls.MaCB }).ToList();
            if (par.Count > 0)
            {
                _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                rep.Macb.Value = par.FirstOrDefault().MaCBth;
                rep.DiaChi.Value = par.FirstOrDefault().DChi;
                rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                if (gioiTinh == 1)
                {
                    rep.Nu.Value = "/";
                }
                else if (gioiTinh == 0)
                {
                    rep.Nam.Value = "/";
                }
                if (par.FirstOrDefault().SThe != null && par.FirstOrDefault().SThe.Length >= 15)
                {
                    rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                    rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                    rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                    rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                    rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                }
                bool capcuu = par.FirstOrDefault().CapCuu;
                if (capcuu)
                {
                    rep.CapCuu.Value = "X";
                }
                else rep.Thuong.Value = "X";
            }

            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp, true);
            rep.ChanDoan.Value = arrThongTinBNKB[1];
            rep.Buong.Value = arrThongTinBNKB[2];
            rep.Giuong.Value = arrThongTinBNKB[3];
            rep.Khoa.Value = arrThongTinBNKB[4];
            if (par.FirstOrDefault().NgayThang != null)
                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
            else
                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
            if (par.FirstOrDefault().NgayTH != null)
                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
            else
                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";

            rep.CreateDocument();
            frm.prcIN.PrintingSystem = rep.PrintingSystem;
            frm.ShowDialog();
        }
        #region phiếu tế bào nước dịch 12122
        public static void InXN_NuocDich(int idCLS)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            frmIn frm = new frmIn();
            BaoCao.Rep_PhieuXetNghiemNuocDich rep = new BaoCao.Rep_PhieuXetNghiemNuocDich();
            rep.databinding(data, idCLS);
            rep.CreateDocument();
            frm.prcIN.PrintingSystem = rep.PrintingSystem;
            frm.ShowDialog();

        }

        # endregion
        #region _In Phiếu tế bào nước dịch
        public static bool _In_XNTeBaoNuocDich(QLBV_Database.QLBVEntities _data, int idcls, string _tenTieuNhom, string so)
        {
            try
            {
                //rep3.ChanDoan.Value = (arrThongTinBNKB[0] != null || arrThongTinBNKB[0] != "") && DungChung.Bien.MaBV == "24272" ? arrThongTinBNKB[0] + ";" : "";

                string _macb = "", _mabsth = "";
                if (string.IsNullOrEmpty(_tenTieuNhom))
                    _tenTieuNhom = "XN tế bào nước dịch";
                var clamsan = (from h in _data.CLS.Where(p => p.IdCLS == idcls) select h).ToList();
                if (clamsan.Count > 0 && clamsan.FirstOrDefault().MaCB != null)
                    _macb = clamsan.FirstOrDefault().MaCB;
                if (clamsan.Count > 0 && clamsan.FirstOrDefault().MaCBth != null)
                    _mabsth = clamsan.FirstOrDefault().MaCBth;
                int mabenhnhan = clamsan.FirstOrDefault().MaBNhan == null ? 0 : mabenhnhan = clamsan.FirstOrDefault().MaBNhan.Value;
                int makhoaphong = clamsan.FirstOrDefault().MaKP == null ? 0 : makhoaphong = clamsan.FirstOrDefault().MaKP.Value;
                //////
                var khoa = from h in _data.KPhongs.Where(p => p.MaKP == makhoaphong) select new { h.TenKP };
                var thongtinbenhnhan = from h in _data.BenhNhans.Where(p => p.MaBNhan == mabenhnhan)
                                       select new
                                       {
                                           h.NamSinh,
                                           h.MaBNhan,
                                           h.TenBNhan,
                                           h.DChi,
                                           h.SThe,
                                           h.Tuoi,
                                           h.GTinh//, h.CapCuu 
                                       };
                var thongtinbenh = from h in _data.BNKBs.Where(p => p.MaBNhan == mabenhnhan)
                                   select new { h.MaBNhan, h.ChanDoan, h.MaICD, h.Buong, h.Giuong, h.IDKB, h.MaKP };
                var ketqua = (from h in thongtinbenhnhan
                              join h1 in thongtinbenh on h.MaBNhan equals h1.MaBNhan
                              where h1.MaKP == makhoaphong
                              select new
                              {
                                  h.NamSinh,
                                  h.TenBNhan,
                                  h.DChi,
                                  h.Tuoi,
                                  h.GTinh,
                                  h.SThe,
                                  h1.ChanDoan, //h.CapCuu,
                                  h1.Buong,
                                  h1.Giuong,
                                  h1.MaICD
                              }).ToList();
                var dichvict = from h in _data.NhomDVs
                               join h1 in _data.TieuNhomDVs.Where(p => p.TenRG == _tenTieuNhom) on h.IDNhom equals h1.IDNhom
                               join dv in _data.DichVus on h1.IdTieuNhom equals dv.IdTieuNhom
                               join dvct in _data.DichVucts on dv.MaDV equals dvct.MaDV
                               select new { dvct.MaDVct, dvct.TenDVct, dvct.STT };
                //lay ket qua can lam san
                var ketquacanlamsan = (from cls in _data.CLS.Where(p => p.IdCLS == idcls)
                                       join chidinh in _data.ChiDinhs on cls.IdCLS equals chidinh.IdCLS
                                       join clsct in _data.CLScts on chidinh.IDCD equals clsct.IDCD
                                       join dvct in _data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                       select new { dvct.MaDVct, clsct.KetQua, dvct.STT, cls.CapCuu, cls.BenhPham, cls.BarCode }).ToList();
                ////lấy thông tin bênh nhân 
                BaoCao.rep_phieuketsquatebaonuocdich phieuxn = new BaoCao.rep_phieuketsquatebaonuocdich();
                if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
                {
                    phieuxn.txtBarcode.Text = ketquacanlamsan.Count > 0 ? ketquacanlamsan.FirstOrDefault().BarCode : "";
                    phieuxn.lblBarcode.Visible = true;
                    phieuxn.txtBarcode.Visible = true;
                }
                var dscb = _data.CanBoes.ToList();
                if (dscb.Where(p => p.MaCB == _macb).ToList().Count > 0 && dscb.Where(p => p.MaCB == _macb).ToList().FirstOrDefault().TenCB != null)
                    phieuxn.BSDT.Value = dscb.Where(p => p.MaCB == _macb).ToList().FirstOrDefault().TenCB.ToUpper();
                if (dscb.Where(p => p.MaCB == _mabsth).ToList().Count > 0 && dscb.Where(p => p.MaCB == _mabsth).ToList().FirstOrDefault().TenCB != null)
                    phieuxn.BSTH.Value = dscb.Where(p => p.MaCB == _mabsth).ToList().FirstOrDefault().TenCB.ToUpper();
                phieuxn.namsinhs = ketqua.FirstOrDefault().NamSinh == null ? "" : phieuxn.namsinhs = ketqua.FirstOrDefault().NamSinh.ToString();
                phieuxn.capcuas = ketquacanlamsan.FirstOrDefault().CapCuu.ToString();
                phieuxn.khoas = khoa.FirstOrDefault().TenKP == null ? "" : phieuxn.khoas = khoa.FirstOrDefault().TenKP.ToString();
                phieuxn.hotens = ketqua.FirstOrDefault().TenBNhan == null ? "" : ((DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789") ? phieuxn.hotens = ketqua.FirstOrDefault().TenBNhan.ToUpper().ToString() : phieuxn.hotens = ketqua.FirstOrDefault().TenBNhan.ToString());
                phieuxn.diachis = ketqua.FirstOrDefault().DChi == null ? "" : phieuxn.diachis = ketqua.FirstOrDefault().DChi.ToString();
                phieuxn.tuois = ketqua.FirstOrDefault().Tuoi == null ? "" : phieuxn.tuois = ketqua.FirstOrDefault().Tuoi.ToString();
                phieuxn.chuandoans = ketqua.FirstOrDefault().ChanDoan == null ? "" : phieuxn.chuandoans = ketqua.FirstOrDefault().ChanDoan.ToString() + (DungChung.Bien.MaBV != "24272" ? (DungChung.Bien.MaBV == "01049" ? (ketqua.FirstOrDefault().MaICD == null ? "" : ("Mã ICD: " + ketqua.FirstOrDefault().ChanDoan.ToString())) : "") : "");
                phieuxn.hotens = ketqua.FirstOrDefault().TenBNhan == null ? "" : phieuxn.hotens = ketqua.FirstOrDefault().TenBNhan.ToString();
                phieuxn.gtinhs = ketqua.FirstOrDefault().GTinh == null ? "" : phieuxn.gtinhs = ketqua.FirstOrDefault().GTinh.ToString();
                phieuxn.sothes = ketqua.FirstOrDefault().SThe == null ? "" : phieuxn.sothes = ketqua.FirstOrDefault().SThe.ToString();
                phieuxn.buongs = ketqua.FirstOrDefault().Buong == null ? "" : phieuxn.buongs = ketqua.FirstOrDefault().Buong.ToString();
                phieuxn.giuongs = ketqua.FirstOrDefault().Giuong == null ? "" : phieuxn.giuongs = ketqua.FirstOrDefault().Giuong.ToString();
                if (ketquacanlamsan.Count > 0)
                {
                    if (DungChung.Bien.MaBV == "27023")
                    {
                        foreach (var item in ketquacanlamsan)
                        {
                            //if (string.IsNullOrEmpty(item.KetQua))
                            //{
                            //    MessageBox.Show("Không thể xem vì chưa có kết quả");
                            //    return false;
                            //}
                        }
                    }
                    phieuxn.txtBenhPham.Text = ketquacanlamsan.FirstOrDefault().BenhPham;
                }
                if (DungChung.Bien.MaBV == "27023")
                    phieuxn.socds = so;
                else if (DungChung.Bien.MaBV == "20001")
                {
                    var qvv = _data.VaoViens.Where(p => p.MaBNhan == mabenhnhan).FirstOrDefault();
                    if (qvv != null)
                        phieuxn.socds = qvv.SoVV;
                    else
                        phieuxn.socds = "";


                }
                else
                    phieuxn.socds = idcls.ToString();
                // so hien thi 
                if (dichvict.Where(p => p.STT == 1).Count() > 0) { phieuxn.so1s = dichvict.Where(p => p.STT == 1).FirstOrDefault().TenDVct == null ? "" : phieuxn.so1s = dichvict.Where(p => p.STT == 1).FirstOrDefault().TenDVct.ToString(); }
                if (dichvict.Where(p => p.STT == 2).Count() > 0) { phieuxn.so2s = dichvict.Where(p => p.STT == 2).FirstOrDefault().TenDVct == null ? "" : phieuxn.so2s = dichvict.Where(p => p.STT == 2).FirstOrDefault().TenDVct.ToString(); }
                if (dichvict.Where(p => p.STT == 3).Count() > 0) { phieuxn.so3s = dichvict.Where(p => p.STT == 3).FirstOrDefault().TenDVct == null ? "" : phieuxn.so3s = dichvict.Where(p => p.STT == 3).FirstOrDefault().TenDVct.ToString(); }
                if (dichvict.Where(p => p.STT == 4).Count() > 0) { phieuxn.so4s = dichvict.Where(p => p.STT == 4).FirstOrDefault().TenDVct == null ? "" : phieuxn.so4s = dichvict.Where(p => p.STT == 4).FirstOrDefault().TenDVct.ToString(); }
                if (dichvict.Where(p => p.STT == 5).Count() > 0) { phieuxn.so5s = dichvict.Where(p => p.STT == 5).FirstOrDefault().TenDVct == null ? "" : phieuxn.so5s = dichvict.Where(p => p.STT == 5).FirstOrDefault().TenDVct.ToString(); }
                if (dichvict.Where(p => p.STT == 6).Count() > 0) { phieuxn.so6s = dichvict.Where(p => p.STT == 6).FirstOrDefault().TenDVct == null ? "" : phieuxn.so6s = dichvict.Where(p => p.STT == 6).FirstOrDefault().TenDVct.ToString(); }
                if (dichvict.Where(p => p.STT == 7).Count() > 0) { phieuxn.so7s = dichvict.Where(p => p.STT == 7).FirstOrDefault().TenDVct == null ? "" : phieuxn.so7s = dichvict.Where(p => p.STT == 7).FirstOrDefault().TenDVct.ToString(); }
                if (dichvict.Where(p => p.STT == 8).Count() > 0) { phieuxn.so8s = dichvict.Where(p => p.STT == 8).FirstOrDefault().TenDVct == null ? "" : phieuxn.so8s = dichvict.Where(p => p.STT == 8).FirstOrDefault().TenDVct.ToString(); }
                if (dichvict.Where(p => p.STT == 9).Count() > 0) { phieuxn.so9s = dichvict.Where(p => p.STT == 9).FirstOrDefault().TenDVct == null ? "" : phieuxn.so9s = dichvict.Where(p => p.STT == 9).FirstOrDefault().TenDVct.ToString(); }
                if (dichvict.Where(p => p.STT == 10).Count() > 0) { phieuxn.so10s = dichvict.Where(p => p.STT == 10).FirstOrDefault().TenDVct == null ? "" : phieuxn.so10s = dichvict.Where(p => p.STT == 10).FirstOrDefault().TenDVct.ToString(); }
                if (dichvict.Where(p => p.STT == 11).Count() > 0) { phieuxn.so11s = dichvict.Where(p => p.STT == 11).FirstOrDefault().TenDVct == null ? "" : phieuxn.so11s = dichvict.Where(p => p.STT == 11).FirstOrDefault().TenDVct.ToString(); }
                if (dichvict.Where(p => p.STT == 12).Count() > 0) { phieuxn.so12s = dichvict.Where(p => p.STT == 12).FirstOrDefault().TenDVct == null ? "" : phieuxn.so12s = dichvict.Where(p => p.STT == 12).FirstOrDefault().TenDVct.ToString(); }
                if (dichvict.Where(p => p.STT == 13).Count() > 0) { phieuxn.so13s = dichvict.Where(p => p.STT == 13).FirstOrDefault().TenDVct == null ? "" : phieuxn.so13s = dichvict.Where(p => p.STT == 13).FirstOrDefault().TenDVct.ToString(); }
                if (dichvict.Where(p => p.STT == 14).Count() > 0) { phieuxn.so14s = dichvict.Where(p => p.STT == 14).FirstOrDefault().TenDVct == null ? "" : phieuxn.so14s = dichvict.Where(p => p.STT == 14).FirstOrDefault().TenDVct.ToString(); }
                if (dichvict.Where(p => p.STT == 15).Count() > 0) { phieuxn.so15s = dichvict.Where(p => p.STT == 15).FirstOrDefault().TenDVct == null ? "" : phieuxn.so15s = dichvict.Where(p => p.STT == 15).FirstOrDefault().TenDVct.ToString(); }
                if (dichvict.Where(p => p.STT == 16).Count() > 0) { phieuxn.so16s = dichvict.Where(p => p.STT == 16).FirstOrDefault().TenDVct == null ? "" : phieuxn.so16s = dichvict.Where(p => p.STT == 16).FirstOrDefault().TenDVct.ToString(); }
                if (ketquacanlamsan.Where(p => p.STT == 1).Count() > 0) { phieuxn.ketquas1 = ketquacanlamsan.Where(p => p.STT == 1).FirstOrDefault().KetQua == null ? "" : phieuxn.ketquas1 = ketquacanlamsan.Where(p => p.STT == 1).FirstOrDefault().KetQua.ToString(); }
                if (ketquacanlamsan.Where(p => p.STT == 2).Count() > 0) { phieuxn.ketquas2 = ketquacanlamsan.Where(p => p.STT == 2).FirstOrDefault().KetQua == null ? "" : phieuxn.ketquas2 = ketquacanlamsan.Where(p => p.STT == 2).FirstOrDefault().KetQua.ToString(); }
                if (ketquacanlamsan.Where(p => p.STT == 3).Count() > 0) { phieuxn.ketquas3 = ketquacanlamsan.Where(p => p.STT == 3).FirstOrDefault().KetQua == null ? "" : phieuxn.ketquas3 = ketquacanlamsan.Where(p => p.STT == 3).FirstOrDefault().KetQua.ToString(); }
                if (ketquacanlamsan.Where(p => p.STT == 4).Count() > 0) { phieuxn.ketquas4 = ketquacanlamsan.Where(p => p.STT == 4).FirstOrDefault().KetQua == null ? "" : phieuxn.ketquas4 = ketquacanlamsan.Where(p => p.STT == 4).FirstOrDefault().KetQua.ToString(); }
                if (ketquacanlamsan.Where(p => p.STT == 5).Count() > 0) { phieuxn.ketquas5 = ketquacanlamsan.Where(p => p.STT == 5).FirstOrDefault().KetQua == null ? "" : phieuxn.ketquas5 = ketquacanlamsan.Where(p => p.STT == 5).FirstOrDefault().KetQua.ToString(); }
                if (ketquacanlamsan.Where(p => p.STT == 6).Count() > 0) { phieuxn.ketquas6 = ketquacanlamsan.Where(p => p.STT == 6).FirstOrDefault().KetQua == null ? "" : phieuxn.ketquas6 = ketquacanlamsan.Where(p => p.STT == 6).FirstOrDefault().KetQua.ToString(); }
                if (ketquacanlamsan.Where(p => p.STT == 7).Count() > 0) { phieuxn.ketquas7 = ketquacanlamsan.Where(p => p.STT == 7).FirstOrDefault().KetQua == null ? "" : phieuxn.ketquas7 = ketquacanlamsan.Where(p => p.STT == 7).FirstOrDefault().KetQua.ToString(); }
                if (ketquacanlamsan.Where(p => p.STT == 8).Count() > 0) { phieuxn.ketquas8 = ketquacanlamsan.Where(p => p.STT == 8).FirstOrDefault().KetQua == null ? "" : phieuxn.ketquas8 = ketquacanlamsan.Where(p => p.STT == 8).FirstOrDefault().KetQua.ToString(); }
                if (ketquacanlamsan.Where(p => p.STT == 9).Count() > 0) { phieuxn.ketquas9 = ketquacanlamsan.Where(p => p.STT == 9).FirstOrDefault().KetQua == null ? "" : phieuxn.ketquas9 = ketquacanlamsan.Where(p => p.STT == 9).FirstOrDefault().KetQua.ToString(); }
                if (ketquacanlamsan.Where(p => p.STT == 10).Count() > 0) { phieuxn.ketquas10 = ketquacanlamsan.Where(p => p.STT == 10).FirstOrDefault().KetQua == null ? "" : phieuxn.ketquas10 = ketquacanlamsan.Where(p => p.STT == 10).FirstOrDefault().KetQua.ToString(); }
                if (ketquacanlamsan.Where(p => p.STT == 11).Count() > 0) { phieuxn.ketquas11 = ketquacanlamsan.Where(p => p.STT == 11).FirstOrDefault().KetQua == null ? "" : phieuxn.ketquas11 = ketquacanlamsan.Where(p => p.STT == 11).FirstOrDefault().KetQua.ToString(); }
                if (ketquacanlamsan.Where(p => p.STT == 12).Count() > 0) { phieuxn.ketquas12 = ketquacanlamsan.Where(p => p.STT == 12).FirstOrDefault().KetQua == null ? "" : phieuxn.ketquas12 = ketquacanlamsan.Where(p => p.STT == 12).FirstOrDefault().KetQua.ToString(); }
                if (ketquacanlamsan.Where(p => p.STT == 13).Count() > 0) { phieuxn.ketquas13 = ketquacanlamsan.Where(p => p.STT == 13).FirstOrDefault().KetQua == null ? "" : phieuxn.ketquas13 = ketquacanlamsan.Where(p => p.STT == 13).FirstOrDefault().KetQua.ToString(); }
                if (ketquacanlamsan.Where(p => p.STT == 14).Count() > 0) { phieuxn.ketquas14 = ketquacanlamsan.Where(p => p.STT == 14).FirstOrDefault().KetQua == null ? "" : phieuxn.ketquas14 = ketquacanlamsan.Where(p => p.STT == 14).FirstOrDefault().KetQua.ToString(); }
                if (ketquacanlamsan.Where(p => p.STT == 15).Count() > 0) { phieuxn.ketquas15 = ketquacanlamsan.Where(p => p.STT == 15).FirstOrDefault().KetQua == null ? "" : phieuxn.ketquas15 = ketquacanlamsan.Where(p => p.STT == 15).FirstOrDefault().KetQua.ToString(); }
                if (ketquacanlamsan.Where(p => p.STT == 16).Count() > 0) { phieuxn.ketquas16 = ketquacanlamsan.Where(p => p.STT == 16).FirstOrDefault().KetQua == null ? "" : phieuxn.ketquas16 = ketquacanlamsan.Where(p => p.STT == 16).FirstOrDefault().KetQua.ToString(); }
                phieuxn.binhdinh();
                phieuxn.CreateDocument();
                frmIn inphieu = new frmIn();
                inphieu.prcIN.PrintingSystem = phieuxn.PrintingSystem;
                inphieu.ShowDialog();
                return true;

            }
            catch (Exception)
            {
                return false;
            }
        }
        #endregion
        #region In phiếu xét nghiệm vi sinh
        public static bool _In_XNViSinh(QLBV_Database.QLBVEntities _Data, int idcls, int _Mabn, string so)
        {
            try
            {
                frmIn frmcd = new frmIn();
                #region 30299
                if (DungChung.Bien.MaBV == "30299")
                {

                    var qdv = (from tn in _Data.TieuNhomDVs.Where(p => p.TenRG == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.XNViSinh || (p.TenRG == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.XNDom))
                               join dv in _Data.DichVus.Where(p => p.Status == 1) on tn.IdTieuNhom equals dv.IdTieuNhom
                               select new { dv.MaDV, dv.TenDV, dv.SoTT, tn.TenRG, dv.MaQD }).ToList();
                    var qcls0 = (from cls in _Data.CLS.Where(p => p.IdCLS == idcls)
                                 join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                 join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                 select new { cd.MaDV, cls.TrangThaiBP, cls.Status, KetQua = clsct.KetQua }).ToList();
                    var qcls = (from cls in qcls0
                                group new { cls } by new { cls.MaDV, cls.TrangThaiBP, cls.Status } into kq
                                select new { kq.Key.MaDV, kq.Key.Status, kq.Key.TrangThaiBP, KQ = String.Join(";", kq.Where(p => !string.IsNullOrEmpty(p.cls.KetQua)).Select(p => p.cls.KetQua)) }).ToList();

                    if (qcls.Count > 0 && qcls.FirstOrDefault().Status == 1)
                    {
                        string trangthaibp = "";
                        trangthaibp = qcls.FirstOrDefault().TrangThaiBP;

                        frm_MauSo frmMau = new frm_MauSo("", trangthaibp, idcls);
                        frmMau.ShowDialog();
                    }
                    BaoCao.Rep_PhieuXNViSinh_30299 repcd = new BaoCao.Rep_PhieuXNViSinh_30299();
                    int _makpcd = 0;
                    //repcd.MaBNhan.Value = _Mabn;
                    //repcd.Status.Value = DungChung.Bien.InPhoi;


                    repcd.SoPhieu.Value = idcls;
                    var parcd = (from bn in _Data.BenhNhans
                                 join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                 join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                 select new { cls.MaKP, cls.NgayTH, cls.NgayThang, cls.TrangThaiBP, cls.CapCuu, kp.TenKP, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, cls.MaCBth }).ToList();
                    if (parcd.Count > 0)
                    {
                        _makpcd = parcd.FirstOrDefault().MaKP == null ? 0 : parcd.FirstOrDefault().MaKP.Value;
                        repcd.Macb.Value = parcd.FirstOrDefault().MaCBth;
                        repcd.Khoa.Value = parcd.FirstOrDefault().TenKP;
                        repcd.MaCBDT.Value = parcd.FirstOrDefault().MaCB;
                        repcd.DiaChi.Value = parcd.FirstOrDefault().DChi;
                        repcd.txtMaBnhan.Text = parcd.FirstOrDefault().MaBNhan.ToString();
                        repcd.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                        repcd.TenBNhan.Value = parcd.FirstOrDefault().TenBNhan.ToUpper();
                        int mabn = parcd.FirstOrDefault().MaBNhan;
                        var qttbx = _Data.TTboXungs.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                        if (qttbx != null)
                        { repcd.txtSoDT.Text = qttbx.DThoai; }

                        if (!string.IsNullOrEmpty(parcd.FirstOrDefault().TrangThaiBP))
                            repcd.TrangThaiBP.Value = "2. Bệnh phẩm: " + parcd.FirstOrDefault().TrangThaiBP;
                        else
                            repcd.TrangThaiBP.Value = "2. Bệnh phẩm: ";
                        int gioiTinh = int.Parse(parcd.FirstOrDefault().GTinh.ToString());
                        if (gioiTinh == 1)
                        {
                            repcd.Nu.Value = "/";
                        }
                        else if (gioiTinh == 0)
                        {
                            repcd.Nam.Value = "/";
                        }
                        if (parcd.FirstOrDefault().SThe != null && parcd.FirstOrDefault().SThe.Length >= 15)
                        {
                            repcd.SThe1.Value = parcd.FirstOrDefault().SThe.Substring(0, 3);
                            repcd.SThe2.Value = parcd.FirstOrDefault().SThe.Substring(3, 2);
                            repcd.SThe3.Value = parcd.FirstOrDefault().SThe.Substring(5, 2);
                            repcd.SThe4.Value = parcd.FirstOrDefault().SThe.Substring(7, 3);
                            repcd.SThe5.Value = parcd.FirstOrDefault().SThe.Substring(10, 5);
                        }
                        bool capcuu = parcd.FirstOrDefault().CapCuu;
                        if (capcuu)
                        {
                            repcd.CapCuu.Value = "X";
                        }
                        else repcd.Thuong.Value = "X";
                        if (parcd.FirstOrDefault().NgayTH != null)
                            repcd.NgayTH.Value = DungChung.Ham.NgaySangChu(parcd.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                        else
                            repcd.NgayTH.Value = ".... giờ, ngày ..... tháng ..... năm .....";
                        if (parcd.FirstOrDefault().NgayThang != null)
                            repcd.NgayCD.Value = DungChung.Ham.NgaySangChu(parcd.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                    }
                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makpcd, true);
                    repcd.ChanDoan.Value = arrThongTinBNKB[1];
                    repcd.Buong.Value = arrThongTinBNKB[2];
                    repcd.Giuong.Value = arrThongTinBNKB[3];
                    repcd.Khoa.Value = arrThongTinBNKB[4];


                    List<XNVS> list = new List<XNVS>();
                    foreach (var dv in qdv)
                    {

                        if (dv.TenRG == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.XNViSinh)
                        {
                            XNVS moi = new XNVS();
                            moi.MaDV = dv.MaDV;
                            moi.TenDV = dv.TenDV;
                            moi.TenRG = dv.TenRG;
                            moi.MaQD = dv.MaQD;
                            if (dv.SoTT == 9)
                                moi.STT = 11;
                            else if (dv.SoTT == null || dv.SoTT == 0)
                                moi.STT = 1000;
                            else
                                moi.STT = dv.SoTT.Value;
                            list.Add(moi);
                        }

                        if (dv.TenRG == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.XNDom)
                        {
                            XNVS moi = new XNVS();
                            moi.MaDV = dv.MaDV;
                            moi.TenDV = dv.TenDV;
                            moi.TenRG = dv.TenRG;
                            moi.MaQD = dv.MaQD;
                            if (dv.SoTT == null)
                                moi.STT = 0;
                            else if (dv.SoTT == 1)
                                moi.STT = 9;
                            else if (dv.SoTT == 2)
                                moi.STT = 10;
                            else if (dv.SoTT == 4)
                                moi.STT = 12;
                            else if (dv.SoTT == 3)
                                moi.STT = 13;
                            else if (dv.SoTT == 6)
                                moi.STT = 14;
                            else moi.STT = 100;
                            if (moi.STT != 100)
                                list.Add(moi);
                        }
                    }
                    foreach (var dv in list)
                    {

                        var qkq = qcls.Where(p => p.MaDV == dv.MaDV).FirstOrDefault();
                        if (qkq != null)
                        {
                            dv.MaCC = "x";
                            dv.TenRG = qkq.KQ;
                        }
                        else
                        {
                            dv.MaCC = "";
                            dv.TenRG = "";
                        }
                    }

                    repcd.DataSource = list.OrderBy(p => p.STT).ToList();
                    repcd.databinding();
                    repcd.CreateDocument();
                    frmcd.prcIN.PrintingSystem = repcd.PrintingSystem;
                    frmcd.ShowDialog();
                    return true;

                }
                #endregion
                #region 27023
                else if (DungChung.Bien.MaBV == "27023")
                {
                    BaoCao.rep_Phieuxetnghiemvisinh rep = new BaoCao.rep_Phieuxetnghiemvisinh();
                    frmIn frm = new frmIn();
                    var qhhh = (from cls in _Data.CLS.Where(p => p.IdCLS == idcls)
                                join chidinh in _Data.ChiDinhs on cls.IdCLS equals chidinh.IdCLS
                                join dichvu in _Data.DichVus on chidinh.MaDV equals dichvu.MaDV
                                join tn in _Data.TieuNhomDVs on dichvu.IdTieuNhom equals tn.IdTieuNhom
                                join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                                join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                select new { KetQuact = dvct.KetQua, clsct.MaDVct, clsct.KetQua, dvct.STT, dvct.TSnTu, dvct.TSnDen, dvct.TSnuTu, dvct.TSnuDen, chidinh.MaDV }).ToList();


                    if (DungChung.Bien.MaBV == "27023")
                    {
                        if (qhhh.Count() > 0)
                        {
                            foreach (var item in qhhh)
                            {
                                if (string.IsNullOrEmpty(item.KetQua))
                                {
                                    MessageBox.Show("Không thể xem vì chưa có kết quả");
                                    return false;
                                }
                            }
                        }
                    }
                    rep.bindingData(idcls);
                    rep.CreateDocument();
                    frm.prcIN.PrintingSystem = rep.PrintingSystem;
                    frm.ShowDialog();
                    return true;
                }
                #endregion
                #region bv kjhacs
                else
                {
                    BaoCao.Rep_PhieuXNViSinh repcd = new BaoCao.Rep_PhieuXNViSinh();
                    int _makpcd = 0;
                    //repcd.MaBNhan.Value = _Mabn;
                    //repcd.Status.Value = DungChung.Bien.InPhoi;
                    repcd.colMaBN.Text = _Mabn.ToString();
                    repcd.SoPhieu.Value = idcls;
                    var parcd = (from bn in _Data.BenhNhans
                                 join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                 join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                 select new
                                 {
                                     cls.MaKP,
                                     cls.NgayTH,
                                     cls.NgayThang,
                                     cls.CapCuu,
                                     kp.TenKP,
                                     bn.TenBNhan,
                                     bn.MaBNhan,
                                     bn.NoiTru,
                                     bn.DTNT,
                                     bn.DChi,
                                     bn.GTinh,
                                     bn.Tuoi,
                                     bn.SThe,
                                     cls.MaCB,
                                     cls.MaCBth,
                                     cls.Status,
                                     cls.MaKPth
                                 }).ToList();
                    if (DungChung.Bien.MaBV == "27023")
                    {

                        repcd.So.Value = so;

                    }
                    else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                    {
                        if (parcd.Count > 0)
                        {
                            var qvv = _Data.VaoViens.Where(p => p.MaBNhan == parcd.FirstOrDefault().MaBNhan).FirstOrDefault();
                            if (qvv != null)
                                repcd.So.Value = qvv.SoVV;
                            else
                                repcd.So.Value = "";
                        }
                    }
                    else
                        repcd.So.Value = idcls;

                    if (parcd.Count > 0)
                    {
                        if (DungChung.Bien.MaBV == "12122")
                        {
                            if (parcd.FirstOrDefault().Status == 0)
                            {
                                repcd.lab113.Visible = false;
                                repcd.xrLabel8.Visible = false;
                                //repcd.colTenTKXN.Visible = false;
                            }
                            else
                            {
                                repcd.xrLabel6.Visible = false;
                                repcd.xrLabel5.Visible = false;
                                repcd.xrLabel4.Visible = false;
                            }
                        }
                        _makpcd = parcd.FirstOrDefault().MaKP == null ? 0 : parcd.FirstOrDefault().MaKP.Value;
                        repcd.Macb.Value = parcd.FirstOrDefault().MaCBth;
                        repcd.Khoa.Value = parcd.FirstOrDefault().TenKP;
                        repcd.MaCBDT.Value = parcd.FirstOrDefault().MaCB;
                        repcd.DiaChi.Value = parcd.FirstOrDefault().DChi;
                        repcd.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                        repcd.TenBNhan.Value = parcd.FirstOrDefault().TenBNhan.ToUpper();
                        int gioiTinh = int.Parse(parcd.FirstOrDefault().GTinh.ToString());
                        if (gioiTinh == 1)
                        {
                            repcd.Nu.Value = "/";
                        }
                        else if (gioiTinh == 0)
                        {
                            repcd.Nam.Value = "/";
                        }
                        if (parcd.FirstOrDefault().SThe != null && parcd.FirstOrDefault().SThe.Length >= 15)
                        {
                            repcd.SThe1.Value = parcd.FirstOrDefault().SThe.Substring(0, 3);
                            repcd.SThe2.Value = parcd.FirstOrDefault().SThe.Substring(3, 2);
                            repcd.SThe3.Value = parcd.FirstOrDefault().SThe.Substring(5, 2);
                            repcd.SThe4.Value = parcd.FirstOrDefault().SThe.Substring(7, 3);
                            repcd.SThe5.Value = parcd.FirstOrDefault().SThe.Substring(10, 5);
                        }
                        bool capcuu = parcd.FirstOrDefault().CapCuu;
                        if (capcuu)
                        {
                            repcd.CapCuu.Value = "X";
                        }
                        else repcd.Thuong.Value = "X";
                        if (parcd.FirstOrDefault().NgayTH != null)
                            repcd.NgayTH.Value = DungChung.Ham.NgaySangChu(parcd.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                        else
                            repcd.NgayTH.Value = ".... giờ, ngày ..... tháng ..... năm .....";
                        if (parcd.FirstOrDefault().NgayThang != null)
                            repcd.NgayCD.Value = DungChung.Ham.NgaySangChu(parcd.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                    }
                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makpcd, true);
                    repcd.ChanDoan.Value = arrThongTinBNKB[1];
                    repcd.Buong.Value = arrThongTinBNKB[2];
                    repcd.Giuong.Value = arrThongTinBNKB[3];
                    repcd.Khoa.Value = arrThongTinBNKB[4];
                    if (DungChung.Bien.MaBV == "30010")
                    {
                        int mkpth = Convert.ToInt32(parcd.FirstOrDefault().MaKPth.Value);
                        repcd.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                    }//yenbg1
                    repcd.CreateDocument();
                    frmcd.prcIN.PrintingSystem = repcd.PrintingSystem;
                    frmcd.ShowDialog();
                    return true;
                }
                #endregion
            }
            catch (Exception)
            {
                return false;
            }

        }

        public static bool _In_XNViSinh(QLBV_Database.QLBVEntities _Data, int idcls, int _Mabn, string so, List<int> _lIdCLS, List<int?> _lMaDV)
        {
            try
            {
                frmIn frmcd = new frmIn();
                #region 30299
                if (DungChung.Bien.MaBV == "30299")
                {

                    var qdv = (from tn in _Data.TieuNhomDVs.Where(p => p.TenRG == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.XNViSinh || (p.TenRG == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.XNDom))
                               join dv in _Data.DichVus.Where(p => p.Status == 1) on tn.IdTieuNhom equals dv.IdTieuNhom
                               select new { dv.MaDV, dv.TenDV, dv.SoTT, tn.TenRG, dv.MaQD }).ToList();
                    var qcls0 = (from cls in _Data.CLS.Where(p => p.IdCLS == idcls)
                                 join cd in _Data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                 join clsct in _Data.CLScts on cd.IDCD equals clsct.IDCD
                                 select new { cd.MaDV, cls.TrangThaiBP, cls.Status, KetQua = clsct.KetQua }).ToList();
                    var qcls = (from cls in qcls0
                                group new { cls } by new { cls.MaDV, cls.TrangThaiBP, cls.Status } into kq
                                select new { kq.Key.MaDV, kq.Key.Status, kq.Key.TrangThaiBP, KQ = String.Join(";", kq.Where(p => !string.IsNullOrEmpty(p.cls.KetQua)).Select(p => p.cls.KetQua)) }).ToList();

                    if (qcls.Count > 0 && qcls.FirstOrDefault().Status == 1)
                    {
                        string trangthaibp = "";
                        trangthaibp = qcls.FirstOrDefault().TrangThaiBP;

                        frm_MauSo frmMau = new frm_MauSo("", trangthaibp, idcls);
                        frmMau.ShowDialog();
                    }
                    BaoCao.Rep_PhieuXNViSinh_30299 repcd = new BaoCao.Rep_PhieuXNViSinh_30299();
                    int _makpcd = 0;
                    //repcd.MaBNhan.Value = _Mabn;
                    //repcd.Status.Value = DungChung.Bien.InPhoi;


                    repcd.SoPhieu.Value = idcls;
                    var parcd = (from bn in _Data.BenhNhans
                                 join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                 join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                 select new { cls.MaKP, cls.NgayTH, cls.NgayThang, cls.TrangThaiBP, cls.CapCuu, kp.TenKP, bn.TenBNhan, bn.MaBNhan, bn.DChi, bn.GTinh, bn.Tuoi, bn.SThe, cls.MaCB, cls.MaCBth }).ToList();
                    if (parcd.Count > 0)
                    {
                        _makpcd = parcd.FirstOrDefault().MaKP == null ? 0 : parcd.FirstOrDefault().MaKP.Value;
                        repcd.Macb.Value = parcd.FirstOrDefault().MaCBth;
                        repcd.Khoa.Value = parcd.FirstOrDefault().TenKP;
                        repcd.MaCBDT.Value = parcd.FirstOrDefault().MaCB;
                        repcd.DiaChi.Value = parcd.FirstOrDefault().DChi;
                        repcd.txtMaBnhan.Text = parcd.FirstOrDefault().MaBNhan.ToString();
                        repcd.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                        repcd.TenBNhan.Value = parcd.FirstOrDefault().TenBNhan.ToUpper();
                        int mabn = parcd.FirstOrDefault().MaBNhan;
                        var qttbx = _Data.TTboXungs.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                        if (qttbx != null)
                        { repcd.txtSoDT.Text = qttbx.DThoai; }

                        if (!string.IsNullOrEmpty(parcd.FirstOrDefault().TrangThaiBP))
                            repcd.TrangThaiBP.Value = "2. Bệnh phẩm: " + parcd.FirstOrDefault().TrangThaiBP;
                        else
                            repcd.TrangThaiBP.Value = "2. Bệnh phẩm: ";
                        int gioiTinh = int.Parse(parcd.FirstOrDefault().GTinh.ToString());
                        if (gioiTinh == 1)
                        {
                            repcd.Nu.Value = "/";
                        }
                        else if (gioiTinh == 0)
                        {
                            repcd.Nam.Value = "/";
                        }
                        if (parcd.FirstOrDefault().SThe != null && parcd.FirstOrDefault().SThe.Length >= 15)
                        {
                            repcd.SThe1.Value = parcd.FirstOrDefault().SThe.Substring(0, 3);
                            repcd.SThe2.Value = parcd.FirstOrDefault().SThe.Substring(3, 2);
                            repcd.SThe3.Value = parcd.FirstOrDefault().SThe.Substring(5, 2);
                            repcd.SThe4.Value = parcd.FirstOrDefault().SThe.Substring(7, 3);
                            repcd.SThe5.Value = parcd.FirstOrDefault().SThe.Substring(10, 5);
                        }
                        bool capcuu = parcd.FirstOrDefault().CapCuu;
                        if (capcuu)
                        {
                            repcd.CapCuu.Value = "X";
                        }
                        else repcd.Thuong.Value = "X";
                        if (parcd.FirstOrDefault().NgayTH != null)
                            repcd.NgayTH.Value = DungChung.Ham.NgaySangChu(parcd.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                        else
                            repcd.NgayTH.Value = ".... giờ, ngày ..... tháng ..... năm .....";
                        if (parcd.FirstOrDefault().NgayThang != null)
                            repcd.NgayCD.Value = DungChung.Ham.NgaySangChu(parcd.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                    }
                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makpcd, true);
                    repcd.ChanDoan.Value = arrThongTinBNKB[1];
                    repcd.Buong.Value = arrThongTinBNKB[2];
                    repcd.Giuong.Value = arrThongTinBNKB[3];
                    repcd.Khoa.Value = arrThongTinBNKB[4];


                    List<XNVS> list = new List<XNVS>();
                    foreach (var dv in qdv)
                    {

                        if (dv.TenRG == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.XNViSinh)
                        {
                            XNVS moi = new XNVS();
                            moi.MaDV = dv.MaDV;
                            moi.TenDV = dv.TenDV;
                            moi.TenRG = dv.TenRG;
                            moi.MaQD = dv.MaQD;
                            if (dv.SoTT == 9)
                                moi.STT = 11;
                            else if (dv.SoTT == null || dv.SoTT == 0)
                                moi.STT = 1000;
                            else
                                moi.STT = dv.SoTT.Value;
                            list.Add(moi);
                        }

                        if (dv.TenRG == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.XNDom)
                        {
                            XNVS moi = new XNVS();
                            moi.MaDV = dv.MaDV;
                            moi.TenDV = dv.TenDV;
                            moi.TenRG = dv.TenRG;
                            moi.MaQD = dv.MaQD;
                            if (dv.SoTT == null)
                                moi.STT = 0;
                            else if (dv.SoTT == 1)
                                moi.STT = 9;
                            else if (dv.SoTT == 2)
                                moi.STT = 10;
                            else if (dv.SoTT == 4)
                                moi.STT = 12;
                            else if (dv.SoTT == 3)
                                moi.STT = 13;
                            else if (dv.SoTT == 6)
                                moi.STT = 14;
                            else moi.STT = 100;
                            if (moi.STT != 100)
                                list.Add(moi);
                        }
                    }
                    foreach (var dv in list)
                    {

                        var qkq = qcls.Where(p => p.MaDV == dv.MaDV).FirstOrDefault();
                        if (qkq != null)
                        {
                            dv.MaCC = "x";
                            dv.TenRG = qkq.KQ;
                        }
                        else
                        {
                            dv.MaCC = "";
                            dv.TenRG = "";
                        }
                    }

                    repcd.DataSource = list.OrderBy(p => p.STT).ToList();
                    repcd.databinding();
                    repcd.CreateDocument();
                    frmcd.prcIN.PrintingSystem = repcd.PrintingSystem;
                    frmcd.ShowDialog();
                    return true;

                }
                #endregion
                #region 27023
                else if (DungChung.Bien.MaBV == "27023")
                {
                    BaoCao.rep_Phieuxetnghiemvisinh rep = new BaoCao.rep_Phieuxetnghiemvisinh();
                    frmIn frm = new frmIn();
                    rep.bindingData(idcls);
                    rep.CreateDocument();
                    frm.prcIN.PrintingSystem = rep.PrintingSystem;
                    frm.ShowDialog();
                    return true;
                }
                #endregion
                #region bv khác
                else
                {
                    BaoCao.Rep_PhieuXNViSinh repcd = new BaoCao.Rep_PhieuXNViSinh(_lIdCLS, _lMaDV);
                    int _makpcd = 0;
                    //repcd.MaBNhan.Value = _Mabn;
                    //repcd.Status.Value = DungChung.Bien.InPhoi;
                    repcd.colMaBN.Text = _Mabn.ToString();
                    repcd.SoPhieu.Value = idcls;
                    var parcd = (from bn in _Data.BenhNhans.Where(x => x.MaBNhan == _Mabn)
                                 join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                 join kp in _Data.KPhongs on cls.MaKP equals kp.MaKP
                                 join bnkb in _Data.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                                 select new
                                 {
                                     cls.MaKP,
                                     cls.NgayTH,
                                     cls.NgayThang,
                                     cls.CapCuu,
                                     kp.TenKP,
                                     bn.TenBNhan,
                                     bn.MaBNhan,
                                     bn.NoiTru,
                                     bn.DTNT,
                                     bn.DChi,
                                     bn.GTinh,
                                     bn.Tuoi,
                                     bn.SThe,
                                     cls.MaCB,
                                     cls.MaCBth,
                                     cls.Status,
                                     cls.MaKPth,
                                     bnkb.ChanDoanBD
                                 }).ToList();
                    if (DungChung.Bien.MaBV == "24012")
                    {
                        repcd.xrLabel49.Visible = true;
                        repcd.Parameters["MaICD"].Value = arrThongTinBNKB[0];
                    }
                    if (DungChung.Bien.MaBV == "27023")
                    {

                        repcd.So.Value = so;

                    }
                    else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
                    {
                        if (parcd.Count > 0)
                        {
                            var qvv = _Data.VaoViens.Where(p => p.MaBNhan == parcd.FirstOrDefault().MaBNhan).FirstOrDefault();
                            if (qvv != null)
                                repcd.So.Value = qvv.SoVV;
                            else
                                repcd.So.Value = "";
                        }
                    }
                    else
                        repcd.So.Value = idcls;

                    if (parcd.Count > 0)
                    {
                        if (DungChung.Bien.MaBV == "12122")
                        {
                            if (parcd.FirstOrDefault().Status == 0)
                            {
                                repcd.lab113.Visible = false;
                                repcd.xrLabel8.Visible = false;
                                //repcd.colTenTKXN.Visible = false;
                            }
                            else
                            {
                                repcd.xrLabel6.Visible = false;
                                repcd.xrLabel5.Visible = false;
                                repcd.xrLabel4.Visible = false;
                            }
                        }
                        _makpcd = parcd.FirstOrDefault().MaKP == null ? 0 : parcd.FirstOrDefault().MaKP.Value;
                        repcd.Macb.Value = parcd.FirstOrDefault().MaCBth;
                        repcd.Khoa.Value = parcd.FirstOrDefault().TenKP;
                        repcd.MaCBDT.Value = parcd.FirstOrDefault().MaCB;
                        repcd.DiaChi.Value = parcd.FirstOrDefault().DChi;
                        repcd.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                        repcd.TenBNhan.Value = parcd.FirstOrDefault().TenBNhan.ToUpper();
                        int gioiTinh = int.Parse(parcd.FirstOrDefault().GTinh.ToString());
                        if (gioiTinh == 1)
                        {
                            repcd.Nu.Value = "/";
                        }
                        else if (gioiTinh == 0)
                        {
                            repcd.Nam.Value = "/";
                        }
                        if (parcd.FirstOrDefault().SThe != null && parcd.FirstOrDefault().SThe.Length >= 15)
                        {
                            repcd.SThe1.Value = parcd.FirstOrDefault().SThe.Substring(0, 3);
                            repcd.SThe2.Value = parcd.FirstOrDefault().SThe.Substring(3, 2);
                            repcd.SThe3.Value = parcd.FirstOrDefault().SThe.Substring(5, 2);
                            repcd.SThe4.Value = parcd.FirstOrDefault().SThe.Substring(7, 3);
                            repcd.SThe5.Value = parcd.FirstOrDefault().SThe.Substring(10, 5);
                        }
                        bool capcuu = parcd.FirstOrDefault().CapCuu;
                        if (capcuu)
                        {
                            repcd.CapCuu.Value = "X";
                        }
                        else repcd.Thuong.Value = "X";
                        if (parcd.FirstOrDefault().NgayTH != null)
                            repcd.NgayTH.Value = DungChung.Ham.NgaySangChu(parcd.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                        else
                            repcd.NgayTH.Value = ".... giờ, ngày ..... tháng ..... năm .....";
                        if (parcd.FirstOrDefault().NgayThang != null)
                            repcd.NgayCD.Value = DungChung.Ham.NgaySangChu(parcd.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
                    }
                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makpcd, true);
                    repcd.ChanDoan.Value = (parcd.FirstOrDefault().ChanDoanBD != null || parcd.FirstOrDefault().ChanDoanBD != "") && DungChung.Bien.MaBV == "24272" ? parcd.FirstOrDefault().ChanDoanBD + ";" : "";
                    if (DungChung.Bien.MaBV != "24272")
                    {
                        repcd.ChanDoan.Value += arrThongTinBNKB[1];
                    }

                    repcd.Buong.Value = arrThongTinBNKB[2];
                    repcd.Giuong.Value = arrThongTinBNKB[3];
                    repcd.Khoa.Value = arrThongTinBNKB[4];
                    if (DungChung.Bien.MaBV == "30010")
                    {
                        int mkpth = Convert.ToInt32(parcd.FirstOrDefault().MaKPth.Value);
                        repcd.KPTH.Value = _Data.KPhongs.Where(p => p.MaKP == mkpth).Select(p => p.TenKP).FirstOrDefault().ToString();
                    }//yenbg1
                    repcd.CreateDocument();
                    frmcd.prcIN.PrintingSystem = repcd.PrintingSystem;
                    frmcd.ShowDialog();
                    return true;
                }
                #endregion
            }
            catch (Exception)
            {
                return false;
            }

        }

        #endregion
        #region Phiếu xét nghiệm đờm

        public static bool phieuxetnghiemdom(QLBV_Database.QLBVEntities data, int idcls)
        {
            try
            {
                var bn = (from benhnhan in data.BenhNhans
                          join cls in data.CLS.Where(p => p.IdCLS == idcls) on benhnhan.MaBNhan equals cls.MaBNhan
                          select new { benhnhan.NNhap, benhnhan.MaBNhan, benhnhan.TenBNhan, benhnhan.MaBV, benhnhan.CDNoiGT, benhnhan.Tuoi, benhnhan.GTinh, benhnhan.DChi, benhnhan.TChung, cls.NgayThang, cls.MaCB, cls.MaCBth, cls.NgayTH, cls.MaKP }).FirstOrDefault();
                //int noichuyen = 3;// 1- nơi khác chuyển đến (MaBV != null), 2- Y tế tư (CDNoiGT != null) , 3-Tự đến
                string ngaythang = "";
                int stt = 1;
                BaoCao.rep_mauxetnghiemdom rep = new BaoCao.rep_mauxetnghiemdom();


                // Phân loại bệnh nhân chuyển đến là tự đến, nơi khác chuyển hoặc y tế tư
                if (!String.IsNullOrEmpty(bn.MaBV))// bệnh nhân nơi khác chuyển đến
                {
                    rep.ckBVKhacChuyen.Checked = true;
                    var benhvien = data.BenhViens.Where(p => p.MaBV == bn.MaBV).FirstOrDefault();
                    if (benhvien != null && benhvien.TenBV != null)
                        rep.lblTenDonVi.Text = benhvien.TenBV;
                }
                else if (!String.IsNullOrEmpty(bn.CDNoiGT))
                {
                    rep.ckYTeTu.Checked = true;
                    rep.lblTenDonVi.Text = bn.CDNoiGT;
                }
                else
                {
                    rep.ck_Tuden.Checked = true;
                }

                //số đăng ký điều trị tạm ghi vào trưởng triệu chứng (Tchung trong bảng benhnhan)
                if (String.IsNullOrEmpty(bn.TChung))// bệnh nhân phát hiện
                {
                    rep.diachi.Text = bn.DChi;
                    rep.ckPhatHien.Checked = true;
                }
                else
                {
                    rep.ckTheodoi.Checked = true;
                    rep.lblSoDKDT.Text = bn.TChung;
                    // tính số tháng đã điều trị

                    RaVien rv = data.RaViens.Where(p => p.MaBNhan == bn.MaBNhan).FirstOrDefault();
                    if (rv != null && rv.NgayRa != null)
                    {
                        int sothang = Convert.ToInt32(Math.Round(((rv.NgayRa.Value - bn.NNhap.Value).TotalDays) / 30, 0));
                    }
                }

                //khoa phòng chỉ định
                var khoa = data.KPhongs.Where(p => p.MaKP == bn.MaKP).FirstOrDefault();
                if (khoa != null && khoa.TenKP != null)
                    rep.lblKhoa.Text = "KHOA: " + khoa.TenKP.ToUpper();

                //thông tin chung
                rep.hoten.Text = bn.TenBNhan;
                rep.CQCQ.Text = DungChung.Bien.TenCQCQ.ToUpper();
                rep.TenCQ.Text = DungChung.Bien.TenCQ.ToUpper();
                rep.Tuoi.Text = bn.Tuoi == null ? "" : bn.Tuoi.ToString();
                if (bn.GTinh == 1)
                    rep.nam.Checked = true;
                else
                    rep.nu.Checked = true;

                // ngày tháng, bác sỹ chỉ định và ngày tháng, bác sỹ thực hiện
                if (bn.NgayThang != null)
                {
                    rep.ngayyeucau.Text = "Ngày " + bn.NgayThang.Value.Day + " tháng " + bn.NgayThang.Value.Month + " năm " + bn.NgayThang.Value.Year;
                    ngaythang = bn.NgayThang.Value.ToString("dd/MM/yyyy");
                }
                if (bn.NgayTH != null)
                {
                    rep.ngayth.Text = "Ngày " + bn.NgayTH.Value.Day + " tháng " + bn.NgayTH.Value.Month + " năm " + bn.NgayTH.Value.Year;

                }
                var canbo = data.CanBoes.Where(p => p.MaCB == bn.MaCB).FirstOrDefault();
                if (canbo != null)
                    rep.txt_BSCD.Text = canbo.TenCB;
                var canboth = data.CanBoes.Where(p => p.MaCB == bn.MaCBth).FirstOrDefault();
                if (canboth != null)
                    rep.txtCanBoTH.Text = canboth.TenCB;

                // kết quả xét nghiệm
                var kqcls = (from cd in data.ChiDinhs.Where(p => p.IdCLS == idcls)
                             join clsct in data.CLScts on cd.IDCD equals clsct.IDCD
                             join dvct in data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                             join dv in data.DichVus on cd.MaDV equals dv.MaDV
                             select new { cd.MaDV, dvct.TenDVct, dvct.STT, clsct.KetQua, TenDV = dv.TenDV == "Máu" ? "M" : (dv.TenDV == "Nhày mủ" ? "NM" : (dv.TenDV == "Nước bọt" ? "NB" : dv.TenDV)) }).ToList();

                var kqua = (from a in kqcls
                            group a by new { a.TenDV, a.MaDV } into kq
                            select new
                            {
                                Ngaythang = ngaythang,
                                Stt = stt++,
                                TenDV = kq.Key.TenDV,
                                Kqxn1 = kq.Where(p => p.STT == 1).FirstOrDefault() == null ? "" : kq.Where(p => p.STT == 1).FirstOrDefault().KetQua,
                                Kqxn2 = kq.Where(p => p.STT == 2).FirstOrDefault() == null ? "" : kq.Where(p => p.STT == 2).FirstOrDefault().KetQua,
                                Kqxn3 = kq.Where(p => p.STT == 3).FirstOrDefault() == null ? "" : kq.Where(p => p.STT == 3).FirstOrDefault().KetQua,
                                Kqxn4 = kq.Where(p => p.STT == 4).FirstOrDefault() == null ? "" : kq.Where(p => p.STT == 4).FirstOrDefault().KetQua,
                                Kqxn5 = kq.Where(p => p.STT == 5).FirstOrDefault() == null ? "" : kq.Where(p => p.STT == 5).FirstOrDefault().KetQua,
                            }).ToList();

                //Số mẫu đờm
                rep.lblsoMauDom.Text = kqua.Count.ToString();

                // số xét nghiệm
                int k = kqua.Where(p => p.Kqxn1 != "" || p.Kqxn2 != "" || p.Kqxn3 != "" || p.Kqxn4 != "" || p.Kqxn5 != "").Count();
                rep.lblSoXN.Text = k.ToString();

                rep.DataSource = kqua;
                if (DungChung.Bien.MaBV == "27023")
                {
                    foreach (var item in kqua)
                    {
                        if (string.IsNullOrEmpty(item.Kqxn1) ||
                            string.IsNullOrEmpty(item.Kqxn2) ||
                            string.IsNullOrEmpty(item.Kqxn3) ||
                            string.IsNullOrEmpty(item.Kqxn4) ||
                            string.IsNullOrEmpty(item.Kqxn5))
                        {
                            MessageBox.Show("Không thể xem vì chưa có kết quả");
                            return false;
                        }
                    }
                }
                rep.BindingData();
                rep.CreateDocument();
                frmIn inphieu = new frmIn();
                inphieu.prcIN.PrintingSystem = rep.PrintingSystem;
                inphieu.ShowDialog();
                return true;

            }
            catch (Exception)
            {

                return false;



            }



        }
        #endregion


        #region in phiếu xét nghiệm hóa sinh miễn dịch
        public class _rpBC
        {
            public string _Tentn { get; set; }
            public string _Tendvct { get; set; }
            public int? _STT { get; set; }
            public string _checkX { get; set; }
            public string _Maqd { get; set; }
            public string _Madvct { get; set; }
            public string _Tenrg { get; set; }
            public string _Ketqua { get; set; }

            public string _TSBT { get; set; }
        }


        private static void xnhoasinhmiendich(QLBV_Database.QLBVEntities _Data, int _Mabn, int idcls, string so)
        {
            List<_rpBC> _listBC1 = new List<_rpBC>();
            List<_rpBC> _listBC_last = new List<_rpBC>();
            frmIn frm = new frmIn();
            BaoCao.repPhieuXNHoaSinhMienDich_30299 rep = new BaoCao.repPhieuXNHoaSinhMienDich_30299();
            int _makp = 0;
            rep.MaBNhan.Value = _Mabn;
            rep.txtMaBnhan.Text = _Mabn.ToString();
            rep.Status.Value = DungChung.Bien.InPhoi;

            rep.SoPhieu.Value = idcls;
            var par = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                       join cls in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                       select new { cls.MaKP, cls.MaCBth, cls.NgayTH, cls.NgayThang, cls.BarCode, bn.TenBNhan, bn.NamSinh, bn.MaBNhan, bn.DChi, bn.GTinh, cls.CapCuu, bn.Tuoi, bn.SThe, cls.MaCB }).ToList();
            if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
            {
                rep.txtBarcode.Text = par.Count > 0 ? par.FirstOrDefault().BarCode : "";
                rep.lblBarcode.Visible = true;
                rep.txtBarcode.Visible = true;
            }
            if (DungChung.Bien.MaBV == "27023")
                rep.So.Value = so;
            else if (DungChung.Bien.MaBV == "20001")//bn nội trú, điều trị ngoại trú lấy số vào viện, bn khám bệnh ngoại trí để trống
            {
                if (par.Count > 0)
                {
                    int mabn = par.FirstOrDefault().MaBNhan;
                    var qvv = _Data.VaoViens.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                    if (qvv != null)
                        rep.So.Value = qvv.SoVV;
                    else
                        rep.So.Value = "";
                }
            }
            else
                rep.So.Value = idcls;

            if (par.Count > 0)
            {
                _makp = par.FirstOrDefault().MaKP == null ? 0 : par.FirstOrDefault().MaKP.Value;
                rep.MaCBDT.Value = par.FirstOrDefault().MaCB;
                rep.Macb.Value = par.FirstOrDefault().MaCBth;
                rep.DiaChi.Value = par.FirstOrDefault().DChi;
                rep.NamSinh.Value = par.FirstOrDefault().NamSinh;
                rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                rep.TenBN.Value = par.FirstOrDefault().TenBNhan.ToUpper();
                int gioiTinh = int.Parse(par.FirstOrDefault().GTinh.ToString());
                if (gioiTinh == 1)
                {
                    rep.Nu.Value = "/";
                }
                else if (gioiTinh == 0)
                {
                    rep.Nam.Value = "/";
                }
                if (par.FirstOrDefault().SThe != null && par.FirstOrDefault().SThe.Length >= 15)
                {
                    rep.SThe1.Value = par.FirstOrDefault().SThe.Substring(0, 3);
                    rep.SThe2.Value = par.FirstOrDefault().SThe.Substring(3, 2);
                    rep.SThe3.Value = par.FirstOrDefault().SThe.Substring(5, 2);
                    rep.SThe4.Value = par.FirstOrDefault().SThe.Substring(7, 3);
                    rep.SThe5.Value = par.FirstOrDefault().SThe.Substring(10, 5);
                }
                bool capcuu = par.FirstOrDefault().CapCuu;
                if (capcuu)
                {
                    rep.CapCuu.Value = "X";
                }
                else rep.Thuong.Value = "X";
            }

            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp, true);
            rep.ChanDoan.Value = DungChung.Bien.MaBV != "24272" ? (DungChung.Bien.MaBV == "01049" ? (arrThongTinBNKB[1] + "  Mã ICD: " + arrThongTinBNKB[0]) : arrThongTinBNKB[1]) : "";
            rep.Buong.Value = arrThongTinBNKB[2];
            rep.Giuong.Value = arrThongTinBNKB[3];
            rep.Khoa.Value = arrThongTinBNKB[4];
            if (par.FirstOrDefault().NgayThang != null)
                rep.NgayCD.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayThang.Value, DungChung.Bien.FormatDate);
            else
                rep.NgayCD.Value = "..... giờ, ngày ..... tháng ..... năm .....";
            if (par.FirstOrDefault().NgayTH != null)
                rep.NgayTH.Value = DungChung.Ham.NgaySangChu(par.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
            else
                rep.NgayTH.Value = "..... giờ, ngày ..... tháng ..... năm .....";
            if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
            {
                var qcls2 = (from dvct in _Data.DichVucts.Where(p => p.STT >= 1 && p.STT <= 15)
                             join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                             join tnhomdv in _Data.TieuNhomDVs.Where(p => p.TenRG == "XN hóa sinh miễn dịch") on dv.IdTieuNhom equals tnhomdv.IdTieuNhom
                             select new _rpBC
                             {
                                 _Tentn = tnhomdv.TenTN,
                                 _Madvct = dvct.MaDVct,
                                 _Tendvct = dvct.TenDVct,
                                 _STT = dvct.STT,
                                 _Maqd = dv.MaQD,
                                 _Tenrg = tnhomdv.TenRG,
                                 _TSBT = dvct.TSBT
                             }).OrderBy(p => p._STT).ThenBy(p => p._Tendvct).ToList();
                if (qcls2.Count > 0)
                {
                    _listBC1.AddRange(qcls2);
                    foreach (var item in qcls2)
                    {

                        var qhh = (from cls in _Data.CLS.Where(p => p.IdCLS == idcls)
                                   join chidinh in _Data.ChiDinhs on cls.IdCLS equals chidinh.IdCLS
                                   join dichvu in _Data.DichVus on chidinh.MaDV equals dichvu.MaDV
                                   join tn in _Data.TieuNhomDVs on dichvu.IdTieuNhom equals tn.IdTieuNhom
                                   join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
                                   join dvct in _Data.DichVucts.Where(p => p.STT == item._STT).Where(p => p.TSBT == item._TSBT).Where(p => p.MaDVct == item._Madvct) on clsct.MaDVct equals dvct.MaDVct
                                   select new { clsct.MaDVct, clsct.KetQua, dvct.STT, tn.TenRG }).ToList();
                        if (qhh.Count > 0)
                        {
                            if (qhh.FirstOrDefault().KetQua != null)
                                item._Ketqua = qhh.Select(p => p.KetQua).FirstOrDefault().ToString();
                            item._checkX = "X";
                        }
                    }
                    foreach (var item in _listBC1)
                    {
                        if (item._Ketqua != null && item._STT != null)
                        {
                            _rpBC _dulieu = new _rpBC();
                            _dulieu._Maqd = item._Maqd;
                            _dulieu._checkX = item._checkX;
                            _dulieu._Tendvct = item._Tendvct;
                            _dulieu._Ketqua = item._Ketqua;
                            _dulieu._TSBT = item._TSBT;
                            _listBC_last.Add(_dulieu);
                        }
                    }
                }
            }
            //var qhhh5 = (from cls in _Data.CLS.Where(p => p.IdCLS == idcls)
            //             join chidinh in _Data.ChiDinhs on cls.IdCLS equals chidinh.IdCLS
            //             join dichvu in _Data.DichVus on chidinh.MaDV equals dichvu.MaDV
            //             join tn in _Data.TieuNhomDVs on dichvu.IdTieuNhom equals tn.IdTieuNhom
            //             join clsct in _Data.CLScts on chidinh.IDCD equals clsct.IDCD
            //             join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
            //             select new { KetQuact = dvct.KetQua, clsct.MaDVct, clsct.KetQua, dvct.STT, dvct.TSnTu, dvct.TSnDen, dvct.TSnuTu, dvct.TSnuDen, chidinh.MaDV }).ToList();



            //if (DungChung.Bien.MaBV == "27023")
            //{
            //    if (qhhh5.Count() > 0)
            //    {
            //        foreach (var item in qhhh5)
            //        {
            //            if (string.IsNullOrEmpty(item.KetQua))
            //            {
            //                MessageBox.Show("Không thể xem vì chưa có kết quả");
            //                return;
            //            }
            //        }
            //    }
            //}

            rep.DataSource = _listBC_last.ToList();
            rep.BindingData();
            rep.CreateDocument();
            frm.prcIN.PrintingSystem = rep.PrintingSystem;
            frm.ShowDialog();
        }

        #endregion
        #endregion

        #region
        public static bool PhieuXNDM_30012(int _Mabn, int idcls)
        {
            try
            {
                QLBV_Database.QLBVEntities _Data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
                frmIn frm3 = new frmIn();
                BaoCao.Rep_PhieuXN_CDM rep3 = new BaoCao.Rep_PhieuXN_CDM();
                rep3.SoPhieu.Value = idcls;
                int _makp3 = 0;
                rep3.TenBPham.Value = "Bệnh phẩm: sinh hóa nước tiểu";
                var par3 = (from bn in _Data.BenhNhans.Where(p => p.MaBNhan == _Mabn)
                            join cls3 in _Data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls3.MaBNhan
                            join cdcls in _Data.ChiDinhs on cls3.IdCLS equals cdcls.IdCLS
                            join clsct in _Data.CLScts on cdcls.IDCD equals clsct.IDCD
                            join dvct in _Data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                            join dv in _Data.DichVus on dvct.MaDV equals dv.MaDV
                            group new { dvct, clsct, dv, bn } by new { cls3.CapCuu, bn.GTinh, cls3.NgayTH, cls3.NgayThang, bn.MaBNhan, bn.SThe, bn.TenBNhan, bn.DChi, cls3.MaKP, cls3.MaKPth, cls3.MaCB, cls3.MaCBth, dvct.STT, dv.TenDV, dvct.TenDVct, clsct.KetQua, dvct.TSBT, dvct.DonVi } into kq
                            select new { kq.Key.CapCuu, kq.Key.GTinh, kq.Key.SThe, kq.Key.NgayTH, NgayCD = kq.Key.NgayThang, kq.Key.MaCB, kq.Key.MaKP, kq.Key.MaCBth, kq.Key.TenBNhan, kq.Key.MaBNhan, kq.Key.DChi, kq.Key.TenDV, YC = kq.Key.TenDVct, KQ = kq.Key.KetQua, TSBT = kq.Key.TSBT, kq.Key.DonVi, kq.Key.STT }).OrderBy(p => p.STT).ToList();
                if (par3.Count > 0)
                {
                    if (par3.FirstOrDefault().CapCuu == true)
                    {
                        rep3.chk_CapCuu.Checked = true;

                    }
                    else
                    {
                        rep3.chk_Thuong.Checked = true;

                    }
                    _makp3 = par3.FirstOrDefault().MaKP == null ? 0 : par3.FirstOrDefault().MaKP.Value;
                    rep3.Macb.Value = par3.FirstOrDefault().MaCBth;
                    rep3.MaCBDT.Value = par3.FirstOrDefault().MaCB;
                    rep3.DiaChi.Value = par3.FirstOrDefault().DChi;
                    rep3.Tuoi.Value = DungChung.Ham.TuoitheoThang(_Data, _Mabn, DungChung.Bien.formatAge);
                    rep3.MaBNhan.Value = par3.FirstOrDefault().MaBNhan;
                    rep3.TenBNhan.Value = par3.FirstOrDefault().TenBNhan.ToUpper();

                    arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(_Data, _Mabn, _makp3, true);
                    rep3.ChanDoan.Value = arrThongTinBNKB[1];
                    rep3.Buong.Value = arrThongTinBNKB[2];
                    rep3.Giuong.Value = arrThongTinBNKB[3];
                    rep3.Khoa.Value = arrThongTinBNKB[4];

                    if (par3.FirstOrDefault().NgayCD != null)

                        rep3.NgayCD.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayCD.Value, DungChung.Bien.FormatDate);
                    else rep3.NgayCD.Value = "Ngày .... tháng ..... năm .....";
                    if (par3.FirstOrDefault().NgayTH != null)
                        rep3.NgayTH.Value = DungChung.Ham.NgaySangChu(par3.FirstOrDefault().NgayTH.Value, DungChung.Bien.FormatDate);
                    else

                        rep3.NgayTH.Value = "Ngày .... tháng ..... năm .....";
                    int gioiTinh = int.Parse(par3.FirstOrDefault().GTinh.ToString());
                    if (gioiTinh == 1)
                    {
                        rep3.Nam.Value = "X".ToUpper();

                    }
                    else if (gioiTinh == 0)
                    {
                        rep3.Nu.Value = "X".ToUpper();
                    }




                    if (par3.FirstOrDefault().SThe.Length >= 15)
                    {
                        rep3.SThe1.Value = par3.FirstOrDefault().SThe.Substring(0, 3);
                        rep3.SThe2.Value = par3.FirstOrDefault().SThe.Substring(3, 2);
                        rep3.SThe3.Value = par3.FirstOrDefault().SThe.Substring(5, 2);
                        rep3.SThe4.Value = par3.FirstOrDefault().SThe.Substring(7, 3);
                        rep3.SThe5.Value = par3.FirstOrDefault().SThe.Substring(10, 5);
                    }
                }
                rep3.DataSource = par3;
                rep3.BindingData();
                rep3.CreateDocument();
                frm3.prcIN.PrintingSystem = rep3.PrintingSystem;
                frm3.ShowDialog();
            }
            catch
            {
                return false;

            }
            return true;

        }
        #endregion
        #region Phiếu xét nghiệm Mô bênh học
        public static void PhieuXNMoBenhHoc_New(int _mabn, int _idcsl)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            BaoCao.PhieuXNMoBenhHoc_New rep = new BaoCao.PhieuXNMoBenhHoc_New();
            var bn = (from a in data.BenhNhans.Where(p => p.MaBNhan == _mabn)
                      join b in data.VaoViens on a.MaBNhan equals b.MaBNhan into kq
                      from k1 in kq.DefaultIfEmpty()
                      select new
                      {
                          a.MaBNhan,
                          a.TenBNhan,
                          a.Tuoi,
                          a.GTinh,
                          a.DChi,
                          a.SThe,
                          a.CapCuu,
                          SoVV = k1 == null ? null : k1.SoVV
                      }).ToList();
            if (bn.Count > 0)
            {
                var cls = (from a in data.CLS.Where(p => p.IdCLS == _idcsl)
                           join b in data.ChiDinhs on a.IdCLS equals b.IdCLS
                           join c in data.CLScts on b.IDCD equals c.IDCD
                           select new { a.NgayThang, a.MaCB, a.BenhPham, a.GhiChu, c.MaDVct, c.KetQua, a.MaKP }).ToList();
                var dv = (from a in data.DichVus
                          join c in data.DichVucts on a.MaDV equals c.MaDV
                          join b in data.TieuNhomDVs on a.IdTieuNhom equals b.IdTieuNhom
                          select new { c.MaDVct, b.TenRG, c.TenDVct, c.STT }).ToList();
                var kqxn = (from a in cls
                            join b in dv.Where(p => p.TenRG == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.XNMoBenhHoc) on a.MaDVct equals b.MaDVct
                            select new
                            {
                                a.MaDVct,
                                b.TenDVct,
                                b.TenRG,
                                a.KetQua,
                                b.STT
                            }).ToList();
                if (kqxn.Count() > 0)
                {
                    if (DungChung.Bien.MaBV == "27023")
                    {
                        foreach (var item in kqxn)
                        {
                            if (string.IsNullOrEmpty(item.KetQua))
                            {
                                MessageBox.Show("Không thể xem vì chưa có kết quả");
                                return;
                            }
                        }
                    }
                    rep.NXVT.Value = cls.FirstOrDefault().GhiChu;
                    if (kqxn.Where(p => p.STT == 1).ToList().Count() > 0)
                        rep.HE.Value = kqxn.Where(p => p.STT == 1).ToList().FirstOrDefault().KetQua;
                    if (kqxn.Where(p => p.STT == 2).ToList().Count() > 0)
                        rep.PAS.Value = kqxn.Where(p => p.STT == 2).ToList().FirstOrDefault().KetQua;
                    if (kqxn.Where(p => p.STT == 3).ToList().Count() > 0)
                        rep.Giemsa.Value = kqxn.Where(p => p.STT == 3).ToList().FirstOrDefault().KetQua;
                    if (kqxn.Where(p => p.STT == 4).ToList().Count() > 0)
                        rep.Cellblock.Value = kqxn.Where(p => p.STT == 4).ToList().FirstOrDefault().KetQua;
                }
                else
                    rep.NXVT.Value = @".........................................................................................................................................................................................................
.........................................................................................................................................................................................................
.........................................................................................................................................................................................................
.........................................................................................................................................................................................................
.........................................................................................................................................................................................................";
                rep.TenBN.Value = (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049" || DungChung.Bien.MaBV == "12345" || DungChung.Bien.MaBV == "24297" || DungChung.Bien.MaBV == "56789") ? bn.FirstOrDefault().TenBNhan.ToUpper() : bn.FirstOrDefault().TenBNhan;
                rep.tuoi.Value = bn.FirstOrDefault().Tuoi;
                rep.Nam.Value = (bn.FirstOrDefault().GTinh == 1) ? "/" : "";
                rep.Nu.Value = (bn.FirstOrDefault().GTinh == 0) ? "/" : "";
                rep.Diachi.Value = bn.FirstOrDefault().DChi;
                rep.BHYT.Value = bn.FirstOrDefault().SThe;
                if (bn.FirstOrDefault().CapCuu == 0)
                    rep.thuong.Value = "X";
                if (bn.FirstOrDefault().CapCuu == 1)
                    rep.khancap.Value = "X";
                string[] arrThongTinBNKB = new string[5] { "", "", "", "", "" };
                arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(data, _mabn, cls.Max(p => p.MaKP ?? 0), true);
                rep.SoGiuong.Value = arrThongTinBNKB[2];
                rep.Buong.Value = arrThongTinBNKB[3];
                rep.Khoa.Value = arrThongTinBNKB[4];
                rep.SVV1.Value = "Số vào viện: " + bn.FirstOrDefault().SoVV;
                rep.MTB1.Value = "Mã tiêu bản: " + cls.FirstOrDefault().BenhPham;
                rep.Ngay.Value = "Gửi ngày " + cls.FirstOrDefault().NgayThang.Value.Day + " tháng " + cls.FirstOrDefault().NgayThang.Value.Month + " năm " + cls.FirstOrDefault().NgayThang.Value.Year;
                var maa = (from a in cls group a by new { a.MaCB } into kq select new { kq.Key.MaCB }).FirstOrDefault();
                string macb = maa == null ? "" : maa.MaCB;
                var bss = data.CanBoes.Where(p => p.MaCB == macb).ToList();
                rep.TenBS.Value = bss.FirstOrDefault().TenCB;

            }
            else
            {
                rep.SVV1.Value = "Số vào viện: ";
                rep.MTB1.Value = "Mã tiêu bản: ";
                rep.Ngay.Value = "Gửi ngày   " + " tháng    " + " năm ";
                rep.NXVT.Value = @".........................................................................................................................................................................................................
.........................................................................................................................................................................................................
.........................................................................................................................................................................................................
.........................................................................................................................................................................................................
.........................................................................................................................................................................................................";
            }
            rep.CreateDocument();
            frmIn frm = new frmIn();
            frm.prcIN.PrintingSystem = rep.PrintingSystem;
            frm.ShowDialog();
        }
        #endregion
        #region Phiếu xét nghiệm Tế bào học
        public static void PhieuXNTeBaoHoc_New(int _mabn, int _idcsl)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            var dv = (from a in data.DichVus.Where(p => p.Status == 1)
                      join b in data.TieuNhomDVs.Where(p => p.TenRG == DungChung.Bien.st_TieuNhomRG_ChuyenKhoa.XNTeBaoHoc) on a.IdTieuNhom equals b.IdTieuNhom
                      select a).ToList();
            var cls = (from a in data.CLS.Where(p => p.IdCLS == _idcsl)
                       join b in data.ChiDinhs on a.IdCLS equals b.IdCLS
                       join c in data.CLScts on b.IDCD equals c.IDCD
                       join d in data.KPhongs on a.MaKP equals d.MaKP
                       select new { a.MaBNhan, a.NgayThang, a.MaCB, a.BenhPham, a.GhiChu, a.BarCode, b.MaDV, b.ChiDinh1, c.KetQua, d.TenKP, a.MaKP, a.TrangThaiBP, a.TrangThaiBN, a.NgayTH, a.MaCBth, c.KetquaXN, a.Status }).Distinct().ToList();
            var cd = (from a in dv
                      join b in cls.Where(p => p.MaBNhan == _mabn) on a.MaDV equals b.MaDV
                      select new
                      {
                          a.TenDV,
                          a.MaQD,
                      });
            int _makp = cls.Count > 0 ? cls.FirstOrDefault().MaKP ?? 0 : 0;
            var bn = (from a in data.BenhNhans.Where(p => p.MaBNhan == _mabn)
                      join b in data.BNKBs.Where(p => p.MaKP == _makp) on a.MaBNhan equals b.MaBNhan
                      join c in data.KPhongs on b.MaKP equals c.MaKP
                      join d in data.CanBoes on b.MaCB equals d.MaCB
                      select new { a.TenBNhan, a.MaBNhan, a.Tuoi, a.GTinh, a.DChi, a.SThe, b.ChanDoan, b.MaKP, c.TenKP, d.TenCB, b.Buong, b.Giuong }).ToList();
            var vv = data.VaoViens.Where(p => p.MaBNhan == _mabn).ToList();
            QLBV.Phieu.rep_XNTeBao rep2 = new QLBV.Phieu.rep_XNTeBao();
            if (DungChung.Bien.MaBV == "01071" || DungChung.Bien.MaBV == "01049")
            {
                if (cls.Count > 0)
                {
                    rep2.txtBarcode.Text = cls.Count > 0 ? cls.FirstOrDefault().BarCode : "";
                }
                rep2.txtBarcode.Visible = rep2.lblBarcode.Visible = true;
            }
            if (bn.FirstOrDefault().GTinh == 1)
            {
                rep2.Nu.Visible = true;
            }
            else
            {
                rep2.Nam.Visible = true;

            }
            if (bn.FirstOrDefault().SThe.Length == 15)
            {
                rep2.SThe1.Text = bn.FirstOrDefault().SThe.Substring(0, 3);
                rep2.SThe2.Text = bn.FirstOrDefault().SThe.Substring(3, 2);
                rep2.SThe3.Text = bn.FirstOrDefault().SThe.Substring(5, 2);
                rep2.SThe4.Text = bn.FirstOrDefault().SThe.Substring(7, 3);
                rep2.SThe5.Text = bn.FirstOrDefault().SThe.Substring(10, 5);
            }

            rep2.lblCCCQ.Text = DungChung.Bien.TenCQCQ.ToUpper();
            rep2.lblTenBV.Text = DungChung.Bien.TenCQ.ToUpper();
            rep2.Khoa.Value = cls.FirstOrDefault().TenKP.ToString();
            rep2.HoVaTen.Value = bn.FirstOrDefault().TenBNhan.ToString().ToUpper();
            rep2.Tuoi.Value = bn.FirstOrDefault().Tuoi;
            rep2.DiaChi.Value = bn.FirstOrDefault().DChi;
            arrThongTinBNKB = DungChung.Ham.laythongtinBNKB(data, _mabn, _makp, true);
            rep2.ChanDoan.Value = arrThongTinBNKB[1];
            rep2.NgayGio1.Value = cls.FirstOrDefault().NgayThang.Value.Hour + " Giờ " + cls.FirstOrDefault().NgayThang.Value.Minute + ", Ngày " + cls.FirstOrDefault().NgayThang.Value.Day + " tháng " + cls.FirstOrDefault().NgayThang.Value.Month + " năm " + cls.FirstOrDefault().NgayThang.Value.Year;
            if (cls.Count() > 0 && cls.FirstOrDefault().NgayTH != null)
                // rep.NgayThang2.Value = "Ngày " + DateTime.Now.Day + " tháng " + DateTime.Now.Month + " năm " + DateTime.Now.Year;
                rep2.NgayGio2.Value = cls.FirstOrDefault().NgayTH.Value.Hour + " Giờ " + cls.FirstOrDefault().NgayTH.Value.Minute + ",Ngày " + cls.FirstOrDefault().NgayTH.Value.Day + " tháng " + cls.FirstOrDefault().NgayTH.Value.Month + " năm " + cls.FirstOrDefault().NgayTH.Value.Year;
            else
                rep2.NgayGio2.Value = "..... Giờ ..... , Ngày ..... tháng ..... năm .....";
            rep2.BSDT.Value = bn.FirstOrDefault().TenCB;
            rep2.KetQua.Value = cls.FirstOrDefault().KetQua;
            rep2.lblSo.Text = Convert.ToString(_idcsl);
            if (cls.FirstOrDefault().MaCBth != null)
            {
                rep2.BSDKQ.Value = cls.FirstOrDefault().MaCBth.ToString();
            }
            rep2.Buong.Value = bn.FirstOrDefault().Buong;
            rep2.Giuong.Value = bn.FirstOrDefault().Giuong;
            rep2.KetLuan.Value = cls.FirstOrDefault().GhiChu;
            foreach (var item in cls)
            {
                if (item.Status == 0)
                {
                    rep2.KetQua.Value = "";
                    rep2.KetLuan.Value = "";
                }
            }
            rep2.DataSource = cd.ToList();
            rep2.Databind();
            rep2.CreateDocument();
            frmIn frm = new frmIn();
            frm.prcIN.PrintingSystem = rep2.PrintingSystem;
            frm.ShowDialog();


        }
        #endregion
        #region In phiếu điều trị 14018

        public enum TypePhieuDieuTri14018
        {
            ChiDinh,
            DieuTri,
            KetQua
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="madv"></param>
        /// <param name="mabn"></param>
        /// <param name="type"></param>
        /// <param name="idCLS"></param>
        /// <param name="IDCD"></param>
        /// <param name="kyThuatVien"></param>
        /// <param name="nhanXetRaVien"></param>
        /// <param name="kqDT">99 Không sử dụng pr này. 0 khỏi, 1 đỡ, giảm, 2 không đỡ, 3 nặng hơn , 4 tử vong</param>
        public static void InPhieuDieuTri_14018(int madv, int mabn, TypePhieuDieuTri14018 type, int? idCLS, int IDCD, string kyThuatVien = "", string nhanXetRaVien = "", int kqDT = 99, string DScbth = "")
        {
            QLBV_Database.QLBVEntities dataContext = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            var q0 = (from bn in dataContext.BenhNhans.Where(o => o.MaBNhan == mabn)
                      join ttbs in dataContext.TTboXungs.Where(o => o.MaBNhan == mabn) on bn.MaBNhan equals ttbs.MaBNhan
                      join nn in dataContext.DmNNs on ttbs.MaNN equals nn.MaNN into dsnn
                      from nn in dsnn.DefaultIfEmpty()
                      join vv in dataContext.VaoViens.Where(o => o.MaBNhan == mabn) on bn.MaBNhan equals vv.MaBNhan into kq1
                      from vv1 in kq1.DefaultIfEmpty()
                      select new { bn, ttbs, vv1, TenNN = (nn != null ? nn.TenNN : "") }
                     ).ToList();
            var rv = dataContext.RaViens.FirstOrDefault(o => o.MaBNhan == mabn);
            var ChanDoan = (from bnkb in dataContext.BNKBs.Where(p => p.MaBNhan == mabn)
                            join kp in dataContext.KPhongs on bnkb.MaKP equals kp.MaKP
                            select new { bnkb.IDKB, bnkb.ChanDoan, bnkb.BenhKhac, bnkb.MaICD2, bnkb.MaICD });
            var tndv = (from dv in dataContext.DichVus.Where(o => o.MaDV == madv)
                        join tn in dataContext.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                        select new { tn.TenRG, TenPhuongPhap = dv.TenPhuongPhap, dv.TenKhac, dv.TenDV, dv.MaQD }).ToList();
            if (q0.Count > 0 && tndv.Count > 0)
            {
                var dieutri = (from cls in dataContext.CLS.Where(o => o.MaBNhan == mabn && (idCLS != null ? o.IdCLS == idCLS : true))
                               join cd in dataContext.ChiDinhs.Where(o => o.MaDV == madv) on cls.IdCLS equals cd.IdCLS
                               join cbth in dataContext.CanBoes on cls.MaCBth equals cbth.MaCB into kq
                               from c in kq.DefaultIfEmpty()
                               join cb in dataContext.CanBoes on cls.MaCB equals cb.MaCB
                               select new { cls.Status, cls.IdCLS, cls.NgayTH, cd, TenCBth = (c != null ? c.TenCB : ""), TenCB = cb.TenCB, cd.ChiDinh1, cd.YLenh2, cls.NgayThang, cd.TenDungCu, cd.NDVaoVien, cd.IDCD, CBCD = cb.TenCB }).OrderBy(o => o.NgayTH).ToList();

                if (type == TypePhieuDieuTri14018.DieuTri || type == TypePhieuDieuTri14018.KetQua)
                {
                    dieutri = dieutri.Where(o => o.Status == 1).ToList();
                }

                string soTuoi = DungChung.Ham.CalculateAge(q0.FirstOrDefault().bn.NgaySinh, q0.FirstOrDefault().bn.ThangSinh, q0.FirstOrDefault().bn.NamSinh, "tháng");

                if (tndv.FirstOrDefault().TenRG == "Điều trị vận động")
                {
                    Phieudieutrivandong rep = new Phieudieutrivandong();
                    rep.lblHoTen.Text = q0.FirstOrDefault().bn.TenBNhan.ToUpper();
                    rep.xrTableCell22.Text = "8. Phương pháp điều trị: " + tndv.FirstOrDefault().TenKhac;
                    rep.lblGioiTinh.Text = q0.FirstOrDefault().bn.GTinh == 1 ? "Nam" : "Nữ";
                    rep.lblDiaChi.Text = q0.FirstOrDefault().bn.DChi;
                    rep.lblNgheNghiep.Text = q0.FirstOrDefault().TenNN;
                    rep.lblNgayThang.Text = DungChung.Ham.NgaySangChu((dieutri != null && dieutri.Count > 0) ? (dieutri.Min(o => o.NgayThang) ?? DateTime.Now) : DateTime.Now);
                    rep.txtNDVaoVien.Text = dieutri.Count > 0 ? dieutri.FirstOrDefault(o => o.IDCD == IDCD).NDVaoVien : "";
                    rep.txtTenDungCu.Text = dieutri.Count > 0 ? dieutri.FirstOrDefault(o => o.IDCD == IDCD).TenDungCu : "";
                    rep.lblTenKyThuatVien.Text = kyThuatVien;
                    switch (kqDT)
                    {
                        case 0:
                            rep.chkKhoi.Checked = true;
                            break;
                        case 1:
                            rep.chkDoGiam.Checked = true;
                            break;
                        case 2:
                            rep.chkKhongDo.Checked = true;
                            break;
                        case 3:
                            rep.chkNangHon.Checked = true;
                            break;
                        case 4:
                            rep.chkTuVong.Checked = true;
                            break;
                    }

                    var dtuong = q0.FirstOrDefault().bn.DTuong;
                    if (dtuong == "BHYT")
                        rep.lblDoiTuong.Text = q0.FirstOrDefault().bn.SThe + " " + "14-018";
                    else
                        rep.lblDoiTuong.Text = q0.FirstOrDefault().bn.DTuong;

                    rep.lblTuoi.Text = soTuoi;
                    rep.lblPhuongPhap.Text = tndv.FirstOrDefault().TenPhuongPhap;
                    rep.lblTenDV.Text = tndv.FirstOrDefault().TenDV + " " + "[" + tndv.FirstOrDefault().MaQD + "]";

                    rep.lblLieuLuong.Text = dieutri.Count > 0 ? dieutri.FirstOrDefault(o => o.IdCLS == dieutri.Min(p => p.IdCLS)).ChiDinh1 : "";
                    rep.xrTableCell38.Text = dieutri.Count > 0 ? dieutri.FirstOrDefault(o => o.IdCLS == dieutri.Min(p => p.IdCLS)).YLenh2 : "";
                    rep.lblBacSiKhamBenh.Text = string.Join(",", dieutri.Select(o => o.TenCB).Distinct());
                    rep.lblBSDT.Text = dieutri.Count > 0 ? dieutri.FirstOrDefault().CBCD.ToUpper() : "";
                    rep.lblKiThuatVien.Text = DScbth;
                    rep.lblNhanXetRaVien.Text = nhanXetRaVien;
                    if (type == TypePhieuDieuTri14018.DieuTri || type == TypePhieuDieuTri14018.KetQua)
                    {
                        for (int i = 0; i < dieutri.Count; i++)
                        {
                            XRTable xrTable = new XRTable();
                            if (i < 15)
                                xrTable = rep.tableLanDieuTri1;
                            else if (i < 30)
                                xrTable = rep.tableLanDieuTri2;
                            else if (i >= 30)
                                xrTable = rep.tableLanDieuTri3;
                            foreach (XRTableCell c in xrTable.Rows[1].Cells)
                            {
                                if (c.Name == ("cell" + (i + 1).ToString()))
                                {

                                    c.Text = dieutri[i].NgayTH != null ? (dieutri[i].NgayTH.Value.Day.ToString("D2") + "/" + dieutri[i].NgayTH.Value.Month.ToString("D2")) : "";
                                }
                            }
                        }
                    }

                    if (type == TypePhieuDieuTri14018.DieuTri)
                    {
                        // rep.lblTenKyThuatVien.Text = ""; //string.Join(",", dieutri.Select(o => o.TenCBth).Distinct());
                        rep.xrNgayDieuTri.Text = rep.lblTuNgay.Text = (dieutri != null && dieutri.Count > 0 && dieutri.Exists(o => o.NgayTH != null)) ? dieutri.Min(o => o.NgayTH).Value.ToString("dd/MM/yyyy") : "";
                        rep.lblDenNgay.Text = (dieutri != null && dieutri.Count > 0) ? dieutri.Max(o => o.NgayTH).Value.ToString("dd/MM/yyyy") : "";
                        rep.lblTongSoNgay.Text = (dieutri != null && dieutri.Count > 0 && dieutri.Exists(o => o.NgayTH != null)) ? dieutri.Count.ToString() : "0";
                    }
                    else if (type == TypePhieuDieuTri14018.ChiDinh)
                    {
                        rep.xrLabel3.Text = "PHIẾU CHỈ ĐỊNH VẬN ĐỘNG";
                        //rep.xrTableCell46.Text = dieutri.Count > 0 ? dieutri.FirstOrDefault().NgayThang.Value.ToString("dd/MM/yyyy HH:mm") : "";
                    }
                    else if (type == TypePhieuDieuTri14018.KetQua)
                    {
                        rep.xrLabel3.Text = "PHIẾU KẾT QUẢ VẬN ĐỘNG";
                        //rep.xrNgayDieuTri.Text = dieutri.Count > 0 ? dieutri.FirstOrDefault().NgayThang.Value.ToString("dd/MM/yyyy HH:mm") : "";
                    }
                    var chandoan = ChanDoan.Where(p => p.IDKB == ChanDoan.Max(s => s.IDKB)).FirstOrDefault().ChanDoan ?? "";
                    var chandoan2 = ChanDoan.Where(p => p.IDKB == ChanDoan.Max(s => s.IDKB)).FirstOrDefault().BenhKhac ?? "";
                    var MaIDCD = ChanDoan.Where(p => p.IDKB == ChanDoan.Max(s => s.IDKB)).FirstOrDefault().MaICD ?? "";
                    var MaIDCD2 = ChanDoan.Where(p => p.IDKB == ChanDoan.Max(s => s.IDKB)).FirstOrDefault().MaICD2 ?? "";
                    if (!string.IsNullOrWhiteSpace(chandoan))
                    {
                        rep.lblBenhChinh.Text = DungChung.Ham.FreshString_WithCode(chandoan, MaIDCD);
                    }
                    if (!string.IsNullOrWhiteSpace(chandoan2))
                    {
                        rep.lblBenhKemTheo.Text = DungChung.Ham.FreshString_WithCode(chandoan2, MaIDCD2);
                    }

                    rep.CreateDocument();
                    frmIn frm = new frmIn();
                    frm.prcIN.PrintingSystem = rep.PrintingSystem;
                    frm._xtraReport = rep;
                    frm.ShowDialog();
                }

                else if (tndv.FirstOrDefault().TenRG == "Điều trị y học cổ truyền")
                {
                    PhieuDTYHocCoTruyen rep = new PhieuDTYHocCoTruyen();
                    rep.lblHoTen.Text = q0.FirstOrDefault().bn.TenBNhan.ToUpper();
                    rep.lblGioiTinh.Text = q0.FirstOrDefault().bn.GTinh == 1 ? "Nam" : "Nữ";
                    rep.lblDiaChi.Text = q0.FirstOrDefault().bn.DChi;
                    rep.lblNgayThang.Text = DungChung.Ham.NgaySangChu((dieutri != null && dieutri.Count > 0) ? (dieutri.Min(o => o.NgayThang) ?? DateTime.Now) : DateTime.Now);
                    rep.xrTableCell12.Text = "8. Phương pháp điều trị: " + tndv.FirstOrDefault().TenKhac;
                    rep.lblNgheNghiep.Text = q0.FirstOrDefault().TenNN;
                    rep.lblTenKyThuatVien.Text = kyThuatVien;
                    var dtuong = q0.FirstOrDefault().bn.DTuong;
                    if (dtuong == "BHYT")
                        rep.lblDoiTuong.Text = q0.FirstOrDefault().bn.DTuong + " (" + q0.FirstOrDefault().bn.SThe + ")";
                    else
                        rep.lblDoiTuong.Text = q0.FirstOrDefault().bn.DTuong;

                    rep.lblTuoi.Text = soTuoi;
                    rep.lblPhuongPhap.Text = tndv.FirstOrDefault().TenPhuongPhap;
                    rep.lblTenDV.Text = tndv.FirstOrDefault().TenDV + " " + "[" + tndv.FirstOrDefault().MaQD + "]";

                    rep.xrLieuLuong.Html = dieutri.Count > 0 ? "Liều lượng <i>(cường độ, thời gian, số lần)</i>:" + dieutri.FirstOrDefault(o => o.IdCLS == dieutri.Min(p => p.IdCLS)).ChiDinh1 : "";
                    rep.xrLabel10.Text = dieutri.Count > 0 ? dieutri.FirstOrDefault(o => o.IdCLS == dieutri.Min(p => p.IdCLS)).YLenh2 : "";
                    rep.lblKiThuatVien.Text = DScbth;
                    rep.lblBacSiKhamBenh.Text = string.Join(",", dieutri.Select(o => o.TenCB).Distinct());
                    rep.lblNhanXetRaVien.Text = nhanXetRaVien;
                    rep.lblBSDT.Text = dieutri.Count > 0 ? dieutri.FirstOrDefault().CBCD.ToUpper() : "";
                    switch (kqDT)
                    {
                        case 0:
                            rep.chkKhoi.Checked = true;
                            break;
                        case 1:
                            rep.chkDoGiam.Checked = true;
                            break;
                        case 2:
                            rep.chkKhongDo.Checked = true;
                            break;
                        case 3:
                            rep.chkNangHon.Checked = true;
                            break;
                        case 4:
                            rep.chkTuVong.Checked = true;
                            break;
                    }
                    if (type == TypePhieuDieuTri14018.DieuTri || type == TypePhieuDieuTri14018.KetQua)
                    {
                        for (int i = 0; i < dieutri.Count; i++)
                        {
                            XRTable xrTable = new XRTable();
                            if (i < 15)
                                xrTable = rep.tableLanDieuTri1;
                            else if (i < 30)
                                xrTable = rep.tableLanDieuTri2;
                            else if (i >= 30)
                                xrTable = rep.tableLanDieuTri3;
                            foreach (XRTableCell c in xrTable.Rows[1].Cells)
                            {
                                if (c.Name == ("cell" + (i + 1).ToString()))
                                {

                                    c.Text = dieutri[i].NgayTH != null ? (dieutri[i].NgayTH.Value.Day.ToString("D2") + "/" + dieutri[i].NgayTH.Value.Month.ToString("D2")) : "";
                                }
                            }
                        }
                    }
                    if (type == TypePhieuDieuTri14018.DieuTri)
                    {
                        // rep.lblTenKyThuatVien.Text = ""; //string.Join(",", dieutri.Select(o => o.TenCBth).Distinct());
                        rep.xrNgayDieuTri.Text = rep.lblTuNgay.Text = (dieutri != null && dieutri.Count > 0 && dieutri.Exists(o => o.NgayTH != null)) ? dieutri.Min(o => o.NgayTH).Value.ToString("dd/MM/yyyy") : "";
                        rep.lblDenNgay.Text = (dieutri != null && dieutri.Count > 0) ? dieutri.Max(o => o.NgayTH).Value.ToString("dd/MM/yyyy") : "";
                        rep.lblTongSoNgay.Text = (dieutri != null && dieutri.Count > 0 && dieutri.Exists(o => o.NgayTH != null)) ? dieutri.Count.ToString() : "0";
                    }
                    else if (type == TypePhieuDieuTri14018.ChiDinh)
                    {
                        rep.xrLabel3.Text = "PHIẾU CHỈ ĐỊNH Y HỌC CỔ TRUYỀN";
                        //rep.xrTableCell46.Text = dieutri.Count > 0 ? dieutri.FirstOrDefault().NgayThang.Value.ToString("dd/MM/yyyy HH:mm") : "";
                    }
                    else if (type == TypePhieuDieuTri14018.KetQua)
                    {
                        rep.xrLabel3.Text = "PHIẾU KẾT QUẢ Y HỌC CỔ TRUYỀN";
                        rep.xrNgayDieuTri.Text = dieutri.Count > 0 ? dieutri.FirstOrDefault().NgayThang.Value.ToString("dd/MM/yyyy HH:mm") : "";
                    }
                    var chandoan = ChanDoan.Where(p => p.IDKB == ChanDoan.Max(s => s.IDKB)).FirstOrDefault().ChanDoan ?? "";
                    var chandoan2 = ChanDoan.Where(p => p.IDKB == ChanDoan.Max(s => s.IDKB)).FirstOrDefault().BenhKhac ?? "";
                    var MaIDCD = ChanDoan.Where(p => p.IDKB == ChanDoan.Max(s => s.IDKB)).FirstOrDefault().MaICD ?? "";
                    var MaIDCD2 = ChanDoan.Where(p => p.IDKB == ChanDoan.Max(s => s.IDKB)).FirstOrDefault().MaICD2 ?? "";
                    if (!string.IsNullOrWhiteSpace(chandoan))
                    {
                        rep.lblbenhchinh.Text = DungChung.Ham.FreshString_WithCode(chandoan, MaIDCD);
                    }
                    if (!string.IsNullOrWhiteSpace(chandoan2))
                    {
                        rep.lblbenhkemtheo.Text = DungChung.Ham.FreshString_WithCode(chandoan2, MaIDCD2);
                    }
                    rep.CreateDocument();
                    frmIn frm = new frmIn();
                    frm.prcIN.PrintingSystem = rep.PrintingSystem;
                    frm.ShowDialog();
                }
                else if (tndv.FirstOrDefault().TenRG == "Điều trị vật lý")
                {
                    PhieuDTVatLy rep = new PhieuDTVatLy();
                    rep.lblHoTen.Text = q0.FirstOrDefault().bn.TenBNhan.ToUpper();
                    rep.lblGioiTinh.Text = q0.FirstOrDefault().bn.GTinh == 1 ? "Nam" : "Nữ";
                    rep.lblDiaChi.Text = q0.FirstOrDefault().bn.DChi;
                    rep.lblNgayThang.Text = DungChung.Ham.NgaySangChu((dieutri != null && dieutri.Count > 0) ? (dieutri.Min(o => o.NgayThang) ?? DateTime.Now) : DateTime.Now);
                    rep.lblNgheNghiep.Text = q0.FirstOrDefault().TenNN;
                    rep.lblKiThuatVien.Text = DScbth;
                    rep.xrTableCell22.Text = "8. Phương pháp điều trị: " + tndv.FirstOrDefault().TenKhac;
                    rep.lblBSDT.Text = dieutri.Count > 0 ? dieutri.FirstOrDefault().CBCD.ToUpper() : "";
                    switch (kqDT)
                    {
                        case 0:
                            rep.chkKhoi.Checked = true;
                            break;
                        case 1:
                            rep.chkDoGiam.Checked = true;
                            break;
                        case 2:
                            rep.chkKhongDo.Checked = true;
                            break;
                        case 3:
                            rep.chkNangHon.Checked = true;
                            break;
                        case 4:
                            rep.chkTuVong.Checked = true;
                            break;
                    }
                    var dtuong = q0.FirstOrDefault().bn.DTuong;
                    if (dtuong == "BHYT")
                        rep.lblDoiTuong.Text = q0.FirstOrDefault().bn.DTuong + " (" + q0.FirstOrDefault().bn.SThe + ")";
                    else
                        rep.lblDoiTuong.Text = q0.FirstOrDefault().bn.DTuong;

                    rep.lblTuoi.Text = soTuoi;
                    rep.lblPhuongPhap.Text = tndv.FirstOrDefault().TenPhuongPhap;
                    rep.lblTenDV.Text = tndv.FirstOrDefault().TenDV + " " + "[" + tndv.FirstOrDefault().MaQD + "]";
                    rep.lblTenDungCu.Text = dieutri.Count > 0 ? dieutri.FirstOrDefault(o => o.IDCD == IDCD).TenDungCu : "";
                    rep.lblLieuLuong.Text = dieutri.Count > 0 ? dieutri.FirstOrDefault(o => o.IdCLS == dieutri.Min(p => p.IdCLS)).ChiDinh1 : "";
                    rep.xrTableCell38.Text = dieutri.Count > 0 ? dieutri.FirstOrDefault(o => o.IdCLS == dieutri.Min(p => p.IdCLS)).YLenh2 : "";
                    rep.lblBacSiKhamBenh.Text = string.Join(",", dieutri.Select(o => o.TenCB).Distinct());
                    rep.lblNhanXetRaVien.Text = nhanXetRaVien;
                    rep.lblTenKyThuatVien.Text = kyThuatVien;

                    if (type == TypePhieuDieuTri14018.DieuTri || type == TypePhieuDieuTri14018.KetQua)
                    {
                        for (int i = 0; i < dieutri.Count; i++)
                        {
                            XRTable xrTable = new XRTable();
                            if (i < 15)
                                xrTable = rep.tableLanDieuTri1;
                            else if (i < 30)
                                xrTable = rep.tableLanDieuTri2;
                            else if (i >= 30)
                                xrTable = rep.tableLanDieuTri3;
                            foreach (XRTableCell c in xrTable.Rows[1].Cells)
                            {
                                if (c.Name == ("cell" + (i + 1).ToString()))
                                {

                                    c.Text = dieutri[i].NgayTH != null ? (dieutri[i].NgayTH.Value.Day.ToString("D2") + "/" + dieutri[i].NgayTH.Value.Month.ToString("D2")) : "";
                                }
                            }
                        }
                    }
                    if (type == TypePhieuDieuTri14018.DieuTri)
                    {
                        //rep.lblTenKyThuatVien.Text = ""; //string.Join(",", dieutri.Select(o => o.TenCBth).Distinct());
                        rep.xrNgayDieuTri.Text = rep.lblTuNgay.Text = (dieutri != null && dieutri.Count > 0 && dieutri.Exists(o => o.NgayTH != null)) ? dieutri.Min(o => o.NgayTH).Value.ToString("dd/MM/yyyy") : "";
                        rep.lblDenNgay.Text = (dieutri != null && dieutri.Count > 0) ? dieutri.Max(o => o.NgayTH).Value.ToString("dd/MM/yyyy") : "";
                        rep.lblTongSoNgay.Text = (dieutri != null && dieutri.Count > 0 && dieutri.Exists(o => o.NgayTH != null)) ? dieutri.Count.ToString() : "0";
                    }
                    else if (type == TypePhieuDieuTri14018.ChiDinh)
                    {
                        rep.xrLabel3.Text = "PHIẾU CHỈ ĐỊNH VẬT LÝ";
                        //rep.xrTableCell46.Text = dieutri.Count > 0 ? dieutri.FirstOrDefault().NgayThang.Value.ToString("dd/MM/yyyy HH:mm") : "";
                    }
                    else if (type == TypePhieuDieuTri14018.KetQua)
                    {
                        rep.xrLabel3.Text = "PHIẾU KẾT QUẢ VẬT LÝ";
                        //rep.xrNgayDieuTri.Text = dieutri.Count > 0 ? dieutri.FirstOrDefault().NgayThang.Value.ToString("dd/MM/yyyy HH:mm") : "";
                    }

                    var chandoan = ChanDoan.Where(p => p.IDKB == ChanDoan.Max(s => s.IDKB)).FirstOrDefault().ChanDoan ?? "";
                    var chandoan2 = ChanDoan.Where(p => p.IDKB == ChanDoan.Max(s => s.IDKB)).FirstOrDefault().BenhKhac ?? "";
                    var MaIDCD = ChanDoan.Where(p => p.IDKB == ChanDoan.Max(s => s.IDKB)).FirstOrDefault().MaICD ?? "";
                    var MaIDCD2 = ChanDoan.Where(p => p.IDKB == ChanDoan.Max(s => s.IDKB)).FirstOrDefault().MaICD2 ?? "";
                    if (!string.IsNullOrWhiteSpace(chandoan))
                    {
                        rep.lblBenhChinh.Text = DungChung.Ham.FreshString_WithCode(chandoan, MaIDCD);
                    }
                    if (!string.IsNullOrWhiteSpace(chandoan2))
                    {
                        rep.lblbenhkemtheo.Text = DungChung.Ham.FreshString_WithCode(chandoan2, MaIDCD2);
                    }
                    rep.CreateDocument();
                    frmIn frm = new frmIn();
                    frm.prcIN.PrintingSystem = rep.PrintingSystem;
                    frm.ShowDialog();
                }
                else if (tndv.FirstOrDefault().TenRG == "Điều trị ngôn ngữ trị liệu")
                {
                    PhieuDTNgonNguTriLieu rep = new PhieuDTNgonNguTriLieu();
                    rep.lblHoTen.Text = q0.FirstOrDefault().bn.TenBNhan.ToUpper();
                    rep.lblGioiTinh.Text = q0.FirstOrDefault().bn.GTinh == 1 ? "Nam" : "Nữ";
                    rep.lblDiaChi.Text = q0.FirstOrDefault().bn.DChi;
                    rep.xrTableCell22.Text = "8. Phương pháp điều trị: " + tndv.FirstOrDefault().TenKhac;
                    rep.lblNgayThang.Text = DungChung.Ham.NgaySangChu((dieutri != null && dieutri.Count > 0) ? (dieutri.Min(o => o.NgayThang) ?? DateTime.Now) : DateTime.Now);
                    rep.lblNgheNghiep.Text = q0.FirstOrDefault().TenNN;
                    rep.lblBSDT.Text = dieutri.Count > 0 ? dieutri.FirstOrDefault().CBCD.ToUpper() : "";
                    switch (kqDT)
                    {
                        case 0:
                            rep.chkKhoi.Checked = true;
                            break;
                        case 1:
                            rep.chkDoGiam.Checked = true;
                            break;
                        case 2:
                            rep.chkKhongDo.Checked = true;
                            break;
                        case 3:
                            rep.chkNangHon.Checked = true;
                            break;
                        case 4:
                            rep.chkTuVong.Checked = true;
                            break;
                    }
                    var dtuong = q0.FirstOrDefault().bn.DTuong;
                    if (dtuong == "BHYT")
                        rep.lblDoiTuong.Text = q0.FirstOrDefault().bn.DTuong + " (" + q0.FirstOrDefault().bn.SThe + ")";
                    else
                        rep.lblDoiTuong.Text = q0.FirstOrDefault().bn.DTuong;

                    rep.lblTuoi.Text = soTuoi;
                    rep.lblPhuongPhap.Text = tndv.FirstOrDefault().TenPhuongPhap;
                    rep.lblTenDV.Text = tndv.FirstOrDefault().TenDV + " " + "[" + tndv.FirstOrDefault().MaQD + "]";
                    rep.lblKiThuatVien.Text = DScbth;
                    rep.lblLieuLuong.Text = dieutri.Count > 0 ? dieutri.FirstOrDefault(o => o.IdCLS == dieutri.Min(p => p.IdCLS)).ChiDinh1 : "";
                    rep.xrTableCell38.Text = dieutri.Count > 0 ? dieutri.FirstOrDefault(o => o.IdCLS == dieutri.Min(p => p.IdCLS)).YLenh2 : "";
                    rep.lblBacSiKhamBenh.Text = string.Join(",", dieutri.Select(o => o.TenCB).Distinct());
                    rep.lblTenDungCu.Text = dieutri.Count > 0 ? dieutri.FirstOrDefault(o => o.IDCD == IDCD).TenDungCu : "";
                    rep.lblNhanXetRaVien.Text = nhanXetRaVien;
                    rep.lblTenKyThuatVien.Text = kyThuatVien;
                    if (type == TypePhieuDieuTri14018.DieuTri || type == TypePhieuDieuTri14018.KetQua)
                    {
                        for (int i = 0; i < dieutri.Count; i++)
                        {
                            XRTable xrTable = new XRTable();
                            if (i < 15)
                                xrTable = rep.tableLanDieuTri1;
                            else if (i < 30)
                                xrTable = rep.tableLanDieuTri2;
                            else if (i >= 30)
                                xrTable = rep.tableLanDieuTri3;
                            foreach (XRTableCell c in xrTable.Rows[1].Cells)
                            {
                                if (c.Name == ("cell" + (i + 1).ToString()))
                                {

                                    c.Text = dieutri[i].NgayTH != null ? (dieutri[i].NgayTH.Value.Day.ToString("D2") + "/" + dieutri[i].NgayTH.Value.Month.ToString("D2")) : "";
                                }
                            }
                        }
                    }
                    if (type == TypePhieuDieuTri14018.DieuTri)
                    {
                        //rep.lblTenKyThuatVien.Text = ""; //string.Join(",", dieutri.Select(o => o.TenCBth).Distinct());
                        rep.xrNgayDieuTri.Text = rep.lblNgayThang.Text = rep.lblTuNgay.Text = (dieutri != null && dieutri.Count > 0 && dieutri.Exists(o => o.NgayTH != null)) ? dieutri.Min(o => o.NgayTH).Value.ToString("dd/MM/yyyy") : "";
                        rep.lblDenNgay.Text = (dieutri != null && dieutri.Count > 0) ? dieutri.Max(o => o.NgayTH).Value.ToString("dd/MM/yyyy") : "";
                        rep.lblTongSoNgay.Text = (dieutri != null && dieutri.Count > 0 && dieutri.Exists(o => o.NgayTH != null)) ? dieutri.Count.ToString() : "0";
                    }
                    else if (type == TypePhieuDieuTri14018.ChiDinh)
                    {
                        rep.xrLabel3.Text = "PHIẾU CHỈ ĐỊNH NGÔN NGỮ TRỊ LIỆU";
                        //rep.xrTableCell46.Text = dieutri.Count > 0 ? dieutri.FirstOrDefault().NgayThang.Value.ToString("dd/MM/yyyy HH:mm") : "";
                    }
                    else if (type == TypePhieuDieuTri14018.KetQua)
                    {
                        rep.xrLabel3.Text = "PHIẾU KẾT QUẢ NGÔN NGỮ TRỊ LIỆU";
                        //rep.xrNgayDieuTri.Text = dieutri.Count > 0 ? dieutri.FirstOrDefault().NgayThang.Value.ToString("dd/MM/yyyy HH:mm") : "";
                    }

                    var chandoan = ChanDoan.Where(p => p.IDKB == ChanDoan.Max(s => s.IDKB)).FirstOrDefault().ChanDoan ?? "";
                    var chandoan2 = ChanDoan.Where(p => p.IDKB == ChanDoan.Max(s => s.IDKB)).FirstOrDefault().BenhKhac ?? "";
                    var MaIDCD = ChanDoan.Where(p => p.IDKB == ChanDoan.Max(s => s.IDKB)).FirstOrDefault().MaICD ?? "";
                    var MaIDCD2 = ChanDoan.Where(p => p.IDKB == ChanDoan.Max(s => s.IDKB)).FirstOrDefault().MaICD2 ?? "";
                    if (!string.IsNullOrWhiteSpace(chandoan))
                    {
                        rep.lblbenhchinh.Text = DungChung.Ham.FreshString_WithCode(chandoan, MaIDCD);
                    }
                    if (!string.IsNullOrWhiteSpace(chandoan2))
                    {
                        rep.lblBenhKemTheo.Text = DungChung.Ham.FreshString_WithCode(chandoan2, MaIDCD2);
                    }
                    rep.CreateDocument();

                    frmIn frm = new frmIn();
                    frm.prcIN.PrintingSystem = rep.PrintingSystem;
                    frm.ShowDialog();
                }
            }
        }

        #endregion
        public class YCXN
        {
            public int MaDV { set; get; }
            public string MaQD { set; get; }
            public string ck { set; get; }
            public string TenDV { set; get; }
            public int SoTT { set; get; }
        }
        public class XNVS
        {

            public int MaDV { get; set; }
            public string TenDV { get; set; }
            public string TenRG { get; set; }
            public string MaQD { get; set; }
            public int STT { get; set; }
            public string MaCC { get; set; }
        }
        public static string[] td_lhn = new string[] { "Tốc độ TT cm/s", "Tốc độ T.TR cm/s", "RI", "PI", "hướng dòng chảy", "Tốc độ TT cm/s", "Tốc độ T.TR cm/s", "RI", "PI", "hướng dòng chảy" }; // tiêu đề
        class XNMD
        {
            private string tenbv;
            private int mabenhnhan;
            private string tenkp;
            private string tenbenhnhan;
            private string diachi;
            private string yeucauchandoan;
            public int? GioiTinh { get; set; }
            public string SThe { get; set; }
            public int? DTuong { get; set; }
            public int? Tuoi { get; set; }
            public string TenBV
            { set { tenbv = value; } get { return tenbv; } }
            public string TenKP

            { set { tenkp = value; } get { return tenkp; } }
            public int MaBenhNhan
            { set { mabenhnhan = value; } get { return mabenhnhan; } }

            public string TenBNhan
            { set { tenbenhnhan = value; } get { return tenbenhnhan; } }

            public string DiaChi
            { set { diachi = value; } get { return diachi; } }

            public string YeuCauChanDoan
            { set { yeucauchandoan = value; } get { return yeucauchandoan; } }

            public DateTime? Ngay;
            public DateTime? NgayTh;


        }
        private static Image KiemTraTonTaiAnh(string DuongDan)
        {
            try
            {
                if (DuongDan != "")
                {
                    Image img = Image.FromFile(DuongDan);
                    return img;
                }
            }
            catch (Exception error) { MessageBox.Show("Không tìm thấy đường dẫn : " + DuongDan, "Thông báo"); }

            return null;
        }
        public static void InPhieuXetNghiemMienDich(QLBV_Database.QLBVEntities _data, int _mabnhan, int idcls, string TTN)
        {
            frmIn frm = new frmIn();
            rep_BC_ChiDinhXetNghiem rep = new rep_BC_ChiDinhXetNghiem();
            var BenhVien = (from bv in _data.BenhViens.Where(o => o.MaBV == DungChung.Bien.MaBV) select bv).ToList();
            var DichVuChiTiet = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _mabnhan)
                                 join cls in _data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                 join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                 join dv in _data.DichVus on cd.MaDV equals dv.MaDV

                                 join tndv in _data.TieuNhomDVs.Where(p => p.TenRG == TTN) on dv.IdTieuNhom equals tndv.IdTieuNhom
                                 join clsct in _data.CLScts on cd.IDCD equals clsct.IDCD
                                 join dvct in _data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                 join KP in _data.KPhongs on cls.MaKP equals KP.MaKP
                                 select new
                                 {

                                     maBnhan = bn.MaBNhan,
                                     tenbn = bn.TenBNhan,
                                     dchi = bn.DChi,
                                     chandoan = cls.ChanDoan,
                                     mdv = dvct.MaDV,
                                     stt = dvct.STT,
                                     dv = dvct.TenDVct,
                                     tsbt = dvct.TSBT,
                                     kq = clsct.KetQua,
                                     TenKP = KP.TenKP,
                                     Ngayth = cls.NgayTH,
                                     Ngay = cls.NgayThang,
                                     mcb = cls.MaCB,
                                     mcbth = cls.MaCBth,
                                     bn.SThe,
                                     bn.DTuong,
                                     bn.CapCuu,
                                     bn.Tuoi,
                                     cls.MaKPth,
                                     bn.GTinh,
                                     cls.Status
                                 }).OrderBy(p => p.stt).ToList();
            var VaoVien = _data.VaoViens.Where(p => p.MaBNhan == _mabnhan).ToList();
            var BNKB = _data.BNKBs.Where(p => p.MaBNhan == _mabnhan).ToList();
            rep.Idcls.Value = idcls;
            List<XNMD> XNMDs = new List<XNMD>();
            if (DichVuChiTiet.Count > 0)
            {
                foreach (var item in DichVuChiTiet)
                {

                    XNMD themmoi = new XNMD();
                    themmoi.TenBV = DungChung.Bien.TenCQ.ToUpper();
                    themmoi.MaBenhNhan = item.maBnhan;
                    themmoi.TenBNhan = item.tenbn;
                    themmoi.DiaChi = item.dchi;
                    themmoi.YeuCauChanDoan = item.chandoan;
                    themmoi.TenKP = item.TenKP.ToUpper();
                    themmoi.Ngay = item.Ngay;
                    themmoi.NgayTh = item.Ngayth;
                    themmoi.GioiTinh = item.GTinh;
                    themmoi.SThe = item.SThe;
                    themmoi.DTuong = item.CapCuu;
                    themmoi.Tuoi = item.Tuoi;
                    XNMDs.Add(themmoi);
                }
                if (XNMDs.Select(p => p.Ngay) == null)
                {
                    rep.NgayThang.Value = "Ngày.....tháng.....năm.....";
                }
                else
                {
                    rep.NgayThang.Value = DungChung.Ham.StringNgay(XNMDs.Select(p => p.Ngay).FirstOrDefault().ToString(), 1);
                }
                if (XNMDs.Select(p => p.NgayTh) == null)
                {
                    rep.NgaTH.Value = "Ngày.....tháng.....năm.....";
                }
                else
                {

                    rep.NgaTH.Value = DungChung.Ham.NgaySangChu(Convert.ToDateTime(XNMDs.FirstOrDefault().NgayTh), 1);
                }

                rep.lblCB.Text = DungChung.Ham._getTenCB(_data, DichVuChiTiet.Select(p => p.mcb).FirstOrDefault().ToString());
                if (DichVuChiTiet.FirstOrDefault().mcbth != null)
                {
                    rep.MaCanBoTH.Text = DungChung.Ham._getTenCB(_data, DichVuChiTiet.Select(p => p.mcbth).FirstOrDefault().ToString());
                }
                if (XNMDs.FirstOrDefault().SThe != "")
                {
                    rep.Ma1.Value = XNMDs.FirstOrDefault().SThe.Substring(0, 3);
                    rep.Ma2.Value = XNMDs.FirstOrDefault().SThe.Substring(3, 2);
                    rep.Ma3.Value = XNMDs.FirstOrDefault().SThe.Substring(5, 2);
                    rep.Ma4.Value = XNMDs.FirstOrDefault().SThe.Substring(7, 3);
                    rep.Ma5.Value = XNMDs.FirstOrDefault().SThe.Substring(10, 5);
                }
                if (DungChung.Bien.MaBV == "30010")
                {
                    int? MKPTH = Convert.ToInt32(DichVuChiTiet.Select(o => o.MaKPth).FirstOrDefault().ToString());
                    rep.KPTH.Value = _data.KPhongs.Where(p => p.MaKP == MKPTH).Select(p => p.TenKP).FirstOrDefault().ToString();
                }
                if (DichVuChiTiet.FirstOrDefault().GTinh == 0)
                {
                    rep.Nam.Value = "/";
                }
                else
                {
                    rep.Nu.Value = "/";
                }
                if (XNMDs.FirstOrDefault().DTuong == 0)
                {
                    rep.Thuong.Value = "X";
                }
                else
                {
                    rep.CapCuu.Value = "X";
                }
                if (VaoVien.Count() > 0 && VaoVien.FirstOrDefault().SoVV != null)
                {
                    rep.SoVV.Value = VaoVien.FirstOrDefault().SoVV;
                }
                else
                {
                    rep.SoVV.Value = idcls;
                }
                if (BNKB.Count > 0 && BNKB.FirstOrDefault().Buong != null && BNKB.FirstOrDefault().Buong != null)
                {
                    rep.Buong.Value = BNKB.FirstOrDefault().Buong;
                    rep.Giuong.Value = BNKB.FirstOrDefault().Giuong;
                }
                rep.Tuoi.Value = XNMDs.FirstOrDefault().Tuoi;
                rep.TenBNhan.Value = XNMDs.FirstOrDefault().TenBNhan;
                rep.TenBV.Value = DungChung.Bien.TenCQ.ToUpper();
                rep.TenCCCQ.Value = DungChung.Bien.TenCQCQ.ToUpper();
                rep.Khoa.Value = XNMDs.FirstOrDefault().TenKP;
                rep.YeuCauChanDoan.Value = XNMDs.FirstOrDefault().YeuCauChanDoan;
                rep.DiaChi.Value = XNMDs.FirstOrDefault().DiaChi;
                rep.MaBenhNhan.Value = _mabnhan;
                if (DungChung.Bien.MaBV == "27023")
                {
                    foreach (var item in DichVuChiTiet)
                    {
                        if (item.Status == 0)
                        {
                        }
                    }
                }
                rep.CreateDocument();
                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                frm.ShowDialog();
            }
            else
            {
                MessageBox.Show("Không có dữ liệu", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
        }
        public static void InPhieuXetNghiemMienDich(QLBV_Database.QLBVEntities _data, int _mabnhan, int idcls, string TTN, List<int> _lIdCLS, List<int?> _lMaDV)
        {
            frmIn frm = new frmIn();
            rep_BC_ChiDinhXetNghiem rep = new rep_BC_ChiDinhXetNghiem(_lIdCLS, _lMaDV);
            var BenhVien = (from bv in _data.BenhViens.Where(o => o.MaBV == DungChung.Bien.MaBV) select bv).ToList();
            var DichVuChiTiet = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _mabnhan)
                                 join cls in _data.CLS.Where(p => p.IdCLS == idcls) on bn.MaBNhan equals cls.MaBNhan
                                 join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                 join dv in _data.DichVus on cd.MaDV equals dv.MaDV

                                 join tndv in _data.TieuNhomDVs.Where(p => p.TenRG == TTN) on dv.IdTieuNhom equals tndv.IdTieuNhom
                                 join clsct in _data.CLScts on cd.IDCD equals clsct.IDCD
                                 join dvct in _data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                 join KP in _data.KPhongs on cls.MaKP equals KP.MaKP
                                 select new
                                 {

                                     maBnhan = bn.MaBNhan,
                                     tenbn = bn.TenBNhan,
                                     dchi = bn.DChi,
                                     chandoan = cls.ChanDoan,
                                     mdv = dvct.MaDV,
                                     stt = dvct.STT,
                                     dv = dvct.TenDVct,
                                     tsbt = dvct.TSBT,
                                     kq = clsct.KetQua,
                                     TenKP = KP.TenKP,
                                     Ngayth = cls.NgayTH,
                                     Ngay = cls.NgayThang,
                                     mcb = cls.MaCB,
                                     mcbth = cls.MaCBth,
                                     bn.SThe,
                                     bn.DTuong,
                                     bn.CapCuu,
                                     bn.Tuoi,
                                     cls.MaKPth,
                                     bn.GTinh,
                                 }).OrderBy(p => p.stt).ToList();
            var VaoVien = _data.VaoViens.Where(p => p.MaBNhan == _mabnhan).ToList();
            var BNKB = _data.BNKBs.Where(p => p.MaBNhan == _mabnhan).ToList();
            rep.Idcls.Value = idcls;
            List<XNMD> XNMDs = new List<XNMD>();
            if (DichVuChiTiet.Count > 0)
            {
                foreach (var item in DichVuChiTiet)
                {

                    XNMD themmoi = new XNMD();
                    themmoi.TenBV = DungChung.Bien.TenCQ.ToUpper();
                    themmoi.MaBenhNhan = item.maBnhan;
                    themmoi.TenBNhan = item.tenbn;
                    themmoi.DiaChi = item.dchi;
                    themmoi.YeuCauChanDoan = item.chandoan;
                    themmoi.TenKP = item.TenKP.ToUpper();
                    themmoi.Ngay = item.Ngay;
                    themmoi.NgayTh = item.Ngayth;
                    themmoi.GioiTinh = item.GTinh;
                    themmoi.SThe = item.SThe;
                    themmoi.DTuong = item.CapCuu;
                    themmoi.Tuoi = item.Tuoi;
                    XNMDs.Add(themmoi);
                }
                if (XNMDs.Select(p => p.Ngay) == null)
                {
                    rep.NgayThang.Value = "Ngày.....tháng.....năm.....";
                }
                else
                {
                    rep.NgayThang.Value = DungChung.Ham.StringNgay(XNMDs.Select(p => p.Ngay).FirstOrDefault().ToString(), 1);
                }
                if (XNMDs.Select(p => p.NgayTh) == null)
                {
                    rep.NgaTH.Value = "Ngày.....tháng.....năm.....";
                }
                else
                {

                    rep.NgaTH.Value = DungChung.Ham.NgaySangChu(Convert.ToDateTime(XNMDs.FirstOrDefault().NgayTh), 1);
                }

                rep.lblCB.Text = DungChung.Ham._getTenCB(_data, DichVuChiTiet.Select(p => p.mcb).FirstOrDefault().ToString());
                if (DichVuChiTiet.FirstOrDefault().mcbth != null)
                {
                    rep.MaCanBoTH.Text = DungChung.Ham._getTenCB(_data, DichVuChiTiet.Select(p => p.mcbth).FirstOrDefault().ToString());
                }
                if (XNMDs.FirstOrDefault().SThe != "")
                {
                    rep.Ma1.Value = XNMDs.FirstOrDefault().SThe.Substring(0, 3);
                    rep.Ma2.Value = XNMDs.FirstOrDefault().SThe.Substring(3, 2);
                    rep.Ma3.Value = XNMDs.FirstOrDefault().SThe.Substring(5, 2);
                    rep.Ma4.Value = XNMDs.FirstOrDefault().SThe.Substring(7, 3);
                    rep.Ma5.Value = XNMDs.FirstOrDefault().SThe.Substring(10, 5);
                }
                if (DungChung.Bien.MaBV == "30010")
                {
                    int? MKPTH = Convert.ToInt32(DichVuChiTiet.Select(o => o.MaKPth).FirstOrDefault().ToString());
                    rep.KPTH.Value = _data.KPhongs.Where(p => p.MaKP == MKPTH).Select(p => p.TenKP).FirstOrDefault().ToString();
                }
                if (DichVuChiTiet.FirstOrDefault().GTinh == 0)
                {
                    rep.Nam.Value = "/";
                }
                else
                {
                    rep.Nu.Value = "/";
                }
                if (XNMDs.FirstOrDefault().DTuong == 0)
                {
                    rep.Thuong.Value = "X";
                }
                else
                {
                    rep.CapCuu.Value = "X";
                }
                if (VaoVien.Count() > 0 && VaoVien.FirstOrDefault().SoVV != null)
                {
                    rep.SoVV.Value = VaoVien.FirstOrDefault().SoVV;
                }
                else
                {
                    rep.SoVV.Value = idcls;
                }
                if (BNKB.Count > 0 && BNKB.FirstOrDefault().Buong != null && BNKB.FirstOrDefault().Buong != null)
                {
                    rep.Buong.Value = BNKB.FirstOrDefault().Buong;
                    rep.Giuong.Value = BNKB.FirstOrDefault().Giuong;
                }
                rep.Tuoi.Value = XNMDs.FirstOrDefault().Tuoi;
                rep.TenBNhan.Value = XNMDs.FirstOrDefault().TenBNhan;
                rep.TenBV.Value = DungChung.Bien.TenCQ.ToUpper();
                rep.TenCCCQ.Value = DungChung.Bien.TenCQCQ.ToUpper();
                rep.Khoa.Value = XNMDs.FirstOrDefault().TenKP;
                rep.YeuCauChanDoan.Value = XNMDs.FirstOrDefault().YeuCauChanDoan;
                rep.DiaChi.Value = XNMDs.FirstOrDefault().DiaChi;
                rep.MaBenhNhan.Value = _mabnhan;
                rep.CreateDocument();
                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                frm.ShowDialog();
            }
            else
            {
                MessageBox.Show("Không có dữ liệu", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
        }

        public static void PhieuTHPHCN(int _int_maBN)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            BaoCao.THKyThuatPHCN rep = new BaoCao.THKyThuatPHCN();
            frmIn frm = new frmIn();


            var dienbien = (from db in data.DienBiens.Where(p => p.MaBNhan == _int_maBN && p.Ploai == 3)
                            select new
                            {
                                NgayGio = db.NgayNhap,
                                MoTa = db.DienBien1,
                                TenDV = db.YLenh,
                                ThoiGianTH = db.ThucHienYL,
                                NguoiThucHien = db.HuongDTri,
                                BSCD = db.MaCB,
                                KetQua = db.KetQua,
                            }).ToList();
            if (dienbien.Count > 0)
            {
                List<DB> db = new List<DB>();
                foreach (var item in dienbien)
                {
                    DB c = new DB();
                    c.NgayGio = (item.NgayGio.ToString()).Substring(0, 10);
                    c.MoTa = item.MoTa;
                    c.TenDV = item.TenDV;
                    c.ThoiGianTH = item.ThoiGianTH;
                    c.NguoiThucHien = item.NguoiThucHien;
                    var bs = data.CanBoes.Single(p => p.MaCB == item.BSCD);
                    if (bs != null)
                    {
                        c.BSCD = bs.TenCB;
                    }
                    c.KetQua = item.KetQua;
                    db.Add(c);
                }
                var ttbn = (from bn in data.BenhNhans
                            join vv in data.VaoViens on bn.MaBNhan equals vv.MaBNhan
                            join kp in data.KPhongs on bn.MaKP equals kp.MaKP
                            join bnkb in data.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                            where (bn.MaBNhan == _int_maBN)
                            select new
                            {
                                bn.TenBNhan,
                                GTinh = bn.GTinh == 0 ? "Nữ" : "Nam",
                                bn.Tuoi,
                                bn.SThe,
                                bn.DChi,
                                bnkb.IDKB,
                                bnkb.ChanDoan,
                                bnkb.BenhKhac,
                                vv.NgayVao,
                                bnkb.Buong,
                                bnkb.Giuong,
                                kp.TenKP,
                                vv.SoVV,
                            }).OrderByDescending(p => p.IDKB).ToList();
                if (ttbn.Count == 0)
                {
                    MessageBox.Show("Bệnh nhân chưa đủ thông tin vào viện!");
                    return;
                }
                var a = ttbn.FirstOrDefault();
                rep.CQCQ.Value = DungChung.Bien.TenCQCQ.ToUpper();
                rep.CQ.Value = DungChung.Bien.TenCQ.ToUpper();
                rep.Khoa.Value = a.TenKP.ToUpper();
                rep.HoTen.Value = a.TenBNhan.ToUpper();
                if (DungChung.Bien.MaBV == "24012")
                {
                    rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(data, _int_maBN, DungChung.Bien.formatAge_24012);
                }
                else
                    rep.Tuoi.Value = a.Tuoi;
                rep.GioiTinh.Value = a.GTinh;
                rep.ChanDoan.Value = a.ChanDoan + "; " + DungChung.Ham.FreshString(a.BenhKhac);
                rep.Buong.Value = a.Buong;
                rep.Giuong.Value = a.Giuong;
                rep.SoVV.Value = a.SoVV;
                rep.DataSource = db;
                rep.Binding();
                rep.CreateDocument();
                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                frm.ShowDialog();
            }
        }

        public static void PhieuDieuTriVLTL(int _int_maBN)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(DungChung.Bien.StrCon);
            BaoCao.Rep_TheoDoiDieuTriVatLyTriLieu rep = new BaoCao.Rep_TheoDoiDieuTriVatLyTriLieu();
            frmIn frm = new frmIn();
            var tt = (from cls in data.CLS
                      join cd in data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                      join dv in data.DichVus on cd.MaDV equals dv.MaDV
                      join tn in data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                      where (cls.MaBNhan == _int_maBN && tn.TenTN == "Thủ thuật")
                      select new
                      {
                          dv.TenDV,
                          cd.ChiDinh1
                      }).OrderBy(p => p.TenDV).ToList();
            if (tt.Count > 0)
            {
                var ttbn = (from bn in data.BenhNhans
                            join vv in data.VaoViens on bn.MaBNhan equals vv.MaBNhan
                            join kp in data.KPhongs on bn.MaKP equals kp.MaKP
                            join bnkb in data.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                            where (bn.MaBNhan == _int_maBN)
                            select new
                            {
                                bn.TenBNhan,
                                GTinh = bn.GTinh == 0 ? "Nữ" : "Nam",
                                bn.Tuoi,
                                bn.SThe,
                                bn.DChi,
                                bnkb.IDKB,
                                bnkb.ChanDoan,
                                bnkb.BenhKhac,
                                vv.NgayVao,
                                kp.TenKP
                            }).OrderByDescending(p => p.IDKB).ToList();
                if (ttbn.Count == 0)
                {
                    MessageBox.Show("Bệnh nhân chưa đủ thông tin vào viện!");
                    return;
                }
                var a = ttbn.FirstOrDefault();
                rep.CQCQ.Value = DungChung.Bien.TenCQCQ.ToUpper();
                rep.CQ.Value = DungChung.Bien.TenCQ.ToUpper();
                rep.Khoa.Value = a.TenKP.ToUpper();
                rep.HoTen.Value = a.TenBNhan.ToUpper();
                rep.GioiTinh.Value = a.GTinh;
                rep.SoTheBHYT.Value = a.SThe;
                rep.DiaChi.Value = a.DChi;
                rep.ChanDoan.Value = a.ChanDoan + "; " + DungChung.Ham.FreshString(a.BenhKhac);
                rep.Tuoi.Value = DungChung.Bien.MaBV == "24012" ? DungChung.Ham.TuoitheoThang(data, _int_maBN, DungChung.Bien.formatAge_24012) : a.Tuoi.ToString();
                if (a.NgayVao != null)
                {
                    DateTime ngayvao = Convert.ToDateTime(a.NgayVao);
                    rep.NgayVV.Value = DungChung.Ham.NgaySangChu(ngayvao, 7);
                    rep.Ngay01.Value = DungChung.Ham.NgaySangChu(ngayvao, 15);
                    rep.Ngay02.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(1), 15);
                    rep.Ngay03.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(2), 15);
                    rep.Ngay04.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(3), 15);
                    rep.Ngay05.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(4), 15);
                    rep.Ngay06.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(5), 15);
                    rep.Ngay07.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(6), 15);
                    rep.Ngay08.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(7), 15);
                    rep.Ngay09.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(8), 15);
                    rep.Ngay10.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(9), 15);
                    rep.Ngay11.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(10), 15);
                    rep.Ngay12.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(11), 15);
                    rep.Ngay13.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(12), 15);
                    rep.Ngay14.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(13), 15);
                    rep.Ngay15.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(14), 15);
                    rep.Ngay16.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(15), 15);
                    rep.Ngay17.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(16), 15);
                    rep.Ngay18.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(17), 15);
                    rep.Ngay19.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(18), 15);
                    rep.Ngay20.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(19), 15);
                    rep.Ngay21.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(20), 15);
                    rep.Ngay22.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(21), 15);
                    rep.Ngay23.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(22), 15);
                    rep.Ngay24.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(23), 15);
                    rep.Ngay25.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(24), 15);
                    rep.Ngay26.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(25), 15);
                    rep.Ngay27.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(26), 15);
                    rep.Ngay28.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(27), 15);
                    rep.Ngay29.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(28), 15);
                    rep.Ngay30.Value = DungChung.Ham.NgaySangChu(ngayvao.AddDays(29), 15);
                    var ravien = data.RaViens.Where(p => p.MaBNhan == _int_maBN).Select(p => p.NgayRa).FirstOrDefault().ToString();
                    rep.NgayRV.Value = !string.IsNullOrEmpty(ravien) ? DungChung.Ham.NgaySangChu(Convert.ToDateTime(ravien), 7) : "";
                }
                else
                {
                    MessageBox.Show("Bệnh nhân chưa đủ thông tin!");
                    return;
                }

                List<VLTL> list = new List<VLTL>();
                foreach (var item in tt)
                {
                    VLTL b = new VLTL();
                    b.TenDV = item.TenDV + " - YC: " + item.ChiDinh1;
                    list.Add(b);
                }
                var l1 = (from l in list
                          group new { l } by new { l.TenDV } into k
                          select new { k.Key.TenDV }).ToList();
                rep.DataSource = l1;
                rep.Binding();
                rep.CreateDocument();
                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                frm.ShowDialog();
            }
            else
            {
                MessageBox.Show("Bệnh nhân chưa đủ thông tin!");
                return;
            }
        }
        public class VLTL
        {
            public string TenDV { get; set; }
            public DateTime? NgayTH { get; set; }
            public string TGTH { get; set; }
            public string PHCN_DienBienBenh { get; set; }
            public string CBTH { get; set; }
            public string CBCD { get; set; }
            public string PHCN_XacNhan { get; set; }

            public DateTime? NgayBDTH { get; set; }
            public string MaCBTH { get; set; }
            public string MaCB { get; set; }
            public int? IDCD { set; get; }


        }

        public class DB
        {
            public string TenDV { get; set; }
            public string NgayGio { get; set; }
            public string ThoiGianTH { get; set; }
            public string MoTa { get; set; }
            public string NguoiThucHien { get; set; }
            public string BSCD { get; set; }
            public string KetQua { get; set; }
        }
    }
}
