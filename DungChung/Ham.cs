//Bàn phím cơ EDRA EK361W
using DevExpress.XtraReports.UI;
using DevExpress.XtraSplashScreen;
using Microsoft.Win32;
using Newtonsoft.Json;
using OfficeOpenXml;
using QLBV.FormThamSo;
using QLBV_Database;
using QLBV_Database.Common;
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Drawing.Printing;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Net.NetworkInformation;
using System.Net.Security;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using System.Windows.Forms;
using System.Xml;

namespace QLBV.DungChung
{
    public class Ham
    {
        #region Soncx
        #region |Ngày sinh , tuổi

        public static string GhepNgaySinh(string format, string namsinh, string thangsinh, string ngaysinh)
        {
            string rs = "";
            if (string.IsNullOrWhiteSpace(thangsinh) || string.IsNullOrWhiteSpace(ngaysinh))
            {
                rs = namsinh;
            }
            else
            {
                rs = ngaysinh + format + thangsinh + format + namsinh;
            }
            return rs;
        }

        public static string TinhTuoiBenhNhan(QLBV_Database.QLBVEntities data, int mabn)
        {
            string a = "";
            var bn = (from bn1 in data.BenhNhans.Where(p => p.MaBNhan == mabn) select new { bn1.NgaySinh, bn1.ThangSinh, bn1.NamSinh }).ToList();
            if (bn.Count > 0)
            {
                a = CalculateAge(bn.First().NgaySinh, bn.First().ThangSinh, bn.First().NamSinh, " tháng.");
            }
            return a;
        }

        public static int CalculateAgeByDate(string ngaySinh, string thangSinh, string namSinh)
        {
            if (string.IsNullOrEmpty(ngaySinh) || string.IsNullOrWhiteSpace(ngaySinh))
            {
                ngaySinh = "01";
            }
            if (string.IsNullOrEmpty(thangSinh) || string.IsNullOrWhiteSpace(thangSinh))
            {
                thangSinh = "01";
            }

            if (!string.IsNullOrEmpty(ngaySinh) && (ngaySinh == "0" || ngaySinh == "00"))
            {
                ngaySinh = "01";
            }

            if (!string.IsNullOrEmpty(thangSinh) && (thangSinh == "0" || thangSinh == "00"))
            {
                thangSinh = "01";
            }

            var today = DateTime.Now.Date;
            int tuoi = 0;
            var ngayThangNamSinh = DateTime.Parse((string.IsNullOrWhiteSpace(ngaySinh) || string.IsNullOrWhiteSpace(thangSinh)) ? ("01/01/" + namSinh) : (ngaySinh + "/" + thangSinh + "/" + namSinh));
            tuoi = today.Year - ngayThangNamSinh.Year;
            if (ngayThangNamSinh.Date > today.AddYears(-tuoi)) tuoi--;
            if (tuoi >= 6)
                tuoi = today.Year - ngayThangNamSinh.Year;
            return tuoi;
        }

        public static string CalculateAge(string ngaySinh, string thangSinh, string namSinh, string ghepChu)
        {
            string soTuoi = "";

            var ngayThangNamSinh = DateTime.Parse((string.IsNullOrWhiteSpace(ngaySinh) || string.IsNullOrWhiteSpace(thangSinh)) ? ("01/01/" + namSinh) : (ngaySinh + "/" + thangSinh + "/" + namSinh));

            var thang = (DateTime.Now.Month - ngayThangNamSinh.Month) + 12 * (DateTime.Now.Year - ngayThangNamSinh.Year);
            var tuoi = DateTime.Now.Year - ngayThangNamSinh.Year;
            if (ngayThangNamSinh.Date > DateTime.Now.Date.AddYears(-tuoi)) tuoi--;
            soTuoi = tuoi < 6 ? (thang.ToString() + (!string.IsNullOrWhiteSpace(ghepChu) ? (" " + ghepChu) : "")) : ((DateTime.Now.Year - ngayThangNamSinh.Year).ToString());

            return soTuoi;
        }

        #endregion |Ngày sinh , tuổi
        #region Lấy logo

        public static Image GetLogo()
        {
            QLBV_Database.QLBVEntities _db = new QLBV_Database.QLBVEntities(Bien.StrCon);

            var hthong = _db.HTHONGs.FirstOrDefault(o => o.MaBV == Bien.MaBV);
            if (hthong != null && !string.IsNullOrWhiteSpace(hthong.ImageURL))
            {
                if (Bien.MaBV == "24272")
                {
                    try
                    {
                        WebClient ftpClient = new WebClient();

                        byte[] imageByte = ftpClient.DownloadData(hthong.ImageURL);

                        MemoryStream mStream = new MemoryStream();
                        mStream.Write(imageByte, 0, Convert.ToInt32(imageByte.Length));
                        Bitmap bm = new Bitmap(mStream, false);
                        mStream.Dispose();

                        return bm;
                    }
                    catch (Exception)
                    {
                        return null;
                    }
                }
                else
                {
                    if (File.Exists(hthong.ImageURL))
                    {
                        return Image.FromFile(hthong.ImageURL);
                    }
                }

            }
            return null;
        }

        public static string GetDiaChiBV()
        {
            QLBV_Database.QLBVEntities _db = new QLBV_Database.QLBVEntities(Bien.StrCon);
            var hethong = _db.HTHONGs.FirstOrDefault(p => p.MaBV == Bien.MaBV);
            if (hethong != null && !string.IsNullOrWhiteSpace(hethong.DiaChi))
            {
                return hethong.DiaChi;
            }
            return "";
        }

        public static string GetSDTBV()
        {
            QLBV_Database.QLBVEntities _db = new QLBV_Database.QLBVEntities(Bien.StrCon);
            var hethong = _db.HTHONGs.FirstOrDefault(p => p.MaBV == Bien.MaBV);
            if (hethong != null && !string.IsNullOrWhiteSpace(hethong.SDT))
            {
                return hethong.SDT;
            }
            return "";
        }

        public static string GetFaxBV()
        {
            QLBV_Database.QLBVEntities _db = new QLBV_Database.QLBVEntities(Bien.StrCon);
            var hethong = _db.HTHONGs.FirstOrDefault(p => p.MaBV == Bien.MaBV);
            if (hethong != null && !string.IsNullOrWhiteSpace(hethong.Fax))
            {
                return hethong.Fax;
            }
            return "";
        }

        #endregion Lấy logo
        #region Play voice

        public static string CheckfileandDownload(string text, ref string result)
        {
            List<FileInfo> dsFileMp3 = new List<FileInfo>();
            DirectoryInfo _direc = new DirectoryInfo(Application.StartupPath + Bien.SoundPath);
            if (_direc.Exists)
            {
                dsFileMp3 = _direc.GetFiles("*.mp3").ToList();
            }
            string _filenameTest = text + ".mp3";
            bool flag = false;
            string _fullname = _direc.FullName + @"\";
            string kq = "";
            foreach (FileInfo _file in dsFileMp3)
            {
                if (_file.Name == _filenameTest)
                {
                    flag = true;
                    _fullname = _file.FullName;
                    break;
                }
            }

            if (!flag)
            {
                return "";
                //if (InternetConnection.IsConnectedToInternet())//them kiem tra timeout to internet
                //{
                //    if (InternetConnection.CheckConnectionTimeOut())
                //    {
                //        string src = getURLfilemp3(text);
                //        if (!string.IsNullOrEmpty(src) && !string.IsNullOrWhiteSpace(src))
                //        {
                //            kq = _fullname + _filenameTest;
                //            using (WebClient wc = new WebClient())
                //            {
                //                wc.DownloadFileAsync(new Uri(src), kq);
                //            }
                //        }
                //        else
                //        {
                //            kq = "";
                //        }
                //    }
                //    else
                //    {
                //        result = "InternetConnection Timeout";
                //        kq = "";
                //    }
                //}
                //else
                //{
                //    result = "Không có kết nối internet";
                //    return "";
                //}
            }
            else
                return _fullname;
            if (File.Exists(kq))
            {
                return kq;
            }
            else
            {
                result = "Không tìm thấy tệp tin âm thanh " + text;
                return "";
            }
        }

        private static string getURLfilemp3(string text)
        {
            using (HttpClient http = new HttpClient())
            {
                try
                {
                    string src = "";
                    string baseurl = "https://api.soundoftext.com";

                    http.BaseAddress = new Uri(baseurl);
                    http.DefaultRequestHeaders.Accept.Clear();
                    http.DefaultRequestHeaders.TryAddWithoutValidation("Content-Type", "application/json");
                    http.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                    Dictionary<string, string> data = new Dictionary<string, string>();
                    data.Add("text", text);
                    data.Add("voice", "vi-VN");
                    Dictionary<string, Dictionary<string, string>> datap = new Dictionary<string, Dictionary<string, string>>();
                    datap.Add("data", data);
                    var response = http.PostAsJsonAsync("/sounds", datap).Result;

                    //String payload = "";
                    //http.DefaultRequestHeaders.Add("api-key", "NSioWZ9WeJYb1yXa4tHJ4mUIm5AG7V1J");
                    //http.DefaultRequestHeaders.Add("speed", "");
                    //http.DefaultRequestHeaders.Add("voice", "banmai");
                    //var response =  http.PostAsync("https://api.fpt.ai/hmi/tts/v5", new StringContent(payload));
                    //return  response.Content.ReadAsStringAsync();

                    //http.BaseAddress = new Uri("https://api.fpt.ai/hmi/tts/v5");
                    //http.DefaultRequestHeaders.Accept.Clear();
                    //http.DefaultRequestHeaders.Add("api-key", "NSioWZ9WeJYb1yXa4tHJ4mUIm5AG7V1J");
                    //http.DefaultRequestHeaders.Add("speed", "");
                    //http.DefaultRequestHeaders.Add("voice", "banmai");
                    //http.DefaultRequestHeaders.TryAddWithoutValidation("Content-Type", "application/json");
                    //http.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                    //Dictionary<string, string> data = new Dictionary<string, string>();
                    //data.Add("text", text);
                    //data.Add("voice", "vi-VN");
                    //Dictionary<string, Dictionary<string, string>> datap = new Dictionary<string, Dictionary<string, string>>();
                    //datap.Add("data", data);
                    //var response = http.PostAsJsonAsync("/sounds", datap).Result;

                    if (response.IsSuccessStatusCode)
                    {
                        int dem = 0;
                        response responseData = Newtonsoft.Json.JsonConvert.DeserializeObject<response>(response.Content.ReadAsStringAsync().Result);
                        while (string.IsNullOrEmpty(src) && dem <= 50)
                        {
                            var rp2 = http.GetAsync("/sounds/" + responseData.id).Result;

                            if (rp2.IsSuccessStatusCode)
                            {
                                GetMessage location = Newtonsoft.Json.JsonConvert.DeserializeObject<GetMessage>(rp2.Content.ReadAsStringAsync().Result);
                                src = location.location;
                                dem++;
                            }
                        }
                    }
                    else
                    {
                        response responseData2 = Newtonsoft.Json.JsonConvert.DeserializeObject<response>(response.Content.ReadAsStringAsync().Result);
                        string d = responseData2.message;
                    }
                    return src;
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message);
                    return "";
                }
            }
        }

        #endregion Play voice
        #region In

        public static void LoadObjectToParameter(object data, Dictionary<string, object> dicParameter)
        {
            if (data == null)
                return;
            Type myType = data.GetType();
            IList<PropertyInfo> props = new List<PropertyInfo>(myType.GetProperties());

            foreach (PropertyInfo prop in props)
            {
                object propValue = prop.GetValue(data, null);

                if (propValue != null)
                {
                    Type type = propValue.GetType();
                    if (type.FullName.Contains("System.Data.Entity.DynamicProxies") || type.FullName.Contains("System.Collections.Generic.HashSet") || type.IsArray || type.IsEnum)
                        continue;
                }

                dicParameter[prop.Name] = propValue;
                // Do something with propValue
            }
        }

        public static void LoadCommonParameter(Dictionary<string, object> dicParameter, QLBV_Database.QLBVEntities dataContext)
        {
            dicParameter["Common_FormatString0"] = Bien.FormatString[0];
            dicParameter["Common_FormatString1"] = Bien.FormatString[1];
            dicParameter["Common_CurrentTime"] = DateTime.Now.ToString("dd/MM/yyyy HH:mm:ss");
            dicParameter["Common_CurrentTime_Str"] = DungChung.Ham.NgaySangChu(DateTime.Now);
            dicParameter["Common_TenCQCQ"] = Bien.TenCQCQ;
            dicParameter["Common_TenCQ"] = Bien.TenCQ;
            dicParameter["Common_TenCQCQ_Upper"] = Bien.TenCQCQ.ToUpper();
            dicParameter["Common_TenCQ_Upper"] = Bien.TenCQ.ToUpper();
            dicParameter["Common_TenCQBH"] = Bien.TenCQBH;
            dicParameter["Common_TenCQCQBH"] = Bien.TenCQCQBH;
            dicParameter["Common_TenCQrg"] = Bien.TenCQrg;
            dicParameter["Common_ThuKho"] = Bien.ThuKho;
            dicParameter["Common_TruongKhoaDuoc"] = Bien.TruongKhoaDuoc;
            dicParameter["Common_TruongKhoaLS"] = Bien.TruongKhoaLS;
            if (Bien.MaBV == "01071" || Bien.MaBV == "01049")
            {
                dicParameter["Common_SDTCQ"] = "Điện thoại: " + Bien.SDTCQ;
            }
            else
                dicParameter["Common_SDTCQ"] = Bien.SDTCQ;

            dicParameter["Common_SDTCQ14018"] = "Điện thoại: " + Bien.SDTCQ;
            dicParameter["Common_NguoiLapBieu"] = Bien.NguoiLapBieu;
            dicParameter["Common_MaKP"] = Bien.MaKP;
            var kp = dataContext.KPhongs.FirstOrDefault(o => o.MaKP == Bien.MaKP);
            if (kp != null)
            {
                dicParameter["Common_TenKP"] = kp.TenKP;
            }
            dicParameter["Common_MaBV"] = Bien.MaBV;
            dicParameter["Common_MaCB"] = Bien.MaCB;
            var cb = dataContext.CanBoes.FirstOrDefault(o => o.MaCB == Bien.MaCB);
            if (cb != null)
            {
                dicParameter["Common_TenCB"] = cb.TenCB;
            }
            dicParameter["Common_KeToanTruong"] = Bien.KeToanTruong;
            dicParameter["Common_KeToanVP"] = Bien.KeToanVP;
            dicParameter["Common_KeToanVPdv"] = Bien.KeToanVPdv;
            dicParameter["Common_KeToanVPnt"] = Bien.KeToanVPnt;
            dicParameter["Common_GiamDoc"] = Bien.GiamDoc;
            dicParameter["Common_DiaDanh"] = Bien.DiaDanh;
            dicParameter["Common_DiaChi"] = Bien.DiaChi;
            dicParameter["Common_ChuyenKhoa"] = Bien.ChuyenKhoa;
            dicParameter["Common_MaNSach"] = Bien.MaNSach;
        }

        public static bool Print(string _maIn, IList _data, Dictionary<string, object> dicParameter, bool _printNow)
        {
            bool isPrint = true;
            QLBV_Database.QLBVEntities _db = new QLBV_Database.QLBVEntities(Bien.StrCon);
            var chIn = _db.CauHinhIns.FirstOrDefault(o => o.MaIn == _maIn);
            if (chIn != null)
            {
                if (!chIn.Status)
                {
                    MessageBox.Show("Mã in không hoạt động", "Thông báo");
                    isPrint = false;
                }
                string reportUrl = Path.Combine(Bien.ReportPath, chIn.FileName + ".repx");
                if (!string.IsNullOrWhiteSpace(Bien.ReportPath) && !Directory.Exists(Bien.ReportPath))
                {
                    Directory.CreateDirectory(Bien.ReportPath);
                }
                if (File.Exists(reportUrl))
                {
                    DataSet ds = new DataSet();
                    if (_data != null)
                    {
                        ds.Tables.Add(ReportManager.ReportManager.ConvertToDataTable(_data));
                    }

                    LoadCommonParameter(dicParameter, _db);

                    //XtraReport report = ReportManager.ReportManager.GenerateReport(ds, dicParameter, reportUrl);
                    XtraReport report = new XtraReport();
                    report.LoadLayout(reportUrl);
                    report.DataSource = ds;

                    foreach (var item in dicParameter)
                    {
                        if (report.Parameters != null && report.Parameters.Count > 0)
                        {
                            var paraInReport = report.Parameters.Cast<DevExpress.XtraReports.Parameters.Parameter>().FirstOrDefault(f => f.Name == item.Key);
                            if (paraInReport == null)
                            {
                                DevExpress.XtraReports.Parameters.Parameter para = new DevExpress.XtraReports.Parameters.Parameter();
                                para.Name = item.Key;
                                para.Value = item.Value;
                                report.Parameters.Add(para);
                            }
                            else
                            {
                                paraInReport.Value = item.Value;
                            }
                        }
                    }

                    if (report != null)
                    {
                        if (_printNow)
                        {
                            PrintReport(report);
                        }
                        else
                        {
                            report.CreateDocument();

                            frmIn frm = new frmIn();
                            frm.prcIN.PrintingSystem = report.PrintingSystem;
                            frm.ShowDialog();
                        }
                    }
                }
                else
                {
                    MessageBox.Show(string.Format("Không tìm thấy file template {0}", chIn.FileName));
                    isPrint = false;
                }
            }
            else
            {
                MessageBox.Show(string.Format("Không tìm thấy mã in {0}", _maIn));
                isPrint = false;
            }
            return isPrint;
        }

        public static void ReportMarginsNotShow(XtraReport _report)
        {
            if (_report == null)
                return;
            PrinterSettings ps = new PrinterSettings();
            //Bỏ cảnh báo căn lề
            _report.ShowPrintMarginsWarning = false;
            _report.PrintingSystem.ShowMarginsWarning = false;
            //Căn lề
            using (Graphics g = ps.CreateMeasurementGraphics(ps.DefaultPageSettings))
            {
                _report.Margins = DevExpress.XtraPrinting.Native.DeviceCaps.GetMinMargins(g);
            }
        }

        public static void PrintReport(XtraReport _report)
        {
            if (_report == null)
                return;
            ReportPrintTool rpt = new ReportPrintTool(_report);
            //Bỏ cảnh báo căn lề
            _report.ShowPrintMarginsWarning = false;
            _report.PrintingSystem.ShowMarginsWarning = false;
            //Căn lề
            using (Graphics g = rpt.PrinterSettings.CreateMeasurementGraphics(rpt.PrinterSettings.DefaultPageSettings))
            {
                _report.Margins = DevExpress.XtraPrinting.Native.DeviceCaps.GetMinMargins(g);
            }

            rpt.Print();
        }

        #endregion In
        #region Tính BMI

        /// <summary>
        /// Tính bmi
        /// </summary>
        /// <param name="_canNang"></param>
        /// <param name="_chieuCao"></param>
        /// <param name="_bmi"></param>
        /// <param name="ketqua"></param>
        public static void CalculateBMI(double _canNang, double _chieuCao, ref double _bmi, ref string _ketqua)
        {
            if (_canNang > 0 && _chieuCao > 0)
            {
                _chieuCao = _chieuCao / 100;
                _bmi = _canNang / (_chieuCao * _chieuCao);

                if (_bmi < 18.5)
                {
                    _ketqua = "Cân nặng thâp (gầy)";
                }
                else if (_bmi >= 18.5 && _bmi <= 22.9)
                {
                    _ketqua = "Bình thường";
                }
                else if (_bmi > 22.9 && _bmi <= 24.9)
                {
                    _ketqua = "Tiền béo phì";
                }
                else if (_bmi > 24.9 && _bmi <= 29.9)
                {
                    _ketqua = "Béo phì độ I";
                }
                else if (_bmi > 29.9 && _bmi < 40)
                {
                    _ketqua = "Béo phì độ II";
                }
                else if (_bmi >= 40)
                {
                    _ketqua = "Béo phì độ III";
                }
            }
        }

        #endregion Tính BMI
        #region Đọc số sang chữ + thập phân

        public static string SoSangChu(string number)
        {
            string[] strTachPhanSauDauPhay;
            if (number.Contains('.') || number.Contains(','))
            {
                strTachPhanSauDauPhay = number.Split(',', '.');
                return (SoSangChu(strTachPhanSauDauPhay[0]) + "phẩy " + SoSangChu(strTachPhanSauDauPhay[1]));
            }

            string[] dv = { "", "mươi", "trăm", "nghìn", "triệu", "tỉ" };
            string[] cs = { "không", "một", "hai", "ba", "bốn", "năm", "sáu", "bảy", "tám", "chín" };
            string doc;
            int i, j, k, n, len, found, ddv, rd;

            len = number.Length;
            number += "ss";
            doc = "";
            found = 0;
            ddv = 0;
            rd = 0;

            i = 0;
            while (i < len)
            {
                //So chu so o hang dang duyet
                n = (len - i + 2) % 3 + 1;

                //Kiem tra so 0
                found = 0;
                for (j = 0; j < n; j++)
                {
                    if (number[i + j] != '0')
                    {
                        found = 1;
                        break;
                    }
                }

                //Duyet n chu so
                if (found == 1)
                {
                    rd = 1;
                    for (j = 0; j < n; j++)
                    {
                        ddv = 1;
                        switch (number[i + j])
                        {
                            case '0':
                                if (n - j == 3) doc += cs[0] + " ";
                                if (n - j == 2)
                                {
                                    if (number[i + j + 1] != '0') doc += "linh ";
                                    ddv = 0;
                                }
                                break;

                            case '1':
                                if (n - j == 3) doc += cs[1] + " ";
                                if (n - j == 2)
                                {
                                    doc += "mười ";
                                    ddv = 0;
                                }
                                if (n - j == 1)
                                {
                                    if (i + j == 0) k = 0;
                                    else k = i + j - 1;

                                    if (number[k] != '1' && number[k] != '0')
                                        doc += "mốt ";
                                    else
                                        doc += cs[1] + " ";
                                }
                                break;

                            case '5':
                                if ((i + j == len - 1) || (i + j + 3 == len - 1))
                                    doc += "lăm ";
                                else
                                    doc += cs[5] + " ";
                                break;

                            default:
                                doc += cs[(int)number[i + j] - 48] + " ";
                                break;
                        }

                        //Doc don vi nho
                        if (ddv == 1)
                        {
                            doc += ((n - j) != 1) ? dv[n - j - 1] + " " : dv[n - j - 1];
                        }
                    }
                }

                //Doc don vi lon
                if (len - i - n > 0)
                {
                    if ((len - i - n) % 9 == 0)
                    {
                        if (rd == 1)
                            for (k = 0; k < (len - i - n) / 9; k++)
                                doc += "tỉ ";
                        rd = 0;
                    }
                    else
                        if (found != 0) doc += dv[((len - i - n + 1) % 9) / 3 + 2] + " ";
                }

                i += n;
            }

            if (len == 1)
                if (number[0] == '0' || number[0] == '5') return cs[(int)number[0] - 48];

            return doc;
        }

        #endregion Đọc số sang chữ + thập phân
        #region POS Agribank

        public static void InsertTamUng_POS(QLBV_Database.QLBVEntities _dataContext, VienPhi vienPhi, string clientId, string requestId, string receiptNo, double sotien)
        {
            TamUng moi = new TamUng();
            moi.SoTien = sotien;
            moi.MaCB = vienPhi.MaCB;
            moi.NgayThu = vienPhi.NgayTT;
            moi.MaBNhan = vienPhi.MaBNhan;
            moi.NgayTaoGDThe = DateTime.Now;
            moi.PhanLoai = 5;
            moi.LoaiThanhToan = 1;
            moi.ClientId = clientId;
            moi.RequestId = requestId;
            moi.ReceiptNo = receiptNo;
            moi.LyDo = "Thu bằng thẻ ngân hàng";
            _dataContext.TamUngs.Add(moi);
            _dataContext.SaveChanges();
        }

        public static bool HuyThanhToanPOS_Agribank(int? maBN, string soHD, string clientId, string requestId, ref ConnectBanking.Agribank.ParamResult paramResult)
        {
            bool result = false;
            paramResult = ConnectBanking.Agribank.Transaction_Void(Bien.URL_POS_AGRIGANK, requestId, clientId, soHD);
            if (paramResult != null)
            {
                if (string.IsNullOrWhiteSpace(paramResult.Error) && paramResult.IsCallSuccess)
                {
                    if (paramResult.Sale != null && paramResult.Sale.status == "DONE" && paramResult.Sale.transInfo != null && paramResult.Sale.transInfo.transStatus == "APPROVE")
                    {
                        result = true;
                    }
                    else
                    {
                        result = false;
                    }
                    #region Ghi log
                    QLBV_Database.QLBVEntities _dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
                    LOG moi = new LOG();
                    moi.DateLog = DateTime.Now;
                    moi.LyDo = "Hủy giao dịch POS trả về: " + JsonConvert.SerializeObject(paramResult);
                    moi.UserName = Bien.TenDN;
                    moi.MaBNhan = maBN;
                    moi.IdForm = 904;
                    moi.MaCB = Bien.MaCB;
                    moi.ComputerName = SystemInformation.ComputerName;
                    moi.Status = 1;
                    _dataContext.LOGs.Add(moi);
                    _dataContext.SaveChanges();
                    #endregion Ghi log
                }
                else
                {
                    MessageBox.Show(paramResult.Error);
                }
            }
            else
            {
                MessageBox.Show("Có lỗi khi khi kết nối POS");
            }
            return result;
        }

        public static bool TongKetPOS_Agribank(string clientId, string requestId, bool isPrint)
        {
            bool result = false;
            var paramResult = ConnectBanking.Agribank.Transaction_Settlement(Bien.URL_POS_AGRIGANK, requestId, clientId, isPrint);
            if (paramResult != null)
            {
                if (string.IsNullOrWhiteSpace(paramResult.Error) && paramResult.IsCallSuccess)
                {
                    if (paramResult.Sale != null && paramResult.Sale.status == "DONE")
                    {
                        result = true;
                    }
                    else
                    {
                        result = false;
                    }
                    #region Ghi log
                    QLBV_Database.QLBVEntities _dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
                    LOG moi = new LOG();
                    moi.DateLog = DateTime.Now;
                    moi.LyDo = "Tổng kết giao dịch POS trả về: " + JsonConvert.SerializeObject(paramResult);
                    moi.UserName = Bien.TenDN;
                    moi.IdForm = 904;
                    moi.MaCB = Bien.MaCB;
                    moi.ComputerName = SystemInformation.ComputerName;
                    moi.Status = 1;
                    _dataContext.LOGs.Add(moi);
                    _dataContext.SaveChanges();
                    #endregion Ghi log
                }
                else
                {
                    MessageBox.Show(paramResult.Error);
                }
            }
            else
            {
                MessageBox.Show("Có lỗi khi khi kết nối POS");
            }
            return result;
        }

        public static bool ThanhToanPOS_Agribank(int? maBN, double sotien, string maCB, ref ConnectBanking.Agribank.ParamResult paramResult)
        {
            bool result = false;
            if (sotien > 0)
            {
                sotien = Math.Round(sotien);
                MessageBox.Show("Số tiền thanh toán thẻ: " + sotien.ToString());
                paramResult = ConnectBanking.Agribank.Transaction_Sale(Bien.URL_POS_AGRIGANK, maCB, SystemInformation.ComputerName, sotien, Bien.F1, Bien.F2, Bien.F3, Bien.F4, Bien.F5);
                if (paramResult != null)
                {
                    if (string.IsNullOrWhiteSpace(paramResult.Error) && paramResult.IsCallSuccess)
                    {
                        if (paramResult.Sale != null && paramResult.Sale.status == "DONE" && paramResult.Sale.transInfo != null && paramResult.Sale.transInfo.transStatus == "APPROVE")
                        {
                            result = true;
                        }
                        else
                        {
                            result = false;
                        }
                        #region Ghi log
                        QLBV_Database.QLBVEntities _dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
                        LOG moi = new LOG();
                        moi.DateLog = DateTime.Now;
                        moi.LyDo = "Thanh toán giao dịch POS trả về: " + JsonConvert.SerializeObject(paramResult);
                        moi.UserName = Bien.TenDN;
                        moi.MaBNhan = maBN;
                        moi.IdForm = 904;
                        moi.MaCB = Bien.MaCB;
                        moi.ComputerName = SystemInformation.ComputerName;
                        moi.Status = 1;
                        _dataContext.LOGs.Add(moi);
                        _dataContext.SaveChanges();
                        #endregion Ghi log
                    }
                    else
                    {
                        MessageBox.Show(paramResult.Error);
                    }
                }
                else
                {
                    MessageBox.Show("Có lỗi khi khi kết nối POS");
                }
            }
            else
            {
                MessageBox.Show("Số tiền không hợp lệ");
            }
            return result;
        }

        #endregion POS Agribank
        #region Hàm

        public static string GetTenKP_20001(string tenKP)
        {
            string rs = tenKP;
            if (Bien.MaBV == "20001")
            {
                var spTenKP = tenKP.Split(':');
                if (spTenKP.Count() > 1)
                {
                    rs = spTenKP[1].Trim();
                }
            }
            return rs;
        }

        public static void UpdateTonDichVu(List<DichVu> _listDichVus, int _maKP, bool _delete = false)
        {
            QLBV_Database.QLBVEntities dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
            foreach (var dv in _listDichVus)
            {
                var dichVu = dataContext.DichVus.FirstOrDefault(o => o.MaDV == dv.MaDV);
                if (dichVu != null)
                {
                    var kpsd = dichVu.MaKPsd.Split(';').Distinct().Where(o => !string.IsNullOrWhiteSpace(o)).Select(o => int.Parse(o)).ToList();
                    if (_delete)
                        kpsd.Add(_maKP);
                    var khoaPhongs = dataContext.KPhongs.Where(o => kpsd.Contains(o.MaKP)).ToList();
                    int count = 0;
                    foreach (var kp in khoaPhongs.Where(o => o.PLoai == "Khoa dược"))
                    {
                        var dsGia = DungChung.Ham._getDSGia(dataContext, dichVu.MaDV, kp.MaKP);
                        if (((dsGia.Count > 0 && !dsGia.Exists(o => o.SoLuong > 0)) || dsGia.Count == 0))
                        {
                            count++;
                            kpsd.Remove(kp.MaKP);
                        }
                        else if (!kpsd.Exists(o => o == kp.MaKP))
                        {
                            kpsd.Add(kp.MaKP);
                        }
                    }
                    dichVu.Status = 1;
                    if (!_delete && count == khoaPhongs.Where(o => o.PLoai == "Khoa dược").Count())
                        dichVu.Status = 0;
                    dichVu.MaKPsd = string.Join(";  ", kpsd);
                    dataContext.SaveChanges();
                }
            }
        }

        public static string TinhMucHuong(int tuyen, string mucTT, string khuVuc, double? tongCP, int hangBV, int noitru, string soThe, string maCS)
        {
            string mucHuong = "0";
            var _dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
            if (tuyen == 1)
            {
                if (Bien.MaBV != "27194" && Bien.MaBV != "24272" && ((tongCP != null && tongCP < Bien.GHanTT100)))// (hangBV == 4 || (tongCP != null && tongCP < Bien.GHanTT100)))
                    mucHuong = "100";
                else
                    mucHuong = DungChung.Ham._PtramTT(_dataContext, mucTT).ToString();
            }
            else if (tuyen == 2)
            {
                switch (hangBV)
                {
                    case 1:
                        mucHuong = (DungChung.Ham._PtramTT(_dataContext, mucTT)).ToString();
                        break;

                    case 2:
                        if (DateTime.Now.Date >= DateTime.Parse("01/01/2021") && noitru == 1)
                        {
                            mucHuong = (DungChung.Ham._PtramTT(_dataContext, mucTT)).ToString();
                        }
                        else
                        {
                            if (Bien.MaBV == "01830")
                                mucHuong = (DungChung.Ham._PtramTT(_dataContext, mucTT)).ToString();
                            else if (Bien.MaBV == "20001" && khuVuc.ToLower().Contains("k"))
                                mucHuong = DungChung.Ham._PtramTT(_dataContext, mucTT).ToString();
                            else
                            {
                                if (khuVuc.ToLower().Contains("k"))
                                    mucHuong = DungChung.Ham._PtramTT(_dataContext, mucTT).ToString();
                                else
                                    mucHuong = (DungChung.Ham._PtramTT(_dataContext, mucTT)).ToString();
                            }
                        }
                        break;

                    case 3:
                        var matinh = Bien.MaBV.Substring(0, 2);
                        var bvBD = _dataContext.BenhViens.FirstOrDefault(o => o.MaBV == maCS);
                        var bv = _dataContext.BenhViens.FirstOrDefault(o => o.MaBV == Bien.MaBV);
                        if (khuVuc.ToLower().Contains("k") || (!string.IsNullOrWhiteSpace(soThe) && bvBD != null && matinh != bvBD.MaTinh.Trim() && bv != null && bv.TuyenBV != null && bv.TuyenBV.Trim() == "C") || (!string.IsNullOrWhiteSpace(soThe) && bvBD != null && matinh == bvBD.MaTinh.Trim() && (bvBD.TuyenBV == "A" || bvBD.TuyenBV == "B")))
                            mucHuong = DungChung.Ham._PtramTT(_dataContext, mucTT).ToString();
                        else if ((khuVuc.ToLower().Contains("k") || (!string.IsNullOrWhiteSpace(soThe) && bvBD != null && matinh == bvBD.MaTinh.Trim() && bv != null && bv.TuyenBV != null && bv.TuyenBV.Trim() == "C") || (!string.IsNullOrWhiteSpace(soThe) && bvBD != null && matinh == bvBD.MaTinh.Trim() && (bvBD.TuyenBV == "A" || bvBD.TuyenBV == "B"))))
                        {
                            mucHuong = DungChung.Ham._PtramTT(_dataContext, mucTT).ToString();
                        }
                        else
                            mucHuong = (DungChung.Ham._PtramTT(_dataContext, mucTT)).ToString();
                        break;

                    case 4:
                        mucHuong = DungChung.Ham._PtramTT(_dataContext, mucTT).ToString();
                        break;
                }
            }
            return mucHuong;
        }

        public static string GetLocalIPAddress()
        {
            var host = Dns.GetHostEntry(Dns.GetHostName());
            foreach (var ip in host.AddressList)
            {
                if (ip.AddressFamily == AddressFamily.InterNetwork)
                {
                    return ip.ToString();
                }
            }
            throw new Exception("No network adapters with an IPv4 address in the system!");
        }

        public static bool Check_DuyetTamThu(int idCD)
        {
            bool rs = false;
            QLBV_Database.QLBVEntities dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
            var tamThu = (from cd in dataContext.ChiDinhs.Where(o => o.IDCD == idCD)
                          join tu in dataContext.TamUngs on cd.SoPhieu equals tu.IDTamUng
                          select tu).FirstOrDefault();
            if (tamThu != null)
            {

                if (tamThu.DuyetPhieuThu == false)
                {
                    if (tamThu.PhanLoai == 0 || tamThu.PhanLoai == 4 || tamThu.PhanLoai == 8)
                    {
                        rs = false;
                    }
                    else
                    {
                        rs = true;
                    }
                }
                else
                {
                    rs = true;
                }
            }
            return rs;
        }

        public static object ConvertTableCellValueToObject(object value)
        {
            return Convert.IsDBNull(value) ? null : value;
        }

        public static DataTable ConvertToDataTable(IList data, ref List<DataColumn> Columns, List<string> propertiesIgnores = null)
        {
            DataTable table = new DataTable();
            PropertyDescriptorCollection properties = null;
            List<DataColumn> IntColumns = new List<DataColumn>();
            List<DataColumn> DecimalColumns = new List<DataColumn>();
            List<DataColumn> DoubleColumns = new List<DataColumn>();
            List<DataColumn> BoolColumns = new List<DataColumn>();
            List<DataColumn> DateColumns = new List<DataColumn>();
            if (data.Count > 0)
            {
                var type = data[0].GetType();
                properties = TypeDescriptor.GetProperties(type);
                foreach (PropertyDescriptor prop in properties)
                {
                    if (propertiesIgnores == null || propertiesIgnores.FirstOrDefault(o => o == prop.Name) == null)
                    {
                        Type propType = Nullable.GetUnderlyingType(prop.PropertyType) ?? prop.PropertyType;
                        DataColumn Column = new DataColumn(prop.Name, propType);
                        table.Columns.Add(Column);
                        Columns.Add(Column);
                        switch (Type.GetTypeCode(propType))
                        {
                            case TypeCode.Int16:
                            case TypeCode.Int32:
                            case TypeCode.Int64: { IntColumns.Add(Column); break; }
                            case TypeCode.Boolean: { BoolColumns.Add(Column); break; }
                            case TypeCode.Double: { DoubleColumns.Add(Column); break; }
                            case TypeCode.Decimal: { DecimalColumns.Add(Column); break; }
                            case TypeCode.DateTime: { DateColumns.Add(Column); break; }
                        }
                    }
                }
            }
            else
                return table;

            foreach (var row in data)
            {
                DataRow dtRow = table.NewRow();
                foreach (PropertyDescriptor prop in properties)
                {
                    if (propertiesIgnores == null || propertiesIgnores.FirstOrDefault(o => o == prop.Name) == null)
                    {
                        if (DoubleColumns.Exists(o => o.ColumnName == prop.Name))
                        {
                            var value = prop.GetValue(row);
                            if (value != null)
                                dtRow[prop.Name] = Convert.ToDouble(value);
                            else
                                dtRow[prop.Name] = DBNull.Value;
                        }
                        else if (DecimalColumns.Exists(o => o.ColumnName == prop.Name))
                        {
                            var value = prop.GetValue(row);
                            if (value != null)
                                dtRow[prop.Name] = Convert.ToDecimal(value);
                            else
                                dtRow[prop.Name] = DBNull.Value;
                        }
                        else
                        {
                            var value = prop.GetValue(row);
                            if (value != null)
                            {
                                dtRow[prop.Name] = value;
                            }
                            else
                                dtRow[prop.Name] = DBNull.Value;
                        }
                    }
                }
                table.Rows.Add(dtRow);
            }
            return table;
        }

        public static int GetLineNumberError(Exception e)
        {
            int linenum = 0;
            try
            {
                //linenum = Convert.ToInt32(e.StackTrace.Substring(e.StackTrace.LastIndexOf(":line") + 5));

                //For Localized Visual Studio ... In other languages stack trace  doesn't end with ":Line 12"
                linenum = Convert.ToInt32(e.StackTrace.Substring(e.StackTrace.LastIndexOf(' ')));
            }
            catch
            {
                //Stack trace is not available!
            }
            return linenum;
        }

        public static string GhepChuoiChanDoanYHCT(List<ICD10> listIcds, string maIcd, string maICD2, bool isDongY = false)
        {
            string rs = "";
            if (listIcds != null && listIcds.Count > 0)
            {
                if (!string.IsNullOrWhiteSpace(maIcd))
                {
                    var mainIcd = listIcds.FirstOrDefault(o => o.MaICD == maIcd);
                    if (maIcd != null)
                    {
                        rs += (!string.IsNullOrWhiteSpace(mainIcd.TenYHCT) && Bien.MaBV != "24272") ? string.Format("{0}[{1}]; ", mainIcd.TenYHCT, mainIcd.TenICD) : (mainIcd.TenICD + "; ");
                    }
                }
                if (!string.IsNullOrWhiteSpace(maICD2))
                {
                    var icdSp = maICD2.Split(';');
                    foreach (var ma in icdSp)
                    {
                        var icd = listIcds.FirstOrDefault(o => o.MaICD == ma);
                        if (icd != null)
                        {
                            rs += (!string.IsNullOrWhiteSpace(icd.TenYHCT) && Bien.MaBV != "24272") ? string.Format("{0}[{1}]; ", icd.TenYHCT, icd.TenICD) : (icd.TenICD + "; ");
                        }
                    }
                }
            }
            return rs;
        }

        public static string GhepChuoiChanDoan_14018(List<ICD10> listIcds, string chanDoan, string maIcd, string maICD2)
        {
            string rs = "";
            if (listIcds != null && listIcds.Count > 0)
            {
                if (!string.IsNullOrWhiteSpace(maIcd))
                {
                    var mainIcd = listIcds.FirstOrDefault(o => o.MaICD == maIcd);
                    if (mainIcd != null)
                    {
                        rs += ((!string.IsNullOrWhiteSpace(chanDoan) && chanDoan != mainIcd.TenICD) ? string.Format("{0}-{1}", mainIcd.MaICD, chanDoan) : string.Format("{0}-{1}", mainIcd.MaICD, mainIcd.TenICD)) + (maICD2.Where(o => o != ';' && o != ' ').Count() > 0 ? "; " : "");
                    }
                }
                if (!string.IsNullOrWhiteSpace(maICD2))
                {
                    var icdSp = maICD2.Split(';');
                    foreach (var ma in icdSp)
                    {
                        var icd = listIcds.FirstOrDefault(o => o.MaICD == ma);
                        if (icd != null)
                        {
                            rs += string.Format("{0}-{1}; ", icd.MaICD, icd.TenICD);
                        }
                    }
                }
            }
            return rs;
        }

        public static void Update_ThuocCLS_KhoaKetHop(int maBnhan, DateTime ngayThang, int? maKP)
        {
            QLBV_Database.QLBVEntities dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);

            var benhNhan = dataContext.BenhNhans.FirstOrDefault(o => o.MaBNhan == maBnhan);
            if (benhNhan == null || benhNhan.MaKPDTKH == null)
                return;

            List<FRM_chidinh_Moi.MyObject> _lall = new List<FRM_chidinh_Moi.MyObject>();
            List<FRM_chidinh_Moi.MyObject> qcd = (from cd in dataContext.ChiDinhs
                                                  join cls in dataContext.CLS.Where(o => o.MaBNhan == maBnhan && ngayThang.Day == o.NgayThang.Value.Day && ngayThang.Month == o.NgayThang.Value.Month && ngayThang.Year == o.NgayThang.Value.Year && o.MaKP == benhNhan.MaKPDTKH) on cd.IdCLS equals cls.IdCLS
                                                  join dv in dataContext.DichVus on cd.MaDV equals dv.MaDV
                                                  // join dvct in data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                                  join tn in dataContext.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                                  join n in dataContext.NhomDVs on tn.IDNhom equals n.IDNhom
                                                  select new FRM_chidinh_Moi.MyObject { IDNhom = tn.IDNhom ?? 0, TenNhom = n.TenNhom, TenTN = tn.TenRG, TenRG = dv.TenDV, TenDV = dv.TenDV, YLenh = cd.ChiDinh1, MaQD = dv.MaQD, ViTri = cd.YLenh2, TenKhac = dv.TenPhuongPhap, MaKP = cls.MaKP, MaDV = cd.MaDV, NgayCD = cls.NgayThang }).ToList();

            var dthuoc = (from dt in dataContext.DThuocs.Where(o => o.MaBNhan == maBnhan && (o.KieuDon == 1 || o.KieuDon == 0 || o.KieuDon == 2) && o.PLDV == 1 && o.NgayKe.Value.Day == ngayThang.Day && o.NgayKe.Value.Month == ngayThang.Month && o.NgayKe.Value.Year == ngayThang.Year && o.MaKP == benhNhan.MaKPDTKH)
                          join dtct in dataContext.DThuoccts on dt.IDDon equals dtct.IDDon
                          join dv in dataContext.DichVus.Where(o => o.PLoai == 1) on dtct.MaDV equals dv.MaDV
                          join tn in dataContext.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                          select new { dt.KieuDon, dtct.MaKXuat, dv.MaDV, tn.TenRG, dv.DongY, TenTT05 = dv.TenRG, dv.HamLuong, dv.DuongD, dv.TenHC, dtct.SoLuong, dtct.GhiChu, dtct.DonVi, dtct.SoLan, dtct.STT, dtct.STT_GNHT, dt.MaKP }).OrderBy(o => o.STT).ToList();

            var ngayBefore = ngayThang.AddDays(-1);
            List<FRM_chidinh_Moi.MyObject> qcdPHCNBefore = (from cd in dataContext.ChiDinhs
                                                            join cls in dataContext.CLS.Where(o => o.MaBNhan == maBnhan && ngayBefore.Day == o.NgayThang.Value.Day && ngayBefore.Month == o.NgayThang.Value.Month && ngayBefore.Year == o.NgayThang.Value.Year && o.MaKP == benhNhan.MaKPDTKH) on cd.IdCLS equals cls.IdCLS
                                                            join dv in dataContext.DichVus on cd.MaDV equals dv.MaDV
                                                            // join dvct in data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                                            join tn in dataContext.TieuNhomDVs.Where(o => o.TenTN == "Điều trị y học cổ truyền" || o.TenTN == "Điều trị vận động" || o.TenTN == "Điều trị vật lý" || o.TenTN == "Điều trị ngôn ngữ trị liệu") on dv.IdTieuNhom equals tn.IdTieuNhom
                                                            join n in dataContext.NhomDVs on tn.IDNhom equals n.IDNhom
                                                            select new FRM_chidinh_Moi.MyObject { IDNhom = tn.IDNhom ?? 0, TenNhom = n.TenNhom, TenTN = tn.TenRG, TenRG = dv.TenDV, TenDV = dv.TenDV, YLenh = cd.ChiDinh1, MaQD = dv.MaQD, ViTri = cd.YLenh2, TenKhac = dv.TenPhuongPhap, MaKP = cls.MaKP, MaDV = cd.MaDV, NgayCD = cls.NgayThang }).ToList();

            var dbctKH = dataContext.DienBiencts.FirstOrDefault(o => o.MaBNhan == maBnhan && o.NgayThang == ngayThang && o.PhanLoai == 9 && o.MaKP == benhNhan.MaKP);
            if (qcd.Count > 0 || dthuoc.Count > 0)
            {
                string khString = "*Kết hợp điều trị";

                foreach (var item in dthuoc)
                {
                    khString += Environment.NewLine + "- " + item.TenTT05 + " x " + (Convert.ToInt32(item.SoLuong)).ToString("D2") + " " + item.DonVi;
                }
                List<FRM_chidinh_Moi.MyObject> xn;
                List<FRM_chidinh_Moi.MyObject> cdha;
                List<FRM_chidinh_Moi.MyObject> vltl;
                List<FRM_chidinh_Moi.MyObject> pttt;
                List<FRM_chidinh_Moi.MyObject> tdcn;
                GetCLS(qcd, qcdPHCNBefore, out xn, out cdha, out vltl, out pttt, out tdcn);
                khString += xn.Count > 0 ? (Environment.NewLine + "- " + string.Join(Environment.NewLine + "- ", xn.Select(o => o.TenDV))) : "";
                khString += cdha.Count > 0 ? (Environment.NewLine + "- " + string.Join(Environment.NewLine + "- ", cdha.Select(o => o.TenDV))) : "";
                khString += vltl.Count > 0 ? (Environment.NewLine + "- " + string.Join(Environment.NewLine + "- ", vltl.Select(o => o.TenDV))) : "";
                khString += pttt.Count > 0 ? (Environment.NewLine + "- " + string.Join(Environment.NewLine + "- ", pttt.Select(o => o.TenDV))) : "";
                khString += tdcn.Count > 0 ? (Environment.NewLine + "- " + string.Join(Environment.NewLine + "- ", tdcn.Select(o => o.TenDV))) : "";
                if (dbctKH != null)
                {
                    dbctKH.YLenh = khString;
                    dataContext.SaveChanges();
                }
                else
                {
                    DienBienct dbctNew = new DienBienct();
                    dbctNew.MaBNhan = maBnhan;
                    dbctNew.NgayThang = ngayThang;
                    dbctNew.MaKP = benhNhan.MaKP;
                    dbctNew.PhanLoai = 9;
                    dbctNew.YLenh = khString;
                    dataContext.DienBiencts.Add(dbctNew);
                    dataContext.SaveChanges();
                }
            }
            else
            {
                if (dbctKH != null)
                {
                    dbctKH.YLenh = "";
                    dataContext.SaveChanges();
                }
            }
        }

        /// <summary>
        /// ngayThang kiểu Date không phải DateTime
        /// </summary>
        /// <param name="maBnhan"></param>
        /// <param name="ngayThang"></param>
        /// <param name="maKP"></param>
        public static void Update_CLS_DienBienct(int maBnhan, DateTime ngayThang, int? maKP)
        {
            QLBV_Database.QLBVEntities dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
            List<FRM_chidinh_Moi.MyObject> _lall = new List<FRM_chidinh_Moi.MyObject>();
            List<FRM_chidinh_Moi.MyObject> qcd = (from cd in dataContext.ChiDinhs
                                                  join cls in dataContext.CLS.Where(o => o.MaBNhan == maBnhan && ngayThang.Day == o.NgayThang.Value.Day && ngayThang.Month == o.NgayThang.Value.Month && ngayThang.Year == o.NgayThang.Value.Year && o.MaKP == maKP) on cd.IdCLS equals cls.IdCLS
                                                  join dv in dataContext.DichVus on cd.MaDV equals dv.MaDV
                                                  // join dvct in data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                                  join tn in dataContext.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                                  join n in dataContext.NhomDVs on tn.IDNhom equals n.IDNhom
                                                  select new FRM_chidinh_Moi.MyObject { IDNhom = tn.IDNhom ?? 0, TenNhom = n.TenNhom, TenTN = tn.TenRG, TenRG = dv.TenDV, TenDV = dv.TenDV, YLenh = cd.ChiDinh1, MaQD = dv.MaQD, ViTri = cd.YLenh2, TenKhac = dv.TenPhuongPhap, MaKP = cls.MaKP, MaDV = cd.MaDV, NgayCD = cls.NgayThang }).ToList();

            var ngayBefore = ngayThang.AddDays(-1);
            List<FRM_chidinh_Moi.MyObject> qcdPHCNBefore = (from cd in dataContext.ChiDinhs
                                                            join cls in dataContext.CLS.Where(o => o.MaBNhan == maBnhan && ngayBefore.Day == o.NgayThang.Value.Day && ngayBefore.Month == o.NgayThang.Value.Month && ngayBefore.Year == o.NgayThang.Value.Year && o.MaKP == maKP) on cd.IdCLS equals cls.IdCLS
                                                            join dv in dataContext.DichVus on cd.MaDV equals dv.MaDV
                                                            // join dvct in data.DichVucts on clsct.MaDVct equals dvct.MaDVct
                                                            join tn in dataContext.TieuNhomDVs.Where(o => o.TenTN == "Điều trị y học cổ truyền" || o.TenTN == "Điều trị vận động" || o.TenTN == "Điều trị vật lý" || o.TenTN == "Điều trị ngôn ngữ trị liệu") on dv.IdTieuNhom equals tn.IdTieuNhom
                                                            join n in dataContext.NhomDVs on tn.IDNhom equals n.IDNhom
                                                            select new FRM_chidinh_Moi.MyObject { IDNhom = tn.IDNhom ?? 0, TenNhom = n.TenNhom, TenTN = tn.TenRG, TenRG = dv.TenDV, TenDV = dv.TenDV, YLenh = cd.ChiDinh1, MaQD = dv.MaQD, ViTri = cd.YLenh2, TenKhac = dv.TenPhuongPhap, MaKP = cls.MaKP, MaDV = cd.MaDV, NgayCD = cls.NgayThang }).ToList();

            List<FRM_chidinh_Moi.MyObject> xn;
            List<FRM_chidinh_Moi.MyObject> cdha;
            List<FRM_chidinh_Moi.MyObject> vltl;
            List<FRM_chidinh_Moi.MyObject> pttt;
            List<FRM_chidinh_Moi.MyObject> tdcn;
            GetCLS(qcd, qcdPHCNBefore, out xn, out cdha, out vltl, out pttt, out tdcn);

            var dbctXN = dataContext.DienBiencts.FirstOrDefault(o => o.MaBNhan == maBnhan && o.NgayThang == ngayThang && o.PhanLoai == 4 && o.MaKP == maKP);
            if (xn.Count > 0)
            {
                string xnString = "*XN: " + Environment.NewLine + "- ";
                xnString += string.Join(Environment.NewLine + "- ", xn.Select(o => o.TenDV));
                if (dbctXN != null)
                {
                    dbctXN.YLenh = xnString;
                    dataContext.SaveChanges();
                }
                else
                {
                    DienBienct dbctNew = new DienBienct();
                    dbctNew.MaBNhan = maBnhan;
                    dbctNew.NgayThang = ngayThang;
                    dbctNew.PhanLoai = 4;
                    dbctNew.MaKP = maKP;
                    dbctNew.YLenh = xnString;
                    dataContext.DienBiencts.Add(dbctNew);
                    dataContext.SaveChanges();
                }
            }
            else
            {
                if (dbctXN != null)
                {
                    dbctXN.YLenh = "";
                    dataContext.SaveChanges();
                }
            }
            var dbctCDHA = dataContext.DienBiencts.FirstOrDefault(o => o.MaBNhan == maBnhan && o.NgayThang == ngayThang && o.PhanLoai == 3 && o.MaKP == maKP);
            if (cdha.Count > 0)
            {
                string cdhaString = "*CĐHA: " + Environment.NewLine + "- ";
                cdhaString += string.Join(Environment.NewLine + "- ", cdha.Select(o => o.TenDV));
                if (dbctCDHA != null)
                {
                    dbctCDHA.YLenh = cdhaString;
                    dataContext.SaveChanges();
                }
                else
                {
                    DienBienct dbctNew = new DienBienct();
                    dbctNew.MaBNhan = maBnhan;
                    dbctNew.NgayThang = ngayThang;
                    dbctNew.MaKP = maKP;
                    dbctNew.PhanLoai = 3;
                    dbctNew.YLenh = cdhaString;
                    dataContext.DienBiencts.Add(dbctNew);
                    dataContext.SaveChanges();
                }
            }
            else
            {
                if (dbctCDHA != null)
                {
                    dbctCDHA.YLenh = "";
                    dataContext.SaveChanges();
                }
            }
            var dbctVLTL = dataContext.DienBiencts.FirstOrDefault(o => o.MaBNhan == maBnhan && o.NgayThang == ngayThang && o.PhanLoai == 5 && o.MaKP == maKP);
            if (vltl.Count > 0)
            {
                string vltlString = "*VLTL-PHCN: " + Environment.NewLine + "- ";
                vltlString += string.Join(Environment.NewLine + "- ", vltl.Select(o => o.TenDV));
                if (dbctVLTL != null)
                {
                    dbctVLTL.YLenh = vltlString;
                    dataContext.SaveChanges();
                }
                else
                {
                    DienBienct dbctNew = new DienBienct();
                    dbctNew.MaBNhan = maBnhan;
                    dbctNew.NgayThang = ngayThang;
                    dbctNew.MaKP = maKP;
                    dbctNew.PhanLoai = 5;
                    dbctNew.YLenh = vltlString;
                    dataContext.DienBiencts.Add(dbctNew);
                    dataContext.SaveChanges();
                }
            }
            else
            {
                if (dbctVLTL != null)
                {
                    dbctVLTL.YLenh = "";
                    dataContext.SaveChanges();
                }
            }
            var dbctPTTT = dataContext.DienBiencts.FirstOrDefault(o => o.MaBNhan == maBnhan && o.NgayThang == ngayThang && o.PhanLoai == 7 && o.MaKP == maKP);
            if (pttt.Count > 0)
            {
                string ptttString = "*PTTT, VLTL: " + Environment.NewLine + "- ";
                ptttString += string.Join(Environment.NewLine + "- ", pttt.Select(o => o.TenDV));
                if (dbctPTTT != null)
                {
                    dbctPTTT.YLenh = ptttString;
                    dataContext.SaveChanges();
                }
                else
                {
                    DienBienct dbctNew = new DienBienct();
                    dbctNew.MaBNhan = maBnhan;
                    dbctNew.NgayThang = ngayThang;
                    dbctNew.MaKP = maKP;
                    dbctNew.PhanLoai = 7;
                    dbctNew.YLenh = ptttString;
                    dataContext.DienBiencts.Add(dbctNew);
                    dataContext.SaveChanges();
                }
            }
            else
            {
                if (dbctPTTT != null)
                {
                    dbctPTTT.YLenh = "";
                    dataContext.SaveChanges();
                }
            }
            var dbctTDCN = dataContext.DienBiencts.FirstOrDefault(o => o.MaBNhan == maBnhan && o.NgayThang == ngayThang && o.PhanLoai == 8 && o.MaKP == maKP);
            if (tdcn.Count > 0)
            {
                string tdcnString = "*THĂM DÒ CHỨC NĂNG: " + Environment.NewLine + "- ";
                tdcnString += string.Join(Environment.NewLine + "- ", tdcn.Select(o => o.TenDV));
                if (dbctTDCN != null)
                {
                    dbctTDCN.YLenh = tdcnString;
                    dataContext.SaveChanges();
                }
                else
                {
                    DienBienct dbctNew = new DienBienct();
                    dbctNew.MaBNhan = maBnhan;
                    dbctNew.NgayThang = ngayThang;
                    dbctNew.MaKP = maKP;
                    dbctNew.PhanLoai = 8;
                    dbctNew.YLenh = tdcnString;
                    dataContext.DienBiencts.Add(dbctNew);
                    dataContext.SaveChanges();
                }
            }
            else
            {
                if (dbctTDCN != null)
                {
                    dbctTDCN.YLenh = "";
                    dataContext.SaveChanges();
                }
            }

            //Update_ThuocCLS_KhoaKetHop(maBnhan, ngayThang, maKP);
        }

        private static void GetCLS(List<FRM_chidinh_Moi.MyObject> qcd, List<FRM_chidinh_Moi.MyObject> qcdPHCNBefore, out List<FRM_chidinh_Moi.MyObject> xn, out List<FRM_chidinh_Moi.MyObject> cdha, out List<FRM_chidinh_Moi.MyObject> vltl, out List<FRM_chidinh_Moi.MyObject> pttt, out List<FRM_chidinh_Moi.MyObject> tdcn)
        {
            xn = qcd.Where(o => o.IDNhom == 1).ToList();
            cdha = qcd.Where(o => o.IDNhom == 2).ToList();
            vltl = qcd.Where(o => o.TenTN == "Điều trị y học cổ truyền" || o.TenTN == "Điều trị vận động" || o.TenTN == "Điều trị vật lý" || o.TenTN == "Điều trị ngôn ngữ trị liệu").ToList();

            pttt = qcd.Where(o => o.TenTN == "Phẫu thuật" || o.TenTN == "Thủ thuật").ToList();
            tdcn = qcd.Where(o => o.IDNhom == 3).ToList();

            xn = (from x in xn
                  select new FRM_chidinh_Moi.MyObject { TenDV = x.TenDV }).ToList();
            cdha = (from x in cdha
                    select new FRM_chidinh_Moi.MyObject { TenDV = x.TenDV }).ToList();
            //vltl = (from x in vltl
            //        select new FRM_chidinh_Moi.MyObject { TenDV = ((!string.IsNullOrWhiteSpace(x.TenKhac) ? (x.TenKhac + ": ") : "") + (!string.IsNullOrWhiteSpace(x.MaQD) ? ("(" + x.MaQD + ") ") : "") + x.TenDV + (!string.IsNullOrWhiteSpace(x.YLenh) ? (" x " + x.YLenh + " ") : "") + (!string.IsNullOrWhiteSpace(x.ViTri) ? ("(" + x.ViTri + ")") : "")), MaDV = x.MaDV }).ToList();
            foreach (var item in vltl)
            {
                if (qcdPHCNBefore.Exists(o => o.MaDV == item.MaDV))
                {
                    item.TenDV = item.TenDV;
                }
                else
                {
                    item.TenDV = item.TenDV;
                }
            }
            tdcn = (from x in tdcn
                    select new FRM_chidinh_Moi.MyObject { TenDV = x.TenDV }).ToList();
            pttt = (from x in pttt
                    select new FRM_chidinh_Moi.MyObject { TenDV = x.TenDV }).ToList();
        }

        public class STTDThuocct
        {
            public DateTime NgayKe { get; set; }
            public int? MaDV { get; set; }
            public List<DthuocctExtend> ListDThuocct { get; set; }
        }

        public class DthuocctExtend : DThuocct
        {
            public int? KieuDon { get; set; }
        }

        public static void Update_STT_ThuocGNHT(QLBV_Database.QLBVEntities dataContext, int maBnhan)
        {
            dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
            int rs = 0;

            var donThuocAll = (from dt in dataContext.DThuocs.Where(o => o.MaBNhan == maBnhan && (o.KieuDon == 1 || o.KieuDon == 0))
                               join dtct in dataContext.DThuoccts on dt.IDDon equals dtct.IDDon
                               join dv in dataContext.DichVus on dtct.MaDV equals dv.MaDV
                               join tn in dataContext.TieuNhomDVs.Where(o => o.TenRG.Contains("Thuốc gây nghiện") || o.TenRG.Contains("Thuốc hướng tâm thần") || o.TenRG.Contains("Kháng sinh") || o.TenRG.Contains("kháng sinh")) on dv.IdTieuNhom equals tn.IdTieuNhom
                               select new { dt, dtct }).ToList();
            var donThuoc = (from dtgr in donThuocAll
                            group dtgr by new { NgayKe = dtgr.dt.NgayKe.Value.Date, dtgr.dtct.MaDV } into kq
                            select new STTDThuocct { NgayKe = kq.Key.NgayKe, MaDV = kq.Key.MaDV, ListDThuocct = kq.Select(o => new DthuocctExtend { IDDonct = o.dtct.IDDonct, KieuDon = o.dt.KieuDon, STT_GNHT = o.dtct.STT_GNHT }).OrderBy(o => o.KieuDon).ToList() }).OrderBy(o => o.NgayKe).ToList();

            var listDV = donThuoc.Select(o => o.MaDV).Distinct().ToList();

            foreach (var dv in listDV)
            {
                var donThuocDV = donThuoc.Where(o => o.MaDV == dv).ToList();
                foreach (var dtkd in donThuocDV)
                {
                    dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
                    var ngayKeBefore = dtkd.NgayKe.AddDays(-1);
                    var donThuocBefore = donThuocDV.FirstOrDefault(o => o.NgayKe == ngayKeBefore);
                    int sttgnht = -1;
                    if (donThuocBefore != null)
                    {
                        sttgnht = donThuocBefore.ListDThuocct.Max(o => (o.STT_GNHT ?? -1));
                    }
                    foreach (var x in dtkd.ListDThuocct)
                    {
                        sttgnht++;
                        x.STT_GNHT = sttgnht;
                        var donThuocUpdate = dataContext.DThuoccts.FirstOrDefault(o => o.IDDonct == x.IDDonct);
                        donThuocUpdate.STT_GNHT = sttgnht;
                    }
                    dataContext.SaveChanges();
                }
            }
        }

        public static void Update_DonThuoc_DienBienct(int maBnhan, DateTime ngayThang, int? maKP)
        {
            QLBV_Database.QLBVEntities dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);

            var dthuoc = (from dt in dataContext.DThuocs.Where(o => o.MaBNhan == maBnhan && (o.KieuDon == 1 || o.KieuDon == 0 || o.KieuDon == 2) && o.PLDV == 1 && o.NgayKe.Value.Day == ngayThang.Day && o.NgayKe.Value.Month == ngayThang.Month && o.NgayKe.Value.Year == ngayThang.Year && o.MaKP == maKP)
                          join dtm1 in dataContext.DThuocMaus on dt.IDDon_Mau equals dtm1.IDDonMau into kq
                          from dtm in kq.DefaultIfEmpty()
                          join dtct in dataContext.DThuoccts on dt.IDDon equals dtct.IDDon
                          join dv in dataContext.DichVus.Where(o => o.PLoai == 1 && (Bien.MaBV == "14017" ? o.IDNhom != 0 : o.IDNhom != 10 && o.IDNhom != 11)) on dtct.MaDV equals dv.MaDV // 14017 cho lưu đơn vật tư vào diễn biến
                          join tn in dataContext.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                          select new { dt.KieuDon, dtct.MaKXuat, dv.MaDV, tn.TenRG, dv.DongY, TenTT05 = dv.TenRG, dv.HamLuong, dv.DuongD, dv.TenHC, dtct.SoLuong, dtct.GhiChu, dtct.DonVi, dtct.SoLan, dtct.STT, dtct.STT_GNHT, dt.MaKP, GhiChuDT = dt.GhiChu, TenDonMau = (dtm != null ? dtm.TenDTM : ""), IsMuaNgoai = (dtct.IsMuaNgoai ?? false) }).OrderBy(o => o.STT).ToList();
            var dtHNBS = dthuoc.Where(o => o.KieuDon == 0 || o.KieuDon == 1).ToList();
            var dtTT = dthuoc.Where(o => o.KieuDon == 2).ToList();

            var dbctHNBS = dataContext.DienBiencts.FirstOrDefault(o => o.MaBNhan == maBnhan && o.NgayThang == ngayThang && o.PhanLoai == 1 && o.MaKP == maKP);
            if (dtHNBS.Count > 0)
            {
                var dtHSBS_TY = dtHNBS.Where(o => o.DongY != 1).ToList();
                var dtHSBS_DY = dtHNBS.Where(o => o.DongY == 1).ToList();

                string dtString = dtHSBS_TY.Count > 0 ? string.Format("*THUỐC NGÀY {0}", ngayThang.ToString("dd/MM/yyyy")) : "";
                int demty = 0;
                foreach (var item in dtHSBS_TY)
                {
                    demty++;
                    dtString += Environment.NewLine + demty + "- " + item.TenTT05 + (item.IsMuaNgoai ? " (Tự túc)" : "") + " x " + (Convert.ToInt32(item.SoLuong)).ToString("D2") + " " + item.DonVi + ((!string.IsNullOrWhiteSpace(item.GhiChu)) ? ("( " + item.GhiChu + " )") : "");
                }

                if (dtHSBS_DY.Count > 0)
                {
                    int demdy = 0;
                    string ngayDY = "";
                    string loiDan = "";
                    var ghiChudt = dtHSBS_DY.FirstOrDefault(o => !string.IsNullOrWhiteSpace(o.GhiChuDT));
                    if (ghiChudt != null)
                    {
                        if (ghiChudt.GhiChuDT.Contains(";"))
                        {
                            loiDan += "Lời dặn: ";
                            string[] _arrr = ghiChudt.GhiChuDT.Split(';');
                            if (_arrr.Count() > 0)
                                loiDan += _arrr[0] + " thang";
                            if (_arrr.Count() > 1)
                                ngayDY += "TỪ NGÀY " + _arrr[1] + " ";
                            if (_arrr.Count() > 2)
                                ngayDY += "ĐẾN NGÀY " + _arrr[2];
                            if (_arrr.Count() > 4)
                                loiDan += " " + _arrr[4];
                            if (_arrr.Count() > 5)
                                loiDan += ", " + _arrr[5];
                            if (_arrr.Length > 3)
                                loiDan += ", " + _arrr[3];
                        }
                    }
                    dtString += dtHSBS_DY.Count > 0 ? (Environment.NewLine + string.Format(" THUỐC {0}", ngayDY) + (dtHSBS_DY.FirstOrDefault(o => !string.IsNullOrWhiteSpace(o.TenDonMau)) != null && !string.IsNullOrWhiteSpace(dtHSBS_DY.FirstOrDefault(o => !string.IsNullOrWhiteSpace(o.TenDonMau)).TenDonMau) ? (Environment.NewLine + " (" + dtHSBS_DY.FirstOrDefault(o => !string.IsNullOrWhiteSpace(o.TenDonMau)).TenDonMau + ")") : "")) : Environment.NewLine;
                    foreach (var item in dtHSBS_DY)
                    {
                        demdy++;
                        dtString += Environment.NewLine + demdy + "- " + item.TenTT05 + (item.IsMuaNgoai ? " (Tự túc)" : "") + " x " + item.SoLuong.ToString("F", CultureInfo.InvariantCulture) + " " + item.DonVi;
                    }
                    dtString += Environment.NewLine + loiDan;
                }

                if (dbctHNBS != null)
                {
                    dbctHNBS.YLenh = dtString;
                    dataContext.SaveChanges();
                }
                else
                {
                    DienBienct dbctNew = new DienBienct();
                    dbctNew.MaBNhan = maBnhan;
                    dbctNew.NgayThang = ngayThang;
                    dbctNew.MaKP = maKP;
                    dbctNew.PhanLoai = 1;
                    dbctNew.YLenh = dtString;
                    dataContext.DienBiencts.Add(dbctNew);
                    dataContext.SaveChanges();
                }
            }
            else
            {
                if (dbctHNBS != null)
                {
                    dbctHNBS.YLenh = "";
                    dataContext.SaveChanges();
                }
            }

            var dbctTT = dataContext.DienBiencts.FirstOrDefault(o => o.MaBNhan == maBnhan && o.NgayThang == ngayThang && o.PhanLoai == 6 && o.MaKP == maKP);
            if (dtTT.Count > 0)
            {
                string dtString = "*TRẢ THUỐC-VTYT:";

                foreach (var item in dtTT)
                {
                    dtString += Environment.NewLine + "- " + item.TenTT05 + (item.IsMuaNgoai ? " (Tự túc)" : "") + " x " + (Convert.ToInt32(item.SoLuong) * (-1)).ToString("D2") + " " + item.DonVi;
                }
                if (dbctTT != null)
                {
                    dbctTT.YLenh = dtString;
                    dataContext.SaveChanges();
                }
                else
                {
                    DienBienct dbctNew = new DienBienct();
                    dbctNew.MaBNhan = maBnhan;
                    dbctNew.NgayThang = ngayThang;
                    dbctNew.MaKP = maKP;
                    dbctNew.PhanLoai = 6;
                    dbctNew.YLenh = dtString;
                    dataContext.DienBiencts.Add(dbctNew);
                    dataContext.SaveChanges();
                }
            }
            else
            {
                if (dbctTT != null)
                {
                    dbctTT.YLenh = "";
                    dataContext.SaveChanges();
                }
            }
            //Update_ThuocCLS_KhoaKetHop(maBnhan, ngayThang, maKP);
        }

        /// <summary>
        /// Update diễn biến
        /// </summary>
        /// <param name="idDB"></param>
        public static void Update_DienBien_All(int idDB, int? maKP, int? loai = null, bool autoClear = true, bool checkKH = false)
        {
            QLBV_Database.QLBVEntities dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
            var db = dataContext.DienBiens.FirstOrDefault(o => o.ID == idDB);
            if (db != null)
            {
                if (loai == null ? db.Loai == 1 : loai == 1)
                {
                    var ngay = db.NgayNhap.Value.Date;

                    var bn = dataContext.BenhNhans.FirstOrDefault(o => o.MaBNhan == db.MaBNhan);
                    if (bn.MaKPDTKH == maKP && !checkKH)
                    {
                        var dienBienKH = dataContext.DienBiens.FirstOrDefault(o => o.MaBNhan == db.MaBNhan && o.Loai == db.Loai && o.MaKP == bn.MaKP && o.NgayNhap.Value.Year == db.NgayNhap.Value.Year && o.NgayNhap.Value.Month == db.NgayNhap.Value.Month && o.NgayNhap.Value.Day == db.NgayNhap.Value.Day);
                        if (dienBienKH != null)
                            Update_DienBien_All(dienBienKH.ID, bn.MaKP, loai, autoClear, true);
                    }

                    var dienBienct = (from dbct in dataContext.DienBiencts.Where(o => o.MaBNhan == db.MaBNhan && o.NgayThang == ngay && o.PhanLoai != 2 && o.MaKP == maKP)
                                      select new { YLenh = dbct.YLenh, dbct.PhanLoai }).ToList();
                    if (dienBienct != null && dienBienct.Count > 0)
                    {
                        string xn = "";
                        string cdha = "";
                        string vltl = "";
                        string dhn = "";
                        string dtt = "";
                        string pttt = "";
                        string tdcn = "";
                        string kh = "";
                        foreach (var item in dienBienct)
                        {
                            if (item.PhanLoai == 1)
                                dhn = item.YLenh;
                            else if (item.PhanLoai == 5)
                                vltl = item.YLenh;
                            else if (item.PhanLoai == 9)
                                kh = item.YLenh;
                            else if (item.PhanLoai == 4)
                                xn = item.YLenh;
                            else if (item.PhanLoai == 3)
                                cdha = item.YLenh;
                            else if (item.PhanLoai == 6)
                                dtt = item.YLenh;
                            else if (item.PhanLoai == 7)
                                pttt = item.YLenh;
                            else if (item.PhanLoai == 8)
                                tdcn = item.YLenh;
                        }

                        string yLenh = dhn + (!string.IsNullOrWhiteSpace(dtt) ? (Environment.NewLine + dtt) : "") + (!string.IsNullOrWhiteSpace(vltl) ? (Environment.NewLine + vltl) : "") + (!string.IsNullOrWhiteSpace(pttt) ? (Environment.NewLine + pttt) : "") + (!string.IsNullOrWhiteSpace(xn) ? (Environment.NewLine + xn) : "") + (!string.IsNullOrWhiteSpace(cdha) ? (Environment.NewLine + cdha) : "") + (!string.IsNullOrWhiteSpace(tdcn) ? (Environment.NewLine + tdcn) : "") + (!string.IsNullOrWhiteSpace(kh) ? (Environment.NewLine + kh) : "") + Environment.NewLine;
                        if (string.IsNullOrWhiteSpace(yLenh))
                        {
                            dataContext.DienBiens.Remove(db);
                        }
                        else
                        {
                            if (autoClear)
                                db.YLenh = "";
                            db.YLenh += yLenh;
                        }
                        dataContext.SaveChanges();
                    }
                    else
                    {
                        dataContext.DienBiens.Remove(db);
                        dataContext.SaveChanges();
                    }
                }
                else if (loai == null ? db.Loai == 2 : loai == 2)
                {
                    Update_DienBien_TheoLoai(idDB, 2, maKP, true);
                }
            }
        }

        public static void Update_DienBien_TheoLoai(int idDB, int loai, int? maKP, bool autoClear = false)
        {
            QLBV_Database.QLBVEntities dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
            var db = dataContext.DienBiens.FirstOrDefault(o => o.ID == idDB);
            if (db != null)
            {
                var ngay = db.NgayNhap.Value.Date;
                var dbct = dataContext.DienBiencts.FirstOrDefault(o => o.MaBNhan == db.MaBNhan && o.NgayThang == ngay && o.PhanLoai == loai && o.MaKP == maKP);
                if (dbct != null)
                {
                    string yLenh = Environment.NewLine + dbct.YLenh;
                    if (string.IsNullOrWhiteSpace(yLenh))
                    {
                        dataContext.DienBiens.Remove(db);
                    }
                    else
                    {
                        if (autoClear)
                            db.YLenh = "";
                        db.YLenh += yLenh;
                    }
                    dataContext.SaveChanges();
                }
                else
                {
                    dataContext.DienBiens.Remove(db);
                    dataContext.SaveChanges();
                }
            }
        }

        public static void PhieuSoKet(int _maBNhan, string dienBien, string xnCLS, string quaTrinh, string ketQua, string huongDT, string BSDT, int soNgayDT, DateTime NgayThang)
        {
            frmIn frm = new frmIn();
            QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(Bien.StrCon);
            BaoCao.rep_phieusoket15ngay rep = new BaoCao.rep_phieusoket15ngay(soNgayDT, BSDT);

            BenhNhan benhnhan = _data.BenhNhans.Single(p => p.MaBNhan == _maBNhan);

            var khambenh = _data.BNKBs.Where(p => p.MaBNhan == _maBNhan).ToList();
            var canbo = _data.CanBoes.ToList();
            var kphong = _data.KPhongs.ToList();
            var vaovien = _data.VaoViens.Where(p => p.MaBNhan == _maBNhan).FirstOrDefault();
            //var ravien = _data.RaViens.Where(p => p.MaBNhan == _maBNhan).FirstOrDefault(); // tạm thời bỏ
            rep.NgayRa.Value = NgayThang;
            //if (ravien != null)
            //{
            //    rep.NgayRa.Value = ravien.NgayRa;
            //}

            var _lkq = (from kb in khambenh
                        join kp in kphong on kb.MaKP equals kp.MaKP
                        select new
                        {
                            kp.TenKP,
                            kb.ChanDoan,
                            kb.IDKB,
                            kb.MaICD,
                            kb.Giuong,
                            kb.Buong,
                            kb.BenhKhac,
                            kb.ChanDoanYHCT,
                            kb.BenhKhacYHCT,
                            kb.MaICD2,
                        }).OrderByDescending(p => p.IDKB).ToList();
            if (_lkq.Count() > 0 && benhnhan != null && vaovien != null)
            {
                rep.celtenbn.Text = benhnhan.TenBNhan.ToUpper().ToString();
                rep.celtuoi.Text = Bien.MaBV == "14018" ? DungChung.Ham.TinhTuoiBenhNhan(_data, _maBNhan)
                    : Bien.MaBV == "24012" ? DungChung.Ham.TuoitheoThang(_data, _maBNhan, Bien.formatAge_24012)
                    : benhnhan.Tuoi.ToString();
                rep.celdiachi.Text = benhnhan.DChi.ToString();
                rep.celkhoa.Text = DungChung.Ham.GetTenKP_20001(_lkq.First().TenKP.ToString());
                rep.celbuong.Text = _lkq.First().Buong.ToString();
                rep.celgiuong.Text = _lkq.First().Giuong.ToString();
                rep.gtinh.Value = benhnhan.GTinh.ToString();
                if (Bien.MaBV == "20001" || Bien.MaBV == "24297")
                {
                    var icd = _data.ICD10.Where(o => true).ToList();
                    rep.celchandoan.Text = DungChung.Ham.GhepChuoiChanDoanYHCT(icd, _lkq.First().MaICD, _lkq.First().MaICD2);
                }
                else if (Bien.MaBV == "14018" || Bien.MaBV == "24012")
                {
                    rep.celchandoan.Text = DungChung.Ham.GetChanDoanKB(_data, _maBNhan);
                }
                else
                {
                    rep.celchandoan.Text = _lkq.First().MaICD + " - " + DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.GetICDstr(_lkq.First().ChanDoan + "; " + _lkq.First().BenhKhac), DungChung.Ham.GetICDstr(_lkq.First().ChanDoanYHCT + "; " + _lkq.First().BenhKhacYHCT)); //DungChung.Ham.GetICDstr(_lkq.First().ChanDoanYHCT + "; " + _lkq.First().BenhKhacYHCT) + "[" + DungChung.Ham.GetICDstr(_lkq.First().ChanDoan + "; " + _lkq.First().BenhKhac) + "]";
                }

                rep.sovv.Text = "Số vào viện: " + vaovien.SoVV;
            }
            rep.celDienBien.Text = dienBien;
            rep.celXNCLS.Text = xnCLS;
            rep.celQuaTrinhDTri.Text = quaTrinh;
            rep.celDanhGiaKQ.Text = ketQua;
            rep.celHuongDtriVaTienLuong.Text = huongDT;
            rep.celcqcq.Text = Bien.TenCQCQ.ToUpper();
            rep.celtenbv.Text = Bien.TenCQ.ToUpper();
            rep.CreateDocument();
            frm.prcIN.PrintingSystem = rep.PrintingSystem;
            frm.ShowDialog();
        }

        #endregion Hàm
        #endregion Soncx
        #region getHanDung

        public static DateTime? getHanDung(int madv, string solo)
        {
            QLBV_Database.QLBVEntities _db = new QLBV_Database.QLBVEntities(Bien.StrCon);
            var handung = (from nd in _db.NhapDs.Where(p => p.PLoai == 1)
                           join ndct in _db.NhapDcts.Where(p => p.MaDV == madv && p.SoLo == solo && p.HanDung != null) on nd.IDNhap equals ndct.IDNhap
                           select ndct.HanDung).FirstOrDefault();
            if (handung == null)
                return null;
            else
                return handung.Value.Date;
        }

        #endregion getHanDung
        #region hàm set khoa phòng hiện tại và nội-ngoại trú cho bệnh nhân

        public static bool _setMaKP_BenhNhan(QLBV_Database.QLBVEntities _data, int _mabn, int _makp, int _noitru)
        {
            try
            {
                var sua = _data.BenhNhans.Single(p => p.MaBNhan == _mabn);
                if (_makp > 0)
                {
                    sua.MaKP = _makp;
                    //test
                    //sua.MaKP = _makp;//minh
                    //
                }
                if (_noitru == 0 || _noitru == 1)
                    sua.NoiTru = _noitru;
                else
                    sua.NoiTru = sua.NoiTru;
                if (_noitru == 0)
                {
                    var vaovien = _data.VaoViens.Where(p => p.MaBNhan == _mabn).ToList();
                    if (vaovien.Count > 0)
                        sua.DTNT = true;
                    else
                        sua.DTNT = false;
                }
                else
                {
                    sua.DTNT = false;
                }
                _data.SaveChanges();
                return true;
            }
            catch
            {
                return false;
            }
        }

        public static bool _setMaKP_BenhNhan_24012(QLBV_Database.QLBVEntities _data, int _mabn, int _makp, int _noitru, bool _vvnt)
        {
            try
            {
                var sua = _data.BenhNhans.Single(p => p.MaBNhan == _mabn);
                if (_makp > 0)
                {
                    sua.MaKP = _makp;//minh
                    //
                }
                if (_noitru == 0 || _noitru == 1)
                    sua.NoiTru = _noitru;
                else
                    sua.NoiTru = sua.NoiTru;

                if (!_vvnt)
                {
                    if (_noitru == 0)
                    {
                        var vaovien = _data.VaoViens.Where(p => p.MaBNhan == _mabn).ToList();
                        if (vaovien.Count > 0)
                            sua.DTNT = true;
                        else
                            sua.DTNT = false;
                    }
                    else
                    {
                        sua.DTNT = false;
                    }
                }

                _data.SaveChanges();
                return true;
            }
            catch
            {
                return false;
            }
        }

        #endregion hàm set khoa phòng hiện tại và nội-ngoại trú cho bệnh nhân
        #region hàm set trạng thái(Status) trong bảng "Bệnh nhân"

        public static void _setStatus(int ms, int status)
        {
            QLBV_Database.QLBVEntities DaTaContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
            int _sokb = 0;
            try
            {
                int? max = DaTaContext.BenhNhans.Max(p => p.SoKB);
                _sokb = max ?? 0;
                _sokb++;
            }
            catch (Exception)
            {
                _sokb = 1;
            }
            if (status == 0)
                _sokb = 0;
            // kiểm tra ngoại trú mới thêm số kb;

            var ktnt = DaTaContext.BenhNhans.Where(p => p.MaBNhan == (ms)).ToList();
            if (ktnt.Count > 0)
            {
                if (ktnt.First().NoiTru == 1)
                    _sokb = 0;
                else
                    if (ktnt.First().SoKB != null && ktnt.First().SoKB > 0)
                    _sokb = ktnt.First().SoKB;
            }
            foreach (BenhNhan item in ktnt)
            {
                item.Status = status;
                if (status == 3 && item.SoKB == 0)
                    item.SoKB = _sokb;
                DaTaContext.SaveChanges();
            }
        }

        #endregion hàm set trạng thái(Status) trong bảng "Bệnh nhân"
        #region set SoKB

        public static bool setSoKB(int mabn)
        {
            QLBV_Database.QLBVEntities DaTaContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
            int _sokb = 0;
            try
            {
                int? max = DaTaContext.BenhNhans.Where(p => p.NNhap != null && p.NNhap.Value.Year == DateTime.Now.Year).Max(p => p.SoKB);
                _sokb = max ?? 0;
                _sokb++;
                BenhNhan bn = DaTaContext.BenhNhans.Single(p => p.MaBNhan == mabn);
                bn.SoKB = _sokb;
                DaTaContext.SaveChanges();
                return true;
            }
            catch
            {
                return false;
            }
        }

        #endregion set SoKB
        #region hàm set trạng thái(Status) trong bảng "Bệnh nhân"

        /// <summary>
        /// set trạng thái đã khám bệnh hay chưa
        /// </summary>
        /// <param name="ms"></param>
        /// <param name="status"></param>
        /// <param name="makp"></param>
        public static void _setStatus(int ms, int status, int makp)
        {
            QLBV_Database.QLBVEntities DaTaContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
            int _sokb = 0;
            try
            {
                //var maxSD = DaTaContext.BenhNhans.Select(p => p.SoKB).ToList().OrderByDescending(p => p.Value).ToList();
                //if (maxSD.Count > 0)
                //    _sokb = maxSD.First().Value + 1;
                var maxSD = DaTaContext.BenhNhans.Max(p => p.SoKB);
                if (maxSD != null)
                    _sokb = maxSD + 1;
                else
                    _sokb = 1;
            }
            catch (Exception)
            {
                _sokb = 1;
            }
            if (status == 0)
                _sokb = 0;
            // kiểm tra ngoại trú mới thêm số kb;
            //  int ktsokb = 0;
            var ktnt = DaTaContext.BenhNhans.Where(p => p.MaBNhan == ms).ToList();
            if (ktnt.Count > 0)
            {
                if (ktnt.First().NoiTru == 1)
                    _sokb = 0;
                else
                    if (ktnt.First().SoKB != null)
                    _sokb = ktnt.First().SoKB;
            }
            foreach (var bnstatus in ktnt)
            {
                if (makp > 0)
                {
                    bnstatus.MaKP = makp;
                }
                bnstatus.Status = status;
            }
            DaTaContext.SaveChanges();
        }

        #endregion hàm set trạng thái(Status) trong bảng "Bệnh nhân"
        #region hàm lấy  đơn vị

        public static string _getDonVi(QLBV_Database.QLBVEntities data, int madv)
        {
            string donvi = "";
            var q = data.DichVus.Where(p => p.MaDV == madv).ToList();
            if (q.Count > 0 && q.First().DonVi != null)
            {
                donvi = q.First().DonVi.Trim();
            }
            return donvi;
        }

        public static List<LKhoaPhong> None()
        {
            List<LKhoaPhong> _lkp = new List<LKhoaPhong>();
            LKhoaPhong _l = new LKhoaPhong();
            _l.TenKP = " None";
            _l.MaKP = 0;
            _l.PLoai = "";
            _lkp.Add(_l);

            return _lkp;
        }

        public static List<LKhoaPhong> TatCa()
        {
            List<LKhoaPhong> _lkp = new List<LKhoaPhong>();
            LKhoaPhong _l = new LKhoaPhong();
            _l.TenKP = " Tất cả";
            _l.MaKP = 0;
            _l.PLoai = "";
            _lkp.Add(_l);

            return _lkp;
        }

        public class LKhoaPhong
        {
            public string tenkp;
            public int makp;
            public string ploai;

            public string TenKP
            {
                set { tenkp = value; }
                get { return tenkp; }
            }

            public int MaKP
            {
                set { makp = value; }
                get { return makp; }
            }

            public string PLoai
            {
                set { ploai = value; }
                get { return ploai; }
            }
        }

        #endregion hàm lấy  đơn vị
        #region hàm lấy giá trong danh mục

        /// <summary>
        ///
        /// </summary>
        /// <param name="mabn"></param>
        /// <param name="TrongDM"></param>
        /// <param name="ngaychidinh"></param>
        /// <returns>0: Đơn giá BHYT; 15: Giá TT15; 39:Giá TT39</returns>
        public static int GiaCu(int mabn, int TrongDM)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(Bien.StrCon);
            int giacu = 15;

            var ttbn = data.BenhNhans.Where(p => p.MaBNhan == mabn).ToList();
            if (ttbn.Count > 0)
            {
                string dtuong = ttbn.First().DTuong;
                DateTime ngaythang = DungChung.Ham.NgayTu(Bien.ngayGiaMoiDV);
                #region trong DM
                if (dtuong == "BHYT" && TrongDM == 1)
                {
                    if (Bien.ngayGiaMoiTT39 > new DateTime(2000, 01, 01))
                    {
                        ngaythang = DungChung.Ham.NgayTu(Bien.ngayGiaMoiTT39);
                        giacu = 39;
                        if (ttbn.First().NNhap.Value.Date >= ngaythang)
                            giacu = 39;
                        else
                        {
                            var vaovien = (from vv in data.VaoViens.Where(p => p.MaBNhan == mabn)
                                           select vv.NgayVao).ToList();

                            if (vaovien.Count > 0)
                            {
                                if (vaovien.First() != null)
                                {
                                    if (vaovien.First().Value.Date < ngaythang)
                                        giacu = 15;
                                    else
                                        giacu = 39;
                                }
                                else giacu = 15;
                            }
                            else
                            {
                                if (ttbn.First().NNhap.Value.Date < ngaythang)//dùng chung Bien.MaBV=="30007"
                                    giacu = 15;
                            }
                        }
                    }
                    else
                    {
                        ngaythang = DungChung.Ham.NgayTu(Bien.ngayGiaMoi);
                        giacu = 15;
                        if (ttbn.First().NNhap.Value.Date >= ngaythang)
                            giacu = 15;
                        else
                        {
                            var vaovien = (from vv in data.VaoViens.Where(p => p.MaBNhan == mabn)
                                           select vv.NgayVao).ToList();

                            if (vaovien.Count > 0)
                            {
                                if (vaovien.First() != null)
                                {
                                    if (vaovien.First().Value.Date < ngaythang)
                                        giacu = 0;
                                    else
                                        giacu = 15;
                                }
                                else giacu = 0;
                            }
                            else
                            {
                                if (ttbn.First().NNhap.Value.Date < ngaythang)//dùng chung Bien.MaBV=="30007"
                                    giacu = 0;
                            }
                        }
                    }
                }
                #endregion trong DM
                else
                {
                    ngaythang = DungChung.Ham.NgayTu(Bien.ngayGiaMoiDV);
                    if (ttbn.First().NNhap.Value.Date >= ngaythang)
                        giacu = 15;
                    else
                    {
                        var vaovien = (from vv in data.VaoViens.Where(p => p.MaBNhan == mabn)
                                       select vv.NgayVao).ToList();

                        if (vaovien.Count > 0)
                        {
                            if (vaovien.First() != null)
                            {
                                if (vaovien.First().Value.Date < ngaythang)
                                    giacu = 0;
                                else
                                    giacu = 15;
                            }
                            else giacu = 0;
                        }
                        else
                        {
                            if (ttbn.First().NNhap.Value.Date < ngaythang)//dùng chung Bien.MaBV=="30007"
                                giacu = 0;
                        }
                    }
                }
            }
            return giacu;
        }

        //public static bool GiaCu(int mabn, int TrongDM, DateTime ngaychidinh)
        //{
        //    QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(Bien.StrCon);
        //    bool giacu = false;

        //    var ttbn = data.BenhNhans.Where(p => p.MaBNhan == mabn).ToList();
        //    if (ttbn.Count > 0)
        //    {
        //        string dtuong = ttbn.First().DTuong;
        //        DateTime ngaythang = DungChung.Ham.NgayTu(Bien.ngayGiaMoiDV);
        //        if (dtuong == "BHYT" && TrongDM == 1)
        //            ngaythang = DungChung.Ham.NgayTu(Bien.ngayGiaMoi);
        //        if (ttbn.First().NNhap.Value.Date >= ngaythang)
        //            giacu = false;
        //        else
        //        {
        //            if (ngaychidinh.Date < ngaythang)
        //            {
        //                giacu = true;
        //            }
        //            else
        //            {
        //                giacu = false;
        //            }
        //            var vaovien = (from vv in data.VaoViens.Where(p => p.MaBNhan == mabn)
        //                           select vv.NgayVao).ToList();

        //            if (ttbn.Count > 0 && vaovien.Count > 0 && vaovien.First() != null )
        //            {
        //                if (vaovien.First().Value.Date < ngaythang)
        //                    giacu = true;
        //                else
        //                    giacu = false;
        //            }
        //            if (vaovien.Count <= 0 && ttbn.First().NoiTru == 0 && ttbn.First().NNhap.Value.Date < ngaythang)//dùng chung Bien.MaBV=="30007"
        //                giacu = true;
        //        }
        //    }
        //    return giacu;
        //}
        public static double _getGiaDM(QLBV_Database.QLBVEntities data, int maDV, int trongDM, int mabn, DateTime ngaychidinh)
        {
            int giacu = DungChung.Ham.GiaCu(mabn, trongDM);
            double gia = 0;
            var q = data.DichVus.Where(p => p.MaDV == maDV).ToList();
            if (q.Count > 0)
            {
                if (trongDM == 1)
                {
                    if (giacu == 0)
                        gia = q.First().DonGiaBHYT;
                    if (giacu == 15)
                        gia = q.First().DonGiaTT15;
                    else if (giacu == 39)
                        gia = q.First().DonGiaTT39;
                }
                else
                {
                    //if (Bien.MaBV == "30009")
                    //{
                    if (giacu == 0)
                        gia = q.First().DonGia2; // giá DV cũ
                    else
                        gia = q.First().DonGiaDV2; // giá  DV mới
                    //}
                    //else
                    //{
                    //    gia = q.First().DonGia2;

                    //}
                }
            }
            return gia;
        }

        #endregion hàm lấy giá trong danh mục
        #region KiemTra soLo đã sử dụng

        public static bool checkSoLo(int makho, int madv, string solo, double dongia)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(Bien.StrCon);
            var _gia2 = (from nhap in data.NhapDs.Where(p => p.PLoai == 2).Where(p => p.MaKP == makho)
                         join nhapct in data.NhapDcts.Where(p => p.MaDV == madv).Where(p => p.DonGia == dongia && p.SoLo == solo) on nhap.IDNhap equals nhapct.IDNhap
                         select new { nhapct }).ToList();
            if (_gia2.Count > 0)
            {
                return true;
            }
            else
            {
                var slkd2 = (from sl in data.DThuoccts.Where(p => p.MaDV == madv).Where(p => p.DonGia == dongia && p.SoLo == solo).Where(p => p.Status == 0)
                             join kd in data.DThuocs.Where(p => p.MaKXuat == makho) on sl.IDDon equals kd.IDDon
                             select new { sl.DonGia, sl.SoLuong }).ToList();
                if (slkd2.Count > 0)
                    return true;
                return false;
            }
        }

        #endregion KiemTra soLo đã sử dụng
        #region kiểm tra số lượng tồn
        /// <summary>
        ///
        /// </summary>
        /// <param name="data"></param>
        /// <param name="maDV"></param>
        /// <param name="makho"></param>
        /// <param name="ppxuat"></param>
        /// <param name="gia">giá thuốc kê</param>
        /// <param name="soluongke"> số lượng thuốc kê</param>
        /// <param name="macc"></param>
        /// <returns></returns>

        public static double _checkTon(QLBV_Database.QLBVEntities data, int maDV, int makho, double gia, double soluongke, string solo)
        {
            double soluong = -1;
            if (Bien.PPTinhTon == 0)
            {
                //chưa có phương pháp xuất theo lô
                var tonduoc = data.TonDuocs.Where(p => p.MaDV == maDV && p.MaKho == makho && p.DonGia == gia).Select(p => p.SoLuongTon).FirstOrDefault();
                if (tonduoc != null)
                {
                    soluong = tonduoc;
                    soluong -= soluongke;
                }
                //var TonKD=
                return soluong;
            }
            else
            {
                var ppxuat = data.KPhongs.Where(p => p.MaKP == makho).Select(p => p.PPXuat).FirstOrDefault();
                int pp = ppxuat == null ? -1 : ppxuat.Value;

                var _gia2 = (from nhap in data.NhapDs.Where(p => p.MaKP == makho)
                             join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == gia && (pp == 3 ? p.SoLo == solo : true)) on nhap.IDNhap equals nhapct.IDNhap
                             select new { nhap.NgayNhap, nhap.PLoai, nhapct }).ToList();
                var _gia = (from nhap in _gia2.OrderByDescending(p => p.NgayNhap)
                            group new { nhap } by new { nhap.nhapct.MaDV, nhap.nhapct.DonGia } into kq
                            select new { kq.Key.DonGia, soluong = (kq.Where(p => p.nhap.PLoai == 1).Sum(p => p.nhap.nhapct.SoLuongN) - kq.Where(p => p.nhap.PLoai == 2 || p.nhap.PLoai == 3).Sum(p => p.nhap.nhapct.SoLuongX)) }).ToList();
                if (_gia.Count > 0)
                {
                    soluong = _gia.First().soluong;
                    if (soluong < 0)
                    {
                        return soluong;
                    }
                    else
                    {
                        var slkd2 = (from sl in data.DThuoccts.Where(p => p.Status == 0).Where(p => p.MaDV == maDV).Where(p => p.DonGia == gia && (pp == 3 ? p.SoLo == solo : true)).Where(p => p.Status == null || p.Status == 0)
                                     join kd in data.DThuocs.Where(p => p.MaKXuat == makho).Where(p => p.KieuDon != 2) on sl.IDDon equals kd.IDDon
                                     select new { sl.DonGia, sl.SoLuong }).ToList();
                        var slkd = (from sl in slkd2
                                    group sl by sl.DonGia into kq
                                    select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
                        if (slkd.Count > 0)
                        {
                            if (slkd.First().soluong - soluongke > 0)
                                soluong -= soluongke;
                            else
                                soluong -= (slkd.First().soluong);

                            if (soluong <= 0)
                                return soluong;
                        }
                    }
                }
                return soluong;
            }
        }

        #endregion kiểm tra số lượng tồn
        #region kiểm tra tồn xuất dược

        public static double _checkTon_XuatDuoc(QLBV_Database.QLBVEntities data, int maDV, int makho, double gia, double soluongke, string solo)
        {
            double soluong = -1;
            if (Bien.PPTinhTon == 0)
            {
                //chưa có phương pháp xuất theo lô
                var tonduoc = data.TonDuocs.Where(p => p.MaDV == maDV && p.MaKho == makho && p.DonGia == gia).Select(p => p.SoLuongTon).FirstOrDefault();
                if (tonduoc != null)
                {
                    soluong = tonduoc;
                    soluong -= soluongke;
                }
                //var TonKD=
                return soluong;
            }
            else
            {
                var ppxuat = data.KPhongs.Where(p => p.MaKP == makho).Select(p => p.PPXuat).FirstOrDefault();
                int pp = ppxuat == null ? -1 : ppxuat.Value;

                var _gia2 = (from nhap in data.NhapDs.Where(p => p.MaKP == makho)
                             join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == gia && (pp == 3 ? p.SoLo == solo : true)) on nhap.IDNhap equals nhapct.IDNhap
                             select new { nhap.NgayNhap, nhap.PLoai, nhapct }).ToList();
                var _gia = (from nhap in _gia2.OrderByDescending(p => p.NgayNhap)
                            group new { nhap } by new { nhap.nhapct.MaDV, nhap.nhapct.DonGia } into kq
                            select new { kq.Key.DonGia, soluong = (kq.Where(p => p.nhap.PLoai == 1).Sum(p => p.nhap.nhapct.SoLuongN) - kq.Where(p => p.nhap.PLoai == 2 || p.nhap.PLoai == 3).Sum(p => p.nhap.nhapct.SoLuongX)) }).ToList();
                if (_gia.Count > 0)
                {
                    soluong = _gia.First().soluong - soluongke;

                    return soluong;
                }
                return soluong;
            }
        }

        #endregion kiểm tra tồn xuất dược

        public static void CheckBangTonDuoc(QLBV_Database.QLBVEntities data, int madv, int makho, double dongia)
        {
            var _ltonduoc = data.TonDuocs.Where(p => p.MaDV == madv && p.MaKho == makho && p.DonGia == dongia).FirstOrDefault();
            if (_ltonduoc == null)
            {
                TonDuoc moi = new TonDuoc();
                moi.MaDV = madv;
                moi.MaKho = makho;
                moi.DonGia = dongia;
                data.TonDuocs.Add(moi);
                data.SaveChanges();
            }
        }

        public class ThuocTonTuTruc
        {
            public int _MaDV { get; set; }
            public double _DonGia { get; set; }
            public double SoLuonT { get; set; }
        }

        #region kiểm tra số lượng tồn tủ trực

        public static List<ThuocTonTuTruc> ChechTon_XuatTuTuc(QLBV_Database.QLBVEntities data, int maDV, int makho, double gia, double soluongke, string solo)
        {
            double soluong = -1; bool koxuat = false;
            List<ThuocTonTuTruc> kq = new List<ThuocTonTuTruc>();
            ThuocTonTuTruc ketqua = new ThuocTonTuTruc();
            ketqua.SoLuonT = soluong;
            kq.Add(ketqua);
            var ppxuat = data.KPhongs.Where(p => p.MaKP == makho).Select(p => p.PPXuat).FirstOrDefault();
            int pp = ppxuat == null ? -1 : ppxuat.Value;

            var _gia2 = (from nhap in data.NhapDs.Where(p => p.MaKP == makho)
                         join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV).Where(p => pp == 3 ? p.SoLo == solo : true) on nhap.IDNhap equals nhapct.IDNhap
                         select new { nhap.NgayNhap, nhap.PLoai, nhapct }).ToList();
            var _gia = (from nhap in _gia2.OrderByDescending(p => p.NgayNhap)
                        group new { nhap } by new { nhap.nhapct.MaDV, nhap.nhapct.DonGia } into kq1
                        select new { kq1.Key.DonGia, kq1.Key.MaDV, soluong = (kq1.Where(p => p.nhap.PLoai == 1).Sum(p => p.nhap.nhapct.SoLuongN) - kq1.Where(p => p.nhap.PLoai == 2 || p.nhap.PLoai == 3).Sum(p => p.nhap.nhapct.SoLuongX)) }).ToList();

            var ktratongiabd = _gia.Where(p => p.DonGia == gia).ToList();
            if (ktratongiabd.Count > 0)
            {
                soluong = ktratongiabd.First().soluong;
                if (soluong <= 0)
                {
                    koxuat = true;
                }
                else
                {
                    soluong -= soluongke;
                    if (soluong >= 0)
                    {
                        kq.Clear();
                        ThuocTonTuTruc moi = new ThuocTonTuTruc();
                        moi._MaDV = maDV;
                        moi._DonGia = gia;
                        moi.SoLuonT = soluong;
                        kq.Add(moi);
                        return kq;
                    }
                    else
                        koxuat = true;
                }
            }
            if (koxuat)
            {
                soluong = -1;
                foreach (var item in _gia.Where(p => p.DonGia != gia))
                {
                    soluong = item.soluong;
                    if (soluong > 0)
                    {
                        soluong -= soluongke;
                        if (soluong >= 0)
                        {
                            kq.Clear();
                            ThuocTonTuTruc moi = new ThuocTonTuTruc();
                            moi._MaDV = Convert.ToInt32(item.MaDV);
                            moi._DonGia = item.DonGia;
                            moi.SoLuonT = soluong;
                            kq.Add(moi);
                            return kq;
                        }
                        else
                            koxuat = true;
                    }
                }
                if (koxuat)
                {
                    soluong = _gia.Where(p => p.soluong > 0).Sum(p => p.soluong);

                    if (soluong - soluongke >= 0)
                    {
                        kq.Clear();
                        foreach (var item in _gia.Where(p => p.soluong > 0))
                        {
                            if (soluongke > 0)
                            {
                                ThuocTonTuTruc moi = new ThuocTonTuTruc();
                                moi._MaDV = Convert.ToInt32(item.MaDV);
                                moi._DonGia = item.DonGia;
                                moi.SoLuonT = soluongke >= item.soluong ? item.soluong : soluongke;
                                kq.Add(moi);
                                soluongke -= item.soluong;
                            }
                        }
                        return kq;
                    }
                }
            }
            return kq;
        }

        #endregion kiểm tra số lượng tồn tủ trực

        #region kiểm tra số lượng tồn khi lưu kê đơn

        /// <summary>
        ///
        /// </summary>
        /// <param name="data"></param>
        /// <param name="maDV"></param>
        /// <param name="makho"></param>
        /// <param name="ppxuat"></param>
        /// <param name="gia">giá thuốc kê</param>
        /// <param name="soluongke"> số lượng thuốc kê</param>
        /// <param name="macc"></param>
        /// <returns></returns>
        public static double _checkTon_KD(QLBV_Database.QLBVEntities data, int maDV, int makho, double gia, double soluongke, string solo)
        {
            ConnectData connect;// Lấy giá trị trả về
            connect = Program._connect;
            double soluong = 0;
            data = new QLBV_Database.QLBVEntities(Bien.StrCon);
            try
            {
                double ntrave = 0;
                try
                {
                    string strSql = "sp_Ham_checkTon_KD"; //
                    string strTrave = "@rs";              // tên biến lưu giá trị trả về của câu truy vấn
                    string[] strpara = new string[] { "@maKP", "@MaDV", "@soLuongKe", "@SoLo", "@DonGia" };
                    object[] oValues = new object[] { makho, maDV, soluongke, solo ?? "", gia };
                    SqlDbType[] sqlDbType = new SqlDbType[] { SqlDbType.Int, SqlDbType.Int, SqlDbType.Float, SqlDbType.NVarChar, SqlDbType.Float };
                    connect.Connect();
                    ntrave = (double)(connect.ExecuteNonQuery(strSql, strTrave, CommandType.StoredProcedure, strpara, oValues, sqlDbType));
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message);
                }
                return ntrave;
            }
            catch (Exception)
            {
                return 0;
            }
        }

        public static double _checkTon_KD1(QLBV_Database.QLBVEntities data, int maDV, int makho, double gia, double soluongke, string solo, DateTime? handung)
        {
            ConnectData connect;// Lấy giá trị trả về
            connect = Program._connect;
            double soluong = 0;
            data = new QLBV_Database.QLBVEntities(Bien.StrCon);
            try
            {
                double ntrave = 0;
                try
                {
                    string strSql = "sp_Ham_checkTon_KD1"; //
                    string strTrave = "@rs";              // tên biến lưu giá trị trả về của câu truy vấn
                    string[] strpara = new string[] { "@maKP", "@MaDV", "@soLuongKe", "@SoLo", "@DonGia", "@hd" };
                    object[] oValues = new object[] { makho, maDV, soluongke, solo ?? "", gia, (object)handung ?? DBNull.Value };
                    SqlDbType[] sqlDbType = new SqlDbType[] { SqlDbType.Int, SqlDbType.Int, SqlDbType.Float, SqlDbType.NVarChar, SqlDbType.Float, SqlDbType.Date };
                    connect.Connect();
                    ntrave = (double)(connect.ExecuteNonQuery(strSql, strTrave, CommandType.StoredProcedure, strpara, oValues, sqlDbType));
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message);
                }
                return ntrave;
            }
            catch (Exception)
            {
                return 0;
            }
        }

        //public static double _checkTon_KD(QLBV_Database.QLBVEntities data, int maDV, int makho, double gia, double soluongke, string solo)
        //{
        //    double soluong = 0;
        //    try
        //    {
        //        int ppxuat = -1;
        //        bool _dongy = false;
        //        var checkdongy = data.DichVus.Where(p => p.MaDV == maDV && p.DongY == 1).ToList();
        //        if (checkdongy.Count > 0)
        //            _dongy = true;
        //        var kp = data.KPhongs.Where(p => p.MaKP == makho).FirstOrDefault();
        //        if (kp != null && kp.PPXuat != null)
        //            ppxuat = kp.PPXuat.Value;
        //        #region tủ trực
        //        if (kp.PLoai == "Tủ trực")// kiểm tra tủ trực
        //        {
        //            var _giatt0 = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap).Where(p => p.MaKPnx == makho)
        //                           join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV && p.DonGia == gia && (ppxuat == 3 ? p.SoLo == solo : true)) on nhap.IDNhap equals nhapct.IDNhap
        //                           select new { nhapct.DonGia, nhapct.SoLuongX, nhap.PLoai, nhap.KieuDon, nhapct.MaDV, nhapct.SoLuongN, nhap.NgayNhap }).ToList();
        //            var _giatt = (from nd in _giatt0
        //                          group nd by new { nd.MaDV, nd.DonGia } into kq
        //                          select new
        //                          {
        //                              kq.Key.DonGia,
        //                              soluong = (kq.Sum(p => p.SoLuongX) - kq.Where(p => p.PLoai == 1 && p.KieuDon == 2).Sum(p => p.SoLuongN)),
        //                              ngay = kq.Min(p => p.NgayNhap)
        //                          }).OrderBy(p => p.ngay).FirstOrDefault();

        //            if (_giatt != null)
        //            {
        //                soluong = _giatt.soluong;

        //                var slkd0 = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == gia).Where(p => (ppxuat == 3 ? p.SoLo == solo : true)).Where(p => p.Status == null || p.Status == 0 || p.Status == 1)
        //                             join kd in data.DThuocs.Where(p => p.MaKXuat == makho || p.MaKP == makho) on sl.IDDon equals kd.IDDon

        //                             select new
        //                             {
        //                                 sl.MaDV,
        //                                 sl.DonGia,
        //                                 SLKD = (sl.MaKXuat == makho && (sl.SoLuong > 0 || (sl.SoLuong < 0 && kd.KieuDon == 2))) ? sl.SoLuong : 0,
        //                                 SLTra = (kd.MaKP == makho && sl.Status == 0 && kd.KieuDon == 4) ? sl.SoLuong : 0// Đơn treo lĩnh HC VTYT (chỉ đơn trả dược mới trừ, đơn lĩnh thì không tính thêm : Ví dụ: tủ trực còn 50 viên, kê đơn trả cho kho tổng 30 viên (nhưng chưa lĩnh) cũng chỉ kê đơn cho bệnh nhân hoặc trả dược trong vòng 20 viên còn lại; Trường hợp kê đơn lĩnh thêm 40 viên, không được tính=> chỉ được tính khi nào đã lĩnh dược về khoa
        //                             }).ToList();
        //                var slkd = (from sl in slkd0
        //                            group new { sl } by sl.DonGia into kq
        //                            select new
        //                            {
        //                                kq.Key,
        //                                soluong = kq.Sum(p => p.sl.SLKD) - kq.Sum(p => p.sl.SLTra)
        //                            }).ToList();
        //                double _slkd = 0;
        //                if (slkd.Count > 0)
        //                {
        //                    _slkd = slkd.First().soluong;
        //                }

        //                else
        //                {
        //                    _slkd = 0;
        //                }
        //                soluong = soluong - _slkd;

        //            }

        //        }
        //        #endregion
        //        else
        //        {
        //            var _gia2 = (from nhap in data.NhapDs.Where(p => p.MaKP == makho)
        //                         join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == gia && (ppxuat == 3 ? p.SoLo == solo : true)) on nhap.IDNhap equals nhapct.IDNhap
        //                         select new { nhapct.SoLuongN, nhapct.SoLuongX, nhapct.DonGia, nhapct.MaDV, nhap.NgayNhap }).OrderByDescending(p => p.NgayNhap).ToList();
        //            var _gia = (from nhap in _gia2
        //                        group nhap by new { nhap.MaDV, nhap.DonGia } into kq
        //                        select new { kq.Key.DonGia, soluong = (kq.Sum(p => p.SoLuongN) - kq.Sum(p => p.SoLuongX)) }).ToList();
        //            if (_gia.Count > 0)
        //            {
        //                soluong = _gia.First().soluong;
        //                if (soluong < 0)
        //                {
        //                    return soluong;
        //                }
        //                else
        //                {
        //                    var slkd2 = (from sl in data.DThuoccts.Where(p => p.Status == 0).Where(p => p.MaDV == maDV).Where(p => p.DonGia == gia && (ppxuat == 3 ? p.SoLo == solo : true)).Where(p => p.Status == null || p.Status != -1)
        //                                 join kd in data.DThuocs.Where(p => p.MaKXuat == makho).Where(p => p.KieuDon != 2 && p.KieuDon != 4) on sl.IDDon equals kd.IDDon
        //                                 select new { sl.SoLuong, sl.MaDV, sl.DonGia, sl.Status }).ToList();

        //                    var slkd = (from sl in slkd2.Where(p => p.Status == null || p.Status == 0) //.Where(p => p.Status == null || p.Status != -1)
        //                                group sl by sl.DonGia into kq
        //                                select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
        //                    double _slkd1 = 0;
        //                    if (slkd.Count > 0)
        //                    {
        //                        _slkd1 = slkd.First().soluong;
        //                        if (_slkd1 - soluongke > 0)
        //                            soluong -= (_slkd1 - soluongke);
        //                        else
        //                            soluong -= (_slkd1);

        //                        if (soluong <= 0)
        //                            return soluong;
        //                    }

        //                    double _soLuongDYHH_KD = 0, _soluongDYHH = 0;
        //                    // so lương ĐY hao hụt
        //                    if (_dongy)
        //                    {
        //                        var qkp = data.KPhongs.Where(p => p.MaKP == makho && (p.PPHHDY == 1 || p.PPHHDY == 2)).ToList();
        //                        if (qkp.Count == 0)
        //                        {
        //                            var dongySL = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap).Where(p => p.MaKP == makho).Where(p => p.PLoai == 2)
        //                                           join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV && p.SoLuongDY != null && p.DonGia == gia) on nhap.IDNhap equals nhapct.IDNhap
        //                                           group new { nhapct } by new { nhapct.MaDV } into kq
        //                                           select new { soluong = kq.Sum(p => p.nhapct.SoLuongDY) }).ToList();
        //                            if (dongySL.Count > 0)
        //                                _soluongDYHH = dongySL.First().soluong;
        //                            _soLuongDYHH_KD = DungChung.Ham._getSL_DongY(data, maDV, _slkd1, makho);//, data.KPhongs.Where(p => p.Status == 1
        //                        }
        //                        soluong = soluong - _soluongDYHH - _soLuongDYHH_KD;
        //                    }
        //                }
        //            }

        //        }

        //        return soluong;
        //    }
        //    catch (Exception)
        //    {
        //        return 0;
        //    }

        //}
        #endregion kiểm tra số lượng tồn khi lưu kê đơn

        #region hàm lấy giá theo phương pháp xuất dược
        //public static double _getGia(QLBV_Database.QLBVEntities data, int madv, int ppxuat)
        //{
        //    double gia = 0;
        //    double soluong = 0;
        //    var _gia = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap)
        //                join nhapct in data.NhapDcts.Where(p => p.MaDV== maDV) on nhap.IDNhap equals nhapct.IDNhap
        //                group new { nhapct, nhap } by new { nhapct.MaDV, nhapct.DonGia, nhapct.MaCC } into kq
        //                select new { kq.Key.DonGia, kq.Key.MaCC, soluong = (kq.Sum(p => p.nhapct.SoLuongN) - kq.Sum(p => p.nhapct.SoLuongX)), ngay = kq.Min(p => p.nhap.NgayNhap) }).OrderBy(p => p.ngay).ToList();
        //    switch (ppxuat)
        //    {
        //        case 0://
        //            var q = data.DichVus.Where(p => p.MaDV== maDV).ToList();
        //            if (q.Count > 0)
        //            {
        //                gia = q.First().DonGia.Value;
        //            }
        //            break;
        //        case 1: // nhập trước xuất trước
        //            // giá ưu tiên
        //            var kt = data.GiaUTs.Where(p => p.MaDV== maDV).ToList();
        //            if (kt.Count > 0)
        //            {
        //                gia = kt.First().DonGia.Value;
        //                var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV== maDV).Where(p => p.DonGia == gia)
        //                            join kd in data.DThuocs.Where(p => p.Status == 0).Where(p => p.KieuDon != 2) on sl.IDDon equals kd.IDDon
        //                            group sl by sl.DonGia into kq
        //                            select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
        //                double _slkd = 0;
        //                if (slkd.Count > 0)
        //                {
        //                    _slkd = slkd.First().soluong;
        //                }
        //                if (_gia.Where(p => p.DonGia == gia).ToList().Count > 0 && _gia.Where(p => p.DonGia == gia).First().soluong > 0)
        //                {
        //                    soluong = _gia.Where(p => p.DonGia == gia).First().soluong - _slkd;
        //                    if (_gia.Where(p => p.DonGia == gia).First().MaCC != null)
        //                        Bien._maCC = _gia.Where(p => p.DonGia == gia).First().MaCC;
        //                }
        //                if (soluong > 0)
        //                {
        //                    Bien.SoLuongTon = soluong;
        //                }
        //                else
        //                {
        //                    System.Windows.Forms.DialogResult _result = System.Windows.Forms.MessageBox.Show("Số lượng thuốc đã hết theo sổ sách. \n Thuốc được khoa dược ưu tiên xuất, bạn vẫn muốn kê đơn?", "Hỏi kê đơn", System.Windows.Forms.MessageBoxButtons.YesNo, System.Windows.Forms.MessageBoxIcon.Question);
        //                    if (_result == System.Windows.Forms.DialogResult.Yes)
        //                    {
        //                        Bien.SoLuongTon = 1000;
        //                    }
        //                }

        //            }
        //            //kết thúc giá ưu tiên
        //            else
        //            {
        //                if (_gia.Count > 0)
        //                {
        //                    Double[] dsgia = new Double[_gia.Count];
        //                    foreach (var i in _gia)
        //                    {
        //                        // tạo một biến soluongkd = i.soluong- soluongkd
        //                        var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV== madv).Where(p => p.DonGia == i.DonGia)
        //                                    join kd in data.DThuocs.Where(p => p.Status == 0) on sl.IDDon equals kd.IDDon
        //                                    group sl by sl.DonGia into kq
        //                                    select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
        //                        double _slkd = 0;
        //                        if (slkd.Count > 0)
        //                        {
        //                            _slkd = slkd.First().soluong;
        //                        }
        //                        if (i.soluong > 0)
        //                        {
        //                            soluong = i.soluong - _slkd;
        //                            gia = i.DonGia;
        //                        }
        //                        if (soluong > 0)
        //                        {
        //                            Bien.SoLuongTon = soluong;
        //                            Bien._maCC = i.MaCC;
        //                            break;
        //                        }
        //                    }
        //                }

        //            }
        //            break;
        //        case 2: // xuất theo hạn sử dụng
        //            var kt2 = data.GiaUTs.Where(p => p.MaDV== madv).Where(p => p.Status == 1).ToList();
        //            if (kt2.Count > 0)
        //            {
        //                gia = kt2.First().DonGia.Value;
        //            }
        //            else
        //            {
        //                if (_gia.Count > 0)
        //                    gia = _gia.First().DonGia;
        //            }
        //            break;
        //    }
        //    return gia;
        //}
        #endregion hàm lấy giá theo phương pháp xuất dược
        #region lay giá và tính tồn dược theo kho

        public class giaSoLoHSD
        {
            public int MaDV { set; get; }
            public double SoLuong { set; get; }
            public double Gia { set; get; }
            public string SoLo { set; get; }
            public DateTime? HanDung { set; get; }

            public bool ton = false;

            public bool Ton
            {
                get { return ton; }
                set { ton = value; }
            }
        }

        public static giaSoLoHSD _getGia(QLBV_Database.QLBVEntities data, int maDV, int makho) // đang sử dụng
        {
            giaSoLoHSD dsach = new giaSoLoHSD();
            Bien.SoLuongTon = 0;
            dsach.Gia = 0;
            dsach.SoLo = null;
            dsach.SoLuong = 0;
            dsach.HanDung = null;
            int ppxuat = 0;
            var kp = data.KPhongs.Where(p => p.MaKP == makho).Select(p => p.PPXuat).ToList();
            if (kp.Count > 0 && kp.First() != null)
                ppxuat = kp.First().Value;
            var abc = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap).Where(p => p.MaKP == makho)
                       join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV) on nhap.IDNhap equals nhapct.IDNhap
                       select new { nhap.NgayNhap, nhapct.SoLuongN, nhapct.SoLo, nhapct.HanDung, nhapct.SoLuongX, nhapct.DonGia, nhapct.MaDV, nhap.PLoai }).ToList();
            var _gia2 = (from nhap in abc.OrderByDescending(p => p.NgayNhap)
                         group new { nhap } by new { MaDV = nhap.MaDV, nhap.DonGia } into kq
                         select new {kq.Key.MaDV, kq.Key.DonGia, soluongN = kq.Where(p => p.nhap.PLoai == 1).Sum(p => p.nhap.SoLuongN), soLuongX = kq.Where(p => p.nhap.PLoai == 2 || p.nhap.PLoai == 3).Sum(p => p.nhap.SoLuongX), ngay = kq.Min(p => p.nhap.NgayNhap) }).OrderBy(p => p.ngay).ToList();

            var _gia = (from nhap in _gia2
                        select new { nhap.MaDV, nhap.DonGia, soluong = nhap.soluongN - nhap.soLuongX, ngay = nhap.ngay }).OrderBy(p => p.ngay).ToList();

            var q = data.DichVus.Where(p => p.MaDV == maDV).ToList();
            switch (ppxuat)
            {
                case 0://

                    if (q.Count > 0)
                    {
                        if (q.First().DonGia != null)
                            dsach.Gia = q.First().DonGia;
                        else
                            dsach.Gia = 0;
                    }
                    break;

                case 1: // nhập trước xuất trước
                    bool _dongy = false;
                    if (q.Count > 0 && q.First().DongY != null && q.First().DongY == 1)
                        _dongy = true;
                    double _soluongDYHH = 0, _soLuongDYHH_KD = 0;

                    var kttutruc = data.KPhongs.Where(p => p.MaKP == makho).Where(p => p.PLoai.Contains("Tủ trực")).ToList();
                    if (kttutruc.Count > 0)// kiểm tra tủ trực
                    {
                        var _giatt0 = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap).Where(p => p.MaKPnx == makho)
                                       join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV) on nhap.IDNhap equals nhapct.IDNhap
                                       select new { nhapct.DonGia, nhapct.SoLuongX, nhap.PLoai, nhap.KieuDon, nhapct.MaDV, nhapct.SoLuongN, nhap.NgayNhap, nhapct.SoLo }).ToList();
                        var _giatt = (from nd in _giatt0
                                      group nd by new { nd.MaDV, nd.DonGia, nd.SoLo } into kq
                                      select new
                                      {
                                          kq.Key.MaDV,
                                          kq.Key.DonGia,
                                          kq.Key.SoLo,
                                          soluong = (kq.Sum(p => p.SoLuongX) - kq.Where(p => p.PLoai == 1 && p.KieuDon == 2).Sum(p => p.SoLuongN)),
                                          ngay = kq.Min(p => p.NgayNhap)
                                      }).OrderBy(p => p.ngay).ToList();

                        if (_giatt.Count > 0)
                        {
                            Double[] dsgia = new Double[_giatt.Count];
                            foreach (var i in _giatt)
                            {
                                var slkd0 = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.Status == null || p.Status == 0 || p.Status == 1)
                                             join kd in data.DThuocs.Where(p => p.MaKXuat == makho || p.MaKP == makho) on sl.IDDon equals kd.IDDon
                                             select new
                                             {
                                                 sl.MaDV,
                                                 sl.DonGia,
                                                 SLKD = (sl.MaKXuat == makho && (sl.SoLuong > 0 || (sl.SoLuong < 0 && kd.KieuDon == 2))) ? sl.SoLuong : 0,
                                                 SLTra = (kd.MaKP == makho && sl.Status == 0 && kd.KieuDon == 4) ? sl.SoLuong : 0// Đơn treo lĩnh HC VTYT (chỉ đơn trả dược mới trừ, đơn lĩnh thì không tính thêm : Ví dụ: tủ trực còn 50 viên, kê đơn trả cho kho tổng 30 viên (nhưng chưa lĩnh) cũng chỉ kê đơn cho bệnh nhân hoặc trả dược trong vòng 20 viên còn lại; Trường hợp kê đơn lĩnh thêm 40 viên, không được tính=> chỉ được tính khi nào đã lĩnh dược về khoa
                                             }).ToList();
                                var slkd = (from sl in slkd0
                                            group new { sl } by sl.DonGia into kq
                                            select new
                                            {
                                                kq.Key,
                                                soluong = kq.Sum(p => p.sl.SLKD) - kq.Sum(p => p.sl.SLTra)
                                            }).ToList();
                                double _slkd = 0;
                                if (slkd.Count > 0)
                                {
                                    _slkd = slkd.First().soluong;
                                }
                                if (i.soluong > 0)
                                {
                                    dsach.SoLuong = i.soluong - _slkd;
                                    dsach.Gia = i.DonGia;
                                    if (DungChung.Bien.MaBV == "27023")
                                    {
                                        var qhd = abc.Where(p => p.PLoai == 1 && p.MaDV == i.MaDV && p.DonGia == i.DonGia && p.SoLo != null && p.HanDung != null).OrderBy(p => p.NgayNhap).FirstOrDefault();
                                        if (qhd != null)
                                        {
                                            dsach.SoLo = qhd.SoLo;
                                            dsach.HanDung = qhd.HanDung;

                                        }
                                    }
                                }
                                if (dsach.SoLuong > 0)
                                {
                                    Bien.SoLuongTon = dsach.SoLuong;
                                    break;
                                }
                                else
                                {
                                    Bien.SoLuongTon = 0;
                                }
                            }
                        }
                    }
                    else
                    {
                        var kt = data.GiaUTs.Where(p => p.MaDV == maDV).Where(p => p.MaKP == makho).ToList();
                        if (kt.Count > 0)
                        {
                            dsach.Gia = kt.First().DonGia.Value;
                            // so lương ĐY hao hụt
                            if (_dongy)
                            {
                                var dongySL = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap).Where(p => p.MaKP == makho).Where(p => p.PLoai == 2)
                                               join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV && p.SoLuongDY != null && p.DonGia == dsach.Gia) on nhap.IDNhap equals nhapct.IDNhap
                                               group new { nhapct } by new { nhapct.MaDV } into kq
                                               select new { soluong = kq.Sum(p => p.nhapct.SoLuongDY) }).ToList();
                                if (dongySL.Count > 0)
                                    _soluongDYHH = dongySL.First().soluong;
                            }
                            //
                            var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == dsach.Gia).Where(p => p.Status == null || p.Status == 0)
                                        join kd in data.DThuocs.Where(p => p.MaKXuat == makho).Where(p => p.KieuDon != 2) on sl.IDDon equals kd.IDDon
                                        group sl by sl.DonGia into kq
                                        select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
                            double _slkd = 0;

                            if (slkd.Count > 0)
                            {
                                _slkd = slkd.First().soluong;
                            }
                            //so lượng ĐY HH KD
                            if (_dongy)
                                _soLuongDYHH_KD = DungChung.Ham._getSL_DongY(data, maDV, _slkd, makho);
                            //
                            if (_gia.Where(p => p.DonGia == dsach.Gia).ToList().Count > 0 && _gia.Where(p => p.DonGia == dsach.Gia).First().soluong > 0)
                            {
                                dsach.SoLuong = _gia.Where(p => p.DonGia == dsach.Gia).First().soluong - _slkd - _soluongDYHH - _soLuongDYHH_KD;
                                if (DungChung.Bien.MaBV == "27023")
                                {
                                    var qhd = abc.Where(p => p.PLoai == 1 && p.MaDV == maDV && p.DonGia == dsach.Gia && p.SoLo != null && p.HanDung != null).OrderBy(p => p.NgayNhap).FirstOrDefault();
                                    if (qhd != null)
                                    {
                                        dsach.SoLo = qhd.SoLo;
                                        dsach.HanDung = qhd.HanDung;

                                    }
                                }
                            }
                            if (dsach.SoLuong > 0)
                            {
                                Bien.SoLuongTon = dsach.SoLuong;
                            }
                            else
                            {
                                dsach.SoLuong = 0;
                                if (_gia.Count > 0)
                                {
                                    Double[] dsgia = new Double[_gia.Count];
                                    foreach (var i in _gia)
                                    {
                                        // tạo một biến soluongkd = i.soluong- soluongkd
                                        var slkd1 = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.Status == null || p.Status == 0)
                                                     join kd in data.DThuocs.Where(p => p.MaKXuat == makho).Where(p => p.KieuDon != 2) on sl.IDDon equals kd.IDDon
                                                     group sl by sl.DonGia into kq
                                                     select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
                                        double _slkd1 = 0;
                                        if (slkd1.Count > 0)
                                        {
                                            _slkd1 = slkd1.First().soluong;
                                        }
                                        // dông y

                                        _soLuongDYHH_KD = 0;
                                        // so lương ĐY hao hụt
                                        if (_dongy)
                                        {
                                            var dongySL = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap).Where(p => p.MaKP == makho).Where(p => p.PLoai == 2)
                                                           join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV && p.SoLuongDY != null && p.DonGia == i.DonGia) on nhap.IDNhap equals nhapct.IDNhap
                                                           group new { nhapct } by new { nhapct.MaDV } into kq
                                                           select new { soluong = kq.Sum(p => p.nhapct.SoLuongDY) }).ToList();
                                            if (dongySL.Count > 0)
                                                _soluongDYHH = dongySL.First().soluong;
                                            _soLuongDYHH_KD = DungChung.Ham._getSL_DongY(data, maDV, _slkd1, makho);
                                        }
                                        //

                                        //
                                        if (i.soluong > 0)
                                        {
                                            dsach.SoLuong = i.soluong - _slkd1 - _soluongDYHH - _soLuongDYHH_KD;
                                            dsach.Gia = i.DonGia;
                                            if (DungChung.Bien.MaBV == "27023")
                                            {
                                                var qhd = abc.Where(p => p.PLoai == 1 && p.MaDV == i.MaDV && p.DonGia == i.DonGia && p.SoLo != null && p.HanDung != null).OrderBy(p => p.NgayNhap).FirstOrDefault();
                                                if (qhd != null)
                                                {
                                                    dsach.SoLo = qhd.SoLo;
                                                    dsach.HanDung = qhd.HanDung;

                                                }
                                            }
                                        }
                                        if (dsach.SoLuong > 0)
                                        {
                                            Bien.SoLuongTon = dsach.SoLuong;
                                            break;
                                        }
                                        else
                                        {
                                            Bien.SoLuongTon = 0;
                                        }
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (_gia.Count > 0)
                            {
                                Double[] dsgia = new Double[_gia.Count];
                                foreach (var i in _gia)
                                {
                                    // tạo một biến soluongkd = i.soluong- soluongkd
                                    var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.Status == null || p.Status == 0)
                                                join kd in data.DThuocs.Where(p => p.MaKXuat == makho).Where(p => p.KieuDon != 2) on sl.IDDon equals kd.IDDon
                                                group sl by sl.DonGia into kq
                                                select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
                                    double _slkd = 0;
                                    if (slkd.Count > 0)
                                    {
                                        _slkd = slkd.First().soluong;
                                    }
                                    // dông y

                                    _soLuongDYHH_KD = 0;
                                    _soluongDYHH = 0;
                                    // so lương ĐY hao hụt
                                    if (_dongy)
                                    {
                                        var dongySL = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap).Where(p => p.MaKP == makho).Where(p => p.PLoai == 2)
                                                       join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV && p.SoLuongDY != null && p.DonGia == i.DonGia) on nhap.IDNhap equals nhapct.IDNhap
                                                       group new { nhapct } by new { nhapct.MaDV } into kq
                                                       select new { soluong = kq.Sum(p => p.nhapct.SoLuongDY) }).ToList();
                                        if (dongySL.Count > 0)
                                            _soluongDYHH = dongySL.First().soluong;
                                        _soLuongDYHH_KD = DungChung.Ham._getSL_DongY(data, maDV, _slkd, makho);
                                    }
                                    //
                                    if (i.soluong > 0)
                                    {
                                        dsach.SoLuong = i.soluong - _slkd - _soluongDYHH - _soLuongDYHH_KD;
                                        //   soluong = soluong - DungChung.Ham._getSL_DongY(data, maDV, soluong);
                                        dsach.Gia = i.DonGia;

                                        if (DungChung.Bien.MaBV == "27023")
                                        {
                                            var qhd = abc.Where(p => p.PLoai == 1 && p.MaDV == i.MaDV && p.DonGia == i.DonGia && p.SoLo != null && p.HanDung != null).OrderBy(p => p.NgayNhap).FirstOrDefault();
                                            if (qhd != null)
                                            {
                                                dsach.SoLo = qhd.SoLo;
                                                dsach.HanDung = qhd.HanDung;

                                            }
                                        }
                                    }
                                    if (dsach.SoLuong > 0)
                                    {
                                        Bien.SoLuongTon = dsach.SoLuong;
                                        break;
                                    }
                                    else
                                    {
                                        Bien.SoLuongTon = 0;
                                    }

                                }
                            }
                        }
                    }
                    break;

                case 2: // xuất theo hạn sử dụng - chua hoan thien
                    var kt2 = data.GiaUTs.Where(p => p.MaDV == maDV).Where(p => p.Status == 1).ToList();
                    if (kt2.Count > 0)
                    {
                        dsach.Gia = kt2.First().DonGia.Value;
                    }
                    else
                    {
                        if (_gia.Count > 0)
                            dsach.Gia = _gia.First().DonGia;
                    }
                    break;

                case 3:

                    var _gia3 = (from nhap in abc
                                 where (nhap.SoLo != null && nhap.SoLo != "")
                                 group new { nhap } by new { nhap.MaDV, nhap.DonGia, nhap.SoLo } into kq
                                 select new { kq.Key.MaDV, kq.Key.DonGia, kq.Key.SoLo, soluong = (kq.Sum(p => p.nhap.SoLuongN) - kq.Sum(p => p.nhap.SoLuongX)), ngay = kq.Min(p => p.nhap.NgayNhap) }).OrderBy(p => p.ngay).ToList();
                    string _solo = null;
                    var kttutruc3 = data.KPhongs.Where(p => p.MaKP == makho).Where(p => p.PLoai.Contains("Tủ trực")).ToList();
                    if (kttutruc3.Count > 0)// kiểm tra tủ trực
                    {
                        var _giatt = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap).Where(p => p.MaKPnx == makho)
                                      join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV).Where(p => p.SoLo != null && p.SoLo != "") on nhap.IDNhap equals nhapct.IDNhap
                                      group new { nhapct, nhap } by new { nhapct.MaDV, nhapct.DonGia, nhapct.SoLo } into kq
                                      select new { kq.Key.DonGia, kq.Key.SoLo, soluong = (kq.Sum(p => p.nhapct.SoLuongX)), ngay = kq.Min(p => p.nhap.NgayNhap) }).OrderBy(p => p.ngay).ToList();
                        if (_giatt.Count > 0)
                        {
                            Double[] dsgia = new Double[_giatt.Count];
                            foreach (var i in _giatt)
                            {
                                _solo = i.SoLo;
                                // tạo một biến soluongkd = i.soluong- soluongkd
                                var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.SoLo == (_solo)).Where(p => p.Status == null || p.Status == 0 || p.Status == 1)
                                            join kd in data.DThuocs.Where(p => p.MaKXuat == makho) on sl.IDDon equals kd.IDDon
                                            group sl by new { sl.DonGia, sl.SoLo } into kq
                                            select new { kq.Key.DonGia, kq.Key.SoLo, soluong = kq.Sum(p => p.SoLuong) }).ToList();
                                double _slkd = 0;
                                if (slkd.Count > 0)
                                {
                                    _slkd = slkd.First().soluong;
                                }
                                if (i.soluong > 0)
                                {
                                    dsach.SoLuong = i.soluong - _slkd;
                                    dsach.Gia = i.DonGia;
                                    dsach.SoLo = i.SoLo;
                                }
                                if (dsach.SoLuong > 0)
                                {
                                    Bien.SoLuongTon = dsach.SoLuong;
                                    break;
                                }
                                else
                                {
                                    Bien.SoLuongTon = 0;
                                }
                            }
                        }
                    }
                    else
                    {
                        var kt = data.GiaUTs.Where(p => p.MaDV == maDV).Where(p => p.MaKP == makho).ToList();
                        if (kt.Count > 0)
                        {
                            dsach.Gia = kt.First().DonGia.Value;
                            dsach.SoLo = kt.First().SoLo;
                            var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == dsach.Gia && p.SoLo == dsach.SoLo).Where(p => p.Status == 0)
                                        join kd in data.DThuocs.Where(p => p.MaKXuat == makho) on sl.IDDon equals kd.IDDon
                                        group sl by new { sl.DonGia, sl.SoLo } into kq
                                        select new { kq.Key, kq.Key.SoLo, soluong = kq.Sum(p => p.SoLuong) }).ToList();
                            double _slkd = 0;
                            if (slkd.Count > 0)
                            {
                                _slkd = slkd.First().soluong;
                            }
                            if (_gia3.Where(p => p.DonGia == dsach.Gia && p.SoLo == dsach.SoLo).ToList().Count > 0 && _gia3.Where(p => p.DonGia == dsach.Gia && p.SoLo == dsach.SoLo).First().soluong > 0)
                            {
                                dsach.SoLuong = _gia3.Where(p => p.DonGia == dsach.Gia && p.SoLo == dsach.SoLo).First().soluong - _slkd;
                            }
                            if (dsach.SoLuong > 0)
                            {
                                Bien.SoLuongTon = dsach.SoLuong;
                            }
                            else
                            {
                                dsach.SoLuong = 0;
                                if (_gia.Count > 0)
                                {
                                    Double[] dsgia = new Double[_gia.Count];
                                    foreach (var i in _gia3.Where(p => p.SoLo != dsach.SoLo))
                                    {
                                        // tạo một biến soluongkd = i.soluong- soluongkd
                                        _solo = i.SoLo;
                                        var slkd1 = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.SoLo == (_solo)).Where(p => p.Status == null || p.Status == 0)
                                                     join kd in data.DThuocs.Where(p => p.MaKXuat == makho) on sl.IDDon equals kd.IDDon
                                                     group sl by sl.DonGia into kq
                                                     select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
                                        double _slkd1 = 0;
                                        if (slkd1.Count > 0)
                                        {
                                            _slkd1 = slkd1.First().soluong;
                                        }
                                        if (i.soluong > 0)
                                        {
                                            dsach.SoLuong = i.soluong - _slkd1;
                                            dsach.Gia = i.DonGia;
                                            dsach.SoLo = i.SoLo;
                                        }
                                        if (dsach.SoLuong > 0)
                                        {
                                            Bien.SoLuongTon = dsach.SoLuong;

                                            break;
                                        }
                                        else
                                        {
                                            Bien.SoLuongTon = 0;
                                        }
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (_gia.Count > 0)
                            {
                                Double[] dsgia = new Double[_gia.Count];
                                foreach (var i in _gia3)
                                {
                                    // tạo một biến soluongkd = i.soluong- soluongkd
                                    _solo = i.SoLo;
                                    var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.SoLo == (_solo)).Where(p => p.Status == null || p.Status == 0)
                                                join kd in data.DThuocs.Where(p => p.MaKXuat == makho) on sl.IDDon equals kd.IDDon
                                                group sl by sl.DonGia into kq
                                                select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
                                    double _slkd = 0;
                                    if (slkd.Count > 0)
                                    {
                                        _slkd = slkd.First().soluong;
                                    }
                                    if (i.soluong > 0)
                                    {
                                        dsach.SoLuong = i.soluong - _slkd;
                                        dsach.Gia = i.DonGia;
                                        dsach.SoLo = i.SoLo;
                                    }
                                    var handung = (from nd in abc.Where(p => p.PLoai == 1) select nd).ToList();
                                    var qhd = handung.Where(p => p.MaDV == i.MaDV && p.SoLo == i.SoLo && p.HanDung != null).FirstOrDefault();
                                    if (qhd != null)
                                        dsach.HanDung = qhd.HanDung;
                                    if (dsach.SoLuong > 0)
                                    {
                                        Bien.SoLuongTon = dsach.SoLuong;

                                        break;
                                    }
                                    else
                                    {
                                        Bien.SoLuongTon = 0;
                                    }
                                }
                            }
                        }
                    }

                    break;
            }
            return dsach;
        }

        #endregion lay giá và tính tồn dược theo kho
        #region lay giá và tính tồn dược theo kho
        //public static double _getGia(QLBV_Database.QLBVEntities data, int maDV, int makho, string soloHT, DateTime? _handung )
        //{
        //    int ppxuat = 0;
        //    var kp = data.KPhongs.Where(p => p.MaKP == makho).Select(p => p.PPXuat).ToList();
        //    if (kp.Count > 0 && kp.First() != null)
        //        ppxuat = kp.First().Value;
        //    double gia = 0;
        //    double soluong = 0;
        //   string solo = "";
        //   DateTime? handung = null;
        //   var abc = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap).Where(p => p.MaKP == makho)
        //              join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV) on nhap.IDNhap equals nhapct.IDNhap
        //              select new { nhap.NgayNhap, nhapct.SoLuongN, nhapct.SoLuongX, nhapct.DonGia, nhapct.MaDV, nhap.PLoai, SoLo = (Bien.MaBV == "27023") ? nhapct.SoLo : "", HanDung = (Bien.MaBV == "27023") ? nhapct.HanDung : null }).ToList();
        //   var _gia2 = (from nhap in abc.OrderByDescending(p => p.NgayNhap)
        //                group new { nhap } by new { MaDV = nhap.MaDV, nhap.DonGia, nhap.SoLo, nhap.HanDung } into kq
        //                select new { kq.Key.DonGia, kq.Key.SoLo, kq.Key.HanDung, soluongN = kq.Where(p => p.nhap.PLoai == 1).Sum(p => p.nhap.SoLuongN), soLuongX = kq.Where(p => p.nhap.PLoai == 2 || p.nhap.PLoai == 3).Sum(p => p.nhap.SoLuongX), ngay = kq.Min(p => p.nhap.NgayNhap) }).OrderBy(p => p.ngay).ToList();

        //   var _gia = (from nhap in _gia2
        //               select new { nhap.DonGia, nhap.SoLo, nhap.HanDung, soluong = nhap.soluongN - nhap.soLuongX, ngay = nhap.ngay }).OrderBy(p => p.ngay).ToList();

        //    var q = data.DichVus.Where(p => p.MaDV == maDV).ToList();
        //    switch (ppxuat)
        //    {
        //        case 0://

        //            if (q.Count > 0)
        //            {
        //                if (q.First().DonGia != null)
        //                    gia = q.First().DonGia;
        //                else
        //                    gia = 0;
        //            }
        //            break;
        //        case 1: // nhập trước xuất trước
        //            //  string _macc = "";
        //            bool _dongy = false;
        //            if (q.Count > 0 && q.First().DongY != null && q.First().DongY == 1)
        //                _dongy = true;
        //            double _soluongDYHH = 0, _soLuongDYHH_KD = 0;

        //            var kttutruc = data.KPhongs.Where(p => p.MaKP == makho).Where(p => p.PLoai.Contains("Tủ trực")).ToList();
        //            if (kttutruc.Count > 0)// kiểm tra tủ trực
        //            {
        //                var _giatt0 = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap).Where(p => p.MaKPnx == makho)
        //                               join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV) on nhap.IDNhap equals nhapct.IDNhap
        //                               select new {SoLo = Bien.MaBV == "27023" ?  nhapct.SoLo :"", HanDung= Bien.MaBV == "27023" ?nhapct.HanDung : null, nhapct.DonGia, nhapct.SoLuongX, nhap.PLoai, nhap.KieuDon, nhapct.MaDV, nhapct.SoLuongN, nhap.NgayNhap }).ToList();
        //                var _giatt = (from nd in _giatt0
        //                              group nd by new { nd.MaDV, nd.DonGia , nd.SoLo, nd.HanDung} into kq
        //                              select new
        //                              {
        //                                  kq.Key.DonGia,
        //                                  kq.Key.SoLo,
        //                                  kq.Key.HanDung,
        //                                  soluong = (kq.Sum(p => p.SoLuongX) - kq.Where(p => p.PLoai == 1 && p.KieuDon == 2).Sum(p => p.SoLuongN)),
        //                                  ngay = kq.Min(p => p.NgayNhap)
        //                              }).Where(p => soloHT == "" || p.SoLo == soloHT).Where(p => _handung == null || p.HanDung == _handung).OrderBy(p => p.ngay).ToList();

        //                if (_giatt.Count > 0)
        //                {
        //                    Double[] dsgia = new Double[_giatt.Count];
        //                    foreach (var i in _giatt)
        //                    {
        //                        // tạo một biến soluongkd = i.soluong- soluongkd
        //                        //var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.Status == null || p.Status == 0 || p.Status==1)
        //                        //            join kd in data.DThuocs.Where(p => p.MaKXuat == makho).Where(p => p.Status != 2) on sl.IDDon equals kd.IDDon
        //                        //            where(sl.SoLuong >0 || (sl.SoLuong < 0 && kd.KieuDon == 2))
        //                        //            group sl by sl.DonGia into kq
        //                        //            select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
        //                        //var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.Status == null || p.Status == 0 || p.Status == 1)
        //                        //            join kd in data.DThuocs.Where(p => p.MaKXuat == makho || p.MaKP == makho).Where(p => p.Status != 2) on sl.IDDon equals kd.IDDon
        //                        //            //where (sl.SoLuong > 0 || (sl.SoLuong < 0 && kd.KieuDon == 2))
        //                        //            group new { sl, kd } by sl.DonGia into kq
        //                        //            select new { kq.Key, soluong = kq.Where(p=>p.sl.MaKXuat == makho &&( p.sl.SoLuong > 0 || (p.sl.SoLuong <0 && p.kd.KieuDon == 2))).Sum(p => p.sl.SoLuong) // tồn thuốc trừ thẳng bên điều trị
        //                        //            - kq.Where(p=>p.kd.MaKP == makho).Where(p=>p.sl.Status == 0 && p.kd.KieuDon == 4).Sum(p=>p.sl.SoLuong)// Đơn treo lĩnh HC VTYT (chỉ đơn trả dược mới trừ, đơn lĩnh thì không tính thêm : Ví dụ: tủ trực còn 50 viên, kê đơn trả cho kho tổng 30 viên (nhưng chưa lĩnh) cũng chỉ kê đơn cho bệnh nhân hoặc trả dược trong vòng 20 viên còn lại; Trường hợp kê đơn lĩnh thêm 40 viên, không được tính=> chỉ được tính khi nào đã lĩnh dược về khoa
        //                        //            }).ToList();

        //                        var slkd0 = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV && (Bien.MaBV != "27023" || (Bien.MaBV == "27023" && ( p.SoLo == i.SoLo) && p.HanDung == i.HanDung))).Where(p => p.DonGia == i.DonGia).Where(p => p.Status == null || p.Status == 0 || p.Status == 1)
        //                                     join kd in data.DThuocs.Where(p => p.MaKXuat == makho || p.MaKP == makho).Where(p => p.Status != 2) on sl.IDDon equals kd.IDDon

        //                                     select new
        //                                     {
        //                                         sl.MaDV,
        //                                         sl.DonGia,
        //                                         sl.SoLo, sl.HanDung,
        //                                         SLKD = (sl.MaKXuat == makho && (sl.SoLuong > 0 || (sl.SoLuong < 0 && kd.KieuDon == 2))) ? sl.SoLuong : 0,
        //                                         SLTra = (kd.MaKP == makho && sl.Status == 0 && kd.KieuDon == 4) ? sl.SoLuong : 0// Đơn treo lĩnh HC VTYT (chỉ đơn trả dược mới trừ, đơn lĩnh thì không tính thêm : Ví dụ: tủ trực còn 50 viên, kê đơn trả cho kho tổng 30 viên (nhưng chưa lĩnh) cũng chỉ kê đơn cho bệnh nhân hoặc trả dược trong vòng 20 viên còn lại; Trường hợp kê đơn lĩnh thêm 40 viên, không được tính=> chỉ được tính khi nào đã lĩnh dược về khoa
        //                                     }).Where(p => soloHT == "" || p.SoLo == soloHT).Where(p => _handung == null || p.HanDung == _handung).ToList();
        //                        var slkd = (from sl in slkd0
        //                                    group new { sl } by new { sl.DonGia, sl.HanDung, sl.SoLo } into kq
        //                                    select new
        //                                    {
        //                                        kq.Key.DonGia,
        //                                        kq.Key.HanDung,
        //                                        kq.Key.SoLo,
        //                                        soluong = kq.Sum(p => p.sl.SLKD) - kq.Sum(p => p.sl.SLTra)
        //                                    }).ToList();
        //                        double _slkd = 0;
        //                        if (slkd.Count > 0)
        //                        {
        //                            _slkd = slkd.First().soluong;
        //                        }
        //                        if (i.soluong > 0)
        //                        {
        //                            soluong = i.soluong - _slkd;
        //                            gia = i.DonGia;
        //                        }
        //                        if (soluong > 0)
        //                        {
        //                            Bien.SoLuongTon = soluong;
        //                            Bien._solo = i.SoLo;
        //                            Bien.HanDung = i.HanDung;
        //                            break;
        //                        }
        //                        else
        //                        {
        //                            Bien.SoLuongTon = 0;
        //                            Bien._solo = i.SoLo;
        //                            Bien.HanDung = i.HanDung;
        //                        }
        //                    }
        //                }

        //            }
        //            else
        //            {
        //                var kt = data.GiaUTs.Where(p => p.MaDV == maDV).Where(p => p.MaKP == makho).ToList();
        //                #region có giá ưu tiên
        //                if (kt.Count > 0)
        //                {
        //                    //gia = kt.First().DonGia.Value;
        //                    // _macc = kt.First().m // thêm mã cc vào giá ưu tiên
        //                    gia = kt.First().DonGia.Value;
        //                    solo = kt.First().SoLo ?? "";
        //                    handung = kt.First().HanDung;

        //                    // so lương ĐY hao hụt
        //                    if (_dongy)
        //                    {
        //                        var dongySL = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap).Where(p => p.MaKP == makho).Where(p => p.PLoai == 2)
        //                                       join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV && p.SoLuongDY != null && p.DonGia == gia) on nhap.IDNhap equals nhapct.IDNhap
        //                                       group new { nhapct } by new { nhapct.MaDV,SoLo = Bien.MaBV == "27023" ? nhapct.SoLo :"",HanDung = Bien.MaBV == "27023" ? nhapct.HanDung : null } into kq
        //                                       select new {kq.Key.SoLo, kq.Key.HanDung,  soluong = kq.Sum(p => p.nhapct.SoLuongDY) }).Where(p=> solo == "" || p.SoLo == solo).Where(p=> handung == null || p.HanDung == handung).ToList();
        //                        if (dongySL.Count > 0)
        //                        {
        //                            _soluongDYHH = dongySL.First().soluong;
        //                        }
        //                    }
        //                    //
        //                    var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == gia).Where(p => Bien.MaBV != "27023" || (Bien.MaBV == "27023" && (solo == "" ||p.SoLo == solo) && (handung == null  || p.HanDung == handung))).Where(p => p.Status == null || p.Status == 0)
        //                                join kd in data.DThuocs.Where(p => p.MaKXuat == makho).Where(p => p.Status == 0).Where(p => p.KieuDon != 2) on sl.IDDon equals kd.IDDon
        //                                group sl by new  {sl.DonGia, sl.SoLo, sl.HanDung} into kq
        //                                select new { kq.Key.SoLo,  kq.Key.HanDung, soluong = kq.Sum(p => p.SoLuong) }).ToList();
        //                    double _slkd = 0;

        //                    if (slkd.Count > 0)
        //                    {
        //                        _slkd = slkd.First().soluong;
        //                    }
        //                    //so lượng ĐY HH KD
        //                    if (_dongy)
        //                        _soLuongDYHH_KD = DungChung.Ham._getSL_DongY(data, maDV, _slkd, makho);
        //                    //
        //                    if (_gia.Where(p => p.DonGia == gia).ToList().Count > 0 && _gia.Where(p => p.DonGia == gia).First().soluong > 0)
        //                    {
        //                        soluong = _gia.Where(p => p.DonGia == gia).First().soluong - _slkd - _soluongDYHH - _soLuongDYHH_KD;
        //                    }
        //                    // soluong = soluong - DungChung.Ham._getSL_DongY(data, maDV, soluong);
        //                    if (soluong > 0)
        //                    {
        //                        Bien.SoLuongTon = soluong;
        //                        Bien._solo = solo;
        //                        Bien.HanDung = handung;

        //                    }
        //                    else
        //                    {
        //                        soluong = 0;
        //                        if (_gia.Count > 0)
        //                        {
        //                            Double[] dsgia = new Double[_gia.Count];
        //                            foreach (var i in _gia)
        //                            {
        //                                // tạo một biến soluongkd = i.soluong- soluongkd
        //                                var slkd1 = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => (Bien.MaBV != "27023" || (Bien.MaBV == "27023" && (p.SoLo == i.SoLo) && p.HanDung == i.HanDung))).Where(p => p.Status == null || p.Status == 0)
        //                                             join kd in data.DThuocs.Where(p => p.MaKXuat == makho).Where(p => p.Status == 0).Where(p => p.KieuDon != 2) on sl.IDDon equals kd.IDDon
        //                                             group sl by new { sl.DonGia , sl.HanDung, sl.SoLo} into kq
        //                                             select new { kq.Key.DonGia, kq.Key.SoLo, kq.Key.HanDung, soluong = kq.Sum(p => p.SoLuong) }).ToList();
        //                                double _slkd1 = 0;
        //                                if (slkd1.Count > 0)
        //                                {
        //                                    _slkd1 = slkd1.First().soluong;
        //                                }
        //                                // dông y

        //                                _soLuongDYHH_KD = 0;
        //                                // so lương ĐY hao hụt
        //                                if (_dongy)
        //                                {
        //                                    var dongySL = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap).Where(p => p.MaKP == makho).Where(p => p.PLoai == 2)
        //                                                   join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV && p.SoLuongDY != null && p.DonGia == i.DonGia).Where(p=> Bien.MaBV != "27023" || (Bien.MaBV == "27023" && p.SoLo == i.SoLo && p.HanDung == i.HanDung)) on nhap.IDNhap equals nhapct.IDNhap
        //                                                   group new { nhapct } by new { nhapct.MaDV, nhapct.SoLo, nhapct.HanDung } into kq
        //                                                   select new { soluong = kq.Sum(p => p.nhapct.SoLuongDY) }).ToList();
        //                                    if (dongySL.Count > 0)
        //                                        _soluongDYHH = dongySL.First().soluong;
        //                                    _soLuongDYHH_KD = DungChung.Ham._getSL_DongY(data, maDV, _slkd1, makho);
        //                                }
        //                                //

        //                                //
        //                                if (i.soluong > 0)
        //                                {
        //                                    soluong = i.soluong - _slkd1 - _soluongDYHH - _soLuongDYHH_KD;
        //                                    // soluong = soluong - DungChung.Ham._getSL_DongY(data, maDV, soluong);
        //                                    gia = i.DonGia;
        //                                }
        //                                if (soluong > 0)
        //                                {
        //                                    Bien.SoLuongTon = soluong;
        //                                    Bien._solo = i.SoLo;
        //                                    Bien.HanDung = i.HanDung;
        //                                    break;
        //                                }
        //                                else
        //                                {
        //                                    Bien.SoLuongTon = 0;
        //                                    Bien._solo = i.SoLo;
        //                                    Bien.HanDung = i.HanDung;
        //                                }
        //                            }
        //                        }
        //                    }
        //                }
        //                #endregion
        //                #region không có giá ưu tiên
        //                else
        //                {
        //                    if (_gia.Count > 0)
        //                    {
        //                        Double[] dsgia = new Double[_gia.Count];
        //                        foreach (var i in _gia)
        //                        {
        //                            // tạo một biến soluongkd = i.soluong- soluongkd
        //                            var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => (Bien.MaBV != "27023" || (Bien.MaBV == "27023" && (p.SoLo == i.SoLo) && p.HanDung == i.HanDung))).Where(p => p.Status == null || p.Status == 0)
        //                                        join kd in data.DThuocs.Where(p => p.MaKXuat == makho).Where(p => p.Status == 0).Where(p => p.KieuDon != 2) on sl.IDDon equals kd.IDDon
        //                                        group sl by sl.DonGia into kq
        //                                        select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
        //                            double _slkd = 0;
        //                            if (slkd.Count > 0)
        //                            {
        //                                _slkd = slkd.First().soluong;
        //                            }
        //                            // dông y

        //                            _soLuongDYHH_KD = 0;
        //                            _soluongDYHH = 0;
        //                            // so lương ĐY hao hụt
        //                            if (_dongy)
        //                            {
        //                                var dongySL = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap).Where(p => p.MaKP == makho).Where(p => p.PLoai == 2)
        //                                               join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV && p.SoLuongDY != null && p.DonGia == i.DonGia).Where(p => (Bien.MaBV != "27023" || (Bien.MaBV == "27023" && (p.SoLo == i.SoLo) && p.HanDung == i.HanDung))) on nhap.IDNhap equals nhapct.IDNhap
        //                                               group new { nhapct } by new { nhapct.MaDV } into kq
        //                                               select new { soluong = kq.Sum(p => p.nhapct.SoLuongDY) }).ToList();
        //                                if (dongySL.Count > 0)
        //                                    _soluongDYHH = dongySL.First().soluong;
        //                                _soLuongDYHH_KD = DungChung.Ham._getSL_DongY(data, maDV, _slkd, makho);
        //                            }
        //                            //
        //                            if (i.soluong > 0)
        //                            {
        //                                soluong = i.soluong - _slkd - _soluongDYHH - _soLuongDYHH_KD;
        //                                //   soluong = soluong - DungChung.Ham._getSL_DongY(data, maDV, soluong);
        //                                gia = i.DonGia;
        //                            }
        //                            if (soluong > 0)
        //                            {
        //                                Bien.SoLuongTon = soluong;
        //                                Bien._solo = i.SoLo;
        //                                Bien.HanDung = i.HanDung;
        //                                break;
        //                            }
        //                            else
        //                            {
        //                                Bien.SoLuongTon = 0;
        //                                Bien._solo = i.SoLo;
        //                                Bien.HanDung = i.HanDung;
        //                            }
        //                        }
        //                    }

        //                }
        //                #endregion
        //            }
        //            break;
        //        case 2: // xuất theo hạn sử dụng - chua hoan thien
        //            var kt2 = data.GiaUTs.Where(p => p.MaDV == maDV).Where(p => p.Status == 1).ToList();
        //            if (kt2.Count > 0)
        //            {
        //                gia = kt2.First().DonGia.Value;
        //            }
        //            else
        //            {
        //                if (_gia.Count > 0)
        //                    gia = _gia.First().DonGia;
        //            }
        //            break;
        //        case 3:
        //            if (ppxuat == 3)
        //            {
        //                var _gia3 = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap).Where(p => p.MaKP == makho)
        //                             join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV) on nhap.IDNhap equals nhapct.IDNhap
        //                             group new { nhapct, nhap } by new { nhapct.MaDV, nhapct.DonGia, nhapct.SoLo } into kq
        //                             select new { kq.Key.DonGia, kq.Key.SoLo, soluong = (kq.Sum(p => p.nhapct.SoLuongN) - kq.Sum(p => p.nhapct.SoLuongX)), ngay = kq.Min(p => p.nhap.NgayNhap) }).OrderBy(p => p.ngay).ToList();
        //                string _solo = "";
        //                var kttutruc3 = data.KPhongs.Where(p => p.MaKP == makho).Where(p => p.PLoai.Contains("Tủ trực")).ToList();
        //                if (kttutruc3.Count > 0)// kiểm tra tủ trực
        //                {
        //                    var _giatt = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap).Where(p => p.MaKPnx == makho)
        //                                  join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV) on nhap.IDNhap equals nhapct.IDNhap
        //                                  group new { nhapct, nhap } by new { nhapct.MaDV, nhapct.DonGia, nhapct.SoLo , nhapct.HanDung} into kq
        //                                  select new { kq.Key.DonGia, kq.Key.SoLo, soluong = (kq.Sum(p => p.nhapct.SoLuongX)), ngay = kq.Min(p => p.nhap.NgayNhap) }).OrderBy(p => p.ngay).ToList();
        //                    if (_giatt.Count > 0)
        //                    {
        //                        Double[] dsgia = new Double[_giatt.Count];
        //                        foreach (var i in _giatt)
        //                        {
        //                            _solo = i.SoLo;
        //                            // tạo một biến soluongkd = i.soluong- soluongkd
        //                            var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.SoLo == (_solo)).Where(p => p.Status != 2).Where(p => p.Status == null || p.Status == 0)
        //                                        join kd in data.DThuocs.Where(p => p.MaKXuat == makho) on sl.IDDon equals kd.IDDon
        //                                        group sl by sl.DonGia into kq
        //                                        select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
        //                            double _slkd = 0;
        //                            if (slkd.Count > 0)
        //                            {
        //                                _slkd = slkd.First().soluong;
        //                            }
        //                            if (i.soluong > 0)
        //                            {
        //                                soluong = i.soluong - _slkd;
        //                                gia = i.DonGia;
        //                            }
        //                            if (soluong > 0)
        //                            {
        //                                Bien.SoLuongTon = soluong;
        //                                Bien._solo = i.SoLo;

        //                                break;
        //                            }
        //                            else
        //                            {
        //                                Bien.SoLuongTon = 0;
        //                            }
        //                        }
        //                    }

        //                }
        //                else
        //                {
        //                    var kt = data.GiaUTs.Where(p => p.MaDV == maDV).Where(p => p.MaKP == makho).ToList();
        //                    if (kt.Count > 0)
        //                    {
        //                        //gia = kt.First().DonGia.Value;
        //                        // _macc = kt.First().m // thêm mã cc vào giá ưu tiên
        //                        gia = kt.First().DonGia.Value;
        //                        var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == gia)
        //                                    join kd in data.DThuocs.Where(p => p.MaKXuat == makho).Where(p => p.Status == 0) on sl.IDDon equals kd.IDDon
        //                                    group sl by sl.DonGia into kq
        //                                    select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
        //                        double _slkd = 0;
        //                        if (slkd.Count > 0)
        //                        {
        //                            _slkd = slkd.First().soluong;
        //                        }
        //                        if (_gia.Where(p => p.DonGia == gia).ToList().Count > 0 && _gia.Where(p => p.DonGia == gia).First().soluong > 0)
        //                        {
        //                            soluong = _gia.Where(p => p.DonGia == gia).First().soluong - _slkd;
        //                        }
        //                        if (soluong > 0)
        //                        {
        //                            Bien.SoLuongTon = soluong;
        //                        }
        //                        else
        //                        {
        //                            soluong = 0;
        //                            if (_gia.Count > 0)
        //                            {
        //                                Double[] dsgia = new Double[_gia.Count];
        //                                foreach (var i in _gia3)
        //                                {
        //                                    // tạo một biến soluongkd = i.soluong- soluongkd
        //                                    _solo = i.SoLo;
        //                                    var slkd1 = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.MaCC == (_solo)).Where(p => p.Status == null || p.Status == 0)
        //                                                 join kd in data.DThuocs.Where(p => p.MaKXuat == makho).Where(p => p.Status == 0) on sl.IDDon equals kd.IDDon
        //                                                 group sl by sl.DonGia into kq
        //                                                 select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
        //                                    double _slkd1 = 0;
        //                                    if (slkd1.Count > 0)
        //                                    {
        //                                        _slkd1 = slkd1.First().soluong;
        //                                    }
        //                                    if (i.soluong > 0)
        //                                    {
        //                                        soluong = i.soluong - _slkd;
        //                                        gia = i.DonGia;
        //                                    }
        //                                    if (soluong > 0)
        //                                    {
        //                                        Bien.SoLuongTon = soluong;
        //                                        Bien._solo = i.SoLo;
        //                                        break;
        //                                    }
        //                                    else
        //                                    {
        //                                        Bien.SoLuongTon = 0;
        //                                    }
        //                                }
        //                            }
        //                        }
        //                    }
        //                    else
        //                    {
        //                        if (_gia.Count > 0)
        //                        {
        //                            Double[] dsgia = new Double[_gia.Count];
        //                            foreach (var i in _gia3)
        //                            {
        //                                // tạo một biến soluongkd = i.soluong- soluongkd
        //                                _solo = i.SoLo;
        //                                var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.MaCC == (_solo)).Where(p => p.Status == null || p.Status == 0)
        //                                            join kd in data.DThuocs.Where(p => p.MaKXuat == makho).Where(p => p.Status == 0) on sl.IDDon equals kd.IDDon
        //                                            group sl by sl.DonGia into kq
        //                                            select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
        //                                double _slkd = 0;
        //                                if (slkd.Count > 0)
        //                                {
        //                                    _slkd = slkd.First().soluong;
        //                                }
        //                                if (i.soluong > 0)
        //                                {
        //                                    soluong = i.soluong - _slkd;
        //                                    gia = i.DonGia;
        //                                }
        //                                if (soluong > 0)
        //                                {
        //                                    Bien.SoLuongTon = soluong;
        //                                    Bien._solo = i.SoLo;
        //                                    break;
        //                                }
        //                                else
        //                                {
        //                                    Bien.SoLuongTon = 0;
        //                                }
        //                            }
        //                        }

        //                    }
        //                }
        //            }
        //            break;
        //    }
        //    return gia;
        //}
        #endregion lay giá và tính tồn dược theo kho

        #region lay giá theo số lô hạn dùng và tính tồn dược theo kho _bỏ
        //public class GiaSoLoHanDung
        //{
        //    public int MaDV { set; get; }
        //    public int MaKP { set; get; }
        //    public string SoLo { set; get; }
        //    public DateTime? HanDung { set; get; }
        //    public double SLTon { set; get; }

        //    public double DonGia { get; set; }

        //    public DateTime? ngay { get; set; }
        //}
        //public static List<GiaSoLoHanDung> _getGiaSoLoHanDung(QLBV_Database.QLBVEntities data, int maDV, int makho) // 27023
        //{
        //    List<GiaSoLoHanDung> _list = new List<GiaSoLoHanDung>();
        //    int ppxuat = 0;
        //    var kp = data.KPhongs.Where(p => p.MaKP == makho).Select(p => p.PPXuat).ToList();
        //    if (kp.Count > 0 && kp.First() != null)
        //        ppxuat = kp.First().Value;
        //    double gia = 0;
        //    double soluong = 0;
        //    var abc = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap).Where(p => p.MaKP == makho)
        //               join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV) on nhap.IDNhap equals nhapct.IDNhap
        //               select new { nhap.NgayNhap, nhapct.SoLuongN, nhapct.SoLuongX, nhapct.DonGia, nhapct.MaDV, nhap.PLoai, SoLo = (Bien.MaBV == "27023") ? nhapct.SoLo : "", HanDung = (Bien.MaBV == "27023") ? nhapct.HanDung : null }).ToList();
        //    var _gia2 = (from nhap in abc.OrderByDescending(p => p.NgayNhap)
        //                 group new { nhap } by new { MaDV = nhap.MaDV, nhap.DonGia, nhap.SoLo, nhap.HanDung } into kq
        //                 select new { kq.Key.DonGia, kq.Key.SoLo, kq.Key.HanDung, soluongN = kq.Where(p => p.nhap.PLoai == 1).Sum(p => p.nhap.SoLuongN), soLuongX = kq.Where(p => p.nhap.PLoai == 2 || p.nhap.PLoai == 3).Sum(p => p.nhap.SoLuongX), ngay = kq.Min(p => p.nhap.NgayNhap) }).OrderBy(p => p.ngay).ToList();

        //    var _gia = (from nhap in _gia2
        //                select new { nhap.DonGia, nhap.SoLo, nhap.HanDung, soluong = nhap.soluongN - nhap.soLuongX, ngay = nhap.ngay }).OrderBy(p => p.ngay).ToList();

        //    var q = data.DichVus.Where(p => p.MaDV == maDV).ToList();
        //    switch (ppxuat)
        //    {
        //        case 0://

        //            if (q.Count > 0)
        //            {
        //                if (q.First().DonGia != null)
        //                    gia = q.First().DonGia;
        //                else
        //                    gia = 0;
        //                GiaSoLoHanDung moi = new GiaSoLoHanDung();
        //                moi.DonGia = gia;
        //                moi.MaDV = maDV;
        //                _list.Add(moi);
        //            }
        //            break;
        //        case 1: // nhập trước xuất trước
        //            //  string _macc = "";
        //            bool _dongy = false;
        //            if (q.Count > 0 && q.First().DongY != null && q.First().DongY == 1)
        //                _dongy = true;
        //            double _soluongDYHH = 0, _soLuongDYHH_KD = 0;

        //            var kttutruc = data.KPhongs.Where(p => p.MaKP == makho).Where(p => p.PLoai.Contains("Tủ trực")).ToList();
        //            if (kttutruc.Count > 0)// kiểm tra tủ trực
        //            {
        //                var _giatt0 = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap).Where(p => p.MaKPnx == makho)
        //                               join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV) on nhap.IDNhap equals nhapct.IDNhap
        //                               select new { nhapct.DonGia, nhapct.SoLuongX, nhap.PLoai, nhap.KieuDon, nhapct.MaDV, nhapct.SoLuongN, nhap.NgayNhap, nhapct.SoLo, nhapct.HanDung }).ToList();
        //                var _giatt = (from nd in _giatt0
        //                              group nd by new { nd.MaDV, nd.DonGia, nd.SoLo, nd.HanDung } into kq
        //                              select new GiaSoLoHanDung
        //                              {
        //                                  MaDV = maDV,
        //                                  DonGia= kq.Key.DonGia,
        //                                  SoLo = kq.Key.SoLo,
        //                                  HanDung = kq.Key.HanDung,
        //                                  SLTon = (kq.Sum(p => p.SoLuongX) - kq.Where(p => p.PLoai == 1 && p.KieuDon == 2).Sum(p => p.SoLuongN)),
        //                                  ngay = kq.Min(p => p.NgayNhap)
        //                              }).OrderBy(p => p.ngay).ToList();

        //                if (_giatt.Count > 0)
        //                {
        //                    Double[] dsgia = new Double[_giatt.Count];
        //                    foreach (var i in _giatt)
        //                    {
        //                        var slkd0 = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV && p.SoLo == i.SoLo && p.HanDung == i.HanDung).Where(p => p.DonGia == i.DonGia).Where(p => p.Status == null || p.Status == 0 || p.Status == 1)
        //                                     join kd in data.DThuocs.Where(p => p.MaKXuat == makho || p.MaKP == makho).Where(p => p.Status != 2) on sl.IDDon equals kd.IDDon

        //                                     select new
        //                                     {
        //                                         sl.MaDV,
        //                                         sl.DonGia,
        //                                         sl.SoLo, sl.HanDung,
        //                                         SLKD = (sl.MaKXuat == makho && (sl.SoLuong > 0 || (sl.SoLuong < 0 && kd.KieuDon == 2))) ? sl.SoLuong : 0,
        //                                         SLTra = (kd.MaKP == makho && sl.Status == 0 && kd.KieuDon == 4) ? sl.SoLuong : 0// Đơn treo lĩnh HC VTYT (chỉ đơn trả dược mới trừ, đơn lĩnh thì không tính thêm : Ví dụ: tủ trực còn 50 viên, kê đơn trả cho kho tổng 30 viên (nhưng chưa lĩnh) cũng chỉ kê đơn cho bệnh nhân hoặc trả dược trong vòng 20 viên còn lại; Trường hợp kê đơn lĩnh thêm 40 viên, không được tính=> chỉ được tính khi nào đã lĩnh dược về khoa
        //                                     }).ToList();
        //                        var slkd = (from sl in slkd0
        //                                    group new { sl } by new  {sl.DonGia, sl.SoLo, sl.HanDung} into kq
        //                                    select new
        //                                    {
        //                                        kq.Key.DonGia,
        //                                        kq.Key.SoLo,
        //                                        kq.Key.HanDung,
        //                                        soluong = kq.Sum(p => p.sl.SLKD) - kq.Sum(p => p.sl.SLTra)
        //                                    }).ToList();
        //                        double _slkd = 0;
        //                        if (slkd.Count > 0)
        //                        {
        //                            _slkd = slkd.First().soluong;
        //                        }
        //                        if (i.SLTon > 0)
        //                        {
        //                            soluong = i.SLTon - _slkd;
        //                            gia = i.DonGia;
        //                        }

        //                        if (soluong > 0)
        //                        {
        //                          i.SLTon = soluong;

        //                        }
        //                        else
        //                        {
        //                            i.SLTon = 0;
        //                        }
        //                    }
        //                }

        //                _list = _giatt;
        //            }
        //            else
        //            {
        //                var kt = data.GiaUTs.Where(p => p.MaDV == maDV).Where(p => p.MaKP == makho).ToList();
        //                if (kt.Count > 0)
        //                {
        //                    //gia = kt.First().DonGia.Value;
        //                    // _macc = kt.First().m // thêm mã cc vào giá ưu tiên
        //                    gia = kt.First().DonGia.Value;
        //                    // so lương ĐY hao hụt
        //                    if (_dongy)
        //                    {
        //                        var dongySL = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap).Where(p => p.MaKP == makho).Where(p => p.PLoai == 2)
        //                                       join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV && p.SoLuongDY != null && p.DonGia == gia) on nhap.IDNhap equals nhapct.IDNhap
        //                                       group new { nhapct } by new { nhapct.MaDV } into kq
        //                                       select new { soluong = kq.Sum(p => p.nhapct.SoLuongDY) }).ToList();
        //                        if (dongySL.Count > 0)
        //                            _soluongDYHH = dongySL.First().soluong;
        //                    }
        //                    //
        //                    var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == gia).Where(p => p.Status == null || p.Status == 0)
        //                                join kd in data.DThuocs.Where(p => p.MaKXuat == makho).Where(p => p.Status == 0).Where(p => p.KieuDon != 2) on sl.IDDon equals kd.IDDon
        //                                group sl by sl.DonGia into kq
        //                                select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
        //                    double _slkd = 0;

        //                    if (slkd.Count > 0)
        //                    {
        //                        _slkd = slkd.First().soluong;
        //                    }
        //                    //so lượng ĐY HH KD
        //                    if (_dongy)
        //                        _soLuongDYHH_KD = DungChung.Ham._getSL_DongY(data, maDV, _slkd, makho);
        //                    //
        //                    if (_gia.Where(p => p.DonGia == gia).ToList().Count > 0 && _gia.Where(p => p.DonGia == gia).First().soluong > 0)
        //                    {
        //                        soluong = _gia.Where(p => p.DonGia == gia).First().soluong - _slkd - _soluongDYHH - _soLuongDYHH_KD;
        //                    }
        //                    // soluong = soluong - DungChung.Ham._getSL_DongY(data, maDV, soluong);
        //                    if (soluong > 0)
        //                    {
        //                        Bien.SoLuongTon = soluong;
        //                    }
        //                    else
        //                    {
        //                        soluong = 0;
        //                        if (_gia.Count > 0)
        //                        {
        //                            Double[] dsgia = new Double[_gia.Count];
        //                            foreach (var i in _gia)
        //                            {
        //                                // tạo một biến soluongkd = i.soluong- soluongkd
        //                                var slkd1 = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.Status == null || p.Status == 0)
        //                                             join kd in data.DThuocs.Where(p => p.MaKXuat == makho).Where(p => p.Status == 0).Where(p => p.KieuDon != 2) on sl.IDDon equals kd.IDDon
        //                                             group sl by sl.DonGia into kq
        //                                             select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
        //                                double _slkd1 = 0;
        //                                if (slkd1.Count > 0)
        //                                {
        //                                    _slkd1 = slkd1.First().soluong;
        //                                }
        //                                // dông y

        //                                _soLuongDYHH_KD = 0;
        //                                // so lương ĐY hao hụt
        //                                if (_dongy)
        //                                {
        //                                    var dongySL = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap).Where(p => p.MaKP == makho).Where(p => p.PLoai == 2)
        //                                                   join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV && p.SoLuongDY != null && p.DonGia == i.DonGia) on nhap.IDNhap equals nhapct.IDNhap
        //                                                   group new { nhapct } by new { nhapct.MaDV } into kq
        //                                                   select new { soluong = kq.Sum(p => p.nhapct.SoLuongDY) }).ToList();
        //                                    if (dongySL.Count > 0)
        //                                        _soluongDYHH = dongySL.First().soluong;
        //                                    _soLuongDYHH_KD = DungChung.Ham._getSL_DongY(data, maDV, _slkd1, makho);
        //                                }
        //                                //

        //                                //
        //                                if (i.soluong > 0)
        //                                {
        //                                    soluong = i.soluong - _slkd1 - _soluongDYHH - _soLuongDYHH_KD;
        //                                    // soluong = soluong - DungChung.Ham._getSL_DongY(data, maDV, soluong);
        //                                    gia = i.DonGia;
        //                                }
        //                                if (soluong > 0)
        //                                {
        //                                    Bien.SoLuongTon = soluong;
        //                                    break;
        //                                }
        //                                else
        //                                {
        //                                    Bien.SoLuongTon = 0;
        //                                }
        //                            }
        //                        }
        //                    }
        //                }
        //                else
        //                {
        //                    if (_gia.Count > 0)
        //                    {
        //                        Double[] dsgia = new Double[_gia.Count];
        //                        foreach (var i in _gia)
        //                        {
        //                            // tạo một biến soluongkd = i.soluong- soluongkd
        //                            var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.Status == null || p.Status == 0)
        //                                        join kd in data.DThuocs.Where(p => p.MaKXuat == makho).Where(p => p.Status == 0).Where(p => p.KieuDon != 2) on sl.IDDon equals kd.IDDon
        //                                        group sl by sl.DonGia into kq
        //                                        select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
        //                            double _slkd = 0;
        //                            if (slkd.Count > 0)
        //                            {
        //                                _slkd = slkd.First().soluong;
        //                            }
        //                            // dông y

        //                            _soLuongDYHH_KD = 0;
        //                            _soluongDYHH = 0;
        //                            // so lương ĐY hao hụt
        //                            if (_dongy)
        //                            {
        //                                var dongySL = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap).Where(p => p.MaKP == makho).Where(p => p.PLoai == 2)
        //                                               join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV && p.SoLuongDY != null && p.DonGia == i.DonGia) on nhap.IDNhap equals nhapct.IDNhap
        //                                               group new { nhapct } by new { nhapct.MaDV } into kq
        //                                               select new { soluong = kq.Sum(p => p.nhapct.SoLuongDY) }).ToList();
        //                                if (dongySL.Count > 0)
        //                                    _soluongDYHH = dongySL.First().soluong;
        //                                _soLuongDYHH_KD = DungChung.Ham._getSL_DongY(data, maDV, _slkd, makho);
        //                            }
        //                            //
        //                            if (i.soluong > 0)
        //                            {
        //                                soluong = i.soluong - _slkd - _soluongDYHH - _soLuongDYHH_KD;
        //                                //   soluong = soluong - DungChung.Ham._getSL_DongY(data, maDV, soluong);
        //                                gia = i.DonGia;
        //                            }
        //                            if (soluong > 0)
        //                            {
        //                                Bien.SoLuongTon = soluong;
        //                                break;
        //                            }
        //                            else
        //                            {
        //                                Bien.SoLuongTon = 0;
        //                            }
        //                        }
        //                    }

        //                }
        //            }
        //            break;
        //        case 2: // xuất theo hạn sử dụng - chua hoan thien
        //            var kt2 = data.GiaUTs.Where(p => p.MaDV == maDV).Where(p => p.Status == 1).ToList();
        //            if (kt2.Count > 0)
        //            {
        //                gia = kt2.First().DonGia.Value;
        //            }
        //            else
        //            {
        //                if (_gia.Count > 0)
        //                    gia = _gia.First().DonGia;
        //            }
        //            break;
        //        case 3:
        //            if (ppxuat == 3)
        //            {
        //                var _gia3 = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap).Where(p => p.MaKP == makho)
        //                             join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV) on nhap.IDNhap equals nhapct.IDNhap
        //                             group new { nhapct, nhap } by new { nhapct.MaDV, nhapct.DonGia, nhapct.SoLo } into kq
        //                             select new { kq.Key.DonGia, kq.Key.SoLo, soluong = (kq.Sum(p => p.nhapct.SoLuongN) - kq.Sum(p => p.nhapct.SoLuongX)), ngay = kq.Min(p => p.nhap.NgayNhap) }).OrderBy(p => p.ngay).ToList();
        //                string _solo = "";
        //                var kttutruc3 = data.KPhongs.Where(p => p.MaKP == makho).Where(p => p.PLoai.Contains("Tủ trực")).ToList();
        //                if (kttutruc3.Count > 0)// kiểm tra tủ trực
        //                {
        //                    var _giatt = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap).Where(p => p.MaKPnx == makho)
        //                                  join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV) on nhap.IDNhap equals nhapct.IDNhap
        //                                  group new { nhapct, nhap } by new { nhapct.MaDV, nhapct.DonGia, nhapct.SoLo } into kq
        //                                  select new { kq.Key.DonGia, kq.Key.SoLo, soluong = (kq.Sum(p => p.nhapct.SoLuongX)), ngay = kq.Min(p => p.nhap.NgayNhap) }).OrderBy(p => p.ngay).ToList();
        //                    if (_giatt.Count > 0)
        //                    {
        //                        Double[] dsgia = new Double[_giatt.Count];
        //                        foreach (var i in _giatt)
        //                        {
        //                            _solo = i.SoLo;
        //                            // tạo một biến soluongkd = i.soluong- soluongkd
        //                            var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.SoLo == (_solo)).Where(p => p.Status != 2).Where(p => p.Status == null || p.Status == 0)
        //                                        join kd in data.DThuocs.Where(p => p.MaKXuat == makho) on sl.IDDon equals kd.IDDon
        //                                        group sl by sl.DonGia into kq
        //                                        select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
        //                            double _slkd = 0;
        //                            if (slkd.Count > 0)
        //                            {
        //                                _slkd = slkd.First().soluong;
        //                            }
        //                            if (i.soluong > 0)
        //                            {
        //                                soluong = i.soluong - _slkd;
        //                                gia = i.DonGia;
        //                            }
        //                            if (soluong > 0)
        //                            {
        //                                Bien.SoLuongTon = soluong;
        //                                Bien._solo = i.SoLo;
        //                                break;
        //                            }
        //                            else
        //                            {
        //                                Bien.SoLuongTon = 0;
        //                            }
        //                        }
        //                    }

        //                }
        //                else
        //                {
        //                    var kt = data.GiaUTs.Where(p => p.MaDV == maDV).Where(p => p.MaKP == makho).ToList();
        //                    if (kt.Count > 0)
        //                    {
        //                        //gia = kt.First().DonGia.Value;
        //                        // _macc = kt.First().m // thêm mã cc vào giá ưu tiên
        //                        gia = kt.First().DonGia.Value;
        //                        var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == gia)
        //                                    join kd in data.DThuocs.Where(p => p.MaKXuat == makho).Where(p => p.Status == 0) on sl.IDDon equals kd.IDDon
        //                                    group sl by sl.DonGia into kq
        //                                    select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
        //                        double _slkd = 0;
        //                        if (slkd.Count > 0)
        //                        {
        //                            _slkd = slkd.First().soluong;
        //                        }
        //                        if (_gia.Where(p => p.DonGia == gia).ToList().Count > 0 && _gia.Where(p => p.DonGia == gia).First().soluong > 0)
        //                        {
        //                            soluong = _gia.Where(p => p.DonGia == gia).First().soluong - _slkd;
        //                        }
        //                        if (soluong > 0)
        //                        {
        //                            Bien.SoLuongTon = soluong;
        //                        }
        //                        else
        //                        {
        //                            soluong = 0;
        //                            if (_gia.Count > 0)
        //                            {
        //                                Double[] dsgia = new Double[_gia.Count];
        //                                foreach (var i in _gia3)
        //                                {
        //                                    // tạo một biến soluongkd = i.soluong- soluongkd
        //                                    _solo = i.SoLo;
        //                                    var slkd1 = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.MaCC == (_solo)).Where(p => p.Status == null || p.Status == 0)
        //                                                 join kd in data.DThuocs.Where(p => p.MaKXuat == makho).Where(p => p.Status == 0) on sl.IDDon equals kd.IDDon
        //                                                 group sl by sl.DonGia into kq
        //                                                 select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
        //                                    double _slkd1 = 0;
        //                                    if (slkd1.Count > 0)
        //                                    {
        //                                        _slkd1 = slkd1.First().soluong;
        //                                    }
        //                                    if (i.soluong > 0)
        //                                    {
        //                                        soluong = i.soluong - _slkd;
        //                                        gia = i.DonGia;
        //                                    }
        //                                    if (soluong > 0)
        //                                    {
        //                                        Bien.SoLuongTon = soluong;
        //                                        Bien._solo = i.SoLo;
        //                                        break;
        //                                    }
        //                                    else
        //                                    {
        //                                        Bien.SoLuongTon = 0;
        //                                    }
        //                                }
        //                            }
        //                        }
        //                    }
        //                    else
        //                    {
        //                        if (_gia.Count > 0)
        //                        {
        //                            Double[] dsgia = new Double[_gia.Count];
        //                            foreach (var i in _gia3)
        //                            {
        //                                // tạo một biến soluongkd = i.soluong- soluongkd
        //                                _solo = i.SoLo;
        //                                var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.MaCC == (_solo)).Where(p => p.Status == null || p.Status == 0)
        //                                            join kd in data.DThuocs.Where(p => p.MaKXuat == makho).Where(p => p.Status == 0) on sl.IDDon equals kd.IDDon
        //                                            group sl by sl.DonGia into kq
        //                                            select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
        //                                double _slkd = 0;
        //                                if (slkd.Count > 0)
        //                                {
        //                                    _slkd = slkd.First().soluong;
        //                                }
        //                                if (i.soluong > 0)
        //                                {
        //                                    soluong = i.soluong - _slkd;
        //                                    gia = i.DonGia;
        //                                }
        //                                if (soluong > 0)
        //                                {
        //                                    Bien.SoLuongTon = soluong;
        //                                    Bien._solo = i.SoLo;
        //                                    break;
        //                                }
        //                                else
        //                                {
        //                                    Bien.SoLuongTon = 0;
        //                                }
        //                            }
        //                        }

        //                    }
        //                }
        //            }
        //            break;
        //    }
        //    return gia;
        //}
        #endregion lay giá theo số lô hạn dùng và tính tồn dược theo kho _bỏ
        #region lay giá và tính tồn dược theo kho theo mã cung cấp _bỏ
        //public static double _getGia(QLBV_Database.QLBVEntities data, int maDV, int makho, string macc)
        //{
        //    int ppxuat = 0;
        //    var kp = data.KPhongs.Where(p => p.MaKP == makho).Select(p => p.PPXuat).ToList();
        //    if (kp.Count > 0 && kp.First() != null)
        //        ppxuat = kp.First().Value;
        //    double gia = 0;
        //    double soluong = 0;
        //    var _gia = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap).Where(p => p.MaKP == makho)
        //                join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV) on nhap.IDNhap equals nhapct.IDNhap
        //                group new { nhapct, nhap } by new { nhapct.MaDV, nhapct.DonGia, nhapct.MaCC } into kq
        //                select new { kq.Key.DonGia, kq.Key.MaCC, soluong = (kq.Sum(p => p.nhapct.SoLuongN) - kq.Sum(p => p.nhapct.SoLuongX)), ngay = kq.Min(p => p.nhap.NgayNhap) }).OrderBy(p => p.ngay).ToList();
        //    switch (ppxuat)
        //    {
        //        case 0://
        //            var q = data.DichVus.Where(p => p.MaDV == maDV).ToList();
        //            if (q.Count > 0)
        //            {
        //                gia = q.First().DonGia;
        //            }
        //            break;
        //        case 1: // nhập trước xuất trước
        //            string _macc = "";
        //            var kttutruc = data.KPhongs.Where(p => p.MaKP == makho).Where(p => p.PLoai.Contains("Tủ trực")).ToList();
        //            if (kttutruc.Count > 0)// kiểm tra tủ trực
        //            {
        //                var _giatt = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap).Where(p => p.MaKPnx == makho)
        //                              join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV) on nhap.IDNhap equals nhapct.IDNhap
        //                              group new { nhapct, nhap, } by new { nhapct.MaDV, nhapct.DonGia, nhapct.MaCC } into kq
        //                              select new { kq.Key.DonGia, kq.Key.MaCC, soluong = (kq.Sum(p => p.nhapct.SoLuongX)), ngay = kq.Min(p => p.nhap.NgayNhap) }).OrderBy(p => p.ngay).ToList();
        //                if (_giatt.Count > 0)
        //                {
        //                    Double[] dsgia = new Double[_giatt.Count];
        //                    foreach (var i in _giatt)
        //                    {
        //                        _macc = i.MaCC;
        //                        // tạo một biến soluongkd = i.soluong- soluongkd
        //                        var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.MaCC == (_macc)).Where(p => p.Status != 2)
        //                                    join kd in data.DThuocs.Where(p => p.MaKXuat == makho) on sl.IDDon equals kd.IDDon
        //                                    group sl by sl.DonGia into kq
        //                                    select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
        //                        double _slkd = 0;
        //                        if (slkd.Count > 0)
        //                        {
        //                            _slkd = slkd.First().soluong;
        //                        }
        //                        if (i.soluong > 0)
        //                        {
        //                            soluong = i.soluong - _slkd;
        //                            gia = i.DonGia;
        //                        }
        //                        if (soluong > 0)
        //                        {
        //                            Bien.SoLuongTon = soluong;
        //                            Bien._maCC = i.MaCC;
        //                            break;
        //                        }
        //                        else
        //                        {
        //                            Bien.SoLuongTon = 0;
        //                        }
        //                    }
        //                }

        //            }
        //            else
        //            {
        //                var kt = data.GiaUTs.Where(p => p.MaDV == maDV).Where(p => p.MaKP == makho).ToList();
        //                if (kt.Count > 0)
        //                {
        //                    //gia = kt.First().DonGia.Value;
        //                    // _macc = kt.First().m // thêm mã cc vào giá ưu tiên
        //                    gia = kt.First().DonGia.Value;
        //                    var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == gia).Where(p => p.Status == 0)
        //                                join kd in data.DThuocs.Where(p => p.MaKXuat == makho) on sl.IDDon equals kd.IDDon
        //                                group sl by sl.DonGia into kq
        //                                select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
        //                    double _slkd = 0;
        //                    if (slkd.Count > 0)
        //                    {
        //                        _slkd = slkd.First().soluong;
        //                    }
        //                    if (_gia.Where(p => p.DonGia == gia).ToList().Count > 0 && _gia.Where(p => p.DonGia == gia).First().soluong > 0)
        //                    {
        //                        soluong = _gia.Where(p => p.DonGia == gia).First().soluong - _slkd;
        //                        if (_gia.Where(p => p.DonGia == gia).First().MaCC != null)
        //                            Bien._maCC = _gia.Where(p => p.DonGia == gia).First().MaCC;
        //                    }
        //                    if (soluong > 0)
        //                    {
        //                        Bien.SoLuongTon = soluong;
        //                    }
        //                    else
        //                    {
        //                        soluong = 0;
        //                        if (_gia.Count > 0)
        //                        {
        //                            Double[] dsgia = new Double[_gia.Count];
        //                            foreach (var i in _gia)
        //                            {
        //                                // tạo một biến soluongkd = i.soluong- soluongkd
        //                                _macc = i.MaCC;
        //                                var slkd1 = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.MaCC == (_macc)).Where(p => p.Status == 0)
        //                                             join kd in data.DThuocs.Where(p => p.MaKXuat == makho) on sl.IDDon equals kd.IDDon
        //                                             group sl by sl.DonGia into kq
        //                                             select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
        //                                double _slkd1 = 0;
        //                                if (slkd1.Count > 0)
        //                                {
        //                                    _slkd1 = slkd1.First().soluong;
        //                                }
        //                                if (i.soluong > 0)
        //                                {
        //                                    soluong = i.soluong - _slkd;
        //                                    gia = i.DonGia;
        //                                }
        //                                if (soluong > 0)
        //                                {
        //                                    Bien.SoLuongTon = soluong;
        //                                    Bien._maCC = i.MaCC;
        //                                    break;
        //                                }
        //                                else
        //                                {
        //                                    Bien.SoLuongTon = 0;
        //                                }
        //                            }
        //                        }
        //                    }
        //                }
        //                else
        //                {
        //                    if (_gia.Count > 0)
        //                    {
        //                        Double[] dsgia = new Double[_gia.Count];
        //                        foreach (var i in _gia)
        //                        {
        //                            // tạo một biến soluongkd = i.soluong- soluongkd
        //                            _macc = i.MaCC;
        //                            var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.MaCC == (_macc)).Where(p => p.Status == 0)
        //                                        join kd in data.DThuocs.Where(p => p.MaKXuat == makho) on sl.IDDon equals kd.IDDon
        //                                        group sl by sl.DonGia into kq
        //                                        select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
        //                            double _slkd = 0;
        //                            if (slkd.Count > 0)
        //                            {
        //                                _slkd = slkd.First().soluong;
        //                            }
        //                            if (i.soluong > 0)
        //                            {
        //                                soluong = i.soluong - _slkd;
        //                                gia = i.DonGia;
        //                            }
        //                            if (soluong > 0)
        //                            {
        //                                Bien.SoLuongTon = soluong;
        //                                Bien._maCC = i.MaCC;
        //                                break;
        //                            }
        //                            else
        //                            {
        //                                Bien.SoLuongTon = 0;
        //                            }
        //                        }
        //                    }

        //                }
        //            }
        //            break;
        //        case 2: // xuất theo hạn sử dụng - chua hoan thien
        //            var kt2 = data.GiaUTs.Where(p => p.MaDV == maDV).Where(p => p.Status == 1).ToList();
        //            if (kt2.Count > 0)
        //            {
        //                gia = kt2.First().DonGia.Value;
        //            }
        //            else
        //            {
        //                if (_gia.Count > 0)
        //                    gia = _gia.First().DonGia;
        //            }
        //            break;
        //        case 3:
        //            if (ppxuat == 3)
        //            {
        //                var _gia3 = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap).Where(p => p.MaKP == makho)
        //                             join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV) on nhap.IDNhap equals nhapct.IDNhap
        //                             group new { nhapct, nhap } by new { nhapct.MaDV, nhapct.DonGia, nhapct.SoLo } into kq
        //                             select new { kq.Key.DonGia, kq.Key.SoLo, soluong = (kq.Sum(p => p.nhapct.SoLuongN) - kq.Sum(p => p.nhapct.SoLuongX)), ngay = kq.Min(p => p.nhap.NgayNhap) }).OrderBy(p => p.ngay).ToList();
        //                string _solo = "";
        //                var kttutruc3 = data.KPhongs.Where(p => p.MaKP == makho).Where(p => p.PLoai.Contains("Tủ trực")).ToList();
        //                if (kttutruc3.Count > 0)// kiểm tra tủ trực
        //                {
        //                    var _giatt = (from nhap in data.NhapDs.OrderByDescending(p => p.NgayNhap).Where(p => p.MaKPnx == makho)
        //                                  join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV) on nhap.IDNhap equals nhapct.IDNhap
        //                                  group new { nhapct, nhap } by new { nhapct.MaDV, nhapct.DonGia, nhapct.SoLo } into kq
        //                                  select new { kq.Key.DonGia, kq.Key.SoLo, soluong = (kq.Sum(p => p.nhapct.SoLuongX)), ngay = kq.Min(p => p.nhap.NgayNhap) }).OrderBy(p => p.ngay).ToList();
        //                    if (_giatt.Count > 0)
        //                    {
        //                        Double[] dsgia = new Double[_giatt.Count];
        //                        foreach (var i in _giatt)
        //                        {
        //                            _solo = i.SoLo;
        //                            // tạo một biến soluongkd = i.soluong- soluongkd
        //                            var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.SoLo == (_solo)).Where(p => p.Status != 2)
        //                                        join kd in data.DThuocs.Where(p => p.MaKXuat == makho) on sl.IDDon equals kd.IDDon
        //                                        group sl by sl.DonGia into kq
        //                                        select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
        //                            double _slkd = 0;
        //                            if (slkd.Count > 0)
        //                            {
        //                                _slkd = slkd.First().soluong;
        //                            }
        //                            if (i.soluong > 0)
        //                            {
        //                                soluong = i.soluong - _slkd;
        //                                gia = i.DonGia;
        //                            }
        //                            if (soluong > 0)
        //                            {
        //                                Bien.SoLuongTon = soluong;

        //                                break;
        //                            }
        //                            else
        //                            {
        //                                Bien.SoLuongTon = 0;
        //                            }
        //                        }
        //                    }

        //                }
        //                else
        //                {
        //                    var kt = data.GiaUTs.Where(p => p.MaDV == maDV).Where(p => p.MaKP == makho).ToList();
        //                    if (kt.Count > 0)
        //                    {
        //                        //gia = kt.First().DonGia.Value;
        //                        // _macc = kt.First().m // thêm mã cc vào giá ưu tiên
        //                        gia = kt.First().DonGia.Value;
        //                        var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == gia).Where(p => p.Status == 0)
        //                                    join kd in data.DThuocs.Where(p => p.MaKXuat == makho) on sl.IDDon equals kd.IDDon
        //                                    group sl by sl.DonGia into kq
        //                                    select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
        //                        double _slkd = 0;
        //                        if (slkd.Count > 0)
        //                        {
        //                            _slkd = slkd.First().soluong;
        //                        }
        //                        if (_gia.Where(p => p.DonGia == gia).ToList().Count > 0 && _gia.Where(p => p.DonGia == gia).First().soluong > 0)
        //                        {
        //                            soluong = _gia.Where(p => p.DonGia == gia).First().soluong - _slkd;
        //                            if (_gia.Where(p => p.DonGia == gia).First().MaCC != null)
        //                                Bien._maCC = _gia.Where(p => p.DonGia == gia).First().MaCC;
        //                        }
        //                        if (soluong > 0)
        //                        {
        //                            Bien.SoLuongTon = soluong;
        //                        }
        //                        else
        //                        {
        //                            soluong = 0;
        //                            if (_gia.Count > 0)
        //                            {
        //                                Double[] dsgia = new Double[_gia.Count];
        //                                foreach (var i in _gia3)
        //                                {
        //                                    // tạo một biến soluongkd = i.soluong- soluongkd
        //                                    _solo = i.SoLo;
        //                                    var slkd1 = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.MaCC == (_solo)).Where(p => p.Status == 0)
        //                                                 join kd in data.DThuocs.Where(p => p.MaKXuat == makho) on sl.IDDon equals kd.IDDon
        //                                                 group sl by sl.DonGia into kq
        //                                                 select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
        //                                    double _slkd1 = 0;
        //                                    if (slkd1.Count > 0)
        //                                    {
        //                                        _slkd1 = slkd1.First().soluong;
        //                                    }
        //                                    if (i.soluong > 0)
        //                                    {
        //                                        soluong = i.soluong - _slkd;
        //                                        gia = i.DonGia;
        //                                    }
        //                                    if (soluong > 0)
        //                                    {
        //                                        Bien.SoLuongTon = soluong;

        //                                        break;
        //                                    }
        //                                    else
        //                                    {
        //                                        Bien.SoLuongTon = 0;
        //                                    }
        //                                }
        //                            }
        //                        }
        //                    }
        //                    else
        //                    {
        //                        if (_gia.Count > 0)
        //                        {
        //                            Double[] dsgia = new Double[_gia.Count];
        //                            foreach (var i in _gia3)
        //                            {
        //                                // tạo một biến soluongkd = i.soluong- soluongkd
        //                                _solo = i.SoLo;
        //                                var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.MaCC == (_solo)).Where(p => p.Status == 0)
        //                                            join kd in data.DThuocs.Where(p => p.MaKXuat == makho) on sl.IDDon equals kd.IDDon
        //                                            group sl by sl.DonGia into kq
        //                                            select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
        //                                double _slkd = 0;
        //                                if (slkd.Count > 0)
        //                                {
        //                                    _slkd = slkd.First().soluong;
        //                                }
        //                                if (i.soluong > 0)
        //                                {
        //                                    soluong = i.soluong - _slkd;
        //                                    gia = i.DonGia;
        //                                }
        //                                if (soluong > 0)
        //                                {
        //                                    Bien.SoLuongTon = soluong;

        //                                    break;
        //                                }
        //                                else
        //                                {
        //                                    Bien.SoLuongTon = 0;
        //                                }
        //                            }
        //                        }

        //                    }
        //                }
        //            }
        //            break;
        //    }
        //    return gia;
        //}
        #endregion lay giá và tính tồn dược theo kho theo mã cung cấp _bỏ
        #region hàm lấy max

        public static int _maxID()
        {
            int max = 0;
            return max;
        }

        #endregion hàm lấy max
        #region hàm tính tổng tiền

        public static double _SumTT(double a, double b)
        {
            return a * b;
        }

        #endregion hàm tính tổng tiền
        #region hàm lấy phần trăm BNBH thanh toán

        public static int _PtramTT(QLBV_Database.QLBVEntities data, string muc)
        {
            int PT = 0;
            var q = data.MucTTs.Where(p => p.MaMuc == muc).ToList();
            if (q.Count > 0)
            {
                PT = int.Parse(q.First().PTTT.ToString());
            }
            return PT;
        }

        #endregion hàm lấy phần trăm BNBH thanh toán
        #region hàm kiểm tra dịch vụ có trong danh mục BHYT hay không

        public static bool _KTDMBHYT(QLBV_Database.QLBVEntities data, int madv)
        {
            var q = data.DichVus.Where(p => p.MaDV == madv).ToList();
            if (q.Count > 0)
            {
                if (q.First().TrongDM == 1)
                    return true;
            }
            return false;
        }

        #endregion hàm kiểm tra dịch vụ có trong danh mục BHYT hay không
        #region Hàm đọc số thành chữ
        private static string[] ChuSo = new string[10] { " không", " một", " hai", " ba", " bốn", " năm", " sáu", " bẩy", " tám", " chín" };
        private static string[] Tien = new string[6] { "", " nghìn", " triệu", " tỷ", " nghìn tỷ", " triệu tỷ" };

        private static string DocSo3ChuSo(int baso)
        {
            int tram, chuc, donvi;
            string KetQua = "";
            tram = (int)(baso / 100);
            chuc = (int)((baso % 100) / 10);
            donvi = baso % 10;
            if ((tram == 0) && (chuc == 0) && (donvi == 0)) return "";
            if (tram != 0)
            {
                KetQua += ChuSo[tram] + " trăm";
                if ((chuc == 0) && (donvi != 0)) KetQua += " linh";
            }
            if ((chuc != 0) && (chuc != 1))
            {
                KetQua += ChuSo[chuc] + " mươi";
                if ((chuc == 0) && (donvi != 0)) KetQua = KetQua + " linh";
            }
            if (chuc == 1) KetQua += " mười";
            switch (donvi)
            {
                case 1:
                    if ((chuc != 0) && (chuc != 1))
                    {
                        KetQua += " mốt";
                    }
                    else
                    {
                        KetQua += ChuSo[donvi];
                    }
                    break;

                case 5:
                    if (chuc == 0)
                    {
                        KetQua += ChuSo[donvi];
                    }
                    else
                    {
                        KetQua += " lăm";
                    }
                    break;

                default:
                    if (donvi != 0)
                    {
                        KetQua += ChuSo[donvi];
                    }
                    break;
            }
            return KetQua;
        }

        // Hàm đọc số thành chữ
        public static string DocTienBangChu(double SoTien, string strTail)
        {
            int lan, i;
            double so;
            string KetQua = "", tmp = "";
            int[] ViTri = new int[6];
            if (SoTien < 0) return "Số tiền âm.";
            if (SoTien < 1) return "Không";
            if (SoTien > 0)
            {
                so = SoTien;
            }
            else
            {
                so = -SoTien;
            }
            //Kiểm tra số quá lớn
            if (SoTien > 8999999999999999)
            {
                SoTien = 0;
                return "";
            }
            ViTri[5] = (int)(so / 1000000000000000);
            so = so - long.Parse(ViTri[5].ToString()) * 1000000000000000;
            ViTri[4] = (int)(so / 1000000000000);
            so = so - long.Parse(ViTri[4].ToString()) * +1000000000000;
            ViTri[3] = (int)(so / 1000000000);
            so = so - long.Parse(ViTri[3].ToString()) * 1000000000;
            ViTri[2] = (int)(so / 1000000);
            ViTri[1] = (int)((so % 1000000) / 1000);
            ViTri[0] = (int)(so % 1000);
            if (ViTri[5] > 0)
            {
                lan = 5;
            }
            else if (ViTri[4] > 0)
            {
                lan = 4;
            }
            else if (ViTri[3] > 0)
            {
                lan = 3;
            }
            else if (ViTri[2] > 0)
            {
                lan = 2;
            }
            else if (ViTri[1] > 0)
            {
                lan = 1;
            }
            else
            {
                lan = 0;
            }
            for (i = lan; i >= 0; i--)
            {
                tmp = DocSo3ChuSo(ViTri[i]);
                KetQua += tmp;
                if (ViTri[i] != 0) KetQua += Tien[i];
                if ((i > 0) && (!string.IsNullOrEmpty(tmp))) KetQua += " ";//&& (!string.IsNullOrEmpty(tmp))
                //if ((i > 0) && (!string.IsNullOrEmpty(tmp))) KetQua += ",";//&& (!string.IsNullOrEmpty(tmp))
            }
            if (KetQua.Substring(KetQua.Length - 1, 1) == " ") KetQua = KetQua.Substring(0, KetQua.Length - 1);
            //if (KetQua.Substring(KetQua.Length - 1, 1) == ",") KetQua = KetQua.Substring(0, KetQua.Length - 1);
            KetQua = KetQua.Trim() + strTail;
            return KetQua.Substring(0, 1).ToUpper() + KetQua.Substring(1);
        }

        // Hàm đọc số có 3 chữ số
        public static String NumberToTextVN(decimal total)
        {
            try
            {
                string rs = "";
                total = Math.Round(total, 0);
                string[] ch = { "không", "một", "hai", "ba", "bốn", "năm", "sáu", "bảy", "tám", "chín" };
                string[] rch = { "lẻ", "mốt", "", "", "", "lăm" };
                string[] u = { "", "mươi", "trăm", "ngàn", "", "", "triệu", "", "", "tỷ", "", "", "ngàn", "", "", "triệu" };
                string nstr = total.ToString();

                int[] n = new int[nstr.Length];
                int len = n.Length;
                for (int i = 0; i < len; i++)
                {
                    n[len - 1 - i] = Convert.ToInt32(nstr.Substring(i, 1));
                }

                for (int i = len - 1; i >= 0; i--)
                {
                    if (i % 3 == 2)// số 0 ở hàng trăm
                    {
                        if (n[i] == 0 && n[i - 1] == 0 && n[i - 2] == 0) continue;//nếu cả 3 số là 0 thì bỏ qua không đọc
                    }
                    else if (i % 3 == 1) // số ở hàng chục
                    {
                        if (n[i] == 0)
                        {
                            if (n[i - 1] == 0) { continue; }// nếu hàng chục và hàng đơn vị đều là 0 thì bỏ qua.
                            else
                            {
                                rs += " " + rch[n[i]]; continue;// hàng chục là 0 thì bỏ qua, đọc số hàng đơn vị
                            }
                        }
                        if (n[i] == 1)//nếu số hàng chục là 1 thì đọc là mười
                        {
                            rs += " mười"; continue;
                        }
                    }
                    else if (i != len - 1)// số ở hàng đơn vị (không phải là số đầu tiên)
                    {
                        if (n[i] == 0)// số hàng đơn vị là 0 thì chỉ đọc đơn vị
                        {
                            if (i + 2 <= len - 1 && n[i + 2] == 0 && n[i + 1] == 0) continue;
                            rs += " " + (i % 3 == 0 ? u[i] : u[i % 3]);
                            continue;
                        }
                        if (n[i] == 1)// nếu là 1 thì tùy vào số hàng chục mà đọc: 0,1: một / còn lại: mốt
                        {
                            rs += " " + ((n[i + 1] == 1 || n[i + 1] == 0) ? ch[n[i]] : rch[n[i]]);
                            rs += " " + (i % 3 == 0 ? u[i] : u[i % 3]);
                            continue;
                        }
                        if (n[i] == 5) // cách đọc số 5
                        {
                            if (n[i + 1] != 0) //nếu số hàng chục khác 0 thì đọc số 5 là lăm
                            {
                                rs += " " + rch[n[i]];// đọc số
                                rs += " " + (i % 3 == 0 ? u[i] : u[i % 3]);// đọc đơn vị
                                continue;
                            }
                        }
                    }

                    rs += (rs == "" ? " " : ", ") + ch[n[i]];// đọc số
                    rs += " " + (i % 3 == 0 ? u[i] : u[i % 3]);// đọc đơn vị
                }
                if (rs[rs.Length - 1] != ' ')
                    rs += " đồng";
                else
                    rs += "đồng";

                if (rs.Length > 2)
                {
                    string rs1 = rs.Substring(0, 2);
                    rs1 = rs1.ToUpper();
                    rs = rs.Substring(2);
                    rs = rs1 + rs;
                }
                return rs.Trim().Replace("lẻ,", "lẻ").Replace("mươi,", "mươi").Replace("trăm,", "trăm").Replace("mười,", "mười");
            }
            catch
            {
                return "";
            }
        }

        #endregion Hàm đọc số thành chữ
        #region ham viet hoa chu cai dau

        public static string ToFirstUpper(string s)
        {
            if (String.IsNullOrEmpty(s))
                return s;

            string result = "";

            //lấy danh sách các từ

            string[] words = s.Split(' ');

            foreach (string word in words)
            {
                // từ nào là các khoảng trắng thừa thì bỏ
                if (word.Trim() != "")
                {
                    if (word.Length > 1)
                        result += word.Substring(0, 1).ToUpper() + word.Substring(1).ToLower() + " ";
                    else
                        result += word.ToUpper() + " ";
                }
            }
            return result.Trim();
        }

        #endregion ham viet hoa chu cai dau
        #region lấy số tuần trong năm

        public static int GetWeekOrderInYear(DateTime time)
        {
            CultureInfo myCI = CultureInfo.CurrentCulture;
            Calendar myCal = myCI.Calendar;
            CalendarWeekRule myCWR = myCI.DateTimeFormat.CalendarWeekRule;
            DayOfWeek myFirstDOW = myCI.DateTimeFormat.FirstDayOfWeek;
            return myCal.GetWeekOfYear(time, myCWR, myFirstDOW);
        }

        #endregion lấy số tuần trong năm

        #region Kiểm tra thẻ theo ngày

        public static string KTTheBHYT(QLBV_Database.QLBVEntities DataContext, string sthe, DateTime ngay)
        {
            try
            {
                if (!string.IsNullOrEmpty(sthe))
                {
                    if (Bien.MaBV == "30004" && sthe.Substring(0, 2) == "TE")
                    {
                        return "";
                    }
                    var kt = DataContext.BenhNhans.Where(p => p.SThe == (sthe)).OrderByDescending(p => p.NNhap).ToList();
                    if (kt.Count > 0)
                    {
                        var kt2 = kt.Where(p => p.NNhap.Value.Day == (ngay.Day)).Where(p => p.NNhap.Value.Month == (ngay.Month)).Where(p => p.NNhap.Value.Year == (ngay.Year) && p.Status == 3).ToList();
                        if (kt2.Count > 0)
                        {
                            int makp = kt2.First().MaKP.Value;
                            var tenkp = DataContext.KPhongs.Where(p => p.MaKP == makp).Select(p => p.TenKP).DefaultIfEmpty();
                            return tenkp.First();
                        }
                        else
                        {
                            int mabn = kt.First().MaBNhan;
                            var ktrv = DataContext.VienPhis.Where(p => p.NgayTT.Value.Day == (ngay.Day)).Where(p => p.NgayTT.Value.Month == (ngay.Month)).Where(p => p.NgayTT.Value.Year == (ngay.Year)).Where(p => p.MaBNhan == mabn).ToList();
                            if (ktrv.Count > 0)
                            {
                                var rv = DataContext.RaViens.Where(p => p.MaBNhan == mabn).ToList();
                                int makp = rv.Count > 0 ? rv.First().MaKP : ktrv.First().MaKP ?? 0;
                                var tenkp = DataContext.KPhongs.Where(p => p.MaKP == makp).Select(p => p.TenKP).DefaultIfEmpty();
                                return tenkp.First();
                            }
                            else
                                return "";
                        }
                    }
                    else
                        return "";
                }
                else
                {
                    return "";
                }
            }
            catch
            {
                return "";
            }
        }

        #endregion Kiểm tra thẻ theo ngày
        #region Kiểm tra thẻ nhập trong tuần

        public static string KTTheBHYT(QLBV_Database.QLBVEntities DataContext, string sthe, DateTime ngay, int tuan)
        {
            try
            {
                if (!string.IsNullOrEmpty(sthe))
                {
                    {
                        if (!string.IsNullOrEmpty(sthe))
                        {
                            if (Bien.MaBV == "30004" && sthe.Substring(0, 2) == "TE")
                            {
                                return "";
                            }
                            var kt2 = DataContext.BenhNhans.Where(p => p.SThe == (sthe)).OrderBy(p => p.NNhap).ToList();

                            if (kt2.Count > 0)
                            {
                                foreach (var a in kt2)
                                {
                                    if (GetWeekOrderInYear(ngay) == GetWeekOrderInYear(a.NNhap.Value))
                                    {
                                        int makp = kt2.First().MaKP.Value;
                                        var tenkp = DataContext.KPhongs.Where(p => p.MaKP == makp).Select(p => p.TenKP).DefaultIfEmpty();
                                        return tenkp.First();
                                    }
                                    // kiểm tra ra viện
                                    var rv = DataContext.RaViens.Where(p => p.MaBNhan == a.MaBNhan).OrderBy(p => p.NgayRa).FirstOrDefault();
                                    var vp = DataContext.VienPhis.Where(p => p.MaBNhan == a.MaBNhan).FirstOrDefault();
                                    if (vp != null)
                                    {
                                        if (GetWeekOrderInYear(ngay) == GetWeekOrderInYear(vp.NgayTT.Value))
                                        {
                                            int makp = rv != null ? rv.MaKP : vp.MaKP.Value;
                                            var tenkp = DataContext.KPhongs.Where(p => p.MaKP == makp).Select(p => p.TenKP).DefaultIfEmpty();
                                            return tenkp.First();
                                        }
                                    }
                                }
                            }
                            return "";
                        }
                        else
                        {
                            return "";
                        }
                    }
                }
                else
                {
                    return "";
                }
            }
            catch
            {
                return "";
            }
        }

        #endregion Kiểm tra thẻ nhập trong tuần
        #region NgayTu

        public static DateTime NgayTu(DateTime ngaydmy)
        {
            int d = ngaydmy.Day;
            int m = ngaydmy.Month;
            int y = ngaydmy.Year;

            return Convert.ToDateTime(d.ToString() + "/" + m.ToString() + "/" + y.ToString() + " 00:00:00");
        }

        public static string ngayBHYT(DateTime ngaydmy)
        {
            int d = ngaydmy.Day;
            int m = ngaydmy.Month;
            int y = ngaydmy.Year;

            string ngay = "";
            string thang = "";

            if (d > 9)
                ngay = d.ToString();
            else
                ngay = "0" + d.ToString();

            if (m > 9)
                thang = m.ToString();
            else
                thang = "0" + m.ToString();

            return (y.ToString() + thang + ngay);
        }

        #endregion NgayTu
        #region NgayDen

        public static DateTime NgayDen(DateTime ngaydmy)
        {
            int d = ngaydmy.Day;
            int m = ngaydmy.Month;
            int y = ngaydmy.Year;

            return Convert.ToDateTime(d.ToString() + "/" + m.ToString() + "/" + y.ToString() + " 23:59:59.998");
        }

        #endregion NgayDen

        #region ham gui chi dinh cho RIS/PACK Nam Thang Long(01071)

        public class PacsCDvaKQ
        {
            public int MaChiDinh { get; set; }
            public DateTime? ThoiGianChiDinh { get; set; }
            public int? MaBenhNhan { get; set; }
            public string TenBenhNhan { get; set; }
            public string NgaySinh { get; set; }
            public string ThangSinh { get; set; }
            public string NamSinh { get; set; }
            public string GioiTinh { get; set; }
            public string DiaChi { get; set; }
            public string SDT { get; set; }
            public string NoiChiDinh { get; set; }
            public string MaBacSiChiDinh { get; set; }
            public string TenBacSiChiDinh { get; set; }
            public int MaDichVu { get; set; }
            public string TenDichVu { get; set; }
            public string NhomDichVu { get; set; }
            public string ChanDoan { get; set; }
            public string TrangThai { get; set; }
            public DateTime? ThoiGianTraKetQua { get; set; }
            public string NoiDungKetQua { get; set; }
            public string MaBacSiTraKetQua { get; set; }
            public string TenBacSiTraKetQua { get; set; }
        }

        //public static string guiChiDinh1(int idCLS)
        //{
        //    QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(Bien.StrCon);
        //    string message = "";
        //    var data = (from cls in _data.CLS.Where(p => p.IdCLS == idCLS)
        //                join bn in _data.BenhNhans on cls.MaBNhan equals bn.MaBNhan
        //                join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
        //                join cb in _data.CanBoes on cls.MaCB equals cb.MaCB
        //                join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
        //                join dv in _data.DichVus on cd.MaDV equals dv.MaDV
        //                select new PacsCDvaKQ()
        //                {
        //                    MaChiDinh = cd.IDCD,
        //                    ChanDoan = cls.ChanDoan,
        //                    DiaChi = bn.DChi,
        //                    GioiTinh = bn.GTinh == 1 ? "M" : "WM",
        //                    MaBacSiChiDinh = cls.MaCB,
        //                    MaBenhNhan = cls.MaBNhan,
        //                    MaDichVu = dv.MaDV,
        //                    NgaySinh = bn.NgaySinh,
        //                    ThangSinh = bn.ThangSinh,
        //                    NamSinh = bn.NamSinh,
        //                    NhomDichVu = dv.IDNhom,
        //                    NoiChiDinh = kp.TenKP,
        //                    SDT = "",
        //                    TenBacSiChiDinh = cb.TenCB,
        //                    TenBenhNhan = bn.TenBNhan,
        //                    TenDichVu = dv.TenDV,
        //                    ThoiGianChiDinh = cls.NgayThang,
        //                    TrangThai = "NW"
        //                }).ToList();
        //    if (data.Count > 0)
        //    {
        //        foreach (var item in data)
        //        {
        //            HttpClient client = new HttpClient();
        //            client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
        //            string ngaysinh = "";
        //            string thangsinh = "";
        //            string ngaythang = "";
        //            if (string.IsNullOrEmpty(item.NgaySinh.Trim()))
        //                ngaythang = "";
        //            else if (Int32.Parse(item.NgaySinh) < 10)
        //                ngaysinh = "0" + item.NgaySinh;
        //            else
        //                ngaysinh = item.NgaySinh;

        //            if (string.IsNullOrEmpty(item.ThangSinh.Trim()))
        //                ngaythang = "";
        //            else if (Int32.Parse(item.ThangSinh) < 10)
        //                thangsinh = "0" + item.ThangSinh;
        //            else
        //                thangsinh = item.ThangSinh;

        //            var values = new JObject();
        //            values.Add("MaChiDinh", item.MaChiDinh.ToString());
        //            values.Add("ThoiGianChiDinh", item.ThoiGianChiDinh.Value.ToString("yyyyMMddHHmmss"));
        //            values.Add("MaBenhNhan", item.MaBenhNhan.ToString());
        //            values.Add("TenBenhNhan", item.TenBenhNhan);
        //            values.Add("NgaySinh", string.IsNullOrEmpty(ngaythang) ? "" : item.NamSinh + thangsinh + ngaysinh);
        //            values.Add("GioiTinh", item.GioiTinh);
        //            values.Add("DiaChi", item.DiaChi);
        //            values.Add("SDT", item.SDT);
        //            values.Add("NoiChiDinh", item.NoiChiDinh);
        //            values.Add("MaBacSiChiDinh", item.MaBacSiChiDinh);
        //            values.Add("TenBacSiChiDinh", item.TenBacSiChiDinh);
        //            values.Add("MaDichVu", item.MaDichVu.ToString());
        //            values.Add("TenDichVu", item.TenDichVu);
        //            values.Add("NhomDichVu", item.NhomDichVu.ToString());
        //            values.Add("ChanDoan", item.ChanDoan);
        //            values.Add("TrangThai", item.TrangThai);

        //            HttpContent content = new StringContent(values.ToString(), Encoding.UTF8, "application/json");
        //            var response = client.PostAsJsonAsync("http://101.99.14.170:7777", values).Result;
        //            if (response.IsSuccessStatusCode)
        //                message += item.MaDichVu.ToString() + " - ";
        //            else
        //                return "?";
        //        }
        //    }
        //    return message;
        //}
        #endregion ham gui chi dinh cho RIS/PACK Nam Thang Long(01071)

        #region ham gui ket qua cho RIS/PASC

        public static void SendDataRIS(int IdCSL)
        {
            HttpClient http = new HttpClient();
            string url = "http://101.99.14.170:8888";
            http.BaseAddress = new Uri(url);
            http.DefaultRequestHeaders.Accept.Clear();
            http.DefaultRequestHeaders.TryAddWithoutValidation("Content-Type", "application/json");
            http.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
            QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(Bien.StrCon);
            Dictionary<string, string> dic = new Dictionary<string, string>();
            string message = "";
            var data1 = (from cls in _data.CLS.Where(p => p.IdCLS == IdCSL)
                         join bn in _data.BenhNhans on cls.MaBNhan equals bn.MaBNhan
                         join kp in _data.KPhongs on cls.MaKP equals kp.MaKP
                         join cb in _data.CanBoes on cls.MaCB equals cb.MaCB
                         join cd in _data.ChiDinhs on cls.IdCLS equals cd.IdCLS
                         join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                         join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                         join clsct in _data.CLScts on cd.IDCD equals clsct.IDCD
                         select new PacsCDvaKQ()
                         {
                             MaChiDinh = cd.IDCD,
                             ChanDoan = cls.ChanDoan,
                             DiaChi = bn.DChi,
                             GioiTinh = bn.GTinh == 1 ? "M" : "WM",
                             MaBacSiChiDinh = cls.MaCB,
                             MaBenhNhan = cls.MaBNhan,
                             MaDichVu = dv.MaDV,
                             NgaySinh = bn.NgaySinh,
                             ThangSinh = bn.ThangSinh,
                             NamSinh = bn.NamSinh,
                             NhomDichVu = dv.TenRG,
                             NoiChiDinh = kp.TenKP,
                             SDT = "",
                             TenBacSiChiDinh = cb.TenCB,
                             TenBenhNhan = bn.TenBNhan,
                             TenDichVu = dv.TenDV,
                             ThoiGianChiDinh = cls.NgayThang,
                             TrangThai = "NW",
                             MaBacSiTraKetQua = cls.MaCBth,
                             NoiDungKetQua = clsct.KetQua,
                             ThoiGianTraKetQua = cls.NgayTH
                         }).ToList();
            var data = (from dt1 in data1
                        join cb in _data.CanBoes on dt1.MaBacSiTraKetQua equals cb.MaCB
                        select new PacsCDvaKQ
                        {
                            MaChiDinh = dt1.MaChiDinh,
                            ChanDoan = dt1.ChanDoan,
                            DiaChi = dt1.DiaChi,
                            GioiTinh = dt1.GioiTinh,
                            MaBacSiChiDinh = dt1.MaBacSiChiDinh,
                            MaBenhNhan = dt1.MaBenhNhan,
                            MaDichVu = dt1.MaDichVu,
                            NgaySinh = dt1.NgaySinh,
                            ThangSinh = dt1.ThangSinh,
                            NamSinh = dt1.NamSinh,
                            NhomDichVu = dt1.NhomDichVu,
                            NoiChiDinh = dt1.NoiChiDinh,
                            SDT = dt1.SDT,
                            TenBacSiChiDinh = dt1.TenBacSiChiDinh,
                            TenBenhNhan = dt1.TenBenhNhan,
                            TenDichVu = dt1.TenDichVu,
                            ThoiGianChiDinh = dt1.ThoiGianChiDinh,
                            TrangThai = dt1.TrangThai,
                            MaBacSiTraKetQua = dt1.MaBacSiTraKetQua,
                            TenBacSiTraKetQua = cb.TenCB,
                            NoiDungKetQua = dt1.NoiDungKetQua,
                            ThoiGianTraKetQua = dt1.ThoiGianTraKetQua,
                        }).ToList();
            if (data.Count > 0)
            {
                foreach (var item in data)
                {
                    string ngaysinh = "";
                    string thangsinh = "";
                    string ngaythang = "";
                    if (string.IsNullOrEmpty(item.NgaySinh.Trim()))
                        ngaythang = "";
                    else if (Int32.Parse(item.NgaySinh) < 10)
                        ngaysinh = "0" + item.NgaySinh;
                    else
                        ngaysinh = item.NgaySinh;

                    if (string.IsNullOrEmpty(item.ThangSinh.Trim()))
                        ngaythang = "";
                    else if (Int32.Parse(item.ThangSinh) < 10)
                        thangsinh = "0" + item.ThangSinh;
                    else
                        thangsinh = item.ThangSinh;
                    string NDKQ = item.NoiDungKetQua;
                    if (item.NoiDungKetQua.Contains("\r"))
                        NDKQ = NDKQ.Replace("\r", "");
                    if (NDKQ.Contains("\n"))
                        NDKQ = NDKQ.Replace("\n", "\\X0D\\");
                    dic.Add("MaChiDinh", item.MaChiDinh.ToString());
                    dic.Add("ThoiGianChiDinh", item.ThoiGianChiDinh.Value.ToString("yyyyMMddHHmmss"));
                    dic.Add("MaBenhNhan", item.MaBenhNhan.ToString());
                    dic.Add("TenBenhNhan", item.TenBenhNhan);
                    dic.Add("NgaySinh", string.IsNullOrEmpty(ngaythang) ? "" : item.NamSinh + thangsinh + ngaysinh);
                    dic.Add("GioiTinh", item.GioiTinh);
                    dic.Add("DiaChi", item.DiaChi);
                    dic.Add("SDT", item.SDT);
                    dic.Add("NoiChiDinh", item.NoiChiDinh);
                    dic.Add("MaBacSiChiDinh", item.MaBacSiChiDinh);
                    dic.Add("TenBacSiChiDinh", item.TenBacSiChiDinh);
                    dic.Add("MaDichVu", item.MaDichVu.ToString());
                    dic.Add("TenDichVu", item.TenDichVu);
                    dic.Add("NhomDichVu", item.NhomDichVu.ToString());
                    dic.Add("ChanDoan", item.ChanDoan);
                    dic.Add("TrangThai", item.TrangThai);
                    dic.Add("ThoiGianTraKetQua", item.ThoiGianTraKetQua.Value.ToString("yyyyMMddHHmmss"));
                    dic.Add("NoiDungKetQua", NDKQ);
                    dic.Add("MaBacSiTraKetQua", item.MaBacSiTraKetQua);
                    dic.Add("TenBacSiTraKetQua", item.TenBacSiTraKetQua);
                    var response = http.PostAsJsonAsync("", dic).Result;
                    if (response.IsSuccessStatusCode)
                        message += item.MaDichVu.ToString() + " - ";
                    else
                        message += item.MaDichVu.ToString() + ": " + response.StatusCode + "\n";
                }
            }
            MessageBox.Show("Gửi dữ liệu thành công!", "Thông báo");
        }

        #endregion ham gui ket qua cho RIS/PASC

        public static string GetTenBV(QLBV_Database.QLBVEntities data, string mabv)
        {
            string ten = "";
            var tenbv = data.BenhViens.Where(p => p.MaBV == mabv).ToList();
            if (tenbv.Count > 0)
            {
                return ten = tenbv.First().TenBV;
            }
            else
            {
                return ten = "";
            }
        }

        /// <summary>
        /// get ICD ra viện
        /// </summary>
        /// <param name="maBenh"></param>
        /// <returns></returns>

        public static string GetICDstr(string maBenh)
        {
            for (int i = 0; i < maBenh.Length; i++)
            {
                int index = maBenh.LastIndexOf(';');
                if (maBenh.Length > 1 && maBenh.Length - 1 == index)
                    maBenh = maBenh.Substring(0, maBenh.Length - 1);
                if (i >= maBenh.Length)
                    break;
            }
            string _strIcdKhac = "";
            if (maBenh != "")
            {
                string[] _arr = maBenh.Split(';');

                for (int i = 0; i < _arr.Length; i++)
                {
                    if (_arr[i].Length > 1)
                    {
                        if (i == _arr.Length - 1)
                        {
                            _strIcdKhac += _arr[i];
                        }
                        else
                        {
                            _strIcdKhac += _arr[i] + ";";
                        }
                    }
                }
            }
            return _strIcdKhac;
        }

        public static string NgaySangChu(DateTime ngay)
        {
            string a = " Ngày ... tháng ... năm ... ";
            int d = ngay.Day;
            int m = ngay.Month;
            int y = ngay.Year;
            return a = " Ngày " + d.ToString("D2") + " tháng " + m.ToString("D2") + " năm " + y.ToString();
        }

        #region Ngày sang chữ

        /// <summary>
        /// 1 : Ngày tháng năm.
        /// 2 : ... giờ ... , ngày ... tháng ... năm ...
        ///
        /// </summary>
        /// <param name="ngay"></param>
        /// <param name="hp"></param>
        /// <returns></returns>
        public static string NgaySangChu(DateTime ngay, int hp)
        {
            string a = " Ngày ..... tháng ..... năm ..... ";
            int d = 0, m = 0, y = 0, h = 0, p = 0;
            d = ngay.Day;
            m = ngay.Month;
            y = ngay.Year;
            h = ngay.Hour;
            p = ngay.Minute;
            switch (hp)
            {
                case 0:
                    return a;

                case 1:
                    return " Ngày " + d.ToString() + " tháng " + m.ToString() + " năm " + y.ToString();

                case 2:
                    return h.ToString() + " giờ " + p.ToString() + ", ngày " + d.ToString() + " tháng " + m.ToString() + " năm " + y.ToString();

                case 3:
                    return h.ToString() + " giờ " + p.ToString() + ", ngày " + d.ToString() + "/" + m.ToString() + "/" + y.ToString();

                case 4:
                    return " ..... giờ ..... , ngày " + d.ToString() + " tháng " + m.ToString() + " năm " + y.ToString();

                case 5:
                    return " ..... giờ ..... , ngày " + d.ToString() + "/" + m.ToString() + "/" + y.ToString();

                case 6:
                    return h.ToString() + ":" + p.ToString() + "  " + d.ToString() + "/" + m.ToString() + "/" + y.ToString();

                case 7:
                    return d.ToString() + "/" + m.ToString() + "/" + y.ToString();

                case 8:
                    return h.ToString() + " Giờ " + p.ToString() + " Phút , ngày " + d.ToString() + " tháng " + m.ToString() + " năm " + y.ToString();

                case 9:
                    return h.ToString() + ":" + p.ToString() + " \n " + d.ToString() + "/" + m.ToString() + "/" + y.ToString();

                case 10: //h:d HH/DD/YYYY
                    return h.ToString() + ":" + p.ToString() + "  " + KiemTraThoiGian(d) + "/" + KiemTraThoiGian(m) + "/" + y.ToString();

                case 11: // HH/DD/YYYY h:d
                    return KiemTraThoiGian(d) + "/" + KiemTraThoiGian(m) + "/" + y.ToString() + " " + KiemTraThoiGian(h) + ":" + KiemTraThoiGian(p);

                case 12:
                    return KiemTraThoiGian(d) + "/" + KiemTraThoiGian(m) + "/" + KiemTraThoiGian(y);

                case 14:
                    return KiemTraThoiGian(h) + " giờ " + KiemTraThoiGian(p) + " phút, ngày  " + KiemTraThoiGian(d) + " tháng " + KiemTraThoiGian(m) + " năm " + y.ToString();

                case 15: //dd/MM
                    return d.ToString() + "/" + m.ToString();

                case 16:
                    return "ngày " + d.ToString() + " tháng " + m.ToString() + " năm " + y.ToString();

                default:
                    return a;
            }
        }

        private static string KiemTraThoiGian(int a)
        {
            string Time;
            if (a <= 9)
            {
                Time = "0" + a.ToString();
                return Time;
            }
            else
            {
                Time = a.ToString();
                return Time;
            }
        }

        #endregion Ngày sang chữ
        #region hàm lấy right

        // hàm lấy right
        public static string Right(string s, int len)
        {
            if (s.Length <= len) return s;
            else
            {
                return s.Substring(s.Length - len, len);
            }
        }

        #endregion hàm lấy right

        #region kiểm tra thanh toán hay chưa

        public static bool KTraTT(QLBV_Database.QLBVEntities data, int mabnhan)
        {
            var q = data.VienPhis.Where(p => p.MaBNhan == mabnhan).ToList();

            DateTime ngayhan = Convert.ToDateTime("2018-02-01 00:00:00");
            if (Bien.MaBV == "27001" && DateTime.Now < ngayhan)
            {
                return false;
            }
            if (q.Count > 0)
                return true;
            return false;
        }

        #endregion kiểm tra thanh toán hay chưa
        #region kiểm tra khám bệnh hay chưa

        public static bool KTraKB(QLBV_Database.QLBVEntities data, int s)
        {
            var q = data.BNKBs.Where(p => p.MaBNhan == s).ToList();
            if (q.Count > 0)
            {
                if (string.IsNullOrEmpty(q.First().MaICD) && string.IsNullOrEmpty(q.First().ChanDoanBD))
                {
                    MessageBox.Show("chưa nhập bệnh chính !");
                    return false;
                }
                else
                    return true;
            }
            else
            {
                MessageBox.Show("Bạn chưa nhập khám bệnh cho bệnh nhân.");
                return false;
            }
        }

        #endregion kiểm tra khám bệnh hay chưa

        public static DateTime ConvertNgay(string ngay)
        {
            DateTime dt = System.DateTime.Now;
            if (DateTime.TryParse(ngay, out dt))
            {
                return dt;
            }
            return dt;
        }

        #region Ktra ngày nhập không được nhỏ hơn ngày nhập bệnh nhân

        public static bool CheckNgay(DateTime ngaynhapBN, DateTime ngayKBDT)
        {
            if ((ngayKBDT - ngaynhapBN).Seconds < 0)
            {
                System.Windows.Forms.MessageBox.Show("Ngày nhập phải >= ngày nhập bệnh nhân");
                return false;
            }

            return true;
        }

        #endregion Ktra ngày nhập không được nhỏ hơn ngày nhập bệnh nhân
        #region Kiểm tra đã có số phiếu lĩnh chưa

        public static bool _checkSoPL(QLBV_Database.QLBVEntities data, int IDdon)
        {
            var kt = data.DThuoccts.Where(p => p.IDDon == IDdon).Select(p => p.SoPL).ToList();
            if (kt.Count > 0)
            {
                if (kt.First() != null && kt.First().ToString() != "")
                {
                    if (kt.First() > 0)
                        return true;
                    else
                        return false;
                }
                else return false;
            }
            return false;
        }

        #endregion Kiểm tra đã có số phiếu lĩnh chưa
        #region KT giờ HC

        public static bool CheckNGioHC(DateTime dt)
        {
            if (Bien.MaBV != "30005" && Bien.MaBV != "27183" && Bien.MaBV != "12345" && Bien.MaBV != "24297" && Bien.MaBV != "56789" & Bien.MaBV != "24272")
            {
                string a = dt.DayOfWeek.ToString();
                if (a == "Saturday" || a == "Sunday")
                    return true;
            }
            DateTime dttu1 = new DateTime(dt.Year, dt.Month, dt.Day, Bien.GioTu[0], Bien.PhutTu[0], 0);
            DateTime dtden1 = new DateTime(dt.Year, dt.Month, dt.Day, Bien.GioDen[0], Bien.PhutDen[0], 0);
            DateTime dttu2 = new DateTime(dt.Year, dt.Month, dt.Day, Bien.GioTu[1], Bien.PhutTu[1], 0);
            DateTime dtden2 = new DateTime(dt.Year, dt.Month, dt.Day, Bien.GioDen[1], Bien.PhutDen[1], 0);
            if (dt >= dttu1 && dt <= dtden1)
                return false;
            if (dt >= dttu2 && dt <= dtden2)
                return false;

            return true;
        }

        #endregion KT giờ HC
        #region

        public class NXT
        {
            public double dongia;
            public string donvi;
            public string nhom;
            public string tieunhom;
            public string tendv;
            public int madv;
            public string nuocsx;
            public string solo;
            public string macc;
            public string sodk;
            public double tondk_sl;
            public double tonck_sl;
            public double tondk_tt;
            public double tonck_tt;
            public double nhaptk_sl;
            public double nhaptk_tt;
            public double xuattk_sl;
            public double xuattk_tt;
            public double xuatnoit_sl;
            public double xuatnoit_tt;
            public double xuatngoait_sl;
            public double xuatngoait_tt;
            public double xuattutruc_sl;
            public double xuattutruc_tt;
            public double xuatkhac_sl;
            public double xuatkhac_tt;

            public double DonGia
            {
                set { dongia = value; }
                get { return dongia; }
            }

            public string DonVi
            {
                set { donvi = value; }
                get { return donvi; }
            }

            public string TenNhom
            {
                set { nhom = value; }
                get { return nhom; }
            }

            public string TenTN
            {
                set { tieunhom = value; }
                get { return tieunhom; }
            }

            public string TenDV
            {
                set { tendv = value; }
                get { return tendv; }
            }

            public int MaDV
            {
                set { madv = value; }
                get { return madv; }
            }

            public string NuocSX
            {
                set { nuocsx = value; }
                get { return nuocsx; }
            }

            public string SoLo
            {
                set { solo = value; }
                get { return solo; }
            }

            public string MaCC
            {
                set { macc = value; }
                get { return macc; }
            }

            public string SoDK
            {
                set { sodk = value; }
                get { return sodk; }
            }

            public double TonDK_SL
            {
                set { tondk_sl = value; }
                get { return tondk_sl; }
            }

            public double TonDK_TT
            {
                set { tondk_tt = value; }
                get { return tondk_tt; }
            }

            public double TonCK_SL
            {
                set { tonck_sl = value; }
                get { return tonck_sl; }
            }

            public double TonCK_TT
            {
                set { tonck_tt = value; }
                get { return tonck_tt; }
            }

            public double NhapTK_sl
            {
                set { nhaptk_sl = value; }
                get { return nhaptk_sl; }
            }

            public double NhapTK_tt
            {
                set { nhaptk_tt = value; }
                get { return nhaptk_tt; }
            }

            public double XuatTK_sl
            {
                set { xuattk_sl = value; }
                get { return xuattk_sl; }
            }

            public double XuatTK_tt
            {
                set { xuattk_tt = value; }
                get { return xuattk_tt; }
            }

            public double XuatNoiT_sl
            {
                set { xuatnoit_sl = value; }
                get { return xuatnoit_sl; }
            }

            public double XuatNoiT_tt
            {
                set { xuatnoit_tt = value; }
                get { return xuatnoit_tt; }
            }

            public double XuatNgoaiT_sl
            {
                set { xuatngoait_sl = value; }
                get { return xuatngoait_sl; }
            }

            public double XuatNgoaiT_tt
            {
                set { xuatngoait_tt = value; }
                get { return xuatngoait_tt; }
            }

            public double XuatTuTruc_sl
            {
                set { xuattutruc_sl = value; }
                get { return xuattutruc_sl; }
            }

            public double XuatTuTruc_tt
            {
                set { xuattutruc_tt = value; }
                get { return xuattutruc_tt; }
            }

            public double XuatKhac_tt
            {
                set { xuatkhac_tt = value; }
                get { return xuatkhac_tt; }
            }

            public double XuatKhac_sl
            {
                set { xuatkhac_sl = value; }
                get { return xuatkhac_sl; }
            }
        }

        #endregion
        #region lấy số pm

        public static string Read(string KeyName, int i)
        {
            // Opening the registry key
            try
            {
                RegistryKey rk = Registry.LocalMachine;
                // Open a subKey as read-only
                string subKey = "SOFTWARE\\Cuong";
                RegistryKey sk1 = rk.OpenSubKey(subKey);

                if (sk1 == null)
                {
                    return "";
                }
                else
                {
                    try
                    {
                        // If the RegistryKey exists I get its value
                        // or null is returned.

                        return (string)sk1.GetValue(KeyName.ToString());
                    }
                    catch (Exception)
                    {
                        // AAAAAAAAAAARGH, an error!
                        System.Windows.Forms.MessageBox.Show("Liên hệ 0466.72.36.36");
                        //System.Windows.Forms.MessageBox.Show(e.Message + "Writing registry " + KeyName.ToUpper());
                        return "";
                    }
                }
            }
            catch (Exception)
            {
                System.Windows.Forms.MessageBox.Show("Lỗi đọc số PM ");
                return "";
            }
        }

        #endregion
        #region lay ngay update
        #endregion

        #region cắt chuỗi

        public string CatChuoi(string chuoi, char kytu)
        {
            string chuoi_dau = "";
            string[] chuoi_tach = chuoi.Split(new Char[] { kytu });

            foreach (string s in chuoi_tach)
            {
                if (s.Trim() != "")
                    chuoi_dau += s;
            }
            return chuoi_dau;
        }

        #endregion
        #region kiểm tra ngày khóa dữ liệu

        public static bool _checkNgayKhoa(QLBV_Database.QLBVEntities data, DateTime dt, string ploaict)
        {
            List<KhoaDL> _lkhoa = new List<KhoaDL>();
            //if (ploaict == "KhoaVP")
            //    _lkhoa = data.KhoaDLs.Where(p => p.NgayKhoa.Value.Year).Where(p => p.NgayKhoa.Month == dt.Month).Where(p => p.NgayKhoa.Day == dt.Day).Where(p => p.KhoaVP == 1).ToList();
            //else
            //    _lkhoa = data.KhoaDLs.Where(p => p.NgayKhoa.Year == dt.Year).Where(p => p.NgayKhoa.Month == dt.Month).Where(p => p.NgayKhoa.Day == dt.Day).Where(p => p.KhoaDC == 1).ToList();
            if (_lkhoa.Count > 0)
            {
                System.Windows.Forms.MessageBox.Show("Ngày: " + dt.Date.ToString().Substring(0, 10) + " đã được khóa");
                return true;
            }
            return false;
        }

        #endregion

        #region ktra ra vien

        /// <summary>
        /// ra viện : true, chưa ra: false
        /// </summary>
        /// <param name="_data"></param>
        /// <param name="_mabn"></param>
        /// <returns></returns>
        public static bool KT_RaVien(QLBV_Database.QLBVEntities _data, int _mabn)
        {
            var kt = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _mabn).Where(p => p.NoiTru == 1) join rav in _data.RaViens.Where(p => p.MaBNhan == _mabn) on bn.MaBNhan equals rav.MaBNhan select rav).ToList();
            if (kt.Count > 0)
            {
                System.Windows.Forms.MessageBox.Show("Bệnh nhân đã làm thủ tục ra|chuyển viện, bạn không thể thêm mới hay sửa");
                return true;
            }
            else
                return false;
        }

        #endregion
        #region ktra ra vien ngoại trú

        /// <summary>
        /// ra viện : true, chưa ra: false
        /// </summary>
        /// <param name="_data"></param>
        /// <param name="_mabn"></param>
        /// <returns></returns>
        public static bool KT_RaVien_ngt(QLBV_Database.QLBVEntities _data, int _mabn)
        {
            var kt = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _mabn) join rav in _data.RaViens on bn.MaBNhan equals rav.MaBNhan select rav).ToList();//.Where(p => p.NoiTru == 0)
            if (kt.Count > 0)
            {
                //System.Windows.Forms.MessageBox.Show("Bệnh nhân đã làm thủ tục ra|chuyển viện, bạn không thể thêm mới hay sửa");
                return true;
            }
            else
                return false;
        }

        #endregion
        #region ktra ra vien

        public static string KT_RaVien(QLBV_Database.QLBVEntities _data, string _sthe, int ttluu)
        {
            if (ttluu == 2)
            {
                return "";
            }
            DateTime ngayss = DateTime.Now.AddMonths(-2);
            var kt = (from bn in _data.BenhNhans.Where(p => p.NNhap > ngayss).Where(p => p.SThe.ToLower() == (_sthe.ToLower()))
                      join rav in _data.RaViens on bn.MaBNhan equals rav.MaBNhan into kq
                      from kq2 in kq.DefaultIfEmpty()
                      where kq2 == null
                      select bn).OrderByDescending(p => p.NNhap).ToList();
            if (kt.Count > 0 && (Bien.MaBV == "30004" ? (!kt.First().SThe.Contains("KT") && !kt.First().SThe.Contains("TE")) : true))
            {
                int makp = kt.First().MaKP.Value;
                var kp = _data.KPhongs.Where(p => p.MaKP == makp).ToList();
                if (kp.Count > 0)
                    return kp.First().TenKP;
                //System.Windows.Forms.MessageBox.Show("Bệnh nhân: "+kt.First().MaBNhan +" - "+ kt.First().TenBNhan+"-"+kt.First().NNhap+" chưa ra viện \n Bạn không thể nhập mới");
                return "";
            }
            else
                return "";
        }

        #endregion
        #region Kiểm tra chỉ định đã được thực hiện hay chưa

        public static string KTChiDinh(QLBV_Database.QLBVEntities _data, int mabn)
        {
            string tendv = "";
            var a = (from cls in _data.CLS.Where(p => p.MaBNhan == mabn)
                     join cd in _data.ChiDinhs.Where(p => p.Status == null || p.Status == 0) on cls.IdCLS equals cd.IdCLS
                     join dv in _data.DichVus on cd.MaDV equals dv.MaDV
                     select dv.TenDV).Distinct().ToList();
            int j = 1;
            foreach (var i in a)
            {
                tendv += j + ": " + i + "\n ";
                j++;
            }
            return tendv;
        }

        #endregion
        #region tính tuổi ra tháng tuổi

        /// <summary>
        ///
        /// </summary>
        /// <param name="_data"></param>
        /// <param name="mabn"></param>
        /// <param name="gioihan">thang-ngay</param>
        /// <returns></returns>
        ///
        public static string TuoitheoThang(QLBV_Database.QLBVEntities _data, int mabn, string gioihan)
        {
            string tuoi = "";
            try
            {
                string[] _gioihan;
                _gioihan = gioihan.Split('-');
                int gioihanthang = 0, gioihanngay = 0;
                if (_gioihan.Length > 1)
                {
                    int.TryParse(_gioihan[0], out gioihanthang);
                    int.TryParse(_gioihan[1], out gioihanngay);
                }
                var bn = _data.BenhNhans.Where(p => p.MaBNhan == mabn).ToList();
                if (bn.Count > 0)
                {
                    int _tuoi = bn.First().Tuoi.Value;
                    tuoi = _tuoi.ToString();
                    int _ngays = 1;
                    int _thangs = 1;
                    int _nams = 1900;
                    if (bn.First().NgaySinh != null)
                        _ngays = Convert.ToInt32(bn.First().NgaySinh);
                    if (bn.First().ThangSinh != null)
                        _thangs = Convert.ToInt32(bn.First().ThangSinh);
                    if (bn.First().NamSinh != null)
                        _nams = Convert.ToInt32(bn.First().NamSinh);
                    int nam = bn.First().NNhap.Value.Year - _nams;
                    int thangtuoi = 0, ngaytuoi = 0;
                    if (_ngays == 0)
                        _ngays = 1;
                    if (_thangs == 0)
                        _thangs = 1;
                    string a = _ngays + "/" + _thangs + "/" + _nams;
                    DateTime _ngaysinh = Convert.ToDateTime(a);
                    if (nam <= 0)
                    {
                        thangtuoi = (bn.First().NNhap.Value.Month - _thangs);
                    }
                    else
                    {
                        thangtuoi = (bn.First().NNhap.Value.Month - _thangs) + 12 * nam;
                    }
                    ngaytuoi = (bn.First().NNhap.Value - _ngaysinh).Days;
                    if (thangtuoi <= gioihanthang)
                    {
                        if (ngaytuoi <= gioihanngay)
                        {
                            tuoi = ngaytuoi.ToString() + " ngày";
                        }
                        else
                        {
                            int temp = 0;
                            int countMonth = ngaytuoi;
                            for (int i = 0; i < ngaytuoi / 30 + 10; i++)
                            {
                                if (i % 2 == 0 && countMonth > 0)
                                {
                                    temp++;
                                    countMonth -= 30;
                                }
                                if (i % 2 != 0 && countMonth > 0)
                                {
                                    temp++;
                                    countMonth -= 31;
                                }
                            }
                            if (ngaytuoi <= 2160)
                            {
                                tuoi = temp.ToString() + " tháng";
                            }
                            else
                            {
                                tuoi = (temp - 1).ToString() + " tháng";
                            }
                        }
                    }
                    else
                    {
                        tuoi = _tuoi.ToString();
                    }
                    return tuoi;
                }
                return tuoi;
            }
            catch (Exception ex)
            {
                return tuoi;
            }
        }

        #endregion
        #region tính tuổi ra tháng tuổi

        /// <summary>
        ///
        /// </summary>
        /// <param name="_data"></param>
        /// <param name="mabn"></param>
        /// <param name="gioihan">thang-ngay</param>
        /// <returns></returns>
        public static string TuoitheoThang(DateTime _ngaynhap, string _ngayS, string _thangS, string _namS, int _tuoi, string gioihan)
        {
            string tuoi = "";
            try
            {
                string[] _gioihan;
                _gioihan = gioihan.Split('-');
                int gioihanthang = 0, gioihanngay = 0;
                if (_gioihan.Length > 1)
                {
                    int.TryParse(_gioihan[0], out gioihanthang);
                    int.TryParse(_gioihan[1], out gioihanngay);
                }

                tuoi = _tuoi.ToString();
                int _ngays = 1;
                int _thangs = 1;
                int _nams = 1900;
                if (!string.IsNullOrEmpty(_ngayS))
                    _ngays = Convert.ToInt32(_ngayS);
                if (!string.IsNullOrEmpty(_thangS))
                    _thangs = Convert.ToInt32(_thangS);
                if (!string.IsNullOrEmpty(_namS))
                    _nams = Convert.ToInt32(_namS);
                int nam = _ngaynhap.Year - _nams;
                int thangtuoi = 0, ngaytuoi = 0;
                if (_ngays == 0)
                    _ngays = 1;
                if (_thangs == 0)
                    _thangs = 1;
                string a = _ngays + "/" + _thangs + "/" + _nams;
                DateTime _ngaysinh = Convert.ToDateTime(a);
                if (nam <= 0)
                {
                    // thangtuoi = (_ngaynhap.Month - _thangs) + 1;
                    thangtuoi = (_ngaynhap.Month - _thangs);
                }
                else
                {
                    //thangtuoi = (_ngaynhap.Month - _thangs) + 1 + 12 * nam;
                    thangtuoi = (_ngaynhap.Month - _thangs) + 12 * nam;
                }
                ngaytuoi = (_ngaynhap - _ngaysinh).Days;
                if (thangtuoi <= gioihanthang)
                {
                    if (ngaytuoi <= gioihanngay)
                    {
                        tuoi = ngaytuoi.ToString() + "ng";
                    }
                    else
                    {
                        tuoi = thangtuoi.ToString() + "th";
                    }
                }
                else
                {
                    tuoi = _tuoi.ToString();
                }
                return tuoi;
            }
            catch (Exception)
            {
                return tuoi;
            }
        }

        #endregion
        #region Lấy mã ICD
        /// <summary>
        /// 0. lấy Mã ICD và chẩn đoán cuối cùng
        /// 1. Lấy Mã ICD và chẩn đoán đầu tiên
        /// 2. Lấy tất cả các chẩn đoán, Mã ICD cuối cùng làm chính
        /// 3. Lấy tất cả các chuẩn đoán, Mã ICD đầu tiên làm chính
        /// \n returns: string[]{"Mã ICD","Chẩn đoán","Mã KP","Ngày khám"};
        /// </summary>
        /// <param name="data"> da ta contect</param>
        /// <param name="mabn">Mã bệnh nhân</param>
        /// <param name="kieu">Cách thức lấy mã ICD, được thiết lập trên hệ thống</param>
        /// <returns>
        /// 1 là sdfg dsg
        /// </returns>
        ///

        public static string[] GetYHCT_24297(string MaICD, List<ICD10> _licd)
        {
            string[] _arr = new string[] { "", "", "" };
            if (MaICD.Contains(";"))
            {
                List<string> q1 = new List<string>();
                var q2 = MaICD.Split(';').Where(p => p != "").ToList();
                var q3 = (from a in q2
                          join icd in _licd on a equals icd.MaICD
                          select new { icd.TenICD, icd.TenYHCT, icd.MaYHCT, icd.MaICD }).Distinct().ToList();
                if (q3.Count > 0)
                {
                    if (Bien.MaBV == "24297")
                    {
                        _arr[0] = string.Join(";  ", q3.Select(p => p.MaYHCT).ToArray());
                        _arr[1] = string.Join(";  ", q3.Select(p => p.TenYHCT).ToArray());
                        _arr[2] = string.Join(";  ", q3.Select(p => p.MaYHCT + '-' + p.TenYHCT + "[" + p.TenICD + "(" + p.MaICD + ")" + "]").ToArray());
                    }
                    else
                    {
                        _arr[0] = string.Join(";  ", q3.Select(p => p.MaYHCT + "[" + p.MaICD + "]").ToArray());
                        _arr[1] = string.Join(";  ", q3.Select(p => p.TenYHCT).ToArray());
                        _arr[2] = string.Join(";  ", q3.Select(p => p.MaYHCT + '-' + p.TenYHCT + "[" + p.TenICD + "(" + p.MaICD + ")" + "]").ToArray());
                    }
                }
            }
            else
            {
                var q1 = _licd.Where(p => p.MaICD == MaICD).FirstOrDefault();
                if (q1 != null)
                {
                    _arr[0] = q1.MaYHCT;
                    _arr[1] = q1.TenYHCT;
                }
            }

            return _arr;
        }

        public static string[] GetMaYHCT(string MaICD, List<ICD10> _licd)
        {
            string[] _arr = new string[] { "", "" };
            if (!string.IsNullOrEmpty(MaICD))
            {
                if (MaICD.Contains(";"))
                {
                    List<string> q1 = new List<string>();
                    var q2 = MaICD.Split(';').Where(p => p != "").ToList();
                    var q3 = (from a in q2
                              join icd in _licd on a equals icd.MaICD
                              select new { icd.TenYHCT, icd.MaYHCT }).Distinct().ToList();
                    if (q3.Count > 0)
                    {
                        _arr[0] = string.Join(";  ", q3.Select(p => p.MaYHCT).ToArray());
                        _arr[1] = string.Join(";  ", q3.Select(p => p.TenYHCT).ToArray());
                    }
                }
                else
                {
                    var q1 = _licd.Where(p => p.MaICD == MaICD).FirstOrDefault();
                    if (q1 != null)
                    {
                        _arr[0] = q1.MaYHCT;
                        _arr[1] = q1.TenYHCT;
                    }
                }
            }
            return _arr;
        }

        public static string[] getMaICDarr(QLBV_Database.QLBVEntities _data, int _mabn, int _kieu, int idkb)
        {
            string[] maicd = getMaICDarrFull(_data, _mabn, _kieu, idkb);

            maicd[0] = DungChung.Ham.FreshString(maicd[0]);
            maicd[1] = DungChung.Ham.FreshString(maicd[1]);
            return maicd;
        }

        #endregion

        #region laays chan doan ra vien 24012

        public static Bien.ChanDoan getCDRV_24012(QLBV_Database.QLBVEntities _data, int _mabn, int _kieu, int idkb)
        {
            string benhchinh = "";
            string benhphu2 = "";
            string benhphu3 = "";
            string benhphu4 = "";
            string maICD = "";
            string maICD2 = "";
            string maICD3 = "";
            string maICD4 = "";

            Bien.ChanDoan ttchandoan = new Bien.ChanDoan();
            var a = _data.BNKBs.Where(p => p.MaBNhan == _mabn && (idkb == 0 || p.IDKB == idkb)).OrderByDescending(p => p.IDKB).ToList();
            #region lấy tất cả ICD, chẩn đoán

            a = a.OrderByDescending(p => p.IDKB).ToList();
            var bn = _data.BenhNhans.Where(p => p.MaBNhan == _mabn).ToList();
            if (bn.Count() > 0)
            {
                if (bn.First().NoiTru == 1)
                {
                    var temp = a.OrderByDescending(p => p.NgayKham).First();
                    a.Clear();
                    a.Add(temp);
                }
            }

            for (int i = 0; i < a.Count(); i++)
            {
                List<string> lmaICD2 = a[i].MaICD2.Split(';').Where(p => p.Trim() != "").ToList();
                List<string> lchanDoan = a[i].BenhKhac.Split(';').Where(p => p.Trim() != "").ToList();
                if (!string.IsNullOrEmpty(a[i].MaICD) && i == 0)
                {
                    maICD += a[i].MaICD; // Laays ICD benh chinh
                }
                else
                {
                    maICD4 += a[i].MaICD + ";";
                }
                if (!string.IsNullOrEmpty(a[i].ChanDoan) && i == 0)
                    benhchinh += a[i].ChanDoan;
                else
                    benhphu4 += a[i].ChanDoan + ";";

                if (lmaICD2.Count > 0)
                {
                    foreach (var item in lmaICD2)
                    {
                        if (string.IsNullOrEmpty(maICD2))
                        {
                            maICD2 += item;
                        }
                        else if (string.IsNullOrEmpty(maICD3))
                        {
                            maICD3 += item;
                        }
                        else
                        {
                            maICD4 += item + ";";
                        }
                    }
                }

                if (lchanDoan.Count > 0)
                {
                    foreach (var item in lchanDoan)
                    {
                        if (string.IsNullOrEmpty(benhphu2))
                        {
                            benhphu2 += item;
                        }
                        else if (string.IsNullOrEmpty(benhphu3))
                        {
                            benhphu3 += item;
                        }
                        else
                        {
                            benhphu4 += item + ";";
                        }
                    }
                }
            }
            ttchandoan.BenhChinh = benhchinh;
            ttchandoan.BenhPhu2 = benhphu2;
            ttchandoan.BenhPhu3 = benhphu3;
            ttchandoan.BenhPhu4 = benhphu4;
            ttchandoan.MaICD = maICD;
            ttchandoan.MaICD2 = maICD2;
            ttchandoan.MaICD3 = maICD3;
            ttchandoan.MaICD4 = maICD4;
            return ttchandoan;
            #endregion
        }

        #endregion

        public static string[] getMaICDarrFull(QLBV_Database.QLBVEntities _data, int _mabn, int _kieu, int idkb)//0 theo ICD10, 1 theo ma YHCT
        {
            //bool getCDBD = true;
            string[] maicd = new string[] { "", "", "", "", "", "0", "", "" };// maicd[6] : mã khoa phòng ra viện
            var a = _data.BNKBs.Where(p => p.MaBNhan == _mabn && (idkb == 0 || p.IDKB == idkb)).OrderByDescending(p => p.IDKB).ToList();
            var _lidc10 = _data.ICD10.ToList();
            // var b1 = a.Where(p => p.MaICD == null || p.MaICD == "").ToList();
            List<string> benhkhacnew = new List<string>();
            List<string> DSCDfull = new List<string>();
            List<string> strMaBenhPhu = new List<string>();//danh sách bệnh phụ của 1 lần khám
            List<string> strMaICDPhu = new List<string>();//danh sách ICD phụ của 1 lần khám

            string benhchinh = "";
            string benhphu2 = "";
            string benhphu3 = "";
            string benhphu4 = "";
            string benhphu44 = "";
            string benhphu55 = "";
            string maICD = "";
            string maICD2 = "";
            string maICD3 = "";
            string maICD4 = "";
            string maICD44 = "";
            string maICD55 = "";

            //if (b1.Count == 0)
            //{
            if (a.Count > 0)
            {
                List<string> l_ICD = new List<string>();
                List<string> l_chandoan = new List<string>();
                List<string> _chandoanPhu = new List<string>();

                string makp = "", mack = "0", ngaykham = "";
                maicd[6] = a.First().MaKP.ToString();
                switch (_kieu)
                {
                    case 0:
                        int idmax = a.Max(p => p.IDKB);
                        foreach (var b in a.Where(p => p.IDKB == idmax))
                        {
                            if (!string.IsNullOrEmpty(b.MaICD))
                                l_ICD.Add(b.MaICD);
                            if (!string.IsNullOrEmpty(b.MaICD2))
                                l_ICD.Add(b.MaICD2);

                            if (!string.IsNullOrEmpty(b.ChanDoan))
                                l_chandoan.Add(b.ChanDoan);
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                            {
                                l_chandoan.Add(b.BenhKhac);
                                List<string> lbenhkhac = b.BenhKhac.Split(';').Where(p => p != "").Distinct().ToList();
                                int num = 0;

                                foreach (string tenbenh in lbenhkhac)
                                {
                                    string tenbenhN = tenbenh.Replace("(Bệnh phụ)", "");
                                    var qtenicd = _data.ICD10.Where(p => p.TenICD == tenbenhN).FirstOrDefault();
                                    num++;
                                    if (num > 2 || qtenicd == null)
                                        _chandoanPhu.Add(tenbenh);
                                }

                                maicd[7] = string.Join("; ", _chandoanPhu);
                            }

                            makp = b.MaKP.ToString();
                            mack = b.MaCK.ToString();
                            ngaykham = b.NgayKham.ToString();
                        }
                        l_ICD = l_ICD.Distinct().ToList();
                        l_chandoan = l_chandoan.Distinct().ToList();

                        maicd[0] = string.Join(";  ", l_ICD);
                        maicd[1] = string.Join(";  ", l_chandoan);
                        maicd[2] = makp;
                        maicd[3] = ngaykham;
                        maicd[4] = "";
                        maicd[5] = mack;
                        break;

                    case 1:
                        int idmin = a.Min(p => p.IDKB);
                        foreach (var b in a.Where(p => p.IDKB == idmin))
                        {
                            if (!string.IsNullOrEmpty(b.MaICD))
                                l_ICD.Add(b.MaICD);
                            if (!string.IsNullOrEmpty(b.MaICD2))
                                l_ICD.Add(b.MaICD2);
                            if (!string.IsNullOrEmpty(b.ChanDoan))
                                l_chandoan.Add(b.ChanDoan);
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                            {
                                l_chandoan.Add(b.BenhKhac);
                                if (!string.IsNullOrEmpty(b.BenhKhac))
                                {
                                    l_chandoan.Add(b.BenhKhac);
                                    List<string> lbenhkhac = b.BenhKhac.Split(';').Where(p => p != "").Distinct().ToList();
                                    int num = 0;
                                    // List<string> _chandoanPhu = new List<string>();
                                    foreach (string tenbenh in lbenhkhac)
                                    {
                                        string tenbenhN = tenbenh.Replace("(Bệnh phụ)", "");
                                        var qtenicd = _data.ICD10.Where(p => p.TenICD == tenbenhN).FirstOrDefault();
                                        num++;
                                        if (num > 2 || qtenicd == null)
                                            _chandoanPhu.Add(tenbenh);
                                    }
                                    maicd[7] = string.Join("; ", _chandoanPhu);
                                }
                            }
                            makp = b.MaKP.ToString();
                            mack = b.MaCK.ToString();
                            ngaykham = b.NgayKham.ToString();
                        }
                        l_ICD = l_ICD.Distinct().ToList();
                        l_chandoan = l_chandoan.Distinct().ToList();
                        maicd[0] = string.Join("; ", l_ICD);
                        maicd[1] = string.Join("; ", l_chandoan);

                        break;

                    case 2:
                        int idmaxfull = a.Max(p => p.IDKB);

                        foreach (var b in a.Where(p => p.IDKB == idmaxfull))
                        {
                            if (!string.IsNullOrEmpty(b.MaICD))
                            {
                                l_ICD.Add(b.MaICD);
                                maICD = b.MaICD;
                            }
                            if (!string.IsNullOrEmpty(b.MaICD2))
                            {
                                l_ICD.Add(b.MaICD2);
                                strMaICDPhu = b.MaICD2.Split(';').ToList();
                                if (strMaICDPhu.Count > 2)
                                    maICD4 = strMaICDPhu.Skip(2).First().ToString();
                                if (strMaICDPhu.Count > 1)
                                    maICD3 = strMaICDPhu.Skip(1).First().ToString();
                                if (strMaICDPhu.Count > 0)
                                    maICD2 = strMaICDPhu.First().ToString();
                            }
                            if (!string.IsNullOrEmpty(b.ChanDoan))
                            {
                                benhchinh = b.ChanDoan;
                            }
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                            {
                                strMaBenhPhu = b.BenhKhac.Split(';').ToList();
                                if (strMaBenhPhu.Count > 2)
                                    benhphu4 = strMaBenhPhu.Skip(2).First().ToString();
                                if (strMaBenhPhu.Count > 1)
                                    benhphu3 = strMaBenhPhu.Skip(1).First().ToString();
                                if (strMaBenhPhu.Count > 0)
                                    benhphu2 = strMaBenhPhu.First().ToString();
                            }

                            makp = b.MaKP.ToString();
                            mack = b.MaCK.ToString();
                            ngaykham = b.NgayKham.ToString();
                        }
                        foreach (var b in a.Where(p => p.IDKB != idmaxfull))
                        {
                            if (!string.IsNullOrEmpty(b.ChanDoan))
                                l_chandoan.Add(b.ChanDoan);
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                            {
                                l_chandoan.Add(b.BenhKhac);
                            }
                        }

                        l_ICD = l_ICD.ToList();
                        l_chandoan = l_chandoan.Where(p => p != "" && p != benhchinh && p != benhphu2 && p != benhphu3 && p != benhphu4).Distinct().ToList();
                        l_chandoan.Insert(0, benhphu4);
                        l_chandoan.Insert(0, benhphu3);
                        l_chandoan.Insert(0, benhphu2);
                        l_chandoan.Insert(0, benhchinh);
                        maicd[0] = string.Join("; ", l_ICD);
                        maicd[1] = string.Join("; ", l_chandoan);

                        // Đoài yc 01/10/2018
                        DSCDfull = maicd[1].Split(';').Where(p => p != "" && p != benhchinh && p != benhphu2 && p != benhphu3).Distinct().ToList();
                        maicd[7] = string.Join("; ", DSCDfull);
                        break;

                    case 3:
                        int idminfull = a.Min(p => p.IDKB);

                        foreach (var b in a.Where(p => p.IDKB == idminfull))
                        {
                            if (!string.IsNullOrEmpty(b.MaICD))
                            {
                                l_ICD.Add(b.MaICD);
                                maICD = b.MaICD;
                            }
                            if (!string.IsNullOrEmpty(b.MaICD2))
                            {
                                l_ICD.Add(b.MaICD2);
                                strMaICDPhu = b.MaICD2.Split(';').ToList();
                                if (strMaICDPhu.Count > 2)
                                    maICD4 = strMaICDPhu.Skip(2).First().ToString();
                                if (strMaICDPhu.Count > 1)
                                    maICD3 = strMaICDPhu.Skip(1).First().ToString();
                                if (strMaICDPhu.Count > 0)
                                    maICD2 = strMaICDPhu.First().ToString();
                            }
                            makp = b.MaKP.ToString();
                            mack = b.MaCK.ToString();
                            ngaykham = b.NgayKham.ToString();

                            if (!string.IsNullOrEmpty(b.ChanDoan))
                            {
                                benhchinh = b.ChanDoan;
                            }
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                            {
                                strMaBenhPhu = b.BenhKhac.Split(';').ToList();
                                if (strMaBenhPhu.Count > 2)
                                    benhphu4 = strMaBenhPhu.Skip(2).First().ToString();
                                if (strMaBenhPhu.Count > 1)
                                    benhphu3 = strMaBenhPhu.Skip(1).First().ToString();
                                if (strMaBenhPhu.Count > 0)
                                    benhphu2 = strMaBenhPhu.First().ToString();
                            }
                        }
                        a = a.OrderBy(p => p.IDKB).ToList();
                        foreach (var b in a.Where(p => p.IDKB != idminfull))
                        {
                            if (!string.IsNullOrEmpty(b.ChanDoan))
                                l_chandoan.Add(b.ChanDoan);
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                                l_chandoan.Add(b.BenhKhac);
                        }
                        l_ICD = l_ICD.ToList();
                        l_chandoan = l_chandoan.Distinct().Where(p => p != "" && p != benhchinh && p != benhphu2 && p != benhphu3 && p != benhphu4).ToList();
                        l_chandoan.Insert(0, benhphu4);
                        l_chandoan.Insert(0, benhphu3);
                        l_chandoan.Insert(0, benhphu2);
                        l_chandoan.Insert(0, benhchinh);
                        maicd[0] = string.Join("; ", l_ICD);
                        maicd[1] = string.Join("; ", l_chandoan);

                        // Đoài yc 01/10/2018

                        DSCDfull = maicd[1].Split(';').Where(p => p != "" && p != benhchinh && p != benhphu2 && p != benhphu3).Distinct().ToList();
                        maicd[7] = string.Join("; ", DSCDfull);

                        break;

                    case 4:
                        #region lấy tất cả ICD, chẩn đoán

                        List<string> ICDfull = new List<string>();
                        List<string> _chandoanfull = new List<string>();
                        List<string> ICDPhu = new List<string>();//list mã icd 4
                        // List<string> _chandoanPhu = new List<string>();// list chẩn đoán 4
                        a = a.OrderByDescending(p => p.IDKB).ToList();

                        foreach (var b in a)
                        {
                            if (!string.IsNullOrEmpty(b.MaICD))
                            {
                                ICDfull.Add(b.MaICD);
                            }
                            if (!string.IsNullOrEmpty(b.MaICD2))
                            {
                                List<string> lmaICD2 = b.MaICD2.Split(';').Where(p => p.Trim() != "").ToList();
                                int num = 0;
                                foreach (string maicd2 in lmaICD2)
                                {
                                    num++;
                                    if (num < 3)
                                        ICDfull.Add(maicd2);
                                    else if (num >= 3)
                                        ICDPhu.Add(maicd2);
                                }
                            }

                            if (!string.IsNullOrEmpty(b.ChanDoan))
                            {
                                _chandoanfull.Add(b.ChanDoan);
                            }
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                            {
                                List<string> lbenhkhac = b.BenhKhac.Split(';').Where(p => p.Trim() != "").ToList();
                                int num = 0;
                                foreach (string tenbenh in lbenhkhac)
                                {
                                    string tenbenhN = tenbenh.Replace("(Bệnh phụ)", "");
                                    var qtenicd = _data.ICD10.Where(p => p.TenICD == tenbenhN).FirstOrDefault();
                                    num++;
                                    if (num < 3 && qtenicd != null)
                                        _chandoanfull.Add(tenbenh);
                                    else
                                        _chandoanPhu.Add(tenbenh);
                                }
                            }
                        }

                        ICDfull = ICDfull.Where(p => p != "").Distinct().ToList();
                        _chandoanfull = _chandoanfull.Where(p => p != "").Distinct().ToList();

                        if (ICDfull.Count <= 3)
                        {
                            maicd[0] = string.Join("; ", ICDfull);
                            ICDPhu = (from x in ICDPhu
                                      join y in ICDfull on x equals y into kq
                                      from kq1 in kq.DefaultIfEmpty()
                                      select new { x, kq1 }).Where(p => p.kq1 == null).Select(p => p.x).Where(p => p != "").Distinct().ToList();
                        }
                        else
                        {
                            maicd[0] = string.Join("; ", ICDfull.Take(3));
                            List<string> sub = ICDfull.Skip(3).ToList();
                            sub.AddRange(ICDPhu);
                            ICDPhu = sub.Where(p => p != "" && p != ICDfull.First() && p != ICDfull.Skip(1).First() && p != ICDfull.Skip(2).First()).Distinct().ToList();
                        }

                        if (_chandoanfull.Count <= 3)
                        {
                            maicd[1] = string.Join("; ", _chandoanfull);
                            _chandoanPhu = (from x in _chandoanPhu
                                            join y in _chandoanfull on x equals y into kq
                                            from kq1 in kq.DefaultIfEmpty()
                                            select new { x, kq1 }).Where(p => p.kq1 == null).Select(p => p.x).Where(p => p != "").Distinct().ToList();
                        }
                        else
                        {
                            maicd[1] = string.Join("; ", _chandoanfull.Take(3));
                            List<string> sub = _chandoanfull.Skip(3).ToList();
                            sub.AddRange(_chandoanPhu);
                            _chandoanPhu = sub.Where(p => p != "" && p != _chandoanfull.First() && p != _chandoanfull.Skip(1).First() && p != _chandoanfull.Skip(2).First()).Distinct().ToList();
                        }

                        mack = a.First().MaCK.ToString();

                        maicd[0] = string.Join("; ", maicd[0]) + "; " + string.Join(";  ", ICDPhu);
                        maicd[1] = string.Join("; ", maicd[1]) + "; " + string.Join(";  ", _chandoanPhu);
                        makp = a.First().MaKP.ToString();
                        ngaykham = a.First().NgayKham.Value.ToString();
                        mack = a.First().MaCK.ToString();
                        //Đoài yc 01/10/2018

                        maicd[7] = string.Join("; ", _chandoanPhu);
                        #endregion
                        #region   lấy khám bệnh cuối cùng
                        //int idmax4 = a.Max(p => p.IDKB);
                        //List<string> ICDfull = new List<string>();
                        //List<string> _chandoanfull = new List<string>();
                        //foreach (var b in a.Where(p => p.IDKB == idmax4))
                        //{
                        //    if (!string.IsNullOrEmpty(b.MaICD))
                        //    {
                        //        ICDfull.Add(b.MaICD);
                        //    }
                        //    if (!string.IsNullOrEmpty(b.MaICD2))
                        //    {
                        //        List<string> lmaICD2 = b.MaICD2.Split(';').ToList();
                        //        foreach (string maicd2 in lmaICD2)
                        //        {
                        //            //if (!string.IsNullOrEmpty(maicd2))
                        //            ICDfull.Add(maicd2);
                        //        }
                        //    }

                        //    if (!string.IsNullOrEmpty(b.ChanDoan))
                        //        _chandoanfull.Add(b.ChanDoan);
                        //    if (!string.IsNullOrEmpty(b.BenhKhac))
                        //    {
                        //        List<string> lchandoan2 = b.BenhKhac.Split(';').ToList();
                        //        if (lchandoan2.Count > 2)
                        //            benhphu4 = lchandoan2.Skip(2).First().ToString();
                        //        foreach (string chandoan2 in lchandoan2)
                        //        {
                        //            //if (!string.IsNullOrEmpty(chandoan2))
                        //            _chandoanfull.Add(chandoan2);
                        //        }

                        //    }

                        //}

                        //mack = a.First().MaCK.ToString();

                        //maicd[0] = string.Join("; ", ICDfull);
                        //maicd[1] = string.Join("; ", _chandoanfull);
                        //makp = a.First().MaKP.ToString();
                        //ngaykham = a.First().NgayKham.Value.ToString();
                        //mack = a.First().MaCK.ToString();
                        ////Đoài yc 01/10/2018

                        //maicd[7] = string.Join("; ", benhphu4);
                        #endregion
                        break;

                    case 5: // lấy tất cả các ICD, Chẩn đoán cuối cùng làm chính
                        int idmax5 = a.Max(p => p.IDKB);
                        List<string> ICDfull5 = new List<string>();
                        List<string> _chandoanfull5 = new List<string>();
                        a = a.OrderByDescending(p => p.IDKB).ToList();
                        foreach (var b in a)
                        {
                            if (b.IDKB == idmax5)
                            {
                                if (!string.IsNullOrEmpty(b.MaICD))
                                {
                                    maICD = b.MaICD;
                                }
                                if (!string.IsNullOrEmpty(b.MaICD2))
                                {
                                    List<string> lmaICD2 = b.MaICD2.Split(';').ToList();
                                    strMaICDPhu = b.MaICD2.Split(';').ToList();
                                    if (Bien.MaBV == "30009")
                                    {
                                        if (strMaICDPhu.Count > 4)
                                            maICD55 = strMaICDPhu.Skip(4).First().ToString();
                                        if (strMaICDPhu.Count > 3)
                                            maICD44 = strMaICDPhu.Skip(3).First().ToString();
                                    }
                                    if (strMaICDPhu.Count > 2)
                                        maICD4 = strMaICDPhu.Skip(2).First().ToString();
                                    if (strMaICDPhu.Count > 1)
                                        maICD3 = strMaICDPhu.Skip(1).First().ToString();
                                    if (strMaICDPhu.Count > 0)
                                        maICD2 = strMaICDPhu.First().ToString();
                                }

                                if (!string.IsNullOrEmpty(b.ChanDoan))
                                {
                                    _chandoanfull5.Add(b.ChanDoan);
                                }
                                if (!string.IsNullOrEmpty(b.BenhKhac))
                                {
                                    _chandoanfull5.Add(b.BenhKhac);
                                    strMaBenhPhu = b.BenhKhac.Split(';').ToList();
                                    if (Bien.MaBV == "30009")
                                    {
                                        if (strMaBenhPhu.Count > 4)
                                            benhphu55 = strMaBenhPhu.Skip(4).First().ToString();
                                        if (strMaBenhPhu.Count > 3)
                                            benhphu44 = strMaBenhPhu.Skip(3).First().ToString();
                                    }
                                    if (strMaBenhPhu.Count > 2)
                                        benhphu4 = strMaBenhPhu.Skip(2).First().ToString();
                                }
                            }
                            else
                            {
                                if (!string.IsNullOrEmpty(b.MaICD))
                                {
                                    ICDfull5.Add(b.MaICD);
                                }
                                if (!string.IsNullOrEmpty(b.MaICD2))
                                {
                                    List<string> lmaICD2 = b.MaICD2.Split(';').ToList();
                                    foreach (string maicd2 in lmaICD2)
                                    {
                                        ICDfull5.Add(maicd2);
                                    }
                                }
                            }
                        }

                        if (Bien.MaBV == "30009")
                        {
                            ICDfull5 = ICDfull5.Distinct().ToList();
                            ICDfull5 = ICDfull5.Where(p => p != maICD55 && p != maICD44 && p != maICD4 && p != maICD3 && p != maICD2 && p != maICD && p != "").Distinct().ToList();
                            ICDfull5.Insert(0, maICD55);
                            ICDfull5.Insert(0, maICD44);
                            ICDfull5.Insert(0, maICD4);
                            ICDfull5.Insert(0, maICD3);
                            ICDfull5.Insert(0, maICD2);
                            ICDfull5.Insert(0, maICD);
                        }
                        else
                        {
                            ICDfull5 = ICDfull5.Distinct().ToList();
                            ICDfull5 = ICDfull5.Where(p => p != maICD4 && p != maICD3 && p != maICD2 && p != maICD && p != "").Distinct().ToList();
                            ICDfull5.Insert(0, maICD4);
                            ICDfull5.Insert(0, maICD3);
                            ICDfull5.Insert(0, maICD2);
                            ICDfull5.Insert(0, maICD);
                        }

                        maicd[0] = string.Join("; ", ICDfull5);
                        maicd[1] = string.Join("; ", _chandoanfull5);
                        makp = a.First().MaKP.ToString();
                        ngaykham = a.First().NgayKham.Value.ToString();
                        mack = a.First().MaCK.ToString();

                        // Đoài yc 01/10/2018
                        maicd[7] = string.Join("; ", benhphu4);
                        break;
                }
                if (_kieu == 0 || _kieu == 1)
                {
                    maicd[0] = DungChung.Ham.GetICDstr(maicd[0]);
                    maicd[1] = DungChung.Ham.GetICDstr(maicd[1]);
                }
                maicd[2] = makp;
                maicd[3] = ngaykham;
                maicd[4] = "";
                maicd[5] = mack;
            }
            //}
            //else
            //{
            //    maicd[0] = DungChung.Ham.GetICDstr(maicd[0]);
            //    maicd[1] = DungChung.Ham.GetICDstr(maicd[1]);
            //    maicd[2] = b1.FirstOrDefault().MaKP.ToString();
            //    maicd[3] = b1.FirstOrDefault().NgayKham.Value.ToString();
            //    maicd[4] = "";
            //    maicd[5] = b1.FirstOrDefault().MaCK.ToString();
            //}
            return maicd;
        }

        public static string[] getMaICDarrFull_SL(QLBV_Database.QLBVEntities _data, int _mabn, int _kieu, int idkb)//0 theo ICD10, 1 theo ma YHCT
        {
            //bool getCDBD = true;
            string[] maicd = new string[] { "", "", "", "", "", "0", "", "" };// maicd[6] : mã khoa phòng ra viện
            var a = _data.BNKBs.Where(p => p.MaBNhan == _mabn && (idkb == 0 || p.IDKB == idkb)).OrderByDescending(p => p.IDKB).ToList();
            var _lidc10 = _data.ICD10.ToList();
            // var b1 = a.Where(p => p.MaICD == null || p.MaICD == "").ToList();
            List<string> benhkhacnew = new List<string>();
            List<string> DSCDfull = new List<string>();
            List<string> strMaBenhPhu = new List<string>();//danh sách bệnh phụ của 1 lần khám
            List<string> strMaICDPhu = new List<string>();//danh sách ICD phụ của 1 lần khám

            string benhchinh = "";
            string benhphu2 = "";
            string benhphu3 = "";
            string benhphu4 = "";
            string maICD = "";
            string maICD2 = "";
            string maICD3 = "";
            string maICD4 = "";
            //if (b1.Count == 0)
            //{
            if (a.Count > 0)
            {
                List<string> l_ICD = new List<string>();
                List<string> l_chandoan = new List<string>();
                List<string> _chandoanPhu = new List<string>();

                string makp = "", mack = "0", ngaykham = "";
                maicd[6] = a.First().MaKP.ToString();
                switch (_kieu)
                {
                    case 0:
                        int idmax = a.Max(p => p.IDKB);
                        foreach (var b in a.Where(p => p.IDKB == idmax))
                        {
                            if (!string.IsNullOrEmpty(b.MaICD))
                                l_ICD.Add(b.MaICD);
                            if (!string.IsNullOrEmpty(b.MaICD2))
                                l_ICD.Add(b.MaICD2);

                            if (!string.IsNullOrEmpty(b.ChanDoan))
                                l_chandoan.Add(b.ChanDoan);
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                            {
                                l_chandoan.Add(b.BenhKhac);
                                List<string> lbenhkhac = b.BenhKhac.Split(';').Where(p => p != "").Distinct().ToList();
                                int num = 0;

                                foreach (string tenbenh in lbenhkhac)
                                {
                                    string tenbenhN = tenbenh.Replace("(Bệnh phụ)", "");
                                    var qtenicd = _data.ICD10.Where(p => p.TenICD == tenbenhN).FirstOrDefault();
                                    num++;
                                    if (num > 2 || qtenicd == null)
                                        _chandoanPhu.Add(tenbenh);
                                }

                                maicd[7] = string.Join("; ", _chandoanPhu);
                            }

                            makp = b.MaKP.ToString();
                            mack = b.MaCK.ToString();
                            ngaykham = b.NgayKham.ToString();
                        }
                        l_ICD = l_ICD.Distinct().ToList();
                        l_chandoan = l_chandoan.Distinct().ToList();

                        maicd[0] = string.Join("; ", l_ICD);
                        maicd[1] = string.Join("; ", l_chandoan);
                        maicd[2] = makp;
                        maicd[3] = ngaykham;
                        maicd[4] = "";
                        maicd[5] = mack;
                        break;

                    case 1:
                        int idmin = a.Min(p => p.IDKB);
                        foreach (var b in a.Where(p => p.IDKB == idmin))
                        {
                            if (!string.IsNullOrEmpty(b.MaICD))
                                l_ICD.Add(b.MaICD);
                            if (!string.IsNullOrEmpty(b.MaICD2))
                                l_ICD.Add(b.MaICD2);
                            if (!string.IsNullOrEmpty(b.ChanDoan))
                                l_chandoan.Add(b.ChanDoan);
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                            {
                                l_chandoan.Add(b.BenhKhac);
                                if (!string.IsNullOrEmpty(b.BenhKhac))
                                {
                                    l_chandoan.Add(b.BenhKhac);
                                    List<string> lbenhkhac = b.BenhKhac.Split(';').Where(p => p != "").Distinct().ToList();
                                    int num = 0;
                                    // List<string> _chandoanPhu = new List<string>();
                                    foreach (string tenbenh in lbenhkhac)
                                    {
                                        string tenbenhN = tenbenh.Replace("(Bệnh phụ)", "");
                                        var qtenicd = _data.ICD10.Where(p => p.TenICD == tenbenhN).FirstOrDefault();
                                        num++;
                                        if (num > 2 || qtenicd == null)
                                            _chandoanPhu.Add(tenbenh);
                                    }
                                    maicd[7] = string.Join("; ", _chandoanPhu);
                                }
                            }
                            makp = b.MaKP.ToString();
                            mack = b.MaCK.ToString();
                            ngaykham = b.NgayKham.ToString();
                        }
                        l_ICD = l_ICD.Distinct().ToList();
                        l_chandoan = l_chandoan.Distinct().ToList();
                        maicd[0] = string.Join("; ", l_ICD);
                        maicd[1] = string.Join("; ", l_chandoan);

                        break;

                    case 2:
                        int idmaxfull = a.Max(p => p.IDKB);

                        foreach (var b in a.Where(p => p.IDKB == idmaxfull))
                        {
                            if (!string.IsNullOrEmpty(b.MaICD))
                            {
                                l_ICD.Add(b.MaICD);
                                maICD = b.MaICD;
                            }
                            if (!string.IsNullOrEmpty(b.MaICD2))
                            {
                                l_ICD.Add(b.MaICD2);
                                strMaICDPhu = b.MaICD2.Split(';').ToList();
                                if (strMaICDPhu.Count > 2)
                                    maICD4 = strMaICDPhu.Skip(2).First().ToString();
                                if (strMaICDPhu.Count > 1)
                                    maICD3 = strMaICDPhu.Skip(1).First().ToString();
                                if (strMaICDPhu.Count > 0)
                                    maICD2 = strMaICDPhu.First().ToString();
                            }
                            if (!string.IsNullOrEmpty(b.ChanDoan))
                            {
                                benhchinh = b.ChanDoan;
                            }
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                            {
                                strMaBenhPhu = b.BenhKhac.Split(';').ToList();
                                if (strMaBenhPhu.Count > 2)
                                    benhphu4 = strMaBenhPhu.Skip(2).First().ToString();
                                if (strMaBenhPhu.Count > 1)
                                    benhphu3 = strMaBenhPhu.Skip(1).First().ToString();
                                if (strMaBenhPhu.Count > 0)
                                    benhphu2 = strMaBenhPhu.First().ToString();
                            }

                            makp = b.MaKP.ToString();
                            mack = b.MaCK.ToString();
                            ngaykham = b.NgayKham.ToString();
                        }
                        foreach (var b in a.Where(p => p.IDKB != idmaxfull))
                        {
                            if (!string.IsNullOrEmpty(b.ChanDoan))
                                l_chandoan.Add(b.ChanDoan);
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                            {
                                l_chandoan.Add(b.BenhKhac);
                            }
                        }

                        l_ICD = l_ICD.ToList();
                        l_chandoan = l_chandoan.Where(p => p != "" && p != benhchinh && p != benhphu2 && p != benhphu3 && p != benhphu4).Distinct().ToList();
                        l_chandoan.Insert(0, benhphu4);
                        l_chandoan.Insert(0, benhphu3);
                        l_chandoan.Insert(0, benhphu2);
                        l_chandoan.Insert(0, benhchinh);
                        maicd[0] = string.Join("; ", l_ICD);
                        maicd[1] = string.Join("; ", l_chandoan);

                        // Đoài yc 01/10/2018
                        DSCDfull = maicd[1].Split(';').Where(p => p != "" && p != benhchinh && p != benhphu2 && p != benhphu3).Distinct().ToList();
                        maicd[7] = string.Join("; ", DSCDfull);
                        break;

                    case 3:
                        int idminfull = a.Min(p => p.IDKB);

                        foreach (var b in a.Where(p => p.IDKB == idminfull))
                        {
                            if (!string.IsNullOrEmpty(b.MaICD))
                            {
                                l_ICD.Add(b.MaICD);
                                maICD = b.MaICD;
                            }
                            if (!string.IsNullOrEmpty(b.MaICD2))
                            {
                                l_ICD.Add(b.MaICD2);
                                strMaICDPhu = b.MaICD2.Split(';').ToList();
                                if (strMaICDPhu.Count > 2)
                                    maICD4 = strMaICDPhu.Skip(2).First().ToString();
                                if (strMaICDPhu.Count > 1)
                                    maICD3 = strMaICDPhu.Skip(1).First().ToString();
                                if (strMaICDPhu.Count > 0)
                                    maICD2 = strMaICDPhu.First().ToString();
                            }
                            makp = b.MaKP.ToString();
                            mack = b.MaCK.ToString();
                            ngaykham = b.NgayKham.ToString();

                            if (!string.IsNullOrEmpty(b.ChanDoan))
                            {
                                benhchinh = b.ChanDoan;
                            }
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                            {
                                strMaBenhPhu = b.BenhKhac.Split(';').ToList();
                                if (strMaBenhPhu.Count > 2)
                                    benhphu4 = strMaBenhPhu.Skip(2).First().ToString();
                                if (strMaBenhPhu.Count > 1)
                                    benhphu3 = strMaBenhPhu.Skip(1).First().ToString();
                                if (strMaBenhPhu.Count > 0)
                                    benhphu2 = strMaBenhPhu.First().ToString();
                            }
                        }
                        a = a.OrderBy(p => p.IDKB).ToList();
                        foreach (var b in a.Where(p => p.IDKB != idminfull))
                        {
                            if (!string.IsNullOrEmpty(b.ChanDoan))
                                l_chandoan.Add(b.ChanDoan);
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                                l_chandoan.Add(b.BenhKhac);
                        }
                        l_ICD = l_ICD.ToList();
                        l_chandoan = l_chandoan.Distinct().Where(p => p != "" && p != benhchinh && p != benhphu2 && p != benhphu3 && p != benhphu4).ToList();
                        l_chandoan.Insert(0, benhphu4);
                        l_chandoan.Insert(0, benhphu3);
                        l_chandoan.Insert(0, benhphu2);
                        l_chandoan.Insert(0, benhchinh);
                        maicd[0] = string.Join("; ", l_ICD);
                        maicd[1] = string.Join("; ", l_chandoan);

                        // Đoài yc 01/10/2018

                        DSCDfull = maicd[1].Split(';').Where(p => p != "" && p != benhchinh && p != benhphu2 && p != benhphu3).Distinct().ToList();
                        maicd[7] = string.Join("; ", DSCDfull);

                        break;

                    case 4:
                        #region lấy tất cả ICD, chẩn đoán

                        List<string> ICDfull = new List<string>();
                        List<string> _chandoanfull = new List<string>();
                        List<string> ICDPhu = new List<string>();//list mã icd 4
                        // List<string> _chandoanPhu = new List<string>();// list chẩn đoán 4
                        a = a.OrderByDescending(p => p.IDKB).ToList();
                        foreach (var b in a)
                        {
                            if (!string.IsNullOrEmpty(b.MaICD))
                            {
                                ICDfull.Add(b.MaICD);
                            }
                            if (!string.IsNullOrEmpty(b.MaICD2))
                            {
                                List<string> lmaICD2 = b.MaICD2.Split(';').Where(p => p.Trim() != "").ToList();
                                int num = 0;
                                foreach (string maicd2 in lmaICD2)
                                {
                                    num++;
                                    if (num < 3)
                                        ICDfull.Add(maicd2);
                                    else if (num >= 3)
                                        ICDPhu.Add(maicd2);
                                }
                            }

                            if (!string.IsNullOrEmpty(b.ChanDoan))
                            {
                                _chandoanfull.Add(b.ChanDoan);
                            }
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                            {
                                List<string> lbenhkhac = b.BenhKhac.Split(';').Where(p => p.Trim() != "").ToList();
                                int num = 0;
                                foreach (string tenbenh in lbenhkhac)
                                {
                                    string tenbenhN = tenbenh.Replace("(Bệnh phụ)", "");
                                    var qtenicd = _data.ICD10.Where(p => p.TenICD == tenbenhN).FirstOrDefault();
                                    num++;
                                    if (Bien.MaBV == "24012")
                                    {
                                        if (num < 3)
                                            _chandoanfull.Add(tenbenh);
                                        else
                                            _chandoanPhu.Add(tenbenh);
                                    }
                                    else
                                    {
                                        if (num < 3 && qtenicd != null)
                                            _chandoanfull.Add(tenbenh);
                                        else
                                            _chandoanPhu.Add(tenbenh);
                                    }
                                }
                            }
                        }
                        ICDfull = ICDfull.Where(p => p != "").Distinct().ToList();
                        _chandoanfull = _chandoanfull.Where(p => p != "").Distinct().ToList();

                        if (ICDfull.Count <= 3)
                        {
                            maicd[0] = string.Join("; ", ICDfull);
                            ICDPhu = (from x in ICDPhu
                                      join y in ICDfull on x equals y into kq
                                      from kq1 in kq.DefaultIfEmpty()
                                      select new { x, kq1 }).Where(p => p.kq1 == null).Select(p => p.x).Where(p => p != "").Distinct().ToList();
                        }
                        else
                        {
                            maicd[0] = string.Join("; ", ICDfull.Take(3));
                            List<string> sub = ICDfull.Skip(3).ToList();
                            sub.AddRange(ICDPhu);
                            ICDPhu = sub.Where(p => p != "" && p != ICDfull.First() && p != ICDfull.Skip(1).First() && p != ICDfull.Skip(2).First()).Distinct().ToList();
                        }

                        if (_chandoanfull.Count <= 3)
                        {
                            maicd[1] = string.Join("; ", _chandoanfull);
                            _chandoanPhu = (from x in _chandoanPhu
                                            join y in _chandoanfull on x equals y into kq
                                            from kq1 in kq.DefaultIfEmpty()
                                            select new { x, kq1 }).Where(p => p.kq1 == null).Select(p => p.x).Where(p => p != "").Distinct().ToList();
                        }
                        else
                        {
                            maicd[1] = string.Join("; ", _chandoanfull.Take(3));
                            List<string> sub = _chandoanfull.Skip(3).ToList();
                            sub.AddRange(_chandoanPhu);
                            _chandoanPhu = sub.Where(p => p != "" && p != _chandoanfull.First() && p != _chandoanfull.Skip(1).First() && p != _chandoanfull.Skip(2).First()).Distinct().ToList();
                        }

                        mack = a.First().MaCK.ToString();

                        maicd[0] = string.Join("; ", maicd[0]) + ";" + string.Join(";  ", ICDPhu);
                        maicd[1] = string.Join("; ", maicd[1]) + ";" + string.Join(";  ", _chandoanPhu);
                        makp = a.First().MaKP.ToString();
                        ngaykham = a.First().NgayKham.Value.ToString();
                        mack = a.First().MaCK.ToString();
                        //Đoài yc 01/10/2018

                        maicd[7] = string.Join("; ", _chandoanPhu);
                        #endregion
                        #region   lấy khám bệnh cuối cùng

                        #endregion
                        break;

                    case 5: // lấy tất cả các ICD, Chẩn đoán cuối cùng làm chính
                        int idmax5 = a.Max(p => p.IDKB);
                        List<string> ICDfull5 = new List<string>();
                        List<string> _chandoanfull5 = new List<string>();
                        a = a.OrderByDescending(p => p.IDKB).ToList();
                        foreach (var b in a)
                        {
                            if (b.IDKB == idmax5)
                            {
                                if (!string.IsNullOrEmpty(b.MaICD))
                                {
                                    maICD = b.MaICD;
                                }
                                if (!string.IsNullOrEmpty(b.MaICD2))
                                {
                                    List<string> lmaICD2 = b.MaICD2.Split(';').ToList();
                                    strMaICDPhu = b.MaICD2.Split(';').ToList();
                                    if (strMaICDPhu.Count > 2)
                                        maICD4 = strMaICDPhu.Skip(2).First().ToString();
                                    if (strMaICDPhu.Count > 1)
                                        maICD3 = strMaICDPhu.Skip(1).First().ToString();
                                    if (strMaICDPhu.Count > 0)
                                        maICD2 = strMaICDPhu.First().ToString();
                                }

                                if (!string.IsNullOrEmpty(b.ChanDoan))
                                {
                                    _chandoanfull5.Add(b.ChanDoan);
                                }
                                if (!string.IsNullOrEmpty(b.BenhKhac))
                                {
                                    _chandoanfull5.Add(b.BenhKhac);
                                    strMaBenhPhu = b.BenhKhac.Split(';').ToList();
                                    if (strMaBenhPhu.Count > 2)
                                        benhphu4 = strMaBenhPhu.Skip(2).First().ToString();
                                }
                            }
                            else
                            {
                                if (!string.IsNullOrEmpty(b.MaICD))
                                {
                                    ICDfull5.Add(b.MaICD);
                                }
                                if (!string.IsNullOrEmpty(b.MaICD2))
                                {
                                    List<string> lmaICD2 = b.MaICD2.Split(';').ToList();
                                    foreach (string maicd2 in lmaICD2)
                                    {
                                        ICDfull5.Add(maicd2);
                                    }
                                }
                            }
                        }

                        ICDfull5 = ICDfull5.Distinct().ToList();
                        ICDfull5 = ICDfull5.Where(p => p != maICD4 && p != maICD3 && p != maICD2 && p != maICD && p != "").Distinct().ToList();
                        ICDfull5.Insert(0, maICD4);
                        ICDfull5.Insert(0, maICD3);
                        ICDfull5.Insert(0, maICD2);
                        ICDfull5.Insert(0, maICD);

                        maicd[0] = string.Join("; ", ICDfull5);
                        maicd[1] = string.Join("; ", _chandoanfull5);
                        makp = a.First().MaKP.ToString();
                        ngaykham = a.First().NgayKham.Value.ToString();
                        mack = a.First().MaCK.ToString();

                        // Đoài yc 01/10/2018
                        maicd[7] = string.Join("; ", benhphu4);
                        break;
                }
                if (_kieu == 0 || _kieu == 1)
                {
                    maicd[0] = DungChung.Ham.GetICDstr(maicd[0]);
                    maicd[1] = DungChung.Ham.GetICDstr(maicd[1]);
                }
                maicd[2] = makp;
                maicd[3] = ngaykham;
                maicd[4] = "";
                maicd[5] = mack;
            }
            //}
            //else
            //{
            //    maicd[0] = DungChung.Ham.GetICDstr(maicd[0]);
            //    maicd[1] = DungChung.Ham.GetICDstr(maicd[1]);
            //    maicd[2] = b1.FirstOrDefault().MaKP.ToString();
            //    maicd[3] = b1.FirstOrDefault().NgayKham.Value.ToString();
            //    maicd[4] = "";
            //    maicd[5] = b1.FirstOrDefault().MaCK.ToString();
            //}
            return maicd;
        }

        public static string[] getMaICDarrFull_SL_kp(QLBV_Database.QLBVEntities _data, int _mabn, int _kieu, int? idkp)//0 theo ICD10, 1 theo ma YHCT
        {
            //bool getCDBD = true;
            string[] maicd = new string[] { "", "", "", "", "", "0", "", "" };// maicd[6] : mã khoa phòng ra viện
            var a = _data.BNKBs.Where(p => p.MaBNhan == _mabn && (idkp == 0 || p.MaKP == idkp)).ToList();
            var _lidc10 = _data.ICD10.ToList();
            // var b1 = a.Where(p => p.MaICD == null || p.MaICD == "").ToList();
            List<string> benhkhacnew = new List<string>();
            List<string> DSCDfull = new List<string>();
            List<string> strMaBenhPhu = new List<string>();//danh sách bệnh phụ của 1 lần khám
            List<string> strMaICDPhu = new List<string>();//danh sách ICD phụ của 1 lần khám

            string benhchinh = "";
            string benhphu2 = "";
            string benhphu3 = "";
            string benhphu4 = "";
            string maICD = "";
            string maICD2 = "";
            string maICD3 = "";
            string maICD4 = "";
            //if (b1.Count == 0)
            //{
            if (a.Count > 0)
            {
                List<string> l_ICD = new List<string>();
                List<string> l_chandoan = new List<string>();
                List<string> _chandoanPhu = new List<string>();

                string makp = "", mack = "0", ngaykham = "";
                maicd[6] = a.First().MaKP.ToString();
                switch (_kieu)
                {
                    case 0:
                        int idmax = a.Max(p => p.IDKB);
                        foreach (var b in a.Where(p => p.IDKB == idmax))
                        {
                            if (!string.IsNullOrEmpty(b.MaICD))
                                l_ICD.Add(b.MaICD);
                            if (!string.IsNullOrEmpty(b.MaICD2))
                                l_ICD.Add(b.MaICD2);

                            if (!string.IsNullOrEmpty(b.ChanDoan))
                                l_chandoan.Add(b.ChanDoan);
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                            {
                                l_chandoan.Add(b.BenhKhac);
                                List<string> lbenhkhac = b.BenhKhac.Split(';').Where(p => p != "").Distinct().ToList();
                                int num = 0;

                                foreach (string tenbenh in lbenhkhac)
                                {
                                    string tenbenhN = tenbenh.Replace("(Bệnh phụ)", "");
                                    var qtenicd = _data.ICD10.Where(p => p.TenICD == tenbenhN).FirstOrDefault();
                                    num++;
                                    if (num > 2 || qtenicd == null)
                                        _chandoanPhu.Add(tenbenh);
                                }

                                maicd[7] = string.Join("; ", _chandoanPhu);
                            }

                            makp = b.MaKP.ToString();
                            mack = b.MaCK.ToString();
                            ngaykham = b.NgayKham.ToString();
                        }
                        l_ICD = l_ICD.Distinct().ToList();
                        l_chandoan = l_chandoan.Distinct().ToList();

                        maicd[0] = string.Join("; ", l_ICD);
                        maicd[1] = string.Join("; ", l_chandoan);
                        maicd[2] = makp;
                        maicd[3] = ngaykham;
                        maicd[4] = "";
                        maicd[5] = mack;
                        break;

                    case 1:
                        int idmin = a.Min(p => p.IDKB);
                        foreach (var b in a.Where(p => p.IDKB == idmin))
                        {
                            if (!string.IsNullOrEmpty(b.MaICD))
                                l_ICD.Add(b.MaICD);
                            if (!string.IsNullOrEmpty(b.MaICD2))
                                l_ICD.Add(b.MaICD2);
                            if (!string.IsNullOrEmpty(b.ChanDoan))
                                l_chandoan.Add(b.ChanDoan);
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                            {
                                l_chandoan.Add(b.BenhKhac);
                                if (!string.IsNullOrEmpty(b.BenhKhac))
                                {
                                    l_chandoan.Add(b.BenhKhac);
                                    List<string> lbenhkhac = b.BenhKhac.Split(';').Where(p => p != "").Distinct().ToList();
                                    int num = 0;
                                    // List<string> _chandoanPhu = new List<string>();
                                    foreach (string tenbenh in lbenhkhac)
                                    {
                                        string tenbenhN = tenbenh.Replace("(Bệnh phụ)", "");
                                        var qtenicd = _data.ICD10.Where(p => p.TenICD == tenbenhN).FirstOrDefault();
                                        num++;
                                        if (num > 2 || qtenicd == null)
                                            _chandoanPhu.Add(tenbenh);
                                    }
                                    maicd[7] = string.Join("; ", _chandoanPhu);
                                }
                            }
                            makp = b.MaKP.ToString();
                            mack = b.MaCK.ToString();
                            ngaykham = b.NgayKham.ToString();
                        }
                        l_ICD = l_ICD.Distinct().ToList();
                        l_chandoan = l_chandoan.Distinct().ToList();
                        maicd[0] = string.Join("; ", l_ICD);
                        maicd[1] = string.Join("; ", l_chandoan);

                        break;

                    case 2:
                        int idmaxfull = a.Max(p => p.IDKB);

                        foreach (var b in a.Where(p => p.IDKB == idmaxfull))
                        {
                            if (!string.IsNullOrEmpty(b.MaICD))
                            {
                                l_ICD.Add(b.MaICD);
                                maICD = b.MaICD;
                            }
                            if (!string.IsNullOrEmpty(b.MaICD2))
                            {
                                l_ICD.Add(b.MaICD2);
                                strMaICDPhu = b.MaICD2.Split(';').ToList();
                                if (strMaICDPhu.Count > 2)
                                    maICD4 = strMaICDPhu.Skip(2).First().ToString();
                                if (strMaICDPhu.Count > 1)
                                    maICD3 = strMaICDPhu.Skip(1).First().ToString();
                                if (strMaICDPhu.Count > 0)
                                    maICD2 = strMaICDPhu.First().ToString();
                            }
                            if (!string.IsNullOrEmpty(b.ChanDoan))
                            {
                                benhchinh = b.ChanDoan;
                            }
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                            {
                                strMaBenhPhu = b.BenhKhac.Split(';').ToList();
                                if (strMaBenhPhu.Count > 2)
                                    benhphu4 = strMaBenhPhu.Skip(2).First().ToString();
                                if (strMaBenhPhu.Count > 1)
                                    benhphu3 = strMaBenhPhu.Skip(1).First().ToString();
                                if (strMaBenhPhu.Count > 0)
                                    benhphu2 = strMaBenhPhu.First().ToString();
                            }

                            makp = b.MaKP.ToString();
                            mack = b.MaCK.ToString();
                            ngaykham = b.NgayKham.ToString();
                        }
                        foreach (var b in a.Where(p => p.IDKB != idmaxfull))
                        {
                            if (!string.IsNullOrEmpty(b.ChanDoan))
                                l_chandoan.Add(b.ChanDoan);
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                            {
                                l_chandoan.Add(b.BenhKhac);
                            }
                        }

                        l_ICD = l_ICD.ToList();
                        l_chandoan = l_chandoan.Where(p => p != "" && p != benhchinh && p != benhphu2 && p != benhphu3 && p != benhphu4).Distinct().ToList();
                        l_chandoan.Insert(0, benhphu4);
                        l_chandoan.Insert(0, benhphu3);
                        l_chandoan.Insert(0, benhphu2);
                        l_chandoan.Insert(0, benhchinh);
                        maicd[0] = string.Join("; ", l_ICD);
                        maicd[1] = string.Join("; ", l_chandoan);

                        // Đoài yc 01/10/2018
                        DSCDfull = maicd[1].Split(';').Where(p => p != "" && p != benhchinh && p != benhphu2 && p != benhphu3).Distinct().ToList();
                        maicd[7] = string.Join("; ", DSCDfull);
                        break;

                    case 3:
                        int idminfull = a.Min(p => p.IDKB);

                        foreach (var b in a.Where(p => p.IDKB == idminfull))
                        {
                            if (!string.IsNullOrEmpty(b.MaICD))
                            {
                                l_ICD.Add(b.MaICD);
                                maICD = b.MaICD;
                            }
                            if (!string.IsNullOrEmpty(b.MaICD2))
                            {
                                l_ICD.Add(b.MaICD2);
                                strMaICDPhu = b.MaICD2.Split(';').ToList();
                                if (strMaICDPhu.Count > 2)
                                    maICD4 = strMaICDPhu.Skip(2).First().ToString();
                                if (strMaICDPhu.Count > 1)
                                    maICD3 = strMaICDPhu.Skip(1).First().ToString();
                                if (strMaICDPhu.Count > 0)
                                    maICD2 = strMaICDPhu.First().ToString();
                            }
                            makp = b.MaKP.ToString();
                            mack = b.MaCK.ToString();
                            ngaykham = b.NgayKham.ToString();

                            if (!string.IsNullOrEmpty(b.ChanDoan))
                            {
                                benhchinh = b.ChanDoan;
                            }
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                            {
                                strMaBenhPhu = b.BenhKhac.Split(';').ToList();
                                if (strMaBenhPhu.Count > 2)
                                    benhphu4 = strMaBenhPhu.Skip(2).First().ToString();
                                if (strMaBenhPhu.Count > 1)
                                    benhphu3 = strMaBenhPhu.Skip(1).First().ToString();
                                if (strMaBenhPhu.Count > 0)
                                    benhphu2 = strMaBenhPhu.First().ToString();
                            }
                        }
                        a = a.OrderBy(p => p.IDKB).ToList();
                        foreach (var b in a.Where(p => p.IDKB != idminfull))
                        {
                            if (!string.IsNullOrEmpty(b.ChanDoan))
                                l_chandoan.Add(b.ChanDoan);
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                                l_chandoan.Add(b.BenhKhac);
                        }
                        l_ICD = l_ICD.ToList();
                        l_chandoan = l_chandoan.Distinct().Where(p => p != "" && p != benhchinh && p != benhphu2 && p != benhphu3 && p != benhphu4).ToList();
                        l_chandoan.Insert(0, benhphu4);
                        l_chandoan.Insert(0, benhphu3);
                        l_chandoan.Insert(0, benhphu2);
                        l_chandoan.Insert(0, benhchinh);
                        maicd[0] = string.Join("; ", l_ICD);
                        maicd[1] = string.Join("; ", l_chandoan);

                        // Đoài yc 01/10/2018

                        DSCDfull = maicd[1].Split(';').Where(p => p != "" && p != benhchinh && p != benhphu2 && p != benhphu3).Distinct().ToList();
                        maicd[7] = string.Join("; ", DSCDfull);

                        break;

                    case 4:
                        #region lấy tất cả ICD, chẩn đoán

                        List<string> ICDfull = new List<string>();
                        List<string> _chandoanfull = new List<string>();
                        List<string> ICDPhu = new List<string>();//list mã icd 4
                        // List<string> _chandoanPhu = new List<string>();// list chẩn đoán 4
                        a = a.OrderByDescending(p => p.IDKB).ToList();
                        foreach (var b in a)
                        {
                            if (!string.IsNullOrEmpty(b.MaICD))
                            {
                                ICDfull.Add(b.MaICD);
                            }
                            if (!string.IsNullOrEmpty(b.MaICD2))
                            {
                                List<string> lmaICD2 = b.MaICD2.Split(';').Where(p => p.Trim() != "").ToList();
                                int num = 0;
                                foreach (string maicd2 in lmaICD2)
                                {
                                    num++;
                                    if (num < 3)
                                        ICDfull.Add(maicd2);
                                    else if (num >= 3)
                                        ICDPhu.Add(maicd2);
                                }
                            }

                            if (!string.IsNullOrEmpty(b.ChanDoan))
                            {
                                _chandoanfull.Add(b.ChanDoan);
                            }
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                            {
                                List<string> lbenhkhac = b.BenhKhac.Split(';').Where(p => p.Trim() != "").ToList();
                                int num = 0;
                                foreach (string tenbenh in lbenhkhac)
                                {
                                    string tenbenhN = tenbenh.Replace("(Bệnh phụ)", "");
                                    var qtenicd = _data.ICD10.Where(p => p.TenICD == tenbenhN).FirstOrDefault();
                                    num++;
                                    if (num < 3 && qtenicd != null)
                                        _chandoanfull.Add(tenbenh);
                                    else
                                        _chandoanPhu.Add(tenbenh);
                                }
                            }
                        }
                        ICDfull = ICDfull.Where(p => p != "").Distinct().ToList();
                        _chandoanfull = _chandoanfull.Where(p => p != "").Distinct().ToList();

                        if (ICDfull.Count <= 3)
                        {
                            maicd[0] = string.Join("; ", ICDfull);
                            ICDPhu = (from x in ICDPhu
                                      join y in ICDfull on x equals y into kq
                                      from kq1 in kq.DefaultIfEmpty()
                                      select new { x, kq1 }).Where(p => p.kq1 == null).Select(p => p.x).Where(p => p != "").Distinct().ToList();
                        }
                        else
                        {
                            maicd[0] = string.Join("; ", ICDfull.Take(3));
                            List<string> sub = ICDfull.Skip(3).ToList();
                            sub.AddRange(ICDPhu);
                            ICDPhu = sub.Where(p => p != "" && p != ICDfull.First() && p != ICDfull.Skip(1).First() && p != ICDfull.Skip(2).First()).Distinct().ToList();
                        }

                        if (_chandoanfull.Count <= 3)
                        {
                            maicd[1] = string.Join("; ", _chandoanfull);
                            _chandoanPhu = (from x in _chandoanPhu
                                            join y in _chandoanfull on x equals y into kq
                                            from kq1 in kq.DefaultIfEmpty()
                                            select new { x, kq1 }).Where(p => p.kq1 == null).Select(p => p.x).Where(p => p != "").Distinct().ToList();
                        }
                        else
                        {
                            maicd[1] = string.Join("; ", _chandoanfull.Take(3));
                            List<string> sub = _chandoanfull.Skip(3).ToList();
                            sub.AddRange(_chandoanPhu);
                            _chandoanPhu = sub.Where(p => p != "" && p != _chandoanfull.First() && p != _chandoanfull.Skip(1).First() && p != _chandoanfull.Skip(2).First()).Distinct().ToList();
                        }

                        mack = a.First().MaCK.ToString();

                        maicd[0] = string.Join("; ", maicd[0]) + ";" + string.Join(";  ", ICDPhu);
                        maicd[1] = string.Join("; ", maicd[1]) + ";" + string.Join(";  ", _chandoanPhu);
                        makp = a.First().MaKP.ToString();
                        ngaykham = a.First().NgayKham.Value.ToString();
                        mack = a.First().MaCK.ToString();
                        //Đoài yc 01/10/2018

                        maicd[7] = string.Join("; ", _chandoanPhu);
                        #endregion
                        #region   lấy khám bệnh cuối cùng

                        #endregion
                        break;

                    case 5: // lấy tất cả các ICD, Chẩn đoán cuối cùng làm chính
                        int idmax5 = a.Max(p => p.IDKB);
                        List<string> ICDfull5 = new List<string>();
                        List<string> _chandoanfull5 = new List<string>();
                        a = a.OrderByDescending(p => p.IDKB).ToList();
                        foreach (var b in a)
                        {
                            if (b.IDKB == idmax5)
                            {
                                if (!string.IsNullOrEmpty(b.MaICD))
                                {
                                    maICD = b.MaICD;
                                }
                                if (!string.IsNullOrEmpty(b.MaICD2))
                                {
                                    List<string> lmaICD2 = b.MaICD2.Split(';').ToList();
                                    strMaICDPhu = b.MaICD2.Split(';').ToList();
                                    if (strMaICDPhu.Count > 2)
                                        maICD4 = strMaICDPhu.Skip(2).First().ToString();
                                    if (strMaICDPhu.Count > 1)
                                        maICD3 = strMaICDPhu.Skip(1).First().ToString();
                                    if (strMaICDPhu.Count > 0)
                                        maICD2 = strMaICDPhu.First().ToString();
                                }

                                if (!string.IsNullOrEmpty(b.ChanDoan))
                                {
                                    _chandoanfull5.Add(b.ChanDoan);
                                }
                                if (!string.IsNullOrEmpty(b.BenhKhac))
                                {
                                    _chandoanfull5.Add(b.BenhKhac);
                                    strMaBenhPhu = b.BenhKhac.Split(';').ToList();
                                    if (strMaBenhPhu.Count > 2)
                                        benhphu4 = strMaBenhPhu.Skip(2).First().ToString();
                                }
                            }
                            else
                            {
                                if (!string.IsNullOrEmpty(b.MaICD))
                                {
                                    ICDfull5.Add(b.MaICD);
                                }
                                if (!string.IsNullOrEmpty(b.MaICD2))
                                {
                                    List<string> lmaICD2 = b.MaICD2.Split(';').ToList();
                                    foreach (string maicd2 in lmaICD2)
                                    {
                                        ICDfull5.Add(maicd2);
                                    }
                                }
                            }
                        }

                        ICDfull5 = ICDfull5.Distinct().ToList();
                        ICDfull5 = ICDfull5.Where(p => p != maICD4 && p != maICD3 && p != maICD2 && p != maICD && p != "").Distinct().ToList();
                        ICDfull5.Insert(0, maICD4);
                        ICDfull5.Insert(0, maICD3);
                        ICDfull5.Insert(0, maICD2);
                        ICDfull5.Insert(0, maICD);

                        maicd[0] = string.Join("; ", ICDfull5);
                        maicd[1] = string.Join("; ", _chandoanfull5);
                        makp = a.First().MaKP.ToString();
                        ngaykham = a.First().NgayKham.Value.ToString();
                        mack = a.First().MaCK.ToString();

                        // Đoài yc 01/10/2018
                        maicd[7] = string.Join("; ", benhphu4);
                        break;
                }
                if (_kieu == 0 || _kieu == 1)
                {
                    maicd[0] = DungChung.Ham.GetICDstr(maicd[0]);
                    maicd[1] = DungChung.Ham.GetICDstr(maicd[1]);
                }
                maicd[2] = makp;
                maicd[3] = ngaykham;
                maicd[4] = "";
                maicd[5] = mack;
            }
            //}
            //else
            //{
            //    maicd[0] = DungChung.Ham.GetICDstr(maicd[0]);
            //    maicd[1] = DungChung.Ham.GetICDstr(maicd[1]);
            //    maicd[2] = b1.FirstOrDefault().MaKP.ToString();
            //    maicd[3] = b1.FirstOrDefault().NgayKham.Value.ToString();
            //    maicd[4] = "";
            //    maicd[5] = b1.FirstOrDefault().MaCK.ToString();
            //}
            return maicd;
        }

        public static string[] getMaICDarr_SL(QLBV_Database.QLBVEntities _data, int _idkb, int _kieu, int idkb)//0 theo ICD10, 1 theo ma YHCT
        {
            //bool getCDBD = true;
            string[] maicd = new string[] { "", "", "", "", "", "0", "", "" };// maicd[6] : mã khoa phòng ra viện
            var a = _data.BNKBs.Where(p => p.IDKB == _idkb && (idkb == 0 || p.IDKB == idkb)).OrderByDescending(p => p.IDKB).ToList();
            var _lidc10 = _data.ICD10.ToList();
            // var b1 = a.Where(p => p.MaICD == null || p.MaICD == "").ToList();
            List<string> benhkhacnew = new List<string>();
            List<string> DSCDfull = new List<string>();
            List<string> strMaBenhPhu = new List<string>();//danh sách bệnh phụ của 1 lần khám
            List<string> strMaICDPhu = new List<string>();//danh sách ICD phụ của 1 lần khám

            string benhchinh = "";
            string benhphu2 = "";
            string benhphu3 = "";
            string benhphu4 = "";
            string maICD = "";
            string maICD2 = "";
            string maICD3 = "";
            string maICD4 = "";
            //if (b1.Count == 0)
            //{
            if (a.Count > 0)
            {
                List<string> l_ICD = new List<string>();
                List<string> l_chandoan = new List<string>();
                List<string> _chandoanPhu = new List<string>();

                string makp = "", mack = "0", ngaykham = "";
                maicd[6] = a.First().MaKP.ToString();
                switch (_kieu)
                {
                    case 0:
                        int idmax = a.Max(p => p.IDKB);
                        foreach (var b in a.Where(p => p.IDKB == idmax))
                        {
                            if (!string.IsNullOrEmpty(b.MaICD))
                                l_ICD.Add(b.MaICD);
                            if (!string.IsNullOrEmpty(b.MaICD2))
                                l_ICD.Add(b.MaICD2);

                            if (!string.IsNullOrEmpty(b.ChanDoan))
                                l_chandoan.Add(b.ChanDoan);
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                            {
                                l_chandoan.Add(b.BenhKhac);
                                List<string> lbenhkhac = b.BenhKhac.Split(';').Where(p => p != "").Distinct().ToList();
                                int num = 0;

                                foreach (string tenbenh in lbenhkhac)
                                {
                                    string tenbenhN = tenbenh.Replace("(Bệnh phụ)", "");
                                    var qtenicd = _data.ICD10.Where(p => p.TenICD == tenbenhN).FirstOrDefault();
                                    num++;
                                    if (num > 2 || qtenicd == null)
                                        _chandoanPhu.Add(tenbenh);
                                }

                                maicd[7] = string.Join("; ", _chandoanPhu);
                            }

                            makp = b.MaKP.ToString();
                            mack = b.MaCK.ToString();
                            ngaykham = b.NgayKham.ToString();
                        }
                        l_ICD = l_ICD.Distinct().ToList();
                        l_chandoan = l_chandoan.Distinct().ToList();

                        maicd[0] = string.Join("; ", l_ICD);
                        maicd[1] = string.Join("; ", l_chandoan);
                        maicd[2] = makp;
                        maicd[3] = ngaykham;
                        maicd[4] = "";
                        maicd[5] = mack;
                        break;

                    case 1:
                        int idmin = a.Min(p => p.IDKB);
                        foreach (var b in a.Where(p => p.IDKB == idmin))
                        {
                            if (!string.IsNullOrEmpty(b.MaICD))
                                l_ICD.Add(b.MaICD);
                            if (!string.IsNullOrEmpty(b.MaICD2))
                                l_ICD.Add(b.MaICD2);
                            if (!string.IsNullOrEmpty(b.ChanDoan))
                                l_chandoan.Add(b.ChanDoan);
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                            {
                                l_chandoan.Add(b.BenhKhac);
                                if (!string.IsNullOrEmpty(b.BenhKhac))
                                {
                                    l_chandoan.Add(b.BenhKhac);
                                    List<string> lbenhkhac = b.BenhKhac.Split(';').Where(p => p != "").Distinct().ToList();
                                    int num = 0;
                                    // List<string> _chandoanPhu = new List<string>();
                                    foreach (string tenbenh in lbenhkhac)
                                    {
                                        string tenbenhN = tenbenh.Replace("(Bệnh phụ)", "");
                                        var qtenicd = _data.ICD10.Where(p => p.TenICD == tenbenhN).FirstOrDefault();
                                        num++;
                                        if (num > 2 || qtenicd == null)
                                            _chandoanPhu.Add(tenbenh);
                                    }
                                    maicd[7] = string.Join("; ", _chandoanPhu);
                                }
                            }
                            makp = b.MaKP.ToString();
                            mack = b.MaCK.ToString();
                            ngaykham = b.NgayKham.ToString();
                        }
                        l_ICD = l_ICD.Distinct().ToList();
                        l_chandoan = l_chandoan.Distinct().ToList();
                        maicd[0] = string.Join("; ", l_ICD);
                        maicd[1] = string.Join("; ", l_chandoan);

                        break;

                    case 2:
                        int idmaxfull = a.Max(p => p.IDKB);

                        foreach (var b in a.Where(p => p.IDKB == idmaxfull))
                        {
                            if (!string.IsNullOrEmpty(b.MaICD))
                            {
                                l_ICD.Add(b.MaICD);
                                maICD = b.MaICD;
                            }
                            if (!string.IsNullOrEmpty(b.MaICD2))
                            {
                                l_ICD.Add(b.MaICD2);
                                strMaICDPhu = b.MaICD2.Split(';').ToList();
                                if (strMaICDPhu.Count > 2)
                                    maICD4 = strMaICDPhu.Skip(2).First().ToString();
                                if (strMaICDPhu.Count > 1)
                                    maICD3 = strMaICDPhu.Skip(1).First().ToString();
                                if (strMaICDPhu.Count > 0)
                                    maICD2 = strMaICDPhu.First().ToString();
                            }
                            if (!string.IsNullOrEmpty(b.ChanDoan))
                            {
                                benhchinh = b.ChanDoan;
                            }
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                            {
                                strMaBenhPhu = b.BenhKhac.Split(';').ToList();
                                if (strMaBenhPhu.Count > 2)
                                    benhphu4 = strMaBenhPhu.Skip(2).First().ToString();
                                if (strMaBenhPhu.Count > 1)
                                    benhphu3 = strMaBenhPhu.Skip(1).First().ToString();
                                if (strMaBenhPhu.Count > 0)
                                    benhphu2 = strMaBenhPhu.First().ToString();
                            }

                            makp = b.MaKP.ToString();
                            mack = b.MaCK.ToString();
                            ngaykham = b.NgayKham.ToString();
                        }
                        foreach (var b in a.Where(p => p.IDKB != idmaxfull))
                        {
                            if (!string.IsNullOrEmpty(b.ChanDoan))
                                l_chandoan.Add(b.ChanDoan);
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                            {
                                l_chandoan.Add(b.BenhKhac);
                            }
                        }

                        l_ICD = l_ICD.ToList();
                        l_chandoan = l_chandoan.Where(p => p != "" && p != benhchinh && p != benhphu2 && p != benhphu3 && p != benhphu4).Distinct().ToList();
                        l_chandoan.Insert(0, benhphu4);
                        l_chandoan.Insert(0, benhphu3);
                        l_chandoan.Insert(0, benhphu2);
                        l_chandoan.Insert(0, benhchinh);
                        maicd[0] = string.Join("; ", l_ICD);
                        maicd[1] = string.Join("; ", l_chandoan);

                        // Đoài yc 01/10/2018
                        DSCDfull = maicd[1].Split(';').Where(p => p != "" && p != benhchinh && p != benhphu2 && p != benhphu3).Distinct().ToList();
                        maicd[7] = string.Join("; ", DSCDfull);
                        break;

                    case 3:
                        int idminfull = a.Min(p => p.IDKB);

                        foreach (var b in a.Where(p => p.IDKB == idminfull))
                        {
                            if (!string.IsNullOrEmpty(b.MaICD))
                            {
                                l_ICD.Add(b.MaICD);
                                maICD = b.MaICD;
                            }
                            if (!string.IsNullOrEmpty(b.MaICD2))
                            {
                                l_ICD.Add(b.MaICD2);
                                strMaICDPhu = b.MaICD2.Split(';').ToList();
                                if (strMaICDPhu.Count > 2)
                                    maICD4 = strMaICDPhu.Skip(2).First().ToString();
                                if (strMaICDPhu.Count > 1)
                                    maICD3 = strMaICDPhu.Skip(1).First().ToString();
                                if (strMaICDPhu.Count > 0)
                                    maICD2 = strMaICDPhu.First().ToString();
                            }
                            makp = b.MaKP.ToString();
                            mack = b.MaCK.ToString();
                            ngaykham = b.NgayKham.ToString();

                            if (!string.IsNullOrEmpty(b.ChanDoan))
                            {
                                benhchinh = b.ChanDoan;
                            }
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                            {
                                strMaBenhPhu = b.BenhKhac.Split(';').ToList();
                                if (strMaBenhPhu.Count > 2)
                                    benhphu4 = strMaBenhPhu.Skip(2).First().ToString();
                                if (strMaBenhPhu.Count > 1)
                                    benhphu3 = strMaBenhPhu.Skip(1).First().ToString();
                                if (strMaBenhPhu.Count > 0)
                                    benhphu2 = strMaBenhPhu.First().ToString();
                            }
                        }
                        a = a.OrderBy(p => p.IDKB).ToList();
                        foreach (var b in a.Where(p => p.IDKB != idminfull))
                        {
                            if (!string.IsNullOrEmpty(b.ChanDoan))
                                l_chandoan.Add(b.ChanDoan);
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                                l_chandoan.Add(b.BenhKhac);
                        }
                        l_ICD = l_ICD.ToList();
                        l_chandoan = l_chandoan.Distinct().Where(p => p != "" && p != benhchinh && p != benhphu2 && p != benhphu3 && p != benhphu4).ToList();
                        l_chandoan.Insert(0, benhphu4);
                        l_chandoan.Insert(0, benhphu3);
                        l_chandoan.Insert(0, benhphu2);
                        l_chandoan.Insert(0, benhchinh);
                        maicd[0] = string.Join("; ", l_ICD);
                        maicd[1] = string.Join("; ", l_chandoan);

                        // Đoài yc 01/10/2018

                        DSCDfull = maicd[1].Split(';').Where(p => p != "" && p != benhchinh && p != benhphu2 && p != benhphu3).Distinct().ToList();
                        maicd[7] = string.Join("; ", DSCDfull);

                        break;

                    case 4:
                        #region lấy tất cả ICD, chẩn đoán

                        List<string> ICDfull = new List<string>();
                        List<string> _chandoanfull = new List<string>();
                        List<string> ICDPhu = new List<string>();//list mã icd 4
                        // List<string> _chandoanPhu = new List<string>();// list chẩn đoán 4
                        a = a.OrderByDescending(p => p.IDKB).ToList();
                        foreach (var b in a)
                        {
                            if (!string.IsNullOrEmpty(b.MaICD))
                            {
                                ICDfull.Add(b.MaICD);
                            }
                            if (!string.IsNullOrEmpty(b.MaICD2))
                            {
                                List<string> lmaICD2 = b.MaICD2.Split(';').Where(p => p.Trim() != "").ToList();
                                int num = 0;
                                foreach (string maicd2 in lmaICD2)
                                {
                                    num++;
                                    if (num < 3)
                                        ICDfull.Add(maicd2);
                                    else if (num >= 3)
                                        ICDPhu.Add(maicd2);
                                }
                            }

                            if (!string.IsNullOrEmpty(b.ChanDoan))
                            {
                                _chandoanfull.Add(b.ChanDoan);
                            }
                            if (!string.IsNullOrEmpty(b.BenhKhac))
                            {
                                List<string> lbenhkhac = b.BenhKhac.Split(';').Where(p => p.Trim() != "").ToList();
                                int num = 0;
                                foreach (string tenbenh in lbenhkhac)
                                {
                                    string tenbenhN = tenbenh.Replace("(Bệnh phụ)", "");
                                    var qtenicd = _data.ICD10.Where(p => p.TenICD == tenbenhN).FirstOrDefault();
                                    num++;
                                    if (num < 3 && qtenicd != null)
                                        _chandoanfull.Add(tenbenh);
                                    else
                                        _chandoanPhu.Add(tenbenh);
                                }
                            }
                        }
                        ICDfull = ICDfull.Where(p => p != "").Distinct().ToList();
                        _chandoanfull = _chandoanfull.Where(p => p != "").Distinct().ToList();

                        if (ICDfull.Count <= 3)
                        {
                            maicd[0] = string.Join("; ", ICDfull);
                            ICDPhu = (from x in ICDPhu
                                      join y in ICDfull on x equals y into kq
                                      from kq1 in kq.DefaultIfEmpty()
                                      select new { x, kq1 }).Where(p => p.kq1 == null).Select(p => p.x).Where(p => p != "").Distinct().ToList();
                        }
                        else
                        {
                            maicd[0] = string.Join("; ", ICDfull.Take(3));
                            List<string> sub = ICDfull.Skip(3).ToList();
                            sub.AddRange(ICDPhu);
                            ICDPhu = sub.Where(p => p != "" && p != ICDfull.First() && p != ICDfull.Skip(1).First() && p != ICDfull.Skip(2).First()).Distinct().ToList();
                        }

                        if (_chandoanfull.Count <= 3)
                        {
                            maicd[1] = string.Join("; ", _chandoanfull);
                            _chandoanPhu = (from x in _chandoanPhu
                                            join y in _chandoanfull on x equals y into kq
                                            from kq1 in kq.DefaultIfEmpty()
                                            select new { x, kq1 }).Where(p => p.kq1 == null).Select(p => p.x).Where(p => p != "").Distinct().ToList();
                        }
                        else
                        {
                            maicd[1] = string.Join("; ", _chandoanfull.Take(3));
                            List<string> sub = _chandoanfull.Skip(3).ToList();
                            sub.AddRange(_chandoanPhu);
                            _chandoanPhu = sub.Where(p => p != "" && p != _chandoanfull.First() && p != _chandoanfull.Skip(1).First() && p != _chandoanfull.Skip(2).First()).Distinct().ToList();
                        }

                        mack = a.First().MaCK.ToString();

                        maicd[0] = string.Join("; ", maicd[0]) + ";" + string.Join(";  ", ICDPhu);
                        maicd[1] = string.Join("; ", maicd[1]) + ";" + string.Join(";  ", _chandoanPhu);
                        makp = a.First().MaKP.ToString();
                        ngaykham = a.First().NgayKham.Value.ToString();
                        mack = a.First().MaCK.ToString();
                        //Đoài yc 01/10/2018

                        maicd[7] = string.Join("; ", _chandoanPhu);
                        #endregion
                        #region   lấy khám bệnh cuối cùng

                        #endregion
                        break;

                    case 5: // lấy tất cả các ICD, Chẩn đoán cuối cùng làm chính
                        int idmax5 = a.Max(p => p.IDKB);
                        List<string> ICDfull5 = new List<string>();
                        List<string> _chandoanfull5 = new List<string>();
                        a = a.OrderByDescending(p => p.IDKB).ToList();
                        foreach (var b in a)
                        {
                            if (b.IDKB == idmax5)
                            {
                                if (!string.IsNullOrEmpty(b.MaICD))
                                {
                                    maICD = b.MaICD;
                                }
                                if (!string.IsNullOrEmpty(b.MaICD2))
                                {
                                    List<string> lmaICD2 = b.MaICD2.Split(';').ToList();
                                    strMaICDPhu = b.MaICD2.Split(';').ToList();
                                    if (strMaICDPhu.Count > 2)
                                        maICD4 = strMaICDPhu.Skip(2).First().ToString();
                                    if (strMaICDPhu.Count > 1)
                                        maICD3 = strMaICDPhu.Skip(1).First().ToString();
                                    if (strMaICDPhu.Count > 0)
                                        maICD2 = strMaICDPhu.First().ToString();
                                }

                                if (!string.IsNullOrEmpty(b.ChanDoan))
                                {
                                    _chandoanfull5.Add(b.ChanDoan);
                                }
                                if (!string.IsNullOrEmpty(b.BenhKhac))
                                {
                                    _chandoanfull5.Add(b.BenhKhac);
                                    strMaBenhPhu = b.BenhKhac.Split(';').ToList();
                                    if (strMaBenhPhu.Count > 2)
                                        benhphu4 = strMaBenhPhu.Skip(2).First().ToString();
                                }
                            }
                            else
                            {
                                if (!string.IsNullOrEmpty(b.MaICD))
                                {
                                    ICDfull5.Add(b.MaICD);
                                }
                                if (!string.IsNullOrEmpty(b.MaICD2))
                                {
                                    List<string> lmaICD2 = b.MaICD2.Split(';').ToList();
                                    foreach (string maicd2 in lmaICD2)
                                    {
                                        ICDfull5.Add(maicd2);
                                    }
                                }
                            }
                        }

                        ICDfull5 = ICDfull5.Distinct().ToList();
                        ICDfull5 = ICDfull5.Where(p => p != maICD4 && p != maICD3 && p != maICD2 && p != maICD && p != "").Distinct().ToList();
                        ICDfull5.Insert(0, maICD4);
                        ICDfull5.Insert(0, maICD3);
                        ICDfull5.Insert(0, maICD2);
                        ICDfull5.Insert(0, maICD);

                        maicd[0] = string.Join("; ", ICDfull5);
                        maicd[1] = string.Join("; ", _chandoanfull5);
                        makp = a.First().MaKP.ToString();
                        ngaykham = a.First().NgayKham.Value.ToString();
                        mack = a.First().MaCK.ToString();

                        // Đoài yc 01/10/2018
                        maicd[7] = string.Join("; ", benhphu4);
                        break;
                }
                if (_kieu == 0 || _kieu == 1)
                {
                    maicd[0] = DungChung.Ham.GetICDstr(maicd[0]);
                    maicd[1] = DungChung.Ham.GetICDstr(maicd[1]);
                }
                maicd[2] = makp;
                maicd[3] = ngaykham;
                maicd[4] = "";
                maicd[5] = mack;
            }
            //}
            //else
            //{
            //    maicd[0] = DungChung.Ham.GetICDstr(maicd[0]);
            //    maicd[1] = DungChung.Ham.GetICDstr(maicd[1]);
            //    maicd[2] = b1.FirstOrDefault().MaKP.ToString();
            //    maicd[3] = b1.FirstOrDefault().NgayKham.Value.ToString();
            //    maicd[4] = "";
            //    maicd[5] = b1.FirstOrDefault().MaCK.ToString();
            //}
            return maicd;
        }

        #region arrICD

        /// <summary>
        /// return array
        /// </summary>
        /// <param name="arr"></param>
        /// <returns></returns>
        public static string[] getICD(string arr)
        {
            string[] maicd = new string[20];
            for (int i = 0; i < 20; i++)
            {
                maicd[i] = "";
            }
            if (!string.IsNullOrEmpty(arr))
            {
                string[] icd2 = arr.Split(';');
                for (int i = 0; i < icd2.Length; i++)
                {
                    if (icd2[i] != null)
                        maicd[i] = icd2[i];
                }
            }
            return maicd;
        }

        #endregion
        #region Hàm lấy Trị Số Bình Thường bỏ
        /// <summary>
        /// trả về 1 mảng. 0:TenDVct, 1:DonVi, 2:TSBT,3:TSBTn,4:TSBTnu
        /// </summary>
        /// <param name="DataContect"></param>
        /// <param name="madvct"></param>
        /// <param name="ploaiTKiem">0: STT, 1: MaDVct</param>
        /// <param name="TenTNRG"> mảng chứa các tên TNRG</param>
        /// <returns>
        ///
        /// </returns>
        //public static String[] layTSBT(QLBV_Database.QLBVEntities DataContect, String strTimkiem, List<String> TenTNRG, int ploaiTKiem)
        //{
        //    String[] arrTSBT = new String[5] { "", "", "", "", "" };
        //    List<DichVuct> q = new List<DichVuct>();
        //    if (ploaiTKiem == 0)
        //    {
        //        int STT = Convert.ToInt32(strTimkiem);
        //        q = (from tenrg in TenTNRG
        //             join tnhomdv in DataContect.TieuNhomDVs on tenrg equals tnhomdv.TenRG
        //             join dv in DataContect.DichVus on tnhomdv.IdTieuNhom equals dv.IdTieuNhom
        //             join dvct in DataContect.DichVucts.Where(p => p.STT == STT) on dv.MaDV equals dvct.MaDV
        //             select dvct).ToList();
        //    }
        //    else
        //    {
        //        q = (from dvct in DataContect.DichVucts.Where(p => p.MaDVct == strTimkiem)
        //             select dvct).ToList();
        //    }
        //    foreach (var item in q)
        //    {
        //        String _nam = "", _nu = "";
        //        if (!String.IsNullOrEmpty(item.TSBTnu))
        //        {
        //            if (String.IsNullOrEmpty(item.TSnuTu))
        //            {
        //                _nu += item.TSBTnu + item.TSnuDen;
        //            }
        //            else if (String.IsNullOrEmpty(item.TSnuDen))
        //            {
        //                _nu += item.TSBTnu + item.TSnuTu;
        //            }
        //            else
        //            {
        //                _nu += item.TSBTnu + "(" + item.TSnTu + " - " + item.TSnDen + ")";
        //            }
        //        }

        //        if (!String.IsNullOrEmpty(item.TSBT))
        //        {
        //            if (String.IsNullOrEmpty(item.TSnTu))
        //            {
        //                _nam += item.TSBT + item.TSnDen;
        //            }
        //            else if (String.IsNullOrEmpty(item.TSnDen))
        //            {
        //                _nam += item.TSBT + item.TSnTu;
        //            }
        //            else
        //            {
        //                _nam += item.TSBT + "(" + item.TSnTu + " - " + item.TSnDen + ")";
        //            }
        //        }
        //        arrTSBT[0] = item.TenDVct;
        //        arrTSBT[1] = item.DonVi;
        //        if (item.TSBTnu != null && item.TSBTnu.ToLower().Contains("nữ"))
        //            arrTSBT[2] = _nam + "\n" + _nu;
        //        else
        //            arrTSBT[2] = _nam;
        //        arrTSBT[3] = _nam;
        //        arrTSBT[4] = _nu;
        //        break;
        //    }
        //    return arrTSBT;
        //}

        #endregion

        #region

        /// <summary>
        ///
        /// </summary>
        /// <param name="_data"></param>
        /// <param name="_macb">mã cán bộ trong dữ liệu</param>
        /// <param name="_macbxoa">mã cán bộ muốn thực hiện sửa-xóa</param>
        /// <returns></returns>
        public static bool _KiemTraCBSuaXoa(QLBV_Database.QLBVEntities _data, string _macb, string _macbxoa)
        {
            if (_macb == _macbxoa)
            {
                return true;
            }
            else
            {
                if (Bien.PLoaiKP == "Admin")
                    return true;
                else
                    return false;
            }
        }

        #endregion
        #region convert font Unicode
        public static int Font = 0;

        private static char[] arrTCVN = {'µ','¸','¶','·','¹','¨', '»', '¾', '¼', '½', 'Æ','©', 'Ç', 'Ê', 'È', 'É', 'Ë',
                                         '®', 'Ì', 'Ð', 'Î', 'Ï', 'Ñ','ª', 'Ò', 'Õ', 'Ó', 'Ô', 'Ö','×', 'Ý', 'Ø', 'Ü', 'Þ',
                                         'ß', 'ã', 'á', 'â', 'ä','«', 'å', 'è', 'æ', 'ç', 'é','¬', 'ê', 'í', 'ë', 'ì', 'î','ï',
                                         'ó', 'ñ', 'ò', 'ô','­', 'õ', 'ø', 'ö', '÷', 'ù','ú', 'ý', 'û', 'ü', 'þ','¡', '¢', '§', '£', '¤', '¥', '¦'
                                        };

        private static char[] arrUnicode = {'à', 'á', 'ả', 'ã', 'ạ','ă', 'ằ', 'ắ', 'ẳ', 'ẵ', 'ặ','â', 'ầ', 'ấ', 'ẩ', 'ẫ', 'ậ','đ', 'è', 'é', 'ẻ', 'ẽ', 'ẹ',
                                           'ê', 'ề', 'ế', 'ể', 'ễ', 'ệ','ì', 'í', 'ỉ', 'ĩ', 'ị','ò', 'ó', 'ỏ', 'õ', 'ọ','ô', 'ồ', 'ố', 'ổ', 'ỗ', 'ộ',
                                          'ơ', 'ờ', 'ớ', 'ở', 'ỡ', 'ợ','ù', 'ú', 'ủ', 'ũ', 'ụ','ư', 'ừ', 'ứ', 'ử', 'ữ', 'ự','ỳ', 'ý', 'ỷ', 'ỹ', 'ỵ','Ă', 'Â', 'Đ', 'Ê', 'Ô', 'Ơ', 'Ư'
                                        };

        private static Char[] Converter;

        public static String convertTCVN(String str)
        {
            if (string.IsNullOrEmpty(str))
                str = "";
            bool tt = false;
            Converter = new char[str.Length];
            Char[] arrStr = str.ToCharArray();
            for (int i = 0; i < arrStr.Length; i++)
            {
                for (int j = 0; j < arrUnicode.Length; j++)
                {
                    if (arrStr[i] == (arrUnicode[j]))
                    {
                        Converter[i] = arrTCVN[j];
                        tt = true;
                        break;
                    }
                }
                if (tt == false)
                {
                    Converter[i] = arrStr[i];
                }
                tt = false;
            }
            return new String(Converter);
        }

        public static String convertUnicode(String str)
        {
            if (string.IsNullOrEmpty(str))
                str = "";
            bool tt = false;
            Converter = new char[str.Length];
            Char[] arrStr = str.ToCharArray();
            for (int i = 0; i < arrStr.Length; i++)
            {
                for (int j = 0; j < arrTCVN.Length; j++)
                {
                    if (arrStr[i] == (arrTCVN[j]))
                    {
                        Converter[i] = arrUnicode[j];
                        tt = true;
                        break;
                    }
                }
                if (tt == false)
                {
                    Converter[i] = arrStr[i];
                }
                tt = false;
            }
            return new String(Converter);
        }

        /// <summary>
        /// convert sang TCVN3 = TCVN3,convert sang Unicode = Unicode
        /// </summary>
        /// <param name="str"></param>
        /// <param name="TCVN3Unicode">convert sang TCVN3 = TCVN3,convert sang Unicode = Unicode</param>
        /// <returns></returns>
        public static String convertFont(String str, string TCVN3Unicode)
        {
            String result = "";
            if (Font == 0)
            {
                if (TCVN3Unicode == "TCVN3")
                    result = convertTCVN(str);
                else
                    result = convertUnicode(str);
                return result;
            }
            else
                return str;
        }

        public static String convertFont(bool convert, String str, string TCVN3Unicode)
        {
            String result = "";
            if (convert)
            {
                if (TCVN3Unicode == "TCVN3")
                    result = convertTCVN(str);
                else
                    result = convertUnicode(str);
                return result;
            }
            else
                return str;
        }

        #endregion
        #region kiểm tra kq cls

        /// <summary>
        /// </summary>
        /// <param name="_data"></param>
        /// <param name="maBN"></param>
        /// <param name="strTimkiem"></param>
        /// <param name="ploaiTKiem">0: STT, 1: MaDVct</param>
        /// <param name="TenRG"> mảng chứa các tên TNRG</param>
        /// <param name="kq"></param>
        /// <param name="TenRG"></param>
        /// <returns></returns>
        public static String kiemtraKQ(QLBV_Database.QLBVEntities _data, int maBN, String strTimkiem, int ploaiTKiem, double kq, List<String> TenRG)
        {
            String ktra = "center";
            List<DichVuct> _lDVct = new List<DichVuct>();
            if (ploaiTKiem == 0)
            {
                int stt = 0;
                int.TryParse(strTimkiem, out stt);
                var q1 = (from tenrg in TenRG
                          join tndv in _data.TieuNhomDVs on tenrg equals tndv.TenRG
                          join dv in _data.DichVus on tndv.IdTieuNhom equals dv.IdTieuNhom
                          join dvct in _data.DichVucts.Where(p => p.STT == stt) on dv.MaDV equals dvct.MaDV
                          select dvct).ToList();
                _lDVct.AddRange(q1);
            }
            if (ploaiTKiem == 1)
            {
                var q1 = (from tenrg in TenRG
                          join tndv in _data.TieuNhomDVs on tenrg equals tndv.TenRG
                          join dv in _data.DichVus on tndv.IdTieuNhom equals dv.IdTieuNhom
                          join dvct in _data.DichVucts.Where(p => p.MaDVct == strTimkiem) on dv.MaDV equals dvct.MaDV
                          select dvct).ToList();
                _lDVct.AddRange(q1);
            }
            var q = _data.BenhNhans.Where(p => p.MaBNhan == maBN).Select(p => p.GTinh);
            if (q.Count() > 0 && q.First() != null)
            {
                int GTinh = 0;
                GTinh = q.First().Value;
                if (q.First() != null && GTinh == 0)//Nếu là nữ
                {
                    if (_lDVct.Count() > 0)
                    {
                        String TSBTnu = _lDVct.First().TSBTnu;
                        if (TSBTnu != null && TSBTnu != "") // Nếu có TSBTnu
                        {
                            String TSnuTu = _lDVct.First().TSnuTu.ToString();
                            String TSnuDen = _lDVct.First().TSnuDen.ToString();
                            if (!String.IsNullOrEmpty(TSnuTu) && !String.IsNullOrEmpty(TSnuDen))
                            {
                                double nuTu = 0;
                                double nuDen = 0;
                                if (!double.TryParse(TSnuTu, out nuTu) || !double.TryParse(TSnuDen, out nuDen))
                                {
                                    return "center";
                                }

                                if (double.TryParse(TSnuTu, out nuTu) && double.TryParse(TSnuDen, out nuDen) && kq >= nuTu && kq <= nuDen)
                                {
                                    ktra = "center";
                                }
                                else if (double.TryParse(TSnuTu, out nuTu) && kq < nuTu)
                                {
                                    ktra = "left";
                                }
                                else if (double.TryParse(TSnuDen, out nuDen) && kq > nuDen)
                                {
                                    ktra = "right";
                                }
                            }
                            else
                            {
                                if (!String.IsNullOrEmpty(TSnuTu))
                                {
                                    double nuTu = 0;
                                    if (double.TryParse(TSnuTu, out nuTu))
                                    {
                                        if (TSBTnu.Contains(">"))
                                        {
                                            if (kq > nuTu)
                                            {
                                                ktra = "center";
                                            }
                                            else
                                                ktra = "left";
                                        }
                                        else
                                        {
                                            if (kq >= nuTu)
                                            {
                                                ktra = "center";
                                            }
                                            else
                                                ktra = "left";
                                        }
                                    }
                                }
                                else
                                {
                                    if (!String.IsNullOrEmpty(TSnuDen))
                                    {
                                        double nuDen = 0;
                                        if (double.TryParse(TSnuDen, out nuDen))
                                        {
                                            if (TSBTnu.Contains("<"))
                                            {
                                                if (kq < nuDen)
                                                {
                                                    ktra = "center";
                                                }
                                                else
                                                    ktra = "right";
                                            }
                                            else
                                            {
                                                if (kq <= nuDen)
                                                {
                                                    ktra = "center";
                                                }
                                                else
                                                    ktra = "right";
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        else // Nếu không có TSBTnu
                        {
                            GTinh = 1;
                        }
                    }
                }
                if (q.First() != null && GTinh == 1)// Nếu là nam
                {
                    if (_lDVct.Count() > 0)
                    {
                        String TSBTn = "";
                        if (_lDVct.First().TSBTn != null)
                        {
                            TSBTn = _lDVct.First().TSBTn;
                        }
                        String TSnTu = _lDVct.First().TSnTu.ToString();
                        String TSnDen = _lDVct.First().TSnDen.ToString();
                        if (!String.IsNullOrEmpty(TSnTu) && !String.IsNullOrEmpty(TSnDen))
                        {
                            double nTu = 0;
                            double nDen = 0;
                            if (!double.TryParse(TSnTu, out nTu) || !double.TryParse(TSnDen, out nDen))
                            {
                                return "center";
                            }
                            if (double.TryParse(TSnTu, out nTu) && double.TryParse(TSnDen, out nDen) && kq >= nTu && kq <= nDen)
                            {
                                ktra = "center";
                            }
                            else if (double.TryParse(TSnTu, out nTu) && kq < nTu)
                            {
                                ktra = "left";
                            }
                            else if (double.TryParse(TSnDen, out nDen) && kq > nDen)
                            {
                                ktra = "right";
                            }
                        }
                        else
                        {
                            if (!String.IsNullOrEmpty(TSnTu))
                            {
                                double nTu = 0;
                                if (double.TryParse(TSnTu, out nTu))
                                {
                                    if (TSBTn.Contains(">"))
                                    {
                                        if (kq > nTu || nTu == 0)
                                        {
                                            ktra = "center";
                                        }
                                        else
                                            ktra = "left";
                                    }
                                    else
                                    {
                                        if (kq >= nTu || nTu == 0)
                                        {
                                            ktra = "center";
                                        }
                                        else if (kq < nTu)
                                        {
                                            ktra = "left";
                                        }
                                    }
                                }
                            }
                            else
                            {
                                if (!String.IsNullOrEmpty(TSnDen))
                                {
                                    double nDen = 0;
                                    if (double.TryParse(TSnDen, out nDen))
                                    {
                                        if (TSBTn.Contains("<"))
                                        {
                                            if (kq < nDen || nDen == 0)
                                            {
                                                ktra = "center";
                                            }
                                            else
                                                ktra = "right";
                                        }
                                        else
                                        {
                                            if (kq <= nDen || nDen == 0)
                                            {
                                                ktra = "center";
                                            }
                                            else
                                                ktra = "right";
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            return ktra;
        }

        #endregion

        #region lấy trị số bình thường

        //string TenTNRG;
        /// <summary>
        /// trả về 1 mảng. 0:TenDVct, 1:DonVi, 2:TSBT,3:TSBTn,4:TSBTnu
        /// </summary>
        /// <param name="DataContect"></param>
        /// <param name="madvct"></param>
        /// <param name="ploaiTKiem">0: STT, 1: MaDVct</param>
        /// <param name="TenTNRG"> mảng chứa các tên TNRG</param>
        /// <returns>
        ///
        /// </returns>
        public static String[] layTSBT(QLBV_Database.QLBVEntities DataContect, String strTimkiem, List<String> TenTNRG, int ploaiTKiem)
        {
            String[] arrTSBT = new String[5] { "", "", "", "", "" };
            List<DichVuct> q = new List<DichVuct>();
            if (ploaiTKiem == 0)
            {
                int STT = Convert.ToInt32(strTimkiem);
                q = (//from tenrg in TenTNRG
                    from tnhomdv in DataContect.TieuNhomDVs.Where(p => TenTNRG.Contains(p.TenRG))
                    join dv in DataContect.DichVus on tnhomdv.IdTieuNhom equals dv.IdTieuNhom
                    join dvct in DataContect.DichVucts.Where(p => p.STT == STT) on dv.MaDV equals dvct.MaDV
                    select dvct).ToList();
            }
            else
            {
                q = (from dvct in DataContect.DichVucts.Where(p => p.MaDVct == strTimkiem)
                     select dvct).ToList();
            }
            foreach (var item in q)
            {
                String _nam = "", _nu = "";
                if (!String.IsNullOrEmpty(item.TSBTnu))
                {
                    if (item.TSnuTu != null) //(String.IsNullOrEmpty(item.TSnuTu))
                    {
                        _nu += item.TSBTnu + item.TSnuDen;
                    }
                    else if (item.TSnuDen != null) //(String.IsNullOrEmpty(item.TSnuDen))
                    {
                        _nu += item.TSBTnu + item.TSnuTu;
                    }
                    else
                    {
                        _nu += item.TSBTnu + "(" + item.TSnuTu + " - " + item.TSnuDen + ")";
                    }
                }

                if (!String.IsNullOrEmpty(item.TSBTn))
                {
                    if (item.TSnTu != null) //(String.IsNullOrEmpty(item.TSnTu))
                    {
                        _nam += item.TSBTn + item.TSnDen;
                    }
                    else if (item.TSnDen != null)//(String.IsNullOrEmpty(item.TSnDen))
                    {
                        _nam += item.TSBTn + item.TSnTu;
                    }
                    else
                    {
                        _nam += item.TSBTn + "(" + item.TSnTu + " - " + item.TSnDen + ")";
                    }
                }
                arrTSBT[0] = item.TenDVct;
                arrTSBT[1] = item.DonVi;
                arrTSBT[2] = item.TSBT;
                arrTSBT[3] = _nam;
                arrTSBT[4] = _nu;
                break;
            }
            return arrTSBT;
        }

        #endregion
        #region Lưu-Xóa ra viện bn ngoại trú

        /// <summary>
        ///
        /// </summary>
        /// <param name="_data"></param>
        /// <param name="_mabn"></param>
        /// <param name="Luu_Xoa"> Lưu : Luu, Xóa: Xoa</param>
        /// <param name="RaChuyenVien"> set status để biết bệnh nhân ra hay chuyển viện</param>
        public static bool _LuuXoaRaVien(QLBV_Database.QLBVEntities _data, int _mabn, DateTime dtNgayTT, string Luu_Xoa, int RaChuyenVien)
        {
            try
            {
                if (DungChung.Bien.MaBV == "24012")
                {
                    EntityDbContext.RefreshDbContext();
                    _data = EntityDbContext.DbContext;
                }
                var ktrvien = _data.RaViens.Where(p => p.MaBNhan == _mabn).ToList();
                var bnkb = _data.BNKBs.Where(p => p.MaBNhan == _mabn).OrderByDescending(p => p.IDKB).ToList();
                if (bnkb.Count > 0 && bnkb.First().NgayNghi != null && Bien.MaBV != "24012")
                    dtNgayTT = bnkb.First().NgayNghi.Value;
                var bn = _data.BenhNhans.Where(p => p.MaBNhan == _mabn).ToList();
                if (Luu_Xoa == "Luu")
                {
                    if (ktrvien.Count <= 0)
                    {
                        string tuoi;
                        if (Bien.MaBV == "30010")
                        {
                            tuoi = DungChung.Ham.TuoitheoThang(_data, _mabn, "12-0");
                        }
                        else
                        {
                            tuoi = DungChung.Ham.TuoitheoThang(_data, _mabn, "72-0");
                        }

                        var ttbx = _data.TTboXungs.Where(p => p.MaBNhan == _mabn).Select(p => p).FirstOrDefault();
                        if (tuoi.ToLower().Contains("tháng"))
                        {
                            if (ttbx == null || string.IsNullOrEmpty(ttbx.CanNang_ChieuCao) || (ttbx.CanNang_ChieuCao.Contains(";") && string.IsNullOrEmpty(ttbx.CanNang_ChieuCao.Split(';')[0])))
                            {
                                MessageBox.Show("Bệnh nhân dưới 72 tháng tuổi, chưa được nhập thông tin cơ thể");
                                return false;
                            }
                        }
                        if (bnkb.Count > 0)
                        {
                            string[] maicd = new string[6] { "", "", "", "", "", "0" };
                            maicd = DungChung.Ham.getMaICDarr(_data, _mabn, Bien.GetICD, 0);
                            string[] arricdSpace = DungChung.Ham.FreshString(maicd[0]).Split(';');
                            string icdChuan = "";
                            if (arricdSpace.Count() > 0)
                            {
                                for (int i = 0; i < arricdSpace.Count(); i++)
                                {
                                    if (!string.IsNullOrEmpty(arricdSpace[i]) && arricdSpace[i] != " ")
                                        icdChuan += DungChung.Ham.FreshString(arricdSpace[i]).Trim() + ";";
                                }
                            }
                            //string icdKhac = DungChung.Ham.FreshString(string.Join(";", icd.Skip(3)));
                            //string[] arricd4 = DungChung.Ham.FreshString(icdKhac).Split(';');
                            //string icd4 = "";
                            //if (arricd4.Count() > 0)
                            //{
                            //    for (int i = 0; i < arricd4.Count(); i++)
                            //    {
                            //        icd4 += arricd4[i].Trim() + ";";
                            //    }
                            //}
                            if (string.IsNullOrEmpty(DungChung.Ham.FreshString(bnkb.First().MaICD)) && Bien.MaBV != "12345" && Bien.MaBV != "24297")
                            {
                                if (Bien.MaBV == "30303" && bn.First().DTuong == "Dịch vụ")
                                {
                                }
                                else
                                {
                                    int makp = 0;
                                    makp = Convert.ToInt32(bnkb.First().MaKP);
                                    var tenkp = _data.KPhongs.Where(p => p.MaKP == makp).Select(p => p.TenKP).FirstOrDefault();
                                    MessageBox.Show("Bệnh nhân chưa có bệnh chính tại khoa phòng: " + tenkp, "Thông báo");
                                    return false;
                                }
                            }
                            DateTime _ngayvao = dtNgayTT;
                            if (Bien.MaBV == "27001")
                            {
                                //if (bnkb.Last().NgayKham != null)
                                //{
                                //    _ngayvao = bnkb.Last().NgayKham.Value;
                                //    if (dtNgayTT < _ngayvao)
                                //    {
                                //        MessageBox.Show("Ngày giờ ra viện: " + dtNgayTT.ToString() + " phải > ngày giờ vào viện: " + _ngayvao.ToString());
                                //        return false;
                                //    }
                                //}
                                if (bn.Last().NNhap != null)
                                {
                                    _ngayvao = bn.Last().NNhap.Value;
                                    if (dtNgayTT < _ngayvao)
                                    {
                                        MessageBox.Show("Ngày giờ ra viện: " + dtNgayTT.ToString() + " phải > ngày giờ vào viện: " + _ngayvao.ToString());
                                        return false;
                                    }
                                }
                            }
                            else
                            {
                                if (bnkb.Last().NgayKham != null)
                                {
                                    _ngayvao = bnkb.Last().NgayKham.Value;
                                    if (dtNgayTT < _ngayvao)
                                    {
                                        MessageBox.Show("Ngày giờ ra viện: " + dtNgayTT.ToString() + " phải > ngày giờ vào viện: " + _ngayvao.ToString());
                                        return false;
                                    }
                                }
                            }
                            RaVien _ravien = new RaVien();
                            _ravien.MaKP = String.IsNullOrEmpty(maicd[2]) ? 0 : Convert.ToInt32(maicd[2]);
                            _ravien.MaICD = DungChung.Ham.FreshString(icdChuan);
                            _ravien.ChanDoan = maicd[1];
                            _ravien.MaCK = Convert.ToInt16(maicd[5]);
                            if (bnkb.First().PhuongAn != null && bnkb.First().PhuongAn == 2)
                                _ravien.Status = 1;
                            else
                                _ravien.Status = 2;
                            // kiểm tra lại số ngày điều trị
                            int songaydt = FormNhap.frm_Ravien.getDaysOfStay(_mabn, _ngayvao, dtNgayTT);
                            // doi voi benh nhan ngoai tru, dt ngoai tru = ngay ra - ngay vao, quynv yeu cau
                            if (songaydt > 1)
                                songaydt = songaydt - 1;
                            if (dtNgayTT >= new DateTime(2017, 11, 04))
                                _ravien.SoNgaydt = 0;
                            else
                                _ravien.SoNgaydt = 1;
                            _ravien.NgayRa = dtNgayTT;
                            _ravien.MaBNhan = _mabn;
                            _ravien.NgayVao = _ngayvao;
                            _data.RaViens.Add(_ravien);
                            BNKB updatePA = bnkb.FirstOrDefault();
                            updatePA.PhuongAn = 0;
                            updatePA.NgayNghi = dtNgayTT;
                            _data.SaveChanges();
                            //if (Bien.MaBV == "24012" || Bien.MaBV == "27194")
                            //{
                            int makpkb = 0;
                            makpkb = Convert.ToInt32(bnkb.First().MaKP);
                            if (Bien.MaBV == "24012")
                            {
                                var NgayDT1 = _data.BenhNhans.Where(p => p.MaBNhan == _mabn && p.MaKP == 18).ToList();
                                if (NgayDT1.Count > 0)
                                {
                                    FormNhap.Frm_NhapNgayDieuTri frm = new FormNhap.Frm_NhapNgayDieuTri(_mabn, makpkb);
                                    frm.ShowDialog();
                                }
                            }
                            else
                            {
                                var NgayDT1 = (from bn1 in _data.BenhNhans.Where(p => p.DTNT == true && p.MaBNhan == _mabn)
                                               join vv in _data.VaoViens.Where(p => p.MaKP == makpkb) on bn1.MaBNhan equals vv.MaBNhan
                                               join kp1 in _data.KPhongs.Where(p => p.PLoai == "Phòng khám") on vv.MaKP equals kp1.MaKP
                                               select new { bn1, vv, kp1 }).ToList();
                                var NgayDT2 = _data.BenhNhans.Where(p => p.DTNT == true && p.MaBNhan == _mabn).ToList();
                                if (NgayDT1.Count > 0)
                                {
                                    FormNhap.Frm_NhapNgayDieuTri frm = new FormNhap.Frm_NhapNgayDieuTri(_mabn, makpkb);
                                    frm.ShowDialog();
                                }
                                else if (NgayDT2.Count > 0)
                                {
                                    FormNhap.Frm_NhapNgayDieuTri frm = new FormNhap.Frm_NhapNgayDieuTri(_mabn);
                                    frm.ShowDialog();
                                }

                                //}
                            }
                            try
                            {
                                DungChung.Ham._setStatus(_mabn, 2);
                            }
                            catch { }
                        }
                        else
                        {
                            var kt = false; //kt = true khi bệnh nhân là bệnh nhân phòng tiếp đón, bv nam thăng long
                            if (Bien.MaBV == "01071" || Bien.MaBV == "01049")
                            {
                                var benhnhan = _data.BenhNhans.Where(p => p.MaBNhan == _mabn).Single();
                                if (benhnhan.DTuong == "Dịch vụ")
                                {
                                    var kp = _data.KPhongs.Where(p => p.MaKP == benhnhan.MaKP).FirstOrDefault();
                                    if (kp != null && kp.PLoai == Bien.st_PhanLoaiKP.HanhChinh)
                                    {
                                        RaVien _ravien = new RaVien();
                                        _ravien.MaKP = kp.MaKP;
                                        _ravien.MaICD = "";
                                        _ravien.ChanDoan = "";
                                        _ravien.MaCK = kp.MaCK;

                                        _ravien.Status = 2;
                                        // kiểm tra lại số ngày điều trị

                                        _ravien.SoNgaydt = 0;

                                        _ravien.NgayRa = dtNgayTT;
                                        _ravien.MaBNhan = _mabn;
                                        _ravien.NgayVao = benhnhan.NNhap;
                                        _data.RaViens.Add(_ravien);

                                        _data.SaveChanges();
                                        try
                                        {
                                            DungChung.Ham._setStatus(_mabn, 2);
                                        }
                                        catch { }
                                        kt = true;
                                    }
                                }
                            }
                            if (kt == false)
                                return false;
                        }
                    }
                }
                if (Luu_Xoa == "Xoa")
                {
                    try
                    {
                        var xoa = _data.RaViens.Single(p => p.MaBNhan == _mabn);
                        ////var sdfdf= _data.RaViens.w ;
                        _data.RaViens.Remove(xoa);
                        var qcls = _data.CLS.Where(p => p.MaBNhan == _mabn).ToList();
                        BNKB updatePA = bnkb.FirstOrDefault();

                        if (updatePA != null)
                        {
                            updatePA.PhuongAn = 4;
                            updatePA.NgayNghi = null;
                        }
                        _data.SaveChanges();
                        if (qcls.Count == 0)
                            DungChung.Ham._setStatus(_mabn, 1);// bệnh nhân đã khám
                        else
                            DungChung.Ham._setStatus(_mabn, 5);// bệnh nhân đã có kqCLS
                    }
                    catch (Exception)
                    {
                        return false;
                    }
                }
                return true;
            }
            catch (Exception ex)
            {
                MessageBox.Show("Lỗi tạo ra viện: " + ex.Message);
                return false;
            }
            return true;
        }

        #endregion
        #region liệt kê danh sách thuốc tồn theo kho

        public class ThuocTon
        {
            private string tendv;
            private int makho;
            private int madv;
            private double soluong;
            private double dongia;

            public int MaKho
            {
                set { makho = value; }
                get { return makho; }
            }

            public string TenDV
            {
                set { tendv = value; }
                get { return tendv; }
            }

            public int MaDV
            {
                set { madv = value; }
                get { return madv; }
            }

            public double DonGia
            {
                set { dongia = value; }
                get { return dongia; }
            }

            public double SoLuong
            {
                set { soluong = value; }
                get { return soluong; }
            }
        }

        public static List<ThuocTon> KiemTraTonDuoc(QLBV_Database.QLBVEntities _dataContext, int _makp)
        {
            List<ThuocTon> _lthuocton = new List<ThuocTon>();
            //string thuocam = "";
            _lthuocton.Clear();
            _dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
            if (Bien.PPTinhTon == 0)
            {
                var kt = (from nd in _dataContext.TonDuocs.Where(p => p.MaKho == _makp)
                          join dv in _dataContext.DichVus on nd.MaDV equals dv.MaDV
                          select new { dv.TenDV, MaKP = nd.MaKho, nd.MaDV, nd.DonGia, SoLuong = nd.SoLuongTon }).ToList();
                foreach (var a in kt)
                {
                    if (a.SoLuong < 0)
                    {
                        _lthuocton.Add(new ThuocTon { MaDV = a.MaDV == null ? 0 : a.MaDV, TenDV = a.TenDV, SoLuong = a.SoLuong, DonGia = a.DonGia, MaKho = _makp });
                    }
                }
            }
            else
            {
                var _ldv = _dataContext.DichVus.Where(p => p.PLoai == 1).ToList();
                var _lnd = (from nd in _dataContext.NhapDs.Where(p => p.MaKP == _makp)
                            join ndct in _dataContext.NhapDcts on nd.IDNhap equals ndct.IDNhap
                            select new { nd.MaKP, ndct.MaDV, ndct.DonGia, ndct.SoLuongN, ndct.SoLuongX }).ToList();
                var duoc = (from nd in _lnd
                            join dv in _ldv on nd.MaDV equals dv.MaDV
                            select new { nd.MaKP, nd.MaDV, nd.DonGia, dv.TenDV, nd.SoLuongN, nd.SoLuongX }).ToList();

                var kt = (from nd in duoc
                          group nd by new { nd.MaKP, nd.MaDV, nd.DonGia, nd.TenDV } into kq
                          select new { kq.Key.TenDV, kq.Key.MaKP, kq.Key.MaDV, kq.Key.DonGia, SoLuong = kq.Sum(p => Math.Round((double)p.SoLuongN, 5)) - kq.Sum(p => Math.Round((double)p.SoLuongX, 5)) }).ToList();
                foreach (var a in kt)
                {
                    if (a.SoLuong < 0)
                    {
                        _lthuocton.Add(new ThuocTon { MaDV = a.MaDV ?? 0, TenDV = a.TenDV, SoLuong = a.SoLuong, DonGia = a.DonGia, MaKho = _makp });
                    }
                }
            }
            return _lthuocton;
        }

        #endregion
        #region KTCongKham_ngaygiuong

        public static bool KTCongKham_ngaygiuong(QLBV_Database.QLBVEntities _dataContext, int mabn)
        {
            var bnhan = _dataContext.BenhNhans.Where(p => p.MaBNhan == mabn).ToList();

            int noitru = -1;
            string doituong = "", _tenbn = "";
            if (bnhan.Count > 0 && bnhan.First().NoiTru != null)
            {
                noitru = bnhan.First().NoiTru.Value;
                doituong = bnhan.First().DTuong;
                _tenbn = bnhan.First().TenBNhan;
            }
            int _congkham = 0;
            int _ngaygiuong = 0;
            var kt = (from dt in _dataContext.DThuocs.Where(p => p.MaBNhan == mabn)
                      join dtct in _dataContext.DThuoccts on dt.IDDon equals dtct.IDDon
                      join dvu in _dataContext.DichVus.Where(p => p.PLoai == 2).Where(p => p.Status == 1) on dtct.MaDV equals dvu.MaDV
                      join tn in _dataContext.TieuNhomDVs on dvu.IdTieuNhom equals tn.IdTieuNhom
                      join nhom in _dataContext.NhomDVs on tn.IDNhom equals nhom.IDNhom
                      select new { dtct.IDDonct, nhom.TenNhomCT }).ToList();
            _congkham = kt.Where(p => p.TenNhomCT.Contains("Khám bệnh")).ToList().Count;
            _ngaygiuong = kt.Where(p => p.TenNhomCT.Contains("Giường điều trị nội trú")).ToList().Count;
            if (doituong == "BHYT")
            {
                if (noitru == 1)
                {
                    if (_ngaygiuong <= 0)
                    {
                        DialogResult _result = MessageBox.Show("Bệnh nhân: " + _tenbn + " chưa có tiền ngày giường, \n Bạn vẫn muốn thanh toán?", "Hỏi thanh toán", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                        if (_result == DialogResult.Yes)
                            return false;
                        else
                            return true;
                    }
                }
                else
                {
                    if (_ngaygiuong > 0 && DungChung.Ham.hangBVCK(Bien.MaBV) != 4)
                    {
                        MessageBox.Show("Bệnh nhân ngoại trú không có tiền ngày giường,\n Bạn không thể thanh toán!");
                        return true;
                    }
                    else
                    {
                        if (_congkham <= 0)
                        {
                            var rv = _dataContext.RaViens.Where(p => p.MaBNhan == mabn).Select(p => p.MaICD).ToList();
                            if (rv.Count > 0 && rv.First() != null && rv.First().ToString().ToUpper() == "N18")
                                return false;
                            MessageBox.Show("Bệnh nhân không có tiền công khám, Bạn không thể thanh toán!");
                            return true;
                        }
                    }
                }
            }
            else
            {
                if (doituong == "Dịch vụ")
                {
                    if (noitru == 1)
                    {
                        if (_ngaygiuong <= 0)
                        {
                            DialogResult _result = MessageBox.Show("Bệnh nhân: " + _tenbn + " chưa có tiền ngày giường, \n Bạn vẫn muốn thanh toán?", "Hỏi thanh toán", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                            if (_result == DialogResult.Yes)
                                return false;
                            else
                                return true;
                        }
                    }
                    else
                    {
                        if (_congkham <= 0)
                        {
                            System.Windows.Forms.DialogResult _result = MessageBox.Show("Bệnh nhân: " + _tenbn + " chưa có tiền công khám, \n Bạn vẫn muốn thanh toán?", "Hỏi thanh toán", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                            if (_result == DialogResult.Yes)
                                return false;
                            else
                                return true;
                        }
                    }
                }
            }

            return false;
        }

        #endregion
        #region updateChiPhiDV bỏ
        //public static bool updateChiPhiDV(QLBV_Database.QLBVEntities data, int _idvp)
        //{
        //    try
        //    {
        //        //  var kttontai = data.ChiPhiDVs.Where(p=>p.Status == true).Select(p=>p.idVPhi).Distinct().ToList();
        //        var kttontai = data.ChiPhiDVs.Where(p => p.idVPhi == _idvp && p.Status == true).ToList();
        //        if (kttontai.Count > 0)
        //        {
        //            return false;
        //            //   MessageBox.Show("Bệnh nhân" + kttontai.First().MaBNhan+" - "+ kttontai.First().TenBNhan + " đã tồn tại trong bảng ChiPhiDV. Không thực hiện được sao chép.!");
        //        }
        //        else
        //        {
        //            var q = (from bn in data.BenhNhans
        //                     join vp in data.VienPhis.Where(p => p.idVPhi == _idvp) on bn.MaBNhan equals vp.MaBNhan
        //                     join vpct in data.VienPhicts on vp.idVPhi equals vpct.idVPhi
        //                     join dv in data.DichVus on vpct.MaDV equals dv.MaDV
        //                     join nhomdv in data.NhomDVs on dv.IDNhom equals nhomdv.IDNhom
        //                     join rv in data.RaViens on bn.MaBNhan equals rv.MaBNhan
        //                     select new
        //                     {
        //                         bn.MaBNhan,
        //                         bn.TenBNhan,
        //                         bn.NamSinh,
        //                         bn.GTinh,
        //                         bn.SThe,
        //                         bn.Tuyen,
        //                         bn.DChi,
        //                         bn.DTuong,
        //                         bn.CapCuu,
        //                         bn.MaCS,
        //                         bn.NoiTinh,
        //                         bn.HanBHTu,
        //                         bn.HanBHDen,
        //                         bn.TuyenDuoi,
        //                         bn.NoiTru,
        //                         bn.DTNT,
        //                         rv.NgayVao,
        //                         rv.NgayRa,
        //                         rv.SoNgaydt,
        //                         rv.MaICD,
        //                         rv.MaKP,
        //                         bn.MaDTuong,
        //                         vp.NgayTT,
        //                         vpct.TrongBH,
        //                         dv.MaDV,
        //                         dv.TenDV,
        //                         vpct.ThanhTien,
        //                         dv.BHTT,
        //                         vpct.DonGia,
        //                         vpct.SoLuong,
        //                         vpct.TienBN,
        //                         vpct.TienBH,
        //                         vp.idVPhi
        //                     }).ToList();
        //            var q2 = (from q1 in q
        //                      join dv in data.DichVus on q1.MaDV equals dv.MaDV
        //                      join ndv in data.NhomDVs on dv.IDNhom equals ndv.IDNhom
        //                      select new ChiPhiDV
        //                      {
        //                          MaBNhan = q1.MaBNhan,
        //                          TenBNhan = q1.TenBNhan,
        //                          NamSinh = q1.NamSinh,
        //                          GTinh = q1.GTinh,
        //                          SThe = q1.SThe,
        //                          Tuyen = q1.Tuyen,
        //                          DChi = q1.DChi,
        //                          DTuong = q1.DTuong,
        //                          CapCuu = q1.CapCuu,
        //                          MaCS = q1.MaCS,
        //                          NoiTinh = q1.NoiTinh,
        //                          HanBHTu = q1.HanBHTu,
        //                          HanBHDen = q1.HanBHDen,
        //                          TuyenDuoi = q1.TuyenDuoi,
        //                          NgayVao = q1.NgayVao,
        //                          NgayRa = q1.NgayRa,
        //                          SoNgaydt = q1.SoNgaydt,
        //                          MaICD = q1.MaICD,
        //                          MaKP = q1.MaKP,
        //                          MaDTuong = q1.MaDTuong,
        //                          NgayTT = q1.NgayTT,
        //                          NoiTru = q1.NoiTru,
        //                          DTNT = q1.DTNT,
        //                          TrongBH = q1.TrongBH,
        //                          MaDV = q1.MaDV,
        //                          idVPhi = q1.idVPhi,
        //                          DonGia = q1.DonGia,
        //                          SoLuong = q1.SoLuong,
        //                          ThanhTien = q1.ThanhTien,
        //                          //Thuoc = kq.Select(p=>p.vpct)
        //                          Thuoc = ndv.TenNhomCT == "Thuốc trong danh mục BHYT" && q1.BHTT == 100 ? q1.ThanhTien : 0,
        //                          CDHA = ndv.TenNhomCT == "Chẩn đoán hình ảnh" && q1.BHTT == 100 ? q1.ThanhTien : 0,
        //                          CongKham = ndv.TenNhomCT == "Khám bệnh" ? q1.ThanhTien : 0,
        //                          XetNghiem = ndv.TenNhomCT == "Xét nghiệm" && q1.BHTT == 100 ? q1.ThanhTien : 0,
        //                          Mau = ndv.TenNhomCT == "Máu và chế phẩm của máu" && q1.BHTT == 100 ? q1.ThanhTien : 0,
        //                          TTPT = ndv.TenNhomCT == "Thủ thuật, phẫu thuật" && q1.BHTT == 100 ? q1.ThanhTien : 0,
        //                          VTYTTH = ndv.TenNhomCT == "Vật tư y tế trong danh mục BHYT" && q1.BHTT == 100 ? q1.ThanhTien : 0,
        //                          VTYT_tl = ndv.TenNhomCT == "VTYT thanh toán theo tỷ lệ" && q1.BHTT != 100 ? q1.ThanhTien : 0,
        //                          DVKT_tl = ndv.TenNhomCT == "DVKT thanh toán theo tỷ lệ" && q1.BHTT != 100 ? q1.ThanhTien : 0,
        //                          Thuoc_tl = ndv.TenNhomCT == "Thuốc trong danh mục BHYT" && q1.BHTT != 100 ? q1.ThanhTien : 0,
        //                          CPVanChuyen = ndv.TenNhomCT == "Vận chuyển" && q1.BHTT == 100 ? q1.ThanhTien : 0,
        //                          TienBN = q1.TienBN,
        //                          TienBH = q1.TienBH,
        //                          TienNgayGiuong = ndv.TenNhomCT == "Giường điều trị nội trú" ? q1.ThanhTien : 0,
        //                      }).ToList();
        //            List<DTuong> _lDTuong = new List<DTuong>();
        //            _lDTuong = data.DTuongs.ToList();

        //            foreach (var item in q2)
        //            {
        //                if (_lDTuong.Where(p => p.MaDTuong == item.MaDTuong).ToList().Count > 0)
        //                {
        //                    item.Nhom = _lDTuong.Where(p => p.MaDTuong == item.MaDTuong).First().Nhom;
        //                }
        //                item.Status = true;
        //                item.MaCB = Bien.MaCB;
        //                item.NgayUpdate = System.DateTime.Now;
        //                data.ChiPhiDVs.Add(item);
        //                //data.SaveChanges();
        //            }
        //            if (q2.Count > 0)
        //            {
        //                data.SaveChanges();
        //                return true;
        //            }
        //            else
        //                return false;
        //        }
        //    }
        //    catch (Exception)
        //    {
        //        return false;
        //    }

        //}
        #endregion
        #region xoaChiPhiDV bỏ
        //public static void xoaChiPhiDV(QLBV_Database.QLBVEntities data, int idVPhi)
        //{
        //    try
        //    {
        //        var q = data.ChiPhiDVs.Where(p => p.idVPhi == idVPhi && p.Status == true).ToList();
        //        foreach (var item in q)
        //        {
        //            item.Status = false;
        //            item.MaCB = Bien.MaCB;
        //            item.NgayUpdate = System.DateTime.Now;
        //        }

        //        data.SaveChanges();
        //    }
        //    catch (Exception)
        //    {
        //    }

        //}
        #endregion

        #region TrongDMBHYT

        public class TrongDMBHYT
        {
            private string ten;
            private int _value;

            public string Ten_TrongBH
            {
                set { ten = value; }
                get { return ten; }
            }

            public int TrongBH
            {
                set { _value = value; }
                get { return _value; }
            }
        }

        public static List<TrongDMBHYT> _SetValue_TrongDMBH()
        {
            List<TrongDMBHYT> _lTrongDMBH = new List<DungChung.Ham.TrongDMBHYT>();
            _lTrongDMBH.Add(new TrongDMBHYT { TrongBH = 0, Ten_TrongBH = "Ngoài DMBH" });
            _lTrongDMBH.Add(new TrongDMBHYT { TrongBH = 1, Ten_TrongBH = "Trong DMBH" });
            _lTrongDMBH.Add(new TrongDMBHYT { TrongBH = 2, Ten_TrongBH = "Không TT" });
            _lTrongDMBH.Add(new TrongDMBHYT { TrongBH = 3, Ten_TrongBH = "Phụ thu" });
            return _lTrongDMBH;
        }

        #endregion
        #region Tính hao hụt số lượng đông y

        public static double _getSL_DongY(QLBV_Database.QLBVEntities _data, int _madv, double _soluong, int makho)
        {
            ConnectData connect;// Lấy giá trị trả về
            connect = Program._connect;
            double ntrave = 0;
            try
            {
                string strSql = "sp_Ham_getSL_DongY"; //
                string strTrave = "@SoLuongDY";               // tên biến lưu giá trị trả về của câu truy vấn

                string[] strpara = new string[] { "@maKP", "@MaDV", "@soluong" };
                object[] oValues = new object[] { makho, _madv, _soluong };
                SqlDbType[] sqlDbType = new SqlDbType[] { SqlDbType.Int, SqlDbType.Int, SqlDbType.Float };
                connect.Connect();
                ntrave = connect.ExecuteNonQuery(strSql, strTrave, CommandType.StoredProcedure, strpara, oValues, sqlDbType);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
            return ntrave;
        }

        #endregion
        #region

        /// <summary>
        /// True: đã thanh toán trong ngày
        /// False: chưa thanh toán trong ngày
        /// </summary>
        /// <param name="_data"></param>
        /// <param name="_sthe"></param>
        /// <returns></returns>
        public static bool _KTBN_TT_TrongNgay(QLBV_Database.QLBVEntities _data, int _mabn, DateTime _dt)
        {
            var bn = _data.BenhNhans.Where(p => p.MaBNhan == _mabn).ToList();
            string _sothe = "";
            if (bn.Count > 0 && bn.First().SThe != null && bn.First().DTuong == "BHYT")
                _sothe = bn.First().SThe;
            if (_sothe.Length == 15)
            {
                int _day = 0, _Month = 0, _year = 0;
                _day = _dt.Day;
                _Month = _dt.Month;
                _year = _dt.Year;
                var kt = (from bnhan in _data.BenhNhans.Where(p => p.SThe == _sothe)
                          join vp in _data.VienPhis.Where(p => p.NgayTT.Value.Day == _day && p.NgayTT.Value.Month == _Month && p.NgayTT.Value.Year == _year) on bnhan.MaBNhan equals vp.MaBNhan
                          select vp.MaBNhan).ToList();
                if (kt.Count > 0)
                    return true;
                else
                    return false;
            }
            else
                return false;
        }

        #endregion
        #region lấy thông tin bệnh nhân khám bệnh

        /// <summary>
        ///  arrTT[0] = MaICD;
        ///        arrTT[1] = ChanDoan
        ///       arrTT[2] = Buong;
        ///        arrTT[3] =Giuong;
        /// </summary>
        /// <param name="_Data"></param>
        /// <param name="mabn"></param>
        /// <param name="makp"></param>
        /// <returns></returns>
        public static string[] laythongtinBNKB(QLBV_Database.QLBVEntities _Data, int mabn, int makp, bool CDBD)//CDBD: có hay ko lấy chẩn đoán ban đầu
        {
            string[] arrTT = new string[7] { "", "", "", "", "", "", "" };
            var kbcd = (from bnkb in _Data.BNKBs.Where(p => p.MaBNhan == mabn).Where(p => p.MaKP == makp)
                        select new
                        {
                            bnkb.MaICD,
                            bnkb.MaYHCT,
                            bnkb.ChanDoanYHCT,
                            bnkb.MaYHCT2,
                            bnkb.BenhKhacYHCT,
                            bnkb.ChanDoanBD,
                            bnkb.ChanDoan,
                            bnkb.MaKP,
                            bnkb.Buong,
                            bnkb.Giuong,
                            bnkb.BenhKhac,
                            bnkb.IDKB,
                            bnkb.MaICD2
                        }).OrderByDescending(p => p.IDKB).ToList();
            if (kbcd.Count > 0)
            {
                string arrcdbd = "";
                if (kbcd.First().ChanDoanBD != null && kbcd.First().ChanDoanBD != "")
                    arrcdbd = kbcd.First().ChanDoanBD;
                arrTT[0] = DungChung.Ham.FreshString(kbcd.First().MaICD + ";" + kbcd.First().MaICD2);
                if (DungChung.Bien.MaBV == "27183")
                {
                    arrTT[1] = (CDBD == true && arrcdbd != null && arrcdbd != "") ? (DungChung.Ham.GetICDstr(kbcd.First().ChanDoan + ";" + kbcd.First().BenhKhac)) : DungChung.Ham.GetICDstr(kbcd.First().ChanDoan + ";" + kbcd.First().BenhKhac);
                }
                else
                {
                    if (DungChung.Bien.MaBV == "30372")
                    {
                        arrTT[1] = (CDBD == true && arrcdbd != null && arrcdbd != "") ? (arrcdbd + ";" + DungChung.Ham.GetICDstr(kbcd.First().ChanDoan + ";" + kbcd.First().BenhKhac)) : DungChung.Ham.GetICDstr(kbcd.First().ChanDoan + ";" + kbcd.First().BenhKhac);
                    }
                    else
                    {
                        arrTT[1] = (CDBD == true && arrcdbd != null && arrcdbd != "") ? (/*arrcdbd + ";" +*/ DungChung.Ham.GetICDstr(kbcd.First().ChanDoan + ";" + kbcd.First().BenhKhac)) : DungChung.Ham.GetICDstr(kbcd.First().ChanDoan + ";" + kbcd.First().BenhKhac);
                    }
                }
                arrTT[2] = kbcd.First().Buong == null ? "" : kbcd.First().Buong;
                arrTT[3] = kbcd.First().Giuong == null ? "" : kbcd.First().Giuong;
                arrTT[5] = DungChung.Ham.FreshString(kbcd.First().MaYHCT + ";" + kbcd.First().MaYHCT2);
                arrTT[6] = DungChung.Ham.FreshString(kbcd.First().ChanDoanYHCT + ";" + kbcd.First().BenhKhacYHCT);
            }

            var qkp = (from kp in _Data.KPhongs
                       where (kp.MaKP == (makp))
                       select new { kp.TenKP }).ToList();
            if (qkp.Count > 0)
            {
                arrTT[4] = qkp.First().TenKP;
            }
            return arrTT;
        }

        #endregion
        #region _update Trong DM =0 với BN dịch vụ

        public static void _updateTrongDM_Dtct(QLBV_Database.QLBVEntities _data, int _mabn)
        {
            string _doiTuongBH_DV = "";
            var bn = _data.BenhNhans.Where(p => p.MaBNhan == _mabn).ToList();
            if (bn.Count > 0)
            {
                _doiTuongBH_DV = bn.First().DTuong;
            }
            if (_doiTuongBH_DV == "Dịch vụ")
            {
                var update = (from dt in _data.DThuocs.Where(p => p.MaBNhan == _mabn)
                              join dtct in _data.DThuoccts on dt.IDDon equals dtct.IDDon
                              select dtct).ToList();
                if (update.Count > 0)
                {
                    foreach (var a in update)
                    {
                        a.TrongBH = 0;
                    }

                    _data.SaveChanges();
                }
            }
        }

        #endregion

        public static string _GetCHuoiChanDoanYHCT(string CDICD10, string CDYHCT)
        {
            string kq = "";
            if (CDYHCT.Contains(";") && CDICD10.Contains(";"))
            {
                string[] _arricd10 = CDICD10.Split(';').Where(p => p != "").ToArray();
                string[] _arryhct = CDYHCT.Split(';').Where(p => p != "").ToArray();
                if (_arricd10.Length == _arryhct.Length)
                {
                    for (int i = 0; i < _arryhct.Length; i++)
                    {
                        kq += _arryhct[i] + " [" + _arricd10[i] + "];";
                    }
                }
                else if (_arryhct.Length < _arricd10.Length)
                {
                    int a = 0;
                    for (int i = 0; i < _arryhct.Length; i++)
                    {
                        kq += _arryhct[i] + " [" + _arricd10[i] + "];";
                        a++;
                    }
                    string b = "";
                    for (int x = a; x < _arricd10.Length; x++)
                    {
                        b += _arricd10[x] + ";";
                    }
                    kq += b;
                }
                else
                {
                    kq = CDYHCT + " [" + CDICD10 + "]";
                }
            }
            else
            {
                kq = CDYHCT + " [" + CDICD10 + "]";
            }
            return kq;
        }

        #region _kiểm tra tạm thu cận lâm sàng

        /// <summary>
        /// true: đã tạm thu
        /// false: chưa tạm thu
        /// </summary>
        /// <param name="IDCD"></param>
        /// <returns></returns>
        public static bool _checkTamThu(QLBV_Database.QLBVEntities _data, int _mabn, int _IDCLS)
        {
            var bn = _data.BenhNhans.Where(p => p.MaBNhan == _mabn).ToList();
            var ttbx = _data.TTboXungs.Where(p => p.MaBNhan == _mabn).ToList();
            int _noitru = -1, HTTT = 0;
            string _doituong = "";

            if (bn.Count > 0)
            {
                _noitru = bn.First().NoiTru.Value;
                _doituong = bn.First().DTuong;
            }
            if (ttbx.Count > 0)
                HTTT = ttbx.First().HTThanhToan;
            if (_noitru == 0)
            {
                var kt = _data.ChiDinhs.Where(p => p.IdCLS == _IDCLS).ToList();
                if (kt.Count > 0)
                {
                    foreach (var item in kt)
                    {
                        var kt11 = (from cd in _data.ChiDinhs.Where(x => x.IDCD == item.IDCD)
                                    join tu in _data.TamUngs.Where(o => o.PhanLoai == 3 || o.PhanLoai == 0) on cd.SoPhieu equals tu.IDTamUng
                                    select tu).FirstOrDefault();
                        if (kt11 != null)
                        {
                            if (kt11.DuyetPhieuThu == false)
                            {
                                if (kt11.PhanLoai == 0 || kt11.PhanLoai == 4 || kt11.PhanLoai == 8)
                                {
                                    return true;
                                }
                                else
                                {
                                    return false;
                                }
                            }
                            else
                            {
                                return true;
                            }
                        }
                        else
                        {
                            if(DungChung.Bien.MaBV == "24272")
                            {
                                MessageBox.Show("Bệnh nhân chưa có tạm ứng");
                            }    
                            return false;
                        }
                    }
                }
                //if (kt.Count > 0)
                //{
                //    if (Bien.TamThuCLS == 1 && HTTT != 1)
                //    {
                //        foreach (var a in kt)
                //        {
                //            if ((a.Status == 0 || a.Status == null) && (a.SoPhieu == null || a.SoPhieu <= 0))
                //            {
                //                MessageBox.Show("Bệnh nhân chưa nộp tiền dịch vụ. Bạn không thể thực hiện!");
                //                return false;
                //            }
                //        }
                //    }
                //    if (Bien.TamThuCLS == 2 && HTTT != 1)
                //    {
                //        if (_doituong != "BHYT")
                //        {
                //            if (Bien.MaBV == "01071" || Bien.MaBV == "01830" || Bien.MaBV == "01049" || Bien.MaBV == "30303")//a quý y/c 13-04 đức
                //            {
                //                var _ltamthu = _data.TamUngs.Where(p => p.MaBNhan == _mabn).Where(p => p.PhanLoai == 0).ToList();
                //                var _lcd = (from cls in _data.CLS.Where(p => p.MaBNhan == _mabn)
                //                            join cd in _data.ChiDinhs.Where(p => p.Status == 0 || p.Status == null).Where(p => p.SoPhieu == null || p.SoPhieu <= 0) on cls.IdCLS equals cd.IdCLS
                //                            select cd).Distinct().ToList();
                //                var _lcls = _lcd.Where(p => p.IdCLS == _IDCLS).ToList();
                //                if (_lcls.Count > 0)
                //                {
                //                    var _ldthuoc = (from dt in _data.DThuocs.Where(p => p.MaBNhan == _mabn)
                //                                    join dtct in _data.DThuoccts.Where(p => p.ThanhToan == 0 && p.TrongBH != 2) on dt.IDDon equals dtct.IDDon
                //                                    select dtct).Distinct();
                //                    double TongTamThu = _ltamthu.Count() > 0 ? _ltamthu.Sum(p => p.SoTien) ?? 0 : 0;
                //                    double TongCPDthuoc = _ldthuoc.Count() > 0 ? _ldthuoc.Sum(p => p.ThanhTien) : 0;
                //                    double TongCPCDinh = 0;
                //                    foreach (var item in _lcd)
                //                    {
                //                        double _dongia = DungChung.Ham._getGiaDM(_data, item.MaDV == null ? 0 : item.MaDV.Value, item.TrongBH == null ? 1 : item.TrongBH.Value, _mabn, DateTime.Now);
                //                        TongCPCDinh += _dongia;
                //                    }
                //                    double TienChenh = TongTamThu - TongCPDthuoc - TongCPCDinh;
                //                    double ChiPhiDV = TongCPDthuoc + TongCPCDinh;
                //                    if (TienChenh < 0)
                //                    {
                //                        MessageBox.Show("Chi phí thuốc và dịch vụ của bệnh nhân đã vượt quá tổng Tạm Thu: " + TongTamThu.ToString("###,###.##") + "\nChi phí thuốc và dịch vụ: " + ChiPhiDV.ToString("###,###.##") + "\nCần Tạm Thu thêm để thực hiện dịch vụ!");
                //                        return false;
                //                    }
                //                }
                //                else
                //                    return true;
                //            }
                //            else
                //            {
                //                foreach (var a in kt)
                //                {
                //                    if ((a.Status == 0 || a.Status == null) && (a.SoPhieu == null || a.SoPhieu <= 0))// && _doituong != "BHYT"
                //                    {
                //                        MessageBox.Show("Bệnh nhân chưa nộp tiền dịch vụ. Bạn không thể thực hiện!");
                //                        return false;
                //                    }
                //                }
                //            }
                //        }
                //    }
                //    if (Bien.TamThuCLS == 3 && HTTT != 1)
                //    {
                //        if (_doituong == "Dịch vụ")
                //        {
                //            if (Bien.MaBV == "01071" || Bien.MaBV == "01830" || Bien.MaBV == "01049" || Bien.MaBV == "30303")//a quý y/c 13-04 đức
                //            {
                //                var _ltamthu = _data.TamUngs.Where(p => p.MaBNhan == _mabn).Where(p => p.PhanLoai == 0).ToList();
                //                var _lcd = (from cls in _data.CLS.Where(p => p.MaBNhan == _mabn)
                //                            join cd in _data.ChiDinhs.Where(p => p.Status == 0 || p.Status == null).Where(p => p.SoPhieu == null || p.SoPhieu <= 0) on cls.IdCLS equals cd.IdCLS
                //                            select cd).Distinct().ToList();
                //                var _ldthuoc = (from dt in _data.DThuocs.Where(p => p.MaBNhan == _mabn)
                //                                join dtct in _data.DThuoccts.Where(p => p.ThanhToan == 0 && p.TrongBH != 2) on dt.IDDon equals dtct.IDDon
                //                                select dtct).Distinct();
                //                double TongTamThu = _ltamthu.Count() > 0 ? _ltamthu.Sum(p => p.SoTien) ?? 0 : 0;
                //                double TongCPDthuoc = _ldthuoc.Count() > 0 ? _ldthuoc.Sum(p => p.ThanhTien) : 0;
                //                double TongCPCDinh = 0;
                //                foreach (var item in _lcd)
                //                {
                //                    double _dongia = DungChung.Ham._getGiaDM(_data, item.MaDV == null ? 0 : item.MaDV.Value, item.TrongBH == null ? 1 : item.TrongBH.Value, _mabn, DateTime.Now);
                //                    TongCPCDinh += _dongia;
                //                }
                //                double TienChenh = TongTamThu - TongCPDthuoc - TongCPCDinh;
                //                double ChiPhiDV = TongCPDthuoc + TongCPCDinh;
                //                if (TienChenh < 0)
                //                {
                //                    MessageBox.Show("Chi phí thuốc và dịch vụ của bệnh nhân đã vượt quá tổng Tạm Thu: " + TongTamThu.ToString("###,###.##") + "\nChi phí thuốc và dịch vụ: " + ChiPhiDV.ToString("###,###.##") + "\nCần Tạm Thu thêm để thực hiện dịch vụ!");
                //                    return false;
                //                }
                //            }
                //            else
                //            {
                //                foreach (var a in kt)
                //                {
                //                    if ((a.Status == 0 || a.Status == null) && (a.SoPhieu == null || a.SoPhieu <= 0))// && _doituong != "BHYT"
                //                    {
                //                        MessageBox.Show("Bệnh nhân chưa nộp tiền dịch vụ. Bạn không thể thực hiện!");
                //                        return false;
                //                    }
                //                }
                //            }
                //        }
                //        else
                //        {
                //            foreach (var a in kt)
                //            {
                //                if ((a.Status == 0 || a.Status == null) && (a.SoPhieu == null || a.SoPhieu <= 0) && a.TrongBH == 0)
                //                {
                //                    MessageBox.Show("Bệnh nhân chưa nộp tiền dịch vụ. Bạn không thể thực hiện!");
                //                    return false;
                //                }
                //            }
                //        }
                //    }
                //}
            }
            else
            {
                if (_doituong == "Dịch vụ" && HTTT != 1)
                {
                    if (Bien.MaBV == "01071" || Bien.MaBV == "01830" || Bien.MaBV == "01049")//a quý y/c 13-04 đức
                    {
                        var _ltamthu = _data.TamUngs.Where(p => p.MaBNhan == _mabn).Where(p => p.PhanLoai == 0).ToList();
                        var _lcd = (from cls in _data.CLS.Where(p => p.MaBNhan == _mabn)
                                    join cd in _data.ChiDinhs.Where(p => p.Status == 0 || p.Status == null).Where(p => p.SoPhieu == null || p.SoPhieu <= 0) on cls.IdCLS equals cd.IdCLS
                                    select cd).Distinct().ToList();
                        var _ldthuoc = (from dt in _data.DThuocs.Where(p => p.MaBNhan == _mabn)
                                        join dtct in _data.DThuoccts.Where(p => p.ThanhToan == 0 && p.TrongBH != 2) on dt.IDDon equals dtct.IDDon
                                        select dtct).Distinct();
                        double TongTamThu = _ltamthu.Count() > 0 ? _ltamthu.Sum(p => p.SoTien) ?? 0 : 0;
                        double TongCPDthuoc = _ldthuoc.Count() > 0 ? _ldthuoc.Sum(p => p.ThanhTien) : 0;
                        double TongCPCDinh = 0;
                        foreach (var item in _lcd)
                        {
                            double _dongia = DungChung.Ham._getGiaDM(_data, item.MaDV == null ? 0 : item.MaDV.Value, item.TrongBH == null ? 1 : item.TrongBH.Value, _mabn, DateTime.Now);
                            TongCPCDinh += _dongia;
                        }
                        double TienChenh = TongTamThu - TongCPDthuoc - TongCPCDinh;
                        double ChiPhiDV = TongCPDthuoc + TongCPCDinh;
                        if (TienChenh < 0)
                        {
                            MessageBox.Show("Chi phí thuốc và dịch vụ của bệnh nhân đã vượt quá tổng Tạm Thu: " + TongTamThu.ToString("###,###.##") + "\nChi phí thuốc và dịch vụ: " + ChiPhiDV.ToString("###,###.##") + "\nCần Tạm Thu thêm để thực hiện dịch vụ!");
                            return false;
                        }
                    }
                }
                return true;
            }
            return true;
        }

        #endregion

        #region Check tam thu theo IDCD

        public static bool _checkTamThu_IDCD(QLBV_Database.QLBVEntities _data, int _mabn, int _IDCD)
        {
            var bn = _data.BenhNhans.Where(p => p.MaBNhan == _mabn).ToList();
            int _noitru = -1;
            string _doituong = "";

            if (bn.Count > 0)
            {
                _noitru = bn.First().NoiTru.Value;
                _doituong = bn.First().DTuong;
            }
            if (_noitru == 0)
            {
                var kt = (from cd in _data.ChiDinhs.Where(p => p.IDCD == _IDCD)
                          select new { cd.Status, cd.SoPhieu, cd.TrongBH }).FirstOrDefault();
                if (kt != null)
                {
                    if (Bien.TamThuCLS == 1)
                    {
                        if ((kt.Status == 0 || kt.Status == null) && (kt.SoPhieu == null || kt.SoPhieu <= 0))
                        {
                            MessageBox.Show("Bệnh nhân chưa nộp tiền dịch vụ. Bạn không thể thực hiện!");
                            return false;
                        }
                    }
                    if (Bien.TamThuCLS == 2)
                    {
                        if ((kt.Status == 0 || kt.Status == null) && (kt.SoPhieu == null || kt.SoPhieu <= 0) && _doituong != "BHYT")
                        {
                            MessageBox.Show("Bệnh nhân chưa nộp tiền dịch vụ. Bạn không thể thực hiện!");
                            return false;
                        }
                    }
                    if (Bien.TamThuCLS == 3)
                    {
                        if ((kt.Status == 0 || kt.Status == null) && (kt.SoPhieu == null || kt.SoPhieu <= 0) && kt.TrongBH == 0)
                        {
                            MessageBox.Show("Bệnh nhân chưa nộp tiền dịch vụ. Bạn không thể thực hiện!");
                            return false;
                        }
                    }
                }
            }
            else
            {
                return true;
            }
            return true;
        }

        #endregion
        #region _getTenCB

        public static string _getTenCB(QLBV_Database.QLBVEntities _data, string _macb)
        {
            string _ten = "";
            var cb = _data.CanBoes.Where(p => p.MaCB == _macb).ToList();
            if (cb.Count > 0)
            {
                if (!string.IsNullOrEmpty(cb.First().CapBac))
                {
                    _ten = cb.First().CapBac + ": " + cb.First().TenCB;
                }
                else
                {
                    _ten = cb.First().TenCB;
                }
            }
            return _ten;
        }

        #endregion
        #region class Báo cáo

        public class clsBaoCao
        {
            private string tenbc;
            private int id;
            private string ploai;
            private string mabv;
            private string kieu, nhom;
            private bool _public;

            private bool _Public
            {
                set { _public = value; }
                get { return _public; }
            }

            public string Nhom
            {
                set { nhom = value; }
                get { return nhom; }
            }

            public string Kieu
            {
                set { kieu = value; }
                get { return kieu; }
            }

            public string MaBV
            {
                set { mabv = value; }
                get { return mabv; }
            }

            public string TenBC
            {
                set { tenbc = value; }
                get { return tenbc; }
            }

            public int ID
            {
                set { id = value; }
                get { return id; }
            }

            public string Loai
            {
                set { ploai = value; }
                get { return ploai; }
            }
        }

        #endregion
        #region Phân quyền

        /// <summary>
        /// 0:mới
        /// 1:sửa
        /// 2:Xóa
        /// 3:Xem
        /// </summary>
        /// <param name="idForm"></param>
        /// <param name="machucnang"> Thêm = 1; sửa =2; xóa =3; xem =4</param>
        /// <returns></returns>
        public static bool[] checkQuyen(string tenform_Bc)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(Bien.StrCon);
            int idForm = DungChung.Ham.getIDForm(tenform_Bc);
            List<Permission> list = data.Permissions.ToList();
            var q = (from l in list select l).Where(p => p.ID == idForm).Where(p => p.TenDN == Bien.TenDN).ToList();
            if (q.Count <= 0)
            {
                if (idForm == 910)
                    return new bool[] { false, false, false, false, false };
                else
                    return new bool[] { true, true, true, true, true };
            }
            // return new bool[] { false, false, false, false };
            return new bool[] { q.First().C_New, q.First().C_Edit, q.First().C_Delete, q.First().C_View, q.First().C_Print };
        }

        public static bool[] checkQuyenFalse(string tenform_Bc)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(Bien.StrCon);
            if (data.ADMINs.Where(p => p.TenDN == Bien.TenDN).Select(p => p.CapDo).FirstOrDefault() == 9)
            {
                return new bool[] { true, true, true, true, true };
            }
            if (Bien.MaBV == "30009")
            {
                int idForm = DungChung.Ham.getIDForm(tenform_Bc);
                List<Permission> list = data.Permissions.ToList();
                var q = (from l in list select l).Where(p => p.ID == idForm).Where(p => p.TenDN == Bien.TenDN).ToList();
                if (q.Count <= 0)
                {
                    return new bool[] { false, false, false, false, false };
                }
                // return new bool[] { false, false, false, false };
                return new bool[] { q.First().C_New, q.First().C_Edit, q.First().C_Delete, q.First().C_View, q.First().C_Print };
            }

            return new bool[] { true, true, true, true, true };
        }

        //public class c_checkQuyen{
        //    private bool[] status;
        //    private string ten;
        //    public string TenChucNang {
        //        set { ten = value; }
        //        get { return ten; }
        //    }
        //    public bool[] Status
        //    {
        //        set { status = value; }
        //        get { return status; }
        //    }
        //}

        //public static c_checkQuyen checkQuyen(string tenform_Bc, string chucnang)
        //{
        //    List<c_checkQuyen> _l_checkQuyen = new List<c_checkQuyen>();
        //    QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(Bien.StrCon);
        //    int idForm = DungChung.Ham.getIDForm(tenform_Bc);
        //    List<Permission> list = data.Permissions.ToList();
        //    return _l_checkQuyen;
        //    //var q = (from l in list select l).Where(p => p.ID == idForm).Where(p => p.TenDN == Bien.TenDN).ToList();
        //    //if (q.Count <= 0)
        //    //{
        //    //    _l_checkQuyen.Add(new c_checkQuyen{TenChucNang=chucnang;})
        //    //    return new bool[] { true, true, true, true, true };
        //    //}
        //    //// return new bool[] { false, false, false, false };
        //    //return new bool[] { q.First().C_New, q.First().C_Edit, q.First().C_Delete, q.First().C_View, q.First().C_Print };

        //}
        public static List<Library_CLS.Lis_His.limenu> _listBC = FormThamSo.us_menubc.SetDM(); //Library_CLS.Lis_His.SetDM();

        public static int getIDForm(string formName)
        {
            int rs = 0;
            var q = _listBC.ToList().Where(p => p.TenBC == formName).ToList();
            if (q.Count > 0)
                rs = Convert.ToInt32(q.First().ID);
            return rs;
        }

        #endregion

        public static int hangBV(string mabv)
        {
            try
            {
                int hang = 3;
                QLBV_Database.QLBVEntities _dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
                string tuyen = "";
                var hangBV = _dataContext.BenhViens.Where(p => p.MaBV == mabv).ToList();
                if (hangBV.Count > 0 && hangBV.First().HangBV != null)
                {
                    hang = hangBV.First().HangBV.Value;
                    tuyen = hangBV.First().TuyenBV.Trim();
                }
                //  Bien.MaTinh = "12";
                //quynv các BV trên lai châu tt theo hạng Bien.MaBV != "12128" && Bien.MaBV != "12038" ngày 16/03
                if ((Bien.MaTinh == "12" && (Bien.MaBV != "12128" && Bien.MaBV != "12038")) || Bien.MaBV == "24009" || Bien.MaBV == "27022" || Bien.MaBV == "27021" || Bien.MaBV == "20001" || Bien.MaBV == "26062" || (Bien.MaTinh == "30" && Bien.MaBV != "30280" && Bien.MaBV != "30340")) //lên hạng 2 nhưng vẫn để trái tuyến đoài y.c 11-01 30340,30280 thanh toán theo hạng 26-01-2018 a.quý //bệnh xá c.an vĩnh phúc 26062 02/05
                {
                    switch (tuyen)
                    {
                        case "A":
                            hang = 1;
                            break;

                        case "B":
                            hang = 2;
                            break;

                        case "C":
                            hang = 3;
                            break;

                        case "D":
                            hang = 4;
                            break;
                    }
                }
                return hang;
            }
            catch (Exception)
            {
                return 3;
            }
        }

        #region hang bv de tinh tien cong kham

        public static int hangBVCK(string mabv)
        {
            try
            {
                int hang = 3;
                QLBV_Database.QLBVEntities _dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
                string tuyen = "";
                var hangBV = _dataContext.BenhViens.Where(p => p.MaBV == mabv).ToList();
                if (hangBV.Count > 0 && hangBV.First().HangBV != null)
                {
                    hang = hangBV.First().HangBV.Value;
                    tuyen = hangBV.First().TuyenBV.Trim();
                }
                if (Bien.MaBV == "04247" || Bien.MaBV == "12128" || Bien.MaBV == "12038" || Bien.MaBV == "30280" || Bien.MaBV == "27001" || Bien.MaBV == "30340" || Bien.MaBV == "27183" || Bien.MaBV == "27194" || Bien.MaBV == "04256")
                {
                    switch (tuyen)
                    {
                        case "A":
                            hang = 1;
                            break;

                        case "B":
                            hang = 2;
                            break;

                        case "C":
                            hang = 3;
                            break;

                        case "D":
                            hang = 4;
                            break;
                    }
                }
                return hang;
            }
            catch (Exception)
            {
                return 3;
            }
        }

        #endregion
        #region thanh toán

        // 01/06/2017 thanh toán VTYT theo TT04/2017/BYT tạm thời tách 2 dịch vụ đối với các vtyt có chi phí > quy định trong phụ lục 1 kèm thông tu
        public static bool ThanhToan_VTYT_TT04(int iddonct, double dongia)
        {
            QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(Bien.StrCon);
            var vpctord = _data.VienPhicts.Where(p => p.idVPhict == iddonct).FirstOrDefault();
            if (vpctord == null)
                return false;
            if (Bien.MaBV == "27022")
            {
                //vpctord.TienBN = vpctord.ThanhTien - vpctord.TienBH;
                vpctord.TBNTT = vpctord.ThanhTien - vpctord.TienBH - vpctord.TBNCTT;
                vpctord.TienBN = vpctord.ThanhTien - vpctord.TienBH;
                _data.SaveChanges();
                return true;
            }
            else
            {
                VienPhict vpct = new VienPhict();
                vpct.NgayChiPhi = vpctord.NgayChiPhi;
                vpct.NgayYLenh = vpctord.NgayYLenh;
                vpct.TyLeTT = 100;
                vpct.MaKP = vpctord.MaKP;
                vpct.MaDV = vpctord.MaDV;
                vpct.DonGia = dongia;
                vpct.ThanhTien = vpctord.SoLuong * dongia;
                vpct.SoLuong = vpctord.SoLuong;
                vpct.SoLuongD = 0;
                vpct.TienChenh = 0;
                vpct.TienChenhBN = 0;
                vpct.DonVi = vpctord.DonVi;
                vpct.idVPhi = vpctord.idVPhi;
                vpct.ThanhToan = vpctord.ThanhToan;
                vpct.Mien = vpctord.Mien;
                vpct.XHH = vpctord.XHH;
                vpct.TienBN = vpctord.SoLuong * dongia;
                vpct.TBNTT = vpctord.SoLuong * dongia;
                vpct.TBNCTT = 0;
                vpct.TienBH = 0;
                vpct.TrongBH = 0;
                vpct.TyLeBHTT = 0;
                vpct.TyLeTT = 0;
                vpct.MaKXuat = vpctord.MaKXuat;
                _data.VienPhicts.Add(vpct);
                _data.SaveChanges();
                return true;
            }
        }

        /// <summary>
        /// dùng để kiểm tra bệnh nhân đã cho vào viện nhưng nếu chưa phát sinh chi phí nào trong khoa (ht áp dụng cho 27021 và 01830)
        /// trả về true: nếu là bn bình thường; trả về false nếu là bệnh nhân vào viện nhưng chưa điều trị trong khoa
        /// </summary>
        /// <returns></returns>
        public static bool ktBNNoiNgoaiTru(int mabn)
        {
            bool kt = true;
            if (Bien.MaBV == "27021" || Bien.MaBV == "01830")
            {
                QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(Bien.StrCon);
                var qbn = data.BenhNhans.Where(p => p.MaBNhan == mabn).FirstOrDefault();
                if (qbn == null || (qbn.NoiTru == 0 && qbn.DTNT == false))
                    return true;
                else
                {
                    var qcls = (from cls in data.CLS.Where(p => p.MaBNhan == mabn)
                                join kp in data.KPhongs.Where(p => p.PLoai == Bien.st_PhanLoaiKP.LamSang) on cls.MaKP equals kp.MaKP
                                select cls).ToList();
                    if (qcls.Count > 0)
                        return true;

                    var qdv = (from dt in data.DThuocs.Where(p => p.MaBNhan == mabn)
                               join dtct in data.DThuoccts on dt.IDDon equals dtct.IDDon
                               join kp in data.KPhongs.Where(p => p.PLoai == Bien.st_PhanLoaiKP.LamSang) on dtct.MaKP equals kp.MaKP
                               join dv in data.DichVus on dtct.MaDV equals dv.MaDV
                               select new { dv.PLoai, dtct.Status, dtct.SoLuong, dv.MaDV, dt.KieuDon }).ToList();
                    if (qdv.Count == 0)
                        return false;
                    if (qdv.Where(p => p.PLoai == 2).Count() > 0)
                        return true;
                    else
                    {
                        var qdaxuat = (from dv in qdv.Where(p => p.Status == 1) group dv by new { dv.MaDV } into kq select new { kq.Key.MaDV, SoLuong = kq.Sum(p => p.SoLuong) }).Where(p => p.SoLuong != 0).ToList();
                        if (qdaxuat.Count > 0)
                            return true;
                        var qChuaXuat = (from dv in qdv.Where(p => p.Status == 0) group dv by new { dv.MaDV, KieuDon = dv.KieuDon == 2 ? 1 : 0 } into kq select new { kq.Key.MaDV, kq.Key.KieuDon, SoLuong = kq.Sum(p => p.SoLuong) }).Where(p => p.SoLuong != 0).ToList();
                        if (qChuaXuat.Count > 0)
                            return true;
                        return false;
                    }
                }
            }

            return kt;
        }

        // update mã cb
        private static bool updateMaCB(int mabn)
        {
            QLBV_Database.QLBVEntities db = new QLBV_Database.QLBVEntities(Bien.StrCon);
            var tong = (from kd in db.DThuocs.Where(p => p.MaBNhan == mabn)
                        join kdct in db.DThuoccts.OrderBy(p => p.IDDonct) on kd.IDDon equals kdct.IDDon
                        select new { kd.PLDV, kd.MaCB, kdct }).ToList();
            var macbdt = db.BNKBs.Where(p => p.MaBNhan == mabn).OrderByDescending(p => p.IDKB).Select(p => p.MaCB).FirstOrDefault();
            foreach (var item in tong)
            {
                if (string.IsNullOrEmpty(item.kdct.MaCB))
                {
                    var dtct = db.DThuoccts.Single(p => p.IDDonct == item.kdct.IDDonct);
                    if (item.PLDV == 1)
                    {
                        dtct.MaCB = item.MaCB;
                    }
                    else
                    {
                        dtct.MaCB = macbdt;
                    }
                    db.SaveChanges();
                }
            }
            return true;
        }

        //
        //
        // update MaKXuat và MACB 21-12 đức
        public static void UpDateMaKXuat(QLBV_Database.QLBVEntities _data)
        {
            try
            {
                var _ldthuoc = (from dt in _data.DThuocs.Where(p => p.PLDV == 1).Where(p => p.MaKXuat != null)
                                join dtct in _data.DThuoccts.Where(p => p.MaKXuat == null) on dt.IDDon equals dtct.IDDon
                                select new { dt.IDDon, dt.MaKXuat }).ToList();
                foreach (var item in _ldthuoc)
                {
                    var _ldthct = _data.DThuoccts.Where(p => p.IDDon == item.IDDon).Where(p => p.MaKXuat == null).ToList();
                    foreach (var i in _ldthct)
                    {
                        DThuocct sua = _data.DThuoccts.Where(p => p.IDDonct == i.IDDonct).First();
                        if (sua.MaKXuat == null)
                            sua.MaKXuat = item.MaKXuat;
                    }
                }
                if (_ldthuoc.Count > 0)
                    _data.SaveChanges();

                //var _ldthuoc2 = (from dt in _data.DThuocs.Where(p => p.PLDV == 1).Where(p => p.MaCB != null || p.MaCB != "")
                //                 join dtct in _data.DThuoccts.Where(p => p.MaCB == null || p.MaCB.Trim() == "") on dt.IDDon equals dtct.IDDon
                //                 select new { dt.IDDon, dt.MaCB }).ToList();
                //foreach (var item in _ldthuoc2)
                //{
                //    var _ldthct = _data.DThuoccts.Where(p => p.IDDon == item.IDDon).Where(p => p.MaCB == null || p.MaCB.Trim() == "").ToList();
                //    foreach (var i in _ldthct)
                //    {
                //        DThuocct sua = _data.DThuoccts.Where(p => p.IDDonct == i.IDDonct).First();
                //        sua.MaCB = item.MaCB;
                //    }
                //}
                //if (_ldthuoc2.Count > 0)
                //    _data.SaveChanges();
            }
            catch (Exception e)
            {
                MessageBox.Show("Lỗi update MaKXuat và MaCB: " + e.ToString());
            }
        }

        public static bool Ktra2The(QLBV_Database.QLBVEntities _dataContext, int _mabn)
        {
            TTboXung ttbx = _dataContext.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault();
            BenhNhan ttbn = _dataContext.BenhNhans.Where(p => p.MaBNhan == _mabn).FirstOrDefault();
            if (ttbx != null && ttbn != null)
            {
                if (string.IsNullOrEmpty(ttbx.TTTheBHYTold))
                {
                    return false;
                }
                else
                {
                    if (ttbx.TTTheBHYTold.Contains(";"))
                    {
                        string[] ttthenew = DungChung.Ham.FreshString(ttbx.TTTheBHYTold).Split(';');
                        if (ttthenew.Length == 9)
                        {
                            string stheold = ttbn.SThe;
                            string sthenew = ttthenew[0];
                            DateTime Hantu = Convert.ToDateTime(ttthenew[5]);
                            DateTime Handen = Convert.ToDateTime(ttthenew[6]);
                            string Macs = ttthenew[7];
                            string mucnew = sthenew.Substring(2, 1);
                            string mucold = stheold.Substring(2, 1);
                            if (mucold == mucnew && sthenew != stheold)
                            {
                                return false;
                            }
                            else
                            {
                                return true;
                            }
                        }
                    }
                    else
                    {
                        return false;
                    }
                }
            }
            return false;
        }

        public static bool ThanhToan2The(QLBV_Database.QLBVEntities _dataContext, int _mabn, DateTime dtNgayTT)
        {
            DateTime _ngayTachThe = dtNgayTT;
            try
            {
                //try
                //{
                int _HTTT = -1;
                string _muc = "";
                double _tienBH = 0;
                int _pttt = 0, _ptttnew = 0;
                int _tuyen = 1;
                int idvp = 0;
                string _DTuong = "";
                int _HangBV = 3;
                bool ttoan = true;
                bool _ktraBNDieuTri = true;
                var bn = _dataContext.BenhNhans.Where(p => p.MaBNhan == _mabn).ToList();
                if (DungChung.Ham.KTCongKhamTyLe100(_dataContext, bn.First().IDPerson ?? 0) == false)
                {
                    MessageBox.Show("Bệnh nhân không có công khám nào có tỷ lệ thanh toán là 100%");
                    return false;
                }
                List<RaVien> ravien = new List<RaVien>();
                ravien = _dataContext.RaViens.Where(p => p.MaBNhan == _mabn).ToList();
                var kttt = _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn).ToList();
                var kt = (from ds in _dataContext.DThuocs.Where(p => p.MaBNhan == _mabn)
                          join dtct in _dataContext.DThuoccts on ds.IDDon equals dtct.IDDon
                          select new { dtct, ds }).OrderBy(p => p.ds.IDDon).ToList();
                double sotienTT = 0;
                var ngaykemax = kt.Max(p => p.dtct.NgayNhap);
                int _noitru = 0; bool _dtnt = false;
                if (bn.Count > 0)
                {
                    _noitru = bn.First().NoiTru ?? 0;
                    _dtnt = bn.First().DTNT;
                }
                if (Bien.MaBV == "30340" && _noitru == 0 && !_dtnt)
                {
                    var ngayKham = _dataContext.BNKBs.Where(o => o.MaBNhan == _mabn).Max(o => o.NgayKham);
                    if (ngayKham != null && dtNgayTT < ngayKham.Value.AddMinutes(10))
                    {
                        MessageBox.Show("Ngày thanh toán phải lớn hơn ngày khám 10 phút");
                        return false;
                    }
                }

                #region TH bệnh nhân vào viện nhưng không có phát sinh chi phí trong khoa
                _ktraBNDieuTri = ktBNNoiNgoaiTru(_mabn);
                if (!_ktraBNDieuTri)
                {
                    DialogResult _result = DialogResult.No;
                    _result = MessageBox.Show("Bệnh nhân " + bn.First().TenBNhan + " đã vào viện nhưng chưa có phát sinh chi phí trong khoa, bạn muốn cập nhật lại bệnh nhân thành khám bệnh ngoại trú ?", "Cập nhật bệnh nhân", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                    if (_result == DialogResult.Yes)
                    {
                        #region cập nhật lại thành bệnh nhân ngoại trú
                        var qkb = (from kb in _dataContext.BNKBs.Where(p => p.MaBNhan == _mabn)
                                   join kp in _dataContext.KPhongs.Where(p => p.PLoai == Bien.st_PhanLoaiKP.PhongKham) on kb.MaKP equals kp.MaKP
                                   select kb).OrderByDescending(p => p.IDKB).FirstOrDefault();
                        foreach (var a in bn)
                        {
                            a.NoiTru = 0;
                            if (qkb != null)
                                a.MaKP = qkb.MaKP;
                        }
                        // xóa vào viện
                        var qvv = _dataContext.VaoViens.Where(p => p.MaBNhan == _mabn).ToList();
                        foreach (var a in qvv)
                        {
                            _dataContext.VaoViens.Remove(a);
                        }
                        // xóa BNKB

                        var qkbNT = (from kb in _dataContext.BNKBs.Where(p => p.MaBNhan == _mabn)
                                     join kp in _dataContext.KPhongs.Where(p => p.PLoai == Bien.st_PhanLoaiKP.LamSang) on kb.MaKP equals kp.MaKP
                                     select kb).ToList();
                        foreach (var a in qkbNT)
                        {
                            _dataContext.BNKBs.Remove(a);
                        }

                        _dataContext.SaveChanges();

                        // cập nhật lại mã kp điều trị trong bảng BNKB
                        var qBNKBConLai = (from kb in _dataContext.BNKBs.Where(p => p.MaBNhan == _mabn)
                                           join kp in _dataContext.KPhongs on kb.MaKP equals kp.MaKP
                                           select kb).ToList();
                        foreach (var a in qBNKBConLai)
                        {
                            a.MaKPdt = a.MaKP;
                            if (a.PhuongAn == 1)
                                a.PhuongAn = 0;
                        }

                        _dataContext.SaveChanges();

                        //? new QLBV_Database.QLBVEntities ?
                        #endregion
                    }
                    else
                        return false;
                }
                #endregion

                if (DungChung.Ham._checkNgayKhoa(_dataContext, dtNgayTT, "KhoaVP"))
                {
                    return false;
                }
                if (DungChung.Ham.KTCongKham_ngaygiuong(_dataContext, _mabn) == true)
                {
                    return false;
                }
                if (_mabn <= 0)
                {
                    return false;
                }
                int _tyle = 0;
                string tencd = "";

                tencd = DungChung.Ham.KTChiDinh(_dataContext, _mabn);
                if (!string.IsNullOrEmpty(tencd))
                {
                    bool _TToan_chuaTHien = true; // trạng thái thực hiện cận lâm sàng
                    if (Bien.MaBV == "30002" || Bien.MaBV == "01071" || Bien.MaBV == "01049")
                    {
                        _TToan_chuaTHien = false;
                    }
                    if (_TToan_chuaTHien)
                    {
                        DialogResult _result = MessageBox.Show("Bệnh nhân có các chỉ định CLS chưa được thực hiện:\n " + tencd + "Bạn vẫn muốn thanh toán?", "Hỏi thanh toán", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                        if (_result == DialogResult.No)
                            return false;
                    }
                    else
                    {
                        MessageBox.Show("Bệnh nhân có các chỉ định CLS chưa được thực hiện:\n " + tencd + "Bạn không thể thanh toán?", "Hỏi thanh toán");
                        return false;
                    }
                }
                if (ttoan)
                {
                    if (DungChung.Ham._KTBN_TT_TrongNgay(_dataContext, _mabn, dtNgayTT))
                    {
                        DialogResult _result = MessageBox.Show("Bệnh nhân đã thanh toán trong ngày: \n " + dtNgayTT.Date + "Bạn vẫn muốn thanh toán?", "Hỏi thanh toán", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                        if (_result == DialogResult.No)
                            ttoan = false;
                    }
                    else if ((Bien.MaBV == "27183" || Bien.MaBV == "27001") && !DungChung.Ham._KTBN_KetThucKham(_dataContext, _mabn))
                    {
                        DialogResult _result = MessageBox.Show("Bệnh nhân chưa kết thúc khám, Bạn không thể thanh toán", "Thông báo");
                        ttoan = false;
                    }
                }

                if (kt.Count == 0)
                {
                    MessageBox.Show("Bệnh nhân chưa phát sinh chi phí");
                    ttoan = false;
                }
                else if (dtNgayTT < ngaykemax && _noitru == 0 && _dtnt == false) //(DungChung.Ham.NgayTu(dtNgayTT) < DungChung.Ham.NgayTu(kt.First().NgayKe.Value))
                {
                    var kt1 = kt.Where(p => p.dtct.NgayNhap > dtNgayTT).ToList();
                    bool T = false;
                    foreach (var item in kt1)
                    {
                        var soLuong = item.dtct.SoLuong;
                        if (soLuong >= 0)
                        {
                            T = true;
                            break;
                        }
                    }
                    if (T)
                    {
                        MessageBox.Show("Ngày thanh toán không được < ngày kê đơn");
                        ttoan = false;
                    }
                }

                if (bn.Count > 0)
                    _DTuong = bn.First().DTuong;

                if (!ttoan)
                    return false;
                if (Bien.MaBV == "30002")
                {
                    string dsdon = FormNhap.frm_Ravien.CheckDonChuaLinh(_mabn);
                    if (!string.IsNullOrEmpty(dsdon))
                    {
                        DialogResult _result = MessageBox.Show("Bệnh nhân có các đơn thuốc chưa lĩnh :\n " + dsdon + "Bạn vẫn muốn Thanh toán cho bệnh nhân?", "Hỏi ra viện", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                        if (_result == DialogResult.No)
                            return false;
                    }
                }
                int _dtkham = -1;

                int ktntru = -1;
                if (bn.Count > 0)
                {
                    ktntru = bn.First().NoiTru.Value;
                    _dtkham = bn.First().IDDTBN;
                    var dt = _dataContext.DTBNs.Where(p => p.IDDTBN == _dtkham).Select(p => p.HTTT).ToList();
                    if (dt.Count > 0)
                    {
                        _HTTT = dt.First();
                    }
                }

                if (ktntru > 0)
                {
                    if (ravien.Count <= 0)
                    {
                        MessageBox.Show("Bệnh nhân chưa làm thủ tục ra viện, Bạn không thể thanh toán");
                        return false;
                    }
                    else
                    {
                        if (Bien.MaBV == "30005")
                        {
                            double songaygiuong = FormNhap.frm_Ravien._getSoNgayGiuong(_dataContext, _mabn);
                            int songaydt = ravien.First().SoNgaydt.Value;
                            int chenh = Convert.ToInt32(songaygiuong) - songaydt;
                            if (chenh != 0)
                            {
                                if (MessageBox.Show("Số ngày giường: " + songaygiuong + "không khớp số ngày điều trị: " + songaydt + "\n Bạn vẫn muốn thanh toán?", "Thông báo", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.No)
                                    return false;
                            }
                        }
                    }
                }
                else
                {
                    if (dtNgayTT > DateTime.Now && DungChung.Bien.MaBV != "24272")
                    {
                        MessageBox.Show("Ngày giờ thanh toán phải <= ngày giờ hiện tại");
                        return false;
                    }
                    if (ravien.Count <= 0)
                    {
                        if (bn.First().DTNT)
                        {
                            MessageBox.Show("Bệnh nhân chưa làm thủ tục ra viện, Bạn không thể thanh toán");
                            return false;
                        }
                        else
                        {
                            if (_LuuXoaRaVien(_dataContext, _mabn, dtNgayTT.AddMinutes(-1), "Luu", 2) == false)
                                return false;
                        }
                    }
                }
                if (ravien.Count > 0 && ravien.First().NgayRa != null && dtNgayTT != null)
                {
                    if ((dtNgayTT < ravien.First().NgayRa.Value))
                    {
                        MessageBox.Show("ngày giờ thanh toán không hợp lệ! \n ngày TT: " + dtNgayTT.ToLongDateString() + "ngày ra viện " + ravien.First().NgayRa.Value.ToLongDateString());
                        return false;
                    }
                }
                var qdienbien = _dataContext.DienBiens.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayNhap > dtNgayTT).ToList();
                if (qdienbien.Count > 0)
                {
                    MessageBox.Show("Ngày thanh toán không được nhỏ hơn ngày diễn biến");
                    return false;
                }
                #region update MKP

                if (ravien.Count > 0)
                {
                    var qvphi = (from vp in _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn)
                                 join vpct in _dataContext.VienPhicts.Where(p => p.MaKP == null || p.MaKP <= 0) on vp.idVPhi equals vpct.idVPhi
                                 select vpct).ToList();
                    foreach (var item in qvphi)
                    {
                        VienPhict vpct = _dataContext.VienPhicts.Single(p => p.idVPhict == item.idVPhict);
                        vpct.MaKP = ravien.First().MaKP;
                    }
                }
                #endregion
                if (ttoan)
                {
                    _dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);

                    ravien = _dataContext.RaViens.Where(p => p.MaBNhan == _mabn).ToList();
                    string _dtuong = "";
                    int _vanchuyen = -1;//9
                    double _tienvc = 0;
                    decimal _luongCS = 0;
                    string _khuvuc = "";
                    int noitru = 0;
                    string _sothe = "";
                    string mucnew = "";
                    int _idpersion = 0, _idpersionnew = 0;
                    if (bn.Count > 0)
                    {
                        if (bn.First().SThe != null)
                            _sothe = bn.First().SThe;
                        if (bn.First().LuongCS != null)
                            _luongCS = bn.First().LuongCS.Value;
                        if (bn.First().KhuVuc != null)
                        {
                            if (bn.First().KhuVuc.ToString().Contains("K"))
                                _khuvuc = bn.First().KhuVuc;
                        }
                        if (bn.First().HanBHDen != null)
                        {
                            var ttbxs = _dataContext.TTboXungs.Where(p => p.MaBNhan == _mabn).ToList();
                            if (ttbxs.Count() > 0)
                            {
                                if (!string.IsNullOrEmpty(ttbxs.First().TTTheBHYTold))
                                {
                                    if (ttbxs.First().TTTheBHYTold.Split(';').Length > 4)
                                    {
                                        if (bn.First().HanBHDen.Value.Date > Convert.ToDateTime(ttbxs.First().TTTheBHYTold.Split(';')[5]).Date)
                                        {
                                            _ngayTachThe = DungChung.Ham.NgayDen(Convert.ToDateTime(ttbxs.First().TTTheBHYTold.Split(';')[5]).Date.AddDays(-1));
                                        }
                                        else
                                        {
                                            _ngayTachThe = DungChung.Ham.NgayDen(Convert.ToDateTime(bn.First().HanBHDen.Value.AddDays(-1)));
                                        }
                                    }
                                }
                            }
                        }
                        _idpersion = bn.First().IDPerson ?? 0;
                        if (bn.First().MucHuong != null && bn.First().MucHuong.Value > 0)
                        {
                            _muc = bn.First().MucHuong.ToString();
                            _pttt = DungChung.Ham._PtramTT(_dataContext, _muc);
                        }
                        if (bn.First().Tuyen != null)
                            _tuyen = bn.First().Tuyen.Value;
                        noitru = bn.First().NoiTru.Value;
                    }

                    if (!string.IsNullOrEmpty(_sothe) && _sothe.Length > 2)
                        _dtuong = _sothe.Substring(2, 1);// 9
                    var ktvc = _dataContext.MucTTs.Where(p => p.MaMuc.Contains(_dtuong)).Select(p => p.VanChuyen).ToList();
                    if (ktvc.Count > 0)
                        if (ktvc.First() != null && ktvc.First().ToString() != "")
                            _vanchuyen = ktvc.First().Value;
                    var ttbx = _dataContext.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault();
                    string[] ttthenew = DungChung.Ham.FreshString(ttbx.TTTheBHYTold).Split(';');
                    if (ttthenew.Length == 9)
                    {
                        string sthenew = ttthenew[0];
                        mucnew = sthenew.Substring(2, 1);
                        _ptttnew = DungChung.Ham._PtramTT(_dataContext, mucnew);
                        var persion = _dataContext.People.Where(p => p.SThe == sthenew).FirstOrDefault();
                        if (persion != null)
                            _idpersionnew = persion.IDPerson;
                    }
                    _HangBV = DungChung.Ham.hangBV(Bien.MaBV);
                    switch (_HangBV)
                    {
                        case 1:
                            if (noitru == 0)
                                _tyle = 0;
                            else
                                _tyle = 40;
                            break;

                        case 2:
                            if (DateTime.Now.Date >= DateTime.Parse("01/01/2021") && noitru == 1)
                                _tyle = 100;
                            else
                            {
                                if (Bien.MaBV == "01830")// dinhpv yêu cầu
                                    _tyle = 70;
                                else
                                {
                                    if (noitru == 0)
                                        _tyle = 0;
                                    else
                                        _tyle = 60;
                                }
                            }
                            break;

                        case 3:

                            _tyle = 70;
                            break;

                        case 4:
                            _tyle = 100;
                            _pttt = 100;
                            _ptttnew = 100;
                            break;
                    }
                    _dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
                    if (kttt.Count <= 0)
                    {
                        int _maCK = 0;
                        var dsnhomdv = (from dv in _dataContext.DichVus
                                        join tnhom in _dataContext.TieuNhomDVs on dv.IdTieuNhom equals tnhom.IdTieuNhom
                                        join nhom in _dataContext.NhomDVs on tnhom.IDNhom equals nhom.IDNhom
                                        select new { dv.GiaBHGioiHanTT, dv.MaDV, nhom.IDNhom, nhom.TenNhomCT, dv.PLoai, dv.Loai, dv.Status, dv.DonGia, dv.DonVi, dv.TrongDM }).ToList();

                        var ck = (from nhom in dsnhomdv.Where(p => p.TenNhomCT.Contains("Khám bệnh")).Where(p => p.PLoai == 2 && p.Loai == _dtkham).Where(p => p.Status == 1)
                                  select new { nhom.DonGia, nhom.MaDV, nhom.DonVi, nhom.TrongDM }).OrderByDescending(p => p.DonGia).ToList();
                        if (ck.Count > 0)
                            _maCK = ck.First().MaDV;

                        if (kt.Count > 0)
                        {
                            bool thanhtoan = true;

                            if (thanhtoan && ktntru > 0)
                            {
                                if (ravien.Count > 0 && DungChung.Ham.NgayTu(dtNgayTT) < DungChung.Ham.NgayTu(ravien.First().NgayRa.Value))
                                {
                                    MessageBox.Show("Ngày thanh toán không được < ngày ra viện");
                                    thanhtoan = false;
                                }
                            }
                            bool _tachCP_Thu = false;
                            if (Bien.MaBV == "30007" || Bien.MaBV == "30010")
                                _tachCP_Thu = true;
                            if (thanhtoan)
                            {
                                bool _tachKP = false;
                                if (Bien.MaBV == "30007" || Bien.MaBV == "26007" || Bien.MaBV == "27023")
                                    _tachKP = true;
                                int _makpsd = 0;
                                if (ravien.Count > 0)
                                    _makpsd = ravien.First().MaKP;
                                if (_makpsd == 0)
                                {
                                    MessageBox.Show("không tồn tại khoa phòng trong ra viện");
                                    return false;
                                }
                                var mavanchuyen = (from dv in dsnhomdv.Where(p => p.TenNhomCT.Contains("Vận chuyển"))
                                                   select dv.MaDV).ToList();
                                var kpNhaThuoc = _dataContext.KPhongs.Where(o => o.TenKP.Contains("nhà thuốc") || o.TenKP.Contains("Nhà thuốc")).Select(o => o.MaKP).ToList();
                                if (ktntru > 0)
                                {
                                    #region nội trú
                                    var tong = (from kd in _dataContext.DThuocs
                                                join kdct in _dataContext.DThuoccts.Where(o => o.IsMuaNgoai == null || o.IsMuaNgoai == false).OrderBy(p => p.IDDonct) on kd.IDDon equals kdct.IDDon
                                                join dv in _dataContext.DichVus on kdct.MaDV equals dv.MaDV
                                                where (kd.MaBNhan == _mabn)
                                                group new { kdct, dv, kd } by new { dv.PLoai, dv.IDNhom, KieuDon = kd.KieuDon == 6 ? kd.KieuDon : 1, kdct.NgayNhap, dv.TenDV, kdct.TyLeTT, kdct.LoaiDV, kdct.Mien, IDCD = _tachCP_Thu ? (kdct.ThanhToan == 1 ? kdct.IDCD : 0) : 0, MaKP = _tachKP ? ((kdct.MaKPtk == null || kdct.MaKPtk == 0) ? kdct.MaKP : kdct.MaKPtk) : (Bien.MaBV == "27022" ? kdct.MaKP : _makpsd), kdct.MaDV, kdct.DonGia, kdct.DonVi, kdct.ThanhToan, kdct.TrongBH, kdct.XHH, kdct.MaCB, kdct.AttachIDDonct, kdct.MienCT, kdct.MaKXuat, kdct.IDDonct, kd.PLDV } into kq
                                                select new { kq.Key.KieuDon, kq.Key.NgayNhap, kq.Key.PLoai, kq.Key.IDNhom, kq.Key.TenDV, kq.Key.TyLeTT, kq.Key.Mien, kq.Key.ThanhToan, kq.Key.IDCD, kq.Key.XHH, kq.Key.MaKP, kq.Key.LoaiDV, madv = kq.Key.MaDV, dongia = kq.Key.DonGia, donvi = kq.Key.DonVi, trongBH = kq.Key.TrongBH, soluong = kq.Sum(p => p.kdct.SoLuong), thanhtien = kq.Sum(p => p.kdct.ThanhTien), kq.Key.MaCB, kq.Key.AttachIDDonct, kq.Key.MienCT, kq.Key.MaKXuat, kq.Key.IDDonct, kq.Key.PLDV }).OrderBy(p => p.donvi).ToList();

                                    var vienphi0 = (from kd in tong
                                                    group kd by new { kd.KieuDon, kd.IDNhom, kd.PLoai, NgayNhapDate = kd.NgayNhap.Value.Date, kd.TenDV, kd.TyLeTT, kd.Mien, kd.IDCD, kd.MaKP, kd.madv, kd.dongia, kd.donvi, kd.ThanhToan, kd.trongBH, kd.XHH, kd.LoaiDV, kd.MaCB, kd.AttachIDDonct, kd.MienCT, kd.MaKXuat, kd.IDDonct, kd.PLDV } into kq
                                                    select new { kq.Key.KieuDon, kq.Key.IDNhom, kq.Key.PLoai, NgayNhap = kq.Select(p => p.NgayNhap).Min(), kq.Key.TenDV, kq.Key.TyLeTT, kq.Key.Mien, kq.Key.ThanhToan, kq.Key.IDCD, kq.Key.XHH, kq.Key.LoaiDV, kq.Key.MaKP, kq.Key.AttachIDDonct, madv = kq.Key.madv, dongia = kq.Key.dongia, donvi = kq.Key.donvi, trongBH = kq.Key.trongBH, soluong = kq.Sum(p => p.soluong), thanhtien = kq.Sum(p => p.thanhtien), kq.Key.MaCB, kq.Key.MienCT, kq.Key.MaKXuat, kq.Key.IDDonct, kq.Key.PLDV, kq.Key.NgayNhapDate }).OrderBy(p => p.donvi).ToList();

                                    var vienphi = (from vphi in vienphi0
                                                   group vphi by new { vphi.NgayNhapDate, vphi.madv, vphi.KieuDon, vphi.TenDV, vphi.TyLeTT, vphi.Mien, vphi.ThanhToan, vphi.IDCD, vphi.XHH, vphi.LoaiDV, vphi.MaKP, vphi.AttachIDDonct, vphi.dongia, vphi.donvi, vphi.trongBH, vphi.MaCB, vphi.PLoai, vphi.MienCT, vphi.MaKXuat, vphi.PLDV, vphi.IDNhom } into kq
                                                   select new { kq.Key.madv, kq.Key.KieuDon, kq.Key.TenDV, kq.Key.TyLeTT, kq.Key.Mien, kq.Key.ThanhToan, kq.Key.IDCD, kq.Key.XHH, kq.Key.LoaiDV, kq.Key.MaKP, kq.Key.AttachIDDonct, kq.Key.dongia, kq.Key.donvi, kq.Key.trongBH, kq.Key.MaCB, kq.Key.PLoai, kq.Key.MienCT, kq.Key.MaKXuat, kq.Key.PLDV, NgayNhap = kq.FirstOrDefault(o => o.soluong > 0) == null ? kq.FirstOrDefault().NgayNhap : kq.FirstOrDefault(o => o.soluong > 0).NgayNhap, soluong = kq.Sum(o => o.soluong), thanhtien = kq.Sum(o => o.thanhtien), IDDonct = kq.FirstOrDefault(o => o.soluong > 0) == null ? kq.FirstOrDefault().IDDonct : kq.FirstOrDefault(o => o.soluong > 0).IDDonct, kq.Key.IDNhom }).Where(o => o.soluong > 0).ToList();

                                    var vienphiCLS = (from kd in _dataContext.DThuocs.Where(o => o.MaBNhan == _mabn && o.PLDV == 2)
                                                      join kdct in _dataContext.DThuoccts on kd.IDDon equals kdct.IDDon
                                                      join cls in _dataContext.CLS.Where(o => o.MaBNhan == _mabn) on kdct.IDCLS equals cls.IdCLS
                                                      select new { cls, kdct.IDDonct, kdct.NgayNhap }).ToList();

                                    string chiphiKP = "";
                                    foreach (var item in vienphi)
                                    {
                                        double a = Math.Round(Math.Round(item.thanhtien, 2), 0);
                                        double ttien = 0;
                                        ttien = item.MienCT == 1 ? 0 : ((double)item.soluong * (double)item.dongia * (100 - item.Mien) * (double)item.TyLeTT * 0.0001);

                                        double b = Math.Round(Math.Round(ttien, 2), 0);

                                        if (a != b)
                                        {
                                            MessageBox.Show(item.TenDV + " Thành tiền không bằng số lượng * đơn giá * tỷ lệ TT - miễn");
                                            return false;
                                        }
                                        if (item.MaKP == null || item.MaKP == 0)
                                        {
                                            chiphiKP += item.madv + ";";
                                        }
                                        if (string.IsNullOrEmpty(item.MaCB))
                                        {
                                            MessageBox.Show(item.TenDV + " Chưa có mã bác sĩ, đang được update tự động\n Vui lòng thanh toán lại");
                                            updateMaCB(_mabn);
                                            return false;
                                        }
                                    }
                                    if (!string.IsNullOrEmpty(chiphiKP))
                                    {
                                        MessageBox.Show("Các chi phí: " + chiphiKP + " chưa thuộc khoa| phòng điều trị nào!");
                                        return false;
                                    }
                                    foreach (var a in vienphi)
                                    {
                                        // kiểm tra vận chuyển
                                        var ktmadv = (from dv in mavanchuyen.Where(p => p == a.madv)
                                                      select dv).ToList();
                                        if (a.trongBH == 1)
                                        {
                                            if (ktmadv.Count > 0)
                                            {
                                                _tienvc = a.thanhtien;
                                                break;
                                            }
                                        }
                                        //
                                    }
                                    //

                                    VienPhi vp = new VienPhi();
                                    vp.NgayNhap = DateTime.Now;
                                    vp.MaBNhan = kt.First().ds.MaBNhan;
                                    vp.NgayTT = dtNgayTT;
                                    vp.NgayRa = ravien.First().NgayRa;
                                    vp.NgayTachCP = _ngayTachThe;
                                    // ngoai h
                                    bool _ngoaih = false;
                                    _ngoaih = DungChung.Ham.CheckNGioHC(dtNgayTT);
                                    vp.NgoaiGio = 0;
                                    if (DungChung.Bien.MaBV != "24272")
                                    {
                                        if (_ngoaih == true)
                                        {
                                            if (MessageBox.Show("BN TT ngoài giờ hành chính?", "Thông báo", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                                                vp.NgoaiGio = 1;
                                        }
                                    }
                                    vp.MaCB = Bien.MaCB;
                                    vp.MaKP = Bien.MaKP;
                                    vp.Duyet = 0;
                                    _dataContext.VienPhis.Add(vp);
                                    if (_dataContext.SaveChanges() >= 0)
                                    {
                                        var q = _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn).OrderByDescending(p => p.idVPhi).ToList();
                                        if (q.Count > 0)
                                        {
                                            idvp = q.First().idVPhi;
                                        }
                                        else
                                        {
                                            idvp = 0;
                                        }
                                        QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(Bien.StrCon);

                                        double _tongtien = Math.Round(vienphi.Where(p => p.trongBH == 1).Sum(p => p.thanhtien), 2, MidpointRounding.AwayFromZero);//ktra
                                        if (idvp > 0)
                                        {
                                            foreach (var a in vienphi)
                                            {
                                                if (a.NgayNhap <= _ngayTachThe)
                                                {
                                                    #region Thanh toán thẻ cũ
                                                    double tt = 0;
                                                    if (a.soluong != 0)
                                                    {
                                                        VienPhict vpct = new VienPhict();
                                                        if (_tachCP_Thu)
                                                        {
                                                            if (a.madv == _maCK)
                                                            {
                                                                vpct.IDTamUng = a.IDCD;
                                                            }
                                                            else
                                                            {
                                                                var soph = _data.ChiDinhs.Where(p => p.IDCD == a.IDCD).Select(p => p.SoPhieu).ToList();
                                                                if (soph.Count > 0 && soph.First() != null)
                                                                {
                                                                    vpct.IDTamUng = soph.First();
                                                                }
                                                                else
                                                                {
                                                                }
                                                            }
                                                        }
                                                        //if(a.MaKP==null || a.MaKP<=0)
                                                        //    // laays maKP ra vien
                                                        //    else
                                                        var vpcls = vienphiCLS.FirstOrDefault(o => o.IDDonct == a.IDDonct);
                                                        if (a.PLDV == 2 && a.IDNhom != 13 && vienphiCLS.Count > 0 && vpcls != null)
                                                        {
                                                            vpct.NgayYLenh = vpcls.cls.NgayThang;
                                                            vpct.NgayChiPhi = vpcls.cls.NgayTH ?? (a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value);
                                                        }
                                                        else
                                                        {
                                                            vpct.NgayYLenh = (a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value);
                                                            vpct.NgayChiPhi = a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value;
                                                        }
                                                        if (a.TyLeTT == 0)
                                                            vpct.TyLeTT = 100;
                                                        else
                                                            vpct.TyLeTT = a.TyLeTT;
                                                        vpct.MaKP = a.MaKP;
                                                        vpct.MaDV = a.madv;
                                                        double giaVTYTTT = 0;
                                                        double dongia = a.dongia;
                                                        var kiemtraVTYT = dsnhomdv.Where(p => p.IDNhom == 10 || p.IDNhom == 11).Where(p => p.MaDV == a.madv && p.GiaBHGioiHanTT > 0).Select(p => p.GiaBHGioiHanTT).FirstOrDefault();
                                                        if (kiemtraVTYT != null && kiemtraVTYT > 0)
                                                        {
                                                            if (dongia > kiemtraVTYT)
                                                            {
                                                                giaVTYTTT = dongia - kiemtraVTYT;
                                                                dongia = kiemtraVTYT;
                                                            }
                                                        }
                                                        vpct.DonGia = Bien.MaBV == "27022" ? a.dongia : dongia;

                                                        vpct.SoLuong = a.soluong;
                                                        vpct.DonVi = a.donvi;
                                                        vpct.SoLuongD = 0;
                                                        vpct.TienChenh = 0;
                                                        vpct.TienChenhBN = 0;
                                                        vpct.ThanhToan = a.ThanhToan;
                                                        vpct.idVPhi = idvp;
                                                        vpct.Mien = a.Mien;
                                                        vpct.MienCT = a.MienCT;
                                                        vpct.XHH = a.XHH;
                                                        vpct.LoaiDV = a.LoaiDV;
                                                        vpct.MaCB = a.MaCB;
                                                        vpct.AttachIDDonct = a.AttachIDDonct;

                                                        //Thêm mã kho xuất cho dtct xuất ở kho nhà thuốc nếu kho khác = null
                                                        vpct.MaKXuat = (kpNhaThuoc.Exists(o => o == a.MaKXuat) ? a.MaKXuat : null);

                                                        tt = a.MienCT == 1 ? 0 : Math.Round((a.soluong * a.dongia) * (a.TyLeTT / 100), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                        double ttnew = a.MienCT == 1 ? 0 : Math.Round((a.soluong * a.dongia), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                        if (a.PLoai == 1)//thuốc và vtyt tt không nhân tỉ lệ (vì chi phí luôn luôn phải trả 100%)
                                                            vpct.ThanhTien = ttnew;
                                                        else
                                                            vpct.ThanhTien = tt;
                                                        if (Bien.MaBV == "27022")
                                                        {
                                                            tt = tt - giaVTYTTT * a.soluong;
                                                            ttnew = ttnew - giaVTYTTT * a.soluong;
                                                        }
                                                        vpct.IDPerson = _idpersion;
                                                        // KT tiền vận chuyển
                                                        var ktmadv = (from dv in mavanchuyen.Where(p => p == a.madv)
                                                                      select dv).ToList();
                                                        if (_HTTT == 1)//if (_DTuong == "BHYT")
                                                        {
                                                            if (_tuyen == 1)//bệnh nhân đúng tuyến
                                                            {
                                                                if (a.trongBH == 1)
                                                                {//dịch vụ trong danh mục BHYT
                                                                    if (ktmadv.Count > 0)
                                                                    {
                                                                        if (_vanchuyen == 1)
                                                                        {
                                                                            vpct.TienBH = tt;
                                                                            //vpct.TienBN = 0;
                                                                            vpct.TrongBH = 1;
                                                                            vpct.TyLeBHTT = 100;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = 0;
                                                                            vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                        }
                                                                        else
                                                                        {
                                                                            //vpct.TienBN = tt;
                                                                            vpct.TienBH = 0;
                                                                            vpct.TrongBH = 0;
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = tt;
                                                                            vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                        }
                                                                    }

                                                                    //k thúc
                                                                    else
                                                                    {
                                                                        if ((_tongtien - _tienvc) >= Bien.GHanTT100 && _luongCS != 1)
                                                                        {
                                                                            _tienBH = Math.Round(tt * _pttt / 100, Bien.LamTronSo);
                                                                            vpct.TienBH = _tienBH;
                                                                            //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                            vpct.TyLeBHTT = _pttt;
                                                                            vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                            vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                            vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                        }
                                                                        else
                                                                        {
                                                                            vpct.TienBH = tt;
                                                                            //vpct.TienBN = 0;
                                                                            vpct.TyLeBHTT = 100;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                            vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                        }
                                                                        vpct.TrongBH = 1;
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    if (a.trongBH == 0)
                                                                    {
                                                                        vpct.TrongBH = 0;
                                                                        vpct.TienBH = 0;
                                                                        //vpct.TienBN = Math.Round(tt * (100 - a.Mien) / 100, Bien.LamTronSo);
                                                                        vpct.TyLeBHTT = 0;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = Math.Round(tt * (100 - a.Mien) / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                    }
                                                                    else if (a.trongBH == 2)
                                                                    {
                                                                        vpct.TrongBH = 2;
                                                                        vpct.TienBH = 0;
                                                                        //vpct.TienBN = 0;
                                                                        vpct.TyLeBHTT = 100;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = 0;
                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                    }
                                                                    else
                                                                    {
                                                                        vpct.TrongBH = 3;
                                                                        vpct.TienBH = 0;
                                                                        //vpct.TienBN = tt;
                                                                        vpct.TyLeBHTT = 0;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = tt;
                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                    }
                                                                }
                                                            }
                                                            else
                                                            {
                                                                if (_tuyen == 2) //BN trái tuyến
                                                                {
                                                                    if (a.trongBH == 1)
                                                                    {//dịch vụ trong danh mục BHYT
                                                                        if (ktmadv.Count > 0)
                                                                        {
                                                                            if (_vanchuyen == 1)
                                                                            {
                                                                                vpct.TienBH = tt;
                                                                                vpct.TrongBH = 1;
                                                                                vpct.TyLeBHTT = 100;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = 0;
                                                                            }
                                                                            else
                                                                            {
                                                                                //vpct.TienBN = tt;
                                                                                vpct.TrongBH = 0;
                                                                                vpct.TyLeBHTT = 0;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = tt;
                                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            if (DateTime.Now.Date >= DateTime.Parse("01/01/2021"))
                                                                            {
                                                                                vpct.TyLeBHTT = (_tyle * _pttt) / 100;
                                                                                _tienBH = Math.Round(tt * _tyle / 100 * _pttt / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                vpct.TienBH = _tienBH;
                                                                                double tinbnctt = tt - _tienBH;
                                                                                vpct.TBNCTT = Math.Round(tinbnctt, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                            }
                                                                            else
                                                                            {
                                                                                // mới
                                                                                if (!string.IsNullOrEmpty(_khuvuc)) // BN có khu vực ưu tiên tính theo đúng tuyến
                                                                                {
                                                                                    if (_tyle > 0)
                                                                                    {
                                                                                        _tienBH = Math.Round(tt * _pttt / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBH = _tienBH;
                                                                                        //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                        vpct.TyLeBHTT = _pttt;
                                                                                        vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100; ;
                                                                                        vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        vpct.TienBH = 0;
                                                                                        //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                        vpct.TyLeBHTT = 0;
                                                                                        vpct.TBNCTT = 0;
                                                                                        vpct.TBNTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                    }
                                                                                }
                                                                                else
                                                                                {
                                                                                    vpct.TyLeBHTT = (_tyle * _pttt) / 100;
                                                                                    _tienBH = Math.Round(tt * _tyle / 100 * _pttt / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                    vpct.TienBH = _tienBH;
                                                                                    //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                    if (_HangBV == 1)
                                                                                    {
                                                                                        double tinbnctt = tt - _tienBH;
                                                                                        vpct.TBNCTT = Math.Round(tinbnctt, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                    }
                                                                                    else if (_HangBV == 2)
                                                                                    {
                                                                                        double tinbnctt = tt - _tienBH;
                                                                                        vpct.TBNCTT = Math.Round(tinbnctt, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                    }
                                                                                    vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                    //double TTnew = 0;
                                                                                    //if (a.IDNhom == 13 || a.IDNhom == 15 || a.IDNhom == 8)
                                                                                    //{
                                                                                    //    TTnew = Math.Round(a.dongia * a.soluong);
                                                                                    //}
                                                                                    //}
                                                                                }
                                                                            }
                                                                            //
                                                                            if (_tyle > 0)
                                                                                vpct.TrongBH = 1;
                                                                            else
                                                                                vpct.TrongBH = 0;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        if (a.trongBH == 0)
                                                                        {
                                                                            vpct.TrongBH = 0;
                                                                            vpct.TienBH = 0;
                                                                            //vpct.TienBN = Math.Round(tt * (100 - a.Mien) / 100, Bien.LamTronSo);
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = Math.Round(tt * (100 - a.Mien) / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                            vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                        }
                                                                        else if (a.trongBH == 2)
                                                                        {
                                                                            vpct.TrongBH = 2;
                                                                            vpct.TienBH = 0;
                                                                            //vpct.TienBN = 0;
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = 0;
                                                                            vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                        }
                                                                        else
                                                                        {
                                                                            vpct.TrongBH = 3;
                                                                            vpct.TienBH = 0;
                                                                            //vpct.TienBN = tt;
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = tt;
                                                                            vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        else if (_HTTT == 2)//else
                                                        {
                                                            if (a.trongBH == 2)
                                                            {
                                                                vpct.TrongBH = 2;
                                                                vpct.TienBH = 0;
                                                                vpct.TienBN = 0;
                                                                vpct.TyLeBHTT = 0;
                                                                vpct.TBNCTT = 0;
                                                                vpct.TBNTT = 0;
                                                            }
                                                            else if (a.trongBH == 3)
                                                            {
                                                                vpct.TrongBH = 3;
                                                                vpct.TienBH = 0;
                                                                vpct.TienBN = tt;
                                                                vpct.TyLeBHTT = 0;
                                                                vpct.TBNCTT = 0;
                                                                vpct.TBNTT = tt;
                                                            }
                                                            else
                                                            {
                                                                vpct.TyLeBHTT = 0;
                                                                vpct.TrongBH = 0;
                                                                vpct.TienBH = 0;
                                                                //vpct.TienBN = Math.Round(tt * (100 - a.Mien) / 100, Bien.LamTronSo);
                                                                vpct.TBNCTT = 0;
                                                                vpct.TBNTT = Math.Round(tt * (100 - a.Mien) / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                            }
                                                        }
                                                        else if (_HTTT == 0)
                                                        {
                                                            switch (a.trongBH)
                                                            {
                                                                case 1:
                                                                    vpct.TrongBH = a.trongBH;
                                                                    vpct.TienBH = tt;
                                                                    vpct.TienBN = 0;
                                                                    vpct.TyLeBHTT = 100;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = 0;
                                                                    break;

                                                                case 2:
                                                                    vpct.TrongBH = a.trongBH;
                                                                    vpct.TienBH = 0;
                                                                    vpct.TienBN = 0;
                                                                    vpct.TyLeBHTT = 0;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = 0;
                                                                    break;

                                                                case 0:
                                                                    vpct.TrongBH = a.trongBH;
                                                                    vpct.TienBH = 0;
                                                                    //vpct.TienBN = Math.Round(tt * (100 - a.Mien) / 100, Bien.LamTronSo);
                                                                    vpct.TyLeBHTT = 0;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = Math.Round(tt * (100 - a.Mien) / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                    vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                    break;

                                                                case 3:
                                                                    vpct.TrongBH = a.trongBH;
                                                                    vpct.TienBH = 0;
                                                                    vpct.TienBN = tt;
                                                                    vpct.TyLeBHTT = 0;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = tt;
                                                                    break;
                                                            }
                                                        }
                                                        if (vpct.ThanhToan != 1)
                                                            sotienTT += vpct.TienBN;
                                                        _data.VienPhicts.Add(vpct);
                                                        _data.SaveChanges();
                                                        if (giaVTYTTT > 0)
                                                            ThanhToan_VTYT_TT04(vpct.idVPhict, giaVTYTTT);
                                                    }
                                                    #endregion
                                                }
                                                else
                                                {
                                                    #region thanh toán thẻ mới
                                                    double tt = 0;
                                                    if (a.soluong != 0)
                                                    {
                                                        VienPhict vpct = new VienPhict();
                                                        if (_tachCP_Thu)
                                                        {
                                                            if (a.madv == _maCK)
                                                            {
                                                                vpct.IDTamUng = a.IDCD;
                                                            }
                                                            else
                                                            {
                                                                var soph = _data.ChiDinhs.Where(p => p.IDCD == a.IDCD).Select(p => p.SoPhieu).ToList();
                                                                if (soph.Count > 0 && soph.First() != null)
                                                                {
                                                                    vpct.IDTamUng = soph.First();
                                                                }
                                                                else
                                                                {
                                                                }
                                                            }
                                                        }
                                                        //if(a.MaKP==null || a.MaKP<=0)
                                                        //    // laays maKP ra vien
                                                        //    else
                                                        var vpcls = vienphiCLS.FirstOrDefault(o => o.IDDonct == a.IDDonct);
                                                        if (a.PLDV == 2 && a.IDNhom != 13 && vienphiCLS.Count > 0 && vpcls != null)
                                                        {
                                                            vpct.NgayYLenh = vpcls.cls.NgayThang;
                                                            vpct.NgayChiPhi = vpcls.cls.NgayTH ?? (a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value);
                                                        }
                                                        else
                                                        {
                                                            vpct.NgayYLenh = (a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value);
                                                            vpct.NgayChiPhi = a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value;
                                                        }
                                                        if (a.TyLeTT == 0)
                                                            vpct.TyLeTT = 100;
                                                        else
                                                            vpct.TyLeTT = a.TyLeTT;
                                                        vpct.MaKP = a.MaKP;
                                                        vpct.MaDV = a.madv;
                                                        double giaVTYTTT = 0;
                                                        double dongia = a.dongia;
                                                        var kiemtraVTYT = dsnhomdv.Where(p => p.IDNhom == 10 || p.IDNhom == 11).Where(p => p.MaDV == a.madv && p.GiaBHGioiHanTT > 0).Select(p => p.GiaBHGioiHanTT).FirstOrDefault();
                                                        if (kiemtraVTYT != null && kiemtraVTYT > 0)
                                                        {
                                                            if (dongia > kiemtraVTYT)
                                                            {
                                                                giaVTYTTT = dongia - kiemtraVTYT;
                                                                dongia = kiemtraVTYT;
                                                            }
                                                        }
                                                        vpct.DonGia = Bien.MaBV == "27022" ? a.dongia : dongia;

                                                        vpct.SoLuong = a.soluong;
                                                        vpct.DonVi = a.donvi;
                                                        vpct.SoLuongD = 0;
                                                        vpct.TienChenh = 0;
                                                        vpct.TienChenhBN = 0;
                                                        vpct.ThanhToan = a.ThanhToan;
                                                        vpct.idVPhi = idvp;
                                                        vpct.Mien = a.Mien;
                                                        vpct.MienCT = a.MienCT;
                                                        vpct.XHH = a.XHH;
                                                        vpct.LoaiDV = a.LoaiDV;
                                                        vpct.MaCB = a.MaCB;
                                                        vpct.AttachIDDonct = a.AttachIDDonct;

                                                        //Thêm mã kho xuất cho dtct xuất ở kho nhà thuốc nếu kho khác = null
                                                        vpct.MaKXuat = (kpNhaThuoc.Exists(o => o == a.MaKXuat) ? a.MaKXuat : null);

                                                        tt = a.MienCT == 1 ? 0 : Math.Round((vpct.SoLuong * vpct.DonGia) * (a.TyLeTT / 100), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                        double ttnew = a.MienCT == 1 ? 0 : Math.Round((vpct.SoLuong * vpct.DonGia), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                        //double ttnew = Math.Round((a.soluong * dongia), Bien.LamTronSo);
                                                        if (a.PLoai == 1)//thuốc và vtyt tt không nhân tỉ lệ (vì chi phí luôn luôn phải trả 100%)
                                                            vpct.ThanhTien = ttnew;
                                                        else
                                                            vpct.ThanhTien = tt;
                                                        if (Bien.MaBV == "27022")
                                                        {
                                                            tt = tt - giaVTYTTT * a.soluong;
                                                            ttnew = ttnew - giaVTYTTT * a.soluong;
                                                        }
                                                        vpct.IDPerson = _idpersionnew;
                                                        // KT tiền vận chuyển
                                                        var ktmadv = (from dv in mavanchuyen.Where(p => p == a.madv)
                                                                      select dv).ToList();
                                                        if (_HTTT == 1)//if (_DTuong == "BHYT")
                                                        {
                                                            if (_tuyen == 1)//bệnh nhân đúng tuyến
                                                            {
                                                                if (a.trongBH == 1)
                                                                {//dịch vụ trong danh mục BHYT
                                                                    if (ktmadv.Count > 0)
                                                                    {
                                                                        if (_vanchuyen == 1)
                                                                        {
                                                                            vpct.TienBH = tt;
                                                                            vpct.TienBN = 0;
                                                                            vpct.TrongBH = 1;
                                                                            vpct.TyLeBHTT = 100;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = 0;
                                                                        }
                                                                        else
                                                                        {
                                                                            vpct.TienBN = tt;
                                                                            vpct.TienBH = 0;
                                                                            vpct.TrongBH = 0;
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = tt;
                                                                        }
                                                                    }

                                                                    //k thúc
                                                                    else
                                                                    {
                                                                        if ((_tongtien - _tienvc) >= Bien.GHanTT100 && _luongCS != 1)
                                                                        {
                                                                            _tienBH = Math.Round(tt * _ptttnew / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                            vpct.TienBH = _tienBH;
                                                                            //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                            vpct.TyLeBHTT = _ptttnew;
                                                                            vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                            vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                            vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                        }
                                                                        else
                                                                        {
                                                                            vpct.TienBH = tt;
                                                                            //vpct.TienBN = 0;
                                                                            vpct.TyLeBHTT = 100;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                            vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                        }
                                                                        vpct.TrongBH = 1;
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    if (a.trongBH == 0)
                                                                    {
                                                                        vpct.TrongBH = 0;
                                                                        vpct.TienBH = 0;
                                                                        //vpct.TienBN = Math.Round(tt * (100 - a.Mien) / 100, Bien.LamTronSo);
                                                                        vpct.TyLeBHTT = 0;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = Math.Round(tt * (100 - a.Mien) / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                    }
                                                                    else if (a.trongBH == 2)
                                                                    {
                                                                        vpct.TrongBH = 2;
                                                                        vpct.TienBH = 0;
                                                                        //vpct.TienBN = 0;
                                                                        vpct.TyLeBHTT = 100;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = 0;
                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                    }
                                                                    else
                                                                    {
                                                                        vpct.TrongBH = 3;
                                                                        vpct.TienBH = 0;
                                                                        //vpct.TienBN = tt;
                                                                        vpct.TyLeBHTT = 0;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = tt;
                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                    }
                                                                }
                                                            }
                                                            else
                                                            {
                                                                if (_tuyen == 2) //BN trái tuyến
                                                                {
                                                                    if (a.trongBH == 1)
                                                                    {//dịch vụ trong danh mục BHYT
                                                                        if (ktmadv.Count > 0)
                                                                        {
                                                                            if (_vanchuyen == 1)
                                                                            {
                                                                                vpct.TienBH = tt;
                                                                                vpct.TrongBH = 1;
                                                                                vpct.TyLeBHTT = 100;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = 0;
                                                                            }
                                                                            else
                                                                            {
                                                                                //vpct.TienBN = tt;
                                                                                vpct.TrongBH = 0;
                                                                                vpct.TyLeBHTT = 0;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = tt;
                                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            //if (DateTime.Now.Date >= DateTime.Parse("01/01/2021"))
                                                                            //{
                                                                            //    vpct.TyLeBHTT = (_tyle * _pttt) / 100;
                                                                            //    _tienBH = Math.Round(tt * _tyle / 100 * _pttt / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                            //    vpct.TienBH = _tienBH;
                                                                            //    double tinbnctt = tt - _tienBH;
                                                                            //    vpct.TBNCTT = Math.Round(tinbnctt, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                            //    vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                            //    vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                            //}
                                                                            //else
                                                                            {
                                                                                // mới
                                                                                if (!string.IsNullOrEmpty(_khuvuc)) // BN có khu vực ưu tiên tính theo đúng tuyến
                                                                                {
                                                                                    if (_tyle > 0)
                                                                                    {
                                                                                        _tienBH = Math.Round(tt * _ptttnew / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBH = _tienBH;
                                                                                        //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                        vpct.TyLeBHTT = _ptttnew;
                                                                                        vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100; ;
                                                                                        vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        vpct.TienBH = 0;
                                                                                        //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                        vpct.TyLeBHTT = 0;
                                                                                        vpct.TBNCTT = 0;
                                                                                        vpct.TBNTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                    }
                                                                                }
                                                                                else
                                                                                {
                                                                                    vpct.TyLeBHTT = (_tyle * _ptttnew) / 100;
                                                                                    _tienBH = Math.Round(tt * _tyle / 100 * _ptttnew / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                    vpct.TienBH = _tienBH;
                                                                                    //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                    if (_HangBV == 1)
                                                                                    {
                                                                                        double tinbnctt = tt - _tienBH;
                                                                                        vpct.TBNCTT = Math.Round(tinbnctt, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                    }
                                                                                    else if (_HangBV == 2)
                                                                                    {
                                                                                        double tinbnctt = tt - _tienBH;
                                                                                        vpct.TBNCTT = Math.Round(tinbnctt, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                    }
                                                                                    vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                    //double TTnew = 0;
                                                                                    //if (a.IDNhom == 13 || a.IDNhom == 15 || a.IDNhom == 8)
                                                                                    //{
                                                                                    //    TTnew = Math.Round(a.dongia * a.soluong);
                                                                                    //}
                                                                                    //}
                                                                                }
                                                                            }
                                                                            //
                                                                            if (_tyle > 0)
                                                                                vpct.TrongBH = 1;
                                                                            else
                                                                                vpct.TrongBH = 0;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        if (a.trongBH == 0)
                                                                        {
                                                                            vpct.TrongBH = 0;
                                                                            vpct.TienBH = 0;
                                                                            vpct.TienBN = Math.Round(tt * (100 - a.Mien) / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = Math.Round(tt * (100 - a.Mien) / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                        }
                                                                        else if (a.trongBH == 2)
                                                                        {
                                                                            vpct.TrongBH = 2;
                                                                            vpct.TienBH = 0;
                                                                            vpct.TienBN = 0;
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = 0;
                                                                        }
                                                                        else
                                                                        {
                                                                            vpct.TrongBH = 3;
                                                                            vpct.TienBH = 0;
                                                                            vpct.TienBN = tt;
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = tt;
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        else if (_HTTT == 2)//else
                                                        {
                                                            if (a.trongBH == 2)
                                                            {
                                                                vpct.TrongBH = 2;
                                                                vpct.TienBH = 0;
                                                                vpct.TienBN = 0;
                                                                vpct.TyLeBHTT = 0;
                                                                vpct.TBNCTT = 0;
                                                                vpct.TBNTT = 0;
                                                            }
                                                            else if (a.trongBH == 3)
                                                            {
                                                                vpct.TrongBH = 3;
                                                                vpct.TienBH = 0;
                                                                vpct.TienBN = tt;
                                                                vpct.TyLeBHTT = 0;
                                                                vpct.TBNCTT = 0;
                                                                vpct.TBNTT = tt;
                                                            }
                                                            else
                                                            {
                                                                vpct.TyLeBHTT = 0;
                                                                vpct.TrongBH = 0;
                                                                vpct.TienBH = 0;
                                                                vpct.TienBN = Math.Round(tt * (100 - a.Mien) / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                vpct.TBNCTT = 0;
                                                                vpct.TBNTT = Math.Round(tt * (100 - a.Mien) / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                            }
                                                        }
                                                        else if (_HTTT == 0)
                                                        {
                                                            switch (a.trongBH)
                                                            {
                                                                case 1:
                                                                    vpct.TrongBH = a.trongBH;
                                                                    vpct.TienBH = tt;
                                                                    vpct.TienBN = 0;
                                                                    vpct.TyLeBHTT = 100;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = 0;
                                                                    break;

                                                                case 2:
                                                                    vpct.TrongBH = a.trongBH;
                                                                    vpct.TienBH = 0;
                                                                    vpct.TienBN = 0;
                                                                    vpct.TyLeBHTT = 0;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = 0;
                                                                    break;

                                                                case 0:
                                                                    vpct.TrongBH = a.trongBH;
                                                                    vpct.TienBH = 0;
                                                                    vpct.TienBN = Math.Round(tt * (100 - a.Mien) / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                    vpct.TyLeBHTT = 0;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = Math.Round(tt * (100 - a.Mien) / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                    break;

                                                                case 3:
                                                                    vpct.TrongBH = a.trongBH;
                                                                    vpct.TienBH = 0;
                                                                    vpct.TienBN = tt;
                                                                    vpct.TyLeBHTT = 0;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = tt;
                                                                    break;
                                                            }
                                                        }
                                                        if (vpct.ThanhToan != 1)
                                                            sotienTT += vpct.TienBN;
                                                        _data.VienPhicts.Add(vpct);
                                                        _data.SaveChanges();
                                                        if (giaVTYTTT > 0)
                                                            ThanhToan_VTYT_TT04(vpct.idVPhict, giaVTYTTT);
                                                    }
                                                    #endregion
                                                }
                                            }
                                            DungChung.Ham._setStatus(_mabn, 3);
                                        }//kt
                                        else
                                        {
                                            MessageBox.Show("không có mã bệnh nhân trong bảng viện phí");
                                        }
                                    }
                                }  //ketthuc noi tru
                                #endregion
                                else
                                {
                                    #region ngoại trú

                                    var ktdt = _dataContext.DThuocs.Where(p => p.PLDV == 1).Where(p => p.MaBNhan == _mabn).ToList();
                                    if (ktdt.Count >= 2)
                                    {
                                        var tong = (from kd in _dataContext.DThuocs
                                                    join kdct in _dataContext.DThuoccts.Where(o => o.IsMuaNgoai == null || o.IsMuaNgoai == false).OrderBy(p => p.IDDonct) on kd.IDDon equals kdct.IDDon
                                                    join dv in _dataContext.DichVus on kdct.MaDV equals dv.MaDV
                                                    where (kd.MaBNhan == _mabn)
                                                    select new { kdct.NgayNhap, dv.PLoai, kdct.AttachIDDonct, dv.IDNhom, kdct.LoaiDV, dv.TenDV, kdct.TyLeTT, kdct.Mien, kdct.ThanhToan, IDCD = _tachCP_Thu ? kdct.IDCD : 0, MaKP = _tachKP ? kdct.MaKP : (Bien.MaBV == "27022" ? kdct.MaKP : _makpsd), kdct.MaDV, kdct.DonGia, kdct.DonVi, kdct.TrongBH, kdct.XHH, kdct.SoLuong, kdct.ThanhTien, kdct.MaCB, kdct.MienCT, kdct.MaKXuat, kdct.IDDonct, kd.PLDV }
                                                      ).ToList();

                                        var vienphi = (from a in tong
                                                       group a by new { a.LoaiDV, a.AttachIDDonct, a.PLoai, a.IDNhom, a.NgayNhap.Value.Date, a.TenDV, a.TyLeTT, a.Mien, a.ThanhToan, IDCD = a.IDCD, MaKP = a.MaKP, a.MaDV, a.DonGia, a.DonVi, a.TrongBH, a.XHH, a.MaCB, a.MienCT, a.MaKXuat, a.IDDonct, a.PLDV } into kq
                                                       select new { kq.Key.LoaiDV, kq.Key.AttachIDDonct, kq.Key.PLoai, kq.Key.IDNhom, NgayNhap = kq.Select(p => p.NgayNhap).Min(), kq.Key.TenDV, kq.Key.TyLeTT, kq.Key.Mien, kq.Key.ThanhToan, kq.Key.IDCD, kq.Key.MaKP, madv = kq.Key.MaDV, dongia = kq.Key.DonGia, donvi = kq.Key.DonVi, kq.Key.XHH, trongBH = kq.Key.TrongBH, soluong = kq.Sum(p => p.SoLuong), thanhtien = kq.Sum(p => p.ThanhTien), kq.Key.MaCB, kq.Key.MienCT, kq.Key.MaKXuat, kq.Key.IDDonct, kq.Key.PLDV }).ToList();

                                        var vienphiCLS = (from kd in _dataContext.DThuocs.Where(o => o.MaBNhan == _mabn && o.PLDV == 2)
                                                          join kdct in _dataContext.DThuoccts on kd.IDDon equals kdct.IDDon
                                                          join cls in _dataContext.CLS.Where(o => o.MaBNhan == _mabn) on kdct.IDCLS equals cls.IdCLS
                                                          select new { cls, kdct.IDDonct, kdct.NgayNhap }).ToList();
                                        // kiểm tra vận chuyển
                                        foreach (var a in vienphi)
                                        {
                                            if (Math.Round(Math.Round(a.thanhtien, 2), 0) != (a.MienCT == 1 ? 0 : (Math.Round(Math.Round(a.soluong * a.dongia * a.TyLeTT * (100 - a.Mien) * 0.0001, 2), 0))))
                                            {
                                                MessageBox.Show(a.TenDV + " Thành tiền không bằng số lượng * đơn giá * tỷ lệ tt  trừ miễn ");
                                                BenhNhan qbn = _dataContext.BenhNhans.Single(p => p.MaBNhan == _mabn);
                                                if (qbn.DTNT == false && qbn.NoiTru == 0)
                                                    _LuuXoaRaVien(_dataContext, _mabn, dtNgayTT, "Luu", 2);
                                                return false;
                                            }
                                            if (string.IsNullOrEmpty(a.MaCB))
                                            {
                                                MessageBox.Show(a.TenDV + " Chưa có mã bác sĩ, đang được update tự động\n Vui lòng thanh toán lại");
                                                updateMaCB(_mabn);
                                                return false;
                                            }
                                            var ktmadv = (from dv in mavanchuyen.Where(p => p == a.madv)
                                                          select dv).ToList();
                                            if (a.trongBH == 1)
                                            {
                                                if (ktmadv.Count > 0)
                                                {
                                                    _tienvc = a.thanhtien;
                                                    break;
                                                }
                                            }
                                        }
                                        //

                                        //kthuc luuw ra viên
                                        VienPhi vp = new VienPhi();
                                        vp.MaBNhan = kt.First().ds.MaBNhan;
                                        vp.NgayTT = dtNgayTT;
                                        vp.NgayRa = ravien.First().NgayRa;
                                        vp.NgayTachCP = _ngayTachThe;
                                        bool _ngoaih = false;
                                        _ngoaih = DungChung.Ham.CheckNGioHC(dtNgayTT);
                                        vp.NgoaiGio = 0;
                                        if (DungChung.Bien.MaBV != "24272")
                                        {
                                            if (_ngoaih == true)
                                            {
                                                if (MessageBox.Show("BN TT ngoài giờ hành chính?", "Thông báo", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                                                    vp.NgoaiGio = 1;
                                            }
                                        }
                                        vp.MaCB = Bien.MaCB;
                                        vp.MaKP = Bien.MaKP;
                                        _dataContext.VienPhis.Add(vp);
                                        if (_dataContext.SaveChanges() >= 0)
                                        {
                                            var q = _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn).OrderByDescending(p => p.idVPhi).ToList();
                                            if (q.Count > 0)
                                            {
                                                idvp = q.First().idVPhi;
                                            }
                                            else
                                            {
                                                idvp = 0;
                                            }
                                            QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(Bien.StrCon);
                                            double tt = 0;
                                            double _tongtien = Math.Round(vienphi.Where(p => p.trongBH == 1).Sum(p => p.thanhtien), 2, MidpointRounding.AwayFromZero);//ktra
                                            if (idvp > 0)
                                            {
                                                foreach (var a in vienphi)
                                                {
                                                    if (a.NgayNhap <= _ngayTachThe)
                                                    {
                                                        #region Thanh toán thẻ cũ
                                                        if (a.soluong != 0)
                                                        {
                                                            VienPhict vpct = new VienPhict();
                                                            if (_tachCP_Thu)
                                                            {
                                                                if (a.madv == _maCK)
                                                                {
                                                                    vpct.IDTamUng = a.IDCD;
                                                                }
                                                                else
                                                                {
                                                                    var soph = _data.ChiDinhs.Where(p => p.IDCD == a.IDCD).Select(p => p.SoPhieu).ToList();
                                                                    if (soph.Count > 0 && soph.First() != null)
                                                                    {
                                                                        vpct.IDTamUng = soph.First();
                                                                    }
                                                                    else
                                                                    {
                                                                    }
                                                                }
                                                            }
                                                            var vpcls = vienphiCLS.FirstOrDefault(o => o.IDDonct == a.IDDonct);
                                                            if (a.PLDV == 2 && a.IDNhom != 13 && vienphiCLS.Count > 0 && vpcls != null)
                                                            {
                                                                vpct.NgayYLenh = vpcls.cls.NgayThang;
                                                                vpct.NgayChiPhi = vpcls.cls.NgayTH ?? (a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value);
                                                            }
                                                            else
                                                            {
                                                                vpct.NgayYLenh = (a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value);
                                                                vpct.NgayChiPhi = a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value;
                                                            }
                                                            if (a.TyLeTT == 0)
                                                                vpct.TyLeTT = 100;
                                                            else
                                                                vpct.TyLeTT = a.TyLeTT;
                                                            vpct.MaKP = a.MaKP;
                                                            vpct.MaDV = a.madv;
                                                            double giaVTYTTT = 0;
                                                            double dongia = a.dongia;
                                                            var kiemtraVTYT = dsnhomdv.Where(p => p.IDNhom == 10 || p.IDNhom == 11).Where(p => p.MaDV == a.madv && p.GiaBHGioiHanTT > 0).Select(p => p.GiaBHGioiHanTT).FirstOrDefault();
                                                            if (kiemtraVTYT != null && kiemtraVTYT > 0)
                                                            {
                                                                if (dongia > kiemtraVTYT)
                                                                {
                                                                    giaVTYTTT = dongia - kiemtraVTYT;
                                                                    dongia = kiemtraVTYT;
                                                                }
                                                            }
                                                            vpct.DonGia = Bien.MaBV == "27022" ? a.dongia : dongia;

                                                            vpct.SoLuong = a.soluong;
                                                            vpct.SoLuongD = 0;
                                                            vpct.TienChenh = 0;
                                                            vpct.TienChenhBN = 0;
                                                            vpct.DonVi = a.donvi;
                                                            vpct.idVPhi = idvp;
                                                            vpct.ThanhToan = a.ThanhToan;
                                                            vpct.Mien = a.Mien;
                                                            vpct.MienCT = a.MienCT;
                                                            vpct.XHH = a.XHH;
                                                            vpct.LoaiDV = a.LoaiDV;
                                                            vpct.MaCB = a.MaCB;
                                                            vpct.AttachIDDonct = a.AttachIDDonct;

                                                            //Thêm mã kho xuất cho dtct xuất ở kho nhà thuốc nếu kho khác = null
                                                            vpct.MaKXuat = (kpNhaThuoc.Exists(o => o == a.MaKXuat) ? a.MaKXuat : null);

                                                            tt = a.MienCT == 1 ? 0 : Math.Round((vpct.SoLuong * vpct.DonGia) * (a.TyLeTT / 100), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                            double ttnew = a.MienCT == 1 ? 0 : Math.Round((vpct.SoLuong * vpct.DonGia), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                            if (a.PLoai == 1)//thuốc và vtyt tt không nhân tỉ lệ (vì chi phí luôn luôn phải trả 100%)
                                                                vpct.ThanhTien = ttnew;
                                                            else
                                                                vpct.ThanhTien = tt;
                                                            if (Bien.MaBV == "27022")
                                                            {
                                                                tt = tt - giaVTYTTT * a.soluong;
                                                                ttnew = ttnew - giaVTYTTT * a.soluong;
                                                            }
                                                            vpct.IDPerson = _idpersion;
                                                            if (_HTTT == 1)//  if (_DTuong == "BHYT")
                                                            {
                                                                var ktmadv = (from dv in mavanchuyen.Where(p => p == a.madv)
                                                                              select dv).ToList();
                                                                if (_tuyen == 1)//bệnh nhân đúng tuyến
                                                                {
                                                                    if (a.trongBH == 1)
                                                                    {//dịch vụ trong danh mục BHYT
                                                                        if (ktmadv.Count > 0)
                                                                        {
                                                                            if (_vanchuyen == 1)
                                                                            {
                                                                                vpct.TienBH = tt;
                                                                                vpct.TienBN = 0;
                                                                                vpct.TrongBH = 1;
                                                                                vpct.TyLeBHTT = 100;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = 0;
                                                                            }
                                                                            else
                                                                            {
                                                                                vpct.TyLeBHTT = 0;
                                                                                vpct.TienBN = tt;
                                                                                vpct.TienBH = 0;
                                                                                vpct.TrongBH = 0;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = tt;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            if ((_tongtien - _tienvc) >= Bien.GHanTT100 && _luongCS != 1)
                                                                            {
                                                                                _tienBH = Math.Round(tt * _pttt / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                vpct.TienBH = _tienBH;
                                                                                //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                vpct.TyLeBHTT = _pttt;
                                                                                vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100; ;
                                                                                vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                            }
                                                                            else
                                                                            {
                                                                                //vpct.TienBN = 0;
                                                                                vpct.TienBH = tt;
                                                                                vpct.TyLeBHTT = 100;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                            }
                                                                            vpct.TrongBH = 1;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        if (a.trongBH == 0)
                                                                        {
                                                                            vpct.TrongBH = 0;
                                                                            vpct.TienBH = 0;
                                                                            vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                        }
                                                                        else if (a.trongBH == 2)
                                                                        {
                                                                            vpct.TrongBH = 2;
                                                                            vpct.TienBH = 0;
                                                                            vpct.TienBN = 0;
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = 0;
                                                                        }
                                                                        else
                                                                        {
                                                                            vpct.TrongBH = 3;
                                                                            vpct.TienBH = 0;
                                                                            vpct.TienBN = tt;
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = tt;
                                                                        }
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    if (_tuyen == 2) //BN trái tuyến
                                                                    {
                                                                        if (a.trongBH == 1)
                                                                        {//dịch vụ trong danh mục BHYT
                                                                            if (ktmadv.Count > 0)
                                                                            {
                                                                                if (_vanchuyen == 1)
                                                                                {
                                                                                    vpct.TienBH = tt;
                                                                                    vpct.TrongBH = 1;
                                                                                    vpct.TyLeBHTT = 100;
                                                                                    vpct.TBNCTT = 0;
                                                                                    vpct.TBNTT = 0;
                                                                                }
                                                                                else
                                                                                {
                                                                                    vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                                    vpct.TrongBH = 0;
                                                                                    vpct.TyLeBHTT = 0;
                                                                                    vpct.TBNCTT = 0;
                                                                                    vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                // mới
                                                                                if (!string.IsNullOrEmpty(_khuvuc)) // BN có khu vực ưu tiên tính theo đúng tuyến
                                                                                {
                                                                                    if (_tyle > 0)
                                                                                    {
                                                                                        vpct.TyLeBHTT = _pttt;
                                                                                        _tienBH = Math.Round(tt * _pttt / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBH = _tienBH;
                                                                                        //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        vpct.TyLeBHTT = 0;
                                                                                        vpct.TienBH = 0;
                                                                                        //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNCTT = 0;
                                                                                        vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                    }
                                                                                }
                                                                                else
                                                                                {
                                                                                    if ((_tongtien - _tienvc) < Bien.GHanTT100)// BN có tiền nhỏ hơn giới hạn thanh toán thì tính % trái tuyến theo hạng BV không nhân tỷ lệ
                                                                                    {
                                                                                        vpct.TyLeBHTT = _tyle;
                                                                                        _tienBH = Math.Round(tt * _tyle / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBH = _tienBH;
                                                                                        //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        vpct.TyLeBHTT = (_tyle * _pttt) / 100;
                                                                                        _tienBH = Math.Round(tt * _tyle / 100 * _pttt / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBH = _tienBH;
                                                                                        //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                    }
                                                                                }
                                                                                //
                                                                                if (_tyle > 0)
                                                                                    vpct.TrongBH = 1;
                                                                                else
                                                                                    vpct.TrongBH = 0;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            if (a.trongBH == 0)
                                                                            {
                                                                                vpct.TyLeBHTT = 0;
                                                                                vpct.TrongBH = 0;
                                                                                vpct.TienBH = 0;
                                                                                vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                            }
                                                                            else if (a.trongBH == 2)
                                                                            {
                                                                                vpct.TyLeBHTT = 0;
                                                                                vpct.TrongBH = 2;
                                                                                vpct.TienBH = 0;
                                                                                vpct.TienBN = 0;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = 0;
                                                                            }
                                                                            else
                                                                            {
                                                                                vpct.TyLeBHTT = 0;
                                                                                vpct.TrongBH = 3;
                                                                                vpct.TienBH = 0;
                                                                                vpct.TienBN = tt;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = tt;
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            else if (_HTTT == 2)//else
                                                            {
                                                                if (a.trongBH == 2)
                                                                {
                                                                    vpct.TyLeBHTT = 0;
                                                                    vpct.TrongBH = 2;
                                                                    vpct.TienBH = 0;
                                                                    vpct.TienBN = 0;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = 0;
                                                                }
                                                                else if (a.trongBH == 3)
                                                                {
                                                                    vpct.TyLeBHTT = 0;
                                                                    vpct.TrongBH = 3;
                                                                    vpct.TienBH = 0;
                                                                    vpct.TienBN = tt;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = tt;
                                                                }
                                                                else
                                                                {
                                                                    vpct.TyLeBHTT = 0;
                                                                    vpct.TrongBH = 0;
                                                                    vpct.TienBH = 0;
                                                                    vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                }
                                                            }
                                                            else if (_HTTT == 0)
                                                            {
                                                                switch (a.trongBH)
                                                                {
                                                                    case 1:
                                                                        vpct.TrongBH = a.trongBH;
                                                                        vpct.TienBH = tt;
                                                                        vpct.TienBN = 0;
                                                                        vpct.TyLeBHTT = 100;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = 0;
                                                                        break;

                                                                    case 2:
                                                                        vpct.TyLeBHTT = 0;
                                                                        vpct.TrongBH = a.trongBH;
                                                                        vpct.TienBH = 0;
                                                                        vpct.TienBN = 0;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = 0;
                                                                        break;

                                                                    case 0:
                                                                        vpct.TyLeBHTT = 0;
                                                                        vpct.TrongBH = a.trongBH;
                                                                        vpct.TienBH = 0;
                                                                        vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                        break;

                                                                    case 3:
                                                                        vpct.TyLeBHTT = 0;
                                                                        vpct.TrongBH = a.trongBH;
                                                                        vpct.TienBH = 0;
                                                                        vpct.TienBN = tt;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = tt;
                                                                        break;
                                                                }
                                                            }
                                                            if (vpct.ThanhToan != 1)
                                                                sotienTT += vpct.TienBN;
                                                            _data.VienPhicts.Add(vpct);
                                                            _data.SaveChanges();
                                                            if (giaVTYTTT > 0)
                                                                ThanhToan_VTYT_TT04(vpct.idVPhict, giaVTYTTT);
                                                        }
                                                        #endregion
                                                    }
                                                    else
                                                    {
                                                        #region Thanh toán thẻ mới
                                                        if (a.soluong != 0)
                                                        {
                                                            VienPhict vpct = new VienPhict();
                                                            if (_tachCP_Thu)
                                                            {
                                                                if (a.madv == _maCK)
                                                                {
                                                                    vpct.IDTamUng = a.IDCD;
                                                                }
                                                                else
                                                                {
                                                                    var soph = _data.ChiDinhs.Where(p => p.IDCD == a.IDCD).Select(p => p.SoPhieu).ToList();
                                                                    if (soph.Count > 0 && soph.First() != null)
                                                                    {
                                                                        vpct.IDTamUng = soph.First();
                                                                    }
                                                                    else
                                                                    {
                                                                    }
                                                                }
                                                            }
                                                            var vpcls = vienphiCLS.FirstOrDefault(o => o.IDDonct == a.IDDonct);
                                                            if (a.PLDV == 2 && a.IDNhom != 13 && vienphiCLS.Count > 0 && vpcls != null)
                                                            {
                                                                vpct.NgayYLenh = vpcls.cls.NgayThang;
                                                                vpct.NgayChiPhi = vpcls.cls.NgayTH ?? (a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value);
                                                            }
                                                            else
                                                            {
                                                                vpct.NgayYLenh = (a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value);
                                                                vpct.NgayChiPhi = a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value;
                                                            }
                                                            if (a.TyLeTT == 0)
                                                                vpct.TyLeTT = 100;
                                                            else
                                                                vpct.TyLeTT = a.TyLeTT;
                                                            vpct.MaKP = a.MaKP;
                                                            vpct.MaDV = a.madv;
                                                            double giaVTYTTT = 0;
                                                            double dongia = a.dongia;
                                                            var kiemtraVTYT = dsnhomdv.Where(p => p.IDNhom == 10 || p.IDNhom == 11).Where(p => p.MaDV == a.madv && p.GiaBHGioiHanTT > 0).Select(p => p.GiaBHGioiHanTT).FirstOrDefault();
                                                            if (kiemtraVTYT != null && kiemtraVTYT > 0)
                                                            {
                                                                if (dongia > kiemtraVTYT)
                                                                {
                                                                    giaVTYTTT = dongia - kiemtraVTYT;
                                                                    dongia = kiemtraVTYT;
                                                                }
                                                            }
                                                            vpct.DonGia = Bien.MaBV == "27022" ? a.dongia : dongia;

                                                            vpct.SoLuong = a.soluong;
                                                            vpct.SoLuongD = 0;
                                                            vpct.TienChenh = 0;
                                                            vpct.TienChenhBN = 0;
                                                            vpct.DonVi = a.donvi;
                                                            vpct.idVPhi = idvp;
                                                            vpct.ThanhToan = a.ThanhToan;
                                                            vpct.Mien = a.Mien;
                                                            vpct.MienCT = a.MienCT;
                                                            vpct.XHH = a.XHH;
                                                            vpct.LoaiDV = a.LoaiDV;
                                                            vpct.MaCB = a.MaCB;
                                                            vpct.AttachIDDonct = a.AttachIDDonct;

                                                            //Thêm mã kho xuất cho dtct xuất ở kho nhà thuốc nếu kho khác = null
                                                            vpct.MaKXuat = (kpNhaThuoc.Exists(o => o == a.MaKXuat) ? a.MaKXuat : null);

                                                            tt = a.MienCT == 1 ? 0 : Math.Round((vpct.SoLuong * vpct.DonGia) * (a.TyLeTT / 100), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                            double ttnew = a.MienCT == 1 ? 0 : Math.Round((vpct.SoLuong * vpct.DonGia), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                            if (a.PLoai == 1)//thuốc và vtyt tt không nhân tỉ lệ (vì chi phí luôn luôn phải trả 100%)
                                                                vpct.ThanhTien = ttnew;
                                                            else
                                                                vpct.ThanhTien = tt;
                                                            if (Bien.MaBV == "27022")
                                                            {
                                                                tt = tt - giaVTYTTT * a.soluong;
                                                                ttnew = ttnew - giaVTYTTT * a.soluong;
                                                            }
                                                            vpct.IDPerson = _idpersionnew;
                                                            if (_HTTT == 1)//  if (_DTuong == "BHYT")
                                                            {
                                                                var ktmadv = (from dv in mavanchuyen.Where(p => p == a.madv)
                                                                              select dv).ToList();
                                                                if (_tuyen == 1)//bệnh nhân đúng tuyến
                                                                {
                                                                    if (a.trongBH == 1)
                                                                    {//dịch vụ trong danh mục BHYT
                                                                        if (ktmadv.Count > 0)
                                                                        {
                                                                            if (_vanchuyen == 1)
                                                                            {
                                                                                vpct.TienBH = tt;
                                                                                vpct.TienBN = 0;
                                                                                vpct.TrongBH = 1;
                                                                                vpct.TyLeBHTT = 100;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = 0;
                                                                            }
                                                                            else
                                                                            {
                                                                                vpct.TyLeBHTT = 0;
                                                                                vpct.TienBN = tt;
                                                                                vpct.TienBH = 0;
                                                                                vpct.TrongBH = 0;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = tt;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            if ((_tongtien - _tienvc) >= Bien.GHanTT100 && _luongCS != 1)
                                                                            {
                                                                                _tienBH = Math.Round(tt * _ptttnew / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                vpct.TienBH = _tienBH;
                                                                                //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                vpct.TyLeBHTT = _ptttnew;
                                                                                vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100; ;
                                                                                vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                            }
                                                                            else
                                                                            {
                                                                                //vpct.TienBN = 0;
                                                                                vpct.TienBH = tt;
                                                                                vpct.TyLeBHTT = 100;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                            }
                                                                            vpct.TrongBH = 1;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        if (a.trongBH == 0)
                                                                        {
                                                                            vpct.TrongBH = 0;
                                                                            vpct.TienBH = 0;
                                                                            vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                        }
                                                                        else if (a.trongBH == 2)
                                                                        {
                                                                            vpct.TrongBH = 2;
                                                                            vpct.TienBH = 0;
                                                                            vpct.TienBN = 0;
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = 0;
                                                                        }
                                                                        else
                                                                        {
                                                                            vpct.TrongBH = 3;
                                                                            vpct.TienBH = 0;
                                                                            vpct.TienBN = tt;
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = tt;
                                                                        }
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    if (_tuyen == 2) //BN trái tuyến
                                                                    {
                                                                        if (a.trongBH == 1)
                                                                        {//dịch vụ trong danh mục BHYT
                                                                            if (ktmadv.Count > 0)
                                                                            {
                                                                                if (_vanchuyen == 1)
                                                                                {
                                                                                    vpct.TienBH = tt;
                                                                                    vpct.TrongBH = 1;
                                                                                    vpct.TyLeBHTT = 100;
                                                                                    vpct.TBNCTT = 0;
                                                                                    vpct.TBNTT = 0;
                                                                                }
                                                                                else
                                                                                {
                                                                                    vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                                    vpct.TrongBH = 0;
                                                                                    vpct.TyLeBHTT = 0;
                                                                                    vpct.TBNCTT = 0;
                                                                                    vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                // mới
                                                                                if (!string.IsNullOrEmpty(_khuvuc)) // BN có khu vực ưu tiên tính theo đúng tuyến
                                                                                {
                                                                                    if (_tyle > 0)
                                                                                    {
                                                                                        vpct.TyLeBHTT = _ptttnew;
                                                                                        _tienBH = Math.Round(tt * _ptttnew / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBH = _tienBH;
                                                                                        //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        vpct.TyLeBHTT = 0;
                                                                                        vpct.TienBH = 0;
                                                                                        //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNCTT = 0;
                                                                                        vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                    }
                                                                                }
                                                                                else
                                                                                {
                                                                                    if ((_tongtien - _tienvc) < Bien.GHanTT100)// BN có tiền nhỏ hơn giới hạn thanh toán thì tính % trái tuyến theo hạng BV không nhân tỷ lệ
                                                                                    {
                                                                                        vpct.TyLeBHTT = _tyle;
                                                                                        _tienBH = Math.Round(tt * _tyle / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBH = _tienBH;
                                                                                        //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        vpct.TyLeBHTT = (_tyle * _ptttnew) / 100;
                                                                                        _tienBH = Math.Round(tt * _tyle / 100 * _ptttnew / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBH = _tienBH;
                                                                                        //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                    }
                                                                                }
                                                                                //
                                                                                if (_tyle > 0)
                                                                                    vpct.TrongBH = 1;
                                                                                else
                                                                                    vpct.TrongBH = 0;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            if (a.trongBH == 0)
                                                                            {
                                                                                vpct.TyLeBHTT = 0;
                                                                                vpct.TrongBH = 0;
                                                                                vpct.TienBH = 0;
                                                                                vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                            }
                                                                            else if (a.trongBH == 2)
                                                                            {
                                                                                vpct.TyLeBHTT = 0;
                                                                                vpct.TrongBH = 2;
                                                                                vpct.TienBH = 0;
                                                                                vpct.TienBN = 0;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = 0;
                                                                            }
                                                                            else
                                                                            {
                                                                                vpct.TyLeBHTT = 0;
                                                                                vpct.TrongBH = 3;
                                                                                vpct.TienBH = 0;
                                                                                vpct.TienBN = tt;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = tt;
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            else if (_HTTT == 2)//else
                                                            {
                                                                if (a.trongBH == 2)
                                                                {
                                                                    vpct.TyLeBHTT = 0;
                                                                    vpct.TrongBH = 2;
                                                                    vpct.TienBH = 0;
                                                                    vpct.TienBN = 0;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = 0;
                                                                }
                                                                else if (a.trongBH == 3)
                                                                {
                                                                    vpct.TyLeBHTT = 0;
                                                                    vpct.TrongBH = 3;
                                                                    vpct.TienBH = 0;
                                                                    vpct.TienBN = tt;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = tt;
                                                                }
                                                                else
                                                                {
                                                                    vpct.TyLeBHTT = 0;
                                                                    vpct.TrongBH = 0;
                                                                    vpct.TienBH = 0;
                                                                    vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                }
                                                            }
                                                            else if (_HTTT == 0)
                                                            {
                                                                switch (a.trongBH)
                                                                {
                                                                    case 1:
                                                                        vpct.TrongBH = a.trongBH;
                                                                        vpct.TienBH = tt;
                                                                        vpct.TienBN = 0;
                                                                        vpct.TyLeBHTT = 100;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = 0;
                                                                        break;

                                                                    case 2:
                                                                        vpct.TyLeBHTT = 0;
                                                                        vpct.TrongBH = a.trongBH;
                                                                        vpct.TienBH = 0;
                                                                        vpct.TienBN = 0;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = 0;
                                                                        break;

                                                                    case 0:
                                                                        vpct.TyLeBHTT = 0;
                                                                        vpct.TrongBH = a.trongBH;
                                                                        vpct.TienBH = 0;
                                                                        vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                        break;

                                                                    case 3:
                                                                        vpct.TyLeBHTT = 0;
                                                                        vpct.TrongBH = a.trongBH;
                                                                        vpct.TienBH = 0;
                                                                        vpct.TienBN = tt;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = tt;
                                                                        break;
                                                                }
                                                            }
                                                            if (vpct.ThanhToan != 1)
                                                                sotienTT += vpct.TienBN;
                                                            _data.VienPhicts.Add(vpct);
                                                            _data.SaveChanges();
                                                            if (giaVTYTTT > 0)
                                                                ThanhToan_VTYT_TT04(vpct.idVPhict, giaVTYTTT);
                                                        }
                                                        #endregion
                                                    }
                                                }

                                                DungChung.Ham._setStatus(_mabn, 3);
                                            }
                                            //kt
                                            else
                                            {
                                                MessageBox.Show("không có mã bệnh nhân trong bảng viện phí");
                                            }
                                        }
                                    }
                                    else
                                    {
                                        var vienphi = (from kd in _dataContext.DThuocs.Where(p => p.KieuDon != -2)
                                                       join kdct in _dataContext.DThuoccts.Where(o => o.IsMuaNgoai == null || o.IsMuaNgoai == false).OrderBy(p => p.IDDonct) on kd.IDDon equals kdct.IDDon
                                                       join dv in _dataContext.DichVus on kdct.MaDV equals dv.MaDV
                                                       where (kd.MaBNhan == _mabn)
                                                       group new { kdct, dv } by new { dv.PLoai, kdct.LoaiDV, kdct.AttachIDDonct, kdct.NgayNhap, dv.TenDV, dv.IDNhom, kdct.TyLeTT, kdct.Mien, kdct.XHH, kdct.ThanhToan, ck = (_maCK == dv.MaDV ? kdct.MaKP : _makpsd), IDCD = _tachCP_Thu ? kdct.IDCD : 0, MaKP = _tachKP ? kdct.MaKP : _makpsd, kdct.MaDV, kdct.DonGia, kdct.DonVi, kdct.TrongBH, kdct.MaCB, kdct.MienCT, kdct.IDDonct, kd.PLDV } into kq
                                                       select new { kq.Key.AttachIDDonct, kq.Key.PLoai, kq.Key.IDNhom, kq.Key.NgayNhap, kq.Key.LoaiDV, kq.Key.TenDV, kq.Key.TyLeTT, kq.Key.XHH, kq.Key.ThanhToan, kq.Key.Mien, idct = kq.Select(p => p.kdct.IDDonct).Min(), kq.Key.IDCD, kq.Key.MaKP, madv = kq.Key.MaDV, dongia = kq.Key.DonGia, donvi = kq.Key.DonVi, trongBH = kq.Key.TrongBH, soluong = kq.Sum(p => p.kdct.SoLuong), thanhtien = kq.Sum(p => p.kdct.ThanhTien), kq.Key.MaCB, kq.Key.MienCT, kq.Key.IDDonct, kq.Key.PLDV }).OrderBy(p => p.idct).ToList();

                                        var vienphiCLS = (from kd in _dataContext.DThuocs.Where(o => o.MaBNhan == _mabn && o.PLDV == 2)
                                                          join kdct in _dataContext.DThuoccts on kd.IDDon equals kdct.IDDon
                                                          join cls in _dataContext.CLS.Where(o => o.MaBNhan == _mabn) on kdct.IDCLS equals cls.IdCLS
                                                          select new { cls, kdct.IDDonct, kdct.NgayNhap }).ToList();

                                        // kiểm tra vận chuyển
                                        foreach (var a in vienphi)
                                        {
                                            double tt = Math.Round(Math.Round(a.thanhtien, 2), 0);
                                            double ttDonGiaSL = a.MienCT == 1 ? 0 : (Math.Round(Math.Round(a.soluong * a.dongia * (100 - a.Mien) * a.TyLeTT * 0.0001, 2), 0));
                                            if (tt != ttDonGiaSL)
                                            {
                                                MessageBox.Show(a.TenDV + " Thành tiền không bằng số lượng * đơn giá * tỷ lệ TT trừ miễn");
                                                BenhNhan qbn = _dataContext.BenhNhans.Single(p => p.MaBNhan == _mabn);
                                                if (qbn.DTNT == false && qbn.NoiTru == 0)
                                                    _LuuXoaRaVien(_dataContext, _mabn, dtNgayTT, "Xoa", 2);
                                                return false;
                                            }
                                            if (string.IsNullOrEmpty(a.MaCB))
                                            {
                                                MessageBox.Show(a.TenDV + " Chưa có mã bác sĩ, đang được update tự động\n Vui lòng thanh toán lại");
                                                updateMaCB(_mabn);
                                                return false;
                                            }
                                            var ktmadv = (from dv in mavanchuyen.Where(p => p == a.madv)
                                                          select dv).ToList();
                                            if (a.trongBH == 1)
                                            {
                                                if (ktmadv.Count > 0)
                                                {
                                                    _tienvc = a.thanhtien;
                                                    break;
                                                }
                                            }
                                        }

                                        //
                                        VienPhi vp = new VienPhi();
                                        vp.MaBNhan = kt.First().ds.MaBNhan;
                                        vp.NgayTT = dtNgayTT;
                                        vp.NgayRa = ravien.First().NgayRa;
                                        vp.NgayTachCP = _ngayTachThe;
                                        bool _ngoaih = false;
                                        _ngoaih = DungChung.Ham.CheckNGioHC(dtNgayTT);
                                        vp.NgoaiGio = 0;
                                        if (DungChung.Bien.MaBV != "24272")
                                        {
                                            if (_ngoaih == true)
                                            {
                                                if (MessageBox.Show("BN TT ngoài giờ hành chính?", "Thông báo", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                                                    vp.NgoaiGio = 1;
                                            }
                                        }
                                        vp.MaCB = Bien.MaCB;
                                        vp.MaKP = Bien.MaKP;
                                        _dataContext.VienPhis.Add(vp);
                                        if (_dataContext.SaveChanges() >= 0)
                                        {
                                            var q = _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn).OrderByDescending(p => p.idVPhi).ToList();
                                            if (q.Count > 0)
                                            {
                                                idvp = q.First().idVPhi;
                                            }
                                            else
                                            {
                                                idvp = 3;
                                            }
                                            QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(Bien.StrCon);
                                            double tt = 0;
                                            double _tongtien = 0;
                                            if (vienphi.Where(p => p.trongBH == 1).ToList().Count > 0)
                                                _tongtien = Math.Round(vienphi.Where(p => p.trongBH == 1).Sum(p => p.thanhtien), 2, MidpointRounding.AwayFromZero);//ktra
                                            if (idvp > 0)
                                            {
                                                foreach (var a in vienphi)
                                                {
                                                    if (a.NgayNhap <= _ngayTachThe)
                                                    {
                                                        #region Thanh toán thẻ cũ
                                                        if (a.soluong != 0)
                                                        {
                                                            VienPhict vpct = new VienPhict();
                                                            if (_tachCP_Thu)
                                                            {
                                                                if (a.madv == _maCK)
                                                                {
                                                                    vpct.IDTamUng = a.IDCD;
                                                                }
                                                                else
                                                                {
                                                                    var soph = _data.ChiDinhs.Where(p => p.IDCD == a.IDCD).Select(p => p.SoPhieu).ToList();
                                                                    if (soph.Count > 0 && soph.First() != null)
                                                                    {
                                                                        vpct.IDTamUng = soph.First();
                                                                    }
                                                                    else
                                                                    {
                                                                    }
                                                                }
                                                            }
                                                            var vpcls = vienphiCLS.FirstOrDefault(o => o.IDDonct == a.IDDonct);
                                                            if (a.PLDV == 2 && a.IDNhom != 13 && vienphiCLS.Count > 0 && vpcls != null)
                                                            {
                                                                vpct.NgayYLenh = vpcls.cls.NgayThang;
                                                                vpct.NgayChiPhi = vpcls.cls.NgayTH ?? (a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value);
                                                            }
                                                            else
                                                            {
                                                                vpct.NgayYLenh = (a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value);
                                                                vpct.NgayChiPhi = a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value;
                                                            }
                                                            if (a.TyLeTT == 0)
                                                                vpct.TyLeTT = 100;
                                                            else
                                                                vpct.TyLeTT = a.TyLeTT;
                                                            vpct.MaKP = a.MaKP;
                                                            vpct.MaDV = a.madv;
                                                            double giaVTYTTT = 0;
                                                            double dongia = a.dongia;
                                                            var kiemtraVTYT = dsnhomdv.Where(p => p.IDNhom == 10 || p.IDNhom == 11).Where(p => p.MaDV == a.madv && p.GiaBHGioiHanTT > 0).Select(p => p.GiaBHGioiHanTT).FirstOrDefault();
                                                            if (kiemtraVTYT != null && kiemtraVTYT > 0)
                                                            {
                                                                if (dongia > kiemtraVTYT)
                                                                {
                                                                    giaVTYTTT = dongia - kiemtraVTYT;
                                                                    dongia = kiemtraVTYT;
                                                                }
                                                            }
                                                            vpct.DonGia = Bien.MaBV == "27022" ? a.dongia : dongia;

                                                            vpct.SoLuong = a.soluong;
                                                            vpct.SoLuongD = 0;
                                                            vpct.TienChenh = 0;
                                                            vpct.TienChenhBN = 0;
                                                            vpct.DonVi = a.donvi;
                                                            vpct.idVPhi = idvp;
                                                            vpct.ThanhToan = a.ThanhToan;
                                                            vpct.Mien = a.Mien;
                                                            vpct.MienCT = a.MienCT;
                                                            vpct.XHH = a.XHH;
                                                            vpct.LoaiDV = a.LoaiDV;
                                                            vpct.MaCB = a.MaCB;
                                                            vpct.AttachIDDonct = a.AttachIDDonct;
                                                            tt = a.MienCT == 1 ? 0 : Math.Round((vpct.SoLuong * vpct.DonGia) * (a.TyLeTT / 100), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                            double ttnew = a.MienCT == 1 ? 0 : Math.Round((vpct.SoLuong * vpct.DonGia), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                            if (a.PLoai == 1)//thuốc và vtyt tt không nhân tỉ lệ (vì chi phí luôn luôn phải trả 100%)
                                                                vpct.ThanhTien = ttnew;
                                                            else
                                                                vpct.ThanhTien = tt;
                                                            if (Bien.MaBV == "27022")
                                                            {
                                                                tt = tt - giaVTYTTT * a.soluong;
                                                                ttnew = ttnew - giaVTYTTT * a.soluong;
                                                            }
                                                            vpct.IDPerson = _idpersion;
                                                            if (_HTTT == 1) //if (_DTuong == "BHYT")
                                                            {
                                                                var ktmadv = (from dv in mavanchuyen.Where(p => p == a.madv)
                                                                              select dv).ToList();
                                                                if (_tuyen == 1)//bệnh nhân đúng tuyến
                                                                {
                                                                    if (a.trongBH == 1)
                                                                    {//dịch vụ trong danh mục BHYT
                                                                        if (ktmadv.Count > 0)
                                                                        {
                                                                            if (_vanchuyen == 1)
                                                                            {
                                                                                vpct.TienBH = tt;
                                                                                vpct.TrongBH = 1;
                                                                                vpct.TienBN = 0;
                                                                                vpct.TyLeBHTT = 100;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = 0;
                                                                            }
                                                                            else
                                                                            {
                                                                                vpct.TienBH = 0;
                                                                                vpct.TienBN = tt;
                                                                                vpct.TrongBH = 0;
                                                                                vpct.TyLeBHTT = 0;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = tt;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            if ((_tongtien - _tienvc) >= Bien.GHanTT100 && _luongCS != 1)
                                                                            {
                                                                                vpct.TyLeBHTT = _pttt;
                                                                                _tienBH = Math.Round(tt * _pttt / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                vpct.TienBH = _tienBH;
                                                                                //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                                vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                            }
                                                                            else
                                                                            {
                                                                                vpct.TyLeBHTT = 100;
                                                                                //vpct.TienBN = 0;
                                                                                vpct.TienBH = tt;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                            }
                                                                            vpct.TrongBH = 1;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        if (a.trongBH == 0)
                                                                        {
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TrongBH = 0;
                                                                            vpct.TienBH = 0;
                                                                            vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                        }
                                                                        else if (a.trongBH == 2)
                                                                        {
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TrongBH = 2;
                                                                            vpct.TienBH = 0;
                                                                            vpct.TienBN = 0;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = 0;
                                                                        }
                                                                        else
                                                                        {
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TrongBH = 3;
                                                                            vpct.TienBH = 0;
                                                                            vpct.TienBN = tt;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = tt;
                                                                        }
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    if (_tuyen == 2) //BN trái tuyến
                                                                    {
                                                                        if (a.trongBH == 1)
                                                                        {//dịch vụ trong danh mục BHYT
                                                                            if (ktmadv.Count > 0)
                                                                            {
                                                                                if (_vanchuyen == 1)
                                                                                {
                                                                                    vpct.TyLeBHTT = 100;
                                                                                    vpct.TienBH = tt;
                                                                                    vpct.TrongBH = 1;
                                                                                    vpct.TBNCTT = 0;
                                                                                    vpct.TBNTT = 0;
                                                                                }
                                                                                else
                                                                                {
                                                                                    vpct.TyLeBHTT = 0;
                                                                                    vpct.TienBN = tt;
                                                                                    vpct.TrongBH = 0;
                                                                                    vpct.TBNCTT = 0;
                                                                                    vpct.TBNTT = tt;
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                // mới
                                                                                if (!string.IsNullOrEmpty(_khuvuc)) // BN có khu vực ưu tiên tính theo đúng tuyến
                                                                                {
                                                                                    if (_tyle > 0)
                                                                                    {
                                                                                        vpct.TyLeBHTT = _pttt;
                                                                                        _tienBH = Math.Round(tt * _pttt / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBH = _tienBH;
                                                                                        //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        vpct.TyLeBHTT = 0;
                                                                                        vpct.TienBH = 0;
                                                                                        //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNCTT = 0;
                                                                                        vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                    }
                                                                                }
                                                                                else
                                                                                {
                                                                                    if ((_tongtien - _tienvc) < Bien.GHanTT100)// BN có tiền nhỏ hơn giới hạn thanh toán thì tính % trái tuyến theo hạng BV không nhân tỷ lệ
                                                                                    {
                                                                                        vpct.TyLeBHTT = _tyle;
                                                                                        _tienBH = Math.Round(tt * _tyle / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBH = _tienBH;
                                                                                        //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        vpct.TyLeBHTT = (_tyle * _pttt) / 100;
                                                                                        _tienBH = Math.Round(tt * _tyle / 100 * _pttt / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBH = _tienBH;
                                                                                        //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                    }
                                                                                }
                                                                                if (_tyle > 0)
                                                                                    vpct.TrongBH = 1;
                                                                                else
                                                                                    vpct.TrongBH = 0;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            if (a.trongBH == 0)
                                                                            {
                                                                                vpct.TyLeBHTT = 0;
                                                                                vpct.TrongBH = 0;
                                                                                vpct.TienBH = 0;
                                                                                vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                            }
                                                                            else if (a.trongBH == 2)
                                                                            {
                                                                                vpct.TyLeBHTT = 0;
                                                                                vpct.TrongBH = 2;
                                                                                vpct.TienBH = 0;
                                                                                vpct.TienBN = 0;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = 0;
                                                                            }
                                                                            else
                                                                            {
                                                                                vpct.TyLeBHTT = 0;
                                                                                vpct.TrongBH = 3;
                                                                                vpct.TienBH = 0;
                                                                                vpct.TienBN = tt;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = tt;
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            else if (_HTTT == 2)//else
                                                            {
                                                                if (a.trongBH == 2)
                                                                {
                                                                    vpct.TrongBH = 2;
                                                                    vpct.TienBH = 0;
                                                                    vpct.TienBN = 0;
                                                                    vpct.TyLeBHTT = 100;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = 0;
                                                                }
                                                                else if (a.trongBH == 3)
                                                                {
                                                                    vpct.TyLeBHTT = 0;
                                                                    vpct.TrongBH = 3;
                                                                    vpct.TienBH = 0;
                                                                    vpct.TienBN = tt;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = tt;
                                                                }
                                                                else
                                                                {
                                                                    vpct.TyLeBHTT = 0;
                                                                    vpct.TrongBH = 0;
                                                                    vpct.TienBH = 0;
                                                                    vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                }
                                                            }
                                                            else if (_HTTT == 0)
                                                            {
                                                                switch (a.trongBH)
                                                                {
                                                                    case 1:
                                                                        vpct.TyLeBHTT = 100;
                                                                        vpct.TrongBH = a.trongBH;
                                                                        vpct.TienBH = tt;
                                                                        vpct.TienBN = 0;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = 0;
                                                                        break;

                                                                    case 2:
                                                                        vpct.TyLeBHTT = 0;
                                                                        vpct.TrongBH = a.trongBH;
                                                                        vpct.TienBH = 0;
                                                                        vpct.TienBN = 0;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = 0;
                                                                        break;

                                                                    case 0:
                                                                        vpct.TyLeBHTT = 0;
                                                                        vpct.TrongBH = a.trongBH;
                                                                        vpct.TienBH = 0;
                                                                        vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                        break;

                                                                    case 3:
                                                                        vpct.TyLeBHTT = 0;
                                                                        vpct.TrongBH = a.trongBH;
                                                                        vpct.TienBH = 0;
                                                                        vpct.TienBN = tt;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = tt;
                                                                        break;
                                                                }
                                                            }
                                                            if (vpct.ThanhToan != 1)
                                                                sotienTT += vpct.TienBN;
                                                            _data.VienPhicts.Add(vpct);
                                                            _data.SaveChanges();
                                                            if (giaVTYTTT > 0)
                                                                ThanhToan_VTYT_TT04(vpct.idVPhict, giaVTYTTT);
                                                        }
                                                        #endregion
                                                    }
                                                    else
                                                    {
                                                        #region Thanh toán thẻ mới
                                                        if (a.soluong != 0)
                                                        {
                                                            VienPhict vpct = new VienPhict();
                                                            if (_tachCP_Thu)
                                                            {
                                                                if (a.madv == _maCK)
                                                                {
                                                                    vpct.IDTamUng = a.IDCD;
                                                                }
                                                                else
                                                                {
                                                                    var soph = _data.ChiDinhs.Where(p => p.IDCD == a.IDCD).Select(p => p.SoPhieu).ToList();
                                                                    if (soph.Count > 0 && soph.First() != null)
                                                                    {
                                                                        vpct.IDTamUng = soph.First();
                                                                    }
                                                                    else
                                                                    {
                                                                    }
                                                                }
                                                            }
                                                            var vpcls = vienphiCLS.FirstOrDefault(o => o.IDDonct == a.IDDonct);
                                                            if (a.PLDV == 2 && a.IDNhom != 13 && vienphiCLS.Count > 0 && vpcls != null)
                                                            {
                                                                vpct.NgayYLenh = vpcls.cls.NgayThang;
                                                                vpct.NgayChiPhi = vpcls.cls.NgayTH ?? (a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value);
                                                            }
                                                            else
                                                            {
                                                                vpct.NgayYLenh = (a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value);
                                                                vpct.NgayChiPhi = a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value;
                                                            }
                                                            if (a.TyLeTT == 0)
                                                                vpct.TyLeTT = 100;
                                                            else
                                                                vpct.TyLeTT = a.TyLeTT;
                                                            vpct.MaKP = a.MaKP;
                                                            vpct.MaDV = a.madv;
                                                            double giaVTYTTT = 0;
                                                            double dongia = a.dongia;
                                                            var kiemtraVTYT = dsnhomdv.Where(p => p.IDNhom == 10 || p.IDNhom == 11).Where(p => p.MaDV == a.madv && p.GiaBHGioiHanTT > 0).Select(p => p.GiaBHGioiHanTT).FirstOrDefault();
                                                            if (kiemtraVTYT != null && kiemtraVTYT > 0)
                                                            {
                                                                if (dongia > kiemtraVTYT)
                                                                {
                                                                    giaVTYTTT = dongia - kiemtraVTYT;
                                                                    dongia = kiemtraVTYT;
                                                                }
                                                            }
                                                            vpct.DonGia = Bien.MaBV == "27022" ? a.dongia : dongia;

                                                            vpct.SoLuong = a.soluong;
                                                            vpct.SoLuongD = 0;
                                                            vpct.TienChenh = 0;
                                                            vpct.TienChenhBN = 0;
                                                            vpct.DonVi = a.donvi;
                                                            vpct.idVPhi = idvp;
                                                            vpct.ThanhToan = a.ThanhToan;
                                                            vpct.Mien = a.Mien;
                                                            vpct.MienCT = a.MienCT;
                                                            vpct.XHH = a.XHH;
                                                            vpct.LoaiDV = a.LoaiDV;
                                                            vpct.MaCB = a.MaCB;
                                                            vpct.AttachIDDonct = a.AttachIDDonct;
                                                            tt = a.MienCT == 1 ? 0 : Math.Round((vpct.SoLuong * vpct.DonGia) * (a.TyLeTT / 100), Bien.LamTronSo);
                                                            double ttnew = a.MienCT == 1 ? 0 : Math.Round((vpct.SoLuong * vpct.DonGia), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                            if (a.PLoai == 1)//thuốc và vtyt tt không nhân tỉ lệ (vì chi phí luôn luôn phải trả 100%)
                                                                vpct.ThanhTien = ttnew;
                                                            else
                                                                vpct.ThanhTien = tt;
                                                            if (Bien.MaBV == "27022")
                                                            {
                                                                tt = tt - giaVTYTTT * a.soluong;
                                                                ttnew = ttnew - giaVTYTTT * a.soluong;
                                                            }
                                                            vpct.IDPerson = _idpersionnew;
                                                            if (_HTTT == 1) //if (_DTuong == "BHYT")
                                                            {
                                                                var ktmadv = (from dv in mavanchuyen.Where(p => p == a.madv)
                                                                              select dv).ToList();
                                                                if (_tuyen == 1)//bệnh nhân đúng tuyến
                                                                {
                                                                    if (a.trongBH == 1)
                                                                    {//dịch vụ trong danh mục BHYT
                                                                        if (ktmadv.Count > 0)
                                                                        {
                                                                            if (_vanchuyen == 1)
                                                                            {
                                                                                vpct.TienBH = tt;
                                                                                vpct.TrongBH = 1;
                                                                                vpct.TienBN = 0;
                                                                                vpct.TyLeBHTT = 100;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = 0;
                                                                            }
                                                                            else
                                                                            {
                                                                                vpct.TienBH = 0;
                                                                                vpct.TienBN = tt;
                                                                                vpct.TrongBH = 0;
                                                                                vpct.TyLeBHTT = 0;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = tt;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            if ((_tongtien - _tienvc) >= Bien.GHanTT100 && _luongCS != 1)
                                                                            {
                                                                                vpct.TyLeBHTT = _ptttnew;
                                                                                _tienBH = Math.Round(tt * _ptttnew / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                vpct.TienBH = _tienBH;
                                                                                //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                                vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                            }
                                                                            else
                                                                            {
                                                                                vpct.TyLeBHTT = 100;
                                                                                //vpct.TienBN = 0;
                                                                                vpct.TienBH = tt;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                            }
                                                                            vpct.TrongBH = 1;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        if (a.trongBH == 0)
                                                                        {
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TrongBH = 0;
                                                                            vpct.TienBH = 0;
                                                                            vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                        }
                                                                        else if (a.trongBH == 2)
                                                                        {
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TrongBH = 2;
                                                                            vpct.TienBH = 0;
                                                                            vpct.TienBN = 0;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = 0;
                                                                        }
                                                                        else
                                                                        {
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TrongBH = 3;
                                                                            vpct.TienBH = 0;
                                                                            vpct.TienBN = tt;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = tt;
                                                                        }
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    if (_tuyen == 2) //BN trái tuyến
                                                                    {
                                                                        if (a.trongBH == 1)
                                                                        {//dịch vụ trong danh mục BHYT
                                                                            if (ktmadv.Count > 0)
                                                                            {
                                                                                if (_vanchuyen == 1)
                                                                                {
                                                                                    vpct.TyLeBHTT = 100;
                                                                                    vpct.TienBH = tt;
                                                                                    vpct.TrongBH = 1;
                                                                                    vpct.TBNCTT = 0;
                                                                                    vpct.TBNTT = 0;
                                                                                }
                                                                                else
                                                                                {
                                                                                    vpct.TyLeBHTT = 0;
                                                                                    vpct.TienBN = tt;
                                                                                    vpct.TrongBH = 0;
                                                                                    vpct.TBNCTT = 0;
                                                                                    vpct.TBNTT = tt;
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                // mới
                                                                                if (!string.IsNullOrEmpty(_khuvuc)) // BN có khu vực ưu tiên tính theo đúng tuyến
                                                                                {
                                                                                    if (_tyle > 0)
                                                                                    {
                                                                                        vpct.TyLeBHTT = _ptttnew;
                                                                                        _tienBH = Math.Round(tt * _ptttnew / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBH = _tienBH;
                                                                                        //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        vpct.TyLeBHTT = 0;
                                                                                        vpct.TienBH = 0;
                                                                                        //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNCTT = 0;
                                                                                        vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                    }
                                                                                }
                                                                                else
                                                                                {
                                                                                    if ((_tongtien - _tienvc) < Bien.GHanTT100)// BN có tiền nhỏ hơn giới hạn thanh toán thì tính % trái tuyến theo hạng BV không nhân tỷ lệ
                                                                                    {
                                                                                        vpct.TyLeBHTT = _tyle;
                                                                                        _tienBH = Math.Round(tt * _tyle / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBH = _tienBH;
                                                                                        //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        vpct.TyLeBHTT = (_tyle * _ptttnew) / 100;
                                                                                        _tienBH = Math.Round(tt * _tyle / 100 * _ptttnew / 100, Bien.LamTronSo);
                                                                                        vpct.TienBH = _tienBH;
                                                                                        //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                        vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                    }
                                                                                }
                                                                                if (_tyle > 0)
                                                                                    vpct.TrongBH = 1;
                                                                                else
                                                                                    vpct.TrongBH = 0;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            if (a.trongBH == 0)
                                                                            {
                                                                                vpct.TyLeBHTT = 0;
                                                                                vpct.TrongBH = 0;
                                                                                vpct.TienBH = 0;
                                                                                vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                            }
                                                                            else if (a.trongBH == 2)
                                                                            {
                                                                                vpct.TyLeBHTT = 0;
                                                                                vpct.TrongBH = 2;
                                                                                vpct.TienBH = 0;
                                                                                vpct.TienBN = 0;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = 0;
                                                                            }
                                                                            else
                                                                            {
                                                                                vpct.TyLeBHTT = 0;
                                                                                vpct.TrongBH = 3;
                                                                                vpct.TienBH = 0;
                                                                                vpct.TienBN = tt;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = tt;
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            else if (_HTTT == 2)//else
                                                            {
                                                                if (a.trongBH == 2)
                                                                {
                                                                    vpct.TrongBH = 2;
                                                                    vpct.TienBH = 0;
                                                                    vpct.TienBN = 0;
                                                                    vpct.TyLeBHTT = 100;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = 0;
                                                                }
                                                                else if (a.trongBH == 3)
                                                                {
                                                                    vpct.TyLeBHTT = 0;
                                                                    vpct.TrongBH = 3;
                                                                    vpct.TienBH = 0;
                                                                    vpct.TienBN = tt;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = tt;
                                                                }
                                                                else
                                                                {
                                                                    vpct.TyLeBHTT = 0;
                                                                    vpct.TrongBH = 0;
                                                                    vpct.TienBH = 0;
                                                                    vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                }
                                                            }
                                                            else if (_HTTT == 0)
                                                            {
                                                                switch (a.trongBH)
                                                                {
                                                                    case 1:
                                                                        vpct.TyLeBHTT = 100;
                                                                        vpct.TrongBH = a.trongBH;
                                                                        vpct.TienBH = tt;
                                                                        vpct.TienBN = 0;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = 0;
                                                                        break;

                                                                    case 2:
                                                                        vpct.TyLeBHTT = 0;
                                                                        vpct.TrongBH = a.trongBH;
                                                                        vpct.TienBH = 0;
                                                                        vpct.TienBN = 0;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = 0;
                                                                        break;

                                                                    case 0:
                                                                        vpct.TyLeBHTT = 0;
                                                                        vpct.TrongBH = a.trongBH;
                                                                        vpct.TienBH = 0;
                                                                        vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                        break;

                                                                    case 3:
                                                                        vpct.TyLeBHTT = 0;
                                                                        vpct.TrongBH = a.trongBH;
                                                                        vpct.TienBH = 0;
                                                                        vpct.TienBN = tt;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = tt;
                                                                        break;
                                                                }
                                                            }
                                                            if (vpct.ThanhToan != 1)
                                                                sotienTT += vpct.TienBN;
                                                            _data.VienPhicts.Add(vpct);
                                                            _data.SaveChanges();
                                                            if (giaVTYTTT > 0)
                                                                ThanhToan_VTYT_TT04(vpct.idVPhict, giaVTYTTT);
                                                        }
                                                        #endregion
                                                    }
                                                }

                                                DungChung.Ham._setStatus(_mabn, 3);
                                            }//kt
                                            else
                                            {
                                                MessageBox.Show("không có mã bệnh nhân trong bảng viện phí");
                                            }
                                        }
                                        // tạo sao lưu\
                                        //DungChung.Ham.updateChiPhiDV(_dataContext, idvp);
                                    }
                                    #endregion
                                }
                            }

                            #region in số TT bệnh nhân thanh toán 27001
                            if (Bien.MaBV == "27001")
                            {
                                var qbn = _dataContext.BenhNhans.Where(p => p.MaBNhan == _mabn).FirstOrDefault();
                                if (qbn != null && qbn.NoiTru == 0)
                                {
                                    var qSoDKExit = _dataContext.SoDKKBs.Where(p => p.MaBNhan == _mabn && p.Status == 3).ToList();
                                    if (qSoDKExit.Count == 0)
                                    {
                                        DateTime NgayTT = dtNgayTT.Date;
                                        var qsodk = _dataContext.SoDKKBs.Where(p => p.NgayDK == NgayTT && p.Status == 3).OrderByDescending(p => p.SoDK).ToList();
                                        int sodk = 1;
                                        if (qsodk.Count > 0)
                                        {
                                            sodk = qsodk.First().SoDK + 1;
                                        }
                                        SoDKKB dkMoi = new SoDKKB();
                                        dkMoi.SoDK = sodk;
                                        dkMoi.Status = 3;
                                        dkMoi.NgayDK = NgayTT;
                                        dkMoi.MaBNhan = _mabn;
                                        dkMoi.GioDK = dtNgayTT.TimeOfDay;
                                        _dataContext.SoDKKBs.Add(dkMoi);
                                        _dataContext.SaveChanges();
                                    }
                                }
                            }
                            #endregion
                            return true;
                            //TimKiem();
                        } // két thúc kiểm tra bn có chi phí hay ko
                        else
                        {
                            MessageBox.Show("Bệnh nhân này không có dịch vụ để thanh toán!");
                        }
                    }
                    else
                    {
                        string _tenbn = "";
                        MessageBox.Show("bệnh nhân " + _tenbn + " đã thanh toán");
                    }
                    return true;
                }
                else
                {
                    return false;
                }
            }
            catch (Exception ex)
            {
                RollBackVienPhi(_mabn);
                DungChung.WriteLog.Warn(ex);
                return false;
            }
        }

        public static bool ThanhToan(QLBV_Database.QLBVEntities _dataContext, int _mabn, DateTime dtNgayTT, int _makptt)
        {
            _dataContext = EntityDbContext.DbContext;

            try
            {
                int _HTTT = -1;
                string _muc = "";
                double _tienBH = 0;
                int _pttt = 0;
                int _tuyen = 1;
                int idvp = 0;
                string _DTuong = "";
                int _HangBV = 3;
                bool ttoan = true;
                bool _ktraBNDieuTri = true;
                // bool _ktraBV_TyLeTT = false; // kiểm tra tính tỷ lệ thanh toán của dịch vụ (đối với bệnh viện tuyến D hàng 4 bv Tuyến xã Việt Yên); => thành tiền = số lượng * đơn giá (ko nhân với tỷ lệ BHTT), tính tiền của bệnh nhân mới thêm tỷ lệ thanh toán
                List<RaVien> ravien = new List<RaVien>();
                //var macqcq = _dataContext.BenhViens.Where(p => p.MaBV == Bien.MaBV).FirstOrDefault();
                //if (macqcq != null)
                //{
                //  string  _maCQCQ = macqcq.MaChuQuan;
                //    if (_maCQCQ == "24009")
                //    {
                //        string tuyen = macqcq.TuyenBV.Trim();
                //        int? hangBV = macqcq.HangBV;
                //        if (tuyen == "D" && hangBV == 4)
                //            _ktraBV_TyLeTT = true;
                //    }
                //}
                var bn = _dataContext.BenhNhans.Where(p => p.MaBNhan == _mabn).ToList();
                ravien = _dataContext.RaViens.Where(p => p.MaBNhan == _mabn).ToList();
                var kttt = _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn).ToList();
                var kt = (from ds in _dataContext.DThuocs.Where(p => p.MaBNhan == _mabn)
                          join dtct in _dataContext.DThuoccts on ds.IDDon equals dtct.IDDon
                          select new { dtct, ds }).OrderBy(p => p.ds.IDDon).ToList();

                double sotienTT = 0;

                var ngaykemax = kt.Max(p => p.dtct.NgayNhap);
                int _noitru = 0; bool _dtnt = false;
                if (bn.Count > 0)
                {
                    _noitru = bn.First().NoiTru ?? 0;
                    _dtnt = bn.First().DTNT;
                }

                if (Bien.MaBV == "30340" && _noitru == 0 && !_dtnt)
                {
                    var ngayKham = _dataContext.BNKBs.Where(o => o.MaBNhan == _mabn).Max(o => o.NgayKham);
                    if (ngayKham != null && dtNgayTT < ngayKham.Value.AddMinutes(10))
                    {
                        MessageBox.Show("Ngày thanh toán phải lớn hơn ngày khám 10 phút");
                        return false;
                    }
                }

                #region TH bệnh nhân vào viện nhưng không có phát sinh chi phí trong khoa
                _ktraBNDieuTri = ktBNNoiNgoaiTru(_mabn);
                if (!_ktraBNDieuTri)
                {
                    DialogResult _result = DialogResult.No;
                    _result = MessageBox.Show("Bệnh nhân " + bn.First().TenBNhan + " đã vào viện nhưng chưa có phát sinh chi phí trong khoa, bạn muốn cập nhật lại bệnh nhân thành khám bệnh ngoại trú ?", "Cập nhật bệnh nhân", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                    if (_result == DialogResult.Yes)
                    {
                        #region cập nhật lại thành bệnh nhân ngoại trú
                        var qkb = (from kb in _dataContext.BNKBs.Where(p => p.MaBNhan == _mabn)
                                   join kp in _dataContext.KPhongs.Where(p => p.PLoai == Bien.st_PhanLoaiKP.PhongKham) on kb.MaKP equals kp.MaKP
                                   select kb).OrderByDescending(p => p.IDKB).FirstOrDefault();
                        foreach (var a in bn)
                        {
                            a.NoiTru = 0;
                            if (qkb != null)
                                a.MaKP = qkb.MaKP;
                        }
                        // xóa vào viện
                        var qvv = _dataContext.VaoViens.Where(p => p.MaBNhan == _mabn).ToList();
                        foreach (var a in qvv)
                        {
                            _dataContext.VaoViens.Remove(a);
                        }
                        // xóa BNKB

                        var qkbNT = (from kb in _dataContext.BNKBs.Where(p => p.MaBNhan == _mabn)
                                     join kp in _dataContext.KPhongs.Where(p => p.PLoai == Bien.st_PhanLoaiKP.LamSang) on kb.MaKP equals kp.MaKP
                                     select kb).ToList();
                        foreach (var a in qkbNT)
                        {
                            _dataContext.BNKBs.Remove(a);
                        }

                        _dataContext.SaveChanges();

                        // cập nhật lại mã kp điều trị trong bảng BNKB
                        var qBNKBConLai = (from kb in _dataContext.BNKBs.Where(p => p.MaBNhan == _mabn)
                                           join kp in _dataContext.KPhongs on kb.MaKP equals kp.MaKP
                                           select kb).ToList();
                        foreach (var a in qBNKBConLai)
                        {
                            a.MaKPdt = a.MaKP;
                            if (a.PhuongAn == 1)
                                a.PhuongAn = 0;
                        }

                        _dataContext.SaveChanges();

                        //? new QLBV_Database.QLBVEntities ?
                        #endregion
                    }
                    else
                        return false;
                }
                #endregion

                if (_mabn <= 0)
                {
                    return false;
                }
                if (DungChung.Ham._checkNgayKhoa(_dataContext, dtNgayTT, "KhoaVP"))
                {
                    return false;
                }
                if (DungChung.Ham.KTCongKham_ngaygiuong(_dataContext, _mabn) == true)
                {
                    return false;
                }
                if (DungChung.Ham.KTCongKhamTyLe100(_dataContext, bn.First().IDPerson ?? 0) == false)
                {
                    MessageBox.Show("Bệnh nhân không có công khám nào có tỷ lệ thanh toán là 100%");
                    return false;
                }
                int _tyle = 0;
                string tencd = "";

                tencd = DungChung.Ham.KTChiDinh(_dataContext, _mabn);
                if (!string.IsNullOrEmpty(tencd))
                {
                    bool _TToan_chuaTHien = true; // trạng thái thực hiện cận lâm sàng
                    if (Bien.MaBV == "30002" || Bien.MaBV == "01071" || Bien.MaBV == "01049")
                    {
                        _TToan_chuaTHien = false;
                    }
                    if (_TToan_chuaTHien)
                    {
                        DialogResult _result = MessageBox.Show("Bệnh nhân có các chỉ định CLS chưa được thực hiện:\n " + tencd + "Bạn vẫn muốn thanh toán?", "Hỏi thanh toán", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                        if (_result == DialogResult.No)
                            return false;
                    }
                    else
                    {
                        MessageBox.Show("Bệnh nhân có các chỉ định CLS chưa được thực hiện:\n " + tencd + "Bạn không thể thanh toán?", "Hỏi thanh toán");
                        return false;
                    }
                }
                if (ttoan)
                {
                    if (DungChung.Ham._KTBN_TT_TrongNgay(_dataContext, _mabn, dtNgayTT))
                    {
                        DialogResult _result = MessageBox.Show("Bệnh nhân đã thanh toán trong ngày: \n " + dtNgayTT.Date + "Bạn vẫn muốn thanh toán?", "Hỏi thanh toán", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                        if (_result == DialogResult.No)
                            ttoan = false;
                    }
                    else if ((Bien.MaBV == "27183" || Bien.MaBV == "27001") && !DungChung.Ham._KTBN_KetThucKham(_dataContext, _mabn))
                    {
                        DialogResult _result = MessageBox.Show("Bệnh nhân chưa kết thúc khám, Bạn không thể thanh toán", "Thông báo");
                        ttoan = false;
                    }
                }
                QLBV_Database.QLBVEntities DaTaContext = new QLBV_Database.QLBVEntities(Bien.StrCon);

                if (kt.Count == 0)
                {
                    MessageBox.Show("Bệnh nhân chưa phát sinh chi phí");
                    ttoan = false;
                }

                // hùng viết
                if (dtNgayTT < ngaykemax && _noitru == 0 && _dtnt == false)
                {
                    var kt1 = kt.Where(p => p.dtct.NgayNhap > dtNgayTT).ToList();
                    bool T = false;
                    foreach (var item in kt1)
                    {
                        var soLuong = item.dtct.SoLuong;
                        if (soLuong >= 0)
                        {
                            T = true;
                            break;
                        }
                    }
                    if (T)
                    {
                        MessageBox.Show("Ngày thanh toán không được < ngày kê đơn");
                        ttoan = false;
                    }
                }

                if (bn.Count > 0)
                    _DTuong = bn.First().DTuong;

                if (!ttoan)
                    return false;
                if (Bien.MaBV == "30002")
                {
                    string dsdon = FormNhap.frm_Ravien.CheckDonChuaLinh(_mabn);
                    if (!string.IsNullOrEmpty(dsdon))
                    {
                        DialogResult _result = MessageBox.Show("Bệnh nhân có các đơn thuốc chưa lĩnh :\n " + dsdon + "Bạn vẫn muốn Thanh toán cho bệnh nhân?", "Hỏi ra viện", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                        if (_result == DialogResult.No)
                            return false;
                    }
                }
                int _dtkham = -1;

                int ktntru = -1;
                if (bn.Count > 0)
                {
                    ktntru = bn.First().NoiTru.Value;
                    _dtkham = bn.First().IDDTBN;
                    var dt = _dataContext.DTBNs.Where(p => p.IDDTBN == _dtkham).Select(p => p.HTTT).ToList();
                    if (dt.Count > 0)
                    {
                        _HTTT = dt.First();
                    }
                }

                if (ktntru > 0)
                {
                    if (ravien.Count <= 0)
                    {
                        MessageBox.Show("Bệnh nhân chưa làm thủ tục ra viện, Bạn không thể thanh toán");
                        return false;
                    }
                    else
                    {
                        if (Bien.MaBV == "30005")
                        {
                            double songaygiuong = FormNhap.frm_Ravien._getSoNgayGiuong(_dataContext, _mabn);
                            int songaydt = ravien.First().SoNgaydt.Value;
                            int chenh = Convert.ToInt32(songaygiuong) - songaydt;
                            if (chenh != 0)
                            {
                                if (MessageBox.Show("Số ngày giường: " + songaygiuong + "không khớp số ngày điều trị: " + songaydt + "\n Bạn vẫn muốn thanh toán?", "Thông báo", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.No)
                                    return false;
                            }
                        }
                    }
                }
                else
                {
                    if (Bien.MaBV != "24012" && Bien.MaBV != "24272" && dtNgayTT > DateTime.Now) // 24012, 24272 k check ngày thanh toán
                    {
                        if ((Bien.MaBV != "30003" || bn.First().DTNT == false))
                        {
                            MessageBox.Show("Ngày giờ thanh toán phải <= ngày giờ hiện tại");
                            return false;
                        }

                    }
                    if (ravien.Count <= 0)
                    {
                        if (bn.First().DTNT || Bien.MaBV == "24272")
                        {
                            MessageBox.Show("Bệnh nhân chưa làm thủ tục ra viện, Bạn không thể thanh toán");
                            return false;
                        }
                        else
                        {
                            if (_LuuXoaRaVien(_dataContext, _mabn, dtNgayTT.AddMinutes(-1), "Luu", 2) == false)
                                return false;
                        }
                    }
                }
                if (ravien.Count > 0 && ravien.First().NgayRa != null && dtNgayTT != null)
                {
                    if ((dtNgayTT < ravien.First().NgayRa.Value))
                    {
                        MessageBox.Show("ngày giờ thanh toán không hợp lệ! \n ngày TT: " + dtNgayTT.ToLongDateString() + "ngày ra viện " + ravien.First().NgayRa.Value.ToLongDateString());
                        return false;
                    }
                }
                var qdienbien = _dataContext.DienBiens.Where(p => p.MaBNhan == _mabn).Where(p => p.NgayNhap > dtNgayTT).ToList();
                if (qdienbien.Count > 0)
                {
                    MessageBox.Show("Ngày thanh toán không được nhỏ hơn ngày diễn biến");
                    return false;
                }
                #region update MKP

                if (ravien.Count > 0)
                {
                    var qvphi = (from vp in _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn)
                                 join vpct in _dataContext.VienPhicts.Where(p => p.MaKP == null || p.MaKP <= 0) on vp.idVPhi equals vpct.idVPhi
                                 select vpct).ToList();
                    foreach (var item in qvphi)
                    {
                        VienPhict vpct = _dataContext.VienPhicts.Single(p => p.idVPhict == item.idVPhict);
                        vpct.MaKP = ravien.First().MaKP;
                    }
                }
                #endregion
                if (ttoan)
                {
                    _dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);

                    ravien = _dataContext.RaViens.Where(p => p.MaBNhan == _mabn).ToList();
                    string _dtuong = "";
                    int _vanchuyen = -1;//9
                    double _tienvc = 0;
                    // bxung mới
                    decimal _luongCS = 0;
                    string _khuvuc = "";
                    int noitru = 0;
                    string _sothe = "";
                    if (bn.Count > 0)
                    {
                        // update trongDM =2 | trongDM =1 =>0 đối với bệnh nhân dịch vụ
                        // áp dụng BV Thanh Hà
                        //if (Bien.MaBV == "30009")
                        //DungChung.Ham._updateTrongDM_Dtct(_dataContext, _mabn);
                        //
                        if (bn.First().SThe != null)
                            _sothe = bn.First().SThe;
                        if (bn.First().LuongCS != null)
                            _luongCS = bn.First().LuongCS.Value;
                        if (bn.First().KhuVuc != null)
                        {
                            if (bn.First().KhuVuc.ToString().Contains("K"))
                                _khuvuc = bn.First().KhuVuc;
                        }
                        if (bn.First().MucHuong != null && bn.First().MucHuong.Value > 0)
                        {
                            _muc = bn.First().MucHuong.ToString();
                            //MessageBox.Show(_muc.ToString());
                            _pttt = DungChung.Ham._PtramTT(_dataContext, _muc);
                        }
                        if (bn.First().Tuyen != null)
                            _tuyen = bn.First().Tuyen.Value;
                        noitru = bn.First().NoiTru.Value;
                    }
                    //

                    if (!string.IsNullOrEmpty(_sothe) && _sothe.Length > 2)
                        _dtuong = _sothe.Substring(2, 1);// 9
                    var ktvc = _dataContext.MucTTs.Where(p => p.MaMuc.Contains(_dtuong)).Select(p => p.VanChuyen).ToList();
                    if (ktvc.Count > 0)
                        if (ktvc.First() != null && ktvc.First().ToString() != "")
                            _vanchuyen = ktvc.First().Value;

                    _HangBV = DungChung.Ham.hangBV(Bien.MaBV);
                    int? _noiTinh = 0;
                    _noiTinh = bn.First().NoiTinh;
                    switch (_HangBV)
                    {
                        case 1:
                            if (noitru == 0)
                                _tyle = 0;
                            else
                                _tyle = 40;
                            break;

                        case 2:
                            if (DateTime.Now.Date >= DateTime.Parse("01/01/2021") && noitru == 1)
                                _tyle = 100;
                            else
                            {
                                if (Bien.MaBV == "01830")// dinhpv yêu cầu
                                    _tyle = 70;
                                else
                                {
                                    if (noitru == 0)
                                        _tyle = 0;
                                    else
                                        _tyle = 60;
                                }
                            }
                            break;

                        case 3:
                            //if (Bien.MaBV.Substring(0, 2).Trim() == "30")
                            _tyle = 100;
                            //else
                            //    _tyle = 70;
                            break;

                        case 4:
                            _tyle = 100;
                            //_pttt = 100;
                            break;
                    }
                    _dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
                    if (kttt.Count <= 0)
                    {
                        //bool vtyt = false;
                        int _maCK = 0;
                        var dsnhomdv = (from dv in _dataContext.DichVus
                                        join tnhom in _dataContext.TieuNhomDVs on dv.IdTieuNhom equals tnhom.IdTieuNhom
                                        join nhom in _dataContext.NhomDVs on tnhom.IDNhom equals nhom.IDNhom
                                        select new { dv.GiaBHGioiHanTT, dv.MaDV, nhom.IDNhom, nhom.TenNhomCT, dv.PLoai, dv.Loai, dv.Status, dv.DonGia, dv.DonVi, dv.TrongDM }).ToList();

                        var ck = (from nhom in dsnhomdv.Where(p => p.TenNhomCT.Contains("Khám bệnh")).Where(p => p.PLoai == 2 && p.Loai == _dtkham).Where(p => p.Status == 1)
                                  select new { nhom.DonGia, nhom.MaDV, nhom.DonVi, nhom.TrongDM }).OrderByDescending(p => p.DonGia).ToList();
                        if (ck.Count > 0)
                            _maCK = ck.First().MaDV;

                        if (kt.Count > 0)
                        {
                            bool thanhtoan = true;

                            if (thanhtoan && ktntru > 0)
                            {
                                if (ravien.Count > 0 && DungChung.Ham.NgayTu(dtNgayTT) < DungChung.Ham.NgayTu(ravien.First().NgayRa.Value))
                                {
                                    MessageBox.Show("Ngày thanh toán không được < ngày ra viện");
                                    thanhtoan = false;
                                }
                            }
                            bool _tachCP_Thu = false;
                            if (Bien.MaBV == "30007" || Bien.MaBV == "30010")
                                _tachCP_Thu = true;
                            if (thanhtoan)
                            {
                                bool _tachKP = false;
                                if (Bien.MaBV == "30007" || Bien.MaBV == "26007" || Bien.MaBV == "27023")
                                    _tachKP = true;
                                int _makpsd = 0;
                                if (ravien.Count > 0)
                                    _makpsd = ravien.First().MaKP;
                                if (_makpsd == 0)
                                {
                                    MessageBox.Show("không tồn tại khoa phòng trong ra viện");
                                    return false;
                                }
                                var mavanchuyen = (from dv in dsnhomdv.Where(p => p.TenNhomCT.Contains("Vận chuyển"))
                                                   select dv.MaDV).ToList();
                                var kpNhaThuoc = _dataContext.KPhongs.Where(o => o.TenKP.Contains("nhà thuốc") || o.TenKP.Contains("Nhà thuốc")).Select(o => o.MaKP).ToList();

                                if (ktntru > 0)
                                {
                                    #region nội trú
                                    var tong = (from kd in _dataContext.DThuocs.Where(o => o.MaBNhan == _mabn)
                                                join kdct in _dataContext.DThuoccts.Where(o => o.IsMuaNgoai == null || o.IsMuaNgoai == false).OrderBy(p => p.IDDonct) on kd.IDDon equals kdct.IDDon
                                                join dv in _dataContext.DichVus on kdct.MaDV equals dv.MaDV
                                                group new { kdct, dv, kd }
                                                by new
                                                {
                                                    dv.IDNhom,
                                                    KieuDon = kd.KieuDon == 6 ? kd.KieuDon : 1,
                                                    kdct.NgayNhap,
                                                    dv.TenDV,
                                                    kdct.TyLeTT,
                                                    kdct.LoaiDV,
                                                    kdct.Mien,
                                                    IDCD = _tachCP_Thu ? (kdct.ThanhToan == 1 ? kdct.IDCD : 0) : 0,
                                                    MaKP = _tachKP ? ((kdct.MaKPtk == null || kdct.MaKPtk == 0) ? kdct.MaKP : kdct.MaKPtk) : (Bien.MaBV == "27022" ? kdct.MaKP : _makpsd),
                                                    kdct.MaDV,
                                                    kdct.ThuocDVGayTe,
                                                    kdct.DonGia,
                                                    kdct.DonVi,
                                                    kdct.ThanhToan,
                                                    kdct.TrongBH,
                                                    kdct.XHH,
                                                    kdct.MaCB,
                                                    kdct.AttachIDDonct,
                                                    dv.PLoai,
                                                    kdct.MienCT,
                                                    kdct.MaKXuat,
                                                    kdct.IDDonct,
                                                    kd.PLDV
                                                } into kq
                                                select new
                                                {
                                                    kq.Key.KieuDon,
                                                    kq.Key.NgayNhap,
                                                    kq.Key.IDNhom,
                                                    kq.Key.TenDV,
                                                    kq.Key.TyLeTT,
                                                    kq.Key.Mien,
                                                    kq.Key.ThanhToan,
                                                    kq.Key.IDCD,
                                                    kq.Key.XHH,
                                                    kq.Key.MaKP,
                                                    kq.Key.LoaiDV,
                                                    madv = kq.Key.MaDV,
                                                    dongia = kq.Key.DonGia,
                                                    donvi = kq.Key.DonVi,
                                                    trongBH = kq.Key.TrongBH,
                                                    soluong = kq.Sum(p => p.kdct.SoLuong),
                                                    thanhtien = kq.Sum(p => p.kdct.ThanhTien),
                                                    kq.Key.MaCB,
                                                    kq.Key.AttachIDDonct,
                                                    kq.Key.ThuocDVGayTe,
                                                    kq.Key.PLoai,
                                                    kq.Key.MienCT,
                                                    kq.Key.MaKXuat,
                                                    kq.Key.IDDonct,
                                                    kq.Key.PLDV
                                                }).OrderBy(p => p.donvi).ToList();

                                    var vienphi0 = (from kd in tong
                                                    group kd by new { kd.ThuocDVGayTe, kd.KieuDon, kd.IDNhom, NgayNhapDate = kd.NgayNhap.Value.Date, kd.TenDV, kd.TyLeTT, kd.Mien, kd.IDCD, kd.MaKP, kd.madv, kd.dongia, kd.donvi, kd.ThanhToan, kd.trongBH, kd.XHH, kd.LoaiDV, kd.MaCB, kd.AttachIDDonct, kd.PLoai, kd.MienCT, kd.MaKXuat, kd.IDDonct, kd.PLDV } into kq
                                                    select new
                                                    {
                                                        kq.Key.KieuDon,
                                                        kq.Key.IDNhom,
                                                        kq.Key.NgayNhapDate,
                                                        NgayNhap = kq.Select(p => p.NgayNhap).Min(),
                                                        kq.Key.TenDV,
                                                        kq.Key.TyLeTT,
                                                        kq.Key.Mien,
                                                        kq.Key.ThanhToan,
                                                        kq.Key.IDCD,
                                                        kq.Key.XHH,
                                                        kq.Key.LoaiDV,
                                                        kq.Key.MaKP,
                                                        kq.Key.AttachIDDonct,
                                                        madv = kq.Key.madv,
                                                        dongia = kq.Key.dongia,
                                                        donvi = kq.Key.donvi,
                                                        trongBH = kq.Key.trongBH,
                                                        soluong = kq.Sum(p => p.soluong),
                                                        thanhtien = kq.Sum(p => p.thanhtien),
                                                        kq.Key.MaCB,
                                                        kq.Key.PLoai,
                                                        kq.Key.MienCT,
                                                        kq.Key.MaKXuat,
                                                        kq.Key.IDDonct,
                                                        kq.Key.PLDV,
                                                        kq.Key.ThuocDVGayTe
                                                    }).OrderBy(p => p.donvi).ToList();

                                    var vienphi = (from vphi in vienphi0
                                                   group vphi by new { vphi.NgayNhapDate, vphi.madv, vphi.KieuDon, vphi.TenDV, vphi.TyLeTT, vphi.Mien, vphi.ThanhToan, vphi.IDCD, vphi.XHH, vphi.LoaiDV, vphi.MaKP, vphi.AttachIDDonct, vphi.dongia, vphi.donvi, vphi.trongBH, vphi.MaCB, vphi.PLoai, vphi.MienCT, vphi.MaKXuat, vphi.PLDV, vphi.IDNhom } into kq
                                                   select new { kq.Key.madv, kq.Key.KieuDon, kq.Key.TenDV, kq.Key.TyLeTT, kq.Key.Mien, kq.Key.ThanhToan, kq.Key.IDCD, kq.Key.XHH, kq.Key.LoaiDV, kq.Key.MaKP, kq.Key.AttachIDDonct, kq.Key.dongia, kq.Key.donvi, kq.Key.trongBH, kq.Key.MaCB, kq.Key.PLoai, kq.Key.MienCT, kq.Key.MaKXuat, kq.Key.PLDV, NgayNhap = kq.FirstOrDefault(o => o.soluong > 0) == null ? kq.FirstOrDefault().NgayNhap : kq.FirstOrDefault(o => o.soluong > 0).NgayNhap, soluong = kq.Sum(o => o.soluong), thanhtien = kq.Sum(o => o.thanhtien), IDDonct = kq.FirstOrDefault(o => o.soluong > 0) == null ? kq.FirstOrDefault().IDDonct : kq.FirstOrDefault(o => o.soluong > 0).IDDonct, kq.Key.IDNhom }).Where(o => o.soluong > 0).ToList();

                                    var vienphiCLS = (from kd in _dataContext.DThuocs.Where(o => o.MaBNhan == _mabn && o.PLDV == 2)
                                                      join kdct in _dataContext.DThuoccts on kd.IDDon equals kdct.IDDon
                                                      join cls in _dataContext.CLS.Where(o => o.MaBNhan == _mabn) on kdct.IDCLS equals cls.IdCLS
                                                      select new { cls, kdct.IDDonct, kdct.NgayNhap }).ToList();

                                    string chiphiKP = "";
                                    foreach (var item in vienphi)
                                    {
                                        //MessageBox.Show(Math.Round(89999.7, 0).ToString() + " _   " +  Math.Round(44999.85 * 2 * 100 * 0.01, 0) );
                                        double a = Math.Round(Math.Round(item.thanhtien, 2, MidpointRounding.AwayFromZero), 0);
                                        double ttien = 0;
                                        //if(_ktraBV_TyLeTT && item.IDNhom != 13 && item.IDNhom != 15)
                                        //    ttien = (double)item.soluong * (double)item.dongia * (100 - item.Mien)  * 0.01;
                                        //else
                                        ttien = item.MienCT == 1 ? 0 : ((double)item.soluong * (double)item.dongia * (100 - item.Mien) * (double)item.TyLeTT * 0.0001);

                                        double b = Math.Round(Math.Round(ttien, 2), 0);

                                        if (a != b)
                                        {
                                            MessageBox.Show(item.TenDV + " Thành tiền không bằng số lượng * đơn giá * tỷ lệ TT - miễn");
                                            // _LuuXoaRaVien(_dataContext, _mabn, dtNgayTT.AddMinutes(-1), "Xoa", 2);
                                            return false;
                                        }
                                        if (item.MaKP == null || item.MaKP == 0)
                                        {
                                            chiphiKP += item.madv + ";";
                                        }
                                        if (string.IsNullOrEmpty(item.MaCB))
                                        {
                                            MessageBox.Show(item.TenDV + " Chưa có mã bác sĩ, đang được update tự động\n Vui lòng thanh toán lại");
                                            updateMaCB(_mabn);
                                            return false;
                                        }
                                    }
                                    if (!string.IsNullOrEmpty(chiphiKP))
                                    {
                                        MessageBox.Show("Các chi phí: " + chiphiKP + " chưa thuộc khoa| phòng điều trị nào!");
                                        return false;
                                    }
                                    foreach (var a in vienphi)
                                    {
                                        // kiểm tra vận chuyển
                                        var ktmadv = (from dv in mavanchuyen.Where(p => p == a.madv)
                                                      select dv).ToList();
                                        if (a.trongBH == 1)
                                        {
                                            if (ktmadv.Count > 0)
                                            {
                                                _tienvc = a.thanhtien;
                                                break;
                                            }
                                        }
                                        //
                                    }
                                    //

                                    VienPhi vp = new VienPhi();
                                    vp.NgayNhap = DateTime.Now;
                                    vp.MaBNhan = kt.First().ds.MaBNhan;
                                    vp.NgayTT = dtNgayTT;
                                    vp.NgayRa = ravien.First().NgayRa;
                                    // ngoai h
                                    bool _ngoaih = false;
                                    _ngoaih = DungChung.Ham.CheckNGioHC(dtNgayTT);
                                    vp.NgoaiGio = 0;
                                    if (DungChung.Bien.MaBV != "24272")
                                    {
                                        if (_ngoaih == true)
                                        {
                                            if (MessageBox.Show("BN TT ngoài giờ hành chính?", "Thông báo", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                                                vp.NgoaiGio = 1;
                                        }
                                    }

                                    //
                                    //if (lupNguoiTT.EditValue != null && lupNguoiTT.EditValue.ToString() != "")
                                    //    vp.MaCB = lupNguoiTT.EditValue.ToString();
                                    //else
                                    vp.MaCB = Bien.MaCB;
                                    if (_makptt != null)
                                        vp.MaKP = _makptt;
                                    else
                                        vp.MaKP = Bien.MaKP;
                                    vp.Duyet = 0;
                                    _dataContext.VienPhis.Add(vp);
                                    if (_dataContext.SaveChanges() >= 0)
                                    {
                                        var q = _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn).OrderByDescending(p => p.idVPhi).ToList();
                                        if (q.Count > 0)
                                        {
                                            idvp = q.First().idVPhi;
                                        }
                                        else
                                        {
                                            idvp = 0;
                                        }
                                        QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(Bien.StrCon);

                                        double _tongtien = Math.Round(vienphi.Where(p => p.trongBH == 1).Sum(p => p.thanhtien), 2, MidpointRounding.AwayFromZero);//ktra
                                        if (idvp > 0)
                                        {
                                            foreach (var a in vienphi)
                                            {
                                                double tt = 0;
                                                if (a.soluong != 0)
                                                {
                                                    VienPhict vpct = new VienPhict();
                                                    if (_tachCP_Thu)
                                                    {
                                                        if (a.madv == _maCK)
                                                        {
                                                            vpct.IDTamUng = a.IDCD;
                                                        }
                                                        else
                                                        {
                                                            var soph = _data.ChiDinhs.Where(p => p.IDCD == a.IDCD).Select(p => p.SoPhieu).ToList();
                                                            if (soph.Count > 0 && soph.First() != null)
                                                            {
                                                                vpct.IDTamUng = soph.First();
                                                            }
                                                            else
                                                            {
                                                            }
                                                        }
                                                    }
                                                    //if(a.MaKP==null || a.MaKP<=0)
                                                    //    // laays maKP ra vien
                                                    //    else
                                                    var vpcls = vienphiCLS.FirstOrDefault(o => o.IDDonct == a.IDDonct);
                                                    if (a.PLDV == 2 && a.IDNhom != 13 && vienphiCLS.Count > 0 && vpcls != null)
                                                    {
                                                        if (Bien.MaBV == "24012")
                                                        {
                                                            vpct.NgayYLenh = (a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value);
                                                        }
                                                        else
                                                        {
                                                            vpct.NgayYLenh = vpcls.cls.NgayThang;
                                                        }
                                                        vpct.NgayChiPhi = vpcls.cls.NgayTH ?? (a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value);
                                                    }
                                                    else
                                                    {
                                                        vpct.NgayYLenh = (a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value);
                                                        vpct.NgayChiPhi = a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value;
                                                    }
                                                    if (a.TyLeTT == 0)
                                                        vpct.TyLeTT = 100;
                                                    else
                                                        vpct.TyLeTT = a.TyLeTT;
                                                    vpct.MaKP = a.MaKP;
                                                    vpct.MaDV = a.madv;
                                                    double giaVTYTTT = 0;
                                                    double dongia = a.dongia;
                                                    var kiemtraVTYT = dsnhomdv.Where(p => p.IDNhom == 10 || p.IDNhom == 11).Where(p => p.MaDV == a.madv && p.GiaBHGioiHanTT > 0).Select(p => p.GiaBHGioiHanTT).FirstOrDefault();
                                                    if (kiemtraVTYT != null && kiemtraVTYT > 0)
                                                    {
                                                        if (dongia > kiemtraVTYT)
                                                        {
                                                            giaVTYTTT = dongia - kiemtraVTYT;
                                                            dongia = kiemtraVTYT;
                                                        }
                                                    }

                                                    vpct.DonGia = Bien.MaBV == "27022" ? a.dongia : dongia;

                                                    vpct.SoLuong = a.soluong;
                                                    vpct.DonVi = a.donvi;
                                                    vpct.SoLuongD = 0;
                                                    vpct.TienChenh = 0;
                                                    vpct.TienChenhBN = 0;
                                                    vpct.ThanhToan = a.ThanhToan;
                                                    vpct.idVPhi = idvp;
                                                    vpct.Mien = a.Mien;
                                                    vpct.MienCT = a.MienCT;
                                                    vpct.XHH = a.XHH;
                                                    if (DungChung.Bien.MaBV == "30372" && a.KieuDon == 6)
                                                    {
                                                        vpct.LoaiDV = -1;
                                                    }
                                                    else
                                                    {
                                                        vpct.LoaiDV = a.LoaiDV;
                                                    }
                                                    vpct.MaCB = a.MaCB;
                                                    vpct.AttachIDDonct = a.AttachIDDonct;

                                                    //Thêm mã kho xuất cho dtct xuất ở kho nhà thuốc nếu kho khác = null
                                                    vpct.MaKXuat = (kpNhaThuoc.Exists(o => o == a.MaKXuat) ? a.MaKXuat : null);

                                                    tt = a.MienCT == 1 ? 0 : Math.Round((vpct.SoLuong * vpct.DonGia) * (a.TyLeTT / 100), Bien.LamTronSo, MidpointRounding.AwayFromZero);

                                                    //if()
                                                    //if (giaVTYTTT > 0 && Bien.MaBV == "27022")
                                                    //{
                                                    //    vpct.ThanhTien = Math.Round((a.soluong * a.dongia) * (a.TyLeTT / 100), Bien.LamTronSo);
                                                    //}
                                                    //else
                                                    double ttnew = a.MienCT == 1 ? 0 : Math.Round((vpct.SoLuong * vpct.DonGia), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                    if (a.PLoai == 1)//thuốc và vtyt tt không nhân tỉ lệ (vì chi phí luôn luôn phải trả 100%)
                                                        vpct.ThanhTien = ttnew;
                                                    else
                                                        vpct.ThanhTien = tt;
                                                    if (Bien.MaBV == "27022")
                                                    {
                                                        tt = tt - giaVTYTTT * a.soluong;
                                                        ttnew = ttnew - giaVTYTTT * a.soluong;
                                                    }
                                                    // KT tiền vận chuyển
                                                    var ktmadv = (from dv in mavanchuyen.Where(p => p == a.madv)
                                                                  select dv).ToList();
                                                    if (_HTTT == 1)//if (_DTuong == "BHYT")
                                                    {
                                                        if (_tuyen == 1)//bệnh nhân đúng tuyến
                                                        {
                                                            if (a.trongBH == 1)
                                                            {//dịch vụ trong danh mục BHYT
                                                                if (ktmadv.Count > 0)
                                                                {
                                                                    if (_vanchuyen == 1)
                                                                    {
                                                                        vpct.TienBH = tt;
                                                                        //vpct.TienBN = 0;
                                                                        vpct.TrongBH = 1;
                                                                        vpct.TyLeBHTT = 100;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = 0;
                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                    }
                                                                    else
                                                                    {
                                                                        //vpct.TienBN = tt;
                                                                        vpct.TienBH = 0;
                                                                        vpct.TrongBH = 0;
                                                                        vpct.TyLeBHTT = 0;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = tt;
                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                    }
                                                                }

                                                                //k thúc
                                                                else
                                                                {
                                                                    if ((_tongtien - _tienvc) >= Bien.GHanTT100 && _luongCS != 1)
                                                                    {
                                                                        _tienBH = Math.Round(tt * _pttt / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                        vpct.TienBH = _tienBH;
                                                                        //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                        vpct.TyLeBHTT = _pttt;
                                                                        vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                        vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                    }
                                                                    else
                                                                    {
                                                                        vpct.TienBH = tt;
                                                                        //vpct.TienBN = 0;
                                                                        vpct.TyLeBHTT = 100;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                    }
                                                                    vpct.TrongBH = 1;
                                                                }
                                                            }
                                                            else
                                                            {
                                                                if (a.trongBH == 0)
                                                                {
                                                                    vpct.TrongBH = 0;
                                                                    vpct.TienBH = 0;
                                                                    //vpct.TienBN = Math.Round(tt * (100 - a.Mien) / 100, Bien.LamTronSo);
                                                                    vpct.TyLeBHTT = 0;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = Math.Round(tt * (100 - a.Mien) / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                    vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                }
                                                                else if (a.trongBH == 2)
                                                                {
                                                                    vpct.TrongBH = 2;
                                                                    vpct.TienBH = 0;
                                                                    //vpct.TienBN = 0;
                                                                    vpct.TyLeBHTT = 100;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = 0;
                                                                    vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                }
                                                                else
                                                                {
                                                                    vpct.TrongBH = 3;
                                                                    vpct.TienBH = 0;
                                                                    //vpct.TienBN = tt;
                                                                    vpct.TyLeBHTT = 0;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = tt;
                                                                    vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                }
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (_tuyen == 2) //BN trái tuyến
                                                            {
                                                                if (a.trongBH == 1)
                                                                {//dịch vụ trong danh mục BHYT
                                                                    if (ktmadv.Count > 0)
                                                                    {
                                                                        if (_vanchuyen == 1)
                                                                        {
                                                                            vpct.TienBH = tt;
                                                                            vpct.TrongBH = 1;
                                                                            vpct.TyLeBHTT = 100;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = 0;
                                                                            vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                        }
                                                                        else
                                                                        {
                                                                            //vpct.TienBN = tt;
                                                                            vpct.TrongBH = 0;
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = tt;
                                                                            vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        if (DateTime.Now.Date >= DateTime.Parse("01/01/2021"))
                                                                        {
                                                                            if (Bien.MaBV == "24012" && _tongtien < 223500)
                                                                            {
                                                                                _pttt = 100;
                                                                            }
                                                                            vpct.TyLeBHTT = (_tyle * _pttt) / 100;
                                                                            _tienBH = Math.Round(tt * _tyle / 100 * _pttt / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                            vpct.TienBH = _tienBH;
                                                                            double tinbnctt = tt - _tienBH;
                                                                            vpct.TBNCTT = Math.Round(tinbnctt, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                            vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                            vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                        }
                                                                        else
                                                                        {
                                                                            if (!string.IsNullOrEmpty(_khuvuc)) // BN có khu vực ưu tiên tính theo đúng tuyến
                                                                            {
                                                                                if (_tyle > 0)
                                                                                {
                                                                                    _tienBH = Math.Round(tt * _pttt / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                    vpct.TienBH = _tienBH;
                                                                                    vpct.TyLeBHTT = _pttt;
                                                                                    vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100; ;
                                                                                    vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                    vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                }
                                                                                else
                                                                                {
                                                                                    vpct.TienBH = 0;
                                                                                    //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                    vpct.TyLeBHTT = 0;
                                                                                    vpct.TBNCTT = 0;
                                                                                    vpct.TBNTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                                    vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                vpct.TyLeBHTT = (_tyle * _pttt) / 100;
                                                                                _tienBH = Math.Round(tt * _tyle / 100 * _pttt / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                vpct.TienBH = _tienBH;
                                                                                //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                if (_HangBV == 1)
                                                                                {
                                                                                    double tinbnctt = tt - _tienBH;
                                                                                    vpct.TBNCTT = Math.Round(tinbnctt, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                    vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                }
                                                                                else if (_HangBV == 2)
                                                                                {
                                                                                    double tinbnctt = tt - _tienBH;
                                                                                    vpct.TBNCTT = Math.Round(tinbnctt, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                    vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                }
                                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                //double TTnew = 0;
                                                                                //if (a.IDNhom == 13 || a.IDNhom == 15 || a.IDNhom == 8)
                                                                                //{
                                                                                //    TTnew = Math.Round(a.dongia * a.soluong);
                                                                                //}
                                                                                //}
                                                                            }
                                                                        }
                                                                        //
                                                                        if (_tyle > 0)
                                                                            vpct.TrongBH = 1;
                                                                        else
                                                                            vpct.TrongBH = 0;
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    if (a.trongBH == 0)
                                                                    {
                                                                        vpct.TrongBH = 0;
                                                                        vpct.TienBH = 0;
                                                                        //vpct.TienBN = Math.Round(tt * (100 - a.Mien) / 100, Bien.LamTronSo);
                                                                        vpct.TyLeBHTT = 0;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = Math.Round(tt * (100 - a.Mien) / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                    }
                                                                    else if (a.trongBH == 2)
                                                                    {
                                                                        vpct.TrongBH = 2;
                                                                        vpct.TienBH = 0;
                                                                        //vpct.TienBN = 0;
                                                                        vpct.TyLeBHTT = 0;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = 0;
                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                    }
                                                                    else
                                                                    {
                                                                        vpct.TrongBH = 3;
                                                                        vpct.TienBH = 0;
                                                                        //vpct.TienBN = tt;
                                                                        vpct.TyLeBHTT = 0;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = tt;
                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                    else if (_HTTT == 2)//else
                                                    {
                                                        if (a.trongBH == 2)
                                                        {
                                                            vpct.TrongBH = 2;
                                                            vpct.TienBH = 0;
                                                            //vpct.TienBN = 0;
                                                            vpct.TyLeBHTT = 0;
                                                            vpct.TBNCTT = 0;
                                                            vpct.TBNTT = 0;
                                                            vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                        }
                                                        else if (a.trongBH == 3)
                                                        {
                                                            vpct.TrongBH = 3;
                                                            vpct.TienBH = 0;
                                                            //vpct.TienBN = tt;
                                                            vpct.TyLeBHTT = 0;
                                                            vpct.TBNCTT = 0;
                                                            vpct.TBNTT = tt;
                                                            vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                        }
                                                        else
                                                        {
                                                            vpct.TyLeBHTT = 0;
                                                            vpct.TrongBH = 0;
                                                            vpct.TienBH = 0;
                                                            //vpct.TienBN = Math.Round(tt * (100 - a.Mien) / 100, Bien.LamTronSo);
                                                            vpct.TBNCTT = 0;
                                                            vpct.TBNTT = Math.Round(tt * (100 - a.Mien) / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                            vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                        }
                                                    }
                                                    else if (_HTTT == 0)
                                                    {
                                                        switch (a.trongBH)
                                                        {
                                                            case 1:
                                                                vpct.TrongBH = a.trongBH;
                                                                vpct.TienBH = tt;
                                                                //vpct.TienBN = 0;
                                                                vpct.TyLeBHTT = 100;
                                                                vpct.TBNCTT = 0;
                                                                vpct.TBNTT = 0;
                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                break;

                                                            case 2:
                                                                vpct.TrongBH = a.trongBH;
                                                                vpct.TienBH = 0;
                                                                //vpct.TienBN = 0;
                                                                vpct.TyLeBHTT = 0;
                                                                vpct.TBNCTT = 0;
                                                                vpct.TBNTT = 0;
                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                break;

                                                            case 0:
                                                                vpct.TrongBH = a.trongBH;
                                                                vpct.TienBH = 0;
                                                                //vpct.TienBN = Math.Round(tt * (100 - a.Mien) / 100, Bien.LamTronSo);
                                                                vpct.TyLeBHTT = 0;
                                                                vpct.TBNCTT = 0;
                                                                vpct.TBNTT = Math.Round(tt * (100 - a.Mien) / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                break;

                                                            case 3:
                                                                vpct.TrongBH = a.trongBH;
                                                                vpct.TienBH = 0;
                                                                //vpct.TienBN = tt;
                                                                vpct.TyLeBHTT = 0;
                                                                vpct.TBNCTT = 0;
                                                                vpct.TBNTT = tt;
                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                break;
                                                        }
                                                    }
                                                    if (vpct.ThanhToan != 1)
                                                        sotienTT += vpct.TienBN;
                                                    _data.VienPhicts.Add(vpct);
                                                    _data.SaveChanges();
                                                    if (giaVTYTTT > 0)
                                                        ThanhToan_VTYT_TT04(vpct.idVPhict, giaVTYTTT);
                                                }
                                            }

                                            DungChung.Ham._setStatus(_mabn, 3);
                                        }//kt
                                        else
                                        {
                                            MessageBox.Show("không có mã bệnh nhân trong bảng viện phí");
                                        }
                                        // tạo sao lưu\
                                    }
                                }  //ketthuc noi tru
                                #endregion
                                else
                                {
                                    #region ngoại trú

                                    var ktdt = _dataContext.DThuocs.Where(p => p.PLDV == 1).Where(p => p.MaBNhan == _mabn).ToList();
                                    if (ktdt.Count >= 2)
                                    {
                                        var tong = (from kd in _dataContext.DThuocs
                                                    join kdct in _dataContext.DThuoccts.Where(o => o.IsMuaNgoai == null || o.IsMuaNgoai == false).OrderBy(p => p.IDDonct) on kd.IDDon equals kdct.IDDon
                                                    join dv in _dataContext.DichVus on kdct.MaDV equals dv.MaDV
                                                    where (kd.MaBNhan == _mabn)
                                                    select new
                                                    {KieuDon = kd.KieuDon == 6 ? kd.KieuDon : 1, kdct.ThuocDVGayTe, kdct.NgayNhap, kdct.AttachIDDonct, dv.IDNhom, kdct.LoaiDV, dv.TenDV, kdct.TyLeTT, kdct.Mien, kdct.ThanhToan, IDCD = _tachCP_Thu ? kdct.IDCD : 0, MaKP = _tachKP ? kdct.MaKP : (Bien.MaBV == "27022" ? kdct.MaKP : _makpsd), kdct.MaDV, kdct.DonGia, kdct.DonVi, kdct.TrongBH, kdct.XHH, kdct.SoLuong, kdct.ThanhTien, kdct.MaCB, dv.PLoai, kdct.MienCT, kdct.MaKXuat, kdct.IDDonct, kd.PLDV }).ToList();

                                        var vienphi = (from a in tong
                                                       group a by new {a.KieuDon, a.ThuocDVGayTe, a.LoaiDV, a.AttachIDDonct, a.IDNhom, a.TenDV, a.TyLeTT, a.Mien, a.ThanhToan, IDCD = a.IDCD, MaKP = a.MaKP, a.MaDV, a.DonGia, a.DonVi, a.TrongBH, a.XHH, a.MaCB, a.PLoai, a.MienCT, a.MaKXuat, a.PLDV } into kq
                                                       select new {kq.Key.KieuDon, kq.Key.ThuocDVGayTe, kq.Key.LoaiDV, kq.Key.AttachIDDonct, kq.Key.IDNhom, NgayNhap = kq.Select(p => p.NgayNhap).Min(), kq.Key.TenDV, kq.Key.TyLeTT, kq.Key.Mien, kq.Key.ThanhToan, kq.Key.IDCD, kq.Key.MaKP, madv = kq.Key.MaDV, dongia = kq.Key.DonGia, donvi = kq.Key.DonVi, kq.Key.XHH, trongBH = kq.Key.TrongBH, kq.Key.MienCT, soluong = kq.Sum(p => p.SoLuong), thanhtien = kq.Sum(p => p.ThanhTien), kq.Key.MaCB, kq.Key.PLoai, kq.Key.MaKXuat, IDDonct = kq.Min(p => p.IDDonct), kq.Key.PLDV }).ToList();

                                        var vienphiCLS = (from kd in _dataContext.DThuocs.Where(o => o.MaBNhan == _mabn && o.PLDV == 2)
                                                          join kdct in _dataContext.DThuoccts on kd.IDDon equals kdct.IDDon
                                                          join cls in _dataContext.CLS.Where(o => o.MaBNhan == _mabn) on kdct.IDCLS equals cls.IdCLS
                                                          select new { cls, kdct.IDDonct, kdct.NgayNhap }).ToList();

                                        // kiểm tra vận chuyển
                                        foreach (var a in vienphi)
                                        {
                                            if (Math.Round(Math.Round(a.thanhtien, 2), 0) != (a.MienCT == 1 ? 0 : (Math.Round(Math.Round(a.soluong * a.dongia * a.TyLeTT * (100 - a.Mien) * 0.0001, 2), 0))))
                                            {
                                                MessageBox.Show(a.TenDV + " Thành tiền không bằng số lượng * đơn giá * tỷ lệ tt  trừ miễn ");
                                                BenhNhan qbn = _dataContext.BenhNhans.Single(p => p.MaBNhan == _mabn);
                                                if (qbn.DTNT == false && qbn.NoiTru == 0)
                                                    _LuuXoaRaVien(_dataContext, _mabn, dtNgayTT, "Luu", 2);
                                                return false;
                                            }
                                            if (string.IsNullOrEmpty(a.MaCB))
                                            {
                                                MessageBox.Show(a.TenDV + " Chưa có mã bác sĩ, đang được update tự động\n Vui lòng thanh toán lại");
                                                updateMaCB(_mabn);
                                                return false;
                                            }
                                            var ktmadv = (from dv in mavanchuyen.Where(p => p == a.madv)
                                                          select dv).ToList();
                                            if (a.trongBH == 1)
                                            {
                                                if (ktmadv.Count > 0)
                                                {
                                                    _tienvc = a.thanhtien;
                                                    break;
                                                }
                                            }
                                        }
                                        //

                                        //kthuc luuw ra viên
                                        VienPhi vp = new VienPhi();
                                        vp.MaBNhan = kt.First().ds.MaBNhan;
                                        vp.NgayTT = dtNgayTT;
                                        vp.NgayRa = ravien.First().NgayRa;
                                        //if (lupNguoiTT.EditValue != null && lupNguoiTT.EditValue.ToString() != "")
                                        //    vp.MaCB = lupNguoiTT.EditValue.ToString();
                                        //else
                                        bool _ngoaih = false;
                                        _ngoaih = DungChung.Ham.CheckNGioHC(dtNgayTT);
                                        vp.NgoaiGio = 0;
                                        if (DungChung.Bien.MaBV != "24272")
                                        {
                                            if (_ngoaih == true)
                                            {
                                                if (MessageBox.Show("BN TT ngoài giờ hành chính?", "Thông báo", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                                                    vp.NgoaiGio = 1;
                                            }
                                        }

                                        vp.MaCB = Bien.MaCB;
                                        //if (lupBPKe.EditValue != null && lupBPKe.EditValue.ToString() != "")
                                        //    vp.MaKP = lupBPKe.EditValue.ToString();
                                        //else
                                        vp.MaKP = Bien.MaKP;
                                        _dataContext.VienPhis.Add(vp);
                                        if (_dataContext.SaveChanges() >= 0)
                                        {
                                            var q = _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn).OrderByDescending(p => p.idVPhi).ToList();
                                            if (q.Count > 0)
                                            {
                                                idvp = q.First().idVPhi;
                                            }
                                            else
                                            {
                                                idvp = 0;
                                            }
                                            QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(Bien.StrCon);
                                            double tt = 0;
                                            double _tongtien = Math.Round(vienphi.Where(p => p.trongBH == 1).Sum(p => p.thanhtien), 2, MidpointRounding.AwayFromZero);//ktra
                                            if (idvp > 0)
                                            {
                                                foreach (var a in vienphi)
                                                {
                                                    if (a.soluong != 0)
                                                    {
                                                        VienPhict vpct = new VienPhict();
                                                        if (_tachCP_Thu)
                                                        {
                                                            if (a.madv == _maCK)
                                                            {
                                                                vpct.IDTamUng = a.IDCD;
                                                            }
                                                            else
                                                            {
                                                                var soph = _data.ChiDinhs.Where(p => p.IDCD == a.IDCD).Select(p => p.SoPhieu).ToList();
                                                                if (soph.Count > 0 && soph.First() != null)
                                                                {
                                                                    vpct.IDTamUng = soph.First();
                                                                }
                                                                else
                                                                {
                                                                }
                                                            }
                                                        }
                                                        if (!string.IsNullOrEmpty(a.ThuocDVGayTe))
                                                            vpct.ThuocDVGayTe = a.ThuocDVGayTe;
                                                        var vpcls = vienphiCLS.FirstOrDefault(o => o.IDDonct == a.IDDonct);
                                                        if (a.PLDV == 2 && a.IDNhom != 13 && vienphiCLS.Count > 0 && vpcls != null)
                                                        {
                                                            vpct.NgayYLenh = vpcls.cls.NgayThang;
                                                            vpct.NgayChiPhi = vpcls.cls.NgayTH ?? (a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value);
                                                        }
                                                        else
                                                        {
                                                            vpct.NgayYLenh = (a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value);
                                                            vpct.NgayChiPhi = a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value;
                                                        }
                                                        if (a.TyLeTT == 0)
                                                            vpct.TyLeTT = 100;
                                                        else
                                                            vpct.TyLeTT = a.TyLeTT;
                                                        vpct.MaKP = a.MaKP;
                                                        vpct.MaDV = a.madv;
                                                        double giaVTYTTT = 0;
                                                        double dongia = a.dongia;
                                                        var kiemtraVTYT = dsnhomdv.Where(p => p.IDNhom == 10 || p.IDNhom == 11).Where(p => p.MaDV == a.madv && p.GiaBHGioiHanTT > 0).Select(p => p.GiaBHGioiHanTT).FirstOrDefault();
                                                        if (kiemtraVTYT != null && kiemtraVTYT > 0)
                                                        {
                                                            if (dongia > kiemtraVTYT)
                                                            {
                                                                giaVTYTTT = dongia - kiemtraVTYT;
                                                                dongia = kiemtraVTYT;
                                                            }
                                                        }
                                                        vpct.DonGia = Bien.MaBV == "27022" ? a.dongia : dongia;

                                                        vpct.SoLuong = a.soluong;
                                                        vpct.SoLuongD = 0;
                                                        vpct.TienChenh = 0;
                                                        vpct.TienChenhBN = 0;
                                                        vpct.DonVi = a.donvi;
                                                        vpct.idVPhi = idvp;
                                                        vpct.ThanhToan = a.ThanhToan;
                                                        vpct.Mien = a.Mien;
                                                        vpct.MienCT = a.MienCT;
                                                        vpct.XHH = a.XHH;
                                                        if (DungChung.Bien.MaBV == "30372" && a.KieuDon == 6)
                                                        {
                                                            vpct.LoaiDV = -1;
                                                        }
                                                        else
                                                        {
                                                            vpct.LoaiDV = a.LoaiDV;
                                                        }
                                                        vpct.MaCB = a.MaCB;
                                                        vpct.AttachIDDonct = a.AttachIDDonct;

                                                        //Thêm mã kho xuất cho dtct xuất ở kho nhà thuốc nếu kho khác = null
                                                        vpct.MaKXuat = (kpNhaThuoc.Exists(o => o == a.MaKXuat) ? a.MaKXuat : null);

                                                        tt = a.MienCT == 1 ? 0 : Math.Round((vpct.SoLuong * vpct.DonGia) * (a.TyLeTT / 100), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                        //if (giaVTYTTT > 0 && Bien.MaBV == "27022")
                                                        //{
                                                        //    vpct.ThanhTien = Math.Round((a.soluong * a.dongia) * (a.TyLeTT / 100), Bien.LamTronSo);
                                                        //}
                                                        //else
                                                        //    vpct.ThanhTien = tt;
                                                        double ttnew = a.MienCT == 1 ? 0 : Math.Round((vpct.SoLuong * vpct.DonGia), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                        if (a.PLoai == 1)//thuốc và vtyt tt không nhân tỉ lệ (vì chi phí luôn luôn phải trả 100%)
                                                            vpct.ThanhTien = ttnew;
                                                        else
                                                            vpct.ThanhTien = tt;
                                                        if (Bien.MaBV == "27022")
                                                        {
                                                            tt = tt - giaVTYTTT * a.soluong;
                                                            ttnew = ttnew - giaVTYTTT * a.soluong;
                                                        }
                                                        if (_HTTT == 1)//  if (_DTuong == "BHYT")
                                                        {
                                                            var ktmadv = (from dv in mavanchuyen.Where(p => p == a.madv)
                                                                          select dv).ToList();
                                                            if (_tuyen == 1)//bệnh nhân đúng tuyến
                                                            {
                                                                if (a.trongBH == 1)
                                                                {//dịch vụ trong danh mục BHYT
                                                                    if (ktmadv.Count > 0)
                                                                    {
                                                                        if (_vanchuyen == 1)
                                                                        {
                                                                            vpct.TienBH = tt;
                                                                            vpct.TienBN = 0;
                                                                            vpct.TrongBH = 1;
                                                                            vpct.TyLeBHTT = 100;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = 0;
                                                                        }
                                                                        else
                                                                        {
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TienBN = tt;
                                                                            vpct.TienBH = 0;
                                                                            vpct.TrongBH = 0;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = tt;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        if ((_tongtien - _tienvc) >= Bien.GHanTT100 && _luongCS != 1)
                                                                        {
                                                                            _tienBH = Math.Round(tt * _pttt / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                            vpct.TienBH = _tienBH;
                                                                            //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                            vpct.TyLeBHTT = _pttt;
                                                                            vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100; ;
                                                                            vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                            vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                        }
                                                                        else
                                                                        {
                                                                            //vpct.TienBN = 0;
                                                                            vpct.TienBH = tt;
                                                                            vpct.TyLeBHTT = 100;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                            vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                        }
                                                                        vpct.TrongBH = 1;
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    if (a.trongBH == 0)
                                                                    {
                                                                        vpct.TrongBH = 0;
                                                                        vpct.TienBH = 0;
                                                                        //vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                        vpct.TyLeBHTT = 0;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                    }
                                                                    else if (a.trongBH == 2)
                                                                    {
                                                                        vpct.TrongBH = 2;
                                                                        vpct.TienBH = 0;
                                                                        //vpct.TienBN = 0;
                                                                        vpct.TyLeBHTT = 0;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = 0;
                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                    }
                                                                    else
                                                                    {
                                                                        vpct.TrongBH = 3;
                                                                        vpct.TienBH = 0;
                                                                        //vpct.TienBN = tt;
                                                                        vpct.TyLeBHTT = 0;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TBNTT = tt;
                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                    }
                                                                }
                                                            }
                                                            else
                                                            {
                                                                if (_tuyen == 2) //BN trái tuyến
                                                                {
                                                                    if (a.trongBH == 1)
                                                                    {//dịch vụ trong danh mục BHYT
                                                                        if (ktmadv.Count > 0)
                                                                        {
                                                                            if (_vanchuyen == 1)
                                                                            {
                                                                                vpct.TienBH = tt;
                                                                                vpct.TrongBH = 1;
                                                                                vpct.TyLeBHTT = 100;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = 0;
                                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                            }
                                                                            else
                                                                            {
                                                                                //vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                                vpct.TrongBH = 0;
                                                                                vpct.TyLeBHTT = 0;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            // mới
                                                                            if (!string.IsNullOrEmpty(_khuvuc)) // BN có khu vực ưu tiên tính theo đúng tuyến
                                                                            {
                                                                                if (_tyle > 0)
                                                                                {
                                                                                    vpct.TyLeBHTT = _pttt;
                                                                                    _tienBH = Math.Round(tt * _pttt / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                    vpct.TienBH = _tienBH;
                                                                                    // vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                    vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                                    vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                    vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                }
                                                                                else
                                                                                {
                                                                                    vpct.TyLeBHTT = 0;
                                                                                    vpct.TienBH = 0;
                                                                                    // vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                    vpct.TBNCTT = 0;
                                                                                    vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                    vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                if ((_tongtien - _tienvc) < Bien.GHanTT100)// BN có tiền nhỏ hơn giới hạn thanh toán thì tính % trái tuyến theo hạng BV không nhân tỷ lệ
                                                                                {
                                                                                    vpct.TyLeBHTT = _tyle;
                                                                                    _tienBH = Math.Round(tt * _tyle / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                    vpct.TienBH = _tienBH;
                                                                                    // vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                    vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;

                                                                                    vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);

                                                                                    vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                }
                                                                                else
                                                                                {
                                                                                    vpct.TyLeBHTT = (_tyle * _pttt) / 100;
                                                                                    _tienBH = Math.Round(tt * _tyle / 100 * _pttt / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                    vpct.TienBH = _tienBH;
                                                                                    // vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                    vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                                    vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                    vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                }
                                                                            }
                                                                            //
                                                                            if (_tyle > 0)
                                                                                vpct.TrongBH = 1;
                                                                            else
                                                                                vpct.TrongBH = 0;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        if (a.trongBH == 0)
                                                                        {
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TrongBH = 0;
                                                                            vpct.TienBH = 0;
                                                                            // vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                            vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                        }
                                                                        else if (a.trongBH == 2)
                                                                        {
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TrongBH = 2;
                                                                            vpct.TienBH = 0;
                                                                            //vpct.TienBN = 0;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = 0;
                                                                            vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                        }
                                                                        else
                                                                        {
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TrongBH = 3;
                                                                            vpct.TienBH = 0;
                                                                            //vpct.TienBN = tt;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TBNTT = tt;
                                                                            vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        else if (_HTTT == 2)//else
                                                        {
                                                            if (a.trongBH == 2)
                                                            {
                                                                vpct.TyLeBHTT = 0;
                                                                vpct.TrongBH = 2;
                                                                vpct.TienBH = 0;
                                                                //vpct.TienBN = 0;
                                                                vpct.TBNCTT = 0;
                                                                vpct.TBNTT = 0;
                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                            }
                                                            else if (a.trongBH == 3)
                                                            {
                                                                vpct.TyLeBHTT = 0;
                                                                vpct.TrongBH = 3;
                                                                vpct.TienBH = 0;
                                                                //vpct.TienBN = tt;
                                                                vpct.TBNCTT = 0;
                                                                vpct.TBNTT = tt;
                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                            }
                                                            else
                                                            {
                                                                vpct.TyLeBHTT = 0;
                                                                vpct.TrongBH = 0;
                                                                vpct.TienBH = 0;
                                                                //vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                vpct.TBNCTT = 0;
                                                                vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                            }
                                                        }
                                                        else if (_HTTT == 0)
                                                        {
                                                            switch (a.trongBH)
                                                            {
                                                                case 1:
                                                                    vpct.TrongBH = a.trongBH;
                                                                    vpct.TienBH = tt;
                                                                    //vpct.TienBN = 0;
                                                                    vpct.TyLeBHTT = 100;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = 0;
                                                                    vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                    break;

                                                                case 2:
                                                                    vpct.TyLeBHTT = 0;
                                                                    vpct.TrongBH = a.trongBH;
                                                                    vpct.TienBH = 0;
                                                                    //vpct.TienBN = 0;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = 0;
                                                                    vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                    break;

                                                                case 0:
                                                                    vpct.TyLeBHTT = 0;
                                                                    vpct.TrongBH = a.trongBH;
                                                                    vpct.TienBH = 0;
                                                                    //vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                    vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                    break;

                                                                case 3:
                                                                    vpct.TyLeBHTT = 0;
                                                                    vpct.TrongBH = a.trongBH;
                                                                    vpct.TienBH = 0;
                                                                    //vpct.TienBN = tt;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TBNTT = tt;
                                                                    vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                    break;
                                                            }
                                                        }
                                                        if (vpct.ThanhToan != 1)
                                                            sotienTT += vpct.TienBN;
                                                        _data.VienPhicts.Add(vpct);
                                                        _data.SaveChanges();
                                                        if (giaVTYTTT > 0)
                                                            ThanhToan_VTYT_TT04(vpct.idVPhict, giaVTYTTT);
                                                    }
                                                }
                                                DungChung.Ham._setStatus(_mabn, 3);
                                            }
                                            //kt
                                            else
                                            {
                                                MessageBox.Show("không có mã bệnh nhân trong bảng viện phí");
                                            }
                                        }

                                        // tạo sao lưu\
                                        //DungChung.Ham.updateChiPhiDV(_dataContext, idvp);

                                        // btnXem_Click(sender, e);
                                    }
                                    else
                                    {
                                        var vienphi = (from kd in _dataContext.DThuocs.Where(p => p.KieuDon != -2)
                                                       join kdct in _dataContext.DThuoccts.Where(o => o.IsMuaNgoai == null || o.IsMuaNgoai == false).OrderBy(p => p.IDDonct) on kd.IDDon equals kdct.IDDon
                                                       join dv in _dataContext.DichVus on kdct.MaDV equals dv.MaDV
                                                       where (kd.MaBNhan == _mabn)
                                                       //where(kd.KieuDon==1 || kd.KieuDon==0) //kieemrtra lai kieu don
                                                       group new { kdct, dv } by new { dv.ARV, kdct.LoaiDV, kdct.AttachIDDonct, kdct.NgayNhap, dv.TenDV, dv.IDNhom, kdct.TyLeTT, kdct.Mien, kdct.XHH, kdct.ThanhToan, ck = (_maCK == dv.MaDV ? kdct.MaKP : _makpsd), IDCD = _tachCP_Thu ? kdct.IDCD : 0, MaKP = _tachKP ? kdct.MaKP : _makpsd, kdct.MaDV, kdct.DonGia, kdct.DonVi, kdct.TrongBH, kdct.MaCB, dv.PLoai, kdct.MienCT, kdct.MaKXuat, kdct.IDDonct, kd.PLDV } into kq
                                                       select new { kq.Key.ARV, kq.Key.AttachIDDonct, kq.Key.IDNhom, kq.Key.NgayNhap, kq.Key.LoaiDV, kq.Key.TenDV, kq.Key.TyLeTT, kq.Key.XHH, kq.Key.ThanhToan, kq.Key.Mien, idct = kq.Select(p => p.kdct.IDDonct).Min(), kq.Key.IDCD, kq.Key.MaKP, madv = kq.Key.MaDV, dongia = kq.Key.DonGia, donvi = kq.Key.DonVi, trongBH = kq.Key.TrongBH, soluong = kq.Sum(p => p.kdct.SoLuong), thanhtien = kq.Sum(p => p.kdct.ThanhTien), kq.Key.MaCB, kq.Key.PLoai, kq.Key.MienCT, kq.Key.MaKXuat, kq.Key.IDDonct, kq.Key.PLDV }).OrderBy(p => p.idct).ToList();

                                        var vienphiCLS = (from kd in _dataContext.DThuocs.Where(o => o.MaBNhan == _mabn && o.PLDV == 2)
                                                          join kdct in _dataContext.DThuoccts on kd.IDDon equals kdct.IDDon
                                                          join cls in _dataContext.CLS.Where(o => o.MaBNhan == _mabn) on kdct.IDCLS equals cls.IdCLS
                                                          select new { cls, kdct.IDDonct, kdct.NgayNhap }).ToList();

                                        // kiểm tra vận chuyển
                                        foreach (var a in vienphi)
                                        {
                                            double tt = Math.Round(Math.Round(a.thanhtien, 2), 0, MidpointRounding.AwayFromZero);
                                            double ttDonGiaSL = a.MienCT == 1 ? 0 : (Math.Round(Math.Round(a.soluong * a.dongia * (100 - a.Mien) * a.TyLeTT * 0.0001, 2), 0, MidpointRounding.AwayFromZero));
                                            //if (Math.Round(Math.Round(a.thanhtien, 2), 0) != Math.Round(Math.Round(a.soluong * a.dongia * (100 - a.Mien) *(( _ktraBV_TyLeTT && a.IDNhom != 13 && a.IDNhom != 15)? 100 : a.TyLeTT) * 0.0001, 2), 0))
                                            if (tt != ttDonGiaSL)
                                            {
                                                MessageBox.Show(a.TenDV + " Thành tiền không bằng số lượng * đơn giá * tỷ lệ TT trừ miễn");
                                                BenhNhan qbn = _dataContext.BenhNhans.Single(p => p.MaBNhan == _mabn);
                                                if (qbn.DTNT == false && qbn.NoiTru == 0)
                                                    _LuuXoaRaVien(_dataContext, _mabn, dtNgayTT, "Xoa", 2);
                                                return false;
                                            }
                                            if (string.IsNullOrEmpty(a.MaCB))
                                            {
                                                MessageBox.Show(a.TenDV + " Chưa có mã bác sĩ, đang được update tự động\n Vui lòng thanh toán lại");
                                                updateMaCB(_mabn);
                                                return false;
                                            }
                                            var ktmadv = (from dv in mavanchuyen.Where(p => p == a.madv)
                                                          select dv).ToList();
                                            if (a.trongBH == 1)
                                            {
                                                if (ktmadv.Count > 0)
                                                {
                                                    _tienvc = a.thanhtien;
                                                    break;
                                                }
                                            }
                                        }
                                        //
                                        VienPhi vp = new VienPhi();
                                        vp.MaBNhan = kt.First().ds.MaBNhan;
                                        vp.NgayTT = dtNgayTT;
                                        vp.NgayRa = ravien.First().NgayRa;
                                        //if (lupNguoiTT.EditValue != null && lupNguoiTT.EditValue.ToString() != "")
                                        //    vp.MaCB = lupNguoiTT.EditValue.ToString();
                                        //else
                                        bool _ngoaih = false;
                                        _ngoaih = DungChung.Ham.CheckNGioHC(dtNgayTT);
                                        vp.NgoaiGio = 0;
                                        if (DungChung.Bien.MaBV != "24272")
                                        {
                                            if (_ngoaih == true)
                                            {
                                                if (MessageBox.Show("BN TT ngoài giờ hành chính?", "Thông báo", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                                                    vp.NgoaiGio = 1;
                                            }
                                        }
                                        vp.MaCB = Bien.MaCB;
                                        //if (lupBPKe.EditValue != null && lupBPKe.EditValue.ToString() != "")
                                        //    vp.MaKP = lupBPKe.EditValue.ToString();
                                        //else
                                        vp.MaKP = Bien.MaKP;
                                        _dataContext.VienPhis.Add(vp);
                                        if (_dataContext.SaveChanges() >= 0)
                                        {
                                            var q = _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn).OrderByDescending(p => p.idVPhi).ToList();
                                            if (q.Count > 0)
                                            {
                                                idvp = q.First().idVPhi;
                                            }
                                            else
                                            {
                                                idvp = 3;
                                            }
                                            QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(Bien.StrCon);
                                            double tt = 0;
                                            double _tongtien = 0;
                                            if (vienphi.Where(p => p.trongBH == 1).ToList().Count > 0)
                                                _tongtien = Math.Round(vienphi.Where(p => p.trongBH == 1).Sum(p => p.thanhtien), 2, MidpointRounding.AwayFromZero);//ktra
                                            if (_tongtien < 223500)
                                            {
                                                _tyle = 100;
                                            }
                                            if (idvp > 0)
                                            {
                                                foreach (var a in vienphi)
                                                {
                                                    if (a.soluong != 0)
                                                    {
                                                        VienPhict vpct = new VienPhict();
                                                        if (_tachCP_Thu)
                                                        {
                                                            if (a.madv == _maCK)
                                                            {
                                                                vpct.IDTamUng = a.IDCD;
                                                            }
                                                            else
                                                            {
                                                                var soph = _data.ChiDinhs.Where(p => p.IDCD == a.IDCD).Select(p => p.SoPhieu).ToList();
                                                                if (soph.Count > 0 && soph.First() != null)
                                                                {
                                                                    vpct.IDTamUng = soph.First();
                                                                }
                                                                else
                                                                {
                                                                }
                                                            }
                                                        }
                                                        var vpcls = vienphiCLS.FirstOrDefault(o => o.IDDonct == a.IDDonct);
                                                        if (a.PLDV == 2 && a.IDNhom != 13 && vienphiCLS.Count > 0 && vpcls != null)
                                                        {
                                                            if (Bien.MaBV == "24012")
                                                            {
                                                                vpct.NgayYLenh = (a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value);
                                                            }
                                                            else
                                                            {
                                                                vpct.NgayYLenh = vpcls.cls.NgayThang;
                                                            }
                                                            vpct.NgayChiPhi = vpcls.cls.NgayTH ?? (a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value);
                                                        }
                                                        else
                                                        {
                                                            vpct.NgayYLenh = (a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value);
                                                            vpct.NgayChiPhi = a.NgayNhap == null ? dtNgayTT : a.NgayNhap.Value;
                                                        }
                                                        if (a.TyLeTT == 0)
                                                            vpct.TyLeTT = 100;
                                                        else
                                                            vpct.TyLeTT = a.TyLeTT;
                                                        vpct.MaKP = a.MaKP;
                                                        vpct.MaDV = a.madv;
                                                        double giaVTYTTT = 0;
                                                        double dongia = a.dongia;
                                                        var kiemtraVTYT = dsnhomdv.Where(p => p.IDNhom == 10 || p.IDNhom == 11).Where(p => p.MaDV == a.madv && p.GiaBHGioiHanTT > 0).Select(p => p.GiaBHGioiHanTT).FirstOrDefault();
                                                        if (kiemtraVTYT != null && kiemtraVTYT > 0)
                                                        {
                                                            if (dongia > kiemtraVTYT)
                                                            {
                                                                giaVTYTTT = dongia - kiemtraVTYT;
                                                                dongia = kiemtraVTYT;
                                                            }
                                                        }
                                                        vpct.DonGia = Bien.MaBV == "27022" ? a.dongia : dongia;

                                                        vpct.SoLuong = a.soluong;
                                                        vpct.SoLuongD = 0;
                                                        vpct.TienChenh = 0;
                                                        vpct.TienChenhBN = 0;
                                                        vpct.DonVi = a.donvi;
                                                        vpct.idVPhi = idvp;
                                                        vpct.ThanhToan = a.ThanhToan;
                                                        vpct.Mien = a.Mien;
                                                        vpct.MienCT = a.MienCT;
                                                        vpct.XHH = a.XHH;
                                                        vpct.LoaiDV = a.LoaiDV;
                                                        vpct.MaCB = a.MaCB;
                                                        vpct.AttachIDDonct = a.AttachIDDonct;

                                                        //Thêm mã kho xuất cho dtct xuất ở kho nhà thuốc nếu kho khác = null
                                                        vpct.MaKXuat = (kpNhaThuoc.Exists(o => o == a.MaKXuat) ? a.MaKXuat : null);

                                                        tt = a.MienCT == 1 ? 0 : Math.Round((vpct.SoLuong * vpct.DonGia) * (a.TyLeTT / 100), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                        //if (giaVTYTTT > 0 && Bien.MaBV == "27022")
                                                        //{
                                                        //    vpct.ThanhTien = Math.Round((a.soluong * a.dongia) * (a.TyLeTT / 100), Bien.LamTronSo);
                                                        //}
                                                        //else
                                                        //    vpct.ThanhTien = tt;
                                                        double ttnew = a.MienCT == 1 ? 0 : Math.Round((vpct.SoLuong * vpct.DonGia), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                        if (a.PLoai == 1)//thuốc và vtyt tt không nhân tỉ lệ (vì chi phí luôn luôn phải trả 100%)
                                                            vpct.ThanhTien = ttnew;
                                                        else
                                                            vpct.ThanhTien = tt;
                                                        if (Bien.MaBV == "27022")
                                                        {
                                                            tt = tt - giaVTYTTT * a.soluong;
                                                            ttnew = ttnew - giaVTYTTT * a.soluong;
                                                        }
                                                        if (_HTTT == 1) //if (_DTuong == "BHYT")
                                                        {
                                                            var ktmadv = (from dv in mavanchuyen.Where(p => p == a.madv)
                                                                          select dv).ToList();
                                                            if (_tuyen == 1)//bệnh nhân đúng tuyến
                                                            {
                                                                if (a.trongBH == 1)
                                                                {//dịch vụ trong danh mục BHYT
                                                                    if (ktmadv.Count > 0)
                                                                    {
                                                                        if (_vanchuyen == 1)
                                                                        {
                                                                            vpct.TienBH = tt;
                                                                            vpct.TrongBH = 1;
                                                                            //vpct.TienBN = 0;
                                                                            vpct.TyLeBHTT = 100;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TienNguonKhac = 0;
                                                                            vpct.TBNTT = 0;
                                                                            vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                        }
                                                                        else
                                                                        {
                                                                            vpct.TienBH = 0;
                                                                            //vpct.TienBN = tt;
                                                                            vpct.TrongBH = 0;
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TienNguonKhac = 0;
                                                                            vpct.TBNTT = tt;
                                                                            vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        if ((_tongtien - _tienvc) >= Bien.GHanTT100 && _luongCS != 1)
                                                                        {
                                                                            vpct.TyLeBHTT = _pttt;
                                                                            _tienBH = Math.Round(tt * _pttt / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                            vpct.TienBH = _tienBH;
                                                                            //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                            vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                            vpct.TienNguonKhac = 0;
                                                                            if ((Bien.MaBV == "30010" || Bien.MaBV == "30003") && a.ARV == true)
                                                                            {
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TienNguonKhac = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                            }
                                                                            vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT + (double)vpct.TienNguonKhac), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                            vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                        }
                                                                        else
                                                                        {
                                                                            vpct.TyLeBHTT = 100;
                                                                            //vpct.TienBN = 0;
                                                                            vpct.TienBH = tt;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TienNguonKhac = 0;
                                                                            vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT + (double)vpct.TienNguonKhac), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                            vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                        }
                                                                        vpct.TrongBH = 1;
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    if (a.trongBH == 0)
                                                                    {
                                                                        vpct.TyLeBHTT = 0;
                                                                        vpct.TrongBH = 0;
                                                                        vpct.TienBH = 0;
                                                                        //vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TienNguonKhac = 0;
                                                                        vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                    }
                                                                    else if (a.trongBH == 2)
                                                                    {
                                                                        vpct.TyLeBHTT = 0;
                                                                        vpct.TrongBH = 2;
                                                                        vpct.TienBH = 0;
                                                                        //vpct.TienBN = 0;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TienNguonKhac = 0;
                                                                        vpct.TBNTT = 0;
                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                    }
                                                                    else
                                                                    {
                                                                        vpct.TyLeBHTT = 0;
                                                                        vpct.TrongBH = 3;
                                                                        vpct.TienBH = 0;
                                                                        //vpct.TienBN = tt;
                                                                        vpct.TBNCTT = 0;
                                                                        vpct.TienNguonKhac = 0;
                                                                        vpct.TBNTT = tt;
                                                                        vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                    }
                                                                }
                                                            }
                                                            else
                                                            {
                                                                if (_tuyen == 2) //BN trái tuyến
                                                                {
                                                                    if (a.trongBH == 1)
                                                                    {//dịch vụ trong danh mục BHYT
                                                                        if (ktmadv.Count > 0)
                                                                        {
                                                                            if (_vanchuyen == 1)
                                                                            {
                                                                                vpct.TyLeBHTT = 100;
                                                                                vpct.TienBH = tt;
                                                                                vpct.TrongBH = 1;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TienNguonKhac = 0;
                                                                                vpct.TBNTT = 0;
                                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                            }
                                                                            else
                                                                            {
                                                                                vpct.TyLeBHTT = 0;
                                                                                //vpct.TienBN = tt;
                                                                                vpct.TrongBH = 0;
                                                                                vpct.TBNCTT = 0;
                                                                                vpct.TienNguonKhac = 0;
                                                                                vpct.TBNTT = tt;
                                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            // mới
                                                                            if (!string.IsNullOrEmpty(_khuvuc)) // BN có khu vực ưu tiên tính theo đúng tuyến
                                                                            {
                                                                                if (_tyle > 0)
                                                                                {
                                                                                    vpct.TyLeBHTT = _pttt;
                                                                                    _tienBH = Math.Round(tt * _pttt / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                    vpct.TienBH = _tienBH;
                                                                                    //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                    vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                                    vpct.TienNguonKhac = 0;
                                                                                    if ((Bien.MaBV == "30010" || Bien.MaBV == "30003") && a.ARV == true)
                                                                                    {
                                                                                        vpct.TBNCTT = 0;
                                                                                        vpct.TienNguonKhac = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                                    }
                                                                                    vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT + (double)vpct.TienNguonKhac), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                    vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                }
                                                                                else
                                                                                {
                                                                                    vpct.TyLeBHTT = 0;
                                                                                    vpct.TienBH = 0;
                                                                                    //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                    vpct.TBNCTT = 0;
                                                                                    vpct.TienNguonKhac = 0;
                                                                                    vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                    vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                if ((_tongtien - _tienvc) < Bien.GHanTT100)// BN có tiền nhỏ hơn giới hạn thanh toán thì tính % trái tuyến theo hạng BV không nhân tỷ lệ
                                                                                {
                                                                                    vpct.TyLeBHTT = _tyle;
                                                                                    _tienBH = Math.Round(tt * _tyle / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                    vpct.TienBH = _tienBH;
                                                                                    //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                    vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                                    vpct.TienNguonKhac = 0;
                                                                                    if ((Bien.MaBV == "30010" || Bien.MaBV == "30003") && a.ARV == true)
                                                                                    {
                                                                                        vpct.TBNCTT = 0;
                                                                                        vpct.TienNguonKhac = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                                    }
                                                                                    vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT + (double)vpct.TienNguonKhac), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                    vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                }
                                                                                else
                                                                                {
                                                                                    vpct.TyLeBHTT = (_tyle * _pttt) / 100;
                                                                                    _tienBH = Math.Round(tt * _tyle / 100 * _pttt / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                    vpct.TienBH = _tienBH;
                                                                                    //vpct.TienBN = Math.Round((tt - _tienBH), Bien.LamTronSo) * (100 - a.Mien) / 100;
                                                                                    vpct.TBNCTT = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                                    vpct.TienNguonKhac = 0;
                                                                                    if ((Bien.MaBV == "30010" || Bien.MaBV == "30003") && a.ARV == true)
                                                                                    {
                                                                                        vpct.TBNCTT = 0;
                                                                                        vpct.TienNguonKhac = Math.Round((tt - _tienBH), Bien.LamTronSo, MidpointRounding.AwayFromZero) * (100 - a.Mien) / 100;
                                                                                    }
                                                                                    vpct.TBNTT = (a.IDNhom == 13 || a.IDNhom == 8 || a.IDNhom == 14 || a.IDNhom == 15) ? 0 : Math.Round(ttnew - (vpct.TienBH + vpct.TBNCTT + (double)vpct.TienNguonKhac), Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                                                                    vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                                }
                                                                            }
                                                                            if (_tyle > 0)
                                                                                vpct.TrongBH = 1;
                                                                            else
                                                                                vpct.TrongBH = 0;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        if (a.trongBH == 0)
                                                                        {
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TrongBH = 0;
                                                                            vpct.TienBH = 0;
                                                                            //vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TienNguonKhac = 0;
                                                                            vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                            vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                        }
                                                                        else if (a.trongBH == 2)
                                                                        {
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TrongBH = 2;
                                                                            vpct.TienBH = 0;
                                                                            vpct.TienBN = 0;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TienNguonKhac = 0;
                                                                            vpct.TBNTT = 0;
                                                                        }
                                                                        else
                                                                        {
                                                                            vpct.TyLeBHTT = 0;
                                                                            vpct.TrongBH = 3;
                                                                            vpct.TienBH = 0;
                                                                            //vpct.TienBN = tt;
                                                                            vpct.TBNCTT = 0;
                                                                            vpct.TienNguonKhac = 0;
                                                                            vpct.TBNTT = tt;
                                                                            vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        else if (_HTTT == 2)//else
                                                        {
                                                            if (a.trongBH == 2)
                                                            {
                                                                vpct.TrongBH = 2;
                                                                vpct.TienBH = 0;
                                                                //vpct.TienBN = 0;
                                                                vpct.TyLeBHTT = 100;
                                                                vpct.TBNCTT = 0;
                                                                vpct.TienNguonKhac = 0;
                                                                vpct.TBNTT = 0;
                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                            }
                                                            else if (a.trongBH == 3)
                                                            {
                                                                vpct.TyLeBHTT = 0;
                                                                vpct.TrongBH = 3;
                                                                vpct.TienBH = 0;
                                                                //vpct.TienBN = tt;
                                                                vpct.TBNCTT = 0;
                                                                vpct.TienNguonKhac = 0;
                                                                vpct.TBNTT = tt;
                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                            }
                                                            else
                                                            {
                                                                vpct.TyLeBHTT = 0;
                                                                vpct.TrongBH = 0;
                                                                vpct.TienBH = 0;
                                                                //vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                vpct.TBNCTT = 0;
                                                                vpct.TienNguonKhac = 0;
                                                                vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                            }
                                                        }
                                                        else if (_HTTT == 0)
                                                        {
                                                            switch (a.trongBH)
                                                            {
                                                                case 1:
                                                                    vpct.TyLeBHTT = 100;
                                                                    vpct.TrongBH = a.trongBH;
                                                                    vpct.TienBH = tt;
                                                                    vpct.TienBN = 0;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TienNguonKhac = 0;
                                                                    vpct.TBNTT = 0;
                                                                    break;

                                                                case 2:
                                                                    vpct.TyLeBHTT = 0;
                                                                    vpct.TrongBH = a.trongBH;
                                                                    vpct.TienBH = 0;
                                                                    vpct.TienBN = 0;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TienNguonKhac = 0;
                                                                    vpct.TBNTT = 0;
                                                                    break;

                                                                case 0:
                                                                    vpct.TyLeBHTT = 0;
                                                                    vpct.TrongBH = a.trongBH;
                                                                    vpct.TienBH = 0;
                                                                    //vpct.TienBN = tt * (100 - a.Mien) / 100;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TienNguonKhac = 0;
                                                                    vpct.TBNTT = tt * (100 - a.Mien) / 100;
                                                                    vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                    break;

                                                                case 3:
                                                                    vpct.TyLeBHTT = 0;
                                                                    vpct.TrongBH = a.trongBH;
                                                                    vpct.TienBH = 0;
                                                                    //vpct.TienBN = tt;
                                                                    vpct.TBNCTT = 0;
                                                                    vpct.TienNguonKhac = 0;
                                                                    vpct.TBNTT = tt;
                                                                    vpct.TienBN = vpct.TBNCTT + vpct.TBNTT;
                                                                    break;
                                                            }
                                                        }
                                                        if (vpct.ThanhToan != 1)
                                                            sotienTT += vpct.TienBN;
                                                        _data.VienPhicts.Add(vpct);
                                                        _data.SaveChanges();
                                                        if (giaVTYTTT > 0)
                                                            ThanhToan_VTYT_TT04(vpct.idVPhict, giaVTYTTT);
                                                    }
                                                }

                                                DungChung.Ham._setStatus(_mabn, 3);
                                            }//kt
                                            else
                                            {
                                                MessageBox.Show("không có mã bệnh nhân trong bảng viện phí");
                                            }
                                        }
                                        // tạo sao lưu\
                                        //DungChung.Ham.updateChiPhiDV(_dataContext, idvp);

                                        //btnXem_Click(sender, e);
                                        //if (Bien.MaBV == "30007")
                                        //    btnDuyet_Click(sender, e);
                                    }
                                    #endregion
                                }
                            }

                            #region in số TT bệnh nhân thanh toán 27001
                            if (Bien.MaBV == "27001")
                            {
                                var qbn = _dataContext.BenhNhans.Where(p => p.MaBNhan == _mabn).FirstOrDefault();
                                if (qbn != null && qbn.NoiTru == 0)
                                {
                                    var qSoDKExit = _dataContext.SoDKKBs.Where(p => p.MaBNhan == _mabn && p.Status == 3).ToList();
                                    if (qSoDKExit.Count == 0)
                                    {
                                        DateTime NgayTT = dtNgayTT.Date;
                                        var qsodk = _dataContext.SoDKKBs.Where(p => p.NgayDK == NgayTT && p.Status == 3).OrderByDescending(p => p.SoDK).ToList();
                                        int sodk = 1;
                                        if (qsodk.Count > 0)
                                        {
                                            sodk = qsodk.First().SoDK + 1;
                                        }
                                        SoDKKB dkMoi = new SoDKKB();
                                        dkMoi.SoDK = sodk;
                                        dkMoi.Status = 3;
                                        dkMoi.NgayDK = NgayTT;
                                        dkMoi.MaBNhan = _mabn;
                                        dkMoi.GioDK = dtNgayTT.TimeOfDay;
                                        _dataContext.SoDKKBs.Add(dkMoi);
                                        _dataContext.SaveChanges();
                                    }
                                }
                            }
                            #endregion
                            if (Bien.MaBV != "27001" && Bien.MaBV != "30004")
                            {
                                MessageBox.Show("Bệnh nhân thanh toán thành công !!!");
                            }
                            return true;
                            //TimKiem();
                        } // két thúc kiểm tra bn có chi phí hay ko
                        else
                        {
                            MessageBox.Show("Bệnh nhân này không có dịch vụ để thanh toán!");
                        }
                    }
                    else
                    {
                        string _tenbn = "";
                        MessageBox.Show("bệnh nhân " + _tenbn + " đã thanh toán");
                    }
                    return true;
                }
                else
                {
                    return false;
                }
            }
            catch (Exception ex)
            {
                RollBackVienPhi(_mabn);
                throw ex;
            }
        }

        private static void RollBackVienPhi(int maBnhan)
        {
            QLBV_Database.QLBVEntities dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
            var vienphi = (from vp in dataContext.VienPhis.Where(o => o.MaBNhan == maBnhan)
                           join vpct in dataContext.VienPhicts on vp.idVPhi equals vpct.idVPhi
                           select new { vp.idVPhi, vpct.idVPhict }
                             ).ToList();

            var idVPs = vienphi.Select(o => o.idVPhi).Distinct().ToList();
            var idVPcts = vienphi.Select(o => o.idVPhict).Distinct().ToList();

            foreach (var item in idVPcts)
            {
                dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
                var deleteVPCT = dataContext.VienPhicts.FirstOrDefault(o => o.idVPhict == item);
                dataContext.VienPhicts.Remove(deleteVPCT);
                dataContext.SaveChanges();
            }
            foreach (var item in idVPs)
            {
                dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
                var deleteVP = dataContext.VienPhis.FirstOrDefault(o => o.idVPhi == item);
                dataContext.VienPhis.Remove(deleteVP);
                dataContext.SaveChanges();
            }
        }

        /// <summary>
        /// Kiểm tra có tồn tại công khám có tỷ lệ 100% không
        /// </summary>
        /// <param name="_dataContext"></param>
        /// <param name="_mabn"></param>
        /// <returns>true: Khi bệnh nhân không có công khám nào hoặc có ít nhất 1 công khám có tỷ lệ thanh toán là 100%; false: Bệnh nhân có dịch vụ công khám nhưng không có dịch vụ công khám nào có tỷ lệ thanh toán là 100%</returns>
        private static bool KTCongKhamTyLe100(QLBV_Database.QLBVEntities _dataContext, int _mabn)
        {
            var qdt = (from dt in _dataContext.DThuocs.Where(p => p.PLDV == 2)
                       join bn in _dataContext.BenhNhans.Where(o => o.IDPerson == _mabn) on dt.MaBNhan equals bn.MaBNhan
                       join dtct in _dataContext.DThuoccts on dt.IDDon equals dtct.IDDon
                       join dv in _dataContext.DichVus on dtct.MaDV equals dv.MaDV
                       join tn in _dataContext.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                       where (tn.IDNhom == 13)
                       // where (tn.IDNhom == 13 && dtct.TyLeTT == 100)
                       select dtct).ToList();
            if (qdt.Count <= 0)
                return true;
            else
            {
                var qtl = qdt.Where(p => p.TyLeTT == 100).ToList();
                if (qtl.Count() > 0)
                    return true;
                else
                    return false;
            }
        }

        public static bool KTCBCongKhamBNKB(QLBV_Database.QLBVEntities _dataContext, int _mabn)
        {
            var dsbnkb = (from bnkb in _dataContext.BNKBs.Where(o => o.MaBNhan == _mabn)
                          join cb in _dataContext.CanBoes on bnkb.MaCB equals cb.MaCB
                          select new { bnkb.IDKB, cb.MaCCHN }).ToList();
            var qdt = (from dt in _dataContext.DThuocs.Where(p => p.MaBNhan == _mabn).Where(p => p.PLDV == 2)
                       join dtct in _dataContext.DThuoccts on dt.IDDon equals dtct.IDDon
                       join dv in _dataContext.DichVus on dtct.MaDV equals dv.MaDV
                       join tn in _dataContext.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                       join cb in _dataContext.CanBoes on dtct.MaCB equals cb.MaCB
                       where (tn.IDNhom == 13)
                       select new { dtct.IDKB, cb.MaCCHN }).ToList();
            if (qdt.Count <= 0 || dsbnkb.Count <= 0)
                return false;
            var check = qdt.Where(o => dsbnkb.Select(p => p.IDKB).Contains(o.IDKB) && !dsbnkb.Select(p => p.MaCCHN).Contains(o.MaCCHN)).ToList();
            if (check != null && check.Count > 0)
            {
                return true;
            }
            return false;
        }

        private static bool _KTBN_KetThucKham(QLBV_Database.QLBVEntities _dataContext, int _mabn)
        {
            var qrv = (from rv in _dataContext.RaViens.Where(p => p.MaBNhan == _mabn) select rv).ToList();
            if (qrv.Count() > 0)
                return true;
            else
                return false;
        }

        private static void XoaRaVien(int _mabn)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(Bien.StrCon);
            RaVien qravien = data.RaViens.Where(parameters => parameters.MaBNhan == _mabn).FirstOrDefault();
            if (qravien != null)
            {
                data.RaViens.Remove(qravien);
                data.SaveChanges();
            }
        }

        //tự động update thành trạng thái đã thu tiền đối với bệnh nhân có tiền BN = 0

        #endregion
        #region In Bảng Kê

        public class c_BangKe
        {
            private double donGia;

            public double DonGia
            {
                get { return donGia; }
                set { donGia = value; }
            }

            private string donVi;

            public string DonVi
            {
                get { return donVi; }
                set { donVi = value; }
            }

            private int idVPhict;

            public int IdVPhict
            {
                get { return idVPhict; }
                set { idVPhict = value; }
            }

            private int maKP;

            public int MaKP
            {
                get { return maKP; }
                set { maKP = value; }
            }

            private int maKPct;

            public int MaKPct
            {
                get { return maKPct; }
                set { maKPct = value; }
            }

            private double soLuong;

            public double SoLuong
            {
                get { return soLuong; }
                set { soLuong = value; }
            }

            private int sTT;

            public int STT
            {
                get { return sTT; }
                set { sTT = value; }
            }

            private string tenDV;

            public string TenDV
            {
                get { return tenDV; }
                set { tenDV = value; }
            }

            private string tenNhom;

            public string TenNhom
            {
                get { return tenNhom; }
                set { tenNhom = value; }
            }

            private string tenNhomCT;

            public string TenNhomCT
            {
                get { return tenNhomCT; }
                set { tenNhomCT = value; }
            }

            private double tienBH;

            public double TienBH
            {
                get { return tienBH; }
                set { tienBH = value; }
            }

            private double tienBN;

            public double TienBN
            {
                get { return tienBN; }
                set { tienBN = value; }
            }

            private double thanhTien;

            public double ThanhTien
            {
                get { return thanhTien; }
                set { thanhTien = value; }
            }

            private int trongBH;

            public int TrongBH
            {
                get { return trongBH; }
                set { trongBH = value; }
            }

            private int trongDM;

            public int TrongDM
            {
                get { return trongDM; }
                set { trongDM = value; }
            }

            public string MaQD { get; set; }
            public string SoQD { get; set; }
            public string TenHC { get; set; }
            public string HamLuong { get; set; }
        }

        //duc dep trai viet cho nay
        public static int KTraTTHuyen(QLBV_Database.QLBVEntities _data, string MATINH_BHYT, string MA_CSKCB, string MA_DKKCB, string TUYEN_CSDKKCB, string TUYEN_CSKCB)
        {
            if (MA_DKKCB == MA_CSKCB)
                return 1;
            if (DungChung.Bien.MaBV == "24272")
            {
                string ma_cs = MA_DKKCB;

                var bv = _data.BenhViens.Where(x => x.MaBV == ma_cs).FirstOrDefault();

                if (ma_cs.Length >= 5)
                {
                    if (!ma_cs.StartsWith("24"))
                    {
                        MessageBox.Show($"Bệnh nhân có nơi KCBBĐ là {ma_cs} nên không thể lưu", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        return -10;
                    }
                    else if (ma_cs.StartsWith("24"))
                    {
                        if (bv.status == 4 || bv.status == null || bv.status.ToString().Length == 0)
                        {
                            MessageBox.Show($"Bệnh nhân có nơi KCBBĐ là {ma_cs} nên không thể lưu", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            return -10;
                        }
                        else
                        {
                            if (ma_cs == "24272")
                            {
                                return 1;
                            }
                            else
                            {
                                return 4;
                            }
                        }

                    }
                }
            }
            else
            {
                if (DungChung.Bien.MaBV == "24297")
                {
                    if (DungChung.Bien.MaBV == MA_DKKCB)
                    {
                        return 1;
                    }
                    else
                    {
                        if (MA_DKKCB.StartsWith("24"))
                        {
                            return 4;
                        }
                        else
                        {
                            return 3;
                        }
                    }
                }

                switch (TUYEN_CSDKKCB)
                {
                    case "A": //đăng ký ban đầu là TW -> trai tuyen
                        return 3;

                    case "B": // dang ky ban dau la tinh -> trai tuyen
                        return 3;

                    case "C": // dang ky kcb ban dau la huyen
                        if (MA_DKKCB == MA_CSKCB)
                            return 1;
                        if ((MA_CSKCB != MA_DKKCB) && MA_CSKCB.Substring(0, 2) == MA_DKKCB.Substring(0, 2)) // Cung tinh
                            return 4;
                        if (MA_CSKCB.Substring(0, 2) != MA_DKKCB.Substring(0, 2))
                            return 3;
                        break;

                    case "D": // dang ky ban dau la tuyen xa
                        if (MA_CSKCB.Substring(0, 2) == MA_DKKCB.Substring(0, 2))
                            return 4;
                        else
                            return 3;
                }
            }
            return 0;
            ////if (DungChung.Bien.MaBV == "24297")
            ////{
            ////    if (DungChung.Bien.MaBV == MA_DKKCB)
            ////    {
            ////        return 1;
            ////    }
            ////    else
            ////    {
            ////        if (MA_DKKCB.StartsWith("24"))
            ////        {
            ////            return 4;
            ////        }
            ////        else
            ////        {
            ////            return 3;
            ////        }
            ////    }
            ////}

            //switch (TUYEN_CSDKKCB)
            //{
            //    case "A": //đăng ký ban đầu là TW -> trai tuyen
            //        return 3;

            //    case "B": // dang ky ban dau la tinh -> trai tuyen
            //        return 3;

            //    case "C": // dang ky kcb ban dau la huyen
            //        if (MA_DKKCB == MA_CSKCB)
            //            return 1;
            //        if ((MA_CSKCB != MA_DKKCB) && MA_CSKCB.Substring(0, 2) == MA_DKKCB.Substring(0, 2)) // Cung tinh
            //            return 4;
            //        if (MA_CSKCB.Substring(0, 2) != MA_DKKCB.Substring(0, 2))
            //            return 3;
            //        break;

            //    case "D": // dang ky ban dau la tuyen xa
            //        if (MA_CSKCB.Substring(0, 2) == MA_DKKCB.Substring(0, 2))
            //            return 4;
            //        else
            //            return 3;
            //}

            //return 0;
        }

        public static int KTraTTXa(QLBV_Database.QLBVEntities _data, string MATINH_BHYT, string MA_CSKCB, string MA_DKKCB, string TUYEN_CSDKKCB, string TUYEN_CSKCB)
        {
            if (MA_DKKCB == MA_CSKCB)
                return 1;
            if (DungChung.Bien.MaBV == "24272")
            {
                string ma_cs = MA_DKKCB;


                var bv = _data.BenhViens.Where(x => x.MaBV == ma_cs).FirstOrDefault();

                if (ma_cs.Length >= 5)
                {
                    if (!ma_cs.StartsWith("24"))
                    {
                        MessageBox.Show($"Bệnh nhân có nơi KCBBĐ là {ma_cs} nên không thể lưu", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        return -10;
                    }
                    else if (ma_cs.StartsWith("24"))
                    {
                        if (bv.status == 4 || bv.status == null || bv.status.ToString().Length == 0)
                        {
                            MessageBox.Show($"Bệnh nhân có nơi KCBBĐ là {ma_cs} nên không thể lưu", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            return -10;
                        }
                        else
                        {
                            if (ma_cs == "24272")
                            {
                                return 1;
                            }
                            else
                            {
                                return 4;
                            }
                        }
                    }
                }
            }
            else
            {
                switch (TUYEN_CSDKKCB)
                {
                    case "A": //đăng ký ban đầu là TW -> trai tuyen
                        return 3;

                    case "B": // dang ky ban dau la tinh -> trai tuyen
                        return 3;

                    case "C": // dang ky kcb ban dau la huyen
                        if (MA_DKKCB == MA_CSKCB)
                            return 1;
                        if ((MA_CSKCB != MA_DKKCB) && (MA_CSKCB.Substring(0, 2) == MA_DKKCB.Substring(0, 2))) // cung tinh
                            return 1;
                        if (MA_CSKCB.Substring(0, 2) != MA_DKKCB.Substring(0, 2))
                            return 3;
                        break;

                    case "D": //dang ky ban dau la tuyen xa
                        if (MA_CSKCB.Substring(0, 2) == MA_DKKCB.Substring(0, 2))
                            return 1;
                        else
                            return 3;
                }
            }
            return 0;
            //switch (TUYEN_CSDKKCB)
            //{
            //    case "A": //đăng ký ban đầu là TW -> trai tuyen
            //        return 3;

            //    case "B": // dang ky ban dau la tinh -> trai tuyen
            //        return 3;

            //    case "C": // dang ky kcb ban dau la huyen
            //        if (MA_DKKCB == MA_CSKCB)
            //            return 1;
            //        if ((MA_CSKCB != MA_DKKCB) && (MA_CSKCB.Substring(0, 2) == MA_DKKCB.Substring(0, 2))) // cung tinh
            //            return 1;
            //        if (MA_CSKCB.Substring(0, 2) != MA_DKKCB.Substring(0, 2))
            //            return 3;
            //        break;

            //    case "D": //dang ky ban dau la tuyen xa
            //        if (MA_CSKCB.Substring(0, 2) == MA_DKKCB.Substring(0, 2))
            //            return 1;
            //        else
            //            return 3;
            //}
            //return 0;
        }

        public static int KTraNoiNgoaiTinh(string MATINH_BHYT, string MA_CSKCB, string MA_DKKCB, string TUYEN_CSDKKCB, string TUYEN_CSKCB)
        {
            if (DungChung.Bien.MaBV == "24272")
            {
                if (MATINH_BHYT == MA_CSKCB.Substring(0, 2))
                {
                    if (MA_CSKCB == MA_DKKCB)
                    {
                        return 1;
                    }
                    else
                    {
                        return 2;
                    }
                }
                else
                {
                    return 3;
                }
            }
            else
            {
                if (MATINH_BHYT == MA_CSKCB.Substring(0, 2))
                {
                    if (MA_CSKCB.Substring(0, 2) == MA_DKKCB.Substring(0, 2))
                    {
                        var listCSKCB = DungChung.Ham.TTBV(MA_CSKCB);
                        var listCSDKKCB = DungChung.Ham.TTBV(MA_DKKCB);
                        if (listCSKCB.First().MaHuyen.Trim() == listCSDKKCB.First().MaHuyen.Trim())
                            return 1;//bn noi tinh kcb ban dau
                        else
                            return 2;//bn noi tinh den
                    }
                    else
                        return 3;//bn ngoai tinh den
                }
                else
                    return 3;//bn ngoai tinh den
            }
            
        }

        public static List<BenhVien> TTBV(string mabv)
        {
            QLBV_Database.QLBVEntities _dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
            var bv = _dataContext.BenhViens.Where(p => p.MaBV == mabv).ToList();
            return bv;
        }

        public static void BKeBNDichVu_01071(int _mabn)
        {
            QLBV_Database.QLBVEntities _dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
            List<c_BangKe> _lbangke = new List<c_BangKe>();
            frmIn frm = new frmIn();
            int _HTTT = -1;
            string _muc = "", _tenbn = "", _DTuong = "";
            double _tienTThu = 0;

            int _hangbv = 1;

            var tt = _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn).ToList();
            if (tt.Count > 0)
            {
                if (_mabn > 0)
                {
                    int _noitru = 0;

                    var par = _dataContext.BenhNhans.Where(p => p.MaBNhan == _mabn).ToList();
                    var _ngaykham = _dataContext.BNKBs.Where(p => p.MaBNhan == _mabn).OrderBy(p => p.IDKB).ToList();
                    var Rvien = _dataContext.RaViens.Where(p => p.MaBNhan == _mabn).ToList();
                    var vvien = _dataContext.VaoViens.Where(p => p.MaBNhan == _mabn).ToList();
                    var tung = _dataContext.TamUngs.Where(p => p.MaBNhan == _mabn).ToList();
                    if (tung.Where(p => p.PhanLoai == 0).ToList().Count > 0)
                        _tienTThu = tung.Where(p => p.PhanLoai == 0).Sum(p => p.SoTien).Value;
                    int idVP = 0;
                    if (tt.Count > 0)
                        idVP = tt.First().idVPhi;

                    var vpcttong = _dataContext.VienPhicts.Where(p => p.idVPhi == idVP).ToList();
                    var qvpct = (from vpct in vpcttong
                                 group vpct by new { vpct.ThanhToan, vpct.DonVi, vpct.DonGia, vpct.Duyet, vpct.IDTamUng, vpct.idVPhi, vpct.MaDV, vpct.MaKP, vpct.Mien, vpct.TrongBH, vpct.TyLeBHTT, vpct.TyLeTT, vpct.XHH }
                                     into kq
                                 select new
                                 {
                                     DonGia = kq.Key.DonGia,
                                     DonVi = kq.Key.DonVi,
                                     Duyet = kq.Key.Duyet,
                                     IDTamUng = kq.Key.IDTamUng,
                                     idVPhi = kq.Key.idVPhi,
                                     idVPhict = kq.FirstOrDefault().idVPhict,
                                     MaDV = kq.Key.MaDV,
                                     MaKP = kq.Key.MaKP,
                                     Mien = kq.Key.Mien,
                                     SoLuong = kq.Sum(p => p.SoLuong),
                                     ThanhTien = kq.Sum(p => p.ThanhTien),
                                     ThanhToan = kq.Key.ThanhToan,
                                     TienBH = kq.Sum(p => p.TienBH),
                                     TienBN = kq.Sum(p => p.TienBN),
                                     TrongBH = kq.Key.TrongBH,
                                     TyLeBHTT = kq.Key.TyLeBHTT,
                                     TyLeTT = kq.Key.TyLeTT,
                                     XHH = kq.Key.XHH,
                                 }
                                              ).ToList();
                    List<VienPhict> _lvpct = new List<VienPhict>();
                    foreach (var a in qvpct)
                    {
                        VienPhict vpct = new VienPhict();
                        vpct.DonGia = a.DonGia;
                        vpct.DonVi = a.DonVi;
                        vpct.Duyet = a.Duyet;
                        vpct.IDTamUng = a.IDTamUng;
                        vpct.idVPhi = a.idVPhi;
                        vpct.idVPhict = a.idVPhict;
                        vpct.MaDV = a.MaDV;
                        vpct.MaKP = a.MaKP;
                        vpct.Mien = a.Mien;
                        vpct.SoLuong = a.SoLuong;
                        vpct.ThanhTien = a.ThanhTien;
                        vpct.ThanhToan = a.ThanhToan;
                        vpct.TienBH = a.TienBH;
                        vpct.TienBN = a.TienBN;
                        vpct.TrongBH = a.TrongBH;
                        vpct.TyLeBHTT = a.TyLeBHTT;
                        vpct.TyLeTT = a.TyLeTT;
                        vpct.XHH = a.XHH;
                        _lvpct.Add(vpct);
                    }
                    var dichvu = (from dv in _dataContext.DichVus
                                  join tn in _dataContext.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                  join nhomdv in _dataContext.NhomDVs on tn.IDNhom equals nhomdv.IDNhom
                                  select new { dv.SoTT, dv.TrongDM, dv.MaDV, dv.TenHC, dv.HamLuong, dv.MaQD, dv.SoQD, TenNhom = nhomdv.TenNhom, nhomdv.TenNhomCT, nhomdv.STT, dv.TenDV, dv.DonVi, dv.PLoai }).ToList();
                    // thêm tenCK vào dich vụ công khám, tạm bổ ngày 26/07
                    string[] _chuyenkhoa = new string[20];
                    for (int i = 0; i < 20; i++)
                    {
                        _chuyenkhoa[i] = "";
                    }
                    int j = 0;

                    foreach (var item in _ngaykham)
                    {
                        //if (item.ChuyenKhoa != null)
                        //{
                        //    _chuyenkhoa[j] = item.ChuyenKhoa;
                        //    j++;
                        //}

                        var ck = Bien._lChuyenKhoa.Where(p => p.MaCK == item.MaCK).ToList();
                        if (ck.Count > 0)
                        {
                            _chuyenkhoa[j] = ck.First().ChuyenKhoa ?? "";
                            j++;
                        }
                    }
                    int _iddtbn = -1; string _loaiDT = "";
                    if (par.Count > 0)
                    {
                        _iddtbn = par.First().IDDTBN;

                        _DTuong = par.First().DTuong;
                        if (par.First().MucHuong != null && par.First().MucHuong.ToString() != "")
                            _muc = par.First().MucHuong.ToString();
                        _noitru = par.First().NoiTru.Value;
                        _tenbn = par.First().TenBNhan;
                    }
                    var dtbn = _dataContext.DTBNs.Where(p => p.IDDTBN == _iddtbn).ToList();
                    if (dtbn.Count > 0)
                    {
                        _HTTT = dtbn.First().HTTT;
                        _loaiDT = dtbn.First().DTBN1;
                    }
                    string maCQCQ = "";
                    if (Bien.MaTinh == "12")
                    {
                        var qcqcq = _dataContext.BenhViens.Where(p => p.MaBV == Bien.MaBV).FirstOrDefault();
                        if (qcqcq != null)
                            maCQCQ = qcqcq.MaChuQuan;
                    }

                    if (_hangbv == 4 && ((Bien.MaTinh != "12" && Bien.MaBV != "30280" && Bien.MaBV != "30340" && Bien.MaBV != "27001" && Bien.MaBV != "04247" && Bien.MaBV != "27183") || maCQCQ == "12001"))
                        _noitru = 2;

                    for (int m = 0; m < 2; m++)//0: Chi phí không phải xã hội hóa; 1: chi phí xã hội hóa
                    {
                        _lbangke.Clear();
                        if (m == 1)
                        {
                            var qxhh = (from vpct in _lvpct.Where(p => p.XHH > 0) select vpct).ToList();
                            if (qxhh.Count == 0)
                                break;
                        }

                        #region mau cu
                        BaoCao.repBangKe01bv_A4_01071 rep = new BaoCao.repBangKe01bv_A4_01071();
                        rep.STTThanhToan_lbl.Value = "Số TT: ";
                        rep.tenBN.Value = _tenbn;
                        rep.TenBN2.Value = _tenbn;
                        rep.MaBNhan.Value = _mabn;
                        if (par.Count > 0)
                        {
                            rep.KhuVuc.Value = par.First().KhuVuc;
                            rep.DiaChi.Value = par.First().DChi;
                            int gioiTinh = int.Parse(par.First().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nam.Value = "X";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nu.Value = "X";
                            }
                            if (_ngaykham.Count > 0)
                            {
                                DateTime _dt2 = System.DateTime.Now;
                                if (_ngaykham.First().NgayKham != null)
                                {
                                    _dt2 = _ngaykham.First().NgayKham.Value;
                                    rep.NgayKham.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                }
                            }

                            if (Rvien.Count > 0)
                            {
                                DateTime _dt2 = System.DateTime.Now;

                                if (tt.First().NgayTT != null)
                                {
                                    _dt2 = tt.First().NgayTT.Value;
                                    rep.NgayKT.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                }
                            }
                            _DTuong = (par.First().DTuong).ToString();
                            int dungtuyen = 0, capcuu = 0;

                            if (m == 0)
                                rep.mucHuong.Value = "Dành cho đối tượng " + _loaiDT;
                            else
                                rep.mucHuong.Value = "Dành cho đối tượng " + _loaiDT + " (XHH)";
                            rep.koBH.Value = "X";
                            capcuu = int.Parse(par.First().CapCuu.ToString());
                            if (capcuu == 1)
                            {
                                rep.CapCuu.Value = "X";
                            }
                            rep.HanBHTu.Value = "";

                            if (tt.Count > 0)
                            {
                                int _fmat = Bien.FormatDate;
                                rep.NgayTT.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, _fmat);
                            }

                            if (Rvien.Count > 0)
                            {
                                int _makp = 0;
                                if (Rvien.Count > 0)
                                    _makp = Rvien.First().MaKP;
                                var kphong = _dataContext.KPhongs.Where(p => p.MaKP == (_makp)).ToList();
                                if (kphong.Count > 0)
                                    rep.KhoaPhong.Value = kphong.First().TenKP;
                                rep.ChanDoan.Value = DungChung.Ham.GetICDstr(Rvien.First().ChanDoan);
                                rep.MaICD.Value = DungChung.Ham.GetICDstr(Rvien.First().MaICD);
                                if (Rvien.First().SoNgaydt != null)
                                    rep.TongNgay.Value = Rvien.First().SoNgaydt.ToString() + " ngày";
                                string _mabvchuyenden = "";
                                if (Bien.MaBV == "20001")
                                {
                                    if (Rvien.First().MaBVC != null)
                                    {
                                        _mabvchuyenden = Rvien.First().MaBVC;
                                    }
                                    else
                                    {
                                        if (!string.IsNullOrEmpty(par.First().MaBV))
                                            _mabvchuyenden = par.First().MaBV;
                                    }
                                }
                                else
                                {
                                    if (!string.IsNullOrEmpty(par.First().MaBV))
                                        _mabvchuyenden = par.First().MaBV;
                                    else
                                    {
                                        if (Rvien.First().MaBVC != null)
                                            _mabvchuyenden = Rvien.First().MaBVC;
                                        //if(Bien.MaBV=="12122")
                                    }
                                }
                                if (!string.IsNullOrEmpty(_mabvchuyenden))
                                {
                                    var bv = _dataContext.BenhViens.Where(p => p.MaBV == (_mabvchuyenden)).ToList();
                                    if (bv.Count > 0)
                                        rep.NoiChuyenDen.Value = bv.First().TenBV;
                                }
                            }
                            if (par.First().SoKB != null)
                                rep.SoKB.Value = par.First().SoKB;
                            //if (vvien.First().SoVV != null)
                            //    rep.SoKB.Value = vvien.First().SoVV;
                            string _ngaysinh = "";
                            if (par.First().NgaySinh != null && par.First().NgaySinh.ToString() != "")
                                _ngaysinh = par.First().NgaySinh.ToString() + "/";
                            if (par.First().ThangSinh != null && par.First().ThangSinh.ToString() != "")
                                _ngaysinh = _ngaysinh + par.First().ThangSinh.ToString() + "/";
                            if (par.First().NamSinh != null && par.First().NamSinh.ToString() != "")
                                _ngaysinh = _ngaysinh + par.First().NamSinh.ToString();
                            rep.NSinh.Value = _ngaysinh;
                            //bệnh nhân BHYT
                            var bk01 = (from vp1 in tt
                                        join vpct in _lvpct.Where(p => p.TrongBH == 1 || p.TrongBH == 0).Where(p => m == 0 ? (p.XHH == 0) : (p.XHH > 0)) on vp1.idVPhi equals vpct.idVPhi
                                        join dv in dichvu on vpct.MaDV equals dv.MaDV
                                        group new { vpct, dv } by new
                                        {
                                            vp1.MaKP,
                                            TenNhom = vpct.TrongBH == 1 ? dv.TenNhom : dv.TenNhom.Replace("trong danh mục BHYT", ""),
                                            dv.STT,
                                            TenDV = dv.TenDV,
                                            vpct.DonVi,
                                            vpct.DonGia,//, vpct.SoLuong, vpct.ThanhTien, TienBN = vpct.TienBN, vpct.TienBH
                                            dv.PLoai
                                        } into kq
                                        select new { kq.Key.MaKP, kq.Key.TenNhom, kq.Key.STT, kq.Key.TenDV, kq.Key.DonVi, kq.Key.DonGia, SoLuong = kq.Sum(p => p.vpct.SoLuong), ThanhTien = kq.Sum(p => p.vpct.ThanhTien), TienBN = kq.Sum(p => p.vpct.TienBN), TienBH = kq.Sum(p => p.vpct.TienBH), kq.Key.PLoai }).Where(p => p.SoLuong != 0).ToList();
                            var bk02 = (from vp1 in tt
                                        join vpct in _lvpct.Where(p => p.TrongBH == 1 || p.TrongBH == 0).Where(p => m == 0 ? (p.XHH == 0) : (p.XHH > 0)) on vp1.idVPhi equals vpct.idVPhi
                                        join dv in dichvu on vpct.MaDV equals dv.MaDV
                                        where (vpct.ThanhToan == 0)
                                        group new { vpct, dv } by new
                                        {
                                            vp1.MaKP,
                                            TenNhom = vpct.TrongBH == 1 ? dv.TenNhom : dv.TenNhom.Replace("trong danh mục BHYT", ""),
                                            dv.STT,
                                            TenDV = dv.TenDV,
                                            vpct.DonVi,
                                            vpct.DonGia,//, vpct.SoLuong, vpct.ThanhTien, TienBN = vpct.TienBN, vpct.TienBH
                                            dv.PLoai
                                        } into kq
                                        select new { kq.Key.MaKP, kq.Key.TenNhom, kq.Key.STT, kq.Key.TenDV, kq.Key.DonVi, kq.Key.DonGia, SoLuong = kq.Sum(p => p.vpct.SoLuong), ThanhTien = kq.Sum(p => p.vpct.ThanhTien), TienBN = kq.Sum(p => p.vpct.TienBN), TienBH = kq.Sum(p => p.vpct.TienBH), kq.Key.PLoai }).Where(p => p.SoLuong != 0).ToList();

                            double tongchiphi = bk01.Sum(p => p.ThanhTien);

                            if (tongchiphi > 0)
                            {
                                rep.txtTT.Text = "Chi phí phải trả: " + Math.Round(tongchiphi, 0).ToString("###,###") + " đ";
                                rep.txtbangChu.Text = "Số tiền ghi bằng chữ: " + DungChung.Ham.DocTienBangChu(Math.Round(tongchiphi, 0), " đồng.");
                            }
                            else
                            {
                                rep.txtTT.Text = "Chi phí phải trả: 0 đ";
                                rep.txtbangChu.Text = "Số tiền ghi bằng chữ: Không đồng !";
                            }

                            var _tamung = (from a in _dataContext.TamUngs.Where(p => p.MaBNhan == _mabn) select new { a.SoTien, a.PhanLoai, a.TienChenh }).ToList();
                            double tamung = _tamung.Where(p => p.PhanLoai == 0).Sum(p => p.SoTien ?? 0);
                            if (tamung > 0)
                            {
                                rep.txtTienTamUng.Text = "- Đã nộp tiền đặt cọc: " + Math.Round(tamung, 0).ToString("###,###") + " đ";
                            }
                            else rep.txtTienTamUng.Text = "- Đã nộp tiền đặt cọc: 0 đ";
                            double datt = _tamung.Where(p => p.PhanLoai == 3).Sum(p => p.SoTien ?? 0);
                            if (datt > 0)
                                rep.txtThuThang.Text = "- Đã thanh toán: " + Math.Round(datt, 0).ToString("###,###") + " đ";
                            else
                                rep.txtThuThang.Text = "- Đã thanh toán: 0 đ";

                            //  double chuathanhtoan = bk02.Sum(p => p.ThanhTien);

                            if (tamung + datt - tongchiphi > 0)
                            {
                                rep.txtNhanLai.Text = "- Bệnh nhân nhận lại: " + Math.Round((tamung + datt - tongchiphi), 0).ToString("###,###") + " đ";
                                // rep.txtPhaiThuThem.Text = "- Phải thu thêm của bệnh nhân: 0 đ";
                            }
                            else
                            {
                                rep.txtNhanLai.Text = "- Phải thu thêm của bệnh nhân: " + Math.Round((tongchiphi - tamung - datt), 0).ToString("###,###") + " đ";//"- Bệnh nhân nhận lại: 0 đ";
                                // rep.txtPhaiThuThem.Text = "- Phải thu thêm của bệnh nhân: " + (chuathanhtoan - tamung).ToString("###,###.#") + " đ";
                            }

                            if (bk01.Count > 0)
                            {
                                rep.DataSource = bk01.ToList();
                                rep.BindingData();
                                rep.CreateDocument();
                                //rep.DataMember = "Table";
                                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                frm.ShowDialog();
                            }
                            #endregion
                        }
                    }
                }
            }
        }

        /// <summary>
        ///
        /// </summary>
        /// <param name="_dataContext"></param>
        /// <param name="_mabn"></param>
        /// <param name="_maubk"> A4:4, A5:5, A4_new: 41</param>
        /// /// <param name="kieu"> 0: tự động, 1: theo mẫu</param>
        public static void BangkeTTBNDV_20001(int _mabn)
        {
            QLBV_Database.QLBVEntities _dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
            List<c_BangKe> _lbangke = new List<c_BangKe>();
            frmIn frm = new frmIn();
            int _HTTT = -1;
            string _muc = "", _tenbn = "", _DTuong = "";
            double _tienTThu = 0;

            int _hangbv = 1;

            var tt = _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn).ToList();
            if (tt.Count > 0)
            {
                if (_mabn > 0)
                {
                    int _noitru = 0;

                    var par = _dataContext.BenhNhans.Where(p => p.MaBNhan == _mabn).ToList();
                    var _ngaykham = _dataContext.BNKBs.Where(p => p.MaBNhan == _mabn).OrderBy(p => p.IDKB).ToList();
                    var Rvien = _dataContext.RaViens.Where(p => p.MaBNhan == _mabn).ToList();
                    var vvien = _dataContext.VaoViens.Where(p => p.MaBNhan == _mabn).ToList();
                    var tung = _dataContext.TamUngs.Where(p => p.MaBNhan == _mabn).ToList();
                    if (tung.Where(p => p.PhanLoai == 0).ToList().Count > 0)
                        _tienTThu = tung.Where(p => p.PhanLoai == 0).Sum(p => p.SoTien).Value;
                    int idVP = 0;
                    if (tt.Count > 0)
                        idVP = tt.First().idVPhi;

                    var vpcttong = _dataContext.VienPhicts.Where(p => p.idVPhi == idVP).ToList();
                    var qvpct = (from vpct in vpcttong
                                 group vpct by new { vpct.ThanhToan, vpct.DonVi, vpct.DonGia, vpct.Duyet, vpct.IDTamUng, vpct.idVPhi, vpct.MaDV, vpct.MaKP, vpct.Mien, vpct.TrongBH, vpct.TyLeBHTT, vpct.TyLeTT, vpct.XHH }
                                     into kq
                                 select new
                                 {
                                     DonGia = kq.Key.DonGia,
                                     DonVi = kq.Key.DonVi,
                                     Duyet = kq.Key.Duyet,
                                     IDTamUng = kq.Key.IDTamUng,
                                     idVPhi = kq.Key.idVPhi,
                                     idVPhict = kq.FirstOrDefault().idVPhict,
                                     MaDV = kq.Key.MaDV,
                                     MaKP = kq.Key.MaKP,
                                     Mien = kq.Key.Mien,
                                     SoLuong = kq.Sum(p => p.SoLuong),
                                     ThanhTien = kq.Sum(p => p.ThanhTien),
                                     ThanhToan = kq.Key.ThanhToan,
                                     TienBH = kq.Sum(p => p.TienBH),
                                     TienBN = kq.Sum(p => p.TienBN),
                                     TrongBH = kq.Key.TrongBH,
                                     TyLeBHTT = kq.Key.TyLeBHTT,
                                     TyLeTT = kq.Key.TyLeTT,
                                     XHH = kq.Key.XHH,
                                 }
                                              ).ToList();
                    List<VienPhict> _lvpct = new List<VienPhict>();
                    foreach (var a in qvpct)
                    {
                        VienPhict vpct = new VienPhict();
                        vpct.DonGia = a.DonGia;
                        vpct.DonVi = a.DonVi;
                        vpct.Duyet = a.Duyet;
                        vpct.IDTamUng = a.IDTamUng;
                        vpct.idVPhi = a.idVPhi;
                        vpct.idVPhict = a.idVPhict;
                        vpct.MaDV = a.MaDV;
                        vpct.MaKP = a.MaKP;
                        vpct.Mien = a.Mien;
                        vpct.SoLuong = a.SoLuong;
                        vpct.ThanhTien = a.ThanhTien;
                        vpct.ThanhToan = a.ThanhToan;
                        vpct.TienBH = a.TienBH;
                        vpct.TienBN = a.TienBN;
                        vpct.TrongBH = a.TrongBH;
                        vpct.TyLeBHTT = a.TyLeBHTT;
                        vpct.TyLeTT = a.TyLeTT;
                        vpct.XHH = a.XHH;
                        _lvpct.Add(vpct);
                    }
                    var dichvu = (from dv in _dataContext.DichVus
                                  join tn in _dataContext.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                  join nhomdv in _dataContext.NhomDVs on tn.IDNhom equals nhomdv.IDNhom
                                  select new { dv.SoTT, dv.TrongDM, dv.MaDV, dv.TenHC, dv.HamLuong, dv.MaQD, dv.SoQD, nhomdv.TenNhom, nhomdv.TenNhomCT, nhomdv.STT, dv.TenDV, dv.DonVi, dv.PLoai }).ToList();
                    // thêm tenCK vào dich vụ công khám, tạm bổ ngày 26/07
                    string[] _chuyenkhoa = new string[20];
                    for (int i = 0; i < 20; i++)
                    {
                        _chuyenkhoa[i] = "";
                    }
                    int j = 0;

                    foreach (var item in _ngaykham)
                    {
                        //if (item.ChuyenKhoa != null)
                        //{
                        //    _chuyenkhoa[j] = item.ChuyenKhoa;
                        //    j++;
                        //}

                        var ck = Bien._lChuyenKhoa.Where(p => p.MaCK == item.MaCK).ToList();
                        if (ck.Count > 0)
                        {
                            _chuyenkhoa[j] = ck.First().ChuyenKhoa ?? "";
                            j++;
                        }
                    }
                    int _iddtbn = -1; string _loaiDT = "";
                    if (par.Count > 0)
                    {
                        _iddtbn = par.First().IDDTBN;

                        _DTuong = par.First().DTuong;
                        if (par.First().MucHuong != null && par.First().MucHuong.ToString() != "")
                            _muc = par.First().MucHuong.ToString();
                        _noitru = par.First().NoiTru.Value;
                        _tenbn = par.First().TenBNhan;
                    }
                    var dtbn = _dataContext.DTBNs.Where(p => p.IDDTBN == _iddtbn).ToList();
                    if (dtbn.Count > 0)
                    {
                        _HTTT = dtbn.First().HTTT;
                        _loaiDT = dtbn.First().DTBN1;
                    }
                    string maCQCQ = "";
                    if (Bien.MaTinh == "12")
                    {
                        var qcqcq = _dataContext.BenhViens.Where(p => p.MaBV == Bien.MaBV).FirstOrDefault();
                        if (qcqcq != null)
                            maCQCQ = qcqcq.MaChuQuan;
                    }

                    if (_hangbv == 4 && ((Bien.MaTinh != "12" && Bien.MaBV != "30280" && Bien.MaBV != "30340" && Bien.MaBV != "27001" && Bien.MaBV != "04247" && Bien.MaBV != "27183") || maCQCQ == "12001"))
                        _noitru = 2;

                    for (int m = 0; m < 2; m++)//0: Chi phí không phải xã hội hóa; 1: chi phí xã hội hóa
                    {
                        _lbangke.Clear();
                        if (m == 1)
                        {
                            var qxhh = (from vpct in _lvpct.Where(p => p.XHH > 0) select vpct).ToList();
                            if (qxhh.Count == 0)
                                break;
                        }

                        #region mau cu
                        BaoCao.repBangKe01bv_A4_20001 rep = new BaoCao.repBangKe01bv_A4_20001();
                        rep.STTThanhToan_lbl.Value = "Số TT: ";
                        rep.tenBN.Value = Bien.MaBV == "20001" ? _tenbn.ToUpper() : _tenbn;
                        rep.TenBN2.Value = _tenbn;
                        rep.MaBNhan.Value = _mabn;
                        if (par.Count > 0)
                        {
                            rep.KhuVuc.Value = par.First().KhuVuc;
                            rep.DiaChi.Value = par.First().DChi;
                            int gioiTinh = int.Parse(par.First().GTinh.ToString());
                            if (gioiTinh == 1)
                            {
                                rep.Nam.Value = "X";
                            }
                            else if (gioiTinh == 0)
                            {
                                rep.Nu.Value = "X";
                            }
                            if (_ngaykham.Count > 0)
                            {
                                DateTime _dt2 = System.DateTime.Now;
                                if (_ngaykham.First().NgayKham != null)
                                {
                                    _dt2 = _ngaykham.First().NgayKham.Value;
                                    rep.NgayKham.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                }
                            }

                            if (Rvien.Count > 0)
                            {
                                DateTime _dt2 = System.DateTime.Now;
                                //if (Bien.MaBV == "30003")
                                //{
                                if (tt.First().NgayTT != null)
                                {
                                    _dt2 = tt.First().NgayTT.Value;
                                    rep.NgayKT.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                }
                                //}
                                //else
                                //{
                                //    if (Rvien.First().NgayRa != null)
                                //    {
                                //        _dt2 = Rvien.First().NgayRa.Value;
                                //        rep.NgayKT.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                //    }
                                //}
                            }
                            _DTuong = (par.First().DTuong).ToString();
                            int dungtuyen = 0, capcuu = 0;
                            if (_HTTT == 1) //   if (_DTuong.Contains("BHYT"))
                            {
                                rep.SoThe.Value = par.First().SThe;
                                rep.coBH.Value = "X";
                                //if(par.First().SThe!=null && par.First().SThe.ToString()!="" && par.First().SThe.Length>10)
                                // _muc = par.First().SThe.Substring(2, 1);

                                rep.HanBHTu.Value = par.First().HanBHTu;
                                rep.HanBHDen.Value = par.First().HanBHDen;
                                string macs = "";
                                if (par.First().MaCS != null)
                                {
                                    macs = par.First().MaCS;
                                    rep.MaCS.Value = macs.Substring(0, 2) + "-" + macs.Substring(2, 3);
                                }
                                var csdkbd = _dataContext.BenhViens.Where(p => p.MaBV == macs).ToList();
                                if (csdkbd.Count > 0)
                                {
                                    rep.CSDKKCB.Value = csdkbd.First().TenBV;
                                }

                                if (par.First().Tuyen != null)
                                {
                                    dungtuyen = int.Parse(par.First().Tuyen.ToString());
                                }

                                capcuu = int.Parse(par.First().CapCuu.ToString());
                                if (capcuu == 1)
                                {
                                    rep.CapCuu.Value = "X";
                                    rep.DungTuyen.Value = "";
                                    rep.TraiTuyen.Value = "";
                                }
                            }
                            else
                            {
                                if (m == 0)
                                    rep.mucHuong.Value = "Dành cho đối tượng " + _loaiDT;
                                else
                                    rep.mucHuong.Value = "Dành cho đối tượng " + _loaiDT + " (XHH)";
                                rep.koBH.Value = "X";
                                capcuu = int.Parse(par.First().CapCuu.ToString());
                                if (capcuu == 1)
                                {
                                    rep.CapCuu.Value = "X";
                                }
                                rep.HanBHTu.Value = "";
                            }

                            if (tt.Count > 0)
                            {
                                int _fmat = Bien.FormatDate;
                                if (Bien.MaBV == "30002")
                                    _fmat = 1;
                                if (Bien.MaBV == "08204" || Bien.MaBV == "19048" || Bien.MaBV == "27023")
                                    rep.NgayGD.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, 0);
                                else if (Bien.MaBV == "27001")
                                    rep.NgayGD.Value = " Ngày ... tháng... năm......";
                                else
                                    rep.NgayGD.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, _fmat);
                                rep.NgayTT.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, _fmat);
                            }

                            if (Rvien.Count > 0)
                            {
                                int _makp = 0;
                                if (Rvien.Count > 0)
                                    _makp = Rvien.First().MaKP;
                                var kphong = _dataContext.KPhongs.Where(p => p.MaKP == (_makp)).ToList();
                                if (kphong.Count > 0)
                                    rep.KhoaPhong.Value = kphong.First().TenKP;
                                rep.ChanDoan.Value = DungChung.Ham.GetICDstr(Rvien.First().ChanDoan);
                                rep.MaICD.Value = DungChung.Ham.GetICDstr(Rvien.First().MaICD);
                                if (Rvien.First().SoNgaydt != null)
                                    rep.TongNgay.Value = Rvien.First().SoNgaydt.ToString() + " ngày";
                                string _mabvchuyenden = "";
                                if (Bien.MaBV == "20001")
                                {
                                    if (Rvien.First().MaBVC != null)
                                    {
                                        _mabvchuyenden = Rvien.First().MaBVC;
                                    }
                                    else
                                    {
                                        if (!string.IsNullOrEmpty(par.First().MaBV))
                                            _mabvchuyenden = par.First().MaBV;
                                    }
                                }
                                else
                                {
                                    if (!string.IsNullOrEmpty(par.First().MaBV))
                                        _mabvchuyenden = par.First().MaBV;
                                    else
                                    {
                                        if (Rvien.First().MaBVC != null)
                                            _mabvchuyenden = Rvien.First().MaBVC;
                                        rep.xrLabel66.Text = "Nơi chuyển đi:";
                                    }
                                }
                                if (!string.IsNullOrEmpty(_mabvchuyenden))
                                {
                                    var bv = _dataContext.BenhViens.Where(p => p.MaBV == (_mabvchuyenden)).ToList();
                                    if (bv.Count > 0)
                                        rep.NoiChuyenDen.Value = bv.First().TenBV;
                                }
                            }
                            if (par.First().SoKB != null)
                                rep.SoKB.Value = par.First().SoKB;
                            //if (vvien.First().SoVV != null)
                            //    rep.SoKB.Value = vvien.First().SoVV;
                            string _ngaysinh = "";
                            if (par.First().NgaySinh != null && par.First().NgaySinh.ToString() != "")
                                _ngaysinh = par.First().NgaySinh.ToString() + "/";
                            if (par.First().ThangSinh != null && par.First().ThangSinh.ToString() != "")
                                _ngaysinh = _ngaysinh + par.First().ThangSinh.ToString() + "/";
                            if (par.First().NamSinh != null && par.First().NamSinh.ToString() != "")
                                _ngaysinh = _ngaysinh + par.First().NamSinh.ToString();
                            rep.NSinh.Value = _ngaysinh;
                            //bệnh nhân BHYT
                            var bk01 = (from vp1 in tt
                                        join vpct in _lvpct.Where(p => p.TrongBH == 1 || p.TrongBH == 0).Where(p => m == 0 ? (p.XHH == 0) : (p.XHH > 0)) on vp1.idVPhi equals vpct.idVPhi
                                        join dv in dichvu on vpct.MaDV equals dv.MaDV
                                        group new { vpct, dv } by new
                                        {
                                            vp1.MaKP,
                                            dv.TenNhom,
                                            dv.STT,
                                            TenDV = dv.TenDV,
                                            vpct.DonVi,
                                            vpct.DonGia,//, vpct.SoLuong, vpct.ThanhTien, TienBN = vpct.TienBN, vpct.TienBH
                                            dv.PLoai
                                        } into kq
                                        select new { kq.Key.MaKP, kq.Key.TenNhom, kq.Key.STT, kq.Key.TenDV, kq.Key.DonVi, kq.Key.DonGia, SoLuong = kq.Sum(p => p.vpct.SoLuong), ThanhTien = kq.Sum(p => p.vpct.ThanhTien), TienBN = kq.Sum(p => p.vpct.TienBN), TienBH = kq.Sum(p => p.vpct.TienBH), kq.Key.PLoai }).Where(p => p.SoLuong != 0).ToList();
                            var bk02 = (from vp1 in tt
                                        join vpct in _lvpct.Where(p => p.TrongBH == 1 || p.TrongBH == 0).Where(p => m == 0 ? (p.XHH == 0) : (p.XHH > 0)) on vp1.idVPhi equals vpct.idVPhi
                                        join dv in dichvu on vpct.MaDV equals dv.MaDV
                                        where (vpct.ThanhToan == 0)
                                        group new { vpct, dv } by new
                                        {
                                            vp1.MaKP,
                                            dv.TenNhom,
                                            dv.STT,
                                            TenDV = dv.TenDV,
                                            vpct.DonVi,
                                            vpct.DonGia,//, vpct.SoLuong, vpct.ThanhTien, TienBN = vpct.TienBN, vpct.TienBH
                                            dv.PLoai
                                        } into kq
                                        select new { kq.Key.MaKP, kq.Key.TenNhom, kq.Key.STT, kq.Key.TenDV, kq.Key.DonVi, kq.Key.DonGia, SoLuong = kq.Sum(p => p.vpct.SoLuong), ThanhTien = kq.Sum(p => p.vpct.ThanhTien), TienBN = kq.Sum(p => p.vpct.TienBN), TienBH = kq.Sum(p => p.vpct.TienBH), kq.Key.PLoai }).Where(p => p.SoLuong != 0).ToList();
                            double tongthuoc = bk01.Where(p => p.PLoai == 1).Sum(p => p.ThanhTien);
                            double tongdv = bk01.Where(p => p.PLoai == 2).Sum(p => p.ThanhTien);
                            double tongchiphi = bk01.Sum(p => p.ThanhTien);
                            if (tongthuoc > 0)
                                rep.TongThuoc.Value = tongthuoc;
                            else rep.TongThuoc.Value = "0";
                            if (tongdv > 0)
                                rep.ChiPhiKhac.Value = tongdv;
                            else rep.ChiPhiKhac.Value = "0";
                            if (tongchiphi > 0)
                                rep.TongChiPhi.Value = tongchiphi;
                            else rep.TongChiPhi.Value = "0";

                            var _tamung = (from a in _dataContext.TamUngs.Where(p => p.MaBNhan == _mabn) select new { a.SoTien, a.PhanLoai, a.TienChenh }).ToList();
                            double tamung = _tamung.Where(p => p.PhanLoai == 0).Sum(p => p.SoTien ?? 0);
                            if (tamung > 0)
                            {
                                double hoanung = tamung - bk02.Sum(p => p.ThanhTien);
                                rep.HoanUng.Value = hoanung;
                                rep.TamUng.Value = tamung;
                            }
                            else rep.TamUng.Value = "0";
                            double datt = _tamung.Where(p => p.PhanLoai == 3).Sum(p => p.SoTien ?? 0);
                            double chuathanhtoan = bk02.Sum(p => p.ThanhTien);
                            if (chuathanhtoan > 0)
                                rep.ChuaThanhToan.Value = chuathanhtoan;
                            else rep.ChuaThanhToan.Value = "0";
                            if (datt > 0)
                                rep.DaThanhToan.Value = datt;
                            else rep.DaThanhToan.Value = "0";

                            if (tamung - chuathanhtoan > 0)
                            {
                                rep.BVHoanTra.Value = "Bệnh viện hoàn trả:";
                                rep.BVHT.Value = tamung - chuathanhtoan;
                            }
                            else
                            {
                                rep.BVHoanTra.Value = "Bệnh nhân thanh toán:";
                                if (chuathanhtoan - tamung > 0)
                                    rep.BVHT.Value = chuathanhtoan - tamung;
                                else rep.BVHT.Value = "0";
                            }
                            rep.Tongtien.Value = bk01.Sum(p => p.ThanhTien);
                            rep.TienBN.Value = bk01.Sum(p => p.TienBN);
                            var tamthu = _dataContext.TamUngs.Where(p => p.MaBNhan == _mabn).ToList();
                            rep.TamThu.Value = tamthu.Where(p => p.PhanLoai == 0).Sum(p => p.SoTien).Value - tamthu.Where(p => p.PhanLoai == 4).Sum(p => p.SoTien).Value;

                            if (tamthu.Where(p => p.PhanLoai == 3).Sum(p => p.SoTien) != null)
                                rep.ThuTT.Value = tamthu.Where(p => p.PhanLoai == 3).Sum(p => p.SoTien).Value;
                            else
                                rep.ThuTT.Value = 0;
                            if (bk01.Count > 0)
                            {
                                rep.DataSource = bk01.ToList();
                                rep.BindingData();
                                rep.CreateDocument();
                                //rep.DataMember = "Table";
                                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                frm.ShowDialog();
                            }
                            #endregion
                        }
                    }
                }
            }
        }

        public static int checkThongTuyen(string maNoiKcb, string maDkKcb)
        {
            int ttuyen = 1;
            QLBV_Database.QLBVEntities _db = new QLBV_Database.QLBVEntities(Bien.StrCon);
            var bv = (from a in _db.BenhViens select new { a.MaBV, a.HangBV, a.TuyenBV, a.MaHuyen, a.MaTinh }).ToList();
            var bvkham = bv.Where(p => p.MaBV == maNoiKcb).Select(p => p).FirstOrDefault();
            var bvdk = bv.Where(p => p.MaBV == maDkKcb).Select(p => p).FirstOrDefault();
            if (bvdk != null && bvkham != null)
            {
                //if (Bien.MaBV == "27022")
                //{
                //}
                //else
                //{
                if (Bien.MaBV == "30002")
                {
                    if (bvkham.TuyenBV.Trim() == "C")
                    {
                        if (bvkham.MaHuyen != bvdk.MaHuyen)
                        {
                            ttuyen = 4;
                        }
                    }
                }
                else if (Bien.MaBV == "24272")
                {
                    if (maDkKcb == Bien.MaBV)
                    {
                        ttuyen = 1;
                    }
                    //else if ((bvkham.TuyenBV.Trim() == "C" || bvkham.TuyenBV.Trim() == "D") && (bvdk.TuyenBV.Trim() == "C" || bvdk.TuyenBV.Trim() == "D"))
                    //{
                    //    if (bvkham.MaHuyen != bvdk.MaHuyen && bvkham.MaTinh == bvdk.MaTinh)
                    //    {
                    //        ttuyen = 4;
                    //    }
                    //    else
                    //        ttuyen = 1;
                    //}
                    else if (maDkKcb.StartsWith("24"))
                    {
                        ttuyen = 4;
                    }
                }
                else
                {
                    if (bvkham.TuyenBV.Trim() == "C" && (bvdk.TuyenBV.Trim() == "C" || bvdk.TuyenBV.Trim() == "D"))// if ((bvkham.HangBV == 3 || bvkham.TuyenBV == "C") && (bvdk.HangBV == 3 || bvdk.TuyenBV == "C"))
                    {
                        if (bvkham.MaHuyen != bvdk.MaHuyen)
                        {
                            ttuyen = 4;
                        }
                    }
                }
                //}
            }
            return ttuyen;
        }

        public class C_BKe_New
        {
            public int STTNhom { get; set; }
            public string TenNhom { get; set; }
            public int STTTieuN { get; set; }
            public string TenTieuNhom { get; set; }
            public string TenDV { get; set; }
            public string DonVi { get; set; }
            public double SoLuong { get; set; }
            public double DonGiaBV { get; set; }
            public double DonGiaBH { get; set; }
            public double TyLeTTDV { get; set; }
            public double ThanhTienBV { get; set; }
            public double ThanhTienBH { get; set; }
            public double TyLeTTBH { get; set; }
            public double TienBH { get; set; }
            public double TienBN { get; set; }
            public double TienNgBH { get; set; }
            public double TienKhac { get; set; }
            public int Mien { get; set; }
            public bool IsTrongBH { get; set; }
            public string TenDongTayY { get; set; }
        }

        //public void In_BangKe_ThuocMienCT()

        public static void In_BangKe_2018(QLBV_Database.QLBVEntities _dataContext, int _mabn)
        {
            var ngayTT = _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn).Select(p => p.NgayTT).ToList(); // HIS 1233
            DateTime? _ngayTachThe = ngayTT.Count() > 0 ? ngayTT.First() : DateTime.Now;
            _dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
            var _Benhnhan = _dataContext.BenhNhans.Where(p => p.MaBNhan == _mabn).FirstOrDefault();
            var _CountBN = _dataContext.BenhNhans.Count();
            var _lvp = _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn).FirstOrDefault();
            var _lrv = _dataContext.RaViens.Where(p => p.MaBNhan == _mabn).FirstOrDefault();
            var _lvv = _dataContext.VaoViens.Where(p => p.MaBNhan == _mabn).FirstOrDefault();
            var _lTttbx = _dataContext.TTboXungs.Where(p => p.MaBNhan == _mabn).FirstOrDefault();
            var _bnkb = (from bnkb in _dataContext.BNKBs.Where(p => p.MaBNhan == _mabn)
                         join cb in _dataContext.CanBoes on bnkb.MaCB equals cb.MaCB
                         select new { cb.TenCB, bnkb.NgayKham }).OrderBy(p => p.NgayKham).ToList();
            if (!string.IsNullOrEmpty(_lTttbx.TTTheBHYTold) && _lTttbx.TTTheBHYTold.Contains(';'))
            {
                var listTTBS = _lTttbx.TTTheBHYTold.Split(';').ToList();
                _ngayTachThe = DungChung.Ham.NgayTu(Convert.ToDateTime(listTTBS[5]));
            }
            var _ltu = _dataContext.TamUngs.Where(p => p.MaBNhan == _mabn).ToList();
            var _bv = _dataContext.BenhViens.ToList();
            var _kb = _dataContext.BNKBs.Where(p => p.MaBNhan == _mabn).OrderBy(p => p.IDKB).FirstOrDefault();
            var _licd10 = _dataContext.ICD10.ToList();
            var dichvu = (from dv in _dataContext.DichVus
                          join tn in _dataContext.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                          join nhomdv in _dataContext.NhomDVs on tn.IDNhom equals nhomdv.IDNhom
                          select new { dv.BHTT, dv.SoTT, nhomdv.TenNhomBK02, dv.TrongDM, dv.MaDV, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.GiaBHGioiHanTT, TenRGTN = tn.TenRG, dv.TenHC, dv.HamLuong, dv.MaQD, dv.SoQD, nhomdv.TenNhom, nhomdv.TenNhomCT, nhomdv.STT, dv.TenDV, dv.DonVi, dv.TenRG, nhomdv.IDNhom, STTTNhom = tn.STT, dv.DongY, }).ToList();
            var ttht = _dataContext.HTHONGs.Where(p => p.MaBV == Bien.MaBV).FirstOrDefault();
            int _loaiBK = 0;//0: in ngang,1 in dọc
            if (ttht != null)
            {
                try
                {
                    if (!string.IsNullOrEmpty(ttht.MauIn) && ttht.MauIn.Contains(";") && ttht.MauIn.Split(';').Length > 5)
                    {
                        _loaiBK = Convert.ToInt32(ttht.MauIn.Split(';')[5]);
                    }
                }
                catch (Exception ex)
                {
                    MessageBox.Show("Lỗi thiết lập mẫu in: " + ex.Message.ToString());
                }
            }
            int dungtuyen = 0, capcuu = 0, _noitru = 0;
            string _muc = "";
            int malydo = 0; string _khuvuc = "";
            DateTime _NgayTT = DateTime.Now;
            string _CQCQ = "";
            string _MaBV = Bien.MaBV;
            var CQCQ = _bv.Where(p => p.MaBV == _MaBV).Select(p => p.MaChuQuan).FirstOrDefault();
            int _hangbv = DungChung.Ham.hangBV(Bien.MaBV);
            int _idper1 = 0, _idper2 = 0;
            frmIn frm = new frmIn();

            var kpNhaThuoc = _dataContext.KPhongs.Where(o => o.TenKP.Contains("nhà thuốc") || o.TenKP.Contains("Nhà thuốc")).Select(o => o.MaKP).ToList();

            if (Bien.MaBV == "34019")
            {
                #region Tách BK nggoài danh mục và trong DM
                if (_loaiBK == 0)
                {
                    #region In ngang
                    int _idvp = _lvp != null ? _lvp.idVPhi : 0;
                    var ktra2the = _dataContext.VienPhicts.Where(p => p.idVPhi == _idvp).Select(p => p.IDPerson).Distinct().ToList();
                    if (ktra2the.Count() == 2)
                    {
                        _idper1 = ktra2the.First().Value;
                        _idper2 = ktra2the.Last().Value;
                    }

                    #region Load chi tiết

                    var _ldvbn1 = (from vp in _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn)
                                   join vpct in _dataContext.VienPhicts.Where(p => (Bien.MaBV == "01071" || Bien.MaBV == "01049") ? (p.TrongBH == 1) : (p.TrongBH != 2 && p.TrongBH != 3)).Where(p => p.ThanhToan == 0).Where(p => p.AttachIDDonct == null).Where(o => (!kpNhaThuoc.Contains(o.MaKXuat ?? 0)) || o.MaKXuat == null).Where(p => p.NgayYLenh <= _ngayTachThe) on vp.idVPhi equals vpct.idVPhi
                                   select new
                                   {
                                       vp.MaBNhan,
                                       vp.NgayTT,
                                       vpct.MaDV,
                                       vpct.TrongBH,
                                       vpct.DonVi,
                                       vpct.DonGia,
                                       vpct.TyLeTT,
                                       vpct.TyLeBHTT,
                                       vpct.IDPerson,
                                       vpct.SoLuong,
                                       vpct.ThanhTien,
                                       vpct.TBNCTT,
                                       vpct.TBNTT,
                                       vpct.TienBH,
                                       vpct.MienCT
                                   }).ToList();
                    var _ldvbn = (from vp in _ldvbn1.Where(p => _idper1 == 0 ? true : p.IDPerson == _idper1)
                                  group new { vp } by new { vp.MaBNhan, vp.NgayTT, vp.MaDV, vp.TrongBH, vp.DonVi, vp.DonGia, vp.TyLeTT, vp.TyLeBHTT, vp.IDPerson, vp.MienCT } into kq
                                  select new
                                  {
                                      kq.Key.MaBNhan,
                                      kq.Key.NgayTT,
                                      kq.Key.MaDV,
                                      kq.Key.TrongBH,
                                      kq.Key.DonVi,
                                      kq.Key.DonGia,
                                      kq.Key.TyLeTT,
                                      kq.Key.TyLeBHTT,
                                      kq.Key.IDPerson,
                                      SoLuong = kq.Sum(p => p.vp.SoLuong),
                                      ThanhTien = kq.Sum(p => p.vp.ThanhTien),
                                      TBNCTT = kq.Sum(p => p.vp.TBNCTT),
                                      TBNTT = kq.Sum(p => p.vp.TBNTT),
                                      TienBH = kq.Sum(p => p.vp.TienBH * p.vp.TyLeBHTT / 100),
                                      kq.Key.MienCT
                                  }).ToList();
                    double tongcp1 = _ldvbn1.Count() > 0 ? _ldvbn.Sum(p => p.ThanhTien) : 0;
                    //bool GiaCuBH = DungChung.Ham.GiaCu(_mabn, 1, _NgayTT);
                    //bool GiaCuDV = DungChung.Ham.GiaCu(_mabn, 0, _NgayTT);

                    int GiaCuBH = DungChung.Ham.GiaCu(_mabn, 1);
                    int GiaCuDV = DungChung.Ham.GiaCu(_mabn, 0);
                    List<C_BKe_New> _lkq = new List<C_BKe_New>();
                    List<KPhong> _lkp = _dataContext.KPhongs.ToList();
                    //lấy số phim x-quang
                    var _lcls = (from cls in _dataContext.CLS.Where(p => p.MaBNhan == _mabn)
                                 join cd in _dataContext.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                 select new { cd.MaDV, cd.SoPhim, cd.IDCD }).ToList();
                    var sophim = (from dv in dichvu.Where(p => p.TenRGTN == Bien.st_TieuNhomRG_ChuyenKhoa.X_Quang)
                                  join cls in _lcls.Where(p => p.SoPhim != null) on dv.MaDV equals cls.MaDV
                                  select cls).ToList();
                    int SoPhim = 0;
                    if (sophim.Count > 0)
                        SoPhim = sophim.Sum(p => p.SoPhim) ?? 0;
                    string kvuc = "";
                    if (_Benhnhan.KhuVuc != null)
                        kvuc = _Benhnhan.KhuVuc;

                    //Công khám
                    var _lcongkham = (from vp in _ldvbn
                                      join dv in dichvu.Where(p => p.IDNhom == 13) on vp.MaDV equals dv.MaDV
                                      select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.STTTNhom }).ToList();
                    if (_lcongkham.Count > 0)
                    {
                        foreach (var item in _lcongkham)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 1;
                            moi.TenNhom = "1. Khám bệnh";
                            moi.STTTieuN = item.STTTNhom != null ? Convert.ToInt32(item.STTTNhom) : 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = Math.Round(item.vp.DonGia * item.vp.SoLuong, Bien.LamTronSo, MidpointRounding.AwayFromZero); //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = Math.Round(item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeTT / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            moi.IsTrongBH = item.vp.TrongBH == 1;
                            _lkq.Add(moi);
                        }
                    }
                    //
                    //Ngày giường
                    var _lngaygiuong = (from vp in _ldvbn
                                        join dv in dichvu.Where(p => p.IDNhom == 15 || p.IDNhom == 14) on vp.MaDV equals dv.MaDV
                                        select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.IDNhom }).ToList();
                    if (_lngaygiuong.Count > 0)
                    {
                        foreach (var item in _lngaygiuong)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 2;
                            moi.TenNhom = "2. Ngày giường";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = (_hangbv == 4 || Bien.MaBV == "30280" || Bien.MaBV == "30303") ? "2.3 Ngày giường lưu:" : (_Benhnhan.NoiTru == 1 ? "2.2. Ngày giường điều trị nội trú:" : "2.1 Ngày giường lưu");
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = Math.Round(item.vp.DonGia * item.vp.SoLuong, Bien.LamTronSo, MidpointRounding.AwayFromZero); //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = Math.Round(item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeTT / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            moi.IsTrongBH = item.vp.TrongBH == 1;
                            _lkq.Add(moi);
                        }
                    }
                    //

                    //Xét nghiệm
                    var _lxetnghiem = (from vp in _ldvbn
                                       join dv in dichvu.Where(p => p.IDNhom == 1) on vp.MaDV equals dv.MaDV
                                       select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.STTTNhom }).ToList();
                    if (_lxetnghiem.Count > 0)
                    {
                        foreach (var item in _lxetnghiem)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 3;
                            moi.TenNhom = "3. Xét nghiệm";
                            moi.STTTieuN = item.STTTNhom != null ? Convert.ToInt32(item.STTTNhom) : 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            moi.IsTrongBH = item.vp.TrongBH == 1;
                            _lkq.Add(moi);
                        }
                    }
                    //
                    //CĐHA
                    var _lcdha = (from vp in _ldvbn
                                  join dv in dichvu.Where(p => p.IDNhom == 2) on vp.MaDV equals dv.MaDV
                                  select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (_lcdha.Count > 0)
                    {
                        foreach (var item in _lcdha)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 4;
                            moi.TenNhom = "4. Chẩn đoán hình ảnh";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            moi.IsTrongBH = item.vp.TrongBH == 1;
                            _lkq.Add(moi);
                        }
                    }

                    //
                    //thăm dò chức năng
                    var _ltdcn = (from vp in _ldvbn
                                  join dv in dichvu.Where(p => p.IDNhom == 3) on vp.MaDV equals dv.MaDV
                                  select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (_ltdcn.Count > 0)
                    {
                        foreach (var item in _ltdcn)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 6;
                            moi.TenNhom = "5. Thăm dò chức năng";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            moi.IsTrongBH = item.vp.TrongBH == 1;
                            _lkq.Add(moi);
                        }
                    }
                    //
                    //thủ thuật, phẫu thuật
                    var _lttpt = (from vp in _ldvbn
                                  join dv in dichvu.Where(p => p.IDNhom == 8) on vp.MaDV equals dv.MaDV
                                  select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (_lttpt.Count > 0)
                    {
                        foreach (var item in _lttpt)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 7;
                            moi.TenNhom = "6. Thủ thuật, phẫu thuật";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = Math.Round(item.vp.DonGia * item.vp.SoLuong, Bien.LamTronSo, MidpointRounding.AwayFromZero); //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = Math.Round(item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeTT / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            moi.IsTrongBH = item.vp.TrongBH == 1;
                            _lkq.Add(moi);
                        }
                    }
                    //
                    //máu
                    var _lmau = (from vp in _ldvbn
                                 join dv in dichvu.Where(p => p.IDNhom == 7) on vp.MaDV equals dv.MaDV
                                 select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (_lmau.Count > 0)
                    {
                        foreach (var item in _lmau)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 8;
                            moi.TenNhom = "7. Máu, chế phẩm máu, vận chuyển máu";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            moi.IsTrongBH = item.vp.TrongBH == 1;
                            _lkq.Add(moi);
                        }
                    }
                    //

                    bool bnDieuTri = false;
                    if (Bien.MaBV == "20001" && (_Benhnhan.NoiTru == 1 || (_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == true)))
                        bnDieuTri = true;
                    //Thuốc, dịch truyền
                    var _lThuoc = (from vp in _ldvbn
                                   join dv in dichvu.Where(p => p.IDNhom == 5 || p.IDNhom == 6 || p.IDNhom == 4) on vp.MaDV equals dv.MaDV
                                   select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.HamLuong, dv.TenRG }).ToList();
                    if (_lThuoc.Count > 0)
                    {
                        foreach (var item in _lThuoc)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 9;
                            moi.TenNhom = "8. Thuốc, dịch truyền";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            if (bnDieuTri)
                                moi.TenDV = item.TenRG;
                            else
                                moi.TenDV = (item.TenDV == null ? "" : item.TenDV) + (Bien.MaBV == "27001" ? (item.HamLuong == null ? "" : (" (" + item.HamLuong + ")")) : "");
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.MienCT == 1 ? 0 : Math.Round(item.vp.DonGia * item.vp.SoLuong, Bien.LamTronSo, MidpointRounding.AwayFromZero); //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.MienCT == 1 ? 0 : Math.Round(item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.MienCT == 1 ? 0 : item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                //moi.TienNgBH = item.vp.ThanhTien;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                moi.TyLeTTDV = item.vp.TyLeTT;
                            }
                            moi.IsTrongBH = item.vp.TrongBH == 1;
                            _lkq.Add(moi);
                        }
                    }
                    //
                    //Vật tư y tế

                    var _lvtyt = (from vp in _ldvbn
                                  join dv in dichvu.Where(p => p.IDNhom == 10 || p.IDNhom == 11) on vp.MaDV equals dv.MaDV
                                  select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.MaDV, dv.GiaBHGioiHanTT }).ToList();
                    if (_lvtyt.Count > 0)
                    {
                        foreach (var item in _lvtyt)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 10;
                            moi.TenNhom = "9. Vật tư y tế";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.MienCT == 1 ? 0 : item.vp.DonGia * item.vp.SoLuong;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;

                                if (Bien.MaBV == "27022" && item.GiaBHGioiHanTT > 0 && item.GiaBHGioiHanTT == item.vp.DonGia)
                                {
                                    var qdtct = (from dt in _dataContext.DThuocs.Where(p => p.MaBNhan == _mabn)
                                                 join dtct in _dataContext.DThuoccts
                                                 on dt.IDDon equals dtct.IDDon
                                                 where (dtct.MaDV == item.MaDV && dtct.TrongBH == item.vp.TrongBH && dtct.TyLeTT == item.vp.TyLeTT)
                                                 select dtct).FirstOrDefault();
                                    if (qdtct != null && qdtct.DonGia > item.GiaBHGioiHanTT)
                                    {
                                        moi.DonGiaBV = qdtct.DonGia;
                                        moi.ThanhTienBV = item.vp.ThanhTien;
                                    }
                                }
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.MienCT == 1 ? 0 : item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            moi.IsTrongBH = item.vp.TrongBH == 1;
                            _lkq.Add(moi);
                        }
                    }
                    //

                    // gói vật tư
                    var _ldvbngoi = (from vp in _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn)
                                     join vpct in _dataContext.VienPhicts.Where(p => _idper1 == 0 ? true : p.IDPerson == _idper1).Where(p => p.TrongBH != 2).Where(p => p.ThanhToan == 0).Where(p => p.AttachIDDonct != null && p.AttachIDDonct > 0).Where(p => p.NgayYLenh <= _ngayTachThe) on vp.idVPhi equals vpct.idVPhi
                                     group new { vp, vpct } by new { vp.MaBNhan, vp.NgayTT, vpct.MaDV, vpct.TBNTT, vpct.TBNCTT, vpct.TrongBH, vpct.DonVi, vpct.DonGia, vpct.TyLeTT, vpct.TyLeBHTT, vpct.AttachIDDonct, vpct.IDPerson, vpct.MienCT } into kq
                                     select new
                                     {
                                         kq.Key.MaBNhan,
                                         kq.Key.NgayTT,
                                         kq.Key.MaDV,
                                         kq.Key.TrongBH,
                                         kq.Key.DonVi,
                                         kq.Key.DonGia,
                                         kq.Key.TyLeTT,
                                         kq.Key.TyLeBHTT,
                                         kq.Key.AttachIDDonct,
                                         kq.Key.IDPerson,
                                         kq.Key.MienCT,
                                         SoLuong = kq.Sum(p => p.vpct.SoLuong),
                                         ThanhTien = kq.Sum(p => p.vpct.ThanhTien),
                                         TBNCTT = kq.Sum(p => p.vpct.TBNCTT),
                                         TienBH = kq.Sum(p => p.vpct.TienBH * p.vpct.TyLeBHTT / 100),
                                         TBNTT = kq.Sum(p => p.vpct.TBNTT),
                                     }).ToList();
                    var _lvtytgoi = (from vp in _ldvbngoi.Where(p => p.AttachIDDonct != null && p.AttachIDDonct > 0)
                                     join dv in dichvu.Where(p => p.IDNhom == 10 || p.IDNhom == 11) on vp.MaDV equals dv.MaDV
                                     select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.GiaBHGioiHanTT, dv.TenDV, vp.MaDV, vp.AttachIDDonct, vp.ThanhTien }).ToList();
                    if (_lvtytgoi.Count > 0)
                    {
                        var dthuoc = (from dt in _dataContext.DThuocs.Where(p => p.MaBNhan == _mabn)
                                      join dtct in _dataContext.DThuoccts on dt.IDDon equals dtct.IDDon
                                      select new { dtct.IDDonct, dtct.MaDV, dtct.TrongBH, dtct.DonGia, dtct.TyLeTT }).ToList();
                        var _lAttachIDDonct = _lvtytgoi.Select(p => p.AttachIDDonct).Distinct().ToList();
                        int sttg = 1;
                        foreach (var a in _lAttachIDDonct)
                        {
                            var tendv0 = (from dt in dthuoc.Where(p => p.IDDonct == a)
                                          join dv in dichvu on dt.MaDV equals dv.MaDV
                                          select new { dv.TenDV, dv.MaDV, dt.TrongBH, dt.DonGia, dt.TyLeTT }).ToList();
                            var tendv = (from dt in tendv0
                                         select new { dt.TenDV }).FirstOrDefault();
                            //var tendv = (from dt in dthuoc.Where(p => p.IDDonct == a)
                            //             join dv in dichvu on dt.MaDV equals dv.MaDV
                            //             select new { dv.TenDV, dv.MaDV, dv.DonGia }).FirstOrDefault();
                            if (tendv != null)
                            {
                                string tengoi = "10." + sttg.ToString() + " Gói vật tư y tế " + sttg.ToString() + " (" + tendv.TenDV.ToString() + ")";
                                foreach (var item in _lvtytgoi.Where(p => p.AttachIDDonct == a).ToList())
                                {
                                    C_BKe_New moi = new C_BKe_New();
                                    moi.STTNhom = 11;
                                    moi.TenNhom = "10. Gói vật tư y tế";

                                    moi.STTTieuN = sttg;
                                    moi.TenTieuNhom = tengoi;
                                    moi.TenDV = item.TenDV;
                                    moi.SoLuong = item.vp.SoLuong;
                                    moi.DonVi = item.vp.DonVi;
                                    moi.Mien = item.vp.MienCT;
                                    if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                                    {
                                        moi.DonGiaBV = item.vp.DonGia;
                                        moi.DonGiaBH = item.vp.DonGia;
                                        moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong;
                                        moi.ThanhTienBH = item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;
                                        moi.TienBH = item.vp.TienBH;
                                        moi.TienBN = item.vp.TBNCTT;
                                        moi.TienNgBH = item.vp.TBNTT;
                                        if (DungChung.Bien.MaBV == "24272")
                                            moi.TyLeTTBH = item.vp.TyLeBHTT;
                                        else
                                            moi.TyLeTTBH = 100;

                                        if (Bien.MaBV == "27022" && item.GiaBHGioiHanTT > 0 && item.GiaBHGioiHanTT == item.vp.DonGia)
                                        {
                                            var qdtct = (from dtct in tendv0
                                                         where (dtct.MaDV == item.MaDV.Value && dtct.TrongBH == item.vp.TrongBH && dtct.TyLeTT == item.vp.TyLeTT)
                                                         select dtct).FirstOrDefault();
                                            if (qdtct != null && qdtct.DonGia > item.GiaBHGioiHanTT)
                                            {
                                                moi.DonGiaBV = qdtct.DonGia;
                                                moi.ThanhTienBV = item.ThanhTien;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        moi.DonGiaBV = item.vp.DonGia;
                                        moi.ThanhTienBV = item.vp.ThanhTien;
                                        moi.TyLeTTBH = 0;
                                        moi.TienBH = item.vp.TienBH;
                                        moi.TienBN = item.vp.TBNCTT;
                                        moi.TienNgBH = item.vp.TBNTT;
                                    }
                                    moi.TyLeTTDV = item.vp.TyLeTT;
                                    moi.IsTrongBH = item.vp.TrongBH == 1;
                                    _lkq.Add(moi);
                                }
                                sttg++;
                            }
                        }
                    }
                    //thuốc được kê là dịch vụ đính kèm thì lên vào nhóm thuốc
                    var _thuocgoi = (from vp in _ldvbngoi.Where(p => p.AttachIDDonct != null && p.AttachIDDonct > 0)
                                     join dv in dichvu.Where(p => p.IDNhom == 5 || p.IDNhom == 6 || p.IDNhom == 4) on vp.MaDV equals dv.MaDV
                                     select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.TenRG }).ToList();
                    if (_thuocgoi.Count > 0)
                    {
                        foreach (var item in _thuocgoi)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 9;
                            moi.TenNhom = "8. Thuốc, dịch truyền";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            if (bnDieuTri)
                                moi.TenDV = item.TenRG;
                            else
                                moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1)
                            {
                                moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                moi.DonGiaBH = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia * item.vp.SoLuong;
                                moi.ThanhTienBH = item.vp.MienCT == 1 ? 0 : item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.MienCT == 1 ? 0 : item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            moi.IsTrongBH = item.vp.TrongBH == 1;
                            _lkq.Add(moi);
                        }
                    }
                    //
                    //vận chuyển
                    var _lvanchuyen = (from vp in _ldvbn
                                       join dv in dichvu.Where(p => p.IDNhom == 12) on vp.MaDV equals dv.MaDV
                                       select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (_lvanchuyen.Count > 0)
                    {
                        foreach (var item in _lvanchuyen)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 12;
                            moi.TenNhom = "11. Vận chuyển người bệnh";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            moi.IsTrongBH = item.vp.TrongBH == 1;
                            _lkq.Add(moi);
                        }
                    }
                    var _lhoachat = (from vp in _ldvbn
                                     join dv in dichvu.Where(p => p.IDNhom > 17) on vp.MaDV equals dv.MaDV
                                     select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (_lhoachat.Count > 0)
                    {
                        foreach (var item in _lhoachat)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 13;
                            moi.TenNhom = "12. Khác";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong;
                                moi.ThanhTienBH = item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            moi.IsTrongBH = item.vp.TrongBH == 1;
                            _lkq.Add(moi);
                        }
                    }
                    if (_lkq.Count > 0)
                    {
                        for (int j = 0; j <= 1; j++)
                        {
                            BaoCao.Rep_Bke_New_2018TK rep = new BaoCao.Rep_Bke_New_2018TK(_idper2, _mabn);

                            if (SoPhim > 0)
                            {
                                if (Bien.MaBV == "20001")
                                    rep.SOPHIM.Value = _Benhnhan.NoiTru == 1 ? "" : "(.... phim .... Xquang/CT/MRI)";
                                else if (Bien.MaBV == "24012")
                                {
                                    rep.SOPHIM.Value = "(Tôi đã nhận .... phim Xquang/CT/MRI)";
                                }
                                else
                                    rep.SOPHIM.Value = "(Tôi đã nhận " + SoPhim.ToString() + " phim Xquang/CT/MRI)";
                            }
                            else
                            {
                                if (Bien.MaBV == "24009" && _Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false)
                                    rep.SOPHIM.Value = "(Tôi đã nhận .... phim .... Xquang/CT/MRI)";
                            }

                            #region TT hành chính
                            rep.TENCQCQ.Value = Bien.TenCQCQ;
                            rep.CQ.Value = Bien.TenCQ;
                            rep.MABN.Value = "Mã số người bệnh: " + _mabn.ToString();
                            rep.MAKHOA.Value = "Mã khoa:";
                            if (_Benhnhan != null)
                            {
                                _khuvuc = _Benhnhan.KhuVuc;
                                _noitru = _Benhnhan.NoiTru ?? 0;
                                if (_Benhnhan.DTuong == "BHYT")
                                {
                                    if (_Benhnhan.CapCuu == 1)
                                    {
                                        malydo = 2;
                                    }
                                    else
                                    {
                                        if (_Benhnhan.Tuyen == 1)
                                        {
                                            malydo = checkThongTuyen(_Benhnhan.MaKCB, _Benhnhan.MaCS);
                                        }
                                        else
                                        {
                                            malydo = 3;
                                        }
                                    }
                                }
                                string ttt = (_Benhnhan.NoiTru == 1) ? "3" : ((_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "1" : "2");
                                string mauso = _hangbv == 4 ? "01/TYT" : ((_Benhnhan.NoiTru == 1) ? "01/BV" : ((_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "01/KBCB" : "01/BV"));
                                rep.MAUSO.Value = Bien.MaBV == "20001" ? "Mẫu số: 01/KBCB" : "Mẫu số: " + mauso;
                                rep.SOKHAMBENH.Value = "Số khám bệnh: " + _mabn.ToString();
                                rep.TTTT.Value = ttt;
                                capcuu = int.Parse(_Benhnhan.CapCuu.ToString());
                                rep.TENBN.Value = _Benhnhan.TenBNhan.ToUpper();
                                rep.txtketoanvp.Text = _hangbv < 4 ? Bien.KeToanVP : "";
                                rep.txtgiamdinh.Text = _hangbv < 4 ? (_noitru == 0 ? Bien.GiamDinhBH : Bien.GiamDinhBH2) : "";
                                rep.NGAYSINH.Value = _Benhnhan.NgaySinh + "/" + _Benhnhan.ThangSinh + "/" + _Benhnhan.NamSinh;
                                rep.GTINH.Value = _Benhnhan.GTinh == 1 ? "Nam" : "Nữ";
                                rep.DCHI.Value = _Benhnhan.DChi;
                                rep.KHUVUC.Value = _Benhnhan.KhuVuc;
                                if (!string.IsNullOrEmpty(_Benhnhan.SThe.ToString()) && _Benhnhan.SThe.Length >= 15)
                                {
                                    rep.THE1.Value = _Benhnhan.SThe.Substring(0, 2);
                                    rep.THE2.Value = _Benhnhan.SThe.Substring(2, 1);
                                    rep.THE3.Value = _Benhnhan.SThe.Substring(3, 2);
                                    rep.THE4.Value = _Benhnhan.SThe.Substring(5);
                                    rep.GHANTHE.Value = "Giá trị từ " + _Benhnhan.HanBHTu.Value.ToShortDateString() + " đến " + _Benhnhan.HanBHDen.Value.ToShortDateString();
                                }

                                if (!string.IsNullOrEmpty(_Benhnhan.MaCS))
                                {
                                    var Mabvdk = _bv.Where(p => p.MaBV == _Benhnhan.MaCS).Select(p => new { p.TenBV, p.MaBV }).FirstOrDefault();
                                    if (Mabvdk != null)
                                    {
                                        rep.TENKCBBD.Value = Mabvdk.TenBV.ToString();
                                        rep.MAKCBBD.Value = Mabvdk.MaBV.ToString();
                                    }
                                }
                                if (DungChung.Bien.MaBV == "27001")
                                {
                                    if (_Benhnhan != null && _Benhnhan.NNhap != null)
                                        rep.NNHAP.Value = _Benhnhan.NNhap.Value.Hour + " giờ " + _Benhnhan.NNhap.Value.Minute + " phút, ngày " + _Benhnhan.NNhap.Value.ToShortDateString();
                                }
                                else
                                {
                                    if (_kb != null && _kb.NgayKham != null)
                                        rep.NNHAP.Value = _kb.NgayKham.Value.Hour + " giờ " + _kb.NgayKham.Value.Minute + " phút, ngày " + _kb.NgayKham.Value.ToShortDateString();
                                }
                                if (_Benhnhan.Tuyen != null)
                                    dungtuyen = int.Parse(_Benhnhan.Tuyen.ToString());
                                switch (malydo)
                                {
                                    case 1:
                                        rep.DUNGTUYEN.Value = "X";
                                        break;

                                    case 2:
                                        rep.CAPCUU.Value = "X";
                                        break;

                                    case 3:
                                        rep.TRAITUYEN.Value = "X";
                                        break;

                                    case 4:
                                        rep.THONGTUYEN.Value = "X";
                                        break;
                                }
                                if (_Benhnhan.MucHuong != null && _Benhnhan.MucHuong.ToString() != "")
                                    _muc = _Benhnhan.MucHuong.ToString();
                                if (_Benhnhan.NgayHM != null && _Benhnhan.NgayHM.Value.Year > 1)
                                {
                                    rep.DU5NAM.Value = _Benhnhan.NgayHM.Value.ToShortDateString();
                                }
                                else
                                {
                                    rep.DU5NAM.Value = "    /    /     ";
                                }
                                rep.DU1NAM.Value = "    /    /     ";
                            }


                            if (_lvv != null)
                            {
                                rep.NGAYVV.Value = _lvv.NgayVao.Value.Hour + " giờ " + _lvv.NgayVao.Value.Minute + " phút, ngày " + _lvv.NgayVao.Value.ToShortDateString();
                            }
                            if (_lrv != null)
                            {
                                if (ktra2the.Count() == 2 && _lvp.NgayTachCP != null)
                                    rep.CPKCB.Value = "Chi phí KCB tính từ ngày " + _Benhnhan.NNhap.Value.ToShortDateString() + " đến ngày " + _lvp.NgayTachCP.Value.ToShortDateString();
                                else
                                    rep.CPKCB.Value = "Chi phí KCB tính từ ngày " + _Benhnhan.NNhap.Value.ToShortDateString() + " đến ngày " + _lrv.NgayRa.Value.ToShortDateString();
                                rep.NGAYRV.Value = _lrv.NgayRa.Value.Hour + " giờ " + _lrv.NgayRa.Value.Minute + " phút, ngày " + _lrv.NgayRa.Value.ToShortDateString();
                                rep.SONGDTRI.Value = _lrv.SoNgaydt;
                                rep.TTRAVIEN.Value = (_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "1" : ((_lrv.KetQua == Bien._ketQuaDT[0] || _lrv.KetQua == Bien._ketQuaDT[1]) ? "1" : "2");
                                string _mabvchuyenden = "", _mabvchuyendi = "";
                                if (_lrv.MaBVC != null)
                                {
                                    _mabvchuyendi = _lrv.MaBVC;
                                    var bv = _bv.Where(p => p.MaBV == (_mabvchuyendi)).ToList();
                                    if (bv.Count > 0)
                                    {
                                        rep.NOICHUYENDI.Value = bv.First().TenBV;
                                    }
                                }
                                if (!string.IsNullOrEmpty(_Benhnhan.MaBV))
                                {
                                    _mabvchuyenden = _Benhnhan.MaBV;
                                    var bv = _bv.Where(p => p.MaBV == (_mabvchuyenden)).ToList();
                                    if (bv.Count > 0)
                                    {
                                        rep.NOICDEN.Value = bv.First().TenBV;
                                    }
                                }

                                if (_lrv.MaKP != null)
                                {
                                    int makp = int.Parse(_lrv.MaKP.ToString());
                                    var tenkp = _dataContext.KPhongs.Where(p => p.MaKP == makp).Select(p => new { p.TenKP, p.MaQD }).FirstOrDefault();
                                    if (tenkp != null)
                                    {
                                        rep.KHOA.Value = "Khoa: " + tenkp.TenKP;
                                        rep.MAKHOA.Value = "Mã khoa: " + tenkp.MaQD;
                                    }
                                    if (Bien.MaBV == "20001")
                                    {
                                        if (string.IsNullOrEmpty(_lrv.MaYHCT))
                                        {
                                            if (_lrv.MaICD.Contains(";"))
                                            {
                                                string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                                                rep.CHANDOANMA.Value = arricd[0];
                                                string icdkhac = "";
                                                if (arricd.Count() > 1)
                                                {
                                                    for (int i = 1; i < arricd.Count(); i++)
                                                    {
                                                        icdkhac += arricd[i] + ";";
                                                    }
                                                }
                                                rep.BENHPHUMA.Value = DungChung.Ham.FreshString(icdkhac);
                                            }
                                            else
                                            {
                                                //rep.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);
                                                rep.CHANDOANMA.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                                            }

                                            if (_lrv.ChanDoan.Contains(";"))
                                            {
                                                string cdkhac = "", cdyhctkhac = "";
                                                string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                                                if (arrchandoan.Count() > 1)
                                                {
                                                    for (int i = 1; i < arrchandoan.Count(); i++)
                                                    {
                                                        cdkhac += arrchandoan[i] + ";";
                                                    }
                                                }

                                                string[] arrcdyhct = DungChung.Ham.GetMaYHCT(DungChung.Ham.FreshString(_lrv.MaICD), _licd10)[1].Split(';');
                                                if (arrcdyhct.Count() > 1)
                                                {
                                                    for (int i = 1; i < arrcdyhct.Count(); i++)
                                                    {
                                                        cdyhctkhac += arrcdyhct[i] + ";";
                                                    }
                                                }
                                                rep.CHANDOAN.Value = DungChung.Ham.FreshString(arrcdyhct[0]) + " [" + DungChung.Ham.FreshString(arrchandoan[0]) + "]";
                                                rep.BENHPHU.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(cdkhac), DungChung.Ham.FreshString(cdyhctkhac));
                                            }
                                            else
                                            {
                                                rep.CHANDOAN.Value = DungChung.Ham.GetMaYHCT(DungChung.Ham.FreshString(_lrv.MaICD), _licd10)[1] + " [" + DungChung.Ham.FreshString(_lrv.ChanDoan) + "]";
                                            }
                                        }
                                        else
                                        {
                                            if (_lrv.MaICD.Contains(";"))
                                            {
                                                string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                                                rep.CHANDOANMA.Value = arricd[0];
                                                string icdkhac = "";
                                                if (arricd.Count() > 1)
                                                {
                                                    for (int i = 1; i < arricd.Count(); i++)
                                                    {
                                                        icdkhac += arricd[i] + ";";
                                                    }
                                                }
                                                rep.BENHPHUMA.Value = DungChung.Ham.FreshString(icdkhac);
                                            }
                                            else
                                            {
                                                //rep.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);
                                                rep.CHANDOANMA.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                                            }

                                            if (_lrv.ChanDoan.Contains(";"))
                                            {
                                                string cdkhac = "", cdyhctkhac = "";
                                                string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                                                //rep.CHANDOAN.Value = arrchandoan[0];
                                                if (arrchandoan.Count() > 1)
                                                {
                                                    for (int i = 1; i < arrchandoan.Count(); i++)
                                                    {
                                                        cdkhac += arrchandoan[i] + ";";
                                                    }
                                                }

                                                string[] arrcdyhct = DungChung.Ham.FreshString(_lrv.ChanDoanYHCT).Split(';');
                                                //rep.CHANDOAN.Value = arrchandoan[0];
                                                if (arrcdyhct.Count() > 1)
                                                {
                                                    for (int i = 1; i < arrcdyhct.Count(); i++)
                                                    {
                                                        cdyhctkhac += arrcdyhct[i] + ";";
                                                    }
                                                }
                                                rep.CHANDOAN.Value = DungChung.Ham.FreshString(arrcdyhct[0]) + " [" + DungChung.Ham.FreshString(arrchandoan[0]) + "]";
                                                rep.BENHPHU.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(cdkhac), DungChung.Ham.FreshString(cdyhctkhac));
                                            }
                                            else
                                            {
                                                rep.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoanYHCT) + " [" + DungChung.Ham.FreshString(_lrv.ChanDoan) + "]";
                                            }
                                        }
                                    }
                                    else
                                    {
                                        if (_lrv.MaICD.Contains(";"))
                                        {
                                            string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                                            rep.CHANDOANMA.Value = arricd[0];
                                            string icdkhac = "";
                                            if (arricd.Count() > 1)
                                            {
                                                for (int i = 1; i < arricd.Count(); i++)
                                                {
                                                    icdkhac += arricd[i] + ";";
                                                }
                                            }
                                            rep.BENHPHUMA.Value = DungChung.Ham.FreshString(icdkhac);
                                        }
                                        else
                                        {
                                            //rep.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);
                                            rep.CHANDOANMA.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                                        }
                                        if (_lrv.ChanDoan.Contains(";"))
                                        {
                                            string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                                            rep.CHANDOAN.Value = arrchandoan[0];
                                            string cdkhac = "";
                                            if (arrchandoan.Count() > 1)
                                            {
                                                for (int i = 1; i < arrchandoan.Count(); i++)
                                                {
                                                    cdkhac += arrchandoan[i] + ";";
                                                }
                                            }
                                            rep.BENHPHU.Value = DungChung.Ham.FreshString(cdkhac);
                                        }
                                        else
                                            rep.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);
                                    }
                                }
                            }

                            if (_Benhnhan.KhuVuc != null)
                                kvuc = _Benhnhan.KhuVuc;
                            rep.MUCHUONG.Value = TinhMucHuong(dungtuyen, _muc, kvuc, tongcp1, _hangbv, _Benhnhan.NoiTru ?? 0, _Benhnhan.SThe, _Benhnhan.MaCS) + "%";

                            if (_lvp != null)
                            {
                                _NgayTT = _lvp.NgayTT.Value;
                                rep.NGAYKY.Value = DungChung.Ham.NgaySangChu(_lvp.NgayTT.Value, Bien.FormatDate);
                                rep.txtNgayKyGD.Text = Bien.MaBV == "20001" ? "...., ngày ... tháng ... năm ..." : DungChung.Ham.NgaySangChu(_lvp.NgayTT.Value, Bien.FormatDate);
                            }

                            #endregion
                            var _lkq34019 = _lkq.Where(o => o.IsTrongBH == (j == 0)).ToList();
                            if (_lkq34019.Where(p => p.Mien == 0).Count() > 0)
                            {
                                double tongcp = 0, tienBh = 0, tienbn = 0, tienbnngoai = 0;
                                tienBh = _ldvbn1.Sum(p => p.TienBH);
                                tienbn = _ldvbn1.Sum(p => p.TBNCTT);
                                tienbnngoai = _ldvbn1.Sum(p => p.TBNTT);
                                tongcp = tienBh + tienbn + tienbnngoai;
                                string tieude = (_Benhnhan.NoiTru == 1) ? "Điều trị nội trú" : ((_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "Khám bệnh" : "Điều trị ngoại trú");
                                rep.TIEUDE.Value = "BẢNG KÊ CHI PHÍ " + tieude.ToUpper() + Environment.NewLine + (j == 0 ? " TRONG DANH MỤC BHYT" : " NGOÀI DANH MỤC BHYT");
                                rep.TONGCHIPHI.Value = Math.Round(tongcp, 0).ToString("###,###");
                                rep.TIENCHU.Value = DungChung.Ham.DocTienBangChu(Math.Round(tongcp, 0), " đồng)");
                                rep.TIENBH.Value = tienBh > 0 ? (Math.Round(tienBh, 0).ToString("###,###") + " đồng") : "0 đồng";
                                rep.TIENBN.Value = tienbn > 0 ? (Math.Round(tienbn, 0).ToString("###,###") + " đồng") : "0 đồng";
                                rep.TIENBNDV.Value = tienbnngoai > 0 ? (Math.Round(tienbnngoai, 0).ToString("###,###") + " đồng") : "0 đồng";
                                rep.DataSource = _lkq34019.Where(p => p.Mien == 0).OrderBy(p => p.STTNhom).ThenBy(p => p.STTTieuN).ThenBy(p => p.TenDV).ToList();
                                rep.Bindingdata();
                                rep.CreateDocument();
                                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                frm.ShowDialog();
                            }
                            #endregion
                        }
                        if (_lkq.Where(p => p.Mien == 1).ToList().Count() > 0)
                        {
                            BaoCao.Rep_Bke_New_2018TK_34019 rep1 = new BaoCao.Rep_Bke_New_2018TK_34019(_idper2, _mabn);
                            List<C_BKe_New> _lthuocmien = new List<C_BKe_New>();
                            _lthuocmien = _lkq.Where(p => p.Mien == 1).ToList();
                            rep1.TIEUDE.Value = "BẢNG KÊ THUỐC THUỘC NGUỒN CHƯƠNG TRÌNH MỤC TIÊU";
                            foreach (var item in _lthuocmien)
                            {
                                if (item.STTNhom == 9)
                                    item.TenNhom = "Thuốc trong danh mục";
                                if (item.STTNhom == 10)
                                    item.TenNhom = "Vật tư y tế";

                                item.DonGiaBV = 0;
                                item.DonGiaBH = 0;
                                item.ThanhTienBV = 0;
                                item.ThanhTienBH = 0;
                                item.TienBH = 0;
                                item.TienBN = 0;
                                item.TienNgBH = 0;
                                item.TyLeTTBH = 0;
                                item.TyLeTTDV = 0;
                            }
                            #region TT hành chính
                            rep1.TENCQCQ.Value = Bien.TenCQCQ;
                            rep1.CQ.Value = Bien.TenCQ;
                            rep1.MABN.Value = "Mã số người bệnh: " + _mabn.ToString();
                            rep1.CodeMaBN.Text = _mabn.ToString();
                            rep1.TONGCHIPHI.Value = "0";
                            rep1.TIENCHU.Value = "Không đồng";
                            if (_Benhnhan != null)
                            {
                                _khuvuc = _Benhnhan.KhuVuc;
                                _noitru = _Benhnhan.NoiTru ?? 0;
                                if (_Benhnhan.DTuong == "BHYT")
                                {
                                    if (_Benhnhan.CapCuu == 1)
                                    {
                                        malydo = 2;
                                    }
                                    else
                                    {
                                        if (_Benhnhan.Tuyen == 1)
                                        {
                                            malydo = checkThongTuyen(_Benhnhan.MaKCB, _Benhnhan.MaCS);
                                        }
                                        else
                                        {
                                            malydo = 3;
                                        }
                                    }
                                }
                                string tieude = (_Benhnhan.NoiTru == 1) ? "Điều trị nội trú" : ((_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "Khám bệnh" : "Điều trị ngoại trú");
                                string ttt = (_Benhnhan.NoiTru == 1) ? "3" : ((_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "1" : "2");
                                string mauso = _hangbv == 4 ? "01/TYT" : ((_Benhnhan.NoiTru == 1) ? "01/BV" : ((_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "01/KBCB" : "01/BV"));
                                rep1.MAUSO.Value = "Mẫu số: " + mauso;
                                rep1.SOKHAMBENH.Value = "Số khám bệnh: " + _mabn.ToString();
                                rep1.TTTT.Value = ttt;
                                capcuu = int.Parse(_Benhnhan.CapCuu.ToString());
                                rep1.TENBN.Value = _Benhnhan.TenBNhan.ToUpper();
                                rep1.txtketoanvp.Text = _hangbv < 4 ? Bien.KeToanVP : "";
                                rep1.txtgiamdinh.Text = _hangbv < 4 ? (_noitru == 0 ? Bien.GiamDinhBH : Bien.GiamDinhBH2) : "";
                                rep1.NGAYSINH.Value = _Benhnhan.NgaySinh + "/" + _Benhnhan.ThangSinh + "/" + _Benhnhan.NamSinh;
                                rep1.GTINH.Value = _Benhnhan.GTinh == 1 ? "Nam" : "Nữ";
                                rep1.DCHI.Value = _Benhnhan.DChi;
                                rep1.KHUVUC.Value = _Benhnhan.KhuVuc;
                                if (!string.IsNullOrEmpty(_Benhnhan.SThe.ToString()) && _Benhnhan.SThe.Length >= 15)
                                {
                                    rep1.THE1.Value = _Benhnhan.SThe.Substring(0, 2);
                                    rep1.THE2.Value = _Benhnhan.SThe.Substring(2, 1);
                                    rep1.THE3.Value = _Benhnhan.SThe.Substring(3, 2);
                                    rep1.THE4.Value = _Benhnhan.SThe.Substring(5);
                                }
                                rep1.GHANTHE.Value = "Giá trị từ " + _Benhnhan.HanBHTu.Value.ToShortDateString() + " đến " + _Benhnhan.HanBHDen.Value.ToShortDateString();
                                if (!string.IsNullOrEmpty(_Benhnhan.MaCS))
                                {
                                    var Mabvdk = _bv.Where(p => p.MaBV == _Benhnhan.MaCS).Select(p => new { p.TenBV, p.MaBV }).FirstOrDefault();
                                    if (Mabvdk != null)
                                    {
                                        rep1.TENKCBBD.Value = Mabvdk.TenBV.ToString();
                                        rep1.MAKCBBD.Value = Mabvdk.MaBV.ToString();
                                    }
                                }
                                if (DungChung.Bien.MaBV == "27001")
                                {
                                    if (_Benhnhan != null && _Benhnhan.NNhap != null)
                                        rep1.NNHAP.Value = _Benhnhan.NNhap.Value.Hour + " giờ " + _Benhnhan.NNhap.Value.Minute + " phút, ngày " + _Benhnhan.NNhap.Value.ToShortDateString();
                                }
                                else
                                {
                                    if (_kb != null && _kb.NgayKham != null)
                                        rep1.NNHAP.Value = _kb.NgayKham.Value.Hour + " giờ " + _kb.NgayKham.Value.Minute + " phút, ngày " + _kb.NgayKham.Value.ToShortDateString();
                                }
                                if (_Benhnhan.Tuyen != null)
                                    dungtuyen = int.Parse(_Benhnhan.Tuyen.ToString());
                                switch (malydo)
                                {
                                    case 1:
                                        rep1.DUNGTUYEN.Value = "X";
                                        break;

                                    case 2:
                                        rep1.CAPCUU.Value = "X";
                                        break;

                                    case 3:
                                        rep1.TRAITUYEN.Value = "X";
                                        break;

                                    case 4:
                                        rep1.THONGTUYEN.Value = "X";
                                        break;
                                }
                                if (_Benhnhan.MucHuong != null && _Benhnhan.MucHuong.ToString() != "")
                                    _muc = _Benhnhan.MucHuong.ToString();
                                if (_Benhnhan.NgayHM.Value.Year > 1)
                                {
                                    rep1.DU5NAM.Value = _Benhnhan.NgayHM.Value.ToShortDateString();
                                }
                                else
                                {
                                    rep1.DU5NAM.Value = "    /    /     ";
                                }
                                rep1.DU1NAM.Value = "    /    /     ";
                            }


                            if (_lvv != null)
                            {
                                rep1.NGAYVV.Value = _lvv.NgayVao.Value.Hour + " giờ " + _lvv.NgayVao.Value.Minute + " phút, ngày " + _lvv.NgayVao.Value.ToShortDateString();
                            }
                            if (_lrv != null)
                            {
                                if (ktra2the.Count() == 2 && _lvp.NgayTachCP != null)
                                    rep1.CPKCB.Value = "Chi phí KCB tính từ ngày " + _Benhnhan.NNhap.Value.ToShortDateString() + " đến ngày " + _lvp.NgayTachCP.Value.ToShortDateString();
                                else
                                    rep1.CPKCB.Value = "Chi phí KCB tính từ ngày " + _Benhnhan.NNhap.Value.ToShortDateString() + " đến ngày " + _lrv.NgayRa.Value.ToShortDateString();
                                rep1.NGAYRV.Value = _lrv.NgayRa.Value.Hour + " giờ " + _lrv.NgayRa.Value.Minute + " phút, ngày " + _lrv.NgayRa.Value.ToShortDateString();
                                rep1.SONGDTRI.Value = _lrv.SoNgaydt;
                                rep1.TTRAVIEN.Value = (_lrv.Status == 1 && _Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "2" : (_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "1" : ((_lrv.KetQua == Bien._ketQuaDT[0] || _lrv.KetQua == Bien._ketQuaDT[1]) ? "1" : "2");
                                string _mabvchuyenden = "", _mabvchuyendi = "";
                                if (_lrv.MaBVC != null)
                                {
                                    _mabvchuyendi = _lrv.MaBVC;
                                    var bv = _bv.Where(p => p.MaBV == (_mabvchuyendi)).ToList();
                                    if (bv.Count > 0)
                                    {
                                        rep1.NOICHUYENDI.Value = bv.First().TenBV;
                                    }
                                }
                                if (!string.IsNullOrEmpty(_Benhnhan.MaBV))
                                {
                                    _mabvchuyenden = _Benhnhan.MaBV;
                                    var bv = _bv.Where(p => p.MaBV == (_mabvchuyenden)).ToList();
                                    if (bv.Count > 0)
                                    {
                                        rep1.NOICDEN.Value = bv.First().TenBV;
                                    }
                                }

                                if (_lrv.MaKP != null)
                                {
                                    int makp = int.Parse(_lrv.MaKP.ToString());
                                    var tenkp = _dataContext.KPhongs.Where(p => p.MaKP == makp).Select(p => new { p.TenKP, p.MaQD }).FirstOrDefault();
                                    if (tenkp != null)
                                    {
                                        rep1.KHOA.Value = tenkp.MaQD + " - " + tenkp.TenKP;
                                    }

                                    if (_lrv.MaICD.Contains(";"))
                                    {
                                        string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                                        rep1.CHANDOANMA.Value = arricd[0];
                                        string icdkhac = "";
                                        if (arricd.Count() > 1)
                                        {
                                            for (int i = 1; i < arricd.Count(); i++)
                                            {
                                                icdkhac += arricd[i] + ";";
                                            }
                                        }
                                        rep1.BENHPHUMA.Value = DungChung.Ham.FreshString(icdkhac);
                                    }
                                    else
                                    {
                                        rep1.CHANDOANMA.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                                    }
                                    if (_lrv.ChanDoan.Contains(";"))
                                    {
                                        string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                                        rep1.CHANDOAN.Value = arrchandoan[0];
                                        string cdkhac = "";
                                        if (arrchandoan.Count() > 1)
                                        {
                                            for (int i = 1; i < arrchandoan.Count(); i++)
                                            {
                                                cdkhac += arrchandoan[i] + ";";
                                            }
                                        }
                                        rep1.BENHPHU.Value = DungChung.Ham.FreshString(cdkhac);
                                    }
                                    else
                                    {
                                        rep1.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);
                                    }
                                    //}
                                }
                            }
                            if (_Benhnhan.KhuVuc != null)
                                kvuc = _Benhnhan.KhuVuc;
                            rep1.MUCHUONG.Value = TinhMucHuong(dungtuyen, _muc, kvuc, tongcp1, _hangbv, _Benhnhan.NoiTru ?? 0, _Benhnhan.SThe, _Benhnhan.MaCS) + "%";
                            #endregion
                            if (_lvp != null)
                            {
                                _NgayTT = _lvp.NgayTT.Value;
                                rep1.NGAYKY.Value = DungChung.Ham.NgaySangChu(_lvp.NgayTT.Value, Bien.FormatDate);
                            }
                            rep1.DataSource = _lthuocmien.OrderBy(p => p.STTNhom).ThenBy(p => p.STTTieuN).ThenBy(p => p.TenDV).ToList();
                            rep1.Bindingdata();
                            rep1.CreateDocument();
                            frm.prcIN.PrintingSystem = rep1.PrintingSystem;
                            frm.ShowDialog();
                        }
                    }
                    #endregion
                }
                else
                {
                    #region In dọc
                    int _idvp = _lvp != null ? _lvp.idVPhi : 0;
                    var ktra2the = _dataContext.VienPhicts.Where(p => p.idVPhi == _idvp).Select(p => p.IDPerson).Distinct().ToList();
                    if (ktra2the.Count() == 2)
                    {
                        _idper1 = ktra2the.First().Value;
                        _idper2 = ktra2the.Last().Value;
                    }

                    #region Load chi tiết
                    var _ldvbn = (from vp in _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn)
                                  join vpct in _dataContext.VienPhicts.Where(p => (Bien.MaBV == "01071" || Bien.MaBV == "01049") ? (p.TrongBH == 1) : (p.TrongBH != 2 && p.TrongBH != 3)).Where(p => p.ThanhToan == 0).Where(p => p.AttachIDDonct == null).Where(o => (!kpNhaThuoc.Contains(o.MaKXuat ?? 0)) || o.MaKXuat == null).Where(p => p.NgayYLenh <= _ngayTachThe) on vp.idVPhi equals vpct.idVPhi
                                  group new { vp, vpct } by new { vp.MaBNhan, vp.NgayTT, vpct.MaDV, vpct.TrongBH, vpct.DonVi, vpct.DonGia, vpct.TyLeTT, vpct.TyLeBHTT, vpct.MienCT } into kq
                                  select new
                                  {
                                      kq.Key.MaBNhan,
                                      kq.Key.NgayTT,
                                      kq.Key.MaDV,
                                      kq.Key.TrongBH,
                                      kq.Key.DonVi,
                                      kq.Key.DonGia,
                                      kq.Key.TyLeTT,
                                      kq.Key.TyLeBHTT,
                                      kq.Key.MienCT,
                                      SoLuong = kq.Sum(p => p.vpct.SoLuong),
                                      ThanhTien = kq.Sum(p => p.vpct.ThanhTien),
                                      TBNCTT = kq.Sum(p => p.vpct.TBNCTT),
                                      TBNTT = kq.Sum(p => p.vpct.TBNTT),
                                      TienBH = kq.Sum(p => p.vpct.TienBH * p.vpct.TyLeBHTT)
                                  }).ToList();
                    double tongcp1 = _ldvbn.Count() > 0 ? _ldvbn.Sum(p => p.ThanhTien) : 0;

                    int GiaCuBH = DungChung.Ham.GiaCu(_mabn, 1);
                    int GiaCuDV = DungChung.Ham.GiaCu(_mabn, 0);
                    List<C_BKe_New> _lkq = new List<C_BKe_New>();
                    List<KPhong> _lkp = _dataContext.KPhongs.ToList();

                    //lấy số phim x-quang
                    var _lcls = (from cls in _dataContext.CLS.Where(p => p.MaBNhan == _mabn)
                                 join cd in _dataContext.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                 select new { cd.MaDV, cd.SoPhim, cd.IDCD }).ToList();
                    var sophim = (from dv in dichvu.Where(p => p.TenRGTN == Bien.st_TieuNhomRG_ChuyenKhoa.X_Quang)
                                  join cls in _lcls.Where(p => p.SoPhim != null) on dv.MaDV equals cls.MaDV
                                  select cls).ToList();
                    int SoPhim = 0;
                    if (sophim.Count > 0)
                        SoPhim = sophim.Sum(p => p.SoPhim) ?? 0;

                    string kvuc = "";
                    if (_Benhnhan.KhuVuc != null)
                        kvuc = _Benhnhan.KhuVuc;
                    //Công khám
                    var _lcongkham = (from vp in _ldvbn
                                      join dv in dichvu.Where(p => p.IDNhom == 13) on vp.MaDV equals dv.MaDV
                                      select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (_lcongkham.Count > 0)
                    {
                        foreach (var item in _lcongkham)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 1;
                            moi.TenNhom = "1. Khám bệnh";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = Math.Round(item.vp.DonGia * item.vp.SoLuong, Bien.LamTronSo, MidpointRounding.AwayFromZero); //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = Math.Round(item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeTT / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            moi.IsTrongBH = item.vp.TrongBH == 1;
                            _lkq.Add(moi);
                        }
                    }
                    //
                    //Ngày giường
                    var _lngaygiuong = (from vp in _ldvbn
                                        join dv in dichvu.Where(p => p.IDNhom == 15 || p.IDNhom == 14) on vp.MaDV equals dv.MaDV
                                        select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.IDNhom }).ToList();
                    if (_lngaygiuong.Count > 0)
                    {
                        foreach (var item in _lngaygiuong)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 2;
                            moi.TenNhom = "2. Ngày giường";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = (_hangbv == 4 || Bien.MaBV == "30280" || Bien.MaBV == "30303") ? "2.3 Ngày giường lưu:" : (_Benhnhan.NoiTru == 1 ? "2.2. Ngày giường điều trị nội trú:" : "2.1 Ngày giường lưu");
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = Math.Round(item.vp.DonGia * item.vp.SoLuong, Bien.LamTronSo, MidpointRounding.AwayFromZero); //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = Math.Round(item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeTT / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            moi.IsTrongBH = item.vp.TrongBH == 1;
                            _lkq.Add(moi);
                        }
                    }
                    //

                    //Xét nghiệm
                    var _lxetnghiem = (from vp in _ldvbn
                                       join dv in dichvu.Where(p => p.IDNhom == 1) on vp.MaDV equals dv.MaDV
                                       select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.STTTNhom }).ToList();
                    if (_lxetnghiem.Count > 0)
                    {
                        foreach (var item in _lxetnghiem)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 3;
                            moi.TenNhom = "3. Xét nghiệm";
                            moi.STTTieuN = item.STTTNhom != null ? Convert.ToInt32(item.STTTNhom) : 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            moi.IsTrongBH = item.vp.TrongBH == 1;
                            _lkq.Add(moi);
                        }
                    }
                    //
                    //CĐHA
                    var _lcdha = (from vp in _ldvbn
                                  join dv in dichvu.Where(p => p.IDNhom == 2) on vp.MaDV equals dv.MaDV
                                  select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (_lcdha.Count > 0)
                    {
                        foreach (var item in _lcdha)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 4;
                            moi.TenNhom = "4. Chẩn đoán hình ảnh";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            moi.IsTrongBH = item.vp.TrongBH == 1;
                            _lkq.Add(moi);
                        }
                    }

                    //
                    //thăm dò chức năng
                    var _ltdcn = (from vp in _ldvbn
                                  join dv in dichvu.Where(p => p.IDNhom == 3) on vp.MaDV equals dv.MaDV
                                  select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (_ltdcn.Count > 0)
                    {
                        foreach (var item in _ltdcn)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 6;
                            moi.TenNhom = "5. Thăm dò chức năng";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            moi.IsTrongBH = item.vp.TrongBH == 1;
                            _lkq.Add(moi);
                        }
                    }
                    //
                    //thủ thuật, phẫu thuật
                    var _lttpt = (from vp in _ldvbn
                                  join dv in dichvu.Where(p => p.IDNhom == 8) on vp.MaDV equals dv.MaDV
                                  select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (_lttpt.Count > 0)
                    {
                        foreach (var item in _lttpt)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 7;
                            moi.TenNhom = "6. Thủ thuật, phẫu thuật";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = Math.Round(item.vp.DonGia * item.vp.SoLuong, Bien.LamTronSo, MidpointRounding.AwayFromZero); //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = Math.Round(item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeTT / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            moi.IsTrongBH = item.vp.TrongBH == 1;
                            _lkq.Add(moi);
                        }
                    }
                    //
                    //máu
                    var _lmau = (from vp in _ldvbn
                                 join dv in dichvu.Where(p => p.IDNhom == 7) on vp.MaDV equals dv.MaDV
                                 select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (_lmau.Count > 0)
                    {
                        foreach (var item in _lmau)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 8;
                            moi.TenNhom = "7. Máu, chế phẩm máu, vận chuyển máu";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            moi.IsTrongBH = item.vp.TrongBH == 1;
                            _lkq.Add(moi);
                        }
                    }
                    //
                    //Thuốc, dịch truyền
                    var _lThuoc = (from vp in _ldvbn
                                   join dv in dichvu.Where(p => p.IDNhom == 5 || p.IDNhom == 6 || p.IDNhom == 4) on vp.MaDV equals dv.MaDV
                                   select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.HamLuong }).ToList();
                    if (_lThuoc.Count > 0)
                    {
                        foreach (var item in _lThuoc)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 9;
                            moi.TenNhom = "8. Thuốc, dịch truyền";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = (item.TenDV == null ? "" : item.TenDV) + (Bien.MaBV == "27001" ? (item.HamLuong == null ? "" : (" (" + item.HamLuong + ")")) : "");
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.MienCT == 1 ? 0 : Math.Round(item.vp.DonGia * item.vp.SoLuong, Bien.LamTronSo, MidpointRounding.AwayFromZero); //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.MienCT == 1 ? 0 : Math.Round(item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeTT / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                moi.TyLeTTBH = item.vp.TyLeTT;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.MienCT == 1 ? 0 : item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                //moi.TienNgBH = item.vp.ThanhTien;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                moi.TyLeTTDV = item.vp.TyLeTT;
                            }
                            moi.IsTrongBH = item.vp.TrongBH == 1;
                            _lkq.Add(moi);
                        }
                    }
                    //
                    //Vật tư y tế
                    var _lvtyt = (from vp in _ldvbn
                                  join dv in dichvu.Where(p => p.IDNhom == 10 || p.IDNhom == 11) on vp.MaDV equals dv.MaDV
                                  select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.GiaBHGioiHanTT, dv.MaDV }).ToList();
                    if (_lvtyt.Count > 0)
                    {
                        foreach (var item in _lvtyt)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 10;
                            moi.TenNhom = "9. Vật tư y tế";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.MienCT == 1 ? 0 : item.vp.DonGia * item.vp.SoLuong;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                                if (Bien.MaBV == "27022" && item.GiaBHGioiHanTT > 0 && item.GiaBHGioiHanTT == item.vp.DonGia)
                                {
                                    var qdtct = (from dt in _dataContext.DThuocs.Where(p => p.MaBNhan == _mabn)
                                                 join dtct in _dataContext.DThuoccts
                                                 on dt.IDDon equals dtct.IDDon
                                                 where (dtct.MaDV == item.MaDV && dtct.TrongBH == item.vp.TrongBH && dtct.TyLeTT == item.vp.TyLeTT)
                                                 select dtct).FirstOrDefault();
                                    if (qdtct != null && qdtct.DonGia > item.GiaBHGioiHanTT)
                                    {
                                        moi.DonGiaBV = qdtct.DonGia;
                                        moi.ThanhTienBV = item.vp.ThanhTien;
                                    }
                                }
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.MienCT == 1 ? 0 : item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            moi.IsTrongBH = item.vp.TrongBH == 1;
                            _lkq.Add(moi);
                        }
                    }
                    //

                    // gói vật tư
                    var _ldvbngoi = (from vp in _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn)
                                     join vpct in _dataContext.VienPhicts.Where(p => p.TrongBH != 2).Where(p => p.ThanhToan == 0).Where(p => p.AttachIDDonct != null && p.AttachIDDonct > 0).Where(p => p.NgayYLenh <= _ngayTachThe) on vp.idVPhi equals vpct.idVPhi
                                     group new { vp, vpct } by new { vp.MaBNhan, vp.NgayTT, vpct.MaDV, vpct.TBNTT, vpct.TBNCTT, vpct.TrongBH, vpct.DonVi, vpct.DonGia, vpct.TyLeTT, vpct.TyLeBHTT, vpct.AttachIDDonct, vpct.MienCT } into kq
                                     select new
                                     {
                                         kq.Key.MaBNhan,
                                         kq.Key.NgayTT,
                                         kq.Key.MaDV,
                                         kq.Key.TrongBH,
                                         kq.Key.DonVi,
                                         kq.Key.DonGia,
                                         kq.Key.TyLeTT,
                                         kq.Key.TyLeBHTT,
                                         kq.Key.AttachIDDonct,
                                         kq.Key.MienCT,
                                         SoLuong = kq.Sum(p => p.vpct.SoLuong),
                                         ThanhTien = kq.Sum(p => p.vpct.ThanhTien),
                                         TBNCTT = kq.Sum(p => p.vpct.TBNCTT),
                                         TienBH = kq.Sum(p => p.vpct.TienBH * p.vpct.TyLeBHTT / 100),
                                         TBNTT = kq.Sum(p => p.vpct.TBNTT),
                                     }).ToList();
                    var _lvtytgoi = (from vp in _ldvbngoi.Where(p => p.AttachIDDonct != null && p.AttachIDDonct > 0)
                                     join dv in dichvu.Where(p => p.IDNhom == 10 || p.IDNhom == 11) on vp.MaDV equals dv.MaDV
                                     select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.MaDV, vp.ThanhTien, vp.AttachIDDonct, dv.GiaBHGioiHanTT }).ToList();
                    if (_lvtytgoi.Count > 0)
                    {
                        var dthuoc = (from dt in _dataContext.DThuocs.Where(p => p.MaBNhan == _mabn)
                                      join dtct in _dataContext.DThuoccts on dt.IDDon equals dtct.IDDon
                                      select new { dtct.IDDonct, dtct.MaDV, dtct.TrongBH, dtct.DonGia, dtct.TyLeTT }).ToList();
                        var _lAttachIDDonct = _lvtytgoi.Select(p => p.AttachIDDonct).Distinct().ToList();
                        int sttg = 1;
                        foreach (var a in _lAttachIDDonct)
                        {
                            var tendv0 = (from dt in dthuoc.Where(p => p.IDDonct == a)
                                          join dv in dichvu on dt.MaDV equals dv.MaDV
                                          select new { dv.TenDV, dv.MaDV, dt.TrongBH, dt.DonGia, dt.TyLeTT }).ToList();
                            var tendv = (from dt in tendv0
                                         select new { dt.TenDV }).FirstOrDefault();

                            //var tendv = (from dt in dthuoc.Where(p => p.IDDonct == a)
                            //             join dv in dichvu on dt.MaDV equals dv.MaDV
                            //             select new { dv.TenDV }).FirstOrDefault();
                            if (tendv != null)
                            {
                                string tengoi = "10." + sttg.ToString() + " Gói vật tư y tế " + sttg.ToString() + " (" + tendv.TenDV.ToString() + ")";
                                foreach (var item in _lvtytgoi.Where(p => p.AttachIDDonct == a).ToList())
                                {
                                    C_BKe_New moi = new C_BKe_New();
                                    moi.STTNhom = 11;
                                    moi.TenNhom = "10. Gói vật tư y tế";

                                    moi.STTTieuN = sttg;
                                    moi.TenTieuNhom = tengoi;
                                    moi.TenDV = item.TenDV;
                                    moi.SoLuong = item.vp.SoLuong;
                                    moi.DonVi = item.vp.DonVi;
                                    moi.Mien = item.vp.MienCT;
                                    if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                                    {
                                        moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;// DonGiaBV;
                                        moi.DonGiaBH = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                        moi.ThanhTienBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                        moi.ThanhTienBH = item.vp.MienCT == 1 ? 0 : item.vp.DonGia * item.vp.SoLuong;
                                        moi.TienBH = item.vp.TienBH;
                                        moi.TienBN = item.vp.TBNCTT;
                                        moi.TienNgBH = item.vp.TBNTT;
                                        if (DungChung.Bien.MaBV == "24272")
                                            moi.TyLeTTBH = item.vp.TyLeBHTT;
                                        else
                                            moi.TyLeTTBH = 100;
                                        if (Bien.MaBV == "27022" && item.GiaBHGioiHanTT > 0 && item.GiaBHGioiHanTT == item.vp.DonGia)
                                        {
                                            var qdtct = (from dtct in tendv0
                                                         where (dtct.MaDV == item.MaDV && dtct.TrongBH == item.vp.TrongBH && dtct.TyLeTT == item.vp.TyLeTT)
                                                         select dtct).FirstOrDefault();
                                            if (qdtct != null && qdtct.DonGia > item.GiaBHGioiHanTT)
                                            {
                                                moi.DonGiaBV = qdtct.DonGia;
                                                moi.ThanhTienBV = item.ThanhTien;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                        moi.ThanhTienBV = item.vp.MienCT == 1 ? 0 : item.vp.ThanhTien;
                                        moi.TyLeTTBH = 0;
                                        moi.TienBH = item.vp.TienBH;
                                        moi.TienBN = item.vp.TBNCTT;
                                        moi.TienNgBH = item.vp.TBNTT;
                                    }
                                    moi.TyLeTTDV = item.vp.TyLeTT;
                                    moi.IsTrongBH = item.vp.TrongBH == 1;
                                    _lkq.Add(moi);
                                }
                                sttg++;
                            }
                        }
                    }
                    //thuốc được kê là dịch vụ đính kèm thì lên vào nhóm thuốc
                    var _thuocgoi = (from vp in _ldvbngoi.Where(p => p.AttachIDDonct != null && p.AttachIDDonct > 0)
                                     join dv in dichvu.Where(p => p.IDNhom == 5 || p.IDNhom == 6 || p.IDNhom == 4) on vp.MaDV equals dv.MaDV
                                     select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (_thuocgoi.Count > 0)
                    {
                        foreach (var item in _thuocgoi)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 9;
                            moi.TenNhom = "8. Thuốc, dịch truyền";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1)
                            {
                                moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.MienCT == 1 ? 0 : item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            moi.IsTrongBH = item.vp.TrongBH == 1;
                            _lkq.Add(moi);
                        }
                    }
                    //
                    //vận chuyển
                    var _lvanchuyen = (from vp in _ldvbn
                                       join dv in dichvu.Where(p => p.IDNhom == 12) on vp.MaDV equals dv.MaDV
                                       select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (_lvanchuyen.Count > 0)
                    {
                        foreach (var item in _lvanchuyen)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 12;
                            moi.TenNhom = "11. Vận chuyển người bệnh";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            moi.IsTrongBH = item.vp.TrongBH == 1;
                            _lkq.Add(moi);
                        }
                    }
                    var _lhoachat = (from vp in _ldvbn
                                     join dv in dichvu.Where(p => p.IDNhom > 17) on vp.MaDV equals dv.MaDV
                                     select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (_lhoachat.Count > 0)
                    {
                        foreach (var item in _lhoachat)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 13;
                            moi.TenNhom = "12. Khác";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            moi.IsTrongBH = item.vp.TrongBH == 1;
                            _lkq.Add(moi);
                        }
                    }
                    //
                    if (_lkq.Count > 0)
                    {
                        for (int j = 0; j <= 1; j++)
                        {
                            BaoCao.Rep_Bke_New_2018TK_InDoc rep = new BaoCao.Rep_Bke_New_2018TK_InDoc(_idper2, _mabn);

                            if (SoPhim > 0)
                            {
                                if (Bien.MaBV == "20001")
                                    rep.SOPHIM.Value = _Benhnhan.NoiTru == 1 ? "" : "(Tôi đã nhận .... phim .... Xquang/CT/MRI)";
                                else if (Bien.MaBV == "24012")
                                    rep.SOPHIM.Value = "(Tôi đã nhận .... phim Xquang/CT/MRI)";
                                else
                                    rep.SOPHIM.Value = "(Tôi đã nhận " + SoPhim.ToString() + " phim .... Xquang/CT/MRI)";
                            }
                            else
                            {
                                if (Bien.MaBV == "24009" && _Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false)
                                    rep.SOPHIM.Value = "(Tôi đã nhận .... phim .... Xquang/CT/MRI)";
                            }

                            #region TT hành chính
                            rep.TENCQCQ.Value = Bien.TenCQCQ;
                            rep.CQ.Value = Bien.TenCQ;
                            rep.MABN.Value = "Mã số người bệnh: " + _mabn.ToString();
                            rep.MAKHOA.Value = "Mã khoa:";
                            if (_Benhnhan != null)
                            {
                                _khuvuc = _Benhnhan.KhuVuc;
                                _noitru = _Benhnhan.NoiTru ?? 0;
                                if (_Benhnhan.DTuong == "BHYT")
                                {
                                    if (_Benhnhan.CapCuu == 1)
                                    {
                                        malydo = 2;
                                    }
                                    else
                                    {
                                        if (_Benhnhan.Tuyen == 1)
                                        {
                                            malydo = checkThongTuyen(_Benhnhan.MaKCB, _Benhnhan.MaCS);
                                        }
                                        else
                                        {
                                            malydo = 3;
                                        }
                                    }
                                }
                                string ttt = (_Benhnhan.NoiTru == 1) ? "3" : ((_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "1" : "2");
                                string mauso = _hangbv == 4 ? "03/TYT" : ((_Benhnhan.NoiTru == 1) ? "02/BV" : ((_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "01/KBCB" : "01/BV"));
                                rep.MAUSO.Value = Bien.MaBV == "20001" ? "Mẫu số: 01/KBCB" : "Mẫu số: " + mauso;
                                rep.SOKHAMBENH.Value = "Số khám bệnh: " + _mabn.ToString();
                                rep.TTTT.Value = ttt;
                                capcuu = int.Parse(_Benhnhan.CapCuu.ToString());
                                rep.TENBN.Value = _Benhnhan.TenBNhan.ToUpper();
                                rep.txtketoanvp.Text = rep.Text = _hangbv < 4 ? Bien.KeToanVP : "";
                                rep.txtgiamdinh.Text = _hangbv < 4 ? (_noitru == 0 ? Bien.GiamDinhBH : Bien.GiamDinhBH2) : "";
                                rep.NGAYSINH.Value = _Benhnhan.NgaySinh + "/" + _Benhnhan.ThangSinh + "/" + _Benhnhan.NamSinh;
                                rep.GTINH.Value = _Benhnhan.GTinh == 1 ? "Nam" : "Nữ";
                                rep.DCHI.Value = _Benhnhan.DChi;
                                rep.KHUVUC.Value = _Benhnhan.KhuVuc;
                                if (!string.IsNullOrEmpty(_Benhnhan.SThe.ToString()) && _Benhnhan.SThe.Length >= 15)
                                {
                                    rep.THE1.Value = _Benhnhan.SThe.Substring(0, 2);
                                    rep.THE2.Value = _Benhnhan.SThe.Substring(2, 1);
                                    rep.THE3.Value = _Benhnhan.SThe.Substring(3, 2);
                                    rep.THE4.Value = _Benhnhan.SThe.Substring(5);
                                    rep.GHANTHE.Value = "Giá trị từ " + _Benhnhan.HanBHTu.Value.ToShortDateString() + " đến " + _Benhnhan.HanBHDen.Value.ToShortDateString();
                                    if (_Benhnhan.NgayHM.Value.Year > 1)
                                    {
                                        rep.DU5NAM.Value = _Benhnhan.NgayHM.Value.ToShortDateString();
                                    }
                                    else
                                    {
                                        rep.DU5NAM.Value = "    /    /     ";
                                    }
                                }

                                if (!string.IsNullOrEmpty(_Benhnhan.MaCS))
                                {
                                    var Mabvdk = _bv.Where(p => p.MaBV == _Benhnhan.MaCS).Select(p => new { p.TenBV, p.MaBV }).FirstOrDefault();
                                    if (Mabvdk != null)
                                    {
                                        rep.TENKCBBD.Value = Mabvdk.TenBV.ToString();
                                        rep.MAKCBBD.Value = Mabvdk.MaBV.ToString();
                                    }
                                }

                                if (DungChung.Bien.MaBV == "27001")
                                {
                                    if (_Benhnhan != null && _Benhnhan.NNhap != null)
                                        rep.NNHAP.Value = _Benhnhan.NNhap.Value.Hour + " giờ " + _Benhnhan.NNhap.Value.Minute + " phút, ngày " + _Benhnhan.NNhap.Value.ToShortDateString();
                                }
                                else
                                {
                                    if (_kb != null && _kb.NgayKham != null)
                                        rep.NNHAP.Value = _kb.NgayKham.Value.Hour + " giờ " + _kb.NgayKham.Value.Minute + " phút, ngày " + _kb.NgayKham.Value.ToShortDateString();
                                }
                                if (_Benhnhan.Tuyen != null)
                                    dungtuyen = int.Parse(_Benhnhan.Tuyen.ToString());
                                switch (malydo)
                                {
                                    case 1:
                                        rep.DUNGTUYEN.Value = "X";
                                        break;

                                    case 2:
                                        rep.CAPCUU.Value = "X";
                                        break;

                                    case 3:
                                        rep.TRAITUYEN.Value = "X";
                                        break;

                                    case 4:
                                        rep.THONGTUYEN.Value = "X";
                                        break;
                                }
                                if (_Benhnhan.MucHuong != null && _Benhnhan.MucHuong.ToString() != "")
                                    _muc = _Benhnhan.MucHuong.ToString();

                                rep.DU1NAM.Value = "    /    /     ";
                            }


                            if (_lvv != null)
                            {
                                rep.NGAYVV.Value = _lvv.NgayVao.Value.Hour + " giờ " + _lvv.NgayVao.Value.Minute + " phút, ngày " + _lvv.NgayVao.Value.ToShortDateString();
                            }
                            if (_lrv != null)
                            {
                                if (ktra2the.Count() == 2 && _lvp.NgayTachCP != null)
                                    rep.CPKCB.Value = "Chi phí KCB tính từ ngày " + _Benhnhan.NNhap.Value.ToShortDateString() + " đến ngày " + _lvp.NgayTachCP.Value.ToShortDateString();
                                else
                                    rep.CPKCB.Value = "Chi phí KCB tính từ ngày " + _Benhnhan.NNhap.Value.ToShortDateString() + " đến ngày " + _lrv.NgayRa.Value.ToShortDateString();
                                rep.NGAYRV.Value = _lrv.NgayRa.Value.Hour + " giờ " + _lrv.NgayRa.Value.Minute + " phút, ngày " + _lrv.NgayRa.Value.ToShortDateString();
                                rep.SONGDTRI.Value = _lrv.SoNgaydt;
                                rep.TTRAVIEN.Value = (_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "1" : ((_lrv.KetQua == Bien._ketQuaDT[0] || _lrv.KetQua == Bien._ketQuaDT[1]) ? "1" : "2");
                                string _mabvchuyenden = "", _mabvchuyendi = "";
                                if (_lrv.MaBVC != null)
                                {
                                    _mabvchuyendi = _lrv.MaBVC;
                                    var bv = _bv.Where(p => p.MaBV == (_mabvchuyendi)).ToList();
                                    if (bv.Count > 0)
                                    {
                                        rep.NOICHUYENDI.Value = bv.First().TenBV;
                                    }
                                }
                                if (!string.IsNullOrEmpty(_Benhnhan.MaBV))
                                {
                                    _mabvchuyenden = _Benhnhan.MaBV;
                                    var bv = _bv.Where(p => p.MaBV == (_mabvchuyenden)).ToList();
                                    if (bv.Count > 0)
                                    {
                                        rep.NOICDEN.Value = bv.First().TenBV;
                                    }
                                }

                                if (_lrv.MaKP != null)
                                {
                                    int makp = int.Parse(_lrv.MaKP.ToString());
                                    var tenkp = _dataContext.KPhongs.Where(p => p.MaKP == makp).Select(p => new { p.TenKP, p.MaQD }).FirstOrDefault();
                                    if (tenkp != null)
                                    {
                                        rep.KHOA.Value = "Khoa: " + tenkp.TenKP;
                                        rep.MAKHOA.Value = "Mã khoa: " + tenkp.MaQD;
                                    }
                                    if (Bien.MaBV == "20001")
                                    {
                                        if (string.IsNullOrEmpty(_lrv.MaYHCT))
                                        {
                                            if (_lrv.MaICD.Contains(";"))
                                            {
                                                string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                                                rep.CHANDOANMA.Value = arricd[0];
                                                string icdkhac = "";
                                                if (arricd.Count() > 1)
                                                {
                                                    for (int i = 1; i < arricd.Count(); i++)
                                                    {
                                                        icdkhac += arricd[i] + ";";
                                                    }
                                                }
                                                rep.BENHPHUMA.Value = DungChung.Ham.FreshString(icdkhac);
                                            }
                                            else
                                            {
                                                rep.CHANDOANMA.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                                            }

                                            if (_lrv.ChanDoan.Contains(";"))
                                            {
                                                string cdkhac = "", cdyhctkhac = "";
                                                string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                                                if (arrchandoan.Count() > 1)
                                                {
                                                    for (int i = 1; i < arrchandoan.Count(); i++)
                                                    {
                                                        cdkhac += arrchandoan[i] + ";";
                                                    }
                                                }

                                                string[] arrcdyhct = DungChung.Ham.GetMaYHCT(DungChung.Ham.FreshString(_lrv.MaICD), _licd10)[1].Split(';');
                                                if (arrcdyhct.Count() > 1)
                                                {
                                                    for (int i = 1; i < arrcdyhct.Count(); i++)
                                                    {
                                                        cdyhctkhac += arrcdyhct[i] + ";";
                                                    }
                                                }
                                                rep.CHANDOAN.Value = DungChung.Ham.FreshString(arrchandoan[0]) + " [" + DungChung.Ham.FreshString(arrcdyhct[0]) + "]";
                                                rep.BENHPHU.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(cdkhac), DungChung.Ham.FreshString(cdyhctkhac));
                                            }
                                            else
                                            {
                                                rep.CHANDOAN.Value = DungChung.Ham.GetMaYHCT(DungChung.Ham.FreshString(_lrv.MaICD), _licd10)[1] + " [" + DungChung.Ham.FreshString(_lrv.ChanDoan) + "]";
                                            }
                                        }
                                        else
                                        {
                                            if (_lrv.MaICD.Contains(";"))
                                            {
                                                string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                                                rep.CHANDOANMA.Value = arricd[0];
                                                string icdkhac = "";
                                                if (arricd.Count() > 1)
                                                {
                                                    for (int i = 1; i < arricd.Count(); i++)
                                                    {
                                                        icdkhac += arricd[i] + ";";
                                                    }
                                                }
                                                rep.BENHPHUMA.Value = DungChung.Ham.FreshString(icdkhac);
                                            }
                                            else
                                            {
                                                rep.CHANDOANMA.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                                            }

                                            if (_lrv.ChanDoan.Contains(";"))
                                            {
                                                string cdkhac = "", cdyhctkhac = "";
                                                string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                                                if (arrchandoan.Count() > 1)
                                                {
                                                    for (int i = 1; i < arrchandoan.Count(); i++)
                                                    {
                                                        cdkhac += arrchandoan[i] + ";";
                                                    }
                                                }

                                                string[] arrcdyhct = DungChung.Ham.FreshString(_lrv.ChanDoanYHCT).Split(';');
                                                if (arrcdyhct.Count() > 1)
                                                {
                                                    for (int i = 1; i < arrcdyhct.Count(); i++)
                                                    {
                                                        cdyhctkhac += arrcdyhct[i] + ";";
                                                    }
                                                }
                                                rep.CHANDOAN.Value = DungChung.Ham.FreshString(arrchandoan[0]) + " [" + DungChung.Ham.FreshString(arrcdyhct[0]) + "]";
                                                rep.BENHPHU.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(cdkhac), DungChung.Ham.FreshString(cdyhctkhac));
                                            }
                                            else
                                            {
                                                rep.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoanYHCT) + " [" + DungChung.Ham.FreshString(_lrv.ChanDoan) + "]";
                                            }
                                        }
                                    }
                                    else
                                    {
                                        if (_lrv.MaICD.Contains(";"))
                                        {
                                            string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                                            rep.CHANDOANMA.Value = arricd[0];
                                            string icdkhac = "";
                                            if (arricd.Count() > 1)
                                            {
                                                for (int i = 1; i < arricd.Count(); i++)
                                                {
                                                    icdkhac += arricd[i] + ";";
                                                }
                                            }
                                            rep.BENHPHUMA.Value = DungChung.Ham.FreshString(icdkhac);
                                        }
                                        else
                                        {
                                            rep.CHANDOANMA.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                                        }
                                        if (_lrv.ChanDoan.Contains(";"))
                                        {
                                            string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                                            rep.CHANDOAN.Value = arrchandoan[0];
                                            string cdkhac = "";
                                            if (arrchandoan.Count() > 1)
                                            {
                                                for (int i = 1; i < arrchandoan.Count(); i++)
                                                {
                                                    cdkhac += arrchandoan[i] + ";";
                                                }
                                            }
                                            rep.BENHPHU.Value = DungChung.Ham.FreshString(cdkhac);
                                        }
                                        else
                                        {
                                            rep.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);
                                        }
                                    }
                                }
                            }
                            if (_Benhnhan.KhuVuc != null)
                                kvuc = _Benhnhan.KhuVuc;
                            rep.MUCHUONG.Value = TinhMucHuong(dungtuyen, _muc, kvuc, tongcp1, _hangbv, _Benhnhan.NoiTru ?? 0, _Benhnhan.SThe, _Benhnhan.MaCS) + "%";
                            #endregion

                            if (_lvp != null)
                            {
                                _NgayTT = _lvp.NgayTT.Value;
                                //rep.NGAYKY.Value = DungChung.Ham.NgaySangChu(_lvp.NgayTT.Value, Bien.FormatDate);

                                rep.txtNgayKyGD.Text = Bien.MaBV == "20001" ? "...., ngày ... tháng ... năm ..." : DungChung.Ham.NgaySangChu(_lvp.NgayTT.Value, Bien.FormatDate);
                            }
                            var _lkq34019 = _lkq.Where(o => o.IsTrongBH == (j == 0)).ToList();
                            if (_lkq34019.Where(p => p.Mien == 0).Count() > 0)
                            {
                                double tongcp = 0, tienBh = 0, tienbn = 0, tienbnngoai = 0;
                                tienBh = _lkq34019.Sum(p => p.TienBH);
                                tienbn = _lkq34019.Sum(p => p.TienBN);
                                tienbnngoai = _lkq34019.Sum(p => p.TienNgBH);
                                tongcp = tienBh + tienbn + tienbnngoai;
                                string tieude = (_Benhnhan.NoiTru == 1) ? "Điều trị nội trú" : ((_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "Khám bệnh" : "Điều trị ngoại trú");
                                rep.TIEUDE.Value = "BẢNG KÊ CHI PHÍ " + tieude.ToUpper() + Environment.NewLine + (j == 0 ? " TRONG DANH MỤC BHYT" : " NGOÀI DANH MỤC BHYT");
                                rep.TONGCHIPHI.Value = Math.Round(tongcp, 0).ToString("###,###");
                                rep.TIENCHU.Value = DungChung.Ham.DocTienBangChu(Math.Round(tongcp, 0), " đồng)");
                                rep.TIENBH.Value = tienBh > 0 ? (Math.Round(tienBh, 0).ToString("###,###") + " đồng") : "0 đồng";
                                rep.TIENBN.Value = tienbn > 0 ? (Math.Round(tienbn, 0).ToString("###,###") + " đồng") : "0 đồng";
                                rep.TIENBNDV.Value = tienbnngoai > 0 ? (Math.Round(tienbnngoai, 0).ToString("###,###") + " đồng") : "0 đồng";
                                rep.DataSource = _lkq34019.Where(p => p.Mien == 0).OrderBy(p => p.STTNhom).ThenBy(p => p.STTTieuN).ThenBy(p => p.TenDV).ToList();
                                rep.Bindingdata();
                                rep.CreateDocument();
                                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                frm.ShowDialog();
                            }
                            #endregion
                        }

                        if (_lkq.Where(p => p.Mien == 1).ToList().Count() > 0)
                        {
                            BaoCao.Rep_Bke_New_2018TK_InDoc_34019 rep1 = new BaoCao.Rep_Bke_New_2018TK_InDoc_34019(_idper2, _mabn);
                            List<C_BKe_New> _lthuocmien = new List<C_BKe_New>();
                            _lthuocmien = (from thuoc in _lkq.Where(p => p.Mien == 1)
                                           group thuoc by new { thuoc.TenDV, thuoc.DonVi } into kq
                                           select new C_BKe_New { TenDV = kq.Key.TenDV, DonGiaBH = kq.First().DonGiaBH, DonGiaBV = kq.First().DonGiaBV, DonVi = kq.Key.DonVi, IsTrongBH = kq.First().IsTrongBH, Mien = kq.First().Mien, SoLuong = kq.Sum(o => o.SoLuong), STTNhom = kq.First().STTNhom, STTTieuN = kq.First().STTTieuN, TenNhom = kq.First().TenNhom, TenTieuNhom = kq.First().TenTieuNhom, ThanhTienBH = kq.First().ThanhTienBH, ThanhTienBV = kq.First().ThanhTienBV, TienBH = kq.First().TienBH, TienBN = kq.First().TienBN, TienKhac = kq.First().TienKhac, TienNgBH = kq.First().TienNgBH, TyLeTTBH = kq.First().TyLeTTBH, TyLeTTDV = kq.First().TyLeTTDV }).ToList();
                            rep1.TIEUDE.Value = "BẢNG KÊ THUỐC THUỘC NGUỒN CHƯƠNG TRÌNH MỤC TIÊU";
                            foreach (var item in _lthuocmien)
                            {
                                if (item.STTNhom == 9)
                                    item.TenNhom = "Thuốc trong danh mục";
                                if (item.STTNhom == 10)
                                    item.TenNhom = "Vật tư y tế";

                                item.DonGiaBV = 0;// DonGiaBV;
                                item.DonGiaBH = 0;
                                item.ThanhTienBV = 0; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                item.ThanhTienBH = 0;
                                item.TienBH = 0;
                                item.TienBN = 0;
                                item.TienNgBH = 0;
                                item.TyLeTTBH = 0;
                                item.TyLeTTDV = 0;
                            }
                            #region TT hành chính
                            rep1.TENCQCQ.Value = Bien.TenCQCQ;
                            rep1.CQ.Value = Bien.TenCQ;
                            rep1.MABN.Value = "Mã số người bệnh: " + _mabn.ToString();
                            //rep1.MAKHOA.Value = "Mã khoa:";
                            rep1.TONGCHIPHI.Value = "0";
                            rep1.TIENCHU.Value = "Không đồng";
                            if (_Benhnhan != null)
                            {
                                _khuvuc = _Benhnhan.KhuVuc;
                                _noitru = _Benhnhan.NoiTru ?? 0;
                                if (_Benhnhan.DTuong == "BHYT")
                                {
                                    if (_Benhnhan.CapCuu == 1)
                                    {
                                        malydo = 2;
                                    }
                                    else
                                    {
                                        if (_Benhnhan.Tuyen == 1)
                                        {
                                            malydo = checkThongTuyen(_Benhnhan.MaKCB, _Benhnhan.MaCS);
                                        }
                                        else
                                        {
                                            malydo = 3;
                                        }
                                    }
                                }
                                string tieude1 = (_Benhnhan.NoiTru == 1) ? "Điều trị nội trú" : ((_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "Khám bệnh" : "Điều trị ngoại trú");
                                string ttt = (_Benhnhan.NoiTru == 1) ? "3" : ((_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "1" : "2");
                                string mauso = _hangbv == 4 ? "03/TYT" : ((_Benhnhan.NoiTru == 1) ? "02/BV" : ((_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "01/KBCB" : "01/BV"));
                                rep1.MAUSO.Value = "Mẫu số: " + mauso;
                                rep1.SOKHAMBENH.Value = "Số khám bệnh: " + _mabn.ToString();
                                rep1.TTTT.Value = ttt;
                                capcuu = int.Parse(_Benhnhan.CapCuu.ToString());
                                rep1.TENBN.Value = _Benhnhan.TenBNhan.ToUpper();
                                //rep1.txttenbn.Text = _Benhnhan.TenBNhan;
                                rep1.txtketoanvp.Text = _hangbv < 4 ? Bien.KeToanVP : "";
                                rep1.txtgiamdinh.Text = _hangbv < 4 ? (_noitru == 0 ? Bien.GiamDinhBH : Bien.GiamDinhBH2) : "";
                                rep1.NGAYSINH.Value = _Benhnhan.NgaySinh + "/" + _Benhnhan.ThangSinh + "/" + _Benhnhan.NamSinh;
                                rep1.GTINH.Value = _Benhnhan.GTinh == 1 ? "Nam" : "Nữ";
                                rep1.DCHI.Value = _Benhnhan.DChi;
                                rep1.KHUVUC.Value = _Benhnhan.KhuVuc;
                                if (!string.IsNullOrEmpty(_Benhnhan.SThe.ToString()) && _Benhnhan.SThe.Length >= 15)
                                {
                                    rep1.THE1.Value = _Benhnhan.SThe.Substring(0, 2);
                                    rep1.THE2.Value = _Benhnhan.SThe.Substring(2, 1);
                                    rep1.THE3.Value = _Benhnhan.SThe.Substring(3, 2);
                                    rep1.THE4.Value = _Benhnhan.SThe.Substring(5);
                                }
                                rep1.GHANTHE.Value = "Giá trị từ " + _Benhnhan.HanBHTu.Value.ToShortDateString() + " đến " + _Benhnhan.HanBHDen.Value.ToShortDateString();
                                if (!string.IsNullOrEmpty(_Benhnhan.MaCS))
                                {
                                    var Mabvdk = _bv.Where(p => p.MaBV == _Benhnhan.MaCS).Select(p => new { p.TenBV, p.MaBV }).FirstOrDefault();
                                    if (Mabvdk != null)
                                    {
                                        rep1.TENKCBBD.Value = Mabvdk.TenBV.ToString();
                                        rep1.MAKCBBD.Value = Mabvdk.MaBV.ToString();
                                    }
                                }
                                //rep1.NNHAP.Value = _Benhnhan.NNhap.Value.Hour + " giờ " + _Benhnhan.NNhap.Value.Minute + " phút, ngày " + _Benhnhan.NNhap.Value.ToShortDateString();
                                if (DungChung.Bien.MaBV == "27001")
                                {
                                    if (_Benhnhan != null && _Benhnhan.NNhap != null)
                                        rep1.NNHAP.Value = _Benhnhan.NNhap.Value.Hour + " giờ " + _Benhnhan.NNhap.Value.Minute + " phút, ngày " + _Benhnhan.NNhap.Value.ToShortDateString();
                                }
                                else
                                {
                                    if (_kb != null && _kb.NgayKham != null)
                                        rep1.NNHAP.Value = _kb.NgayKham.Value.Hour + " giờ " + _kb.NgayKham.Value.Minute + " phút, ngày " + _kb.NgayKham.Value.ToShortDateString();
                                }
                                if (_Benhnhan.Tuyen != null)
                                    dungtuyen = int.Parse(_Benhnhan.Tuyen.ToString());
                                switch (malydo)
                                {
                                    case 1:
                                        rep1.DUNGTUYEN.Value = "X";
                                        break;

                                    case 2:
                                        rep1.CAPCUU.Value = "X";
                                        break;

                                    case 3:
                                        rep1.TRAITUYEN.Value = "X";
                                        break;

                                    case 4:
                                        rep1.THONGTUYEN.Value = "X";
                                        break;
                                }
                                if (_Benhnhan.MucHuong != null && _Benhnhan.MucHuong.ToString() != "")
                                    _muc = _Benhnhan.MucHuong.ToString();
                                if (_Benhnhan.NgayHM.Value.Year > 1)
                                {
                                    rep1.DU5NAM.Value = _Benhnhan.NgayHM.Value.ToShortDateString();
                                }
                                else
                                {
                                    rep1.DU5NAM.Value = "    /    /     ";
                                }
                                rep1.DU1NAM.Value = "    /    /     ";
                            }


                            if (_lvv != null)
                            {
                                rep1.NGAYVV.Value = _lvv.NgayVao.Value.Hour + " giờ " + _lvv.NgayVao.Value.Minute + " phút, ngày " + _lvv.NgayVao.Value.ToShortDateString();
                            }
                            if (_lrv != null)
                            {
                                if (ktra2the.Count() == 2 && _lvp.NgayTachCP != null)
                                    rep1.CPKCB.Value = "Chi phí KCB tính từ ngày " + _Benhnhan.NNhap.Value.ToShortDateString() + " đến ngày " + _lvp.NgayTachCP.Value.ToShortDateString();
                                else
                                    rep1.CPKCB.Value = "Chi phí KCB tính từ ngày " + _Benhnhan.NNhap.Value.ToShortDateString() + " đến ngày " + _lrv.NgayRa.Value.ToShortDateString();
                                rep1.NGAYRV.Value = _lrv.NgayRa.Value.Hour + " giờ " + _lrv.NgayRa.Value.Minute + " phút, ngày " + _lrv.NgayRa.Value.ToShortDateString();
                                rep1.SONGDTRI.Value = _lrv.SoNgaydt;
                                rep1.TTRAVIEN.Value = (_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "1" : ((_lrv.KetQua == Bien._ketQuaDT[0] || _lrv.KetQua == Bien._ketQuaDT[1]) ? "1" : "2");
                                string _mabvchuyenden = "", _mabvchuyendi = "";
                                if (_lrv.MaBVC != null)
                                {
                                    _mabvchuyendi = _lrv.MaBVC;
                                    var bv = _bv.Where(p => p.MaBV == (_mabvchuyendi)).ToList();
                                    if (bv.Count > 0)
                                    {
                                        rep1.NOICHUYENDI.Value = bv.First().TenBV;
                                    }
                                }
                                if (!string.IsNullOrEmpty(_Benhnhan.MaBV))
                                {
                                    _mabvchuyenden = _Benhnhan.MaBV;
                                    var bv = _bv.Where(p => p.MaBV == (_mabvchuyenden)).ToList();
                                    if (bv.Count > 0)
                                    {
                                        rep1.NOICDEN.Value = bv.First().TenBV;
                                    }
                                }

                                if (_lrv.MaKP != null)
                                {
                                    int makp = int.Parse(_lrv.MaKP.ToString());
                                    var tenkp = _dataContext.KPhongs.Where(p => p.MaKP == makp).Select(p => new { p.TenKP, p.MaQD }).FirstOrDefault();
                                    if (tenkp != null)
                                    {
                                        rep1.KHOA.Value = tenkp.MaQD + " - " + tenkp.TenKP;
                                        //rep1.MAKHOA.Value = "Mã khoa: " + tenkp.MaQD;
                                    }
                                    if (_lrv.MaICD.Contains(";"))
                                    {
                                        string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                                        rep1.CHANDOANMA.Value = arricd[0];
                                        string icdkhac = "";
                                        if (arricd.Count() > 1)
                                        {
                                            for (int i = 1; i < arricd.Count(); i++)
                                            {
                                                icdkhac += arricd[i] + ";";
                                            }
                                        }
                                        rep1.BENHPHUMA.Value = DungChung.Ham.FreshString(icdkhac);
                                    }
                                    else
                                    {
                                        //rep1.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);
                                        rep1.CHANDOANMA.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                                    }
                                    if (_lrv.ChanDoan.Contains(";"))
                                    {
                                        string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                                        rep1.CHANDOAN.Value = arrchandoan[0];
                                        string cdkhac = "";
                                        if (arrchandoan.Count() > 1)
                                        {
                                            for (int i = 1; i < arrchandoan.Count(); i++)
                                            {
                                                cdkhac += arrchandoan[i] + ";";
                                            }
                                        }
                                        rep1.BENHPHU.Value = DungChung.Ham.FreshString(cdkhac);
                                    }
                                    else
                                    {
                                        rep1.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);
                                    }
                                }
                            }
                            if (_Benhnhan.KhuVuc != null)
                                kvuc = _Benhnhan.KhuVuc;
                            rep1.MUCHUONG.Value = TinhMucHuong(dungtuyen, _muc, kvuc, tongcp1, _hangbv, _Benhnhan.NoiTru ?? 0, _Benhnhan.SThe, _Benhnhan.MaCS) + "%";
                            #endregion
                            if (_lvp != null)
                            {
                                _NgayTT = _lvp.NgayTT.Value;
                                rep1.NGAYKY.Value = DungChung.Ham.NgaySangChu(_lvp.NgayTT.Value, Bien.FormatDate);
                            }
                            rep1.DataSource = _lthuocmien.OrderBy(p => p.STTNhom).ThenBy(p => p.STTTieuN).ThenBy(p => p.TenDV).ToList();
                            rep1.Bindingdata();
                            rep1.CreateDocument();
                            frm.prcIN.PrintingSystem = rep1.PrintingSystem;
                            frm.ShowDialog();
                        }
                        #endregion
                    }
                }
                #endregion
            }
            else
            {
                #region Chiphi trong dm
                if (_loaiBK == 0)
                {
                    #region In ngang
                    int _idvp = _lvp != null ? _lvp.idVPhi : 0;
                    var ktra2the = _dataContext.VienPhicts.Where(p => p.idVPhi == _idvp).Select(p => p.IDPerson).Distinct().ToList();
                    if (ktra2the.Count() == 2)
                    {
                        _idper1 = ktra2the.First().Value;
                        _idper2 = ktra2the.Last().Value;
                    }
                    BaoCao.Rep_Bke_New_2018TK rep = new BaoCao.Rep_Bke_New_2018TK(_idper2, _mabn);
                    #region TT hành chính
                    rep.xrBarCode1.Text = _mabn.ToString();
                    rep.TENCQCQ.Value = Bien.TenCQCQ;
                    rep.CQ.Value = Bien.TenCQ;
                    rep.KeToanVP.Value = Bien.KeToanVP;

                    rep.MABN.Value = "Mã số người bệnh: " + _mabn.ToString();
                    rep.MAKHOA.Value = "Mã khoa:";
                    if (_Benhnhan != null)
                    {
                        _khuvuc = _Benhnhan.KhuVuc;
                        _noitru = _Benhnhan.NoiTru ?? 0;
                        if (_Benhnhan.DTuong == "BHYT")
                        {
                            if (_Benhnhan.CapCuu == 1)
                            {
                                malydo = 2;
                            }
                            else
                            {
                                if (_Benhnhan.Tuyen == 1)
                                {
                                    malydo = checkThongTuyen(_Benhnhan.MaKCB, _Benhnhan.MaCS);
                                }
                                else
                                {
                                    malydo = 3;
                                }
                            }
                        }
                        string tieude = (_Benhnhan.NoiTru == 1) ? "Điều trị nội trú" : ((_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "Khám bệnh" : "Điều trị ngoại trú");
                        string ttt = (_Benhnhan.NoiTru == 1) ? "3" : ((_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "1" : "2");
                        string mauso = _hangbv == 4 ? "01/TYT" : ((_Benhnhan.NoiTru == 1) ? "01/BV" : ((_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "01/KBCB" : "01/BV"));
                        rep.MAUSO.Value = Bien.MaBV == "20001" ? "Mẫu số: 01/KBCB" : "Mẫu số: " + mauso;
                        if (Bien.MaBV == "14017")
                        {
                            rep.SOKHAMBENH.Value = "Số khám bệnh: " + _Benhnhan.SoTT + "/2021_" + _CountBN.ToString();
                        }
                        else
                            rep.SOKHAMBENH.Value = "Số khám bệnh: " + _mabn.ToString();
                        rep.TIEUDE.Value = "BẢNG KÊ CHI PHÍ " + tieude.ToUpper();
                        rep.TTTT.Value = ttt;
                        capcuu = int.Parse(_Benhnhan.CapCuu.ToString());
                        rep.TENBN.Value = _Benhnhan.TenBNhan.ToUpper();
                        rep.txtketoanvp.Text = _hangbv < 4 ? Bien.KeToanVP : "";
                        rep.txtgiamdinh.Text = _hangbv < 4 ? (_noitru == 0 ? Bien.GiamDinhBH : Bien.GiamDinhBH2) : "";
                        rep.NGAYSINH.Value = _Benhnhan.NgaySinh + "/" + _Benhnhan.ThangSinh + "/" + _Benhnhan.NamSinh;
                        rep.GTINH.Value = _Benhnhan.GTinh == 1 ? "Nam" : "Nữ";
                        rep.DCHI.Value = _Benhnhan.DChi;
                        rep.KHUVUC.Value = _Benhnhan.KhuVuc;
                        if (!string.IsNullOrEmpty(_Benhnhan.SThe.ToString()) && _Benhnhan.SThe.Length >= 15)
                        {
                            rep.THE1.Value = _Benhnhan.SThe.Substring(0, 2);
                            rep.THE2.Value = _Benhnhan.SThe.Substring(2, 1);
                            rep.THE3.Value = _Benhnhan.SThe.Substring(3, 2);
                            rep.THE4.Value = _Benhnhan.SThe.Substring(5);
                            rep.GHANTHE.Value = "Giá trị từ " + _Benhnhan.HanBHTu.Value.ToShortDateString() + " đến " + _Benhnhan.HanBHDen.Value.ToShortDateString();
                        }

                        if (!string.IsNullOrEmpty(_Benhnhan.MaCS))
                        {
                            var Mabvdk = _bv.Where(p => p.MaBV == _Benhnhan.MaCS).Select(p => new { p.TenBV, p.MaBV }).FirstOrDefault();
                            if (Mabvdk != null)
                            {
                                rep.TENKCBBD.Value = Mabvdk.TenBV.ToString();
                                rep.MAKCBBD.Value = Mabvdk.MaBV.ToString();
                            }
                        }
                        if (DungChung.Bien.MaBV == "27001")
                        {
                            if (_Benhnhan != null && _Benhnhan.NNhap != null)
                                rep.NNHAP.Value = _Benhnhan.NNhap.Value.Hour + " giờ " + _Benhnhan.NNhap.Value.Minute + " phút, ngày " + _Benhnhan.NNhap.Value.ToShortDateString();
                        }
                        else
                        {
                            if (_kb != null && _kb.NgayKham != null)
                                rep.NNHAP.Value = _kb.NgayKham.Value.Hour + " giờ " + _kb.NgayKham.Value.Minute + " phút, ngày " + _kb.NgayKham.Value.ToShortDateString();
                        }
                        if (_Benhnhan.Tuyen != null)
                            dungtuyen = int.Parse(_Benhnhan.Tuyen.ToString());
                        switch (malydo)
                        {
                            case 1:
                                rep.DUNGTUYEN.Value = "X";
                                break;

                            case 2:
                                rep.CAPCUU.Value = "X";
                                break;

                            case 3:
                                rep.TRAITUYEN.Value = "X";
                                break;

                            case 4:
                                rep.THONGTUYEN.Value = "X";
                                break;
                        }
                        if (_Benhnhan.MucHuong != null && _Benhnhan.MucHuong.ToString() != "")
                            _muc = _Benhnhan.MucHuong.ToString();
                        if (_Benhnhan.NgayHM != null && _Benhnhan.NgayHM.Value.Year > 1)
                        {
                            rep.DU5NAM.Value = _Benhnhan.NgayHM.Value.ToShortDateString();
                        }
                        else
                        {
                            rep.DU5NAM.Value = "    /    /     ";
                        }
                        rep.DU1NAM.Value = "    /    /     ";
                    }


                    if (_lvv != null)
                    {
                        rep.NGAYVV.Value = _lvv.NgayVao.Value.Hour + " giờ " + _lvv.NgayVao.Value.Minute + " phút, ngày " + _lvv.NgayVao.Value.ToShortDateString();
                    }
                    if (_lrv != null)
                    {
                        if (ktra2the.Count() == 2 && _lvp.NgayTachCP != null)
                            rep.CPKCB.Value = "Chi phí KCB tính từ ngày " + _Benhnhan.NNhap.Value.ToShortDateString() + " đến ngày " + _lvp.NgayTachCP.Value.ToShortDateString();
                        else
                            rep.CPKCB.Value = "Chi phí KCB tính từ ngày " + _Benhnhan.NNhap.Value.ToShortDateString() + " đến ngày " + _lrv.NgayRa.Value.ToShortDateString();
                        rep.NGAYRV.Value = _lrv.NgayRa.Value.Hour + " giờ " + _lrv.NgayRa.Value.Minute + " phút, ngày " + _lrv.NgayRa.Value.ToShortDateString();
                        rep.SONGDTRI.Value = _lrv.SoNgaydt;
                        rep.TTRAVIEN.Value = (_lrv.Status == 1 && _Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "2" : (_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "1" : ((_lrv.KetQua == Bien._ketQuaDT[0] || _lrv.KetQua == Bien._ketQuaDT[1]) ? "1" : "2");
                        string _mabvchuyenden = "", _mabvchuyendi = "";
                        if (_lrv.MaBVC != null)
                        {
                            _mabvchuyendi = _lrv.MaBVC;
                            var bv = _bv.Where(p => p.MaBV == (_mabvchuyendi)).ToList();
                            if (bv.Count > 0)
                            {
                                rep.NOICHUYENDI.Value = bv.First().TenBV;
                            }
                        }
                        if (!string.IsNullOrEmpty(_Benhnhan.MaBV))
                        {
                            _mabvchuyenden = _Benhnhan.MaBV;
                            var bv = _bv.Where(p => p.MaBV == (_mabvchuyenden)).ToList();
                            if (bv.Count > 0)
                            {
                                rep.NOICDEN.Value = bv.First().TenBV;
                            }
                        }

                        if (_lrv.MaKP != null)
                        {
                            int makp = int.Parse(_lrv.MaKP.ToString());
                            var tenkp = _dataContext.KPhongs.Where(p => p.MaKP == makp).Select(p => new { p.TenKP, p.MaQD }).FirstOrDefault();
                            if (tenkp != null)
                            {
                                rep.KHOA.Value = Bien.MaBV == "20001" ? tenkp.TenKP : "Khoa: " + tenkp.TenKP;
                                rep.MAKHOA.Value = "Mã khoa: " + tenkp.MaQD;
                            }
                            if (Bien.MaBV == "20001" || Bien.MaBV == "24297")
                            {
                                if (string.IsNullOrEmpty(_lrv.MaYHCT))
                                {
                                    if (_lrv.MaICD.Contains(";"))
                                    {
                                        string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                                        rep.CHANDOANMA.Value = arricd[0];
                                        string icdkhac = "";
                                        if (arricd.Count() > 1)
                                        {
                                            for (int i = 1; i < arricd.Count(); i++)
                                            {
                                                icdkhac += arricd[i] + ";";
                                            }
                                        }
                                        rep.BENHPHUMA.Value = DungChung.Ham.FreshString(icdkhac);
                                    }
                                    else
                                    {
                                        rep.CHANDOANMA.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                                    }

                                    if (_lrv.ChanDoan.Contains(";"))
                                    {
                                        string cdkhac = "", cdyhctkhac = "";
                                        string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                                        if (arrchandoan.Count() > 1)
                                        {
                                            for (int i = 1; i < arrchandoan.Count(); i++)
                                            {
                                                cdkhac += arrchandoan[i] + ";";
                                            }
                                        }

                                        string[] arrcdyhct = DungChung.Ham.GetMaYHCT(DungChung.Ham.FreshString(_lrv.MaICD), _licd10)[1].Split(';');
                                        if (arrcdyhct.Count() > 1)
                                        {
                                            for (int i = 1; i < arrcdyhct.Count(); i++)
                                            {
                                                cdyhctkhac += arrcdyhct[i] + ";";
                                            }
                                        }
                                        rep.CHANDOAN.Value = DungChung.Ham.FreshString(arrcdyhct[0]) + " [" + DungChung.Ham.FreshString(arrchandoan[0]) + "]";
                                        rep.BENHPHU.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(cdkhac), DungChung.Ham.FreshString(cdyhctkhac));
                                    }
                                    else
                                    {
                                        rep.CHANDOAN.Value = DungChung.Ham.GetMaYHCT(DungChung.Ham.FreshString(_lrv.MaICD), _licd10)[1] + " [" + DungChung.Ham.FreshString(_lrv.ChanDoan) + "]";
                                    }
                                }
                                else
                                {
                                    if (_lrv.MaICD.Contains(";"))
                                    {
                                        string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                                        rep.CHANDOANMA.Value = arricd[0];
                                        string icdkhac = "";
                                        if (arricd.Count() > 1)
                                        {
                                            for (int i = 1; i < arricd.Count(); i++)
                                            {
                                                icdkhac += arricd[i] + ";";
                                            }
                                        }
                                        rep.BENHPHUMA.Value = DungChung.Ham.FreshString(icdkhac);
                                    }
                                    else
                                    {
                                        //rep.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);
                                        rep.CHANDOANMA.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                                    }

                                    if (_lrv.ChanDoan.Contains(";"))
                                    {
                                        string cdkhac = "", cdyhctkhac = "";
                                        string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                                        //rep.CHANDOAN.Value = arrchandoan[0];
                                        if (arrchandoan.Count() > 1)
                                        {
                                            for (int i = 1; i < arrchandoan.Count(); i++)
                                            {
                                                cdkhac += arrchandoan[i] + ";";
                                            }
                                        }

                                        string[] arrcdyhct = DungChung.Ham.FreshString(_lrv.ChanDoanYHCT).Split(';');
                                        //rep.CHANDOAN.Value = arrchandoan[0];
                                        if (arrcdyhct.Count() > 1)
                                        {
                                            for (int i = 1; i < arrcdyhct.Count(); i++)
                                            {
                                                cdyhctkhac += arrcdyhct[i] + ";";
                                            }
                                        }
                                        rep.CHANDOAN.Value = DungChung.Ham.FreshString(arrcdyhct[0]) + " [" + DungChung.Ham.FreshString(arrchandoan[0]) + "]";
                                        rep.BENHPHU.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(cdkhac), DungChung.Ham.FreshString(cdyhctkhac));
                                    }
                                    else
                                    {
                                        rep.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoanYHCT) + " [" + DungChung.Ham.FreshString(_lrv.ChanDoan) + "]";
                                    }
                                }
                            }
                            else
                            {
                                if (_lrv.MaICD.Contains(";"))
                                {
                                    string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                                    rep.CHANDOANMA.Value = arricd[0];
                                    string icdkhac = "";
                                    if (arricd.Count() > 1)
                                    {
                                        for (int i = 1; i < arricd.Count(); i++)
                                        {
                                            icdkhac += arricd[i] + ";";
                                        }
                                    }
                                    rep.BENHPHUMA.Value = DungChung.Ham.FreshString(icdkhac);
                                }
                                else
                                {
                                    //rep.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);
                                    rep.CHANDOANMA.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                                }
                                if (_lrv.ChanDoan.Contains(";"))
                                {
                                    string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                                    rep.CHANDOAN.Value = arrchandoan[0];
                                    string cdkhac = "";
                                    if (arrchandoan.Count() > 1)
                                    {
                                        for (int i = 1; i < arrchandoan.Count(); i++)
                                        {
                                            cdkhac += arrchandoan[i] + ";";
                                        }
                                    }
                                    rep.BENHPHU.Value = DungChung.Ham.FreshString(cdkhac);
                                }
                                else
                                    rep.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);
                            }
                        }
                    }

                    var _ldvbn0 = (from vp in _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn)
                                   join vpct in _dataContext.VienPhicts.Where(p => (Bien.MaBV == "01071" || Bien.MaBV == "01049") ? (p.TrongBH == 1) : (p.TrongBH != 2 && p.TrongBH != 3)).Where(p => p.ThanhToan == 0).Where(p => p.AttachIDDonct == null) on vp.idVPhi equals vpct.idVPhi
                                   select new
                                   {
                                       vp.MaBNhan,
                                       vp.NgayTT,
                                       vpct.MaDV,
                                       vpct.TrongBH,
                                       vpct.DonVi,
                                       vpct.DonGia,
                                       vpct.TyLeTT,
                                       vpct.TyLeBHTT,
                                       vpct.IDPerson,
                                       vpct.SoLuong,
                                       vpct.ThanhTien,
                                       vpct.TBNCTT,
                                       vpct.TienNguonKhac,
                                       vpct.TBNTT,
                                       vpct.TienBH,
                                       vpct.MienCT,
                                       vpct.NgayYLenh,
                                       vpct.ThanhToan,
                                       vpct.AttachIDDonct,
                                       vpct.LoaiDV
                                   }).ToList();
                    
                    var _ldvbn1 = (from a in _ldvbn0.Where(p => p.ThanhToan == 0).Where(p => p.AttachIDDonct == null).Where(p => p.NgayYLenh <= _ngayTachThe)
                                   select new
                                   {
                                       a.MaBNhan,
                                       a.NgayTT,
                                       a.MaDV,
                                       a.TrongBH,
                                       a.DonVi,
                                       a.DonGia,
                                       a.TyLeTT,
                                       a.TyLeBHTT,
                                       a.IDPerson,
                                       a.SoLuong,
                                       a.ThanhTien,
                                       a.TBNCTT,
                                       a.TienNguonKhac,
                                       a.TBNTT,
                                       a.TienBH,
                                       a.MienCT
                                   }).ToList();
                    if(DungChung.Bien.MaBV == "30372")
                    {
                        _ldvbn1 = (from a in _ldvbn0.Where(p => p.LoaiDV != -1).Where(p => p.ThanhToan == 0).Where(p => p.AttachIDDonct == null).Where(p => p.NgayYLenh <= _ngayTachThe)
                                   select new
                                   {
                                       a.MaBNhan,
                                       a.NgayTT,
                                       a.MaDV,
                                       a.TrongBH,
                                       a.DonVi,
                                       a.DonGia,
                                       a.TyLeTT,
                                       a.TyLeBHTT,
                                       a.IDPerson,
                                       a.SoLuong,
                                       a.ThanhTien,
                                       a.TBNCTT,
                                       a.TienNguonKhac,
                                       a.TBNTT,
                                       a.TienBH,
                                       a.MienCT
                                   }).ToList();
                    }    
                    var _ldvbn = (from vp in _ldvbn1.Where(p => _idper1 == 0 ? true : p.IDPerson == _idper1)
                                  group new { vp } by new { vp.MaBNhan, vp.NgayTT, vp.MaDV, vp.TrongBH, vp.DonVi, vp.DonGia, vp.TyLeTT, vp.TyLeBHTT, vp.IDPerson, vp.MienCT, vp.TienNguonKhac } into kq
                                  select new
                                  {
                                      kq.Key.MaBNhan,
                                      kq.Key.NgayTT,
                                      kq.Key.MaDV,
                                      kq.Key.TrongBH,
                                      kq.Key.DonVi,
                                      kq.Key.DonGia,
                                      kq.Key.TyLeTT,
                                      kq.Key.TyLeBHTT,
                                      kq.Key.IDPerson,
                                      SoLuong = kq.Sum(p => p.vp.SoLuong),
                                      ThanhTien = kq.Sum(p => p.vp.ThanhTien),
                                      TBNCTT = kq.Sum(p => p.vp.TBNCTT),
                                      TienNguonKhac = kq.Sum(p => p.vp.TienNguonKhac),
                                      TBNTT = kq.Sum(p => p.vp.TBNTT),
                                      TienBH = kq.Sum(p => p.vp.TienBH * p.vp.TyLeBHTT / 100),
                                      kq.Key.MienCT,
                                  }).ToList();
                    double tongcp1 = _ldvbn1.Count() > 0 ? _ldvbn.Sum(p => p.ThanhTien) : 0;
                    string kvuc = "";
                    if (_Benhnhan.KhuVuc != null)
                        kvuc = _Benhnhan.KhuVuc;
                    rep.MUCHUONG.Value = TinhMucHuong(dungtuyen, _muc, kvuc, tongcp1, _hangbv, _Benhnhan.NoiTru ?? 0, _Benhnhan.SThe, _Benhnhan.MaCS) + "%";
                    if (DungChung.Bien.MaBV != "24272")
                    {
                        if (tongcp1 < Bien.GHanTT100)
                            rep.MUCHUONG.Value = "100%";
                        else
                            rep.MUCHUONG.Value = TinhMucHuong(dungtuyen, _muc, kvuc, tongcp1, _hangbv, _Benhnhan.NoiTru ?? 0, _Benhnhan.SThe, _Benhnhan.MaCS) + "%";
                    }
                    #endregion

                    #region Load chi tiết

                    if (_lvp != null)
                    {
                        _NgayTT = _lvp.NgayTT.Value;
                        rep.NGAYKY.Value = DungChung.Ham.NgaySangChu(_lvp.NgayTT.Value, Bien.FormatDate);
                        rep.txtNgayKyGD.Text = Bien.MaBV == "20001" ? "...., ngày ... tháng ... năm ..." : DungChung.Ham.NgaySangChu(_lvp.NgayTT.Value, Bien.FormatDate);
                    }
                    if (Bien.MaBV == "14017")
                    {
                        rep.NGAYKY.Value = DungChung.Ham.NgaySangChu(_lvp.NgayTT.Value, 1);
                        rep.txtNgayKyGD.Text = "...., ngày ... tháng ... năm ...";
                    }
                    int GiaCuBH = DungChung.Ham.GiaCu(_mabn, 1);
                    int GiaCuDV = DungChung.Ham.GiaCu(_mabn, 0);
                    List<C_BKe_New> _lkq = new List<C_BKe_New>();
                    List<KPhong> _lkp = _dataContext.KPhongs.ToList();
                    //lấy số phim x-quang
                    var _lcls = (from cls in _dataContext.CLS.Where(p => p.MaBNhan == _mabn)
                                 join cd in _dataContext.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                 select new { cd.MaDV, cd.SoPhim, cd.IDCD, cd.TrongBH }).ToList();
                    var sophim = (from dv in dichvu.Where(p => p.TenRGTN == Bien.st_TieuNhomRG_ChuyenKhoa.X_Quang)
                                  join cls in _lcls.Where(p => p.SoPhim != null && p.TrongBH == 1) on dv.MaDV equals cls.MaDV
                                  select new
                                  {
                                      cls,
                                      dv.TrongDM
                                  }).ToList();
                    var sophim1 = (from dv1 in dichvu.Where(p => p.TenRGTN == Bien.st_TieuNhomRG_ChuyenKhoa.X_Quang)
                                   join cls1 in _lcls.Where(p => p.SoPhim != null && p.TrongBH == 1) on dv1.MaDV equals cls1.MaDV
                                   select new
                                   {
                                       cls1,
                                       dv1.TrongDM
                                   }).ToList();
                    int SoPhim = 0;
                    if (sophim.Count > 0)
                    {
                        if (Bien.MaBV == "27183")
                        {
                            SoPhim = sophim1.Where(p => p.TrongDM == 1).Sum(p => p.cls1.SoPhim) ?? 0;
                        }
                        else
                        {
                            SoPhim = sophim.Sum(p => p.cls.SoPhim) ?? 0;
                        }
                    }

                    //cong kham
                    var _lcongkham = (from vp in _ldvbn
                                      join dv in dichvu.Where(p => p.IDNhom == 13) on vp.MaDV equals dv.MaDV
                                      select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.STTTNhom, dv.DongY }).ToList();
                    if (_lcongkham.Count > 0)
                    {
                        foreach (var item in _lcongkham)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 1;
                            moi.TenNhom = "1. Khám bệnh";
                            moi.STTTieuN = item.STTTNhom != null ? Convert.ToInt32(item.STTTNhom) : 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = Math.Round(item.vp.DonGia * item.vp.SoLuong, Bien.LamTronSo, MidpointRounding.AwayFromZero); //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = Math.Round(item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeTT / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            //moi.TenDongTayY = "Khám bệnh";
                            _lkq.Add(moi);
                        }
                    }

                    //
                    //Ngày giường
                    var _lngaygiuong = (from vp in _ldvbn
                                        join dv in dichvu.Where(p => p.IDNhom == 15 || p.IDNhom == 14) on vp.MaDV equals dv.MaDV
                                        select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.IDNhom, dv.DongY }).ToList();
                    if (_lngaygiuong.Count > 0)
                    {
                        foreach (var item in _lngaygiuong)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 2;
                            moi.TenNhom = "2. Ngày giường";
                            moi.STTTieuN = item.IDNhom == 15 ? 2 : 1;
                            moi.TenTieuNhom = (_hangbv == 4 || Bien.MaBV == "30280" || Bien.MaBV == "30303") ? "2.3 Ngày giường lưu:" : (item.IDNhom == 15 ? "2.2. Ngày giường điều trị nội trú:" : "2.1. Ngày giường điều trị ngoại trú:");
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = Math.Round(item.vp.DonGia * item.vp.SoLuong, Bien.LamTronSo, MidpointRounding.AwayFromZero); //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = Math.Round(item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeTT / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            //moi.TenDongTayY = "Ngày giường";
                            _lkq.Add(moi);
                        }
                    }

                    //Công khám

                    //

                    //Xét nghiệm
                    var _lxetnghiem = (from vp in _ldvbn
                                       join dv in dichvu.Where(p => p.IDNhom == 1) on vp.MaDV equals dv.MaDV
                                       select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.STTTNhom }).ToList();
                    if (_lxetnghiem.Count > 0)
                    {
                        foreach (var item in _lxetnghiem)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 3;
                            moi.TenNhom = "3. Xét nghiệm";
                            moi.STTTieuN = item.STTTNhom != null ? Convert.ToInt32(item.STTTNhom) : 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            //moi.TenDongTayY = "Xét nghiệm";
                            _lkq.Add(moi);
                        }
                    }
                    //
                    //CĐHA
                    var _lcdha = (from vp in _ldvbn
                                  join dv in dichvu.Where(p => p.IDNhom == 2) on vp.MaDV equals dv.MaDV
                                  select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (_lcdha.Count > 0)
                    {
                        foreach (var item in _lcdha)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 4;
                            moi.TenNhom = "4. Chẩn đoán hình ảnh";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            //moi.TenDongTayY = "Chẩn đoán hình ảnh";
                            _lkq.Add(moi);
                        }
                    }
                    if (SoPhim > 0)
                    {
                        if (Bien.MaBV == "20001")
                            rep.SOPHIM.Value = _Benhnhan.NoiTru == 1 ? "" : "(Tôi đã nhận .... phim .... Xquang/CT/MRI)";
                        else if (Bien.MaBV == "14017")
                            rep.SOPHIM.Value = "(Tôi đã nhận .... phim .... Xquang/CT/MRI)";
                        else if (Bien.MaBV == "24012")
                        {
                            rep.SOPHIM.Value = "(Tôi đã nhận .... phim Xquang/CT/MRI)";
                        }
                        else
                            rep.SOPHIM.Value = "(Tôi đã nhận " + SoPhim.ToString() + " phim .... Xquang/CT/MRI)";
                    }
                    else
                    {
                        if (Bien.MaBV == "24009" && _Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false)
                            rep.SOPHIM.Value = "(Tôi đã nhận .... phim .... Xquang/CT/MRI)";
                    }
                    //
                    //thăm dò chức năng
                    var _ltdcn = (from vp in _ldvbn
                                  join dv in dichvu.Where(p => p.IDNhom == 3) on vp.MaDV equals dv.MaDV
                                  select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (_ltdcn.Count > 0)
                    {
                        foreach (var item in _ltdcn)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 6;
                            moi.TenNhom = "5. Thăm dò chức năng";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            //moi.TenDongTayY = "Thăm dò chức năng";
                            _lkq.Add(moi);
                        }
                    }
                    //
                    //thủ thuật, phẫu thuật
                    var _lttpt = (from vp in _ldvbn
                                  join dv in dichvu.Where(p => p.IDNhom == 8) on vp.MaDV equals dv.MaDV
                                  select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (_lttpt.Count > 0)
                    {
                        foreach (var item in _lttpt)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 7;
                            moi.TenNhom = "6. Thủ thuật, phẫu thuật";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = Math.Round(item.vp.DonGia * item.vp.SoLuong, Bien.LamTronSo, MidpointRounding.AwayFromZero); //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = Math.Round(item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeTT / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            //moi.TenDongTayY = "Thủ thuật, phẫu thuật";
                            _lkq.Add(moi);
                        }
                    }
                    //
                    //máu
                    var _lmau = (from vp in _ldvbn
                                 join dv in dichvu.Where(p => p.IDNhom == 7) on vp.MaDV equals dv.MaDV
                                 select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (_lmau.Count > 0)
                    {
                        foreach (var item in _lmau)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 8;
                            moi.TenNhom = "7. Máu, chế phẩm máu, vận chuyển máu";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            //moi.TenDongTayY = "Máu, chế phẩm máu, vận chuyển máu";
                            _lkq.Add(moi);
                        }
                    }
                    //

                    bool bnDieuTri = false;
                    if (Bien.MaBV == "20001" && (_Benhnhan.NoiTru == 1 || (_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == true)))
                        bnDieuTri = true;
                    //Thuốc, dịch truyền
                    var _lThuoc = (from vp in _ldvbn
                                   join dv in dichvu.Where(p => p.IDNhom == 5 || p.IDNhom == 6 || p.IDNhom == 4) on vp.MaDV equals dv.MaDV
                                   select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.HamLuong, dv.TenRG, dv.MaDV, dv.DongY }).ToList();
                    if (_lThuoc.Count > 0)
                    {
                        foreach (var item in _lThuoc)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 9;
                            moi.TenNhom = "8. Thuốc, dịch truyền";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            if (bnDieuTri)
                                moi.TenDV = item.TenRG;
                            else
                                moi.TenDV = (item.TenDV == null ? "" : item.TenDV) + (Bien.MaBV == "27001" ? (item.HamLuong == null ? "" : (" (" + item.HamLuong + ")")) : "");
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.MienCT == 1 ? 0 : Math.Round(item.vp.DonGia * item.vp.SoLuong, Bien.LamTronSo, MidpointRounding.AwayFromZero); //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.MienCT == 1 ? 0 : Math.Round(item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeTT / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                moi.TyLeTTDV = 100;
                                moi.TyLeTTBH = item.vp.TyLeTT;
                                moi.TienKhac = item.vp.TienNguonKhac ?? 0;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.MienCT == 1 ? 0 : item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                //moi.TienNgBH = item.vp.ThanhTien;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                moi.TyLeTTDV = item.vp.TyLeTT;
                                moi.TienKhac = item.vp.TienNguonKhac ?? 0;
                            }
                            moi.TenDongTayY = (item.DongY != 1 ? "Thuốc tây y, dịch truyền" : "Thuốc đông y");
                            _lkq.Add(moi);
                        }
                    }
                    //
                    //Vật tư y tế

                    var _lvtyt = (from vp in _ldvbn
                                  join dv in dichvu.Where(p => p.IDNhom == 10 || p.IDNhom == 11) on vp.MaDV equals dv.MaDV
                                  select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.MaDV, dv.GiaBHGioiHanTT }).ToList();
                    if (_lvtyt.Count > 0)
                    {
                        foreach (var item in _lvtyt)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 10;
                            moi.TenNhom = "9. Vật tư y tế";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.MienCT == 1 ? 0 : item.vp.DonGia * item.vp.SoLuong;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                                if (Bien.MaBV == "27022" && item.GiaBHGioiHanTT > 0 && item.GiaBHGioiHanTT == item.vp.DonGia)
                                {
                                    var qdtct = (from dt in _dataContext.DThuocs.Where(p => p.MaBNhan == _mabn)
                                                 join dtct in _dataContext.DThuoccts
                                                 on dt.IDDon equals dtct.IDDon
                                                 where (dtct.MaDV == item.MaDV && dtct.TrongBH == item.vp.TrongBH && dtct.TyLeTT == item.vp.TyLeTT)
                                                 select dtct).FirstOrDefault();
                                    if (qdtct != null && qdtct.DonGia > item.GiaBHGioiHanTT)
                                    {
                                        moi.DonGiaBV = qdtct.DonGia;
                                        moi.ThanhTienBV = item.vp.ThanhTien;
                                    }
                                }
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.MienCT == 1 ? 0 : item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            //moi.TenDongTayY = "Vật tư y tế";
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            _lkq.Add(moi);
                        }
                    }
                    //

                    // gói vật tư
                    var _ldvbngoi = (from vp in _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn)
                                     join vpct in _dataContext.VienPhicts.Where(p => _idper1 == 0 ? true : p.IDPerson == _idper1).Where(p => p.TrongBH != 2).Where(p => p.ThanhToan == 0).Where(p => p.AttachIDDonct != null && p.AttachIDDonct > 0).Where(p => p.NgayYLenh <= _ngayTachThe) on vp.idVPhi equals vpct.idVPhi
                                     group new { vp, vpct } by new { vp.MaBNhan, vp.NgayTT, vpct.MaDV, vpct.TBNTT, vpct.TBNCTT, vpct.TrongBH, vpct.DonVi, vpct.DonGia, vpct.TyLeTT, vpct.TyLeBHTT, vpct.AttachIDDonct, vpct.IDPerson, vpct.MienCT } into kq
                                     select new
                                     {
                                         kq.Key.MaBNhan,
                                         kq.Key.NgayTT,
                                         kq.Key.MaDV,
                                         kq.Key.TrongBH,
                                         kq.Key.DonVi,
                                         kq.Key.DonGia,
                                         kq.Key.TyLeTT,
                                         kq.Key.TyLeBHTT,
                                         kq.Key.AttachIDDonct,
                                         kq.Key.IDPerson,
                                         kq.Key.MienCT,
                                         SoLuong = kq.Sum(p => p.vpct.SoLuong),
                                         ThanhTien = kq.Sum(p => p.vpct.ThanhTien),
                                         TBNCTT = kq.Sum(p => p.vpct.TBNCTT),
                                         TienBH = kq.Sum(p => p.vpct.TienBH * p.vpct.TyLeBHTT / 100),
                                         TBNTT = kq.Sum(p => p.vpct.TBNTT),
                                     }).ToList();
                    var _lvtytgoi = (from vp in _ldvbngoi.Where(p => p.AttachIDDonct != null && p.AttachIDDonct > 0)
                                     join dv in dichvu.Where(p => p.IDNhom == 10 || p.IDNhom == 11) on vp.MaDV equals dv.MaDV
                                     select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.GiaBHGioiHanTT, dv.TenDV, vp.MaDV, vp.AttachIDDonct, vp.ThanhTien }).ToList();
                    if (_lvtytgoi.Count > 0)
                    {
                        var dthuoc = (from dt in _dataContext.DThuocs.Where(p => p.MaBNhan == _mabn)
                                      join dtct in _dataContext.DThuoccts on dt.IDDon equals dtct.IDDon
                                      select new { dtct.IDDonct, dtct.MaDV, dtct.TrongBH, dtct.DonGia, dtct.TyLeTT }).ToList();
                        var _lAttachIDDonct = _lvtytgoi.Select(p => p.AttachIDDonct).Distinct().ToList();
                        int sttg = 1;
                        foreach (var a in _lAttachIDDonct)
                        {
                            var tendv0 = (from dt in dthuoc.Where(p => p.IDDonct == a)
                                          join dv in dichvu on dt.MaDV equals dv.MaDV
                                          select new { dv.TenDV, dv.MaDV, dt.TrongBH, dt.DonGia, dt.TyLeTT }).ToList();
                            var tendv = (from dt in tendv0
                                         select new { dt.TenDV }).FirstOrDefault();
                            if (tendv != null)
                            {
                                string tengoi = "10." + sttg.ToString() + " Gói vật tư y tế " + sttg.ToString() + " (" + tendv.TenDV.ToString() + ")";
                                foreach (var item in _lvtytgoi.Where(p => p.AttachIDDonct == a).ToList())
                                {
                                    C_BKe_New moi = new C_BKe_New();
                                    moi.STTNhom = 11;
                                    moi.TenNhom = "10. Gói vật tư y tế";

                                    moi.STTTieuN = sttg;
                                    moi.TenTieuNhom = tengoi;
                                    moi.TenDV = item.TenDV;
                                    moi.SoLuong = item.vp.SoLuong;
                                    moi.DonVi = item.vp.DonVi;
                                    moi.Mien = item.vp.MienCT;
                                    if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                                    {
                                        moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                        moi.DonGiaBH = item.vp.DonGia;
                                        moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                        moi.ThanhTienBH = item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;
                                        moi.TienBH = item.vp.TienBH;
                                        moi.TienBN = item.vp.TBNCTT;
                                        moi.TienNgBH = item.vp.TBNTT;
                                        if (DungChung.Bien.MaBV == "24272")
                                            moi.TyLeTTBH = item.vp.TyLeBHTT;
                                        else
                                            moi.TyLeTTBH = 100;
                                        if (Bien.MaBV == "27022" && item.GiaBHGioiHanTT > 0 && item.GiaBHGioiHanTT == item.vp.DonGia)
                                        {
                                            var qdtct = (from dtct in tendv0
                                                         where (dtct.MaDV == item.MaDV.Value && dtct.TrongBH == item.vp.TrongBH && dtct.TyLeTT == item.vp.TyLeTT)
                                                         select dtct).FirstOrDefault();
                                            if (qdtct != null && qdtct.DonGia > item.GiaBHGioiHanTT)
                                            {
                                                moi.DonGiaBV = qdtct.DonGia;
                                                moi.ThanhTienBV = item.ThanhTien;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        moi.DonGiaBV = item.vp.DonGia;
                                        moi.ThanhTienBV = item.vp.ThanhTien;
                                        moi.TyLeTTBH = 0;
                                        moi.TienBH = item.vp.TienBH;
                                        moi.TienBN = item.vp.TBNCTT;
                                        moi.TienNgBH = item.vp.TBNTT;
                                    }
                                    //moi.TenDongTayY = "Gói vật tư y tế";
                                    moi.TyLeTTDV = item.vp.TyLeTT;
                                    _lkq.Add(moi);
                                }
                                sttg++;
                            }
                        }
                    }
                    //thuốc được kê là dịch vụ đính kèm thì lên vào nhóm thuốc
                    var _thuocgoi = (from vp in _ldvbngoi.Where(p => p.AttachIDDonct != null && p.AttachIDDonct > 0)
                                     join dv in dichvu.Where(p => p.IDNhom == 5 || p.IDNhom == 6 || p.IDNhom == 4) on vp.MaDV equals dv.MaDV
                                     select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.TenRG, dv.DongY }).ToList();
                    if (_thuocgoi.Count > 0)
                    {
                        foreach (var item in _thuocgoi)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 9;
                            moi.TenNhom = "8. Thuốc, dịch truyền";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            if (bnDieuTri)
                                moi.TenDV = item.TenRG;
                            else
                                moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1)
                            {
                                moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.MienCT == 1 ? 0 : item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.MienCT == 1 ? 0 : item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            moi.TenDongTayY = (item.DongY == 1 ? "Thuốc đông y" : "Thuốc tây y");
                            _lkq.Add(moi);
                        }
                    }
                    //
                    //vận chuyển
                    var _lvanchuyen = (from vp in _ldvbn
                                       join dv in dichvu.Where(p => p.IDNhom == 12) on vp.MaDV equals dv.MaDV
                                       select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (_lvanchuyen.Count > 0)
                    {
                        foreach (var item in _lvanchuyen)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 12;
                            moi.TenNhom = "11. Vận chuyển người bệnh";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            //moi.TenDongTayY = "Vận chuyển người bệnh";
                            _lkq.Add(moi);
                        }
                    }
                    var _lhoachat = (from vp in _ldvbn
                                     join dv in dichvu.Where(p => p.IDNhom > 17) on vp.MaDV equals dv.MaDV
                                     select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (_lhoachat.Count > 0)
                    {
                        foreach (var item in _lhoachat)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 13;
                            moi.TenNhom = "12. Khác";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                if (DungChung.Bien.MaBV == "24272")
                                    moi.TyLeTTBH = item.vp.TyLeBHTT;
                                else
                                    moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            //moi.TenDongTayY = "Khác";
                            _lkq.Add(moi);
                        }
                    }
                    //
                    if (_lkq.Count > 0)
                    {
                        double tongcp = 0, tienBh = 0, tienbn = 0, tienbnngoai = 0;
                        double nguonkhac = 0;
                        tienBh = _ldvbn0.Sum(p => p.TienBH);
                        tienbn = _ldvbn0.Sum(p => p.TBNCTT);
                        nguonkhac = _ldvbn0.Sum(p => p.TienNguonKhac) ?? 0;
                        tienbnngoai = _ldvbn0.Sum(p => p.TBNTT);
                        tongcp = tienBh + tienbn + tienbnngoai + nguonkhac;
                        rep.TONGCHIPHI.Value = Math.Round(tongcp, 0).ToString("###,###");
                        rep.TIENCHU.Value = DungChung.Ham.DocTienBangChu(Math.Round(tongcp, 0), " đồng)");
                        rep.TIENBH.Value = tienBh > 0 ? (Math.Round(tienBh, 0).ToString("###,###") + " đồng") : "0 đồng";
                        rep.TIENBN.Value = tienbn > 0 ? (Math.Round(tienbn, 0).ToString("###,###") + " đồng") : "0 đồng";
                        rep.TIENBNDV.Value = tienbnngoai > 0 ? (Math.Round(tienbnngoai, 0).ToString("###,###") + " đồng") : "0 đồng";
                        rep.TIENNGUONKHAC.Value = nguonkhac > 0 ? (Math.Round(nguonkhac, 0).ToString("###,###") + " đồng") : "0 đồng";
                        #endregion
                        rep.DataSource = _lkq.Where(p => p.Mien == 0).OrderBy(p => p.STTNhom).ThenBy(p => p.STTTieuN).ThenBy(p => p.TenDV).ToList();
                        rep.Bindingdata();
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                        if (_lkq.Where(p => p.Mien == 1).ToList().Count() > 0)
                        {
                            BaoCao.Rep_Bke_New_2018TK_34019 rep1 = new BaoCao.Rep_Bke_New_2018TK_34019(_idper2, _mabn);
                            List<C_BKe_New> _lthuocmien = new List<C_BKe_New>();
                            _lthuocmien = _lkq.Where(p => p.Mien == 1).ToList();
                            rep1.TIEUDE.Value = "BẢNG KÊ THUỐC THUỘC NGUỒN CHƯƠNG TRÌNH MỤC TIÊU";
                            foreach (var item in _lthuocmien)
                            {
                                if (item.STTNhom == 9)
                                    item.TenNhom = "Thuốc trong danh mục";
                                if (item.STTNhom == 10)
                                    item.TenNhom = "Vật tư y tế";

                                item.DonGiaBV = 0;
                                item.DonGiaBH = 0;
                                item.ThanhTienBV = 0;
                                item.ThanhTienBH = 0;
                                item.TienBH = 0;
                                item.TienBN = 0;
                                item.TienNgBH = 0;
                                item.TyLeTTBH = 0;
                                item.TyLeTTDV = 0;
                            }
                            #region TT hành chính
                            rep1.TENCQCQ.Value = Bien.TenCQCQ;
                            rep1.CQ.Value = Bien.TenCQ;
                            rep1.MABN.Value = "Mã số người bệnh: " + _mabn.ToString();
                            //rep1.MAKHOA.Value = "Mã khoa:";
                            rep1.CodeMaBN.Text = _mabn.ToString();
                            rep1.TONGCHIPHI.Value = "0";
                            rep1.TIENCHU.Value = "Không đồng";
                            if (_Benhnhan != null)
                            {
                                _khuvuc = _Benhnhan.KhuVuc;
                                _noitru = _Benhnhan.NoiTru ?? 0;
                                if (_Benhnhan.DTuong == "BHYT")
                                {
                                    if (_Benhnhan.CapCuu == 1)
                                    {
                                        malydo = 2;
                                    }
                                    else
                                    {
                                        if (_Benhnhan.Tuyen == 1)
                                        {
                                            malydo = checkThongTuyen(_Benhnhan.MaKCB, _Benhnhan.MaCS);
                                        }
                                        else
                                        {
                                            malydo = 3;
                                        }
                                    }
                                }
                                string tieude = (_Benhnhan.NoiTru == 1) ? "Điều trị nội trú" : ((_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "Khám bệnh" : "Điều trị ngoại trú");
                                string ttt = (_Benhnhan.NoiTru == 1) ? "3" : ((_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "1" : "2");
                                string mauso = _hangbv == 4 ? "01/TYT" : ((_Benhnhan.NoiTru == 1) ? "01/BV" : ((_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "01/KBCB" : "01/BV"));
                                rep1.MAUSO.Value = "Mẫu số: " + mauso;
                                if (Bien.MaBV == "14017")
                                {
                                    rep1.SOKHAMBENH.Value = "Số khám bệnh: " + _Benhnhan.SoTT.ToString() + "/2021";
                                }
                                else
                                {
                                    rep1.SOKHAMBENH.Value = "Số khám bệnh: " + _mabn.ToString();
                                }

                                rep1.TTTT.Value = ttt;
                                capcuu = int.Parse(_Benhnhan.CapCuu.ToString());
                                rep1.TENBN.Value = _Benhnhan.TenBNhan.ToUpper();
                                //rep1.txttenbn.Text = _Benhnhan.TenBNhan;
                                rep1.txtketoanvp.Text = _hangbv < 4 ? Bien.KeToanVP : "";
                                rep1.txtgiamdinh.Text = _hangbv < 4 ? (_noitru == 0 ? Bien.GiamDinhBH : Bien.GiamDinhBH2) : "";
                                rep1.NGAYSINH.Value = _Benhnhan.NgaySinh + "/" + _Benhnhan.ThangSinh + "/" + _Benhnhan.NamSinh;
                                rep1.GTINH.Value = _Benhnhan.GTinh == 1 ? "Nam" : "Nữ";
                                rep1.DCHI.Value = _Benhnhan.DChi;
                                rep1.KHUVUC.Value = _Benhnhan.KhuVuc;
                                if (!string.IsNullOrEmpty(_Benhnhan.SThe.ToString()) && _Benhnhan.SThe.Length >= 15)
                                {
                                    rep1.THE1.Value = _Benhnhan.SThe.Substring(0, 2);
                                    rep1.THE2.Value = _Benhnhan.SThe.Substring(2, 1);
                                    rep1.THE3.Value = _Benhnhan.SThe.Substring(3, 2);
                                    rep1.THE4.Value = _Benhnhan.SThe.Substring(5);
                                }
                                rep1.GHANTHE.Value = "Giá trị từ " + _Benhnhan.HanBHTu.Value.ToShortDateString() + " đến " + _Benhnhan.HanBHDen.Value.ToShortDateString();
                                if (!string.IsNullOrEmpty(_Benhnhan.MaCS))
                                {
                                    var Mabvdk = _bv.Where(p => p.MaBV == _Benhnhan.MaCS).Select(p => new { p.TenBV, p.MaBV }).FirstOrDefault();
                                    if (Mabvdk != null)
                                    {
                                        rep1.TENKCBBD.Value = Mabvdk.TenBV.ToString();
                                        rep1.MAKCBBD.Value = Mabvdk.MaBV.ToString();
                                    }
                                }
                                //rep1.NNHAP.Value = _Benhnhan.NNhap.Value.Hour + " giờ " + _Benhnhan.NNhap.Value.Minute + " phút, ngày " + _Benhnhan.NNhap.Value.ToShortDateString();
                                if (DungChung.Bien.MaBV == "27001")
                                {
                                    if (_Benhnhan != null && _Benhnhan.NNhap != null)
                                        rep1.NNHAP.Value = _Benhnhan.NNhap.Value.Hour + " giờ " + _Benhnhan.NNhap.Value.Minute + " phút, ngày " + _Benhnhan.NNhap.Value.ToShortDateString();
                                }
                                else
                                {
                                    if (_kb != null && _kb.NgayKham != null)
                                        rep1.NNHAP.Value = _kb.NgayKham.Value.Hour + " giờ " + _kb.NgayKham.Value.Minute + " phút, ngày " + _kb.NgayKham.Value.ToShortDateString();
                                }
                                if (_Benhnhan.Tuyen != null)
                                    dungtuyen = int.Parse(_Benhnhan.Tuyen.ToString());
                                switch (malydo)
                                {
                                    case 1:
                                        rep1.DUNGTUYEN.Value = "X";
                                        break;

                                    case 2:
                                        rep1.CAPCUU.Value = "X";
                                        break;

                                    case 3:
                                        rep1.TRAITUYEN.Value = "X";
                                        break;

                                    case 4:
                                        rep1.THONGTUYEN.Value = "X";
                                        break;
                                }
                                if (_Benhnhan.MucHuong != null && _Benhnhan.MucHuong.ToString() != "")
                                    _muc = _Benhnhan.MucHuong.ToString();
                                if (_Benhnhan.NgayHM.Value.Year > 1)
                                {
                                    rep1.DU5NAM.Value = _Benhnhan.NgayHM.Value.ToShortDateString();
                                }
                                else
                                {
                                    rep1.DU5NAM.Value = "    /    /     ";
                                }
                                rep1.DU1NAM.Value = "    /    /     ";
                            }


                            if (_lvv != null)
                            {
                                rep.NGAYVV.Value = _lvv.NgayVao.Value.Hour + " giờ " + _lvv.NgayVao.Value.Minute + " phút, ngày " + _lvv.NgayVao.Value.ToShortDateString();
                            }
                            if (_lrv != null)
                            {
                                if (ktra2the.Count() == 2 && _lvp.NgayTachCP != null)
                                    rep1.CPKCB.Value = "Chi phí KCB tính từ ngày " + _Benhnhan.NNhap.Value.ToShortDateString() + " đến ngày " + _lvp.NgayTachCP.Value.ToShortDateString();
                                else
                                    rep1.CPKCB.Value = "Chi phí KCB tính từ ngày " + _Benhnhan.NNhap.Value.ToShortDateString() + " đến ngày " + _lrv.NgayRa.Value.ToShortDateString();
                                rep1.NGAYRV.Value = _lrv.NgayRa.Value.Hour + " giờ " + _lrv.NgayRa.Value.Minute + " phút, ngày " + _lrv.NgayRa.Value.ToShortDateString();
                                rep1.SONGDTRI.Value = _lrv.SoNgaydt;
                                rep1.TTRAVIEN.Value = (_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "1" : ((_lrv.KetQua == Bien._ketQuaDT[0] || _lrv.KetQua == Bien._ketQuaDT[1]) ? "1" : "2");
                                string _mabvchuyenden = "", _mabvchuyendi = "";
                                if (_lrv.MaBVC != null)
                                {
                                    _mabvchuyendi = _lrv.MaBVC;
                                    var bv = _bv.Where(p => p.MaBV == (_mabvchuyendi)).ToList();
                                    if (bv.Count > 0)
                                    {
                                        rep1.NOICHUYENDI.Value = bv.First().TenBV;
                                    }
                                }
                                if (!string.IsNullOrEmpty(_Benhnhan.MaBV))
                                {
                                    _mabvchuyenden = _Benhnhan.MaBV;
                                    var bv = _bv.Where(p => p.MaBV == (_mabvchuyenden)).ToList();
                                    if (bv.Count > 0)
                                    {
                                        rep1.NOICDEN.Value = bv.First().TenBV;
                                    }
                                }

                                if (_lrv.MaKP != null)
                                {
                                    int makp = int.Parse(_lrv.MaKP.ToString());
                                    var tenkp = _dataContext.KPhongs.Where(p => p.MaKP == makp).Select(p => new { p.TenKP, p.MaQD }).FirstOrDefault();
                                    if (tenkp != null)
                                    {
                                        rep1.KHOA.Value = tenkp.MaQD + " - " + tenkp.TenKP;
                                        //rep1.MAKHOA.Value = "Mã khoa: " + tenkp.MaQD;
                                    }

                                    if (_lrv.MaICD.Contains(";"))
                                    {
                                        string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                                        rep1.CHANDOANMA.Value = arricd[0];
                                        string icdkhac = "";
                                        if (arricd.Count() > 1)
                                        {
                                            for (int i = 1; i < arricd.Count(); i++)
                                            {
                                                icdkhac += arricd[i] + ";";
                                            }
                                        }
                                        rep1.BENHPHUMA.Value = DungChung.Ham.FreshString(icdkhac);
                                    }
                                    else
                                    {
                                        //rep1.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);
                                        rep1.CHANDOANMA.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                                    }
                                    if (_lrv.ChanDoan.Contains(";"))
                                    {
                                        string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                                        rep1.CHANDOAN.Value = arrchandoan[0];
                                        string cdkhac = "";
                                        if (arrchandoan.Count() > 1)
                                        {
                                            for (int i = 1; i < arrchandoan.Count(); i++)
                                            {
                                                cdkhac += arrchandoan[i] + ";";
                                            }
                                        }
                                        rep1.BENHPHU.Value = DungChung.Ham.FreshString(cdkhac);
                                    }
                                    else
                                    {
                                        rep1.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);
                                    }
                                    //}
                                }
                            }
                            rep1.MUCHUONG.Value = TinhMucHuong(dungtuyen, _muc, kvuc, tongcp1, _hangbv, _Benhnhan.NoiTru ?? 0, _Benhnhan.SThe, _Benhnhan.MaCS) + "%";
                            #endregion
                            if (_lvp != null)
                            {
                                _NgayTT = _lvp.NgayTT.Value;
                                rep1.NGAYKY.Value = DungChung.Ham.NgaySangChu(_lvp.NgayTT.Value, Bien.FormatDate);
                            }
                            rep1.DataSource = _lthuocmien.OrderBy(p => p.STTNhom).ThenBy(p => p.STTTieuN).ThenBy(p => p.TenDV).ToList();
                            rep1.Bindingdata();
                            rep1.CreateDocument();
                            frm.prcIN.PrintingSystem = rep1.PrintingSystem;
                            frm.ShowDialog();
                        }
                    }
                    #endregion
                }
                else
                {
                    #region In dọc
                    int _idvp = _lvp != null ? _lvp.idVPhi : 0;
                    var ktra2the = _dataContext.VienPhicts.Where(p => p.idVPhi == _idvp).Select(p => p.IDPerson).Distinct().ToList();

                    if (ktra2the.Count() == 2)
                    {
                        _idper1 = ktra2the.First().Value;
                        _idper2 = ktra2the.Last().Value;
                    }
                    BaoCao.Rep_Bke_New_2018TK_InDoc rep = new BaoCao.Rep_Bke_New_2018TK_InDoc(_idper2, _mabn);
                    #region TT hành chính
                    rep.TENCQCQ.Value = Bien.TenCQCQ.ToUpper();
                    rep.CQ.Value = Bien.TenCQ.ToUpper();
                    rep.MABN.Value = "Mã số người bệnh: " + _mabn.ToString();
                    rep.MAKHOA.Value = "Mã khoa:";
                    if (_bnkb.Count > 0 && Bien.MaBV == "30003")
                    {
                        rep.BSCD.Value = _bnkb.Last().TenCB;
                    }
                    else
                    {
                        rep.BSCD.Value = Bien.NguoiLapBieu;
                    }
                    if (_Benhnhan != null)
                    {
                        _khuvuc = _Benhnhan.KhuVuc;
                        _noitru = _Benhnhan.NoiTru ?? 0;
                        if (_Benhnhan.DTuong == "BHYT")
                        {
                            if (_Benhnhan.CapCuu == 1)
                            {
                                malydo = 2;
                            }
                            else
                            {
                                if (_Benhnhan.Tuyen == 1)
                                {
                                    malydo = checkThongTuyen(_Benhnhan.MaKCB, _Benhnhan.MaCS);
                                }
                                else
                                {
                                    malydo = 3;
                                }
                            }
                        }
                        string tieude = (_Benhnhan.NoiTru == 1) ? "Điều trị nội trú" : ((_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "Khám bệnh" : "Điều trị ngoại trú");
                        string ttt = (_Benhnhan.NoiTru == 1) ? "3" : ((_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "1" : "2");
                        string mauso = _hangbv == 4 ? "01/TYT" : ((_Benhnhan.NoiTru == 1) ? "01/BV" : ((_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "01/KBCB" : "01/BV"));
                        rep.MAUSO.Value = (Bien.MaBV == "20001") ? "Mẫu số: 01/KCB" : "Mẫu số: " + mauso;
                        rep.MAUSO.Value = (Bien.MaBV == "27001") ? "Mẫu số: 01/KBCB" : "Mẫu số: " + mauso;
                        rep.SOKHAMBENH.Value = "Số khám bệnh: " + _mabn.ToString();
                        rep.TIEUDE.Value = "BẢNG KÊ CHI PHÍ " + tieude.ToUpper();
                        rep.TTTT.Value = ttt;
                        capcuu = int.Parse(_Benhnhan.CapCuu.ToString());
                        rep.TENBN.Value = _Benhnhan.TenBNhan.ToUpper();
                        if (Bien.MaBV == "30005")
                        {
                            rep.txtketoanvp.Text = Bien.KeToanVP;
                            rep.KetoanVP.Value = Bien.KeToanVP;
                        }
                        else
                            rep.txtketoanvp.Text = _hangbv < 4 ? Bien.KeToanVP : "";
                        rep.txtgiamdinh.Text = _hangbv < 4 ? (_noitru == 0 ? Bien.GiamDinhBH : Bien.GiamDinhBH2) : "";
                        rep.NGAYSINH.Value = _Benhnhan.NgaySinh + "/" + _Benhnhan.ThangSinh + "/" + _Benhnhan.NamSinh;
                        rep.GTINH.Value = _Benhnhan.GTinh == 1 ? "Nam" : "Nữ";
                        rep.DCHI.Value = _Benhnhan.DChi;
                        rep.KHUVUC.Value = _Benhnhan.KhuVuc;
                        if (!string.IsNullOrEmpty(_Benhnhan.SThe.ToString()) && _Benhnhan.SThe.Length >= 15)
                        {
                            rep.THE1.Value = _Benhnhan.SThe.Substring(0, 2);
                            rep.THE2.Value = _Benhnhan.SThe.Substring(2, 1);
                            rep.THE3.Value = _Benhnhan.SThe.Substring(3, 2);
                            rep.THE4.Value = _Benhnhan.SThe.Substring(5);
                            rep.GHANTHE.Value = "Giá trị từ " + _Benhnhan.HanBHTu.Value.ToShortDateString() + " đến " + _Benhnhan.HanBHDen.Value.ToShortDateString();
                            if (_Benhnhan.NgayHM != null && _Benhnhan.NgayHM.Value.Year > 1)
                            {
                                rep.DU5NAM.Value = _Benhnhan.NgayHM.Value.ToShortDateString();
                            }
                            else
                            {
                                rep.DU5NAM.Value = "    /    /     ";
                            }
                        }

                        if (!string.IsNullOrEmpty(_Benhnhan.MaCS))
                        {
                            var Mabvdk = _bv.Where(p => p.MaBV == _Benhnhan.MaCS).Select(p => new { p.TenBV, p.MaBV }).FirstOrDefault();
                            if (Mabvdk != null)
                            {
                                rep.TENKCBBD.Value = Mabvdk.TenBV.ToString();
                                rep.MAKCBBD.Value = Mabvdk.MaBV.ToString();
                            }
                        }
                        if (_kb != null && _kb.NgayKham != null)
                        {
                            if (Bien.MaBV == "27022")
                            {
                                var bn = _dataContext.BenhNhans.Where(p => p.MaBNhan == _mabn).ToList();
                                if (bn.Count > 0)
                                {
                                    rep.NNHAP.Value = bn.First().NNhap.Value.Hour + " giờ " + bn.First().NNhap.Value.Minute + " phút, ngày " + bn.First().NNhap.Value.ToShortDateString();
                                }
                            }
                            else
                            {
                                if (DungChung.Bien.MaBV == "27001")
                                {
                                    if (_Benhnhan != null && _Benhnhan.NNhap != null)
                                        rep.NNHAP.Value = _Benhnhan.NNhap.Value.Hour + " giờ " + _Benhnhan.NNhap.Value.Minute + " phút, ngày " + _Benhnhan.NNhap.Value.ToShortDateString();
                                }
                                else
                                {
                                    if (_kb != null && _kb.NgayKham != null)
                                        rep.NNHAP.Value = _kb.NgayKham.Value.Hour + " giờ " + _kb.NgayKham.Value.Minute + " phút, ngày " + _kb.NgayKham.Value.ToShortDateString();
                                }
                            }
                        }
                        if (_Benhnhan.Tuyen != null)
                            dungtuyen = int.Parse(_Benhnhan.Tuyen.ToString());
                        switch (malydo)
                        {
                            case 1:
                                rep.DUNGTUYEN.Value = "X";
                                break;

                            case 2:
                                rep.CAPCUU.Value = "X";
                                break;

                            case 3:
                                rep.TRAITUYEN.Value = "X";
                                break;

                            case 4:
                                rep.THONGTUYEN.Value = "X";
                                break;
                        }
                        if (_Benhnhan.MucHuong != null && _Benhnhan.MucHuong.ToString() != "")
                            _muc = _Benhnhan.MucHuong.ToString();

                        rep.DU1NAM.Value = "    /    /     ";
                    }

                    if (_lvv != null)
                    {
                        rep.NGAYVV.Value = _lvv.NgayVao.Value.Hour + " giờ " + _lvv.NgayVao.Value.Minute + " phút, ngày " + _lvv.NgayVao.Value.ToShortDateString();
                    }
                    if (_lrv != null)
                    {
                        ////if (ktra2the.Count() == 2 && _lvp.NgayTachCP != null)
                        //if (ktra2the.Count() == 2)
                        //{
                        //    if (_lvp.NgayTachCP != null)
                        //    {
                        //        rep.CPKCB.Value = "Chi phí KCB tính từ ngày " + _Benhnhan.NNhap.Value.ToShortDateString() + " đến ngày " + _lvp.NgayTachCP.Value.ToShortDateString();
                        //    }
                        //    else
                        //    {
                        //        if (!string.IsNullOrEmpty(_lTttbx.TTTheBHYTold) && _lTttbx.TTTheBHYTold.Contains(';'))
                        //        {
                        //            var listTTBS = _lTttbx.TTTheBHYTold.Split(';').ToList();
                        //            string gtTheTu = listTTBS[5];
                        //        }
                        //    }
                        //}

                        //else
                        //    rep.CPKCB.Value = "Chi phí KCB tính từ ngày " + _Benhnhan.NNhap.Value.ToShortDateString() + " đến ngày " + _lrv.NgayRa.Value.ToShortDateString();
                        //QUANNV update ngay 30/08/2022
                        if (!string.IsNullOrEmpty(_lTttbx.TTTheBHYTold) && _lTttbx.TTTheBHYTold.Contains(';'))
                        {
                            var listTTBS = _lTttbx.TTTheBHYTold.Split(';').ToList();
                            string gtTheTu = listTTBS[5];
                            DateTime gtthetu = DateTime.Parse(gtTheTu);
                            DateTime date = gtthetu.AddDays(-1);
                            if (_lvp.NgayTachCP != null)
                            {
                                rep.CPKCB.Value = "Chi phí KCB tính từ ngày " + _Benhnhan.NNhap.Value.ToShortDateString() + " đến ngày " + _lvp.NgayTachCP.Value.ToShortDateString();
                            }
                            else rep.CPKCB.Value = "Chi phí KCB tính từ ngày " + _Benhnhan.NNhap.Value.ToShortDateString() + " đến ngày " + date.ToShortDateString();
                        }
                        else rep.CPKCB.Value = "Chi phí KCB tính từ ngày " + _Benhnhan.NNhap.Value.ToShortDateString() + " đến ngày " + _lrv.NgayRa.Value.ToShortDateString();

                        rep.NGAYRV.Value = _lrv.NgayRa.Value.Hour + " giờ " + _lrv.NgayRa.Value.Minute + " phút, ngày " + _lrv.NgayRa.Value.ToShortDateString();
                        rep.SONGDTRI.Value = _lrv.SoNgaydt;
                        rep.TTRAVIEN.Value = (_lrv.Status == 1 && _Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "2" : (_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "1" : ((_lrv.KetQua == Bien._ketQuaDT[0] || _lrv.KetQua == Bien._ketQuaDT[1]) ? "1" : "2");
                        string _mabvchuyenden = "", _mabvchuyendi = "";
                        if (_lrv.MaBVC != null)
                        {
                            _mabvchuyendi = _lrv.MaBVC;
                            var bv = _bv.Where(p => p.MaBV == (_mabvchuyendi)).ToList();
                            if (bv.Count > 0)
                            {
                                rep.NOICHUYENDI.Value = bv.First().TenBV;
                            }
                        }
                        if (!string.IsNullOrEmpty(_Benhnhan.MaBV))
                        {
                            _mabvchuyenden = _Benhnhan.MaBV;
                            var bv = _bv.Where(p => p.MaBV == (_mabvchuyenden)).ToList();
                            if (bv.Count > 0)
                            {
                                rep.NOICDEN.Value = bv.First().TenBV;
                            }
                        }

                        if (_lrv.MaKP != null)
                        {
                            int makp = int.Parse(_lrv.MaKP.ToString());
                            var tenkp = _dataContext.KPhongs.Where(p => p.MaKP == makp).Select(p => new { p.PLoai, p.TenKP, p.MaQD, p.IsDongY }).FirstOrDefault();
                            if (tenkp != null)
                            {
                                if (DungChung.Bien.MaBV == "27001")
                                {
                                    if (tenkp.PLoai.ToUpper().Contains("LÂM SÀNG"))
                                    {
                                        rep.KHOA.Value = "Khoa: " + tenkp.TenKP;
                                        rep.MAKHOA.Value = "Mã khoa: " + tenkp.MaQD;
                                    }
                                    else
                                    {
                                        rep.KHOA.Value = "Khoa:Khoa khám bệnh - " + tenkp.TenKP;
                                        rep.MAKHOA.Value = "Mã khoa: " + tenkp.MaQD;
                                    }
                                }
                                else
                                {
                                    rep.KHOA.Value = "Khoa: " + tenkp.TenKP;
                                    rep.MAKHOA.Value = "Mã khoa: " + tenkp.MaQD;
                                }
                            }
                            if (Bien.MaBV == "20001")
                            {
                                if (string.IsNullOrEmpty(_lrv.MaYHCT))
                                {
                                    if (_lrv.MaICD.Contains(";"))
                                    {
                                        string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');

                                        if (Bien.MaBV == "24297" && tenkp.IsDongY == true)
                                        {
                                            var q1 = _licd10.Where(p => p.MaICD == arricd[0]).FirstOrDefault();
                                            if (q1 != null)
                                            {
                                                rep.CHANDOANMA.Value = q1.MaYHCT; //+"[" + arricd[0] + "]";
                                            }
                                        }
                                        else { rep.CHANDOANMA.Value = arricd[0]; }

                                        string icdkhac = "";
                                        if (arricd.Count() > 1)
                                        {
                                            for (int i = 1; i < arricd.Count(); i++)
                                            {
                                                icdkhac += arricd[i] + ";";
                                            }
                                        }
                                        rep.BENHPHUMA.Value = DungChung.Ham.FreshString(icdkhac);
                                    }
                                    else
                                    {
                                        if (Bien.MaBV == "24297" && tenkp.IsDongY == true)
                                        {
                                            var q1 = _licd10.Where(p => p.MaICD == _lrv.MaICD).FirstOrDefault();
                                            if (q1 != null)
                                            {
                                                rep.CHANDOANMA.Value = q1.MaYHCT; //+ "[" + _lrv.MaICD + "]";
                                            }
                                        }
                                        else
                                        {
                                            rep.CHANDOANMA.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                                        }
                                        //rep.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);
                                    }

                                    if (_lrv.ChanDoan.Contains(";"))
                                    {
                                        string cdkhac = "", cdyhctkhac = "";
                                        string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                                        if (arrchandoan.Count() > 1)
                                        {
                                            for (int i = 1; i < arrchandoan.Count(); i++)
                                            {
                                                cdkhac += arrchandoan[i] + ";";
                                            }
                                        }

                                        string[] arrcdyhct = DungChung.Ham.GetMaYHCT(DungChung.Ham.FreshString(_lrv.MaICD), _licd10)[1].Split(';');

                                        if (arrcdyhct.Count() > 1)
                                        {
                                            for (int i = 1; i < arrcdyhct.Count(); i++)
                                            {
                                                cdyhctkhac += arrcdyhct[i] + ";";
                                            }
                                        }
                                        if (Bien.MaBV == "24297" && tenkp.IsDongY == true)
                                        {
                                            string[] arricd = DungChung.Ham.GetYHCT_24297(DungChung.Ham.FreshString(_lrv.MaICD), _licd10)[0].Split(';');
                                            if (arricd.Count() > 0)
                                            {
                                                string icdbenhkhac = "";
                                                for (int i = 1; i < arricd.Count(); i++)
                                                {
                                                    icdbenhkhac += arricd[i] + ";";
                                                }
                                                rep.BENHPHUMA.Value = icdbenhkhac;
                                            }
                                        }
                                        else
                                        {
                                            if (arrcdyhct.Count() > 0)
                                            {
                                                string icdbenhkhac = "";
                                                for (int i = 1; i < arrcdyhct.Count(); i++)
                                                {
                                                    icdbenhkhac += arrcdyhct[i] + ";";
                                                }
                                                rep.BENHPHUMA.Value = icdbenhkhac;
                                            }
                                        }

                                        rep.CHANDOAN.Value = DungChung.Ham.FreshString(arrcdyhct[0]) + " [" + DungChung.Ham.FreshString(arrchandoan[0]) + "]";
                                        rep.BENHPHU.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(cdkhac), DungChung.Ham.FreshString(cdyhctkhac));
                                    }
                                    else
                                    {
                                        rep.CHANDOAN.Value = DungChung.Ham.GetMaYHCT(DungChung.Ham.FreshString(_lrv.MaICD), _licd10)[1] + " [" + DungChung.Ham.FreshString(_lrv.ChanDoan) + "]";
                                    }
                                }
                                else
                                {
                                    if (_lrv.MaICD.Contains(";"))
                                    {
                                        string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                                        rep.CHANDOANMA.Value = arricd[0];
                                        string icdkhac = "";
                                        if (arricd.Count() > 1)
                                        {
                                            for (int i = 1; i < arricd.Count(); i++)
                                            {
                                                icdkhac += arricd[i] + ";";
                                            }
                                        }
                                        rep.BENHPHUMA.Value = DungChung.Ham.FreshString(icdkhac);
                                    }
                                    else
                                    {
                                        //rep.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);
                                        rep.CHANDOANMA.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                                    }

                                    if (_lrv.ChanDoan.Contains(";"))
                                    {
                                        string cdkhac = "", cdyhctkhac = "";
                                        string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                                        //rep.CHANDOAN.Value = arrchandoan[0];
                                        if (arrchandoan.Count() > 1)
                                        {
                                            for (int i = 1; i < arrchandoan.Count(); i++)
                                            {
                                                cdkhac += arrchandoan[i] + ";";
                                            }
                                        }

                                        string[] arrcdyhct = DungChung.Ham.FreshString(_lrv.ChanDoanYHCT).Split(';');
                                        //rep.CHANDOAN.Value = arrchandoan[0];
                                        if (arrcdyhct.Count() > 1)
                                        {
                                            for (int i = 1; i < arrcdyhct.Count(); i++)
                                            {
                                                cdyhctkhac += arrcdyhct[i] + ";";
                                            }
                                        }
                                        rep.CHANDOAN.Value = DungChung.Ham.FreshString(arrcdyhct[0]) + "[" + DungChung.Ham.FreshString(arrchandoan[0]) + "]";
                                        rep.BENHPHU.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(cdkhac), DungChung.Ham.FreshString(cdyhctkhac));
                                    }
                                    else
                                    {
                                        rep.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan) + " [" + DungChung.Ham.FreshString(_lrv.ChanDoanYHCT) + "]";
                                    }
                                }
                            }
                            else if (Bien.MaBV == "24297" && tenkp.IsDongY == true)
                            {
                                if (!string.IsNullOrEmpty(_lrv.MaICD))
                                {
                                    string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                                    if (arricd.Count() > 0)
                                    {
                                        rep.CHANDOANMA.Value = DungChung.Ham.GetMaYHCT(arricd[0].Trim(), _licd10)[0];
                                        if (string.IsNullOrEmpty(DungChung.Ham.GetMaYHCT(arricd[0].Trim(), _licd10)[0]))
                                        {
                                            rep.CHANDOANMA.Value = arricd[0].Trim();
                                        }
                                        var getCD = (from icd in _licd10.Where(p => p.MaICD == arricd[0].Trim())
                                                     select new { icd }).ToList();
                                        if (getCD != null)
                                            rep.CHANDOAN.Value = getCD.First().icd.TenYHCT + "[" + getCD.First().icd.TenICD + "]";
                                    }
                                    string icdkhac = "";
                                    string benhkhac = "";
                                    if (arricd.Count() > 1)
                                    {
                                        for (int i = 1; i < arricd.Count(); i++)
                                        {
                                            string check = DungChung.Ham.GetMaYHCT(arricd[i].Trim(), _licd10)[0];
                                            if (string.IsNullOrEmpty(check))
                                            {
                                                icdkhac += arricd[i].Trim() + "; ";
                                            }
                                            else
                                            {
                                                icdkhac += check + ";";
                                            }
                                            try
                                            {
                                                if (!string.IsNullOrEmpty(arricd[i].Trim()))
                                                {
                                                    var getCD = (from icd in _licd10.Where(p => p.MaICD == arricd[i].Trim())
                                                                 select new { icd }).ToList();
                                                    if (getCD.First().icd.TenICD != null)
                                                        benhkhac += getCD.First().icd.TenYHCT + "[" + getCD.First().icd.TenICD + "]" + ";";
                                                }
                                                else
                                                    benhkhac += "";
                                            }
                                            catch (Exception ex)
                                            {
                                                MessageBox.Show(ex.Message, "Lỗi");
                                            }
                                        }
                                    }
                                    if (_lrv.ChanDoan.Contains(";"))
                                    {
                                        int n = 1;
                                        int index = 0;
                                        for (int i = 1; i < arricd.Count(); i++)
                                        {
                                            if (arricd[i] == "" || arricd[i] == " ")
                                                n += 1;
                                        }
                                        if (n > 1)
                                        {
                                            index = arricd.Count() - 1;
                                        }
                                        else
                                        {
                                            index = arricd.Count();
                                        }
                                        string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                                        if (arrchandoan.Count() >= arricd.Count())
                                        {
                                            for (int i = index; i < arrchandoan.Count(); i++)
                                            {
                                                benhkhac += arrchandoan[i];
                                            }
                                        }
                                    }
                                    rep.BENHPHUMA.Value = DungChung.Ham.FreshString(icdkhac);
                                    rep.BENHPHU.Value = DungChung.Ham.FreshString(benhkhac);
                                }
                                else
                                {
                                    rep.CHANDOANMA.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                                    rep.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);
                                }
                            }
                            else
                            {
                                if (_lrv.MaICD.Contains(";"))
                                {
                                    string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                                    rep.CHANDOANMA.Value = arricd[0];
                                    string icdkhac = "";
                                    if (arricd.Count() > 1)
                                    {
                                        for (int i = 1; i < arricd.Count(); i++)
                                        {
                                            icdkhac += arricd[i] + ";";
                                        }
                                    }
                                    rep.BENHPHUMA.Value = DungChung.Ham.FreshString(icdkhac);
                                }
                                else
                                {
                                    //rep.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);
                                    rep.CHANDOANMA.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                                }
                                if (_lrv.ChanDoan.Contains(";"))
                                {
                                    string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                                    rep.CHANDOAN.Value = arrchandoan[0];
                                    string cdkhac = "";
                                    if (arrchandoan.Count() > 1)
                                    {
                                        for (int i = 1; i < arrchandoan.Count(); i++)
                                        {
                                            cdkhac += arrchandoan[i] + ";";
                                        }
                                    }
                                    rep.BENHPHU.Value = DungChung.Ham.FreshString(cdkhac);
                                }
                                else
                                {
                                    rep.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);
                                }
                            }
                        }
                    }
                    var _ldvbn0 = (from vp in _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn)
                                   join vpct in _dataContext.VienPhicts.Where(p => (Bien.MaBV == "27194" || Bien.MaBV == "01071" || Bien.MaBV == "01049" || Bien.MaBV == "24297") ? (p.TrongBH == 1) : (p.TrongBH != 2 && p.TrongBH != 3)).Where(p => p.ThanhToan == 0).Where(p => p.AttachIDDonct == null) on vp.idVPhi equals vpct.idVPhi
                                   select new
                                   {
                                       vp.MaBNhan,
                                       vp.NgayTT,
                                       vpct.MaDV,
                                       vpct.TrongBH,
                                       vpct.DonVi,
                                       vpct.DonGia,
                                       vpct.TyLeTT,
                                       vpct.TyLeBHTT,
                                       vpct.IDPerson,
                                       vpct.SoLuong,
                                       vpct.ThanhTien,
                                       vpct.TBNCTT,
                                       vpct.TienNguonKhac,
                                       vpct.TBNTT,
                                       vpct.TienBH,
                                       vpct.MienCT,
                                       vpct.NgayYLenh,
                                       vpct.ThanhToan,
                                       vpct.AttachIDDonct
                                   }).ToList();
                    var _ldvbn1 = (from a in _ldvbn0.Where(p => p.NgayYLenh <= _ngayTachThe)
                                   select new
                                   {
                                       a.MaBNhan,
                                       a.NgayTT,
                                       a.MaDV,
                                       a.TrongBH,
                                       a.DonVi,
                                       a.DonGia,
                                       a.TyLeTT,
                                       a.TyLeBHTT,
                                       a.IDPerson,
                                       a.SoLuong,
                                       a.ThanhTien,
                                       a.TBNCTT,
                                       a.TienNguonKhac,
                                       a.TBNTT,
                                       a.TienBH,
                                       a.MienCT
                                   }).ToList();
                    var _ldvbn = (from vp in _ldvbn1.Where(p => _idper1 == 0 ? true : p.IDPerson == _idper1)
                                  group new { vp } by new { vp.TienBH, vp.MaBNhan, vp.NgayTT, vp.MaDV, vp.TrongBH, vp.DonVi, vp.DonGia, vp.TyLeTT, vp.TyLeBHTT, vp.IDPerson, vp.MienCT } into kq
                                  select new
                                  {
                                      kq.Key.MaBNhan,
                                      kq.Key.NgayTT,
                                      kq.Key.MaDV,
                                      kq.Key.TrongBH,
                                      kq.Key.DonVi,
                                      kq.Key.DonGia,
                                      kq.Key.TyLeTT,
                                      kq.Key.TyLeBHTT,
                                      kq.Key.IDPerson,
                                      SoLuong = kq.Sum(p => p.vp.SoLuong),
                                      ThanhTien = kq.Sum(p => p.vp.ThanhTien),
                                      TBNCTT = kq.Sum(p => p.vp.TBNCTT),
                                      TienNguonKhac = kq.Sum(p => p.vp.TienNguonKhac),
                                      TBNTT = kq.Sum(p => p.vp.TBNTT),
                                      TienBH = kq.Key.TienBH,
                                      //TienBH = kq.Sum(p => p.vp.TienBH * p.vp.TyLeBHTT / 100),
                                      kq.Key.MienCT
                                  }).ToList();
                    double tongcp1 = _ldvbn.Count() > 0 ? _ldvbn.Sum(p => p.ThanhTien) : 0;

                    string kvuc = "";
                    if (_Benhnhan.KhuVuc != null)
                        kvuc = _Benhnhan.KhuVuc;
                    rep.MUCHUONG.Value = TinhMucHuong(dungtuyen, _muc, kvuc, tongcp1, _hangbv, _Benhnhan.NoiTru ?? 0, _Benhnhan.SThe, _Benhnhan.MaCS) + "%";
                    if (DungChung.Bien.MaBV != "24272")
                    {
                        if (tongcp1 < 223500 && _Benhnhan.SThe != null && _Benhnhan.SThe != "")
                            rep.MUCHUONG.Value = "100%";
                        else
                            rep.MUCHUONG.Value = TinhMucHuong(dungtuyen, _muc, kvuc, tongcp1, _hangbv, _Benhnhan.NoiTru ?? 0, _Benhnhan.SThe, _Benhnhan.MaCS) + "%";
                    }

                    #endregion

                    #region Load chi tiết

                    if (_lvp != null)
                    {
                        _NgayTT = _lvp.NgayTT.Value;
                        rep.NGAYKY.Value = DungChung.Ham.NgaySangChu(_lvp.NgayTT.Value, Bien.FormatDate);
                        rep.txtNgayKyGD.Text = Bien.MaBV == "20001" ? "...., ngày ... tháng ... năm ..." : DungChung.Ham.NgaySangChu(_lvp.NgayTT.Value, Bien.FormatDate);
                    }
                    int GiaCuBH = DungChung.Ham.GiaCu(_mabn, 1);
                    int GiaCuDV = DungChung.Ham.GiaCu(_mabn, 0);
                    List<C_BKe_New> _lkq = new List<C_BKe_New>();
                    List<KPhong> _lkp = _dataContext.KPhongs.ToList();

                    //lấy số phim x-quang
                    var _lcls = (from cls in _dataContext.CLS.Where(p => p.MaBNhan == _mabn)
                                 join cd in _dataContext.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                 select new { cd.MaDV, cd.SoPhim, cd.IDCD }).ToList();
                    var sophim = (from dv in dichvu.Where(p => p.TenRGTN == Bien.st_TieuNhomRG_ChuyenKhoa.X_Quang)
                                  join cls in _lcls.Where(p => p.SoPhim != null) on dv.MaDV equals cls.MaDV
                                  select cls).ToList();
                    int SoPhim = 0;
                    if (sophim.Count > 0)
                        SoPhim = sophim.Sum(p => p.SoPhim) ?? 0;

                    //Công khám
                    var _lcongkham = (from vp in _ldvbn
                                      join dv in dichvu.Where(p => p.IDNhom == 13) on vp.MaDV equals dv.MaDV
                                      where vp.TrongBH == 1 || vp.TrongBH != 1
                                      select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (DungChung.Bien.MaBV == "24272" || DungChung.Bien.MaBV == "24012")
                    {
                        _lcongkham = (from vp in _ldvbn
                                      join dv in dichvu.Where(p => p.IDNhom == 13) on vp.MaDV equals dv.MaDV
                                      where vp.TrongBH == 1
                                      select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    }
                    if (_lcongkham.Count > 0)
                    {
                        foreach (var item in _lcongkham)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 1;
                            moi.TenNhom = "1. Khám bệnh";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1)
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = Math.Round(item.vp.DonGia * item.vp.SoLuong, Bien.LamTronSo, MidpointRounding.AwayFromZero);
                                moi.ThanhTienBH = item.vp.TienBH /*Math.Round(item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero)*/;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            _lkq.Add(moi);
                        }
                    }
                    //
                    //Ngày giường
                    var _lngaygiuong = (from vp in _ldvbn
                                        join dv in dichvu.Where(p => p.IDNhom == 15 || p.IDNhom == 14) on vp.MaDV equals dv.MaDV
                                        where vp.TrongBH == 1 || vp.TrongBH != 1
                                        select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.IDNhom }).ToList();
                    if (DungChung.Bien.MaBV == "24272" || DungChung.Bien.MaBV == "24012")
                    {
                        _lngaygiuong = (from vp in _ldvbn
                                        join dv in dichvu.Where(p => p.IDNhom == 15 || p.IDNhom == 14) on vp.MaDV equals dv.MaDV
                                        where vp.TrongBH == 1
                                        select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.IDNhom }).ToList();
                    }
                    if (_lngaygiuong.Count > 0)
                    {
                        foreach (var item in _lngaygiuong)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 2;
                            moi.TenNhom = "2. Ngày giường";
                            moi.STTTieuN = moi.STTTieuN = item.IDNhom == 15 ? 2 : 1;
                            moi.TenTieuNhom = (_hangbv == 4 || Bien.MaBV == "30280" || Bien.MaBV == "30303") ? "2.3 Ngày giường lưu:" : (item.IDNhom == 15 ? "2.2. Ngày giường điều trị nội trú:" : "2.1. Ngày giường điều trị ngoại trú:");
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = Math.Round(item.vp.DonGia * item.vp.SoLuong, Bien.LamTronSo, MidpointRounding.AwayFromZero); //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.TienBH; /*Math.Round(item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);*/
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            _lkq.Add(moi);
                        }
                    }
                    //

                    //Xét nghiệm
                    var _lxetnghiem = (from vp in _ldvbn
                                       join dv in dichvu.Where(p => p.IDNhom == 1) on vp.MaDV equals dv.MaDV
                                       where vp.TrongBH == 1 || vp.TrongBH != 1
                                       select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.STTTNhom }).ToList();
                    if (DungChung.Bien.MaBV == "24272" || DungChung.Bien.MaBV == "24012")
                    {
                        _lxetnghiem = (from vp in _ldvbn
                                       join dv in dichvu.Where(p => p.IDNhom == 1) on vp.MaDV equals dv.MaDV
                                       where vp.TrongBH == 1
                                       select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.STTTNhom }).ToList();
                    }
                    if (_lxetnghiem.Count > 0)
                    {
                        foreach (var item in _lxetnghiem)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 3;
                            moi.TenNhom = "3. Xét nghiệm";
                            moi.STTTieuN = item.STTTNhom != null ? Convert.ToInt32(item.STTTNhom) : 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.TienBH; /*Math.Round(item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);*/
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            //moi.TenDongTayY = "Xét nghiệm";
                            _lkq.Add(moi);
                        }
                    }
                    //
                    //CĐHA
                    var _lcdha = (from vp in _ldvbn
                                  join dv in dichvu.Where(p => p.IDNhom == 2) on vp.MaDV equals dv.MaDV
                                  where vp.TrongBH == 1 || vp.TrongBH != 1
                                  select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (DungChung.Bien.MaBV == "24272" || DungChung.Bien.MaBV == "24012")
                    {
                        _lcdha = (from vp in _ldvbn
                                  join dv in dichvu.Where(p => p.IDNhom == 2) on vp.MaDV equals dv.MaDV
                                  where vp.TrongBH == 1
                                  select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    }
                    if (_lcdha.Count > 0)
                    {
                        foreach (var item in _lcdha)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 4;
                            moi.TenNhom = "4. Chẩn đoán hình ảnh";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.TienBH; /*Math.Round(item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);*/
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            //moi.TenDongTayY = "Chẩn đoán hình ảnh";
                            _lkq.Add(moi);
                        }
                    }
                    if (SoPhim > 0)
                    {
                        if (Bien.MaBV == "20001")
                        {
                            rep.SOPHIM.Value = _Benhnhan.NoiTru == 1 ? "" : "(Tôi đã nhận .... phim .... Xquang/CT/MRI)";
                        }
                        else if (Bien.MaBV == "24012")
                        {
                            rep.SOPHIM.Value = "(Tôi đã nhận .... phim Xquang/CT/MRI)";
                        }
                        else
                        {
                            rep.SOPHIM.Value = "(Tôi đã nhận " + SoPhim.ToString() + " phim Xquang/CT/MRI)";
                        }
                    }
                    else
                    {
                        rep.SOPHIM.Value = "(Tôi đã nhận ... phim Xquang/CT/MRI)";
                        if (Bien.MaBV == "24009" && _Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false)
                            rep.SOPHIM.Value = "(Tôi đã nhận .... phim Xquang/CT/MRI)";
                    }
                    //
                    //thăm dò chức năng
                    var _ltdcn = (from vp in _ldvbn
                                  join dv in dichvu.Where(p => p.IDNhom == 3) on vp.MaDV equals dv.MaDV
                                  where vp.TrongBH == 1 || vp.TrongBH != 1
                                  select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (DungChung.Bien.MaBV == "24272" || DungChung.Bien.MaBV == "24012")
                    {
                        _ltdcn = (from vp in _ldvbn
                                  join dv in dichvu.Where(p => p.IDNhom == 3) on vp.MaDV equals dv.MaDV
                                  where vp.TrongBH == 1
                                  select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    }
                    if (_ltdcn.Count > 0)
                    {
                        foreach (var item in _ltdcn)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 6;
                            moi.TenNhom = "5. Thăm dò chức năng";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.TienBH; /*Math.Round(item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);*/
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            //moi.TenDongTayY = "Thăm dò chức năng";
                            _lkq.Add(moi);
                        }
                    }
                    //
                    //thủ thuật, phẫu thuật
                    var _lttpt = (from vp in _ldvbn
                                  join dv in dichvu.Where(p => p.IDNhom == 8) on vp.MaDV equals dv.MaDV
                                  where vp.TrongBH == 1 || vp.TrongBH != 1
                                  select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (DungChung.Bien.MaBV == "24272" || DungChung.Bien.MaBV == "24012")
                    {
                        _lttpt = (from vp in _ldvbn
                                  join dv in dichvu.Where(p => p.IDNhom == 8) on vp.MaDV equals dv.MaDV
                                  where vp.TrongBH == 1
                                  select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    }
                    if (_lttpt.Count > 0)
                    {
                        foreach (var item in _lttpt)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 7;
                            moi.TenNhom = "6. Thủ thuật, phẫu thuật";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = Math.Round(item.vp.DonGia * item.vp.SoLuong, Bien.LamTronSo, MidpointRounding.AwayFromZero); //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.TienBH; /*Math.Round(item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);*/
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            //moi.TenDongTayY = "Thủ thuật, phẫu thuật";
                            _lkq.Add(moi);
                        }
                    }
                    //
                    //máu
                    var _lmau = (from vp in _ldvbn
                                 join dv in dichvu.Where(p => p.IDNhom == 7) on vp.MaDV equals dv.MaDV
                                 where vp.TrongBH == 1 || vp.TrongBH != 1
                                 select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (DungChung.Bien.MaBV == "24272" || DungChung.Bien.MaBV == "24012")
                    {
                        _lmau = (from vp in _ldvbn
                                 join dv in dichvu.Where(p => p.IDNhom == 7) on vp.MaDV equals dv.MaDV
                                 where vp.TrongBH == 1
                                 select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    }
                    if (_lmau.Count > 0)
                    {
                        foreach (var item in _lmau)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 8;
                            moi.TenNhom = "7. Máu, chế phẩm máu, vận chuyển máu";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.TienBH; /*Math.Round(item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100, Bien.LamTronSo, MidpointRounding.AwayFromZero);*/
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            //moi.TenDongTayY = "Máu, chế phẩm máu, vận chuyển máu";
                            _lkq.Add(moi);
                        }
                    }
                    //
                    //Thuốc, dịch truyền
                    var _lThuoc = (from vp in _ldvbn
                                   join dv in dichvu.Where(p => p.IDNhom == 5 || p.IDNhom == 6 || p.IDNhom == 4) on vp.MaDV equals dv.MaDV
                                   where vp.TrongBH == 1 || vp.TrongBH != 1
                                   select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.HamLuong, dv.DongY }).ToList();
                    if (DungChung.Bien.MaBV == "24272" || DungChung.Bien.MaBV == "24012")
                    {
                        _lThuoc = (from vp in _ldvbn
                                   join dv in dichvu.Where(p => p.IDNhom == 5 || p.IDNhom == 6 || p.IDNhom == 4) on vp.MaDV equals dv.MaDV
                                   where vp.TrongBH == 1
                                   select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.HamLuong, dv.DongY }).ToList();
                    }
                    if (_lThuoc.Count > 0)
                    {
                        foreach (var item in _lThuoc)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 9;
                            moi.TenNhom = "8. Thuốc, dịch truyền";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = (item.TenDV == null ? "" : item.TenDV) + (Bien.MaBV == "27001" ? (item.HamLuong == null ? "" : (" (" + item.HamLuong + ")")) : "");
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.MienCT == 1 ? 0 : Math.Round(item.vp.DonGia * item.vp.SoLuong, Bien.LamTronSo, MidpointRounding.AwayFromZero); //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.MienCT == 1 ? 0 : item.vp.TienBH; /*Math.Round(item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100);*/
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienKhac = (double)item.vp.TienNguonKhac;

                                //moi.TyLeTT = item.vp.TyLeTT;
                                moi.TyLeTTBH = 100;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.MienCT == 1 ? 0 : item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                //moi.TienNgBH = item.vp.ThanhTien;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienKhac = (double)item.vp.TienNguonKhac;
                                moi.TienNgBH = item.vp.TBNTT;
                                moi.TyLeTTDV = item.vp.TyLeTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;

                            moi.TenDongTayY = item.DongY == 1 ? "Thuốc đông y" : "Thuốc tây y";
                            _lkq.Add(moi);
                        }
                    }
                    //
                    //Vật tư y tế
                    var _lvtyt = (from vp in _ldvbn
                                  join dv in dichvu.Where(p => p.IDNhom == 10 || p.IDNhom == 11) on vp.MaDV equals dv.MaDV
                                  where vp.TrongBH == 1 || vp.TrongBH != 1
                                  select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.GiaBHGioiHanTT, dv.MaDV }).ToList();
                    if (DungChung.Bien.MaBV == "24272" || DungChung.Bien.MaBV == "24012")
                    {
                        _lvtyt = (from vp in _ldvbn
                                  join dv in dichvu.Where(p => p.IDNhom == 10 || p.IDNhom == 11) on vp.MaDV equals dv.MaDV
                                  where vp.TrongBH == 1
                                  select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.GiaBHGioiHanTT, dv.MaDV }).ToList();
                    }
                    if (_lvtyt.Count > 0)
                    {
                        foreach (var item in _lvtyt)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 10;
                            moi.TenNhom = "9. Vật tư y tế";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.MienCT == 1 ? 0 : item.vp.TienBH; /*item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;*/
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                moi.TyLeTTBH = 100;
                                if (Bien.MaBV == "27022" && item.GiaBHGioiHanTT > 0 && item.GiaBHGioiHanTT == item.vp.DonGia)
                                {
                                    var qdtct = (from dt in _dataContext.DThuocs.Where(p => p.MaBNhan == _mabn)
                                                 join dtct in _dataContext.DThuoccts
                                                 on dt.IDDon equals dtct.IDDon
                                                 where (dtct.MaDV == item.MaDV && dtct.TrongBH == item.vp.TrongBH && dtct.TyLeTT == item.vp.TyLeTT)
                                                 select dtct).FirstOrDefault();
                                    if (qdtct != null && qdtct.DonGia > item.GiaBHGioiHanTT)
                                    {
                                        moi.DonGiaBV = qdtct.DonGia;
                                        moi.ThanhTienBV = item.vp.ThanhTien;
                                    }
                                }
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.MienCT == 1 ? 0 : item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            //moi.TenDongTayY = "Vật tư y tế";
                            _lkq.Add(moi);
                        }
                    }
                    //

                    // gói vật tư
                    var _ldvbngoi = (from vp in _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn)
                                     join vpct in _dataContext.VienPhicts.Where(p => p.TrongBH != 2).Where(p => p.ThanhToan == 0).Where(p => p.AttachIDDonct != null && p.AttachIDDonct > 0).Where(p => p.NgayYLenh <= _ngayTachThe) on vp.idVPhi equals vpct.idVPhi
                                     group new { vp, vpct } by new { vp.MaBNhan, vp.NgayTT, vpct.MaDV, vpct.TBNTT, vpct.TBNCTT, vpct.TrongBH, vpct.DonVi, vpct.DonGia, vpct.TyLeTT, vpct.TyLeBHTT, vpct.AttachIDDonct, vpct.MienCT } into kq
                                     select new
                                     {
                                         kq.Key.MaBNhan,
                                         kq.Key.NgayTT,
                                         kq.Key.MaDV,
                                         kq.Key.TrongBH,
                                         kq.Key.DonVi,
                                         kq.Key.DonGia,
                                         kq.Key.TyLeTT,
                                         kq.Key.TyLeBHTT,
                                         kq.Key.AttachIDDonct,
                                         kq.Key.MienCT,
                                         SoLuong = kq.Sum(p => p.vpct.SoLuong),
                                         ThanhTien = kq.Sum(p => p.vpct.ThanhTien),
                                         TBNCTT = kq.Sum(p => p.vpct.TBNCTT),
                                         TienBH = kq.Sum(p => p.vpct.TienBH * p.vpct.TyLeBHTT / 100),
                                         TBNTT = kq.Sum(p => p.vpct.TBNTT),
                                     }).ToList();
                    var _lvtytgoi = (from vp in _ldvbngoi.Where(p => p.AttachIDDonct != null && p.AttachIDDonct > 0)
                                     join dv in dichvu.Where(p => p.IDNhom == 10 || p.IDNhom == 11) on vp.MaDV equals dv.MaDV
                                     where vp.TrongBH == 1 || vp.TrongBH != 1
                                     select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.MaDV, vp.ThanhTien, vp.AttachIDDonct, dv.GiaBHGioiHanTT }).ToList();
                    if (DungChung.Bien.MaBV == "24272" || DungChung.Bien.MaBV == "24012")
                    {
                        _lvtytgoi = (from vp in _ldvbngoi.Where(p => p.AttachIDDonct != null && p.AttachIDDonct > 0)
                                     join dv in dichvu.Where(p => p.IDNhom == 10 || p.IDNhom == 11) on vp.MaDV equals dv.MaDV
                                     where vp.TrongBH == 1
                                     select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.MaDV, vp.ThanhTien, vp.AttachIDDonct, dv.GiaBHGioiHanTT }).ToList();
                    }
                    if (_lvtytgoi.Count > 0)
                    {
                        var dthuoc = (from dt in _dataContext.DThuocs.Where(p => p.MaBNhan == _mabn)
                                      join dtct in _dataContext.DThuoccts on dt.IDDon equals dtct.IDDon
                                      select new { dtct.IDDonct, dtct.MaDV, dtct.TrongBH, dtct.DonGia, dtct.TyLeTT }).ToList();
                        var _lAttachIDDonct = _lvtytgoi.Select(p => p.AttachIDDonct).Distinct().ToList();
                        int sttg = 1;
                        foreach (var a in _lAttachIDDonct)
                        {
                            var tendv0 = (from dt in dthuoc.Where(p => p.IDDonct == a)
                                          join dv in dichvu on dt.MaDV equals dv.MaDV
                                          select new { dv.TenDV, dv.MaDV, dt.TrongBH, dt.DonGia, dt.TyLeTT }).ToList();
                            var tendv = (from dt in tendv0
                                         select new { dt.TenDV }).FirstOrDefault();
                            if (tendv != null)
                            {
                                string tengoi = "10." + sttg.ToString() + " Gói vật tư y tế " + sttg.ToString() + " (" + tendv.TenDV.ToString() + ")";
                                foreach (var item in _lvtytgoi.Where(p => p.AttachIDDonct == a).ToList())
                                {
                                    C_BKe_New moi = new C_BKe_New();
                                    moi.STTNhom = 11;
                                    moi.TenNhom = "10. Gói vật tư y tế";

                                    moi.STTTieuN = sttg;
                                    moi.TenTieuNhom = tengoi;
                                    moi.TenDV = item.TenDV;
                                    moi.SoLuong = item.vp.SoLuong;
                                    moi.DonVi = item.vp.DonVi;
                                    moi.Mien = item.vp.MienCT;
                                    if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                                    {
                                        moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;// DonGiaBV;
                                        moi.DonGiaBH = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                        moi.ThanhTienBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                        moi.ThanhTienBH = item.vp.MienCT == 1 ? 0 : item.vp.TienBH; /*item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;*/
                                        moi.TienBH = item.vp.TienBH;
                                        moi.TienBN = item.vp.TBNCTT;
                                        moi.TienNgBH = item.vp.TBNTT;
                                        moi.TyLeTTBH = 100;
                                        if (Bien.MaBV == "27022" && item.GiaBHGioiHanTT > 0 && item.GiaBHGioiHanTT == item.vp.DonGia)
                                        {
                                            var qdtct = (from dtct in tendv0
                                                         where (dtct.MaDV == item.MaDV && dtct.TrongBH == item.vp.TrongBH && dtct.TyLeTT == item.vp.TyLeTT)
                                                         select dtct).FirstOrDefault();
                                            if (qdtct != null && qdtct.DonGia > item.GiaBHGioiHanTT)
                                            {
                                                moi.DonGiaBV = qdtct.DonGia;
                                                moi.ThanhTienBV = item.ThanhTien;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                        moi.ThanhTienBV = item.vp.MienCT == 1 ? 0 : item.vp.ThanhTien;
                                        moi.TyLeTTBH = 0;
                                        moi.TienBH = item.vp.TienBH;
                                        moi.TienBN = item.vp.TBNCTT;
                                        moi.TienNgBH = item.vp.TBNTT;
                                    }
                                    moi.TyLeTTDV = item.vp.TyLeTT;
                                    //moi.TenDongTayY = "Gói vật tư y tế";
                                    _lkq.Add(moi);
                                }
                                sttg++;
                            }
                        }
                    }
                    //thuốc được kê là dịch vụ đính kèm thì lên vào nhóm thuốc
                    var _thuocgoi = (from vp in _ldvbngoi.Where(p => p.AttachIDDonct != null && p.AttachIDDonct > 0)
                                     join dv in dichvu.Where(p => p.IDNhom == 5 || p.IDNhom == 6 || p.IDNhom == 4) on vp.MaDV equals dv.MaDV
                                     where vp.TrongBH == 1 || vp.TrongBH != 1
                                     select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.DongY }).ToList();
                    if (DungChung.Bien.MaBV == "24272" || DungChung.Bien.MaBV == "24012")
                    {
                        _thuocgoi = (from vp in _ldvbngoi.Where(p => p.AttachIDDonct != null && p.AttachIDDonct > 0)
                                     join dv in dichvu.Where(p => p.IDNhom == 5 || p.IDNhom == 6 || p.IDNhom == 4) on vp.MaDV equals dv.MaDV
                                     where vp.TrongBH == 1
                                     select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV, dv.DongY }).ToList();
                    }
                    if (_thuocgoi.Count > 0)
                    {
                        foreach (var item in _thuocgoi)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 9;
                            moi.TenNhom = "8. Thuốc, dịch truyền";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1)
                            {
                                moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                moi.DonGiaBH = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong;
                                moi.ThanhTienBH = item.vp.TienBH; /*item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;*/
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.MienCT == 1 ? 0 : item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.MienCT == 1 ? 0 : item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            moi.TenDongTayY = item.DongY == 1 ? "Thuốc đông y" : "Thuốc tây y";
                            _lkq.Add(moi);
                        }
                    }
                    //
                    //vận chuyển
                    var _lvanchuyen = (from vp in _ldvbn
                                       join dv in dichvu.Where(p => p.IDNhom == 12) on vp.MaDV equals dv.MaDV
                                       where vp.TrongBH == 1 || vp.TrongBH != 1
                                       select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (DungChung.Bien.MaBV == "24272" || DungChung.Bien.MaBV == "24012")
                    {
                        _lvanchuyen = (from vp in _ldvbn
                                       join dv in dichvu.Where(p => p.IDNhom == 12) on vp.MaDV equals dv.MaDV
                                       where vp.TrongBH == 1
                                       select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    }
                    if (_lvanchuyen.Count > 0)
                    {
                        foreach (var item in _lvanchuyen)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 12;
                            moi.TenNhom = "11. Vận chuyển người bệnh";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong;
                                moi.ThanhTienBH = item.vp.TienBH; /*item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;*/
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            _lkq.Add(moi);
                        }
                    }
                    var _lhoachat = (from vp in _ldvbn
                                     join dv in dichvu.Where(p => p.IDNhom > 17) on vp.MaDV equals dv.MaDV
                                     where vp.TrongBH == 1 || vp.TrongBH != 1
                                     select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    if (DungChung.Bien.MaBV == "24272" || DungChung.Bien.MaBV == "24012")
                    {
                        _lhoachat = (from vp in _ldvbn
                                     join dv in dichvu.Where(p => p.IDNhom > 17) on vp.MaDV equals dv.MaDV
                                     where vp.TrongBH == 1
                                     select new { vp, dv.TenNhom, dv.DonGia, dv.DonGia2, dv.DonGiaBHYT, dv.DonGiaDV2, dv.TenDV }).ToList();
                    }
                    if (_lhoachat.Count > 0)
                    {
                        foreach (var item in _lhoachat)
                        {
                            C_BKe_New moi = new C_BKe_New();
                            moi.STTNhom = 13;
                            moi.TenNhom = "12. Khác";
                            moi.STTTieuN = 1;
                            moi.TenTieuNhom = item.TenNhom;
                            moi.TenDV = item.TenDV;
                            moi.SoLuong = item.vp.SoLuong;
                            moi.DonVi = item.vp.DonVi;
                            moi.Mien = item.vp.MienCT;
                            if (item.vp.TrongBH == 1 || item.vp.TrongBH == 2)
                            {
                                moi.DonGiaBV = item.vp.DonGia;// DonGiaBV;
                                moi.DonGiaBH = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.DonGia * item.vp.SoLuong; //DonGiaBV * item.vp.SoLuong * item.vp.TyLeTT / 100;
                                moi.ThanhTienBH = item.vp.TienBH; /*item.vp.DonGia * item.vp.SoLuong * item.vp.TyLeBHTT / 100;*/
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                                moi.TyLeTTBH = 100;
                            }
                            else
                            {
                                moi.DonGiaBV = item.vp.DonGia;
                                moi.ThanhTienBV = item.vp.ThanhTien;
                                moi.TyLeTTBH = 0;
                                moi.TienBH = item.vp.TienBH;
                                moi.TienBN = item.vp.TBNCTT;
                                moi.TienNgBH = item.vp.TBNTT;
                            }
                            moi.TyLeTTDV = item.vp.TyLeTT;
                            //moi.TenDongTayY = "Khác";
                            _lkq.Add(moi);
                        }
                    }
                    //
                    if (_lkq.Count > 0)
                    {
                        double tongcp = 0, tienBh = 0, tienbn = 0, tienbnngoai = 0, nguonkhac = 0;
                        //tienBh = _lkq.Sum(p => p.TienBH);
                        //tienbn = _lkq.Sum(p => p.TienBN);
                        //tienbnngoai = _lkq.Sum(p => p.TienNgBH);
                        //tiennguonkhac = _lkq.Sum(p => p.TienKhac);
                        tienBh = _ldvbn0.Sum(p => p.TienBH);
                        tienbn = _ldvbn0.Sum(p => p.TBNCTT);
                        nguonkhac = _ldvbn0.Sum(p => p.TienNguonKhac) ?? 0;
                        tienbnngoai = _ldvbn0.Sum(p => p.TBNTT);
                        if (DungChung.Bien.MaBV == "24272")
                        {
                            tongcp = tienBh + tienbn;
                        }
                        else
                        {
                            tongcp = tienBh + tienbn + tienbnngoai + nguonkhac;
                        }
                        rep.TONGCHIPHI.Value = Math.Round(tongcp, 0).ToString("###,###");
                        rep.TIENCHU.Value = DungChung.Ham.DocTienBangChu(Math.Round(tongcp, 0), " đồng)");
                        rep.TIENBH.Value = tienBh > 0 ? (Math.Round(tienBh, 0).ToString("###,###") + " đồng") : "0 đồng";
                        rep.TIENBN.Value = tienbn > 0 ? (Math.Round(tienbn, 0).ToString("###,###") + " đồng") : "0 đồng";
                        if (DungChung.Bien.MaBV == "24272")
                        {
                            rep.TIENNGUONKHAC.Value = /*nguonkhac > 0 ? (Math.Round(nguonkhac, 0).ToString("###,###") + " đồng") :*/ "0 đồng";
                            rep.TIENBNDV.Value =/* tienbnngoai > 0 ? (Math.Round(tienbnngoai, 0).ToString("###,###") + " đồng") :*/ "0 đồng";
                        }
                        else
                        {
                            rep.TIENNGUONKHAC.Value = nguonkhac > 0 ? (Math.Round(nguonkhac, 0).ToString("###,###") + " đồng") : "0 đồng";
                            rep.TIENBNDV.Value = tienbnngoai > 0 ? (Math.Round(tienbnngoai, 0).ToString("###,###") + " đồng") : "0 đồng";
                        }
                        #endregion

                        rep.DataSource = _lkq.Where(p => p.Mien == 0).OrderBy(p => p.STTNhom).ThenBy(p => p.STTTieuN).ThenBy(p => p.TenDV).ToList();
                        rep.KetoanVP.Value = Bien.KeToanVP;
                        rep.Bindingdata();
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                        frm.ShowDialog();
                        if (_lkq.Where(p => p.Mien == 1).ToList().Count() > 0)
                        {
                            BaoCao.Rep_Bke_New_2018TK_InDoc_34019 rep1 = new BaoCao.Rep_Bke_New_2018TK_InDoc_34019(_idper2, _mabn);
                            List<C_BKe_New> _lthuocmien = new List<C_BKe_New>();
                            _lthuocmien = _lkq.Where(p => p.Mien == 1).ToList();
                            rep1.TIEUDE.Value = "BẢNG KÊ THUỐC THUỘC NGUỒN CHƯƠNG TRÌNH MỤC TIÊU";
                            foreach (var item in _lthuocmien)
                            {
                                if (item.STTNhom == 9)
                                    item.TenNhom = "Thuốc trong danh mục";
                                if (item.STTNhom == 10)
                                    item.TenNhom = "Vật tư y tế";

                                item.DonGiaBV = 0;
                                item.DonGiaBH = 0;
                                item.ThanhTienBV = 0;
                                item.ThanhTienBH = 0;
                                item.TienBH = 0;
                                item.TienBN = 0;
                                item.TienNgBH = 0;
                                item.TyLeTTBH = 0;
                                item.TyLeTTDV = 0;
                            }
                            #region TT hành chính
                            rep1.TENCQCQ.Value = Bien.TenCQCQ;
                            rep1.CQ.Value = Bien.TenCQ;
                            rep1.MABN.Value = "Mã số người bệnh: " + _mabn.ToString();
                            //rep1.MAKHOA.Value = "Mã khoa:";
                            rep1.TONGCHIPHI.Value = "0";
                            rep1.TIENCHU.Value = "Không đồng";
                            if (_Benhnhan != null)
                            {
                                _khuvuc = _Benhnhan.KhuVuc;
                                _noitru = _Benhnhan.NoiTru ?? 0;
                                if (_Benhnhan.DTuong == "BHYT")
                                {
                                    if (_Benhnhan.CapCuu == 1)
                                    {
                                        malydo = 2;
                                    }
                                    else
                                    {
                                        if (_Benhnhan.Tuyen == 1)
                                        {
                                            malydo = checkThongTuyen(_Benhnhan.MaKCB, _Benhnhan.MaCS);
                                        }
                                        else
                                        {
                                            malydo = 3;
                                        }
                                    }
                                }
                                string tieude = (_Benhnhan.NoiTru == 1) ? "Điều trị nội trú" : ((_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "Khám bệnh" : "Điều trị ngoại trú");
                                string ttt = (_Benhnhan.NoiTru == 1) ? "3" : ((_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "1" : "2");
                                string mauso = _hangbv == 4 ? "01/TYT" : ((_Benhnhan.NoiTru == 1) ? "01/BV" : ((_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "01/KBCB" : "01/BV"));
                                rep1.MAUSO.Value = "Mẫu số: " + mauso;
                                rep1.SOKHAMBENH.Value = "Số khám bệnh: " + _mabn.ToString();
                                rep1.TTTT.Value = ttt;
                                capcuu = int.Parse(_Benhnhan.CapCuu.ToString());
                                rep1.TENBN.Value = _Benhnhan.TenBNhan.ToUpper();
                                //rep1.txttenbn.Text = _Benhnhan.TenBNhan;
                                rep1.txtketoanvp.Text = _hangbv < 4 ? Bien.KeToanVP : "";
                                rep1.txtgiamdinh.Text = _hangbv < 4 ? (_noitru == 0 ? Bien.GiamDinhBH : Bien.GiamDinhBH2) : "";
                                rep1.NGAYSINH.Value = _Benhnhan.NgaySinh + "/" + _Benhnhan.ThangSinh + "/" + _Benhnhan.NamSinh;
                                rep1.GTINH.Value = _Benhnhan.GTinh == 1 ? "Nam" : "Nữ";
                                rep1.DCHI.Value = _Benhnhan.DChi;
                                rep1.KHUVUC.Value = _Benhnhan.KhuVuc;
                                if (!string.IsNullOrEmpty(_Benhnhan.SThe.ToString()) && _Benhnhan.SThe.Length >= 15)
                                {
                                    rep1.THE1.Value = _Benhnhan.SThe.Substring(0, 2);
                                    rep1.THE2.Value = _Benhnhan.SThe.Substring(2, 1);
                                    rep1.THE3.Value = _Benhnhan.SThe.Substring(3, 2);
                                    rep1.THE4.Value = _Benhnhan.SThe.Substring(5);
                                }
                                rep1.GHANTHE.Value = "Giá trị từ " + _Benhnhan.HanBHTu.Value.ToShortDateString() + " đến " + _Benhnhan.HanBHDen.Value.ToShortDateString();
                                if (!string.IsNullOrEmpty(_Benhnhan.MaCS))
                                {
                                    var Mabvdk = _bv.Where(p => p.MaBV == _Benhnhan.MaCS).Select(p => new { p.TenBV, p.MaBV }).FirstOrDefault();
                                    if (Mabvdk != null)
                                    {
                                        rep1.TENKCBBD.Value = Mabvdk.TenBV.ToString();
                                        rep1.MAKCBBD.Value = Mabvdk.MaBV.ToString();
                                    }
                                }
                                //rep1.NNHAP.Value = _Benhnhan.NNhap.Value.Hour + " giờ " + _Benhnhan.NNhap.Value.Minute + " phút, ngày " + _Benhnhan.NNhap.Value.ToShortDateString();
                                if (DungChung.Bien.MaBV == "27001")
                                {
                                    if (_Benhnhan != null && _Benhnhan.NNhap != null)
                                        rep1.NNHAP.Value = _Benhnhan.NNhap.Value.Hour + " giờ " + _Benhnhan.NNhap.Value.Minute + " phút, ngày " + _Benhnhan.NNhap.Value.ToShortDateString();
                                }
                                else
                                {
                                    if (_kb != null && _kb.NgayKham != null)
                                        rep1.NNHAP.Value = _kb.NgayKham.Value.Hour + " giờ " + _kb.NgayKham.Value.Minute + " phút, ngày " + _kb.NgayKham.Value.ToShortDateString();
                                }
                                if (_Benhnhan.Tuyen != null)
                                    dungtuyen = int.Parse(_Benhnhan.Tuyen.ToString());
                                switch (malydo)
                                {
                                    case 1:
                                        rep1.DUNGTUYEN.Value = "X";
                                        break;

                                    case 2:
                                        rep1.CAPCUU.Value = "X";
                                        break;

                                    case 3:
                                        rep1.TRAITUYEN.Value = "X";
                                        break;

                                    case 4:
                                        rep1.THONGTUYEN.Value = "X";
                                        break;
                                }
                                if (_Benhnhan.MucHuong != null && _Benhnhan.MucHuong.ToString() != "")
                                    _muc = _Benhnhan.MucHuong.ToString();
                                if (_Benhnhan.NgayHM.Value.Year > 1)
                                {
                                    rep1.DU5NAM.Value = _Benhnhan.NgayHM.Value.ToShortDateString();
                                }
                                else
                                {
                                    rep1.DU5NAM.Value = "    /    /     ";
                                }
                                rep1.DU1NAM.Value = "    /    /     ";
                            }


                            if (_lvv != null)
                            {
                                rep1.NGAYVV.Value = _lvv.NgayVao.Value.Hour + " giờ " + _lvv.NgayVao.Value.Minute + " phút, ngày " + _lvv.NgayVao.Value.ToShortDateString();
                            }
                            if (_lrv != null)
                            {
                                if (ktra2the.Count() == 2 && _lvp.NgayTachCP != null)
                                    rep1.CPKCB.Value = "Chi phí KCB tính từ ngày " + _Benhnhan.NNhap.Value.ToShortDateString() + " đến ngày " + _lvp.NgayTachCP.Value.ToShortDateString();
                                else
                                    rep1.CPKCB.Value = "Chi phí KCB tính từ ngày " + _Benhnhan.NNhap.Value.ToShortDateString() + " đến ngày " + _lrv.NgayRa.Value.ToShortDateString();
                                rep1.NGAYRV.Value = _lrv.NgayRa.Value.Hour + " giờ " + _lrv.NgayRa.Value.Minute + " phút, ngày " + _lrv.NgayRa.Value.ToShortDateString();
                                rep1.SONGDTRI.Value = _lrv.SoNgaydt;
                                rep1.TTRAVIEN.Value = (_Benhnhan.NoiTru == 0 && _Benhnhan.DTNT == false) ? "1" : ((_lrv.KetQua == Bien._ketQuaDT[0] || _lrv.KetQua == Bien._ketQuaDT[1]) ? "1" : "2");
                                string _mabvchuyenden = "", _mabvchuyendi = "";
                                if (_lrv.MaBVC != null)
                                {
                                    _mabvchuyendi = _lrv.MaBVC;
                                    var bv = _bv.Where(p => p.MaBV == (_mabvchuyendi)).ToList();
                                    if (bv.Count > 0)
                                    {
                                        rep1.NOICHUYENDI.Value = bv.First().TenBV;
                                    }
                                }
                                if (!string.IsNullOrEmpty(_Benhnhan.MaBV))
                                {
                                    _mabvchuyenden = _Benhnhan.MaBV;
                                    var bv = _bv.Where(p => p.MaBV == (_mabvchuyenden)).ToList();
                                    if (bv.Count > 0)
                                    {
                                        rep1.NOICDEN.Value = bv.First().TenBV;
                                    }
                                }

                                if (_lrv.MaKP != null)
                                {
                                    int makp = int.Parse(_lrv.MaKP.ToString());
                                    var tenkp = _dataContext.KPhongs.Where(p => p.MaKP == makp).Select(p => new { p.TenKP, p.MaQD }).FirstOrDefault();
                                    if (tenkp != null)
                                    {
                                        rep1.KHOA.Value = tenkp.MaQD + " - " + tenkp.TenKP;
                                        //rep1.MAKHOA.Value = "Mã khoa: " + tenkp.MaQD;
                                    }
                                    if (_lrv.MaICD.Contains(";"))
                                    {
                                        string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                                        rep1.CHANDOANMA.Value = arricd[0];
                                        string icdkhac = "";
                                        if (arricd.Count() > 1)
                                        {
                                            for (int i = 1; i < arricd.Count(); i++)
                                            {
                                                icdkhac += arricd[i] + ";";
                                            }
                                        }
                                        rep1.BENHPHUMA.Value = DungChung.Ham.FreshString(icdkhac);
                                    }
                                    else
                                    {
                                        //rep1.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);
                                        rep1.CHANDOANMA.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                                    }
                                    if (_lrv.ChanDoan.Contains(";"))
                                    {
                                        string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                                        rep1.CHANDOAN.Value = arrchandoan[0];
                                        string cdkhac = "";
                                        if (arrchandoan.Count() > 1)
                                        {
                                            for (int i = 1; i < arrchandoan.Count(); i++)
                                            {
                                                cdkhac += arrchandoan[i] + ";";
                                            }
                                        }
                                        rep1.BENHPHU.Value = DungChung.Ham.FreshString(cdkhac);
                                    }
                                    else
                                    {
                                        rep1.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);
                                    }
                                }
                            }
                            rep.MUCHUONG.Value = TinhMucHuong(dungtuyen, _muc, kvuc, tongcp1, _hangbv, _Benhnhan.NoiTru ?? 0, _Benhnhan.SThe, _Benhnhan.MaCS) + "%";
                            #endregion
                            if (_lvp != null)
                            {
                                _NgayTT = _lvp.NgayTT.Value;
                                rep1.NGAYKY.Value = DungChung.Ham.NgaySangChu(_lvp.NgayTT.Value, Bien.FormatDate);
                            }
                            rep1.DataSource = _lthuocmien.OrderBy(p => p.STTNhom).ThenBy(p => p.STTTieuN).ThenBy(p => p.TenDV).ToList();
                            rep1.Bindingdata();
                            rep1.CreateDocument();
                            frm.prcIN.PrintingSystem = rep1.PrintingSystem;
                            frm.ShowDialog();
                        }
                    }
                    #endregion
                }
                #endregion
            }

            #region chi phí không thanh toán
            var _ldvng = (from vp in _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn)
                          join vpct in _dataContext.VienPhicts.Where(p => p.TrongBH == 2).Where(p => p.ThanhToan == 0) on vp.idVPhi equals vpct.idVPhi
                          select new { vp, vpct }).ToList();
            var bk00_02 = (from vp in _ldvng
                           join dv in dichvu on vp.vpct.MaDV equals dv.MaDV
                           where dv.TenNhom.ToLower().Contains("Thuốc".ToLower()) || dv.TenNhom.ToLower().Contains("Vật tư y tế".ToLower())
                           select new { vp.vp.MaKP, dv.TenNhom, dv.STT, vp.vpct.idVPhict, TenDV = (Bien.MaBV == "12001" || _CQCQ == "12001") ? ((dv.TenRG != null && dv.TenRG.Trim() != "") ? dv.TenRG : (dv.TenDV + " " + dv.HamLuong)) : dv.TenDV, vp.vpct.DonVi, vp.vpct.DonGia, vp.vpct.SoLuong, vp.vpct.ThanhTien, vp.vpct.TienBH, vp.vpct.TienBN, vp.vpct.TBNTT, vp.vpct.TBNCTT, vp.vpct.TrongBH, dv.TrongDM }).Where(p => p.SoLuong != 0).OrderBy(p => p.idVPhict).ToList();
            var bk01_02 = (from a in bk00_02
                           group a by new { a.MaKP, a.TenDV, a.DonVi, a.DonGia, a.TrongBH, a.TrongDM, TenNhom = (Bien.MaBV != "01071" && Bien.MaBV != "01049" && Bien.MaBV != "12345" && Bien.MaBV != "24297" && Bien.MaBV != "56789") ? a.TenNhom : (a.TenNhom.Replace("trong danh mục BHYT", "")), a.STT } into kq
                           select new
                           {
                               kq.Key.MaKP,
                               kq.Key.TenNhom,
                               kq.Key.STT,
                               kq.Key.TenDV,
                               kq.Key.DonVi,
                               kq.Key.DonGia,
                               SoLuong = kq.Sum(p => p.SoLuong),
                               ThanhTien = kq.Sum(p => p.ThanhTien),
                               TienBH = kq.Sum(p => p.TienBH),
                               TienBNCTT = kq.Sum(p => p.TBNCTT),
                               TienNgDM = kq.Sum(o => o.TBNTT),
                               TienKhac = 0,
                               kq.Key.TrongBH,
                               kq.Key.TrongDM
                           }).Where(p => p.SoLuong != 0).ToList();

            if (bk01_02.Count > 0 && _Benhnhan != null)
            {
                if (Bien.MaBV == "14017")
                {
                    QLBV.BaoCao.repBangKeCPNgoaiBH_A4_14017 rep1 = new QLBV.BaoCao.repBangKeCPNgoaiBH_A4_14017();
                    if (_lvv != null)
                    {
                        rep1.sobenhan1.Value = _lvv.SoBA + "/2021";
                    }
                    else
                    {
                        rep1.sobenhan1.Value = "0" + "/2021";
                    }

                    double tongcp = 0, tienBh = 0, tienbn = 0, tienbnngoai = 0;
                    //tongcp = _lkq.Sum(p => p.TienBH) + _lkq.Sum(p => p.ThanhTienBV);
                    tienBh = bk01_02.Sum(p => p.TienBH);
                    tienbn = bk01_02.Sum(p => p.TienBNCTT);
                    tienbnngoai = bk01_02.Sum(p => p.TienNgDM);
                    tongcp = tienBh + tienbn + tienbnngoai;
                    rep1.TONGCHIPHI.Value = Math.Round(tongcp, 0).ToString("###,###");
                    rep1.TIENCHU.Value = DungChung.Ham.DocTienBangChu(Math.Round(tongcp, 0), " đồng)");
                    rep1.TIENBHCHU.Value = DungChung.Ham.DocTienBangChu(Math.Round(tienBh, 0), "đồng");
                    rep1.TIENBH.Value = tienBh > 0 ? (Math.Round(tienBh, 0).ToString("###,###") + " đồng") : "0 đồng";
                    rep1.TIENBN.Value = tienbn > 0 ? (Math.Round(tienbn, 0).ToString("###,###") + " đồng") : "0 đồng";
                    rep1.TIENBNDV.Value = tienbnngoai > 0 ? (Math.Round(tienbnngoai, 0).ToString("###,###") + " đồng") : "0 đồng";
                    rep1.tenBN.Value = Bien.MaBV == "20001" ? _Benhnhan.TenBNhan.ToUpper() : _Benhnhan.TenBNhan;
                    rep1.MaBNhan.Value = _mabn;
                    rep1.TieuDe.Value = Bien.MaBV == "14017" ? "BẢNG KÊ CHI PHÍ MIỄN PHÍ" : "BẢNG KÊ CHI PHÍ KHÁM BỆNH, CHỮA BỆNH";
                    //rep.txtketoanvp.Text = _hangbv < 4 ? Bien.KeToanVP : "";
                    //rep.txtgiamdinh.Text = _hangbv < 4 ? (_noitru == 0 ? Bien.GiamDinhBH : Bien.GiamDinhBH2) : "";
                    //rep1.xrLabel114.Text = _hangbv < 4 ? Bien.KeToanVP : "";
                    rep1.DiaChi.Value = _Benhnhan.DChi;
                    int gioiTinh = int.Parse(_Benhnhan.GTinh.ToString());
                    if (gioiTinh == 1)
                    {
                        rep1.Nam.Value = "X";
                    }
                    else if (gioiTinh == 0)
                    {
                        rep1.Nu.Value = "X";
                    }
                    if (_Benhnhan != null)
                        rep1.SoKB.Value = _Benhnhan.SoKB.ToString();
                    rep1.SoKB2.Text = _mabn + "/2021";
                    var _ngaykham = _dataContext.BNKBs.Where(p => p.MaBNhan == _mabn).OrderBy(p => p.IDKB).ToList();
                    if (_ngaykham.Count > 0 && _ngaykham.First().NgayKham != null)
                        rep1.NgayKham.Value = DungChung.Ham.NgaySangChu(_ngaykham.First().NgayKham.Value, 3);

                    if (_lrv != null)
                    {
                        if (Bien.MaBV == "14017")
                        {
                            rep1.xrLabel27.Text = _lrv.NgayRa.Value.Hour + " giờ " + _lrv.NgayRa.Value.Minute + " phút, ngày " + _lrv.NgayRa.Value.ToShortDateString();
                        }
                        else
                        {
                            rep1.NgayKT.Value = _lrv.NgayRa;
                        }
                    }

                    if (_Benhnhan.DTuong.Contains("BHYT"))
                    {
                        rep1.SoThe.Value = _Benhnhan.SThe;
                        rep1.coBH.Value = "X";
                        //  string muc = txtSoThe.Text.Substring(2, 1);

                        rep1.HanBHTu.Value = _Benhnhan.HanBHTu;
                        rep1.HanBHDen.Value = _Benhnhan.HanBHDen;
                        string macs = "";
                        if (_Benhnhan.MaCS != null)
                        {
                            macs = _Benhnhan.MaCS;
                            rep1.MaCS.Value = macs.Substring(0, 2) + "-" + macs.Substring(2, 3);
                        }
                        var csdkbd = _dataContext.BenhViens.Where(p => p.MaBV == macs).ToList();
                        if (csdkbd.Count > 0)
                        {
                            rep1.CSDKKCB.Value = csdkbd.First().TenBV;
                        }
                        if (dungtuyen == 1)
                        {
                            rep1.DungTuyen.Value = "X";
                            if (Bien.MaBV != "14017") rep1.mucHuong.Value = "Không phải thanh toán".ToUpper();
                        }
                        else if (dungtuyen == 2)
                        {
                            rep1.TraiTuyen.Value = "X";
                            if (Bien.MaBV != "14017") rep1.mucHuong.Value = "Không phải thanh toán".ToUpper();
                        }
                        if (capcuu == 1)
                        {
                            rep1.CapCuu.Value = "X";
                            rep1.TraiTuyen.Value = "";
                            rep1.DungTuyen.Value = "";
                        }
                    }
                    else
                    {
                        if (Bien.MaBV != "14017") rep1.mucHuong.Value = "Không phải thanh toán".ToUpper();
                    }

                    if (Bien.MaBV == "14017")
                    {
                        if (_Benhnhan.MucHuong != null && _Benhnhan.MucHuong.ToString() != "")
                            _muc = _Benhnhan.MucHuong.ToString();
                        double tongcp1 = bk00_02.Count > 0 ? bk01_02.Sum(p => p.ThanhTien) : 0;
                        string kvuc = "";
                        if (_Benhnhan.KhuVuc != null)
                            kvuc = _Benhnhan.KhuVuc;
                        rep1.mucHuong.Value = "Mức hưởng: " + TinhMucHuong(dungtuyen, _muc, kvuc, tongcp1, _hangbv, _Benhnhan.NoiTru ?? 0, _Benhnhan.SThe, _Benhnhan.MaCS) + "%";
                        rep1.barcode.Text = rep1.mbn.Text = _mabn.ToString();
                    }

                    if (_lvp != null)
                    {
                        int _fmat = Bien.FormatDate;
                        if (Bien.MaBV == "30002" || Bien.MaBV == "14017")
                            _fmat = 1;
                        rep1.NgayTT.Value = DungChung.Ham.NgaySangChu(_lvp.NgayTT.Value, _fmat);
                    }

                    if (_lrv != null)
                    {
                        int _makp = _lrv.MaKP;
                        var kphong = _dataContext.KPhongs.Where(p => p.MaKP == (_makp)).ToList();
                        if (kphong.Count > 0)
                            rep1.KhoaPhong.Value = kphong.First().TenKP;

                        //if (Bien.MaBV == "20001")
                        //{
                        //    if (string.IsNullOrEmpty(_lrv.MaYHCT))
                        //    {
                        //        if (_lrv.MaICD.Contains(";"))
                        //        {
                        //            string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                        //            rep1.MaICD.Value = arricd[0];
                        //            string icdkhac = "";
                        //            if (arricd.Count() > 1)
                        //            {
                        //                for (int i = 1; i < arricd.Count(); i++)
                        //                {
                        //                    icdkhac += arricd[i] + ";";
                        //                }
                        //            }
                        //        }
                        //        else
                        //        {
                        //            //rep.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);
                        //            rep1.MaICD.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                        //        }

                        //        if (_lrv.ChanDoan.Contains(";"))
                        //        {
                        //            string cdkhac = "", cdyhctkhac = "";
                        //            string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                        //            if (arrchandoan.Count() > 1)
                        //            {
                        //                for (int i = 1; i < arrchandoan.Count(); i++)
                        //                {
                        //                    cdkhac += arrchandoan[i] + ";";
                        //                }
                        //            }

                        //            string[] arrcdyhct = DungChung.Ham.GetMaYHCT(DungChung.Ham.FreshString(_lrv.MaICD), _licd10)[1].Split(';');
                        //            if (arrcdyhct.Count() > 1)
                        //            {
                        //                for (int i = 1; i < arrcdyhct.Count(); i++)
                        //                {
                        //                    cdyhctkhac += arrcdyhct[i] + ";";
                        //                }
                        //            }
                        //            rep1.ChanDoan.Value = DungChung.Ham.FreshString(arrcdyhct[0]) + " [" + DungChung.Ham.FreshString(arrchandoan[0]) + "]";
                        //        }
                        //        else
                        //        {
                        //            rep1.ChanDoan.Value = DungChung.Ham.GetMaYHCT(DungChung.Ham.FreshString(_lrv.MaICD), _licd10)[1] + " [" + DungChung.Ham.FreshString(_lrv.ChanDoan) + "]";
                        //        }
                        //    }
                        //    else
                        //    {
                        //        if (_lrv.MaICD.Contains(";"))
                        //        {
                        //            string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                        //            rep1.MaICD.Value = arricd[0];
                        //            string icdkhac = "";
                        //            if (arricd.Count() > 1)
                        //            {
                        //                for (int i = 1; i < arricd.Count(); i++)
                        //                {
                        //                    icdkhac += arricd[i] + ";";
                        //                }
                        //            }
                        //        }
                        //        else
                        //        {
                        //            //rep.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);
                        //            rep1.MaICD.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                        //        }

                        //        if (_lrv.ChanDoan.Contains(";"))
                        //        {
                        //            string cdkhac = "", cdyhctkhac = "";
                        //            string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                        //            //rep.CHANDOAN.Value = arrchandoan[0];
                        //            if (arrchandoan.Count() > 1)
                        //            {
                        //                for (int i = 1; i < arrchandoan.Count(); i++)
                        //                {
                        //                    cdkhac += arrchandoan[i] + ";";
                        //                }
                        //            }

                        //            string[] arrcdyhct = DungChung.Ham.FreshString(_lrv.ChanDoanYHCT).Split(';');
                        //            //rep.CHANDOAN.Value = arrchandoan[0];
                        //            if (arrcdyhct.Count() > 1)
                        //            {
                        //                for (int i = 1; i < arrcdyhct.Count(); i++)
                        //                {
                        //                    cdyhctkhac += arrcdyhct[i] + ";";
                        //                }
                        //            }
                        //            rep1.ChanDoan.Value = DungChung.Ham.FreshString(arrcdyhct[0]) + " [" + DungChung.Ham.FreshString(arrchandoan[0]) + "]";
                        //        }
                        //        else
                        //        {
                        //            rep1.ChanDoan.Value = DungChung.Ham.FreshString(_lrv.ChanDoanYHCT) + " [" + DungChung.Ham.FreshString(_lrv.ChanDoan) + "]";
                        //        }
                        //    }
                        //}
                        //else
                        //{
                        //    if (_lrv.MaICD.Contains(";"))
                        //    {
                        //        string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                        //        rep1.MaICD.Value = arricd[0];
                        //        string icdkhac = "";
                        //        if (arricd.Count() > 1)
                        //        {
                        //            for (int i = 1; i < arricd.Count(); i++)
                        //            {
                        //                icdkhac += arricd[i] + ";";
                        //            }
                        //        }
                        //    }
                        //    else
                        //    {
                        //        //rep.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);
                        //        rep1.MaICD.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                        //    }
                        //    if (_lrv.ChanDoan.Contains(";"))
                        //    {
                        //        string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                        //        rep1.ChanDoan.Value = arrchandoan[0];
                        //        string cdkhac = "";
                        //        if (arrchandoan.Count() > 1)
                        //        {
                        //            for (int i = 1; i < arrchandoan.Count(); i++)
                        //            {
                        //                cdkhac += arrchandoan[i] + ";";
                        //            }
                        //        }

                        //    }
                        //    else
                        //        rep1.ChanDoan.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);

                        //}
                        if (Bien.MaBV == "20001" || Bien.MaBV == "24297")
                        {
                            if (string.IsNullOrEmpty(_lrv.MaYHCT))
                            {
                                if (_lrv.MaICD.Contains(";"))
                                {
                                    string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                                    string[] arrcdyhct = DungChung.Ham.GetMaYHCT(DungChung.Ham.FreshString(_lrv.MaICD), _licd10)[0].Split(';');
                                    if (kphong.Count > 0 && kphong.First().IsDongY == true && Bien.MaBV == "24297")
                                        rep1.MaICD.Value = arrcdyhct[0];
                                    else
                                        rep1.MaICD.Value = arricd[0];
                                }
                                else
                                {
                                    string[] arrcdyhct = DungChung.Ham.GetMaYHCT(DungChung.Ham.FreshString(_lrv.MaICD), _licd10)[0].Split(';');
                                    if (kphong.Count > 0 && kphong.First().IsDongY == true && Bien.MaBV == "24297")
                                        rep1.MaICD.Value = arrcdyhct[0];
                                    else
                                        rep1.MaICD.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                                }

                                if (_lrv.ChanDoan.Contains(";"))
                                {
                                    string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                                    string[] arrcdyhct = DungChung.Ham.GetMaYHCT(DungChung.Ham.FreshString(_lrv.MaICD), _licd10)[1].Split(';');
                                    if (kphong.Count > 0 && kphong.First().IsDongY == true && Bien.MaBV == "24297")
                                        rep1.ChanDoan.Value = DungChung.Ham.FreshString(arrcdyhct[0]) + " [" + DungChung.Ham.FreshString(arrchandoan[0]) + "]";
                                    else
                                        rep1.ChanDoan.Value = "[" + DungChung.Ham.FreshString(arrchandoan[0]) + "]";
                                }
                                else
                                {
                                    if (kphong.Count > 0 && kphong.First().IsDongY == true && Bien.MaBV == "24297")
                                        rep1.ChanDoan.Value = DungChung.Ham.GetMaYHCT(DungChung.Ham.FreshString(_lrv.MaICD), _licd10)[1] + " [" + DungChung.Ham.FreshString(_lrv.ChanDoan) + "]";
                                    else
                                        rep1.ChanDoan.Value = "[" + DungChung.Ham.FreshString(_lrv.ChanDoan) + "]";
                                }
                            }
                            else
                            {
                                if (kphong.Count > 0 && kphong.First().IsDongY == true && Bien.MaBV == "24297" && !string.IsNullOrWhiteSpace(_lrv.MaYHCT))
                                {
                                    if (_lrv.MaYHCT.Contains(";"))
                                    {
                                        string[] arricd = DungChung.Ham.FreshString(_lrv.MaYHCT).Split(';');
                                        rep1.MaICD.Value = arricd[0];
                                    }
                                    else
                                    {
                                        rep1.MaICD.Value = DungChung.Ham.FreshString(_lrv.MaYHCT);
                                    }
                                }
                                else
                                {
                                    if (_lrv.MaICD.Contains(";"))
                                    {
                                        string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                                        rep1.MaICD.Value = arricd[0];
                                    }
                                    else
                                    {
                                        rep1.MaICD.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                                    }
                                }

                                if (_lrv.ChanDoan.Contains(";"))
                                {
                                    string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                                    string[] arrcdyhct = DungChung.Ham.FreshString(_lrv.ChanDoanYHCT).Split(';');
                                    rep1.ChanDoan.Value = DungChung.Ham.FreshString(arrcdyhct[0]) + " [" + DungChung.Ham.FreshString(arrchandoan[0]) + "]";
                                }
                                else
                                {
                                    rep1.ChanDoan.Value = DungChung.Ham.FreshString(_lrv.ChanDoanYHCT) + " [" + DungChung.Ham.FreshString(_lrv.ChanDoan) + "]";
                                }
                            }
                        }
                        else
                        {
                            if (Bien.MaBV == "14017" && _lrv.MaICD.Contains(";") && _lrv.ChanDoan.Contains(";"))
                            {
                                var arrMaICD = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                                rep1.MaICD.Value = arrMaICD[0];
                                var arrTenICD = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');

                                for (int i = 1; i < arrTenICD.Count(); i++)
                                {
                                    if (arrMaICD.Count() > i)
                                    {
                                        arrTenICD[i] = " (" + arrMaICD[i] + ") " + arrTenICD[i];
                                    }
                                }
                                rep1.ChanDoan.Value = string.Join(";  ", arrTenICD);
                            }
                            else
                            {
                                rep1.MaICD.Value = DungChung.Ham.GetICDstr(_lrv.MaICD);
                                rep1.ChanDoan.Value = DungChung.Ham.GetICDstr(_lrv.ChanDoan);
                            }
                        }
                        if (_lrv.SoNgaydt != null)
                            rep1.TongNgay.Value = _lrv.SoNgaydt.ToString() + " ngày";
                    }
                    string _ngaysinh = "";
                    if (_Benhnhan.NgaySinh != null && _Benhnhan.NgaySinh.ToString() != "")
                        _ngaysinh = _Benhnhan.NgaySinh.ToString() + "/";
                    if (_Benhnhan.ThangSinh != null && _Benhnhan.ThangSinh.ToString() != "")
                        _ngaysinh = _ngaysinh + _Benhnhan.ThangSinh.ToString() + "/";
                    if (_Benhnhan.NamSinh != null && _Benhnhan.NamSinh.ToString() != "")
                        _ngaysinh = _ngaysinh + _Benhnhan.NamSinh.ToString();
                    rep1.NSinh.Value = _ngaysinh;
                    rep1.Tongtien.Value = bk01_02.Sum(p => p.ThanhTien);
                    if (bk01_02.Count > 0)
                    {
                        rep1.DataSource = bk01_02.ToList();
                        rep1.BindingData();
                        rep1.CreateDocument();
                        // rep1.DataMember = "Table";
                        frm.prcIN.PrintingSystem = rep1.PrintingSystem;
                        frm.ShowDialog();
                    }
                }
                //  06/07/2023 bỏ hẳn bảng kê không thanh toán trên QLBV theo HIS 2658
                //else if(Bien.MaBV != "30004" && Bien.MaBV != "27023") // HoaLV: 30004 bỏ bảng kê không thanh toán theo HIS 2609
                //{
                //    BaoCao.repBangKeCPNgoaiBH_A4 rep1 = new BaoCao.repBangKeCPNgoaiBH_A4();
                //    if (_lvv != null)
                //    {
                //        rep1.sobenhan1.Value = _lvv.SoBA + "/2021";
                //    }
                //    else
                //    {
                //        rep1.sobenhan1.Value = "0" + "/2021";
                //    }

                //    rep1.tenBN.Value = Bien.MaBV == "20001" ? _Benhnhan.TenBNhan.ToUpper() : _Benhnhan.TenBNhan;
                //    rep1.MaBNhan.Value = _mabn;
                //    rep1.TieuDe.Value = Bien.MaBV == "14017" ? "BẢNG KÊ CHI PHÍ MIỄN PHÍ" : "BẢNG KÊ CHI PHÍ KHÁM BỆNH, CHỮA BỆNH";
                //    //rep.txtketoanvp.Text = _hangbv < 4 ? Bien.KeToanVP : "";
                //    //rep.txtgiamdinh.Text = _hangbv < 4 ? (_noitru == 0 ? Bien.GiamDinhBH : Bien.GiamDinhBH2) : "";
                //    //rep1.xrLabel114.Text = _hangbv < 4 ? Bien.KeToanVP : "";
                //    rep1.DiaChi.Value = _Benhnhan.DChi;
                //    int gioiTinh = int.Parse(_Benhnhan.GTinh.ToString());
                //    if (gioiTinh == 1)
                //    {
                //        rep1.Nam.Value = "X";
                //    }
                //    else if (gioiTinh == 0)
                //    {
                //        rep1.Nu.Value = "X";
                //    }
                //    if (_Benhnhan != null)
                //        rep1.SoKB.Value = _Benhnhan.SoKB.ToString();
                //    rep1.SoKB2.Text = _Benhnhan.SoKB.ToString() + "/2021";
                //    if (DungChung.Bien.MaBV == "27001")
                //    {
                //        var _ngaykham1 = _dataContext.BenhNhans.Where(p => p.MaBNhan == _mabn).Select(p => p.NNhap).FirstOrDefault();
                //        if (_ngaykham1 != null)
                //            rep1.NgayKham.Value = DungChung.Ham.NgaySangChu(_ngaykham1.Value, 3);
                //    }
                //    else
                //    {
                //        var _ngaykham = _dataContext.BNKBs.Where(p => p.MaBNhan == _mabn).OrderBy(p => p.IDKB).ToList();
                //        if (_ngaykham.Count > 0 && _ngaykham.First().NgayKham != null)
                //            rep1.NgayKham.Value = DungChung.Ham.NgaySangChu(_ngaykham.First().NgayKham.Value, 3);
                //    }

                //    if (_lrv != null)
                //    {
                //        if (Bien.MaBV == "14017")
                //        {
                //            rep1.xrLabel27.Text = _lrv.NgayRa.Value.Hour + " giờ " + _lrv.NgayRa.Value.Minute + " phút, ngày " + _lrv.NgayRa.Value.ToShortDateString();
                //        }
                //        else
                //        {
                //            rep1.NgayKT.Value = _lrv.NgayRa;
                //        }
                //    }

                //    if (_Benhnhan.DTuong.Contains("BHYT"))
                //    {
                //        rep1.SoThe.Value = _Benhnhan.SThe;
                //        rep1.coBH.Value = "X";
                //        //  string muc = txtSoThe.Text.Substring(2, 1);

                //        rep1.HanBHTu.Value = _Benhnhan.HanBHTu;
                //        rep1.HanBHDen.Value = _Benhnhan.HanBHDen;
                //        string macs = "";
                //        if (_Benhnhan.MaCS != null)
                //        {
                //            macs = _Benhnhan.MaCS;
                //            rep1.MaCS.Value = macs.Substring(0, 2) + "-" + macs.Substring(2, 3);
                //        }
                //        var csdkbd = _dataContext.BenhViens.Where(p => p.MaBV == macs).ToList();
                //        if (csdkbd.Count > 0)
                //        {
                //            rep1.CSDKKCB.Value = csdkbd.First().TenBV;
                //        }
                //        if (dungtuyen == 1)
                //        {
                //            rep1.DungTuyen.Value = "X";

                //            if (Bien.MaBV != "14017")
                //                rep1.mucHuong.Value = "Không phải thanh toán".ToUpper();
                //            if (Bien.MaBV == "30009" && _Benhnhan.MaKP == 145)
                //            {
                //                rep1.mucHuong.Value = "NGUỒN KHÁC".ToUpper();
                //            }
                //        }
                //        else if (dungtuyen == 2)
                //        {
                //            rep1.TraiTuyen.Value = "X";
                //            if (Bien.MaBV != "14017") rep1.mucHuong.Value = "Không phải thanh toán".ToUpper();
                //        }
                //        if (capcuu == 1)
                //        {
                //            rep1.CapCuu.Value = "X";
                //            rep1.TraiTuyen.Value = "";
                //            rep1.DungTuyen.Value = "";
                //        }
                //    }
                //    else
                //    {
                //        if (Bien.MaBV != "14017") rep1.mucHuong.Value = "Không phải thanh toán".ToUpper();
                //    }

                //    if (Bien.MaBV == "14017")
                //    {
                //        if (_Benhnhan.MucHuong != null && _Benhnhan.MucHuong.ToString() != "")
                //            _muc = _Benhnhan.MucHuong.ToString();
                //        double tongcp1 = bk00_02.Count > 0 ? bk01_02.Sum(p => p.ThanhTien) : 0;
                //        string kvuc = "";
                //        if (_Benhnhan.KhuVuc != null)
                //            kvuc = _Benhnhan.KhuVuc;
                //        rep1.mucHuong.Value = "Mức hưởng: " + TinhMucHuong(dungtuyen, _muc, kvuc, tongcp1, _hangbv, _Benhnhan.NoiTru ?? 0, _Benhnhan.SThe, _Benhnhan.MaCS) + "%";
                //        rep1.barcode.Text = rep1.mbn.Text = _mabn.ToString();
                //    }

                //    if (_lvp != null)
                //    {
                //        int _fmat = Bien.FormatDate;
                //        if (Bien.MaBV == "30002" || Bien.MaBV == "14017")
                //            _fmat = 1;
                //        rep1.NgayTT.Value = DungChung.Ham.NgaySangChu(_lvp.NgayTT.Value, _fmat);
                //    }

                //    if (_lrv != null)
                //    {
                //        int _makp = _lrv.MaKP;
                //        var kphong = _dataContext.KPhongs.Where(p => p.MaKP == (_makp)).ToList();
                //        if (kphong.Count > 0)
                //            rep1.KhoaPhong.Value = kphong.First().TenKP;
                //        #region comment
                //        //if (Bien.MaBV == "20001")
                //        //{
                //        //    if (string.IsNullOrEmpty(_lrv.MaYHCT))
                //        //    {
                //        //        if (_lrv.MaICD.Contains(";"))
                //        //        {
                //        //            string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                //        //            rep1.MaICD.Value = arricd[0];
                //        //            string icdkhac = "";
                //        //            if (arricd.Count() > 1)
                //        //            {
                //        //                for (int i = 1; i < arricd.Count(); i++)
                //        //                {
                //        //                    icdkhac += arricd[i] + ";";
                //        //                }
                //        //            }
                //        //        }
                //        //        else
                //        //        {
                //        //            //rep.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);
                //        //            rep1.MaICD.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                //        //        }

                //        //        if (_lrv.ChanDoan.Contains(";"))
                //        //        {
                //        //            string cdkhac = "", cdyhctkhac = "";
                //        //            string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                //        //            if (arrchandoan.Count() > 1)
                //        //            {
                //        //                for (int i = 1; i < arrchandoan.Count(); i++)
                //        //                {
                //        //                    cdkhac += arrchandoan[i] + ";";
                //        //                }
                //        //            }

                //        //            string[] arrcdyhct = DungChung.Ham.GetMaYHCT(DungChung.Ham.FreshString(_lrv.MaICD), _licd10)[1].Split(';');
                //        //            if (arrcdyhct.Count() > 1)
                //        //            {
                //        //                for (int i = 1; i < arrcdyhct.Count(); i++)
                //        //                {
                //        //                    cdyhctkhac += arrcdyhct[i] + ";";
                //        //                }
                //        //            }
                //        //            rep1.ChanDoan.Value = DungChung.Ham.FreshString(arrcdyhct[0]) + " [" + DungChung.Ham.FreshString(arrchandoan[0]) + "]";
                //        //        }
                //        //        else
                //        //        {
                //        //            rep1.ChanDoan.Value = DungChung.Ham.GetMaYHCT(DungChung.Ham.FreshString(_lrv.MaICD), _licd10)[1] + " [" + DungChung.Ham.FreshString(_lrv.ChanDoan) + "]";
                //        //        }
                //        //    }
                //        //    else
                //        //    {
                //        //        if (_lrv.MaICD.Contains(";"))
                //        //        {
                //        //            string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                //        //            rep1.MaICD.Value = arricd[0];
                //        //            string icdkhac = "";
                //        //            if (arricd.Count() > 1)
                //        //            {
                //        //                for (int i = 1; i < arricd.Count(); i++)
                //        //                {
                //        //                    icdkhac += arricd[i] + ";";
                //        //                }
                //        //            }
                //        //        }
                //        //        else
                //        //        {
                //        //            //rep.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);
                //        //            rep1.MaICD.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                //        //        }

                //        //        if (_lrv.ChanDoan.Contains(";"))
                //        //        {
                //        //            string cdkhac = "", cdyhctkhac = "";
                //        //            string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                //        //            //rep.CHANDOAN.Value = arrchandoan[0];
                //        //            if (arrchandoan.Count() > 1)
                //        //            {
                //        //                for (int i = 1; i < arrchandoan.Count(); i++)
                //        //                {
                //        //                    cdkhac += arrchandoan[i] + ";";
                //        //                }
                //        //            }

                //        //            string[] arrcdyhct = DungChung.Ham.FreshString(_lrv.ChanDoanYHCT).Split(';');
                //        //            //rep.CHANDOAN.Value = arrchandoan[0];
                //        //            if (arrcdyhct.Count() > 1)
                //        //            {
                //        //                for (int i = 1; i < arrcdyhct.Count(); i++)
                //        //                {
                //        //                    cdyhctkhac += arrcdyhct[i] + ";";
                //        //                }
                //        //            }
                //        //            rep1.ChanDoan.Value = DungChung.Ham.FreshString(arrcdyhct[0]) + " [" + DungChung.Ham.FreshString(arrchandoan[0]) + "]";
                //        //        }
                //        //        else
                //        //        {
                //        //            rep1.ChanDoan.Value = DungChung.Ham.FreshString(_lrv.ChanDoanYHCT) + " [" + DungChung.Ham.FreshString(_lrv.ChanDoan) + "]";
                //        //        }
                //        //    }
                //        //}
                //        //else
                //        //{
                //        //    if (_lrv.MaICD.Contains(";"))
                //        //    {
                //        //        string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                //        //        rep1.MaICD.Value = arricd[0];
                //        //        string icdkhac = "";
                //        //        if (arricd.Count() > 1)
                //        //        {
                //        //            for (int i = 1; i < arricd.Count(); i++)
                //        //            {
                //        //                icdkhac += arricd[i] + ";";
                //        //            }
                //        //        }
                //        //    }
                //        //    else
                //        //    {
                //        //        //rep.CHANDOAN.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);
                //        //        rep1.MaICD.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                //        //    }
                //        //    if (_lrv.ChanDoan.Contains(";"))
                //        //    {
                //        //        string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                //        //        rep1.ChanDoan.Value = arrchandoan[0];
                //        //        string cdkhac = "";
                //        //        if (arrchandoan.Count() > 1)
                //        //        {
                //        //            for (int i = 1; i < arrchandoan.Count(); i++)
                //        //            {
                //        //                cdkhac += arrchandoan[i] + ";";
                //        //            }
                //        //        }

                //        //    }
                //        //    else
                //        //        rep1.ChanDoan.Value = DungChung.Ham.FreshString(_lrv.ChanDoan);

                //        //}
                //        #endregion
                //        if (Bien.MaBV == "20001" || Bien.MaBV == "24297")
                //        {
                //            if (string.IsNullOrEmpty(_lrv.MaYHCT))
                //            {
                //                if (_lrv.MaICD.Contains(";"))
                //                {
                //                    string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                //                    string[] arrcdyhct = DungChung.Ham.GetMaYHCT(DungChung.Ham.FreshString(_lrv.MaICD), _licd10)[0].Split(';');
                //                    if (kphong.Count > 0 && kphong.First().IsDongY == true && Bien.MaBV == "24297")
                //                        rep1.MaICD.Value = arrcdyhct[0];
                //                    else
                //                        rep1.MaICD.Value = arricd[0];
                //                }
                //                else
                //                {
                //                    string[] arrcdyhct = DungChung.Ham.GetMaYHCT(DungChung.Ham.FreshString(_lrv.MaICD), _licd10)[0].Split(';');
                //                    if (kphong.Count > 0 && kphong.First().IsDongY == true && Bien.MaBV == "24297")
                //                        rep1.MaICD.Value = arrcdyhct[0];
                //                    else
                //                        rep1.MaICD.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                //                }

                //                if (_lrv.ChanDoan.Contains(";"))
                //                {
                //                    string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                //                    string[] arrcdyhct = DungChung.Ham.GetMaYHCT(DungChung.Ham.FreshString(_lrv.MaICD), _licd10)[1].Split(';');
                //                    if (kphong.Count > 0 && kphong.First().IsDongY == true && Bien.MaBV == "24297")
                //                        rep1.ChanDoan.Value = DungChung.Ham.FreshString(arrcdyhct[0]) + " [" + DungChung.Ham.FreshString(arrchandoan[0]) + "]";
                //                    else
                //                        rep1.ChanDoan.Value = "[" + DungChung.Ham.FreshString(arrchandoan[0]) + "]";
                //                }
                //                else
                //                {
                //                    if (kphong.Count > 0 && kphong.First().IsDongY == true && Bien.MaBV == "24297")
                //                        rep1.ChanDoan.Value = DungChung.Ham.GetMaYHCT(DungChung.Ham.FreshString(_lrv.MaICD), _licd10)[1] + " [" + DungChung.Ham.FreshString(_lrv.ChanDoan) + "]";
                //                    else
                //                        rep1.ChanDoan.Value = "[" + DungChung.Ham.FreshString(_lrv.ChanDoan) + "]";
                //                }
                //            }
                //            else
                //            {
                //                if (kphong.Count > 0 && kphong.First().IsDongY == true && Bien.MaBV == "24297" && !string.IsNullOrWhiteSpace(_lrv.MaYHCT))
                //                {
                //                    if (_lrv.MaYHCT.Contains(";"))
                //                    {
                //                        string[] arricd = DungChung.Ham.FreshString(_lrv.MaYHCT).Split(';');
                //                        rep1.MaICD.Value = arricd[0];
                //                    }
                //                    else
                //                    {
                //                        rep1.MaICD.Value = DungChung.Ham.FreshString(_lrv.MaYHCT);
                //                    }
                //                }
                //                else
                //                {
                //                    if (_lrv.MaICD.Contains(";"))
                //                    {
                //                        string[] arricd = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                //                        rep1.MaICD.Value = arricd[0];
                //                    }
                //                    else
                //                    {
                //                        rep1.MaICD.Value = DungChung.Ham.FreshString(_lrv.MaICD);
                //                    }
                //                }

                //                if (_lrv.ChanDoan.Contains(";"))
                //                {
                //                    string[] arrchandoan = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');
                //                    string[] arrcdyhct = DungChung.Ham.FreshString(_lrv.ChanDoanYHCT).Split(';');
                //                    rep1.ChanDoan.Value = DungChung.Ham.FreshString(arrcdyhct[0]) + " [" + DungChung.Ham.FreshString(arrchandoan[0]) + "]";
                //                }
                //                else
                //                {
                //                    rep1.ChanDoan.Value = DungChung.Ham.FreshString(_lrv.ChanDoanYHCT) + " [" + DungChung.Ham.FreshString(_lrv.ChanDoan) + "]";
                //                }
                //            }
                //        }
                //        else
                //        {
                //            if (Bien.MaBV == "14017" && _lrv.MaICD.Contains(";") && _lrv.ChanDoan.Contains(";"))
                //            {
                //                var arrMaICD = DungChung.Ham.FreshString(_lrv.MaICD).Split(';');
                //                rep1.MaICD.Value = arrMaICD[0];
                //                var arrTenICD = DungChung.Ham.FreshString(_lrv.ChanDoan).Split(';');

                //                for (int i = 1; i < arrTenICD.Count(); i++)
                //                {
                //                    if (arrMaICD.Count() > i)
                //                    {
                //                        arrTenICD[i] = " (" + arrMaICD[i] + ") " + arrTenICD[i];
                //                    }
                //                }
                //                rep1.ChanDoan.Value = string.Join(";  ", arrTenICD);
                //            }
                //            else
                //            {
                //                rep1.MaICD.Value = DungChung.Ham.GetICDstr(_lrv.MaICD);
                //                rep1.ChanDoan.Value = DungChung.Ham.GetICDstr(_lrv.ChanDoan);
                //            }
                //        }
                //        if (_lrv.SoNgaydt != null)
                //            rep1.TongNgay.Value = _lrv.SoNgaydt.ToString() + " ngày";
                //    }
                //    string _ngaysinh = "";
                //    if (_Benhnhan.NgaySinh != null && _Benhnhan.NgaySinh.ToString() != "")
                //        _ngaysinh = _Benhnhan.NgaySinh.ToString() + "/";
                //    if (_Benhnhan.ThangSinh != null && _Benhnhan.ThangSinh.ToString() != "")
                //        _ngaysinh = _ngaysinh + _Benhnhan.ThangSinh.ToString() + "/";
                //    if (_Benhnhan.NamSinh != null && _Benhnhan.NamSinh.ToString() != "")
                //        _ngaysinh = _ngaysinh + _Benhnhan.NamSinh.ToString();
                //    rep1.NSinh.Value = _ngaysinh;
                //    rep1.Tongtien.Value = bk01_02.Sum(p => p.ThanhTien);
                //    if (bk01_02.Count > 0)
                //    {
                //        if (Bien.MaBV == "30009" && _Benhnhan.MaKP == 145)
                //        {
                //            rep1.mucHuong.Value = "Nguồn khác".ToUpper();
                //        }
                //        rep1.DataSource = bk01_02.ToList();
                //        rep1.BindingData();
                //        rep1.CreateDocument();
                //        // rep1.DataMember = "Table";
                //        frm.prcIN.PrintingSystem = rep1.PrintingSystem;
                //        frm.ShowDialog();
                //    }
                //}
            }
            #endregion

            #region bảng kê tại nhà thuốc 34019

            if (Bien.MaBV == "34019")
            {
                var donthuoc = (from dt in _dataContext.DThuocs.Where(o => o.MaBNhan == _mabn)
                                join dtct in _dataContext.DThuoccts/*.Where(o => o.TrongBH == 0)*/ on dt.IDDon equals dtct.IDDon
                                join kx in _dataContext.KPhongs.Where(o => o.TenKP.Contains("nhà thuốc") || o.TenKP.Contains("Nhà thuốc")) on dtct.MaKXuat equals kx.MaKP
                                select new
                                {
                                    dt.IDDon,
                                    dtct.MaKXuat,
                                    dtct.MaDV,
                                    dtct.DonVi,
                                    dtct.DonGia,
                                    dtct.SoLuong,
                                    dtct.ThanhTien,
                                    dtct.TienBH,
                                    dtct.TienBN,
                                    dtct.TrongBH,
                                }).ToList();

                var bk_nhathuoc = (from dt in donthuoc
                                   join dv in dichvu on dt.MaDV equals dv.MaDV
                                   select new
                                   {
                                       TenNhom = dv.TenNhom.Replace("trong danh mục BHYT", "ngoài danh mục BHYT"),
                                       dv.STT,
                                       dv.MaDV,
                                       dv.TenDV,
                                       dt.DonVi,
                                       dt.DonGia,
                                       dt.SoLuong,
                                       dt.ThanhTien,
                                       dt.TienBH,
                                       dt.TienBN,
                                       dt.TrongBH,
                                   }).Where(o => o.SoLuong > 0).ToList();

                var bk_nhathuoc_gr = (from bknt in bk_nhathuoc
                                      group bknt by new { bknt.TenNhom, bknt.MaDV, bknt.TenDV, bknt.DonVi, bknt.DonGia, bknt.STT } into kq
                                      select new
                                      {
                                          kq.Key.TenNhom,
                                          kq.Key.STT,
                                          kq.Key.TenDV,
                                          kq.Key.DonVi,
                                          kq.Key.DonGia,
                                          SoLuong = kq.Sum(p => p.SoLuong),
                                          ThanhTien = kq.Sum(p => p.ThanhTien),
                                          TienBH = kq.Sum(p => p.TienBH),
                                          TienBN = kq.Sum(p => p.TienBN),
                                          kq.First().TrongBH,
                                      }).Where(o => o.SoLuong > 0).ToList();

                if (bk_nhathuoc_gr != null && bk_nhathuoc_gr.Count > 0 && _Benhnhan != null)
                {
                    //var _ldvng = (from vp in _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn)
                    //              join vpct in _dataContext.VienPhicts.Where(p => p.TrongBH == 2).Where(p => p.ThanhToan == 0) on vp.idVPhi equals vpct.idVPhi
                    //              select new { vp, vpct }).ToList();
                    //var bk00_02 = (from vp in _ldvng
                    //               join dv in dichvu on vp.vpct.MaDV equals dv.MaDV
                    //               select new { vp.vp.MaKP, dv.TenNhom, dv.STT, vp.vpct.idVPhict, TenDV = (Bien.MaBV == "12001" || _CQCQ == "12001") ? ((dv.TenRG != null && dv.TenRG.Trim() != "") ? dv.TenRG : (dv.TenDV + " " + dv.HamLuong)) : dv.TenDV, vp.vpct.DonVi, vp.vpct.DonGia, vp.vpct.SoLuong, vp.vpct.ThanhTien, vp.vpct.TienBH, vp.vpct.TienBN, vp.vpct.TrongBH, dv.TrongDM }).Where(p => p.SoLuong != 0).OrderBy(p => p.idVPhict).ToList();
                    //var bk01_02 = (from a in bk00_02
                    //               group a by new { a.MaKP, a.TenDV, a.DonVi, a.DonGia, a.TrongBH, a.TrongDM, TenNhom = (Bien.MaBV != "01071" && Bien.MaBV != "01049" && Bien.MaBV != "12345" && Bien.MaBV != "56789") ? a.TenNhom : (a.TenNhom.Replace("trong danh mục BHYT", "")), a.STT } into kq
                    //               select new
                    //               {
                    //                   kq.Key.MaKP,
                    //                   kq.Key.TenNhom,
                    //                   kq.Key.STT,
                    //                   kq.Key.TenDV,
                    //                   kq.Key.DonVi,
                    //                   kq.Key.DonGia,
                    //                   SoLuong = kq.Sum(p => p.SoLuong),
                    //                   ThanhTien = kq.Sum(p => p.ThanhTien),
                    //                   TienBH = kq.Sum(p => p.TienBH),
                    //                   TienBN = kq.Sum(p => p.TienBN),
                    //                   kq.Key.TrongBH,
                    //                   kq.Key.TrongDM
                    //               }).Where(p => p.SoLuong != 0).ToList();

                    BaoCao.repBangKeCPNgoaiBH_A4 rep1 = new BaoCao.repBangKeCPNgoaiBH_A4();
                    rep1.tenBN.Value = Bien.MaBV == "20001" ? _Benhnhan.TenBNhan.ToUpper() : _Benhnhan.TenBNhan;
                    rep1.MaBNhan.Value = _mabn;
                    rep1.TieuDe.Value = "BẢNG KÊ CHI PHÍ KHÁM BỆNH, CHỮA BỆNH";

                    rep1.DiaChi.Value = _Benhnhan.DChi;
                    int gioiTinh = int.Parse(_Benhnhan.GTinh.ToString());
                    if (gioiTinh == 1)
                    {
                        rep1.Nam.Value = "X";
                    }
                    else if (gioiTinh == 0)
                    {
                        rep1.Nu.Value = "X";
                    }
                    if (_Benhnhan != null)
                        rep1.SoKB.Value = _Benhnhan.SoKB;
                    var _ngaykham = _dataContext.BNKBs.Where(p => p.MaBNhan == _mabn).OrderBy(p => p.IDKB).ToList();
                    if (_ngaykham.Count > 0 && _ngaykham.First().NgayKham != null)
                        rep1.NgayKham.Value = DungChung.Ham.NgaySangChu(_ngaykham.First().NgayKham.Value, 3);

                    if (_lrv != null)
                        rep1.NgayKT.Value = _lrv.NgayRa;
                    if (_Benhnhan.DTuong.Contains("BHYT"))
                    {
                        rep1.SoThe.Value = _Benhnhan.SThe;
                        rep1.coBH.Value = "X";
                        //  string muc = txtSoThe.Text.Substring(2, 1);

                        rep1.HanBHTu.Value = _Benhnhan.HanBHTu;
                        rep1.HanBHDen.Value = _Benhnhan.HanBHDen;
                        string macs = "";
                        if (_Benhnhan.MaCS != null)
                        {
                            macs = _Benhnhan.MaCS;
                            rep1.MaCS.Value = macs.Substring(0, 2) + "-" + macs.Substring(2, 3);
                        }
                        var csdkbd = _dataContext.BenhViens.Where(p => p.MaBV == macs).ToList();
                        if (csdkbd.Count > 0)
                        {
                            rep1.CSDKKCB.Value = csdkbd.First().TenBV;
                        }
                        if (dungtuyen == 1)
                        {
                            rep1.DungTuyen.Value = "X";
                        }
                        else if (dungtuyen == 2)
                        {
                            rep1.TraiTuyen.Value = "X";
                        }
                        rep1.mucHuong.Value = "Chi phí tại nhà thuốc".ToUpper();
                        if (capcuu == 1)
                        {
                            rep1.CapCuu.Value = "X";
                            rep1.TraiTuyen.Value = "";
                            rep1.DungTuyen.Value = "";
                        }
                    }
                    else
                    { rep1.mucHuong.Value = "Chi phí tại nhà thuốc".ToUpper(); }
                    if (_lvp != null)
                    {
                        int _fmat = Bien.FormatDate;
                        if (Bien.MaBV == "30002")
                            _fmat = 1;
                        rep1.NgayTT.Value = DungChung.Ham.NgaySangChu(_lvp.NgayTT.Value, _fmat);
                    }

                    if (_lrv != null)
                    {
                        int _makp = _lrv.MaKP;
                        var kphong = _dataContext.KPhongs.Where(p => p.MaKP == (_makp)).ToList();
                        if (kphong.Count > 0)
                            rep1.KhoaPhong.Value = kphong.First().TenKP;
                        if (Bien.MaBV == "20001")
                        {
                            if (!string.IsNullOrEmpty(_lrv.MaYHCT))
                                rep1.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(_lrv.ChanDoan), DungChung.Ham.FreshString(_lrv.ChanDoanYHCT));// DungChung.Ham.GetICDstr(_lrv.ChanDoanYHCT) + "[" + DungChung.Ham.GetICDstr(_lrv.ChanDoan) + "]";
                            else
                            {
                                rep1.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(_lrv.ChanDoan), DungChung.Ham.GetMaYHCT(_lrv.MaICD, _licd10)[1]);
                            }
                        }
                        else
                            rep1.ChanDoan.Value = DungChung.Ham.GetICDstr(_lrv.ChanDoan);
                        rep1.MaICD.Value = DungChung.Ham.GetICDstr(_lrv.MaICD);
                        if (_lrv.SoNgaydt != null)
                            rep1.TongNgay.Value = _lrv.SoNgaydt.ToString() + " ngày";
                    }
                    string _ngaysinh = "";
                    if (_Benhnhan.NgaySinh != null && _Benhnhan.NgaySinh.ToString() != "")
                        _ngaysinh = _Benhnhan.NgaySinh.ToString() + "/";
                    if (_Benhnhan.ThangSinh != null && _Benhnhan.ThangSinh.ToString() != "")
                        _ngaysinh = _ngaysinh + _Benhnhan.ThangSinh.ToString() + "/";
                    if (_Benhnhan.NamSinh != null && _Benhnhan.NamSinh.ToString() != "")
                        _ngaysinh = _ngaysinh + _Benhnhan.NamSinh.ToString();
                    rep1.NSinh.Value = _ngaysinh;
                    rep1.Tongtien.Value = bk_nhathuoc_gr.Sum(p => p.ThanhTien);
                    if (bk_nhathuoc_gr.Count > 0)
                    {
                        rep1.DataSource = bk_nhathuoc_gr.ToList();
                        rep1.BindingData();
                        rep1.CreateDocument();
                        // rep1.DataMember = "Table";
                        frm.prcIN.PrintingSystem = rep1.PrintingSystem;
                        frm.ShowDialog();
                    }
                }
            }
            #endregion

            #region bảng kê thuốc kê đơn ngoài 30372

            if (Bien.MaBV == "30372")
            {
                var tu = (from tu1 in _dataContext.TamUngs.Where(p => p.MaBNhan == _mabn)
                          join tuct in _dataContext.TamUngcts on tu1.IDTamUng equals tuct.IDTamUng
                          select new { tuct.IDTamUngct }).ToList();
                if (tu.Count <= 0)
                {
                    var donthuoc = (from dt in _dataContext.DThuocs.Where(o => o.MaBNhan == _mabn && o.KieuDon == 6)
                                    join dtct in _dataContext.DThuoccts on dt.IDDon equals dtct.IDDon
                                    select new
                                    {
                                        dt.IDDon,
                                        dtct.MaKXuat,
                                        dtct.MaDV,
                                        dtct.DonVi,
                                        dtct.DonGia,
                                        dtct.SoLuong,
                                        dtct.ThanhTien,
                                        dtct.TienBH,
                                        dtct.TienBN,
                                        dtct.TrongBH,
                                    }).ToList();
                    var bk_nhathuoc = (from dt in donthuoc
                                       join dv in dichvu on dt.MaDV equals dv.MaDV
                                       select new
                                       {
                                           TenNhom = dv.TenNhom,
                                           dv.STT,
                                           dv.MaDV,
                                           dv.TenDV,
                                           dt.DonVi,
                                           dt.DonGia,
                                           dt.SoLuong,
                                           dt.ThanhTien,
                                           dt.TienBH,
                                           dt.TienBN,
                                           dt.TrongBH,
                                       }).Where(o => o.SoLuong > 0).ToList();

                    var bk_nhathuoc_gr = (from bknt in bk_nhathuoc
                                          group bknt by new { bknt.TenNhom, bknt.MaDV, bknt.TenDV, bknt.DonVi, bknt.DonGia, bknt.STT } into kq
                                          select new
                                          {
                                              kq.Key.TenNhom,
                                              kq.Key.STT,
                                              kq.Key.TenDV,
                                              kq.Key.DonVi,
                                              kq.Key.DonGia,
                                              SoLuong = kq.Sum(p => p.SoLuong),
                                              ThanhTien = kq.Sum(p => p.ThanhTien),
                                              TienBH = kq.Sum(p => p.TienBH),
                                              TienBN = kq.Sum(p => p.TienBN),
                                              kq.First().TrongBH,
                                          }).Where(o => o.SoLuong > 0).ToList();
                    if (bk_nhathuoc_gr != null && bk_nhathuoc_gr.Count > 0 && _Benhnhan != null)
                    {
                        //var _ldvng = (from vp in _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn)
                        //              join vpct in _dataContext.VienPhicts.Where(p => p.TrongBH == 2).Where(p => p.ThanhToan == 0) on vp.idVPhi equals vpct.idVPhi
                        //              select new { vp, vpct }).ToList();
                        //var bk00_02 = (from vp in _ldvng
                        //               join dv in dichvu on vp.vpct.MaDV equals dv.MaDV
                        //               select new { vp.vp.MaKP, dv.TenNhom, dv.STT, vp.vpct.idVPhict, TenDV = (Bien.MaBV == "12001" || _CQCQ == "12001") ? ((dv.TenRG != null && dv.TenRG.Trim() != "") ? dv.TenRG : (dv.TenDV + " " + dv.HamLuong)) : dv.TenDV, vp.vpct.DonVi, vp.vpct.DonGia, vp.vpct.SoLuong, vp.vpct.ThanhTien, vp.vpct.TienBH, vp.vpct.TienBN, vp.vpct.TrongBH, dv.TrongDM }).Where(p => p.SoLuong != 0).OrderBy(p => p.idVPhict).ToList();
                        //var bk01_02 = (from a in bk00_02
                        //               group a by new { a.MaKP, a.TenDV, a.DonVi, a.DonGia, a.TrongBH, a.TrongDM, TenNhom = (Bien.MaBV != "01071" && Bien.MaBV != "01049" && Bien.MaBV != "12345" && Bien.MaBV != "56789") ? a.TenNhom : (a.TenNhom.Replace("trong danh mục BHYT", "")), a.STT } into kq
                        //               select new
                        //               {
                        //                   kq.Key.MaKP,
                        //                   kq.Key.TenNhom,
                        //                   kq.Key.STT,
                        //                   kq.Key.TenDV,
                        //                   kq.Key.DonVi,
                        //                   kq.Key.DonGia,
                        //                   SoLuong = kq.Sum(p => p.SoLuong),
                        //                   ThanhTien = kq.Sum(p => p.ThanhTien),
                        //                   TienBH = kq.Sum(p => p.TienBH),
                        //                   TienBN = kq.Sum(p => p.TienBN),
                        //                   kq.Key.TrongBH,
                        //                   kq.Key.TrongDM
                        //               }).Where(p => p.SoLuong != 0).ToList();

                        BaoCao.repBangKeCPNgoaiBH_A4 rep1 = new BaoCao.repBangKeCPNgoaiBH_A4();
                        rep1.tenBN.Value = Bien.MaBV == "20001" ? _Benhnhan.TenBNhan.ToUpper() : _Benhnhan.TenBNhan;
                        rep1.MaBNhan.Value = _mabn;
                        rep1.TieuDe.Value = "BẢNG KÊ CHI PHÍ KHÁM BỆNH, CHỮA BỆNH";

                        rep1.DiaChi.Value = _Benhnhan.DChi;
                        int gioiTinh = int.Parse(_Benhnhan.GTinh.ToString());
                        if (gioiTinh == 1)
                        {
                            rep1.Nam.Value = "X";
                        }
                        else if (gioiTinh == 0)
                        {
                            rep1.Nu.Value = "X";
                        }
                        if (_Benhnhan != null)
                            rep1.SoKB.Value = _Benhnhan.SoKB;
                        var _ngaykham = _dataContext.BNKBs.Where(p => p.MaBNhan == _mabn).OrderBy(p => p.IDKB).ToList();
                        if (_ngaykham.Count > 0 && _ngaykham.First().NgayKham != null)
                            rep1.NgayKham.Value = DungChung.Ham.NgaySangChu(_ngaykham.First().NgayKham.Value, 3);

                        if (_lrv != null)
                            rep1.NgayKT.Value = _lrv.NgayRa;
                        if (_Benhnhan.DTuong.Contains("BHYT"))
                        {
                            rep1.SoThe.Value = _Benhnhan.SThe;
                            rep1.coBH.Value = "X";
                            //  string muc = txtSoThe.Text.Substring(2, 1);

                            rep1.HanBHTu.Value = _Benhnhan.HanBHTu;
                            rep1.HanBHDen.Value = _Benhnhan.HanBHDen;
                            string macs = "";
                            if (_Benhnhan.MaCS != null)
                            {
                                macs = _Benhnhan.MaCS;
                                rep1.MaCS.Value = macs.Substring(0, 2) + "-" + macs.Substring(2, 3);
                            }
                            var csdkbd = _dataContext.BenhViens.Where(p => p.MaBV == macs).ToList();
                            if (csdkbd.Count > 0)
                            {
                                rep1.CSDKKCB.Value = csdkbd.First().TenBV;
                            }
                            if (dungtuyen == 1)
                            {
                                rep1.DungTuyen.Value = "X";
                            }
                            else if (dungtuyen == 2)
                            {
                                rep1.TraiTuyen.Value = "X";
                            }
                            rep1.mucHuong.Value = "Chi phí kê đơn ngoài".ToUpper();
                            if (capcuu == 1)
                            {
                                rep1.CapCuu.Value = "X";
                                rep1.TraiTuyen.Value = "";
                                rep1.DungTuyen.Value = "";
                            }
                        }
                        else
                        { rep1.mucHuong.Value = "Chi phí kê đơn ngoài".ToUpper(); }
                        if (_lvp != null)
                        {
                            int _fmat = Bien.FormatDate;
                            if (Bien.MaBV == "30002")
                                _fmat = 1;
                            rep1.NgayTT.Value = DungChung.Ham.NgaySangChu(_lvp.NgayTT.Value, _fmat);
                        }

                        if (_lrv != null)
                        {
                            int _makp = _lrv.MaKP;
                            var kphong = _dataContext.KPhongs.Where(p => p.MaKP == (_makp)).ToList();
                            if (kphong.Count > 0)
                                rep1.KhoaPhong.Value = kphong.First().TenKP;
                            if (Bien.MaBV == "20001")
                            {
                                if (!string.IsNullOrEmpty(_lrv.MaYHCT))
                                    rep1.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(_lrv.ChanDoan), DungChung.Ham.FreshString(_lrv.ChanDoanYHCT));// DungChung.Ham.GetICDstr(_lrv.ChanDoanYHCT) + "[" + DungChung.Ham.GetICDstr(_lrv.ChanDoan) + "]";
                                else
                                {
                                    rep1.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(_lrv.ChanDoan), DungChung.Ham.GetMaYHCT(_lrv.MaICD, _licd10)[1]);
                                }
                            }
                            else
                                rep1.ChanDoan.Value = DungChung.Ham.GetICDstr(_lrv.ChanDoan);
                            rep1.MaICD.Value = DungChung.Ham.GetICDstr(_lrv.MaICD);
                            if (_lrv.SoNgaydt != null)
                                rep1.TongNgay.Value = _lrv.SoNgaydt.ToString() + " ngày";
                        }
                        string _ngaysinh = "";
                        if (_Benhnhan.NgaySinh != null && _Benhnhan.NgaySinh.ToString() != "")
                            _ngaysinh = _Benhnhan.NgaySinh.ToString() + "/";
                        if (_Benhnhan.ThangSinh != null && _Benhnhan.ThangSinh.ToString() != "")
                            _ngaysinh = _ngaysinh + _Benhnhan.ThangSinh.ToString() + "/";
                        if (_Benhnhan.NamSinh != null && _Benhnhan.NamSinh.ToString() != "")
                            _ngaysinh = _ngaysinh + _Benhnhan.NamSinh.ToString();
                        rep1.NSinh.Value = _ngaysinh;
                        rep1.Tongtien.Value = bk_nhathuoc_gr.Sum(p => p.ThanhTien);
                        if (bk_nhathuoc_gr.Count > 0)
                        {
                            rep1.DataSource = bk_nhathuoc_gr.ToList();
                            rep1.BindingData();
                            rep1.CreateDocument();
                            // rep1.DataMember = "Table";
                            frm.prcIN.PrintingSystem = rep1.PrintingSystem;
                            frm.ShowDialog();
                        }
                    }
                }
            }
            #endregion

            var _ldvng1 = (from vp in _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn)
                           join vpct in _dataContext.VienPhicts.Where(p => (Bien.MaBV == "24012" || Bien.MaBV == "27194" || Bien.MaBV == "01071" || Bien.MaBV == "01049" || Bien.MaBV == "24297" || Bien.MaBV == "24272") ? (p.TrongBH == 0 || p.TrongBH == 3) : p.TrongBH == 3).Where(p => p.ThanhToan == 0) on vp.idVPhi equals vpct.idVPhi
                           select new { vp, vpct }).ToList();
            var bk00_021 = (from vp in _ldvng1
                            join dv in dichvu on vp.vpct.MaDV equals dv.MaDV
                            select new { vp.vp.MaKP, dv.TenNhom, dv.TenNhomBK02, dv.STT, vp.vpct.idVPhict, TenDV = (Bien.MaBV == "12001" || _CQCQ == "12001") ? ((dv.TenRG != null && dv.TenRG.Trim() != "") ? dv.TenRG : (dv.TenDV + " " + dv.HamLuong)) : dv.TenDV, vp.vpct.DonVi, vp.vpct.DonGia, vp.vpct.SoLuong, vp.vpct.ThanhTien, vp.vpct.TienBH, vp.vpct.TienBN, vp.vpct.TrongBH, dv.TrongDM }).Where(p => p.SoLuong != 0).OrderBy(p => p.idVPhict).ToList();
            var bk01_021 = (from a in bk00_021
                            group a by new { a.TenNhomBK02, a.MaKP, a.TenDV, a.DonVi, a.DonGia, a.TrongBH, a.TrongDM, TenNhom = (Bien.MaBV != "27194" && Bien.MaBV != "01071" && Bien.MaBV != "01049" && Bien.MaBV != "12345" && Bien.MaBV != "24297" && Bien.MaBV != "56789") ? a.TenNhom : (a.TenNhom.Replace("trong danh mục BHYT", "")), a.STT } into kq
                            select new
                            {
                                kq.Key.MaKP,
                                kq.Key.TenNhom,
                                kq.Key.STT,
                                kq.Key.TenDV,
                                kq.Key.DonVi,
                                kq.Key.DonGia,
                                kq.Key.TenNhomBK02,
                                SoLuong = kq.Sum(p => p.SoLuong),
                                ThanhTien = kq.Sum(p => p.ThanhTien),
                                TienBH = kq.Sum(p => p.TienBH),
                                TienBN = kq.Sum(p => p.TienBN),
                                kq.Key.TrongBH,
                                kq.Key.TrongDM
                            }).Where(p => p.SoLuong != 0).ToList();

            if (bk01_021.Count > 0 && _Benhnhan != null)
            {
                BaoCao.repBangKeCPNgoaiBH_A4 rep1 = new BaoCao.repBangKeCPNgoaiBH_A4();
                rep1.tenBN.Value = Bien.MaBV == "20001" ? _Benhnhan.TenBNhan.ToUpper() : _Benhnhan.TenBNhan;
                rep1.MaBNhan.Value = _mabn;
                rep1.TieuDe.Value = "BẢNG KÊ CHI PHÍ KHÁM BỆNH, CHỮA BỆNH";

                rep1.DiaChi.Value = _Benhnhan.DChi;
                int gioiTinh = int.Parse(_Benhnhan.GTinh.ToString());
                if (gioiTinh == 1)
                {
                    rep1.Nam.Value = "X";
                }
                else if (gioiTinh == 0)
                {
                    rep1.Nu.Value = "X";
                }
                if (_Benhnhan.SoKB != null)
                    rep1.SoKB.Value = _Benhnhan.SoKB;
                var _ngaykham = _dataContext.BNKBs.Where(p => p.MaBNhan == _mabn).OrderBy(p => p.IDKB).ToList();
                if (_ngaykham.Count > 0 && _ngaykham.First().NgayKham != null)
                    rep1.NgayKham.Value = DungChung.Ham.NgaySangChu(_ngaykham.First().NgayKham.Value, 3);

                if (_lrv != null)
                    rep1.NgayKT.Value = _lrv.NgayRa;
                if (_Benhnhan.DTuong.Contains("BHYT"))
                {
                    rep1.SoThe.Value = _Benhnhan.SThe;
                    rep1.coBH.Value = "X";
                    //  string muc = txtSoThe.Text.Substring(2, 1);

                    rep1.HanBHTu.Value = _Benhnhan.HanBHTu;
                    rep1.HanBHDen.Value = _Benhnhan.HanBHDen;
                    string macs = "";
                    if (_Benhnhan.MaCS != null)
                    {
                        macs = _Benhnhan.MaCS;
                        rep1.MaCS.Value = macs.Substring(0, 2) + "-" + macs.Substring(2, 3);
                    }
                    var csdkbd = _dataContext.BenhViens.Where(p => p.MaBV == macs).ToList();
                    if (csdkbd.Count > 0)
                    {
                        rep1.CSDKKCB.Value = csdkbd.First().TenBV;
                    }
                    if (dungtuyen == 1)
                    {
                        rep1.DungTuyen.Value = "X";
                        rep1.mucHuong.Value = "Chi phí ngoài danh mục".ToUpper();
                    }
                    else if (dungtuyen == 2)
                    {
                        rep1.TraiTuyen.Value = "X";
                        rep1.mucHuong.Value = "Chi phí ngoài danh mục".ToUpper();
                    }
                    if (capcuu == 1)
                    {
                        rep1.CapCuu.Value = "X";
                        rep1.TraiTuyen.Value = "";
                        rep1.DungTuyen.Value = "";
                    }
                }
                if (_lvp != null)
                {
                    int _fmat = Bien.FormatDate;
                    if (Bien.MaBV == "30002")
                        _fmat = 1;
                    rep1.NgayTT.Value = DungChung.Ham.NgaySangChu(_lvp.NgayTT.Value, _fmat);
                }

                if (_lrv != null)
                {
                    int _makp = _lrv.MaKP;
                    var kphong = _dataContext.KPhongs.Where(p => p.MaKP == (_makp)).ToList();
                    if (kphong.Count > 0)
                        rep1.KhoaPhong.Value = kphong.First().TenKP;
                    if (Bien.MaBV == "20001")
                    {
                        if (!string.IsNullOrEmpty(_lrv.MaYHCT))
                            rep1.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(_lrv.ChanDoan), DungChung.Ham.FreshString(_lrv.ChanDoanYHCT));// DungChung.Ham.GetICDstr(_lrv.ChanDoanYHCT) + "[" + DungChung.Ham.GetICDstr(_lrv.ChanDoan) + "]";
                        else
                        {
                            rep1.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(_lrv.ChanDoan), DungChung.Ham.GetMaYHCT(_lrv.MaICD, _licd10)[1]);
                        }
                    }
                    else
                        rep1.ChanDoan.Value = DungChung.Ham.GetICDstr(_lrv.ChanDoan);
                    rep1.MaICD.Value = DungChung.Ham.GetICDstr(_lrv.MaICD);
                    if (_lrv.SoNgaydt != null)
                        rep1.TongNgay.Value = _lrv.SoNgaydt.ToString() + " ngày";
                }
                string _ngaysinh = "";
                if (_Benhnhan.NgaySinh != null && _Benhnhan.NgaySinh.ToString() != "")
                    _ngaysinh = _Benhnhan.NgaySinh.ToString() + "/";
                if (_Benhnhan.ThangSinh != null && _Benhnhan.ThangSinh.ToString() != "")
                    _ngaysinh = _ngaysinh + _Benhnhan.ThangSinh.ToString() + "/";
                if (_Benhnhan.NamSinh != null && _Benhnhan.NamSinh.ToString() != "")
                    _ngaysinh = _ngaysinh + _Benhnhan.NamSinh.ToString();
                rep1.NSinh.Value = _ngaysinh;
                rep1.Tongtien.Value = bk01_021.Sum(p => p.ThanhTien);
                if (bk01_021.Count > 0)
                {
                    rep1.DataSource = bk01_021.ToList();
                    rep1.BindingData();
                    rep1.CreateDocument();
                    // rep1.DataMember = "Table";
                    frm.prcIN.PrintingSystem = rep1.PrintingSystem;
                    frm.ShowDialog();
                }
            }

            var _ldvng12 = (from vp in _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn)
                            join vpct in _dataContext.VienPhicts.Where(p => p.ThanhToan == 1) on vp.idVPhi equals vpct.idVPhi
                            select new { vp, vpct }).ToList();
            var bk00_0212 = (from vp in _ldvng12
                             join dv in dichvu.Where(p => p.MaDV != (Bien.MaBV == "30010" ? 12867 : 0)) on vp.vpct.MaDV equals dv.MaDV
                             select new { vp.vp.MaKP, dv.TenNhom, dv.STT, vp.vpct.idVPhict, TenDV = (Bien.MaBV == "12001" || _CQCQ == "12001") ? ((dv.TenRG != null && dv.TenRG.Trim() != "") ? dv.TenRG : (dv.TenDV + " " + dv.HamLuong)) : dv.TenDV, vp.vpct.DonVi, vp.vpct.DonGia, vp.vpct.SoLuong, vp.vpct.ThanhTien, vp.vpct.TienBH, vp.vpct.TienBN, vp.vpct.TrongBH, dv.TrongDM }).Where(p => p.SoLuong != 0).OrderBy(p => p.idVPhict).ToList();
            var bk01_0212 = (from a in bk00_0212
                             group a by new { a.MaKP, a.TenDV, a.DonVi, a.DonGia, a.TrongBH, a.TrongDM, TenNhom = (Bien.MaBV != "01071" && Bien.MaBV != "01049" && Bien.MaBV != "12345" && Bien.MaBV != "24297" && Bien.MaBV != "56789") ? a.TenNhom : (a.TenNhom.Replace("trong danh mục BHYT", "")), a.STT } into kq
                             select new
                             {
                                 kq.Key.MaKP,
                                 kq.Key.TenNhom,
                                 kq.Key.STT,
                                 kq.Key.TenDV,
                                 kq.Key.DonVi,
                                 kq.Key.DonGia,
                                 SoLuong = kq.Sum(p => p.SoLuong),
                                 ThanhTien = kq.Sum(p => p.ThanhTien),
                                 TienBH = kq.Sum(p => p.TienBH),
                                 TienBN = kq.Sum(p => p.TienBN),
                                 kq.Key.TrongBH,
                                 kq.Key.TrongDM
                             }).Where(p => p.SoLuong != 0).ToList();

            if (bk01_0212.Count > 0 && _Benhnhan != null)
            {
                BaoCao.repBangKeCPNgoaiBH_A4 rep1 = new BaoCao.repBangKeCPNgoaiBH_A4();
                rep1.tenBN.Value = Bien.MaBV == "20001" ? _Benhnhan.TenBNhan.ToUpper() : _Benhnhan.TenBNhan;
                rep1.MaBNhan.Value = _mabn;
                rep1.TieuDe.Value = "BẢNG KÊ CHI PHÍ KHÁM BỆNH, CHỮA BỆNH";

                rep1.DiaChi.Value = _Benhnhan.DChi;
                int gioiTinh = int.Parse(_Benhnhan.GTinh.ToString());
                if (gioiTinh == 1)
                {
                    rep1.Nam.Value = "X";
                }
                else if (gioiTinh == 0)
                {
                    rep1.Nu.Value = "X";
                }
                rep1.SoKB.Value = _Benhnhan.SoKB;
                var _ngaykham = _dataContext.BNKBs.Where(p => p.MaBNhan == _mabn).OrderBy(p => p.IDKB).ToList();
                if (_ngaykham.Count > 0 && _ngaykham.First().NgayKham != null)
                    rep1.NgayKham.Value = DungChung.Ham.NgaySangChu(_ngaykham.First().NgayKham.Value, 3);

                if (_lrv != null)
                    rep1.NgayKT.Value = _lrv.NgayRa;
                if (_Benhnhan.DTuong.Contains("BHYT"))
                {
                    rep1.SoThe.Value = _Benhnhan.SThe;
                    rep1.coBH.Value = "X";
                    //  string muc = txtSoThe.Text.Substring(2, 1);

                    rep1.HanBHTu.Value = _Benhnhan.HanBHTu;
                    rep1.HanBHDen.Value = _Benhnhan.HanBHDen;
                    string macs = "";
                    if (_Benhnhan.MaCS != null)
                    {
                        macs = _Benhnhan.MaCS;
                        rep1.MaCS.Value = macs.Substring(0, 2) + "-" + macs.Substring(2, 3);
                    }
                    var csdkbd = _dataContext.BenhViens.Where(p => p.MaBV == macs).ToList();
                    if (csdkbd.Count > 0)
                    {
                        rep1.CSDKKCB.Value = csdkbd.First().TenBV;
                    }
                    if (dungtuyen == 1)
                    {
                        rep1.DungTuyen.Value = "X";
                        rep1.mucHuong.Value = "Chi phí đã thanh toán".ToUpper();
                    }
                    else if (dungtuyen == 2)
                    {
                        rep1.TraiTuyen.Value = "X";
                        rep1.mucHuong.Value = "Chi phí đã thanh toán".ToUpper();
                    }
                    if (capcuu == 1)
                    {
                        rep1.CapCuu.Value = "X";
                        rep1.TraiTuyen.Value = "";
                        rep1.DungTuyen.Value = "";
                    }
                }
                else
                    rep1.mucHuong.Value = "Các dịch vụ đã thu trực tiếp".ToUpper();
                if (_lvp != null)
                {
                    int _fmat = Bien.FormatDate;
                    if (Bien.MaBV == "30002")
                        _fmat = 1;
                    rep1.NgayTT.Value = DungChung.Ham.NgaySangChu(_lvp.NgayTT.Value, _fmat);
                }

                if (_lrv != null)
                {
                    int _makp = _lrv.MaKP;
                    var kphong = _dataContext.KPhongs.Where(p => p.MaKP == (_makp)).ToList();
                    if (kphong.Count > 0)
                        rep1.KhoaPhong.Value = kphong.First().TenKP;
                    if (Bien.MaBV == "20001")
                    {
                        if (!string.IsNullOrEmpty(_lrv.MaYHCT))
                            rep1.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(_lrv.ChanDoan), DungChung.Ham.FreshString(_lrv.ChanDoanYHCT));// DungChung.Ham.GetICDstr(_lrv.ChanDoanYHCT) + "[" + DungChung.Ham.GetICDstr(_lrv.ChanDoan) + "]";
                        else
                        {
                            rep1.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(_lrv.ChanDoan), DungChung.Ham.GetMaYHCT(_lrv.MaICD, _licd10)[1]);
                        }//DungChung.Ham.GetICDstr(_lrv.ChanDoanYHCT) + "[" + DungChung.Ham.GetICDstr(_lrv.ChanDoan) + "]";
                    }
                    else
                        rep1.ChanDoan.Value = DungChung.Ham.GetICDstr(_lrv.ChanDoan);
                    rep1.MaICD.Value = DungChung.Ham.GetICDstr(_lrv.MaICD);
                    if (_lrv.SoNgaydt != null)
                        rep1.TongNgay.Value = _lrv.SoNgaydt.ToString() + " ngày";
                }
                string _ngaysinh = "";
                if (_Benhnhan.NgaySinh != null && _Benhnhan.NgaySinh.ToString() != "")
                    _ngaysinh = _Benhnhan.NgaySinh.ToString() + "/";
                if (_Benhnhan.ThangSinh != null && _Benhnhan.ThangSinh.ToString() != "")
                    _ngaysinh = _ngaysinh + _Benhnhan.ThangSinh.ToString() + "/";
                if (_Benhnhan.NamSinh != null && _Benhnhan.NamSinh.ToString() != "")
                    _ngaysinh = _ngaysinh + _Benhnhan.NamSinh.ToString();
                rep1.NSinh.Value = _ngaysinh;
                rep1.Tongtien.Value = bk01_0212.Sum(p => p.ThanhTien);
                if (Bien.MaBV == "30003" && _bnkb.Count > 0)
                {
                    rep1.BSCD.Value = _bnkb.Last().TenCB;
                }
                if (bk01_0212.Count > 0)
                {
                    rep1.DataSource = bk01_0212.ToList();
                    rep1.BindingData();
                    rep1.CreateDocument();
                    // rep1.DataMember = "Table";
                    frmIn frm1 = new frmIn();
                    frm.prcIN.PrintingSystem = rep1.PrintingSystem;
                    frm.ShowDialog();
                }
            }
            QLBV.Utilities.Helppers.MemoryManagement.FlushMemory();
        }

        //12122 các bảng kê lên thêm hàm lượng a.phước y/c ngày 18-01
        public static void In_BangKe01_02(QLBV_Database.QLBVEntities _dataContext, int _mabn, int _maubk, int kieu)
        {
            //try
            //{
            _dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
            List<c_BangKe> _lbangke = new List<c_BangKe>();
            frmIn frm = new frmIn();
            int _HTTT = -1;
            string _muc = "", _tenbn = "", _DTuong = "";
            double _tienTThu = 0;
            int _maubk01 = 0, _maubk02 = 0;
            // hiển thị biểu mẫu bảng kê 01BV
            int _hangbv = DungChung.Ham.hangBV(Bien.MaBV);
            string _CQCQ = "";
            string _MaBV = Bien.MaBV;
            var CQCQ = _dataContext.BenhViens.Where(p => p.MaBV == _MaBV).Select(p => p.MaChuQuan).FirstOrDefault();
            if (CQCQ != null)
                _CQCQ = CQCQ;

            string TTTheOld = "";
            var tt = _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn).ToList();
            if (tt.Count > 0)
            {
                //if ((Bien.MaBV == "27001" || Bien.MaBV == "27022" || Bien.MaBV == "30010" || Bien.MaBV == "30340" || Bien.MaBV == "30012" || Bien.MaBV == "12128" || Bien.MaBV == "12122" || Bien.MaBV == "01830" || Bien.MaBV == "30005" || Bien.MaBV == "12038" || Bien.MaBV == "08104" || Bien.MaBV == "02005" || Bien.MaBV == "19048" || Bien.MaBV == "24009" || Bien.MaBV == "26007" || Bien.MaBV == "06007" || Bien.MaBV == "30004" || Bien.MaBV == "33080" || Bien.MaBV == "33050" || Bien.MaBV == "30003" || Bien.MaBV == "12001" || Bien.MaBV == "08204" || Bien.MaBV == "08602" || Bien.MaBV == "30281" || _maubk == 4) && _maubk != 5) // bảng kê a4
                //    _khoA4 = true;
                //else
                //    _khoA4 = false;
                if (kieu == 0)
                {
                    var qthong = _dataContext.HTHONGs.Where(p => p.MaBV == Bien.MaBV).Where(p => p.MauIn != null).Select(p => p.MauIn).FirstOrDefault();
                    if (qthong != null)
                    {
                        string[] mauin = qthong.Split(';');
                        if (mauin[0] != null && mauin[0] != "")
                            _maubk01 = Convert.ToInt32(mauin[0].Trim());
                        if (mauin[1] != null && mauin[1] != "")
                            _maubk02 = Convert.ToInt32(mauin[1].Trim());
                    }
                }
                else
                {
                    switch (_maubk)
                    {
                        case 4:
                            _maubk01 = 1;
                            _maubk02 = 1;

                            break;

                        case 5:
                            _maubk01 = 0;
                            _maubk02 = 0;

                            break;

                        case 41:

                            _maubk01 = 2;
                            _maubk02 = 2;
                            break;
                    }
                }
                // hiển thị biểu mẫu bảng kê 01BV
                if (_mabn > 0)
                {
                    int _noitru = 0;

                    var par = _dataContext.BenhNhans.Where(p => p.MaBNhan == _mabn).ToList();
                    var TTBX = _dataContext.TTboXungs.Where(p => p.MaBNhan == _mabn).ToList();
                    var _ngaykham = _dataContext.BNKBs.Where(p => p.MaBNhan == _mabn).OrderBy(p => p.IDKB).ToList();
                    var Rvien = _dataContext.RaViens.Where(p => p.MaBNhan == _mabn).ToList();
                    var vvien = _dataContext.VaoViens.Where(p => p.MaBNhan == _mabn).ToList();
                    var tung = _dataContext.TamUngs.Where(p => p.MaBNhan == _mabn).ToList();
                    if (tung.Where(p => p.PhanLoai == 0).ToList().Count > 0)
                        _tienTThu = tung.Where(p => p.PhanLoai == 0).Sum(p => p.SoTien).Value;
                    int idVP = 0;
                    if (tt.Count > 0)
                        idVP = tt.First().idVPhi;

                    var vpcttong = _dataContext.VienPhicts.Where(p => p.idVPhi == idVP).ToList();
                    var qvpct = (from vpct in vpcttong
                                 group vpct by new { vpct.ThanhToan, vpct.DonVi, vpct.DonGia, vpct.Duyet, vpct.IDTamUng, vpct.idVPhi, vpct.MaDV, vpct.MaKP, vpct.Mien, vpct.TrongBH, vpct.TyLeBHTT, vpct.TyLeTT, vpct.XHH }
                                     into kq
                                 select new
                                 {
                                     DonGia = kq.Key.DonGia,
                                     DonVi = kq.Key.DonVi,
                                     Duyet = kq.Key.Duyet,
                                     IDTamUng = kq.Key.IDTamUng,
                                     idVPhi = kq.Key.idVPhi,
                                     idVPhict = kq.FirstOrDefault().idVPhict,
                                     MaDV = kq.Key.MaDV,
                                     MaKP = kq.Key.MaKP,
                                     Mien = kq.Key.Mien,
                                     SoLuong = kq.Sum(p => p.SoLuong),
                                     ThanhTien = kq.Sum(p => p.ThanhTien),
                                     ThanhToan = kq.Key.ThanhToan,
                                     TienBH = kq.Sum(p => p.TienBH),
                                     TienBN = kq.Sum(p => p.TienBN),
                                     TrongBH = kq.Key.TrongBH,
                                     TyLeBHTT = kq.Key.TyLeBHTT,
                                     TyLeTT = kq.Key.TyLeTT,
                                     XHH = kq.Key.XHH,
                                     TBNTT = kq.Sum(p => p.TBNTT),
                                     TBNCTT = kq.Sum(p => p.TBNCTT)
                                 }
                                              ).ToList();
                    List<VienPhict> _lvpct = new List<VienPhict>();
                    foreach (var a in qvpct)
                    {
                        VienPhict vpct = new VienPhict();
                        vpct.DonGia = a.DonGia;
                        vpct.DonVi = a.DonVi;
                        vpct.Duyet = a.Duyet;
                        vpct.IDTamUng = a.IDTamUng;
                        vpct.idVPhi = a.idVPhi;
                        vpct.idVPhict = a.idVPhict;
                        vpct.MaDV = a.MaDV;
                        vpct.MaKP = a.MaKP;
                        vpct.Mien = a.Mien;
                        vpct.SoLuong = a.SoLuong;
                        vpct.ThanhTien = a.ThanhTien;
                        vpct.ThanhToan = a.ThanhToan;
                        vpct.TienBH = a.TienBH;
                        vpct.TienBN = a.TienBN;
                        vpct.TrongBH = a.TrongBH;
                        vpct.TyLeBHTT = a.TyLeBHTT;
                        vpct.TyLeTT = a.TyLeTT;
                        vpct.XHH = a.XHH;
                        vpct.TBNTT = a.TBNTT;
                        vpct.TBNCTT = a.TBNCTT;
                        _lvpct.Add(vpct);
                    }
                    var dichvu = (from dv in _dataContext.DichVus
                                  join tn in _dataContext.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                  join nhomdv in _dataContext.NhomDVs on tn.IDNhom equals nhomdv.IDNhom
                                  select new { nhomdv.TenNhomBK02, dv.SoTT, dv.TrongDM, dv.MaDV, TenRGTN = tn.TenRG, dv.TenHC, dv.HamLuong, dv.PLoai, dv.MaQD, dv.SoQD, nhomdv.TenNhom, nhomdv.TenNhomCT, nhomdv.STT, dv.TenDV, dv.DonVi, dv.TenRG, nhomdv.IDNhom }).ToList();
                    //lấy số phim x-quang
                    var _lcls = (from cls in _dataContext.CLS.Where(p => p.MaBNhan == _mabn)
                                 join cd in _dataContext.ChiDinhs on cls.IdCLS equals cd.IdCLS
                                 select new { cd.MaDV, cd.SoPhim, cd.IDCD }).ToList();
                    var sophim = (from dv in dichvu.Where(p => p.TenRGTN == Bien.st_TieuNhomRG_ChuyenKhoa.X_Quang)
                                  join cls in _lcls.Where(p => p.SoPhim != null) on dv.MaDV equals cls.MaDV
                                  select cls).ToList();
                    int SoPhim = 0;
                    if (sophim.Count > 0)
                        SoPhim = sophim.Sum(p => p.SoPhim) ?? 0;
                    // thêm tenCK vào dich vụ công khám, tạm bổ ngày 26/07
                    string[] _chuyenkhoa = new string[20];
                    for (int i = 0; i < 20; i++)
                    {
                        _chuyenkhoa[i] = "";
                    }
                    int j = 0;

                    foreach (var item in _ngaykham)
                    {
                        //if (item.ChuyenKhoa != null)
                        //{
                        //    _chuyenkhoa[j] = item.ChuyenKhoa;
                        //    j++;
                        //}

                        var ck = Bien._lChuyenKhoa.Where(p => p.MaCK == item.MaCK).ToList();
                        if (ck.Count > 0)
                        {
                            _chuyenkhoa[j] = ck.First().ChuyenKhoa ?? "";
                            j++;
                        }
                    }
                    int _iddtbn = -1; string _loaiDT = "";
                    int DTCKhoan = 0;
                    if (par.Count > 0)
                    {
                        _iddtbn = par.First().IDDTBN;

                        _DTuong = par.First().DTuong;
                        if (par.First().MucHuong != null && par.First().MucHuong.ToString() != "")
                            _muc = par.First().MucHuong.ToString();
                        _noitru = par.First().NoiTru.Value;
                        _tenbn = par.First().TenBNhan;
                    }
                    if (TTBX.Count > 0)
                        DTCKhoan = TTBX.First().HTThanhToan;
                    var dtbn = _dataContext.DTBNs.Where(p => p.IDDTBN == _iddtbn).ToList();
                    if (dtbn.Count > 0)
                    {
                        _HTTT = dtbn.First().HTTT;
                        _loaiDT = DTCKhoan == 0 ? dtbn.First().DTBN1 : dtbn.First().DTBN1 + ": thanh toán chuyển khoản"; //dtbn.First().MoTa;
                    }
                    string maCQCQ = "";
                    if (Bien.MaTinh == "12")
                    {
                        var qcqcq = _dataContext.BenhViens.Where(p => p.MaBV == Bien.MaBV).FirstOrDefault();
                        if (qcqcq != null)
                            maCQCQ = qcqcq.MaChuQuan;
                    }

                    if (_hangbv == 4 && ((Bien.MaTinh != "12" && Bien.MaBV != "30280" && Bien.MaBV != "30340" && Bien.MaBV != "27001" && Bien.MaBV != "04247" && Bien.MaBV != "27183") || maCQCQ == "12001"))
                        _noitru = 2;

                    for (int m = 0; m < 2; m++)//0: Chi phí không phải xã hội hóa; 1: chi phí xã hội hóa
                    {
                        _lbangke.Clear();
                        if (m == 1)
                        {
                            var qxhh = (from vpct in _lvpct.Where(p => p.XHH > 0) select vpct).ToList();
                            if (qxhh.Count == 0)
                                break;
                        }
                        switch (_noitru)
                        {
                            #region
                            case 0:
                                #region Bảng kê ngoại trú
                                #region lấy số thứ tự thanh toán 27001

                                string sodk = "";
                                if (Bien.MaBV == "27001")
                                {
                                    var qsodk = _dataContext.SoDKKBs.Where(p => p.MaBNhan == _mabn && p.Status == 3).FirstOrDefault();
                                    if (qsodk != null)
                                    {
                                        sodk = qsodk.SoDK.ToString();
                                    }
                                }
                                #endregion
                                if (_maubk01 == 1 || _maubk01 == 2)
                                {
                                    if (vvien.Count > 0)
                                    {
                                        if (_maubk01 == 2)
                                        {
                                            #region mau moi
                                            BaoCao.repBangKe01bv_A4_26007 rep = new BaoCao.repBangKe01bv_A4_26007();
                                            if (sodk != "")
                                            {
                                                rep.STTThanhToan_lbl.Value = "Số TT: ";
                                                rep.STTThanhToan.Value = sodk;
                                            }
                                            rep.txtGiamDinhBH.Text = Bien.MaBV == "30340" ? Bien.GiamDinhBH : "";
                                            rep.tenBN.Value = Bien.MaBV == "20001" ? _tenbn.ToUpper() : _tenbn;
                                            rep.MaBNhan.Value = _mabn;
                                            if (par.Count > 0)
                                            {
                                                rep.KhuVuc.Value = par.First().KhuVuc;
                                                rep.DiaChi.Value = par.First().DChi;
                                                int gioiTinh = int.Parse(par.First().GTinh.ToString());
                                                if (gioiTinh == 1)
                                                {
                                                    rep.Nam.Value = "X";
                                                }
                                                else if (gioiTinh == 0)
                                                {
                                                    rep.Nu.Value = "X";
                                                }
                                                if (_ngaykham.Count > 0)
                                                {
                                                    DateTime _dt2 = System.DateTime.Now;
                                                    if (_ngaykham.First().NgayKham != null)
                                                    {
                                                        _dt2 = _ngaykham.First().NgayKham.Value;
                                                        rep.NgayKham.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                                    }
                                                }

                                                if (Rvien.Count > 0)
                                                {
                                                    DateTime _dt2 = System.DateTime.Now;
                                                    if (Bien.MaBV == "30003")
                                                    {
                                                        if (tt.First().NgayTT != null)
                                                        {
                                                            _dt2 = tt.First().NgayTT.Value;
                                                            rep.NgayKT.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                                        }
                                                    }
                                                    else
                                                    {
                                                        if (Rvien.First().NgayRa != null)
                                                        {
                                                            _dt2 = Rvien.First().NgayRa.Value;
                                                            rep.NgayKT.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                                        }
                                                    }
                                                }
                                                _DTuong = (par.First().DTuong).ToString();
                                                int dungtuyen = 0, capcuu = 0;
                                                if (_HTTT == 1) //   if (_DTuong.Contains("BHYT"))
                                                {
                                                    rep.SoThe.Value = par.First().SThe;
                                                    rep.coBH.Value = "X";
                                                    //if(par.First().SThe!=null && par.First().SThe.ToString()!="" && par.First().SThe.Length>10)
                                                    // _muc = par.First().SThe.Substring(2, 1);

                                                    rep.HanBHTu.Value = par.First().HanBHTu;
                                                    rep.HanBHDen.Value = par.First().HanBHDen;
                                                    string macs = "";
                                                    if (par.First().MaCS != null)
                                                    {
                                                        macs = par.First().MaCS;
                                                        rep.MaCS.Value = macs.Substring(0, 2) + "-" + macs.Substring(2, 3);
                                                    }
                                                    var csdkbd = _dataContext.BenhViens.Where(p => p.MaBV == macs).ToList();
                                                    if (csdkbd.Count > 0)
                                                    {
                                                        rep.CSDKKCB.Value = csdkbd.First().TenBV;
                                                    }

                                                    if (par.First().Tuyen != null)
                                                    {
                                                        dungtuyen = int.Parse(par.First().Tuyen.ToString());
                                                    }

                                                    capcuu = int.Parse(par.First().CapCuu.ToString());
                                                    if (capcuu == 1)
                                                    {
                                                        rep.CapCuu.Value = "X";
                                                        rep.DungTuyen.Value = "";
                                                        rep.TraiTuyen.Value = "";
                                                    }
                                                }
                                                else
                                                {
                                                    if (m == 1)
                                                        rep.mucHuong.Value = "Dành cho đối tượng " + _loaiDT + " (XHH)";
                                                    else
                                                        rep.mucHuong.Value = "Dành cho đối tượng " + _loaiDT;
                                                    rep.koBH.Value = "X";
                                                    capcuu = int.Parse(par.First().CapCuu.ToString());
                                                    if (capcuu == 1)
                                                    {
                                                        rep.CapCuu.Value = "X";
                                                    }
                                                    rep.HanBHTu.Value = "";
                                                }

                                                if (tt.Count > 0)
                                                {
                                                    int _fmat = Bien.FormatDate;
                                                    if (Bien.MaBV == "30002")
                                                        _fmat = 1;
                                                    if (Bien.MaBV == "08204" || Bien.MaBV == "19048" || Bien.MaBV == "27023")
                                                        rep.NgayGD.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, 0);
                                                    else if (Bien.MaBV == "27001")
                                                        rep.NgayGD.Value = " Ngày ... tháng... năm......";
                                                    else
                                                        rep.NgayGD.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, _fmat);
                                                    rep.NgayTT.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, _fmat);
                                                }

                                                if (Rvien.Count > 0)
                                                {
                                                    int _makp = 0;
                                                    if (Rvien.Count > 0)
                                                        _makp = Rvien.First().MaKP;
                                                    var kphong = _dataContext.KPhongs.Where(p => p.MaKP == (_makp)).ToList();
                                                    if (kphong.Count > 0)
                                                        rep.KhoaPhong.Value = kphong.First().TenKP;
                                                    rep.ChanDoan.Value = DungChung.Ham.GetICDstr(Rvien.First().ChanDoan);
                                                    rep.MaICD.Value = DungChung.Ham.GetICDstr(Rvien.First().MaICD);
                                                    if (Rvien.First().SoNgaydt != null)
                                                        rep.TongNgay.Value = Rvien.First().SoNgaydt.ToString() + " ngày";
                                                    string _mabvchuyenden = "";
                                                    if (Bien.MaBV == "20001")
                                                    {
                                                        if (Rvien.First().MaBVC != null)
                                                        {
                                                            _mabvchuyenden = Rvien.First().MaBVC;
                                                        }
                                                        else
                                                        {
                                                            if (!string.IsNullOrEmpty(par.First().MaBV))
                                                                _mabvchuyenden = par.First().MaBV;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        if (!string.IsNullOrEmpty(par.First().MaBV))
                                                            _mabvchuyenden = par.First().MaBV;
                                                        else
                                                        {
                                                            if (Rvien.First().MaBVC != null)
                                                                _mabvchuyenden = Rvien.First().MaBVC;
                                                            rep.xrLabel66.Text = "Nơi chuyển đi:";
                                                        }
                                                    }
                                                    var bv = _dataContext.BenhViens.Where(p => p.MaBV == (_mabvchuyenden)).ToList();
                                                    if (bv.Count > 0)
                                                    {
                                                        rep.NoiChuyenDen.Value = bv.First().TenBV;
                                                    }
                                                }

                                                if (par.First().SoKB != null)
                                                    rep.SoKB.Value = par.First().SoKB;
                                                //if (vvien.First().SoVV != null)
                                                //    rep.SoKB.Value = vvien.First().SoVV;
                                                string _ngaysinh = "";
                                                if (par.First().NgaySinh != null && par.First().NgaySinh.ToString() != "")
                                                    _ngaysinh = par.First().NgaySinh.ToString() + "/";
                                                if (par.First().ThangSinh != null && par.First().ThangSinh.ToString() != "")
                                                    _ngaysinh = _ngaysinh + par.First().ThangSinh.ToString() + "/";
                                                if (par.First().NamSinh != null && par.First().NamSinh.ToString() != "")
                                                    _ngaysinh = _ngaysinh + par.First().NamSinh.ToString();
                                                rep.NSinh.Value = _ngaysinh;
                                                //bệnh nhân BHYT
                                                if (_HTTT == 1)// if (_DTuong == "BHYT")
                                                {
                                                    int i = 0;

                                                    var bk01 = (from vp1 in tt
                                                                join vpct in _lvpct.Where(p => p.TrongBH == 1).Where(p => m == 0 ? (p.XHH == 0) : (p.XHH > 0)) on vp1.idVPhi equals vpct.idVPhi
                                                                join dv in dichvu on vpct.MaDV equals dv.MaDV
                                                                select new { vp1.MaKP, dv.IDNhom, dv.TenHC, dv.TenRG, dv.HamLuong, dv.MaQD, dv.SoQD, dv.TenNhom, dv.TenNhomCT, dv.STT, MaKPct = vpct.MaKP, vpct.idVPhict, dv.TenDV, vpct.DonVi, vpct.DonGia, vpct.SoLuong, vpct.ThanhTien, vpct.TienBH, vpct.TienBN, vpct.TrongBH, dv.TrongDM }).OrderBy(p => p.idVPhict).ToList();

                                                    foreach (var item in bk01)
                                                    {
                                                        string tendv = item.TenDV;
                                                        if (Bien.MaBV == "30012")
                                                        { tendv = (item.TenHC != null && item.TenHC != "") ? (item.TenHC + " (" + item.TenDV + ")") : item.TenDV; }  // tendv + "; " + (item.TenHC ?? "") + "; " + (item.HamLuong ?? "");}
                                                        else if (Bien.MaBV == "27183" || Bien.MaBV == "12001" || Bien.MaBV == "12122")
                                                            tendv = item.TenDV + " " + item.HamLuong;
                                                        else if (Bien.MaBV == "12001" || _CQCQ == "12001")
                                                            tendv = (item.TenRG != null && item.TenRG.Trim() == "") ? item.TenRG : item.TenDV;
                                                        _lbangke.Add(new c_BangKe { TrongBH = item.TrongBH, DonGia = item.DonGia, DonVi = item.DonVi, IdVPhict = item.idVPhict, MaKP = item.MaKP ?? 0, MaKPct = item.MaKPct ?? 0, SoLuong = item.SoLuong, STT = item.STT ?? 0, TenDV = tendv, TenNhom = item.TenNhom, TienBH = item.TienBH, TienBN = item.TienBN, ThanhTien = item.ThanhTien, MaQD = item.MaQD, SoQD = item.SoQD });
                                                    }
                                                    double _tongtien = bk01.Where(p => p.TrongBH == 1).Sum(p => p.ThanhTien);
                                                    if (dungtuyen == 1)
                                                    {
                                                        if (capcuu != 1)
                                                            rep.DungTuyen.Value = "X";
                                                        if (m == 0)
                                                            rep.mucHuong.Value = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                        else
                                                            rep.mucHuong.Value = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "% (XHH)";
                                                    }
                                                    else if (dungtuyen == 2)
                                                    {
                                                        if (capcuu != 1)
                                                            rep.TraiTuyen.Value = "X";

                                                        string kvuc = "";
                                                        if (par.First().KhuVuc != null)
                                                            kvuc = par.First().KhuVuc;
                                                        string muchuong = "";
                                                        switch (_hangbv)
                                                        {
                                                            case 1:

                                                                muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.4 + "%";
                                                                break;

                                                            case 2:
                                                                if (Bien.MaBV == "01830")
                                                                    muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.7 + "%";
                                                                else
                                                                    muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.6 + "%";
                                                                break;

                                                            case 3:
                                                                if (Bien.MaBV == "08204" || _tongtien < Bien.GHanTT100)
                                                                {
                                                                    if (kvuc.ToLower().Contains("k"))
                                                                        muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                                    else
                                                                        muchuong = "Mức hưởng: " + "70" + "%";
                                                                }
                                                                else
                                                                {
                                                                    if (kvuc.ToLower().Contains("k"))
                                                                        muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                                    else
                                                                        muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.7 + "%";
                                                                }
                                                                break;

                                                            case 4:
                                                                muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                                break;
                                                        }
                                                        if (m == 0)
                                                            rep.mucHuong.Value = muchuong;
                                                        else
                                                            rep.mucHuong.Value = muchuong + " (XHH)";
                                                    }
                                                    // hiện thị thông báo số tiền thu thêm hoặc trả lại
                                                    double sotien = 0;
                                                    sotien = bk01.Sum(p => p.TienBN);
                                                    rep.TienBN.Value = sotien;
                                                    rep.TienBH.Value = bk01.Sum(p => p.TienBH);
                                                    rep.Tongtien.Value = _tongtien;
                                                    double tienCL = 0;
                                                    tienCL = sotien - _tienTThu;
                                                    if (Bien.MaBV != "01071" && Bien.MaBV != "01049" && Bien.MaBV != "12345" && Bien.MaBV != "24297" && Bien.MaBV != "56789")
                                                    {
                                                        if (tienCL > 0)
                                                        {
                                                            MessageBox.Show("Số tiền bệnh nhân phải nộp thêm: " + tienCL.ToString("##,###"));
                                                        }
                                                        else
                                                        {
                                                            if (tienCL < 0)
                                                            {
                                                                tienCL *= -1;
                                                                MessageBox.Show(string.Format("Số tiền trả lại cho bệnh nhân: " + tienCL.ToString("##,###")));
                                                            }
                                                        }
                                                    }
                                                    if (bk01.Count > 0)
                                                    {
                                                        rep.DataSource = _lbangke.ToList();
                                                        rep.BindingData();
                                                        rep.CreateDocument();
                                                        //rep.DataMember = "Table";
                                                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                                        frm.ShowDialog();
                                                    }
                                                }// ket thuc BN BHYT
                                                else
                                                {
                                                    var bk01 =
                                                         (from vp1 in tt
                                                          join vpct in _lvpct.Where(p => p.TrongBH == 1 || p.TrongBH == 0).Where(p => m == 0 ? (p.XHH == 0) : (p.XHH > 0)) on vp1.idVPhi equals vpct.idVPhi
                                                          join dv in dichvu on vpct.MaDV equals dv.MaDV
                                                          where vpct.ThanhToan == 0
                                                          select new { vp1.MaKP, dv.MaQD, dv.TenHC, dv.HamLuong, dv.SoQD, TenNhom = vpct.TrongBH == 1 ? dv.TenNhom : dv.TenNhom.Replace("trong danh mục BHYT", ""), dv.STT, TenDV = (Bien.MaBV == "27183" || Bien.MaBV == "12122") ? (dv.TenDV + " " + dv.HamLuong) : ((Bien.MaBV == "12001" || _CQCQ == "12001") ? ((dv.TenRG != null && dv.TenRG.Trim() != "") ? dv.TenRG : dv.TenDV) : dv.TenDV), vpct.DonVi, vpct.DonGia, vpct.SoLuong, vpct.ThanhTien, TienBN = vpct.TienBN, vpct.TienBH }).ToList();

                                                    rep.Tongtien.Value = bk01.Sum(p => p.ThanhTien);
                                                    rep.TienBN.Value = bk01.Sum(p => p.TienBN);
                                                    var tamthu = _dataContext.TamUngs.Where(p => p.MaBNhan == _mabn).ToList();
                                                    rep.TamThu.Value = tamthu.Where(p => p.PhanLoai == 0).Sum(p => p.SoTien).Value - tamthu.Where(p => p.PhanLoai == 4).Sum(p => p.SoTien).Value;

                                                    if (tamthu.Where(p => p.PhanLoai == 3).Sum(p => p.SoTien) != null)
                                                        rep.ThuTT.Value = tamthu.Where(p => p.PhanLoai == 3).Sum(p => p.SoTien).Value;
                                                    else
                                                        rep.ThuTT.Value = 0;
                                                    if (bk01.Count > 0)
                                                    {
                                                        rep.DataSource = bk01.ToList();
                                                        rep.BindingData();
                                                        rep.CreateDocument();
                                                        //rep.DataMember = "Table";
                                                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                                        frm.ShowDialog();
                                                    }
                                                }

                                                // kết thúc
                                            }

                                            #endregion
                                        }
                                        else
                                        {
                                            if (Bien.MaBV == "20001" && _DTuong == "Dịch vụ")
                                            {
                                                BangkeTTBNDV_20001(_mabn);
                                            }
                                            else if ((Bien.MaBV == "01071" || Bien.MaBV == "01049" || Bien.MaBV == "12345" || Bien.MaBV == "24297") && _DTuong == "Dịch vụ")
                                            {
                                                BKeBNDichVu_01071(_mabn);

                                                //InBangKePhongKham_01071(_mabn);
                                            }
                                            else
                                            {
                                                #region mau cu
                                                BaoCao.repBangKe01bv_A4 rep = new BaoCao.repBangKe01bv_A4();
                                                if (sodk != "")
                                                {
                                                    rep.STTThanhToan_lbl.Value = "Số TT: ";
                                                    rep.STTThanhToan.Value = sodk;
                                                }
                                                rep.tenBN.Value = Bien.MaBV == "20001" ? _tenbn.ToUpper() : _tenbn;
                                                rep.TenBN2.Value = _tenbn;
                                                rep.MaBNhan.Value = _mabn;
                                                rep.txtGiamDinhBH.Text = Bien.MaBV == "30340" ? Bien.GiamDinhBH : "";
                                                rep.GDBH.Value = Bien.MaBV == "30340" ? Bien.GiamDinhBH : "";
                                                if (par.Count > 0)
                                                {
                                                    rep.KhuVuc.Value = par.First().KhuVuc;
                                                    rep.DiaChi.Value = par.First().DChi;
                                                    int gioiTinh = int.Parse(par.First().GTinh.ToString());
                                                    if (gioiTinh == 1)
                                                    {
                                                        rep.Nam.Value = "X";
                                                    }
                                                    else if (gioiTinh == 0)
                                                    {
                                                        rep.Nu.Value = "X";
                                                    }
                                                    if (_ngaykham.Count > 0)
                                                    {
                                                        DateTime _dt2 = System.DateTime.Now;
                                                        if (_ngaykham.First().NgayKham != null)
                                                        {
                                                            _dt2 = _ngaykham.First().NgayKham.Value;
                                                            rep.NgayKham.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                                        }
                                                    }
                                                    if (Rvien.Count > 0)
                                                    {
                                                        DateTime _dt2 = System.DateTime.Now;
                                                        if (par.First().DTNT == true)
                                                        {
                                                            if (Rvien.First().NgayRa != null)
                                                                _dt2 = Rvien.First().NgayRa.Value;
                                                            rep.NgayKT.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                                        }
                                                        else
                                                        {
                                                            if (tt.First().NgayTT != null)
                                                            {
                                                                _dt2 = tt.First().NgayTT.Value;
                                                                rep.NgayKT.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                                            }
                                                        }
                                                    }
                                                    //if (Rvien.Count > 0)
                                                    //{
                                                    //    DateTime _dt2 = System.DateTime.Now;
                                                    //    //if (Bien.MaBV == "30003")
                                                    //    //{
                                                    //    if (tt.First().NgayTT != null)
                                                    //    {
                                                    //        _dt2 = tt.First().NgayTT.Value;
                                                    //        rep.NgayKT.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                                    //    }
                                                    //    //}
                                                    //    //else
                                                    //    //{
                                                    //    //    if (Rvien.First().NgayRa != null)
                                                    //    //    {
                                                    //    //        _dt2 = Rvien.First().NgayRa.Value;
                                                    //    //        rep.NgayKT.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                                    //    //    }
                                                    //    //}
                                                    //}
                                                    _DTuong = (par.First().DTuong).ToString();
                                                    int dungtuyen = 0, capcuu = 0;
                                                    if (_HTTT == 1) //   if (_DTuong.Contains("BHYT"))
                                                    {
                                                        rep.SoThe.Value = par.First().SThe;
                                                        rep.coBH.Value = "X";
                                                        //if(par.First().SThe!=null && par.First().SThe.ToString()!="" && par.First().SThe.Length>10)
                                                        // _muc = par.First().SThe.Substring(2, 1);

                                                        rep.HanBHTu.Value = par.First().HanBHTu;
                                                        rep.HanBHDen.Value = par.First().HanBHDen;
                                                        string macs = "";
                                                        if (par.First().MaCS != null)
                                                        {
                                                            macs = par.First().MaCS;
                                                            rep.MaCS.Value = macs.Substring(0, 2) + "-" + macs.Substring(2, 3);
                                                        }
                                                        var csdkbd = _dataContext.BenhViens.Where(p => p.MaBV == macs).ToList();
                                                        if (csdkbd.Count > 0)
                                                        {
                                                            rep.CSDKKCB.Value = csdkbd.First().TenBV;
                                                        }

                                                        if (par.First().Tuyen != null)
                                                        {
                                                            dungtuyen = int.Parse(par.First().Tuyen.ToString());
                                                        }

                                                        capcuu = int.Parse(par.First().CapCuu.ToString());
                                                        if (capcuu == 1)
                                                        {
                                                            rep.CapCuu.Value = "X";
                                                            rep.DungTuyen.Value = "";
                                                            rep.TraiTuyen.Value = "";
                                                        }
                                                    }
                                                    else
                                                    {
                                                        if (m == 0)
                                                            rep.mucHuong.Value = "Dành cho đối tượng " + _loaiDT;
                                                        else
                                                            rep.mucHuong.Value = "Dành cho đối tượng " + _loaiDT + " (XHH)";
                                                        rep.koBH.Value = "X";
                                                        capcuu = int.Parse(par.First().CapCuu.ToString());
                                                        if (capcuu == 1)
                                                        {
                                                            rep.CapCuu.Value = "X";
                                                        }
                                                        rep.HanBHTu.Value = "";
                                                    }

                                                    if (tt.Count > 0)
                                                    {
                                                        int _fmat = Bien.FormatDate;
                                                        if (Bien.MaBV == "30002")
                                                            _fmat = 1;
                                                        if (Bien.MaBV == "08204" || Bien.MaBV == "19048" || Bien.MaBV == "27023")
                                                            rep.NgayGD.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, 0);
                                                        else if (Bien.MaBV == "27001" || Bien.MaBV == "30002")
                                                            rep.NgayGD.Value = " Ngày ... tháng... năm......";
                                                        else
                                                            rep.NgayGD.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, _fmat);
                                                        rep.NgayTT.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, _fmat);
                                                    }

                                                    if (Rvien.Count > 0)
                                                    {
                                                        int _makp = 0;
                                                        if (Rvien.Count > 0)
                                                            _makp = Rvien.First().MaKP;
                                                        var kphong = _dataContext.KPhongs.Where(p => p.MaKP == (_makp)).ToList();
                                                        if (kphong.Count > 0)
                                                            rep.KhoaPhong.Value = kphong.First().TenKP;
                                                        rep.ChanDoan.Value = DungChung.Ham.GetICDstr(Rvien.First().ChanDoan);
                                                        rep.MaICD.Value = DungChung.Ham.GetICDstr(Rvien.First().MaICD);
                                                        if (Rvien.First().SoNgaydt != null)
                                                            rep.TongNgay.Value = Rvien.First().SoNgaydt.ToString() + " ngày";
                                                        string _mabvchuyenden = "";
                                                        if (Bien.MaBV == "20001")
                                                        {
                                                            if (Rvien.First().MaBVC != null)
                                                            {
                                                                _mabvchuyenden = Rvien.First().MaBVC;
                                                            }
                                                            else
                                                            {
                                                                if (!string.IsNullOrEmpty(par.First().MaBV))
                                                                    _mabvchuyenden = par.First().MaBV;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (!string.IsNullOrEmpty(par.First().MaBV))
                                                                _mabvchuyenden = par.First().MaBV;
                                                            else
                                                            {
                                                                if (Rvien.First().MaBVC != null)
                                                                {
                                                                    _mabvchuyenden = Rvien.First().MaBVC;
                                                                    if (Bien.MaBV == "12122")
                                                                        rep.celLblNoiChuyenDen.Text = "Nơi chuyển đi";
                                                                }
                                                            }
                                                        }
                                                        if (!string.IsNullOrEmpty(_mabvchuyenden))
                                                        {
                                                            var bv = _dataContext.BenhViens.Where(p => p.MaBV == (_mabvchuyenden)).ToList();
                                                            if (bv.Count > 0)
                                                            {
                                                                rep.NoiChuyenDen.Value = bv.First().TenBV;
                                                            }
                                                        }
                                                    }
                                                    if (par.First().SoKB != null)
                                                        rep.SoKB.Value = par.First().SoKB;
                                                    //if (vvien.First().SoVV != null)
                                                    //    rep.SoKB.Value = vvien.First().SoVV;
                                                    string _ngaysinh = "";
                                                    if (par.First().NgaySinh != null && par.First().NgaySinh.ToString() != "")
                                                        _ngaysinh = par.First().NgaySinh.ToString() + "/";
                                                    if (par.First().ThangSinh != null && par.First().ThangSinh.ToString() != "")
                                                        _ngaysinh = _ngaysinh + par.First().ThangSinh.ToString() + "/";
                                                    if (par.First().NamSinh != null && par.First().NamSinh.ToString() != "")
                                                        _ngaysinh = _ngaysinh + par.First().NamSinh.ToString();
                                                    rep.NSinh.Value = _ngaysinh;
                                                    //bệnh nhân BHYT
                                                    if (_HTTT == 1)// if (_DTuong == "BHYT")
                                                    {
                                                        int i = 0;

                                                        var bk01 =
                                                               (from vp1 in tt
                                                                join vpct in _lvpct.Where(p => p.TrongBH == 1).Where(p => m == 0 ? (p.XHH == 0) : (p.XHH > 0)) on vp1.idVPhi equals vpct.idVPhi
                                                                join dv in dichvu on vpct.MaDV equals dv.MaDV
                                                                group new { vp1, vpct, dv } by new { vp1.MaKP, dv.TenNhom, dv.TenRG, dv.TenHC, dv.HamLuong, dv.PLoai, dv.TenNhomCT, dv.STT, MaKPct = vpct.MaKP, dv.TenDV, vpct.DonVi, vpct.DonGia, vpct.TrongBH, dv.TrongDM } into kq
                                                                select new { kq.Key.MaKP, kq.Key.TenNhom, kq.Key.TenRG, kq.Key.TenHC, kq.Key.HamLuong, kq.Key.PLoai, kq.Key.TenNhomCT, kq.Key.STT, MaKPct = kq.Key.MaKP, idVPhict = kq.Max(p => p.vpct.idVPhict), kq.Key.TenDV, kq.Key.DonVi, kq.Key.DonGia, SoLuong = kq.Sum(p => p.vpct.SoLuong), ThanhTien = kq.Sum(p => p.vpct.ThanhTien), TienBH = kq.Sum(p => p.vpct.TienBH), TienBN = kq.Sum(p => p.vpct.TienBN), T_BNCTT = kq.Sum(p => p.vpct.TBNCTT), T_BNTT = kq.Sum(p => p.vpct.TBNTT), kq.Key.TrongBH, kq.Key.TrongDM }).OrderBy(p => p.idVPhict).ToList();
                                                        foreach (var item in bk01)
                                                        {
                                                            string tendv = item.TenDV;
                                                            if (Bien.MaBV == "30012")
                                                            { tendv = (item.TenHC != null && item.TenHC != "") ? (item.TenHC + " (" + item.TenDV + ")") : item.TenDV; }
                                                            else if (Bien.MaBV == "27001")
                                                                tendv = item.PLoai == 2 ? item.TenDV : (string.IsNullOrEmpty(item.HamLuong) ? item.TenDV : item.TenDV + " (" + item.HamLuong + ")");
                                                            else if (Bien.MaBV == "27183" || Bien.MaBV == "12122")
                                                                tendv = Bien.MaBV == "27001" ? item.TenDV + " (" + item.HamLuong + ")" : item.TenDV + " " + item.HamLuong;
                                                            else if (Bien.MaBV == "12001" || _CQCQ == "12001")
                                                                tendv = (item.TenRG != null && item.TenRG.Trim() != "") ? item.TenRG : item.TenDV;
                                                            // thêm tên chuyên khoa vào dịch vụ công khám, tạm bỏ 26/07
                                                            //if (item.TenNhomCT == "Khám bệnh")
                                                            //{
                                                            //    tendv = tendv + " - " + _chuyenkhoa[i];
                                                            //    i++;
                                                            //}
                                                            _lbangke.Add(new c_BangKe { TrongBH = item.TrongBH, DonGia = item.DonGia, DonVi = item.DonVi, IdVPhict = item.idVPhict, MaKP = item.MaKP ?? 0, MaKPct = item.MaKPct ?? 0, SoLuong = item.SoLuong, STT = item.STT ?? 0, TenDV = tendv, TenNhom = item.TenNhom, TienBH = item.TienBH, TienBN = item.TienBN, ThanhTien = item.ThanhTien });
                                                        }
                                                        double _tongtien = bk01.Where(p => p.TrongBH == 1).Sum(p => p.ThanhTien);
                                                        if (dungtuyen == 1)
                                                        {
                                                            if (capcuu != 1)
                                                                rep.DungTuyen.Value = "X";
                                                            if (m == 0)
                                                                rep.mucHuong.Value = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                            else
                                                                rep.mucHuong.Value = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "% (XHH)";
                                                        }
                                                        else if (dungtuyen == 2)
                                                        {
                                                            if (capcuu != 1)
                                                                rep.TraiTuyen.Value = "X";

                                                            string kvuc = "";
                                                            if (par.First().KhuVuc != null)
                                                                kvuc = par.First().KhuVuc;
                                                            string muchuong = "";
                                                            switch (_hangbv)
                                                            {
                                                                case 1:
                                                                    muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.4 + "%";
                                                                    break;

                                                                case 2:
                                                                    if (Bien.MaBV == "01830")
                                                                        muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.7 + "%";
                                                                    else
                                                                        muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.6 + "%";
                                                                    break;

                                                                case 3:
                                                                    if (Bien.MaBV == "08204" || _tongtien < Bien.GHanTT100)
                                                                    {
                                                                        if (kvuc.ToLower().Contains("k"))
                                                                            muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                                        else
                                                                            muchuong = "Mức hưởng: " + "70" + "%";
                                                                    }
                                                                    else
                                                                    {
                                                                        if (kvuc.ToLower().Contains("k"))
                                                                            muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                                        else
                                                                            muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.7 + "%";
                                                                    }
                                                                    break;

                                                                case 4:
                                                                    muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                                    break;
                                                            }
                                                            if (m == 0)
                                                                rep.mucHuong.Value = muchuong;
                                                            else

                                                                rep.mucHuong.Value = muchuong + " (XHH)";
                                                        }
                                                        // hiện thị thông báo số tiền thu thêm hoặc trả lại
                                                        double sotien = 0, TienCTT = 0, TienTT = 0;
                                                        TienCTT = bk01.Sum(p => p.T_BNCTT);
                                                        TienTT = bk01.Sum(p => p.T_BNTT);
                                                        sotien = bk01.Sum(p => p.TienBN);
                                                        rep.TienBN.Value = sotien;
                                                        rep.TienBH.Value = bk01.Sum(p => p.TienBH);
                                                        rep.TienBNctt.Value = TienCTT;
                                                        rep.TienBNtt.Value = TienTT;
                                                        rep.Tongtien.Value = _tongtien;
                                                        double tienCL = 0;
                                                        tienCL = sotien - _tienTThu;
                                                        if (Bien.MaBV != "01071" && Bien.MaBV != "01049" && Bien.MaBV != "12345" && Bien.MaBV != "24297" && Bien.MaBV != "56789")
                                                        {
                                                            if (tienCL > 0)
                                                            {
                                                                MessageBox.Show("Số tiền bệnh nhân phải nộp thêm: " + tienCL.ToString("##,###"));
                                                            }
                                                            else
                                                            {
                                                                if (tienCL < 0)
                                                                {
                                                                    tienCL *= -1;
                                                                    MessageBox.Show(string.Format("Số tiền trả lại cho bệnh nhân: " + tienCL.ToString("##,###")));
                                                                }
                                                            }
                                                        }
                                                        if (bk01.Count > 0)
                                                        {
                                                            rep.DataSource = _lbangke.ToList();
                                                            rep.BindingData();
                                                            rep.CreateDocument();
                                                            //rep.DataMember = "Table";
                                                            frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                                            frm.ShowDialog();
                                                        }
                                                    }// ket thuc BN BHYT
                                                    else
                                                    {
                                                        var bk01 = (from vp1 in tt
                                                                    join vpct in _lvpct.Where(p => p.TrongBH == 1 || p.TrongBH == 0).Where(p => m == 0 ? (p.XHH == 0) : (p.XHH > 0)) on vp1.idVPhi equals vpct.idVPhi
                                                                    join dv in dichvu on vpct.MaDV equals dv.MaDV
                                                                    where vpct.ThanhToan == 0
                                                                    group new { vpct, dv } by new
                                                                    {
                                                                        vp1.MaKP,
                                                                        dv.TenNhom,
                                                                        dv.STT,
                                                                        TenDV = (Bien.MaBV == "27183" || Bien.MaBV == "12122") ? (dv.TenDV + " " + dv.HamLuong) : ((Bien.MaBV == "12001" || _CQCQ == "12001") ? ((dv.TenRG != null && dv.TenRG.Trim() != "") ? dv.TenRG : dv.TenDV) : dv.TenDV),
                                                                        vpct.DonVi,
                                                                        vpct.DonGia//, vpct.SoLuong, vpct.ThanhTien, TienBN = vpct.TienBN, vpct.TienBH
                                                                    } into kq
                                                                    select new { kq.Key.MaKP, kq.Key.TenNhom, kq.Key.STT, kq.Key.TenDV, kq.Key.DonVi, kq.Key.DonGia, SoLuong = kq.Sum(p => p.vpct.SoLuong), ThanhTien = kq.Sum(p => p.vpct.ThanhTien), TienBN = kq.Sum(p => p.vpct.TienBN), TienBH = kq.Sum(p => p.vpct.TienBH) }).Where(p => p.SoLuong != 0).ToList();

                                                        rep.Tongtien.Value = bk01.Sum(p => p.ThanhTien);
                                                        rep.TienBN.Value = bk01.Sum(p => p.TienBN);
                                                        var tamthu = _dataContext.TamUngs.Where(p => p.MaBNhan == _mabn).ToList();
                                                        rep.TamThu.Value = tamthu.Where(p => p.PhanLoai == 0).Sum(p => p.SoTien).Value - tamthu.Where(p => p.PhanLoai == 4).Sum(p => p.SoTien).Value;

                                                        if (tamthu.Where(p => p.PhanLoai == 3).Sum(p => p.SoTien) != null)
                                                            rep.ThuTT.Value = tamthu.Where(p => p.PhanLoai == 3).Sum(p => p.SoTien).Value;
                                                        else
                                                            rep.ThuTT.Value = 0;
                                                        if (bk01.Count > 0)
                                                        {
                                                            rep.DataSource = bk01.ToList();
                                                            rep.BindingData();
                                                            rep.CreateDocument();
                                                            //rep.DataMember = "Table";
                                                            frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                                            frm.ShowDialog();
                                                        }
                                                    }

                                                    // kết thúc
                                                }

                                                #endregion
                                            }
                                        }
                                    }
                                    else
                                    {
                                        if (_maubk01 == 2)
                                        {
                                            #region bv 26007
                                            BaoCao.repBangKe01bv_A4_26007 rep = new BaoCao.repBangKe01bv_A4_26007();
                                            if (sodk != "")
                                            {
                                                rep.STTThanhToan_lbl.Value = "Số TT: ";
                                                rep.STTThanhToan.Value = sodk;
                                            }
                                            rep.tenBN.Value = Bien.MaBV == "20001" ? _tenbn.ToUpper() : _tenbn;
                                            rep.MaBNhan.Value = _mabn;
                                            if (par.Count > 0)
                                            {
                                                rep.KhuVuc.Value = par.First().KhuVuc;
                                                rep.DiaChi.Value = par.First().DChi;
                                                int gioiTinh = int.Parse(par.First().GTinh.ToString());
                                                if (gioiTinh == 1)
                                                {
                                                    rep.Nam.Value = "X";
                                                }
                                                else if (gioiTinh == 0)
                                                {
                                                    rep.Nu.Value = "X";
                                                }
                                                if (_ngaykham.Count > 0)
                                                {
                                                    DateTime _dt2 = System.DateTime.Now;
                                                    if (_ngaykham.First().NgayKham != null)
                                                    {
                                                        _dt2 = _ngaykham.First().NgayKham.Value;
                                                        rep.NgayKham.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                                    }
                                                }

                                                if (Rvien.Count > 0)
                                                {
                                                    DateTime _dt2 = System.DateTime.Now;
                                                    if (Bien.MaBV == "30003")
                                                    {
                                                        if (tt.First().NgayTT != null)
                                                        {
                                                            _dt2 = tt.First().NgayTT.Value;
                                                            rep.NgayKT.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                                        }
                                                    }
                                                    else
                                                    {
                                                        if (Rvien.First().NgayRa != null)
                                                            _dt2 = Rvien.First().NgayRa.Value;
                                                        rep.NgayKT.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                                    }
                                                }
                                                _DTuong = (par.First().DTuong).ToString();
                                                int dungtuyen = 0, capcuu = 0;

                                                if (_HTTT == 1)  //    if (_DTuong.Contains("BHYT"))
                                                {
                                                    rep.SoThe.Value = par.First().SThe;
                                                    rep.coBH.Value = "X";
                                                    //if(par.First().SThe!=null && par.First().SThe.ToString()!="" && par.First().SThe.Length>10)
                                                    // _muc = par.First().SThe.Substring(2, 1);

                                                    rep.HanBHTu.Value = par.First().HanBHTu;
                                                    rep.HanBHDen.Value = par.First().HanBHDen;
                                                    string macs = "";
                                                    if (par.First().MaCS != null)
                                                    {
                                                        macs = par.First().MaCS;
                                                        rep.MaCS.Value = macs.Substring(0, 2) + "-" + macs.Substring(2, 3);
                                                    }
                                                    var csdkbd = _dataContext.BenhViens.Where(p => p.MaBV == macs).ToList();
                                                    if (csdkbd.Count > 0)
                                                    {
                                                        rep.CSDKKCB.Value = csdkbd.First().TenBV;
                                                    }

                                                    if (par.First().Tuyen != null)
                                                    {
                                                        dungtuyen = int.Parse(par.First().Tuyen.ToString());
                                                    }

                                                    capcuu = int.Parse(par.First().CapCuu.ToString());
                                                    if (capcuu == 1)
                                                    {
                                                        rep.CapCuu.Value = "X";
                                                        rep.DungTuyen.Value = "";
                                                        rep.TraiTuyen.Value = "";
                                                    }
                                                }
                                                else
                                                {
                                                    if (m == 0)
                                                        rep.mucHuong.Value = "Dành cho đối tượng " + _loaiDT;
                                                    else
                                                        rep.mucHuong.Value = "Dành cho đối tượng " + _loaiDT + " (XHH)";
                                                    rep.koBH.Value = "X";
                                                    capcuu = int.Parse(par.First().CapCuu.ToString());
                                                    if (capcuu == 1)
                                                    {
                                                        rep.CapCuu.Value = "X";
                                                    }
                                                    rep.HanBHTu.Value = "";
                                                }
                                                if (tt.Count > 0)
                                                {
                                                    int _fmat = Bien.FormatDate;
                                                    if (Bien.MaBV == "30002")
                                                        _fmat = 1;
                                                    if (Bien.MaBV == "08204" || Bien.MaBV == "19048" || Bien.MaBV == "27023")
                                                        rep.NgayGD.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, 0);
                                                    else if (Bien.MaBV == "27001")
                                                        rep.NgayGD.Value = " Ngày ... tháng... năm......";
                                                    else
                                                        rep.NgayGD.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, _fmat);
                                                    rep.NgayTT.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, _fmat);
                                                }

                                                if (Rvien.Count > 0)
                                                {
                                                    int _makp = 0;
                                                    if (Rvien.Count > 0)
                                                        _makp = Rvien.First().MaKP;
                                                    var kphong = _dataContext.KPhongs.Where(p => p.MaKP == (_makp)).ToList();
                                                    if (kphong.Count > 0)
                                                        rep.KhoaPhong.Value = kphong.First().TenKP;
                                                    rep.ChanDoan.Value = DungChung.Ham.GetICDstr(Rvien.First().ChanDoan);
                                                    rep.MaICD.Value = DungChung.Ham.GetICDstr(Rvien.First().MaICD);
                                                    if (Rvien.First().SoNgaydt != null)
                                                        rep.TongNgay.Value = Rvien.First().SoNgaydt.ToString() + " ngày";
                                                    string _mabvchuyenden = "";
                                                    if (Bien.MaBV == "20001")
                                                    {
                                                        if (Rvien.First().MaBVC != null)
                                                        {
                                                            _mabvchuyenden = Rvien.First().MaBVC;
                                                        }
                                                        else
                                                        {
                                                            if (!string.IsNullOrEmpty(par.First().MaBV))
                                                                _mabvchuyenden = par.First().MaBV;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        if (!string.IsNullOrEmpty(par.First().MaBV))
                                                            _mabvchuyenden = par.First().MaBV;
                                                        else
                                                        {
                                                            if (Rvien.First().MaBVC != null)
                                                                _mabvchuyenden = Rvien.First().MaBVC;
                                                            rep.xrLabel66.Text = "Nơi chuyển đi:";
                                                        }
                                                    }
                                                    var bv = _dataContext.BenhViens.Where(p => p.MaBV == (_mabvchuyenden)).ToList();
                                                    if (bv.Count > 0)
                                                        rep.NoiChuyenDen.Value = bv.First().TenBV;
                                                }
                                                if (par.First().SoKB != null)
                                                    rep.SoKB.Value = par.First().SoKB;
                                                string _ngaysinh = "";
                                                if (par.First().NgaySinh != null && par.First().NgaySinh.ToString() != "")
                                                    _ngaysinh = par.First().NgaySinh.ToString() + "/";
                                                if (par.First().ThangSinh != null && par.First().ThangSinh.ToString() != "")
                                                    _ngaysinh = _ngaysinh + par.First().ThangSinh.ToString() + "/";
                                                if (par.First().NamSinh != null && par.First().NamSinh.ToString() != "")
                                                    _ngaysinh = _ngaysinh + par.First().NamSinh.ToString();
                                                rep.NSinh.Value = _ngaysinh;
                                                #region bệnh nhân BHYT
                                                if (_HTTT == 1)//   if (_DTuong == "BHYT")
                                                {
                                                    int i = 0;
                                                    var bk01 = (from vp1 in tt
                                                                join vpct in _lvpct.Where(p => p.TrongBH == 1).Where(p => m == 0 ? (p.XHH == 0) : (p.XHH > 0)) on vp1.idVPhi equals vpct.idVPhi
                                                                join dv in dichvu on vpct.MaDV equals dv.MaDV
                                                                group new { vp1, dv, vpct } by new { vp1.MaKP, dv.MaQD, dv.TenHC, dv.HamLuong, dv.SoQD, dv.TenNhomCT, dv.TenNhom, MaKPct = vpct.MaKP, dv.STT, dv.TenDV, vpct.DonVi, vpct.DonGia, vpct.TrongBH, dv.TrongDM } into kq
                                                                select new { kq.Key.MaKP, kq.Key.MaQD, kq.Key.TenHC, kq.Key.HamLuong, kq.Key.SoQD, kq.Key.TenNhomCT, TenNhom = kq.Key.TrongBH == 1 ? kq.Key.TenNhom : kq.Key.TenNhom.Replace("trong danh mục BHYT", ""), kq.Key.MaKPct, kq.Key.STT, kq.Key.TenDV, kq.Key.DonVi, kq.Key.DonGia, SoLuong = kq.Sum(p => p.vpct.SoLuong), ThanhTien = kq.Sum(p => p.vpct.ThanhTien), TienBH = kq.Sum(p => p.vpct.TienBH), TienBN = kq.Sum(p => p.vpct.TienBN), kq.Key.TrongBH, kq.Key.TrongDM, idVPhict = kq.Max(p => p.vpct.idVPhict) }).OrderBy(p => p.idVPhict).Where(p => p.SoLuong != 0).ToList();

                                                    foreach (var item in bk01)
                                                    {
                                                        string tendv = item.TenDV;
                                                        if (Bien.MaBV == "30012")
                                                        { tendv = (item.TenHC != null && item.TenHC != "") ? (item.TenHC + " (" + item.TenDV + ")") : item.TenDV; }
                                                        else if (Bien.MaBV == "27183" || Bien.MaBV == "12001" || Bien.MaBV == "12122")
                                                            tendv = item.TenDV + " " + item.HamLuong;
                                                        // thêm tên chuyên khoa vào dịch vụ công khám, tạm bỏ 26/07
                                                        //if (item.TenNhomCT == "Khám bệnh")
                                                        //{
                                                        //    tendv = tendv + " - " + _chuyenkhoa[i];
                                                        //    i++;
                                                        //}
                                                        _lbangke.Add(new c_BangKe
                                                        {
                                                            TrongBH = item.TrongBH,
                                                            DonGia = item.DonGia,
                                                            DonVi = item.DonVi,
                                                            IdVPhict = item.idVPhict,
                                                            MaKP = item.MaKP ?? 0,
                                                            MaKPct = item.MaKPct ?? 0,
                                                            SoLuong = item.SoLuong,
                                                            STT = item.STT ?? 0,
                                                            TenDV = tendv,
                                                            TenNhom = item.TenNhom,
                                                            TienBH = item.TienBH,
                                                            TienBN = item.TienBN,
                                                            ThanhTien = item.ThanhTien,
                                                            SoQD = item.SoQD,
                                                            MaQD = item.MaQD
                                                        });
                                                    }
                                                    double _tongtien = bk01.Where(p => p.TrongBH == 1).Sum(p => p.ThanhTien);
                                                    if (dungtuyen == 1)
                                                    {
                                                        if (capcuu != 1)
                                                            rep.DungTuyen.Value = "X";
                                                        if (m == 0)
                                                            rep.mucHuong.Value = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                        else

                                                            rep.mucHuong.Value = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "% (XHH)";
                                                    }
                                                    else if (dungtuyen == 2)
                                                    {
                                                        if (capcuu != 1)
                                                            rep.TraiTuyen.Value = "X";

                                                        string kvuc = "";
                                                        if (par.First().KhuVuc != null)
                                                            kvuc = par.First().KhuVuc;
                                                        string muchuong = "";
                                                        switch (_hangbv)
                                                        {
                                                            case 1:
                                                                muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.4 + "%";
                                                                break;

                                                            case 2:
                                                                if (Bien.MaBV == "01830")
                                                                    muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.7 + "%";
                                                                else
                                                                    muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.6 + "%";
                                                                break;

                                                            case 3:
                                                                if (Bien.MaBV == "08204" || _tongtien < Bien.GHanTT100)
                                                                {
                                                                    if (kvuc.ToLower().Contains("k"))
                                                                        muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                                    else
                                                                        muchuong = "Mức hưởng: " + "70" + "%";
                                                                }
                                                                else
                                                                {
                                                                    if (kvuc.ToLower().Contains("k"))
                                                                        muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                                    else
                                                                        muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.7 + "%";
                                                                }
                                                                break;

                                                            case 4:
                                                                muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                                break;
                                                        }
                                                        if (m == 0)
                                                            rep.mucHuong.Value = muchuong;
                                                        else
                                                            rep.mucHuong.Value = muchuong + " (XHH)";
                                                    }
                                                    // hiện thị thông báo số tiền thu thêm hoặc trả lại
                                                    double sotien = 0;
                                                    sotien = bk01.Sum(p => p.TienBN);
                                                    rep.TienBN.Value = sotien;
                                                    rep.TienBH.Value = bk01.Sum(p => p.TienBH);
                                                    rep.Tongtien.Value = _tongtien;
                                                    double tienCL = 0;
                                                    tienCL = sotien - _tienTThu;
                                                    if (Bien.MaBV != "01071" && Bien.MaBV != "01049" && Bien.MaBV != "12345" && Bien.MaBV != "24297" && Bien.MaBV != "56789")
                                                    {
                                                        if (tienCL > 0)
                                                        {
                                                            MessageBox.Show("Số tiền bệnh nhân phải nộp thêm: " + tienCL.ToString("##,###"));
                                                        }
                                                        else
                                                        {
                                                            if (tienCL < 0)
                                                            {
                                                                tienCL *= -1;
                                                                MessageBox.Show(string.Format("Số tiền trả lại cho bệnh nhân: " + tienCL.ToString("##,###")));
                                                            }
                                                        }
                                                    }
                                                    if (bk01.Count > 0)
                                                    {
                                                        rep.DataSource = _lbangke.ToList();
                                                        rep.BindingData();
                                                        rep.CreateDocument();
                                                        //rep.DataMember = "Table";
                                                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                                        frm.ShowDialog();
                                                    }
                                                }
                                                #endregion// ket thuc BN BHYT
                                                #region bn ko bảo hiểm
                                                else
                                                {
                                                    var bk01 = (from vp1 in tt
                                                                join vpct in _lvpct.Where(p => p.TrongBH == 1 || p.TrongBH == 0).Where(p => m == 0 ? (p.XHH == 0) : (p.XHH > 0)) on vp1.idVPhi equals vpct.idVPhi
                                                                join dv in dichvu on vpct.MaDV equals dv.MaDV
                                                                where vpct.ThanhToan == 0
                                                                group new { vp1, dv, vpct } by new { vp1.MaKP, dv.MaQD, dv.TenHC, dv.HamLuong, dv.SoQD, dv.TenNhom, vpct.TrongBH, dv.STT, TenDV = (Bien.MaBV == "12001" || Bien.MaBV == "12122") ? (dv.TenDV + " " + dv.HamLuong) : dv.TenDV, vpct.DonVi, vpct.DonGia } into kq
                                                                select new { kq.Key.MaKP, kq.Key.MaQD, kq.Key.TenHC, kq.Key.HamLuong, kq.Key.SoQD, TenNhom = kq.Key.TrongBH == 1 ? kq.Key.TenNhom : kq.Key.TenNhom.Replace("trong danh mục BHYT", ""), kq.Key.STT, kq.Key.TenDV, kq.Key.DonVi, kq.Key.DonGia, SoLuong = kq.Sum(p => p.vpct.SoLuong), ThanhTien = kq.Sum(p => p.vpct.ThanhTien), TienBH = kq.Sum(p => p.vpct.TienBH), TienBN = kq.Sum(p => p.vpct.TienBN), kq.Key.TrongBH }).Where(p => p.SoLuong != 0).ToList();
                                                    //select new { vp1.MaKP, dv.MaQD, dv.TenHC, dv.HamLuong, dv.SoQD, dv.TenNhom, vpct.TrongBH, dv.STT, TenDV = Bien.MaBV == "12001" ? (dv.TenDV + " " + dv.HamLuong) : dv.TenDV, vpct.DonVi, vpct.DonGia, vpct.SoLuong, vpct.ThanhTien, TienBN = vpct.TienBN, vpct.TienBH }).ToList();
                                                    if (bk01.Count > 0)
                                                    {
                                                        rep.Tongtien.Value = bk01.Sum(p => p.ThanhTien);
                                                        rep.TienBN.Value = bk01.Sum(p => p.TienBN);
                                                        var tamthu = _dataContext.TamUngs.Where(p => p.MaBNhan == _mabn).ToList();
                                                        rep.TamThu.Value = tamthu.Where(p => p.PhanLoai == 0).Sum(p => p.SoTien).Value - tamthu.Where(p => p.PhanLoai == 4).Sum(p => p.SoTien).Value;

                                                        if (tamthu.Where(p => p.PhanLoai == 3).Sum(p => p.SoTien) != null)
                                                            rep.ThuTT.Value = tamthu.Where(p => p.PhanLoai == 3).Sum(p => p.SoTien).Value;
                                                        else
                                                            rep.ThuTT.Value = 0;
                                                        rep.DataSource = bk01.ToList();
                                                        rep.BindingData();
                                                        rep.CreateDocument();
                                                        //rep.DataMember = "Table";
                                                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                                        frm.ShowDialog();
                                                    }
                                                }

                                                #endregion kết thúc
                                            }

                                            #endregion
                                        }
                                        else
                                        {
                                            if (Bien.MaBV == "20001" && _DTuong == "Dịch vụ")
                                            {
                                                BangkeTTBNDV_20001(_mabn);
                                            }
                                            //else if (Bien.MaBV == "01071" && _DTuong == "Dịch vụ")
                                            //{
                                            //    //InBangKePhongKham_01071(_mabn);
                                            //    BKeBNDichVu_01071(_mabn);
                                            //}
                                            else
                                            {
                                                #region bv chung
                                                BaoCao.repBangKe01bv_A4 rep = new BaoCao.repBangKe01bv_A4();
                                                if (sodk != "")
                                                {
                                                    rep.STTThanhToan_lbl.Value = "Số TT: ";
                                                    rep.STTThanhToan.Value = sodk;
                                                }
                                                rep.tenBN.Value = Bien.MaBV == "20001" ? _tenbn.ToUpper() : _tenbn;
                                                rep.TenBN2.Value = _tenbn;
                                                rep.txtGiamDinhBH.Text = (Bien.MaBV == "30340" || Bien.MaBV == "30005" || Bien.MaBV == "27001") ? Bien.GiamDinhBH : "";
                                                rep.GDBH.Value = (Bien.MaBV == "30340" || Bien.MaBV == "30005") ? Bien.GiamDinhBH : "";
                                                rep.MaBNhan.Value = _mabn;
                                                if (par.Count > 0)
                                                {
                                                    rep.KhuVuc.Value = par.First().KhuVuc;
                                                    rep.DiaChi.Value = par.First().DChi;
                                                    int gioiTinh = int.Parse(par.First().GTinh.ToString());
                                                    if (gioiTinh == 1)
                                                    {
                                                        rep.Nam.Value = "X";
                                                    }
                                                    else if (gioiTinh == 0)
                                                    {
                                                        rep.Nu.Value = "X";
                                                    }
                                                    if (_ngaykham.Count > 0)
                                                    {
                                                        DateTime _dt2 = System.DateTime.Now;
                                                        if (_ngaykham.First().NgayKham != null)
                                                        {
                                                            _dt2 = _ngaykham.First().NgayKham.Value;
                                                            rep.NgayKham.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                                        }
                                                    }

                                                    if (Rvien.Count > 0)
                                                    {
                                                        DateTime _dt2 = System.DateTime.Now;
                                                        //if (Bien.MaBV == "30003")
                                                        //{
                                                        //if (tt.First().NgayTT != null)
                                                        //{
                                                        //    _dt2 = tt.First().NgayTT.Value;
                                                        //    rep.NgayKT.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                                        //}
                                                        //}
                                                        //else
                                                        //{
                                                        //    if (Rvien.First().NgayRa != null)
                                                        //        _dt2 = Rvien.First().NgayRa.Value;
                                                        //    rep.NgayKT.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                                        //}
                                                        if (par.First().DTNT == true)
                                                        {
                                                            if (Rvien.First().NgayRa != null)
                                                                _dt2 = Rvien.First().NgayRa.Value;
                                                            rep.NgayKT.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                                        }
                                                        else
                                                        {
                                                            if (tt.First().NgayTT != null)
                                                            {
                                                                _dt2 = tt.First().NgayTT.Value;
                                                                rep.NgayKT.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                                            }
                                                        }
                                                    }
                                                    _DTuong = (par.First().DTuong).ToString();
                                                    int dungtuyen = 0, capcuu = 0;
                                                    #region bn BHYT
                                                    if (_HTTT == 1)  //    if (_DTuong.Contains("BHYT"))
                                                    {
                                                        rep.SoThe.Value = par.First().SThe;
                                                        rep.coBH.Value = "X";
                                                        //if(par.First().SThe!=null && par.First().SThe.ToString()!="" && par.First().SThe.Length>10)
                                                        // _muc = par.First().SThe.Substring(2, 1);

                                                        rep.HanBHTu.Value = par.First().HanBHTu;
                                                        rep.HanBHDen.Value = par.First().HanBHDen;
                                                        string macs = "";
                                                        if (par.First().MaCS != null)
                                                        {
                                                            macs = par.First().MaCS;
                                                            rep.MaCS.Value = macs.Substring(0, 2) + "-" + macs.Substring(2, 3);
                                                        }
                                                        var csdkbd = _dataContext.BenhViens.Where(p => p.MaBV == macs).ToList();
                                                        if (csdkbd.Count > 0)
                                                        {
                                                            rep.CSDKKCB.Value = csdkbd.First().TenBV;
                                                        }

                                                        if (par.First().Tuyen != null)
                                                        {
                                                            dungtuyen = int.Parse(par.First().Tuyen.ToString());
                                                        }

                                                        capcuu = int.Parse(par.First().CapCuu.ToString());
                                                        if (capcuu == 1)
                                                        {
                                                            rep.CapCuu.Value = "X";
                                                            rep.DungTuyen.Value = "";
                                                            rep.TraiTuyen.Value = "";
                                                        }
                                                    }
                                                    #endregion
                                                    #region bn ko có bh
                                                    else
                                                    {
                                                        if (m == 0)
                                                            rep.mucHuong.Value = "Dành cho đối tượng " + _loaiDT;
                                                        else
                                                            rep.mucHuong.Value = "Dành cho đối tượng " + _loaiDT + " (XHH)";
                                                        rep.koBH.Value = "X";
                                                        capcuu = int.Parse(par.First().CapCuu.ToString());
                                                        if (capcuu == 1)
                                                        {
                                                            rep.CapCuu.Value = "X";
                                                        }
                                                        rep.HanBHTu.Value = "";
                                                    }
                                                    if (tt.Count > 0)
                                                    {
                                                        int _fmat = Bien.FormatDate;
                                                        if (Bien.MaBV == "30002")
                                                            _fmat = 1;
                                                        if (Bien.MaBV == "08204" || Bien.MaBV == "19048" || Bien.MaBV == "27023")
                                                            rep.NgayGD.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, 0);
                                                        else if (Bien.MaBV == "27001" || Bien.MaBV == "30002")
                                                            rep.NgayGD.Value = " Ngày ... tháng... năm......";
                                                        else
                                                            rep.NgayGD.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, _fmat);
                                                        rep.NgayTT.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, _fmat);
                                                    }

                                                    if (Rvien.Count > 0)
                                                    {
                                                        int _makp = 0;
                                                        if (Rvien.Count > 0)
                                                            _makp = Rvien.First().MaKP;
                                                        var kphong = _dataContext.KPhongs.Where(p => p.MaKP == (_makp)).ToList();
                                                        if (kphong.Count > 0)
                                                            rep.KhoaPhong.Value = kphong.First().TenKP;
                                                        rep.ChanDoan.Value = DungChung.Ham.GetICDstr(Rvien.First().ChanDoan);
                                                        rep.MaICD.Value = DungChung.Ham.GetICDstr(Rvien.First().MaICD);
                                                        if (Rvien.First().SoNgaydt != null)
                                                            rep.TongNgay.Value = Rvien.First().SoNgaydt.ToString() + " ngày";
                                                        string _mabvchuyenden = "";
                                                        if (Bien.MaBV == "20001")
                                                        {
                                                            if (Rvien.First().MaBVC != null)
                                                            {
                                                                _mabvchuyenden = Rvien.First().MaBVC;
                                                            }
                                                            else
                                                            {
                                                                if (!string.IsNullOrEmpty(par.First().MaBV))
                                                                    _mabvchuyenden = par.First().MaBV;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (!string.IsNullOrEmpty(par.First().MaBV))
                                                                _mabvchuyenden = par.First().MaBV;
                                                            else
                                                            {
                                                                if (!string.IsNullOrEmpty(Rvien.First().MaBVC))
                                                                {
                                                                    _mabvchuyenden = Rvien.First().MaBVC;
                                                                    if (Bien.MaBV == "12122" || Bien.MaBV == "30009")
                                                                        rep.celLblNoiChuyenDen.Text = "Nơi chuyển đi";
                                                                }
                                                            }
                                                        }
                                                        if (!string.IsNullOrEmpty(_mabvchuyenden))
                                                        {
                                                            var bv = _dataContext.BenhViens.Where(p => p.MaBV == (_mabvchuyenden)).ToList();
                                                            if (bv.Count > 0)
                                                            {
                                                                rep.NoiChuyenDen.Value = bv.First().TenBV;
                                                            }
                                                        }
                                                    }
                                                    #endregion
                                                    if (par.First().SoKB != null)
                                                        rep.SoKB.Value = par.First().SoKB;
                                                    rep.txtsophim.Text = SoPhim > 0 ? ("Ghi chú: Bệnh nhân đã nhận đủ " + SoPhim.ToString()) + " phim." : "";
                                                    string _ngaysinh = "";
                                                    if (par.First().NgaySinh != null && par.First().NgaySinh.ToString() != "")
                                                        _ngaysinh = par.First().NgaySinh.ToString() + "/";
                                                    if (par.First().ThangSinh != null && par.First().ThangSinh.ToString() != "")
                                                        _ngaysinh = _ngaysinh + par.First().ThangSinh.ToString() + "/";
                                                    if (par.First().NamSinh != null && par.First().NamSinh.ToString() != "")
                                                        _ngaysinh = _ngaysinh + par.First().NamSinh.ToString();
                                                    rep.NSinh.Value = _ngaysinh;
                                                    #region bệnh nhân BHYT
                                                    if (_HTTT == 1)//   if (_DTuong == "BHYT")
                                                    {
                                                        int i = 0;
                                                        var bk01 = (from vp1 in tt
                                                                    join vpct in _lvpct.Where(p => p.TrongBH == 1).Where(p => m == 0 ? (p.XHH == 0) : (p.XHH > 0)) on vp1.idVPhi equals vpct.idVPhi
                                                                    join dv in dichvu on vpct.MaDV equals dv.MaDV
                                                                    group new { vp1, dv, vpct } by new { vp1.MaKP, dv.TenRG, dv.TenNhomCT, dv.PLoai, dv.HamLuong, dv.TenHC, dv.TenNhom, MaKPct = vpct.MaKP, dv.STT, dv.TenDV, vpct.DonVi, vpct.DonGia, vpct.TrongBH, dv.TrongDM } into kq
                                                                    select new { kq.Key.MaKP, kq.Key.TenHC, kq.Key.TenRG, kq.Key.HamLuong, kq.Key.PLoai, kq.Key.TenNhomCT, TenNhom = kq.Key.TrongBH == 1 ? kq.Key.TenNhom : kq.Key.TenNhom.Replace("trong danh mục BHYT", ""), kq.Key.MaKPct, kq.Key.STT, kq.Key.TenDV, kq.Key.DonVi, kq.Key.DonGia, SoLuong = kq.Sum(p => p.vpct.SoLuong), ThanhTien = kq.Sum(p => p.vpct.ThanhTien), TienBH = kq.Sum(p => p.vpct.TienBH), TienBN = kq.Sum(p => p.vpct.TienBN), T_BNCTT = kq.Sum(p => p.vpct.TBNCTT), T_BNTT = kq.Sum(p => p.vpct.TBNTT), kq.Key.TrongBH, kq.Key.TrongDM, idVPhict = kq.Max(p => p.vpct.idVPhict) }).OrderBy(p => p.idVPhict).Where(p => p.SoLuong != 0).ToList();
                                                        // select new { vp1.MaKP, dv.TenNhomCT, dv.HamLuong, dv.TenHC, dv.TenNhom, MaKPct = vpct.MaKP, dv.STT, vpct.idVPhict, dv.TenDV, vpct.DonVi, vpct.DonGia, vpct.SoLuong, vpct.ThanhTien, vpct.TienBH, vpct.TienBN, vpct.TrongBH, dv.TrongDM }).OrderBy(p => p.idVPhict).ToList();

                                                        foreach (var item in bk01)
                                                        {
                                                            string tendv = item.TenDV;
                                                            if (Bien.MaBV == "30012")
                                                            { tendv = (item.TenHC != null && item.TenHC != "") ? (item.TenHC + " (" + item.TenDV + ")") : item.TenDV; }
                                                            else if (Bien.MaBV == "27001")
                                                                tendv = item.PLoai == 2 ? item.TenDV : (string.IsNullOrEmpty(item.HamLuong) ? item.TenDV : item.TenDV + " (" + item.HamLuong + ")");
                                                            else if (Bien.MaBV == "27183" || Bien.MaBV == "12122")
                                                                tendv = item.TenDV + " " + item.HamLuong;//Bien.MaBV == "27001" ? item.TenDV + " (" + item.HamLuong + ")" :
                                                            else if (Bien.MaBV == "12001" || _CQCQ == "12001")
                                                                tendv = (item.TenRG != null && item.TenRG.Trim() != "") ? item.TenRG : item.TenDV;
                                                            // thêm tên chuyên khoa vào dịch vụ công khám, tạm bỏ 26/07
                                                            //if (item.TenNhomCT == "Khám bệnh")
                                                            //{
                                                            //    tendv = tendv + " - " + _chuyenkhoa[i];
                                                            //    i++;
                                                            //}
                                                            _lbangke.Add(new c_BangKe { TrongBH = item.TrongBH, DonGia = item.DonGia, DonVi = item.DonVi, IdVPhict = item.idVPhict, MaKP = item.MaKP ?? 0, MaKPct = item.MaKPct ?? 0, SoLuong = item.SoLuong, STT = item.STT ?? 0, TenDV = tendv, TenNhom = item.TenNhom, TienBH = item.TienBH, TienBN = item.TienBN, ThanhTien = item.ThanhTien });
                                                        }
                                                        double _tongtien = bk01.Where(p => p.TrongBH == 1).Sum(p => p.ThanhTien);
                                                        if (dungtuyen == 1)
                                                        {
                                                            if (capcuu != 1)
                                                                rep.DungTuyen.Value = "X";
                                                            if (m == 0)
                                                                rep.mucHuong.Value = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                            else

                                                                rep.mucHuong.Value = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "% (XHH)";
                                                        }
                                                        else if (dungtuyen == 2)
                                                        {
                                                            if (capcuu != 1)
                                                                rep.TraiTuyen.Value = "X";

                                                            string kvuc = "";
                                                            if (par.First().KhuVuc != null)
                                                                kvuc = par.First().KhuVuc;
                                                            string muchuong = "";
                                                            switch (_hangbv)
                                                            {
                                                                case 1:
                                                                    muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.4 + "%";
                                                                    break;

                                                                case 2:
                                                                    if (Bien.MaBV == "01830")
                                                                        muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.7 + "%";
                                                                    else
                                                                        muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.6 + "%";
                                                                    break;

                                                                case 3:
                                                                    if (Bien.MaBV == "08204" || _tongtien < Bien.GHanTT100)
                                                                    {
                                                                        if (kvuc.ToLower().Contains("k"))
                                                                            muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                                        else
                                                                            muchuong = "Mức hưởng: " + "70" + "%";
                                                                    }
                                                                    else
                                                                    {
                                                                        if (kvuc.ToLower().Contains("k"))
                                                                            muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                                        else
                                                                            muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.7 + "%";
                                                                    }
                                                                    break;

                                                                case 4:
                                                                    muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                                    break;
                                                            }
                                                            if (m == 0)
                                                                rep.mucHuong.Value = muchuong;
                                                            else
                                                                rep.mucHuong.Value = muchuong + " (XHH)";
                                                        }
                                                        // hiện thị thông báo số tiền thu thêm hoặc trả lại
                                                        double sotien = 0, TienCTT = 0, TienTT = 0;
                                                        TienCTT = bk01.Sum(p => p.T_BNCTT);
                                                        TienTT = bk01.Sum(p => p.T_BNTT);
                                                        sotien = bk01.Sum(p => p.TienBN);
                                                        rep.TienBN.Value = sotien;
                                                        rep.TienBH.Value = bk01.Sum(p => p.TienBH);
                                                        rep.TienBNctt.Value = TienCTT;
                                                        rep.TienBNtt.Value = TienTT;
                                                        rep.Tongtien.Value = _tongtien;
                                                        double tienCL = 0;
                                                        tienCL = sotien - _tienTThu;
                                                        if (Bien.MaBV != "01071" && Bien.MaBV != "01049" && Bien.MaBV != "12345" && Bien.MaBV != "24297" && Bien.MaBV != "56789")
                                                        {
                                                            if (tienCL > 0)
                                                            {
                                                                MessageBox.Show("Số tiền bệnh nhân phải nộp thêm: " + tienCL.ToString("##,###"));
                                                            }
                                                            else
                                                            {
                                                                if (tienCL < 0)
                                                                {
                                                                    tienCL *= -1;
                                                                    MessageBox.Show(string.Format("Số tiền trả lại cho bệnh nhân: " + tienCL.ToString("##,###")));
                                                                }
                                                            }
                                                        }
                                                        if (bk01.Count > 0)
                                                        {
                                                            rep.DataSource = _lbangke.ToList();
                                                            rep.BindingData();
                                                            rep.CreateDocument();
                                                            //rep.DataMember = "Table";
                                                            frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                                            frm.ShowDialog();
                                                        }
                                                    }
                                                    #endregion// ket thuc BN BHYT
                                                    #region bn ko có BH
                                                    else
                                                    {
                                                        var bk01 = (from vp1 in tt
                                                                    join vpct in _lvpct.Where(p => p.TrongBH == 1 || p.TrongBH == 0).Where(p => m == 0 ? (p.XHH == 0) : (p.XHH > 0)) on vp1.idVPhi equals vpct.idVPhi
                                                                    join dv in dichvu on vpct.MaDV equals dv.MaDV
                                                                    where vpct.ThanhToan == 0
                                                                    group new { vp1, dv, vpct } by new { vp1.MaKP, dv.HamLuong, dv.TenHC, dv.TenNhom, vpct.TrongBH, dv.STT, TenDV = (Bien.MaBV == "27183" || Bien.MaBV == "12122") ? (dv.TenDV + " " + dv.HamLuong) : ((Bien.MaBV == "12001" || _CQCQ == "12001") ? ((dv.TenRG != null && dv.TenRG.Trim() != "") ? dv.TenRG : dv.TenDV) : dv.TenDV), vpct.DonVi, vpct.DonGia } into kq
                                                                    select new { kq.Key.MaKP, kq.Key.TenHC, kq.Key.HamLuong, TenNhom = kq.Key.TrongBH == 1 ? kq.Key.TenNhom : kq.Key.TenNhom.Replace("trong danh mục BHYT", ""), kq.Key.STT, kq.Key.TenDV, kq.Key.DonVi, kq.Key.DonGia, SoLuong = kq.Sum(p => p.vpct.SoLuong), ThanhTien = kq.Sum(p => p.vpct.ThanhTien), TienBH = kq.Sum(p => p.vpct.TienBH), TienBN = kq.Sum(p => p.vpct.TienBN), kq.Key.TrongBH }).Where(p => p.SoLuong != 0).ToList();
                                                        // select new { vp1.MaKP, dv.HamLuong, dv.TenHC, dv.TenNhom, vpct.TrongBH, dv.STT, TenDV = (Bien.MaBV == "27183" || Bien.MaBV == "12001") ? (dv.TenDV + " " + dv.HamLuong) : dv.TenDV, vpct.DonVi, vpct.DonGia, vpct.SoLuong, vpct.ThanhTien, TienBN = vpct.TienBN, vpct.TienBH }).ToList();

                                                        rep.Tongtien.Value = bk01.Sum(p => p.ThanhTien);
                                                        rep.TienBN.Value = bk01.Sum(p => p.TienBN);
                                                        var tamthu = _dataContext.TamUngs.Where(p => p.MaBNhan == _mabn).ToList();
                                                        rep.TamThu.Value = tamthu.Where(p => p.PhanLoai == 0).Sum(p => p.SoTien).Value - tamthu.Where(p => p.PhanLoai == 4).Sum(p => p.SoTien).Value;

                                                        if (tamthu.Where(p => p.PhanLoai == 3).Sum(p => p.SoTien) != null)
                                                            rep.ThuTT.Value = tamthu.Where(p => p.PhanLoai == 3).Sum(p => p.SoTien).Value;
                                                        else
                                                            rep.ThuTT.Value = 0;
                                                        if (bk01.Count > 0)
                                                        {
                                                            rep.DataSource = bk01.ToList();
                                                            rep.BindingData();
                                                            rep.CreateDocument();
                                                            //rep.DataMember = "Table";
                                                            frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                                            frm.ShowDialog();
                                                        }
                                                    }

                                                    #endregion// kết thúc
                                                }

                                                #endregion
                                            }
                                        }
                                    }
                                }
                                #region bảng kê a5
                                else
                                {
                                    BaoCao.repBangKe01bv rep = new BaoCao.repBangKe01bv();
                                    if (sodk != "")
                                    {
                                        rep.STTThanhToan_lbl.Value = "Số TT: ";
                                        rep.STTThanhToan.Value = sodk;
                                    }
                                    rep.tenBN.Value = Bien.MaBV == "20001" ? _tenbn.ToUpper() : _tenbn;
                                    rep.MaBNhan.Value = _mabn;
                                    if (par.Count > 0)
                                    {
                                        rep.KhuVuc.Value = par.First().KhuVuc;
                                        rep.DiaChi.Value = par.First().DChi;
                                        int gioiTinh = int.Parse(par.First().GTinh.ToString());
                                        if (gioiTinh == 1)
                                        {
                                            rep.Nam.Value = "X";
                                        }
                                        else if (gioiTinh == 0)
                                        {
                                            rep.Nu.Value = "X";
                                        }

                                        if (_ngaykham.Count > 0)
                                        {
                                            DateTime _dt2 = System.DateTime.Now;
                                            if (_ngaykham.First().NgayKham != null)
                                            {
                                                _dt2 = _ngaykham.First().NgayKham.Value;
                                                rep.NgayKham.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                            }
                                        }

                                        if (Rvien.Count > 0)
                                        {
                                            DateTime _dt2 = System.DateTime.Now;
                                            //if (Bien.MaBV == "30003")
                                            //{
                                            if (tt.First().NgayTT != null)
                                                _dt2 = tt.First().NgayTT.Value;
                                            rep.NgayKT.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                            //}
                                            //else
                                            //{
                                            //    if (Rvien.First().NgayRa != null)
                                            //        _dt2 = Rvien.First().NgayRa.Value;
                                            //    rep.NgayKT.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                            //}
                                        }
                                        rep.txtsophim.Text = SoPhim > 0 ? ("Ghi chú: Bệnh nhân đã nhận đủ " + SoPhim.ToString()) + " phim." : "";
                                        int dungtuyen = 0, capcuu = 0;
                                        _DTuong = (par.First().DTuong).ToString();
                                        if (_HTTT == 1)//   if (_DTuong.Contains("BHYT"))
                                        {
                                            rep.SoThe.Value = par.First().SThe;
                                            rep.coBH.Value = "X";
                                            //if (par.First().SThe != null && par.First().SThe.ToString() != "" && par.First().SThe.Length > 10)
                                            //    _muc = par.First().SThe.Substring(2, 1);

                                            rep.HanBHTu.Value = par.First().HanBHTu;
                                            rep.HanBHDen.Value = par.First().HanBHDen;
                                            string macs = "";
                                            if (par.First().MaCS != null)
                                            {
                                                macs = par.First().MaCS;
                                                rep.MaCS.Value = macs.Substring(0, 2) + "-" + macs.Substring(2, 3);
                                            }
                                            var csdkbd = _dataContext.BenhViens.Where(p => p.MaBV == macs).ToList();
                                            if (csdkbd.Count > 0)
                                            {
                                                rep.CSDKKCB.Value = csdkbd.First().TenBV;
                                            }

                                            if (par.First().Tuyen != null)
                                            {
                                                dungtuyen = int.Parse(par.First().Tuyen.ToString());
                                            }

                                            capcuu = int.Parse(par.First().CapCuu.ToString());
                                            if (capcuu == 1)
                                            {
                                                rep.CapCuu.Value = "X";
                                                rep.DungTuyen.Value = "";
                                                rep.TraiTuyen.Value = "";
                                            }
                                        }
                                        else
                                        {
                                            if (m == 0)
                                                rep.mucHuong.Value = "Dành cho đối tượng " + _loaiDT;
                                            else
                                                rep.mucHuong.Value = "Dành cho đối tượng " + _loaiDT + " (XHH)";
                                            rep.koBH.Value = "X";
                                            capcuu = int.Parse(par.First().CapCuu.ToString());
                                            if (capcuu == 1)
                                            {
                                                rep.CapCuu.Value = "X";
                                            }
                                            rep.HanBHTu.Value = "";
                                            rep.koBH.Value = "X";
                                        }

                                        if (Rvien.Count > 0)
                                        {
                                            int _makp = 0;
                                            if (Rvien.Count > 0)
                                                _makp = Rvien.First().MaKP;
                                            var kphong = _dataContext.KPhongs.Where(p => p.MaKP == (_makp)).ToList();
                                            if (kphong.Count > 0)
                                                rep.KhoaPhong.Value = kphong.First().TenKP;
                                            rep.ChanDoan.Value = DungChung.Ham.GetICDstr(Rvien.First().ChanDoan);
                                            rep.MaICD.Value = DungChung.Ham.GetICDstr(Rvien.First().MaICD);
                                            if (Rvien.First().SoNgaydt != null)
                                                rep.TongNgay.Value = Rvien.First().SoNgaydt.ToString() + " ngày";
                                            string _mabvchuyenden = "";
                                            if (Bien.MaBV == "20001")
                                            {
                                                if (Rvien.First().MaBVC != null)
                                                {
                                                    _mabvchuyenden = Rvien.First().MaBVC;
                                                }
                                                else
                                                {
                                                    if (!string.IsNullOrEmpty(par.First().MaBV))
                                                        _mabvchuyenden = par.First().MaBV;
                                                }
                                            }
                                            else
                                            {
                                                if (!string.IsNullOrEmpty(par.First().MaBV))
                                                {
                                                    _mabvchuyenden = par.First().MaBV;
                                                }
                                                else
                                                {
                                                    if (!string.IsNullOrEmpty(Rvien.First().MaBVC))
                                                    {
                                                        _mabvchuyenden = Rvien.First().MaBVC;
                                                        if (Bien.MaBV == "12122")
                                                            rep.celLblNoiChuyenDen.Text = "Nơi chuyển đi";
                                                    }
                                                }
                                            }
                                            if (!string.IsNullOrEmpty(_mabvchuyenden))
                                            {
                                                var bv = _dataContext.BenhViens.Where(p => p.MaBV == (_mabvchuyenden)).ToList();
                                                if (bv.Count > 0)
                                                {
                                                    rep.NoiChuyenDen.Value = bv.First().TenBV;
                                                }
                                            }
                                        }
                                        string _ngaysinh = "";
                                        if (par.First().NgaySinh != null && par.First().NgaySinh.ToString() != "")
                                            _ngaysinh = par.First().NgaySinh.ToString() + "/";
                                        if (par.First().ThangSinh != null && par.First().ThangSinh.ToString() != "")
                                            _ngaysinh = _ngaysinh + par.First().ThangSinh.ToString() + "/";
                                        if (par.First().NamSinh != null && par.First().NamSinh.ToString() != "")
                                            _ngaysinh = _ngaysinh + par.First().NamSinh.ToString();
                                        rep.NSinh.Value = _ngaysinh;
                                        var ngaytt = tt.FirstOrDefault().NgayTT;
                                        if (ngaytt != null)
                                        {
                                            int _fmat = Bien.FormatDate;
                                            if (Bien.MaBV == "30002")
                                                _fmat = 1;
                                            if (Bien.MaBV == "27001" || Bien.MaBV == "30002")
                                                rep.NgayGD.Value = "Ngày ... tháng .... năm ......";
                                            else if (Bien.MaBV == "08204" || Bien.MaBV == "19048" || Bien.MaBV == "27023")
                                                rep.NgayGD.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, 0);
                                            else
                                                rep.NgayGD.Value = DungChung.Ham.NgaySangChu(ngaytt.Value, _fmat);
                                            rep.NgayTT.Value = DungChung.Ham.NgaySangChu(ngaytt.Value, _fmat);
                                        }
                                        if (par.First().SoKB != null)
                                            rep.SoKB.Value = par.First().SoKB;
                                        //bệnh nhân BHYT
                                        if (_HTTT == 1) //    if (_DTuong == "BHYT")
                                        {
                                            var bk01 = (from vp1 in tt
                                                        join vpct in _lvpct.Where(p => p.TrongBH == 1).Where(p => m == 0 ? (p.XHH == 0) : (p.XHH > 0)) on vp1.idVPhi equals vpct.idVPhi
                                                        join dv in dichvu.Where(p => p.MaDV != (Bien.MaBV == "30010" ? 12867 : 0)) on vpct.MaDV equals dv.MaDV
                                                        group new { vp1, dv, vpct } by new { dv.TenNhom, dv.HamLuong, dv.TenRG, dv.TenHC, dv.TenNhomCT, dv.STT, dv.TenDV, vpct.DonVi, vpct.DonGia, vpct.TrongBH, dv.TrongDM } into kq
                                                        select new { kq.Key.TenHC, kq.Key.HamLuong, kq.Key.TenRG, kq.Key.TenNhomCT, kq.Key.TenNhom, kq.Key.STT, kq.Key.TenDV, kq.Key.DonVi, kq.Key.DonGia, SoLuong = kq.Sum(p => p.vpct.SoLuong), ThanhTien = kq.Sum(p => p.vpct.ThanhTien), TienBH = kq.Sum(p => p.vpct.TienBH), TienBN = kq.Sum(p => p.vpct.TienBN), kq.Key.TrongBH, kq.Key.TrongDM, idVPhict = kq.Max(p => p.vpct.idVPhict) }).OrderBy(p => p.idVPhict).Where(p => p.SoLuong != 0).ToList();
                                            //select new { dv.TenNhom, dv.HamLuong, dv.TenHC, dv.TenNhomCT, vpct.idVPhict, dv.STT, dv.TenDV, vpct.DonVi, vpct.DonGia, vpct.SoLuong, vpct.ThanhTien, vpct.TienBH, vpct.TienBN, vpct.TrongBH, dv.TrongDM }).OrderBy(p => p.idVPhict).ToList();
                                            int i = 0;
                                            _lbangke.Clear();
                                            foreach (var item in bk01)
                                            {
                                                string tendv = item.TenDV;
                                                if (Bien.MaBV == "30012")
                                                { tendv = (item.TenHC != null && item.TenHC != "") ? (item.TenHC + " (" + item.TenDV + ")") : item.TenDV; }
                                                else if (Bien.MaBV == "27183" || Bien.MaBV == "12122")
                                                    tendv = item.TenDV + " " + item.HamLuong;
                                                else if (_CQCQ == "12001" || Bien.MaBV == "12001")
                                                    tendv = (item.TenRG != null && item.TenRG.Trim() != "") ? item.TenRG : item.TenDV;
                                                // thêm tên chuyên khoa vào dịch vụ công khám, tạm bỏ 26/07
                                                //if (item.TenNhomCT == "Khám bệnh")
                                                //{
                                                //    tendv = tendv + " - " + _chuyenkhoa[i];
                                                //    i++;
                                                //}
                                                _lbangke.Add(new c_BangKe { TrongBH = item.TrongBH, DonGia = item.DonGia, DonVi = item.DonVi, IdVPhict = item.idVPhict, SoLuong = item.SoLuong, STT = item.STT ?? 0, TenDV = tendv, TenNhom = item.TenNhom, TienBH = item.TienBH, TienBN = item.TienBN, ThanhTien = item.ThanhTien });
                                            }
                                            double _tongtien = bk01.Where(p => p.TrongBH == 1).Sum(p => p.ThanhTien);
                                            if (dungtuyen == 1)
                                            {
                                                if (capcuu != 1)
                                                    rep.DungTuyen.Value = "X";
                                                if (m == 0)
                                                    rep.mucHuong.Value = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                else

                                                    rep.mucHuong.Value = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "% (XHH)";
                                            }
                                            else if (dungtuyen == 2)
                                            {
                                                if (capcuu != 1)
                                                    rep.TraiTuyen.Value = "X";

                                                string kvuc = "";
                                                if (par.First().KhuVuc != null)
                                                    kvuc = par.First().KhuVuc;
                                                string muchuong = "";
                                                switch (_hangbv)
                                                {
                                                    case 1:
                                                        muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.4 + "%";
                                                        break;

                                                    case 2:
                                                        if (Bien.MaBV == "01830")
                                                            muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.7 + "%";
                                                        else
                                                            muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.6 + "%";
                                                        break;

                                                    case 3:
                                                        if (Bien.MaBV == "08204" || _tongtien < Bien.GHanTT100)
                                                        {
                                                            if (kvuc.ToLower().Contains("k"))
                                                                muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                            else
                                                                muchuong = "Mức hưởng: " + "70" + "%";
                                                        }
                                                        else
                                                        {
                                                            if (kvuc.ToLower().Contains("k"))
                                                                muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                            else
                                                                muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.7 + "%";
                                                        }
                                                        break;

                                                    case 4:
                                                        muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                        break;
                                                }
                                                if (m == 0)
                                                    rep.mucHuong.Value = muchuong;
                                                else
                                                    rep.mucHuong.Value = muchuong + " (XHH)";
                                            }
                                            // hiện thị thông báo số tiền thu thêm hoặc trả lại
                                            double sotien = 0;
                                            sotien = bk01.Sum(p => p.TienBN);
                                            rep.TienBN.Value = sotien;
                                            rep.TienBH.Value = bk01.Sum(p => p.TienBH);
                                            rep.Tongtien.Value = _tongtien;
                                            double tienCL = 0;
                                            tienCL = sotien - _tienTThu;
                                            if (Bien.MaBV != "01071" && Bien.MaBV != "01049" && Bien.MaBV != "12345" && Bien.MaBV != "24297" && Bien.MaBV != "56789")
                                            {
                                                if (tienCL > 0)
                                                {
                                                    MessageBox.Show("Số tiền bệnh nhân phải nộp thêm: " + tienCL.ToString("##,###"));
                                                }
                                                else
                                                {
                                                    if (tienCL < 0)
                                                    {
                                                        tienCL *= -1;
                                                        MessageBox.Show(string.Format("Số tiền trả lại cho bệnh nhân: " + tienCL.ToString("##,###")));
                                                    }
                                                }
                                            }
                                            if (bk01.Count > 0)
                                            {
                                                rep.DataSource = _lbangke.ToList();
                                                rep.BindingData();
                                                rep.CreateDocument();
                                                //  rep.DataMember = "Table";
                                                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                                frm.ShowDialog();
                                            }
                                        }// ket thuc BN BHYT
                                        else
                                        {
                                            var bk01 = (from vp1 in tt
                                                        join vpct in _lvpct.Where(p => p.TrongBH == 1 || p.TrongBH == 0).Where(p => m == 0 ? (p.XHH == 0) : (p.XHH > 0)) on vp1.idVPhi equals vpct.idVPhi
                                                        join dv in dichvu on vpct.MaDV equals dv.MaDV
                                                        where vpct.ThanhToan == 0
                                                        group new { vp1, dv, vpct } by new { dv.TenNhom, dv.TenHC, dv.HamLuong, dv.STT, TenDV = (Bien.MaBV == "27183" || Bien.MaBV == "12122") ? (dv.TenDV + " " + dv.HamLuong) : ((_CQCQ == "12001" || Bien.MaBV == "12001") ? ((dv.TenRG != null && dv.TenRG.Trim() != "") ? dv.TenRG : dv.TenDV) : dv.TenDV), vpct.DonVi, vpct.DonGia } into kq
                                                        select new { kq.Key.TenHC, kq.Key.HamLuong, kq.Key.TenNhom, kq.Key.STT, kq.Key.TenDV, kq.Key.DonVi, kq.Key.DonGia, SoLuong = kq.Sum(p => p.vpct.SoLuong), ThanhTien = kq.Sum(p => p.vpct.ThanhTien), TienBH = kq.Sum(p => p.vpct.TienBH), TienBN = kq.Sum(p => p.vpct.TienBN) }).Where(p => p.SoLuong != 0).ToList();
                                            if (bk01.Count > 0)
                                            {
                                                // select new { dv.TenNhom, dv.TenHC, dv.HamLuong, dv.STT, TenDV = (Bien.MaBV == "27183" || Bien.MaBV == "12001") ? (dv.TenDV + " " + dv.HamLuong) : dv.TenDV, vpct.DonVi, vpct.DonGia, vpct.SoLuong, vpct.ThanhTien, TienBN = vpct.TienBN, vpct.TienBH }).ToList();
                                                rep.Tongtien.Value = bk01.Sum(p => p.ThanhTien);
                                                rep.TienBN.Value = bk01.Sum(p => p.TienBN);
                                                var tamthu = _dataContext.TamUngs.Where(p => p.MaBNhan == _mabn).ToList();
                                                rep.TamThu.Value = tamthu.Where(p => p.PhanLoai == 0).Sum(p => p.SoTien).Value - tamthu.Where(p => p.PhanLoai == 4).Sum(p => p.SoTien).Value;

                                                if (tamthu.Where(p => p.PhanLoai == 3).Sum(p => p.SoTien) != null)
                                                    rep.ThuTT.Value = tamthu.Where(p => p.PhanLoai == 3).Sum(p => p.SoTien).Value;
                                                else
                                                    rep.ThuTT.Value = 0;
                                                rep.DataSource = bk01.ToList();
                                                rep.BindingData();
                                                rep.CreateDocument();
                                                //rep.DataMember = "Table";
                                                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                                frm.ShowDialog();
                                            }
                                        }

                                        // kết thúc
                                    }
                                }
                                #endregion bảng kê a5 kết thúc
                                break;
                            #endregion
                            #endregion
                            #region bảng kê nội trú
                            case 1:

                                if (_maubk02 == 2)
                                {
                                    #region bv 26027
                                    List<int> lMaThuocHoiChan = new List<int>();// danh sách mã thuốc hội chẩn
                                    var kp02 = (from bns in _dataContext.BNKBs.Where(p => p.MaBNhan == _mabn).OrderBy(p => p.IDKB) join kps in _dataContext.KPhongs on bns.MaKP equals kps.MaKP select kps.TenKP).ToList();

                                    //lấy ra danh sách thuốc hội chẩn
                                    if (Bien.MaBV == "26007")
                                    {
                                        var qhoichan = _dataContext.BBHCs.Where(p => p.MaBNhan == _mabn).ToList();

                                        foreach (var a in qhoichan)
                                        {
                                            DateTime ngayHC = a.NgayHC.Value.Date;
                                            var qdt = (from dt in _dataContext.DThuocs.Where(p => p.MaBNhan == _mabn && p.MaKP == a.MaKP)
                                                       join dtct in _dataContext.DThuoccts on dt.IDDon equals dtct.IDDon
                                                       join dv in _dataContext.DichVus.Where(p => p.PLoai == 1) on dtct.MaDV equals dv.MaDV
                                                       select new { NgayKe = dt.NgayKe, dv.MaDV }).ToList();
                                            foreach (var b in qdt)
                                            {
                                                if (b.NgayKe != null && b.NgayKe.Value.Date == ngayHC)
                                                    lMaThuocHoiChan.Add(b.MaDV);
                                            }
                                        }
                                    }

                                    BaoCao.repBangKe02bv_26007 rep02 = new BaoCao.repBangKe02bv_26007(lMaThuocHoiChan);

                                    //kiểm tra bệnh nhân hội chẩn
                                    if (Bien.MaBV == "26007")
                                    {
                                        var qhoichan = _dataContext.BBHCs.Where(p => p.MaBNhan == _mabn).ToList();

                                        if (qhoichan.Count > 0)
                                        {
                                            rep02.HoiChan.Value = "x";
                                        }
                                        else
                                            rep02.HoiChan.Value = "";
                                    }

                                    rep02.tenBN.Value = _tenbn;
                                    rep02.MaBNhan.Value = _mabn;

                                    if (kp02.Count > 0)
                                    {
                                        rep02.KhoaPhong.Value = kp02.Last();
                                    }
                                    var par02 = (from bn in _dataContext.BenhNhans
                                                 where bn.MaBNhan == _mabn
                                                 select bn).ToList();
                                    if (par02.Count > 0)
                                    {
                                        rep02.KhuVuc.Value = par02.First().KhuVuc;
                                        rep02.DiaChi.Value = par02.First().DChi;
                                        int gioiTinh = int.Parse(par02.First().GTinh.ToString());
                                        if (gioiTinh == 1)
                                        {
                                            rep02.Nam.Value = "X";
                                        }
                                        else if (gioiTinh == 0)
                                        {
                                            rep02.Nu.Value = "X";
                                        }
                                        _DTuong = (par02.First().DTuong).ToString();
                                        if (Rvien.Count > 0)
                                        {
                                            int _makp = 0;
                                            if (Rvien.Count > 0)
                                                _makp = Rvien.First().MaKP;
                                            var kphong = _dataContext.KPhongs.Where(p => p.MaKP == (_makp)).ToList();
                                            if (kphong.Count > 0)
                                                rep02.KhoaPhong.Value = kphong.First().TenKP;
                                            DateTime _dt2 = System.DateTime.Now;
                                            if (Rvien.First().NgayRa != null)
                                            {
                                                _dt2 = Rvien.First().NgayRa.Value;
                                                rep02.NgayRa.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);//
                                            }
                                            if (Rvien.First().SoNgaydt != null)
                                                rep02.TongNgay.Value = Rvien.First().SoNgaydt.ToString() + " ngày";
                                            string _mabvchuyenden = "";
                                            if (Bien.MaBV == "20001")
                                            {
                                                if (Rvien.First().MaBVC != null)
                                                {
                                                    _mabvchuyenden = Rvien.First().MaBVC;
                                                }
                                                else
                                                {
                                                    if (!string.IsNullOrEmpty(par.First().MaBV))
                                                        _mabvchuyenden = par.First().MaBV;
                                                }
                                            }
                                            else
                                            {
                                                if (!string.IsNullOrEmpty(par.First().MaBV))
                                                    _mabvchuyenden = par.First().MaBV;
                                                else
                                                {
                                                    if (Rvien.First().MaBVC != null)
                                                    {
                                                        _mabvchuyenden = Rvien.First().MaBVC;
                                                        if (Bien.MaBV == "12122")
                                                            rep02.xrLabel66.Text = "Nơi chuyển đi";
                                                    }
                                                }
                                            }
                                            if (!string.IsNullOrEmpty(_mabvchuyenden))
                                            {
                                                var bv = _dataContext.BenhViens.Where(p => p.MaBV == (_mabvchuyenden)).ToList();
                                                if (bv.Count > 0)
                                                {
                                                    rep02.NoiChuyenDen.Value = bv.First().TenBV;
                                                }
                                            }
                                            DateTime _dt3 = System.DateTime.Now;
                                            if (Rvien.First().NgayVao != null)
                                                _dt3 = Rvien.First().NgayVao.Value;
                                            rep02.NgayVao.Value = DungChung.Ham.NgaySangChu(_dt3, Bien.FormatDate);
                                            //var bv = _dataContext.BenhViens.Where(p => p.MaBV == (_mabvchuyenden)).ToList();
                                            //if (bv.Count > 0)
                                            //    rep02.NoiChuyenDen.Value = bv.First().TenBV;
                                        }
                                        var vaovien = _dataContext.VaoViens.Where(p => p.MaBNhan == _mabn).ToList();
                                        if (vaovien.Count > 0)
                                        {
                                            DateTime _dt2 = System.DateTime.Now;
                                            if (vaovien.First().NgayVao != null)
                                                _dt2 = vaovien.First().NgayVao.Value;
                                            rep02.NgayVao.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                            if (vaovien.First().SoBA != null)
                                                rep02.SoBA.Value = vaovien.First().SoBA;
                                        }
                                        int dungtuyen = 0, capcuu = 0;
                                        if (_HTTT == 1)//  if (_DTuong.Contains("BHYT"))
                                        {
                                            rep02.SoThe.Value = par02.First().SThe;
                                            rep02.coBH.Value = "X";
                                            //if (par02.First().SThe != null && par02.First().SThe.ToString() != "" && par02.First().SThe.Length > 10)
                                            //    _muc = par02.First().SThe.Substring(2, 1);
                                            rep02.HanBHTu.Value = par02.First().HanBHTu;
                                            rep02.HanBHDen.Value = par02.First().HanBHDen;
                                            string macs = "";
                                            if (par02.First().MaCS != null)
                                            {
                                                macs = par02.First().MaCS;
                                                rep02.MaCS.Value = macs.Substring(0, 2) + "-" + macs.Substring(2, 3);
                                            }
                                            var csdkbd = _dataContext.BenhViens.Where(p => p.MaBV == macs).ToList();
                                            if (csdkbd.Count > 0)
                                            {
                                                rep02.CSDKKCB.Value = csdkbd.First().TenBV;
                                            }

                                            //var ravien = _dataContext.RaViens.Where(p => p.MaBNhan==_mabn).ToList();
                                            //if (ravien.Count > 0)
                                            //{
                                            //    rep02.NgayRa.Value = ravien.First().NgayRa;//
                                            //    rep02.TongNgay.Value = ravien.First().SoNgaydt;
                                            //}

                                            capcuu = int.Parse(par02.First().CapCuu.ToString());
                                            if (capcuu == 1)
                                            {
                                                rep02.CapCuu.Value = "X";
                                                rep02.DungTuyen.Value = "";
                                                rep02.TraiTuyen.Value = "";
                                            }
                                        }
                                        else
                                        {
                                            if (m == 0)
                                                rep02.mucHuong.Value = "Dành cho đối tượng " + _loaiDT;
                                            else
                                                rep02.mucHuong.Value = "Dành cho đối tượng " + _loaiDT + " (XHH)";
                                            rep02.koBH.Value = "X";
                                            capcuu = int.Parse(par.First().CapCuu.ToString());
                                            if (capcuu == 1)
                                            {
                                                rep02.CapCuu.Value = "X";
                                            }
                                            rep02.HanBHTu.Value = "";
                                        }
                                        rep02.ChanDoan.Value = DungChung.Ham.GetICDstr(Rvien.First().ChanDoan);
                                        rep02.MaICD.Value = DungChung.Ham.GetICDstr(Rvien.First().MaICD);
                                        string _ngaysinh = "";
                                        if (par02.First().NgaySinh != null && par02.First().NgaySinh.ToString() != "")
                                            _ngaysinh = par02.First().NgaySinh.ToString() + "/";
                                        if (par02.First().ThangSinh != null && par02.First().ThangSinh.ToString() != "")
                                            _ngaysinh = _ngaysinh + par02.First().ThangSinh.ToString() + "/";
                                        if (par02.First().NamSinh != null && par02.First().NamSinh.ToString() != "")
                                            _ngaysinh = _ngaysinh + par02.First().NamSinh.ToString();
                                        rep02.NSinh.Value = _ngaysinh;
                                        if (tt.Count > 0 && tt.First().NgayTT != null)
                                        {
                                            int _fmat = Bien.FormatDate;
                                            if (Bien.MaBV == "30002")
                                                _fmat = 1;
                                            rep02.NgayTT.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, _fmat);
                                            if (Bien.MaBV == "08204" || Bien.MaBV == "19048" || Bien.MaBV == "27023")
                                                rep02.NgayGD.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, 0);
                                            else if (Bien.MaBV == "27001" || Bien.MaBV == "30002")
                                                rep02.NgayGD.Value = " Ngày ... tháng... năm......";
                                            else
                                                rep02.NgayGD.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, _fmat);
                                        }
                                        #region bệnh nhân BHYT
                                        if (_HTTT == 1)//   if (_DTuong == "BHYT")
                                        {
                                            var bk02 = (from vp1 in tt
                                                        join vpct in _lvpct.Where(p => p.TrongBH == 1).Where(p => m == 0 ? (p.XHH == 0) : (p.XHH > 0)) on vp1.idVPhi equals vpct.idVPhi
                                                        join dv in dichvu on vpct.MaDV equals dv.MaDV
                                                        select new { dv.MaDV, TenNhom = vpct.TrongBH == 1 ? dv.TenNhom : dv.TenNhom.Replace("trong danh mục BHYT", ""), dv.HamLuong, dv.TenHC, dv.STT, dv.SoTT, dv.SoQD, dv.MaQD, TenDV = (Bien.MaBV == "12001" || Bien.MaBV == "12122") ? (dv.TenDV + " " + dv.HamLuong) : dv.TenDV, vpct.DonVi, vpct.DonGia, vpct.SoLuong, vpct.ThanhTien, vpct.TienBH, vpct.TienBN, vpct.TrongBH, dv.TrongDM }).Where(p => p.SoLuong != 0).OrderBy(p => p.SoTT).ToList();
                                            double _tongtien = Math.Round(bk02.Where(p => p.TrongBH == 1).Sum(p => p.ThanhTien), 3);
                                            if (par02.First().Tuyen != null)
                                            {
                                                dungtuyen = int.Parse(par02.First().Tuyen.ToString());
                                            }
                                            if (dungtuyen == 1)
                                            {
                                                if (capcuu != 1)
                                                    rep02.DungTuyen.Value = "X";
                                                if (m == 0)
                                                    rep02.mucHuong.Value = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                else
                                                    rep02.mucHuong.Value = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "% (XHH)";
                                            }
                                            else if (dungtuyen == 2)
                                            {
                                                if (capcuu != 1)
                                                    rep02.TraiTuyen.Value = "X";

                                                string kvuc = "";
                                                if (par.First().KhuVuc != null)
                                                    kvuc = par.First().KhuVuc;
                                                string muchuong = "";
                                                switch (_hangbv)
                                                {
                                                    case 1:
                                                        muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.4 + "%";
                                                        break;

                                                    case 2:
                                                        if (Bien.MaBV == "01830")
                                                            muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.7 + "%";
                                                        else
                                                            if (kvuc.ToLower().Contains("k"))
                                                            muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                        else
                                                            muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.6 + "%";
                                                        break;

                                                    case 3:
                                                        if (Bien.MaBV == "08204" || _tongtien < Bien.GHanTT100)
                                                        {
                                                            if (kvuc.ToLower().Contains("k"))
                                                                muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                            else
                                                                muchuong = "Mức hưởng: " + "70" + "%";
                                                        }
                                                        else
                                                        {
                                                            if (kvuc.ToLower().Contains("k"))
                                                                muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                            else
                                                                muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.7 + "%";
                                                        }
                                                        break;

                                                    case 4:
                                                        muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                        break;
                                                }
                                                if (m == 0)
                                                    rep02.mucHuong.Value = muchuong;
                                                else
                                                    rep02.mucHuong.Value = muchuong + " (XHH)";
                                            }
                                            // hiện thị thông báo số tiền thu thêm hoặc trả lại
                                            double sotien = 0;
                                            sotien = bk02.Sum(p => p.TienBN);
                                            rep02.TienBN.Value = sotien;
                                            rep02.TienBH.Value = bk02.Sum(p => p.TienBH);
                                            rep02.Tongtien.Value = _tongtien;
                                            double tienCL = 0;
                                            tienCL = sotien - _tienTThu;
                                            if (Bien.MaBV != "01071" && Bien.MaBV != "01049" && Bien.MaBV != "12345" && Bien.MaBV != "24297" && Bien.MaBV != "56789")
                                            {
                                                if (tienCL > 0)
                                                {
                                                    MessageBox.Show("Số tiền bệnh nhân phải nộp thêm: " + tienCL.ToString("##,###"));
                                                }
                                                else
                                                {
                                                    if (tienCL < 0)
                                                    {
                                                        tienCL *= -1;
                                                        MessageBox.Show(string.Format("Số tiền trả lại cho bệnh nhân: " + tienCL.ToString("##,###")));
                                                    }
                                                }
                                            }
                                            if (bk02.Count > 0)
                                            {
                                                rep02.DataSource = bk02.ToList();
                                                rep02.BindingData();
                                                rep02.CreateDocument();
                                                // rep02.DataMember = "Table";
                                                frm.prcIN.PrintingSystem = rep02.PrintingSystem;
                                                frm.ShowDialog();
                                            }
                                        }
                                        #endregion// ket thuc BN BHYT
                                        #region bn ko có bh
                                        else
                                        {
                                            var bk02 = (from vp1 in tt
                                                        join vpct in _lvpct.Where(p => p.TrongBH == 1 || p.TrongBH == 0).Where(p => m == 0 ? (p.XHH == 0) : (p.XHH > 0)) on vp1.idVPhi equals vpct.idVPhi
                                                        join dv in dichvu on vpct.MaDV equals dv.MaDV
                                                        where vpct.ThanhToan == 0
                                                        select new { TenNhom = vpct.TrongBH == 1 ? dv.TenNhom : dv.TenNhom.Replace("trong danh mục BHYT", ""), dv.HamLuong, dv.TenHC, dv.STT, TenDV = (Bien.MaBV == "12001" || Bien.MaBV == "12122") ? (dv.TenDV + " " + dv.HamLuong) : dv.TenDV, dv.MaQD, dv.SoQD, vpct.DonVi, vpct.DonGia, vpct.SoLuong, vpct.ThanhTien, TienBN = vpct.TienBN, vpct.TienBH }).Where(p => p.SoLuong != 0).ToList();
                                            rep02.Tongtien.Value = bk02.Sum(p => p.ThanhTien);
                                            rep02.TienBN.Value = bk02.Sum(p => p.TienBN);
                                            var tamthu = _dataContext.TamUngs.Where(p => p.MaBNhan == _mabn).ToList();
                                            rep02.TamThu.Value = tamthu.Where(p => p.PhanLoai == 0).Sum(p => p.SoTien).Value - tamthu.Where(p => p.PhanLoai == 4).Sum(p => p.SoTien).Value;

                                            if (tamthu.Where(p => p.PhanLoai == 3).Sum(p => p.SoTien) != null)
                                                rep02.ThuTT.Value = tamthu.Where(p => p.PhanLoai == 3).Sum(p => p.SoTien).Value;
                                            else
                                                rep02.ThuTT.Value = 0;
                                            rep02.DataSource = bk02.ToList();
                                            rep02.BindingData();
                                            rep02.CreateDocument();
                                            //rep02.DataMember = "Table";
                                            frm.prcIN.PrintingSystem = rep02.PrintingSystem;
                                            frm.ShowDialog();
                                        }

                                        #endregion// kết thúc
                                    }
                                    #endregion
                                }
                                else
                                {
                                    if ((Bien.MaBV == "01071" || Bien.MaBV == "01049" || Bien.MaBV == "12345" || Bien.MaBV == "24297") && _DTuong == "Dịch vụ")
                                    {
                                        BKeBNDichVu_01071(_mabn);
                                        //InBangKePhongKham_01071(_mabn);
                                    }
                                    else
                                    {
                                        #region bv chung
                                        var kp02 = (from bns in _dataContext.BNKBs.Where(p => p.MaBNhan == _mabn).OrderBy(p => p.IDKB) join kps in _dataContext.KPhongs on bns.MaKP equals kps.MaKP select kps.TenKP).ToList();

                                        List<int> lMaThuocHoiChan = new List<int>();// danh sách mã thuốc hội chẩn

                                        //lấy ra danh sách thuốc hội chẩn
                                        if (Bien.MaBV == "26007")
                                        {
                                            var qhoichan = _dataContext.BBHCs.Where(p => p.MaBNhan == _mabn).ToList();

                                            foreach (var a in qhoichan)
                                            {
                                                DateTime ngayHC = a.NgayHC.Value.Date;
                                                var qdt = (from dt in _dataContext.DThuocs.Where(p => p.MaBNhan == _mabn && p.MaKP == a.MaKP)
                                                           join dtct in _dataContext.DThuoccts on dt.IDDon equals dtct.IDDon
                                                           join dv in _dataContext.DichVus.Where(p => p.PLoai == 1) on dtct.MaDV equals dv.MaDV
                                                           select new { NgayKe = dt.NgayKe, dv.MaDV }).ToList();
                                                foreach (var b in qdt)
                                                {
                                                    if (b.NgayKe != null && b.NgayKe.Value.Date == ngayHC)
                                                        lMaThuocHoiChan.Add(b.MaDV);
                                                }
                                            }
                                        }

                                        BaoCao.repBangKe02bv rep02 = new BaoCao.repBangKe02bv(lMaThuocHoiChan);

                                        //kiểm tra bệnh nhân hội chẩn
                                        if (Bien.MaBV == "26007")
                                        {
                                            var qhoichan = _dataContext.BBHCs.Where(p => p.MaBNhan == _mabn).ToList();

                                            if (qhoichan.Count > 0)
                                            {
                                                rep02.HoiChan.Value = "x";
                                            }
                                            else
                                                rep02.HoiChan.Value = "";
                                        }

                                        //  BaoCao.repBangKe02bv rep02 = new BaoCao.repBangKe02bv();

                                        rep02.tenBN.Value = Bien.MaBV == "20001" ? _tenbn.ToUpper() : _tenbn;
                                        rep02.TenBN2.Value = Bien.MaBV == "20001" ? "" : _tenbn;
                                        rep02.MaBNhan.Value = _mabn;

                                        if (kp02.Count > 0)
                                        {
                                            rep02.KhoaPhong.Value = kp02.Last();
                                        }
                                        var par02 = (from bn in _dataContext.BenhNhans
                                                     where bn.MaBNhan == _mabn
                                                     select bn).ToList();
                                        if (par02.Count > 0)
                                        {
                                            rep02.KhuVuc.Value = par02.First().KhuVuc;
                                            rep02.DiaChi.Value = par02.First().DChi;
                                            int gioiTinh = int.Parse(par02.First().GTinh.ToString());
                                            if (gioiTinh == 1)
                                            {
                                                rep02.Nam.Value = "X";
                                            }
                                            else if (gioiTinh == 0)
                                            {
                                                rep02.Nu.Value = "X";
                                            }
                                            _DTuong = (par02.First().DTuong).ToString();
                                            if (Rvien.Count > 0)
                                            {
                                                int _makp = 0;
                                                if (Rvien.Count > 0)
                                                    _makp = Rvien.First().MaKP;
                                                var kphong = _dataContext.KPhongs.Where(p => p.MaKP == (_makp)).ToList();
                                                if (kphong.Count > 0)
                                                    rep02.KhoaPhong.Value = kphong.First().TenKP;
                                                DateTime _dt2 = System.DateTime.Now;
                                                if (Rvien.First().NgayRa != null)
                                                {
                                                    _dt2 = Rvien.First().NgayRa.Value;
                                                    rep02.NgayRa.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);//
                                                }
                                                if (Rvien.First().SoNgaydt != null)
                                                    rep02.TongNgay.Value = Rvien.First().SoNgaydt.ToString() + " ngày";
                                                string _mabvchuyenden = "";
                                                if (Bien.MaBV == "20001")
                                                {
                                                    if (Rvien.First().MaBVC != null)
                                                    {
                                                        _mabvchuyenden = Rvien.First().MaBVC;
                                                    }
                                                    else
                                                    {
                                                        if (!string.IsNullOrEmpty(par.First().MaBV))
                                                            _mabvchuyenden = par.First().MaBV;
                                                    }
                                                }
                                                else
                                                {
                                                    if (!string.IsNullOrEmpty(par.First().MaBV))
                                                        _mabvchuyenden = par.First().MaBV;
                                                    else
                                                    {
                                                        if (!string.IsNullOrEmpty(Rvien.First().MaBVC))
                                                            _mabvchuyenden = Rvien.First().MaBVC;
                                                        if (Bien.MaBV == "12122")
                                                            rep02.xrLabel66.Text = "Nơi chuyển đi";
                                                    }
                                                }
                                                if (!string.IsNullOrEmpty(_mabvchuyenden))
                                                {
                                                    var bvc = _dataContext.BenhViens.Where(p => p.MaBV == _mabvchuyenden).Select(p => p.TenBV).FirstOrDefault();
                                                    if (bvc != null)
                                                        rep02.NoiChuyenDen.Value = bvc.ToString();
                                                }
                                                DateTime _dt3 = System.DateTime.Now;
                                                if (Rvien.First().NgayVao != null)
                                                    _dt3 = Rvien.First().NgayVao.Value;
                                                rep02.NgayVao.Value = DungChung.Ham.NgaySangChu(_dt3, Bien.FormatDate);
                                                //var bv = _dataContext.BenhViens.Where(p => p.MaBV == (_mabvchuyenden)).ToList();
                                                //if (bv.Count > 0)
                                                //    rep02.NoiChuyenDen.Value = bv.First().TenBV;
                                            }
                                            var vaovien = _dataContext.VaoViens.Where(p => p.MaBNhan == _mabn).ToList();
                                            if (vaovien.Count > 0)
                                            {
                                                DateTime _dt2 = System.DateTime.Now;
                                                if (vaovien.First().NgayVao != null)
                                                    _dt2 = vaovien.First().NgayVao.Value;
                                                rep02.NgayVao.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                                if (vaovien.First().SoBA != null)
                                                    rep02.SoBA.Value = vaovien.First().SoBA;
                                            }
                                            //rep02.txtsophim.Text = SoPhim > 0 ? ("Ghi chú: Bệnh nhân đã nhận đủ " + SoPhim.ToString()) + " phim." : "";
                                            int dungtuyen = 0, capcuu = 0;
                                            if (_HTTT == 1)//  if (_DTuong.Contains("BHYT"))
                                            {
                                                rep02.SoThe.Value = par02.First().SThe;
                                                rep02.coBH.Value = "X";
                                                //if (par02.First().SThe != null && par02.First().SThe.ToString() != "" && par02.First().SThe.Length > 10)
                                                //    _muc = par02.First().SThe.Substring(2, 1);
                                                rep02.HanBHTu.Value = par02.First().HanBHTu;
                                                rep02.HanBHDen.Value = par02.First().HanBHDen;
                                                string macs = "";
                                                if (par02.First().MaCS != null)
                                                {
                                                    macs = par02.First().MaCS;
                                                    rep02.MaCS.Value = macs.Substring(0, 2) + "-" + macs.Substring(2, 3);
                                                }
                                                var csdkbd = _dataContext.BenhViens.Where(p => p.MaBV == macs).ToList();
                                                if (csdkbd.Count > 0)
                                                {
                                                    rep02.CSDKKCB.Value = csdkbd.First().TenBV;
                                                }

                                                //var ravien = _dataContext.RaViens.Where(p => p.MaBNhan==_mabn).ToList();
                                                //if (ravien.Count > 0)
                                                //{
                                                //    rep02.NgayRa.Value = ravien.First().NgayRa;//
                                                //    rep02.TongNgay.Value = ravien.First().SoNgaydt;
                                                //}

                                                capcuu = int.Parse(par02.First().CapCuu.ToString());
                                                if (capcuu == 1)
                                                {
                                                    rep02.CapCuu.Value = "X";
                                                    rep02.DungTuyen.Value = "";
                                                    rep02.TraiTuyen.Value = "";
                                                }
                                            }
                                            else
                                            {
                                                if (m == 0)
                                                    rep02.mucHuong.Value = "Dành cho đối tượng " + _loaiDT;
                                                else
                                                    rep02.mucHuong.Value = "Dành cho đối tượng " + _loaiDT + " (XHH)";
                                                rep02.koBH.Value = "X";
                                                capcuu = int.Parse(par.First().CapCuu.ToString());
                                                if (capcuu == 1)
                                                {
                                                    rep02.CapCuu.Value = "X";
                                                }
                                                rep02.HanBHTu.Value = "";
                                            }
                                            rep02.ChanDoan.Value = DungChung.Ham.GetICDstr(Rvien.First().ChanDoan);
                                            rep02.MaICD.Value = DungChung.Ham.GetICDstr(Rvien.First().MaICD);
                                            string _ngaysinh = "";
                                            if (par02.First().NgaySinh != null && par02.First().NgaySinh.ToString() != "")
                                                _ngaysinh = par02.First().NgaySinh.ToString() + "/";
                                            if (par02.First().ThangSinh != null && par02.First().ThangSinh.ToString() != "")
                                                _ngaysinh = _ngaysinh + par02.First().ThangSinh.ToString() + "/";
                                            if (par02.First().NamSinh != null && par02.First().NamSinh.ToString() != "")
                                                _ngaysinh = _ngaysinh + par02.First().NamSinh.ToString();
                                            rep02.NSinh.Value = _ngaysinh;
                                            var ngaytt = _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn).Select(p => p.NgayTT).ToList();
                                            if (ngaytt.Count > 0)
                                            {
                                                int _fmat = Bien.FormatDate;
                                                if (Bien.MaBV == "30002")
                                                    _fmat = 1;
                                                rep02.NgayTT.Value = DungChung.Ham.NgaySangChu(ngaytt.First().Value, _fmat);
                                                if (Bien.MaBV == "08204" || Bien.MaBV == "19048" || Bien.MaBV == "27023")
                                                    rep02.NgayGD.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, 0);
                                                else if (Bien.MaBV == "27001" || Bien.MaBV == "30002")
                                                    rep02.NgayGD.Value = " Ngày ... tháng... năm......";
                                                else
                                                    rep02.NgayGD.Value = DungChung.Ham.NgaySangChu(ngaytt.First().Value, _fmat);
                                            }
                                            //bệnh nhân BHYT
                                            if (_HTTT == 1)//   if (_DTuong == "BHYT")
                                            {
                                                var bk02 = (from vp1 in tt
                                                            join vpct in _lvpct.Where(p => p.TrongBH == 1).Where(p => m == 0 ? (p.XHH == 0) : (p.XHH > 0)) on vp1.idVPhi equals vpct.idVPhi
                                                            join dv in dichvu on vpct.MaDV equals dv.MaDV
                                                            select new { dv.TenNhomBK02, dv.MaDV, dv.TenNhomCT, dv.TenNhom, dv.HamLuong, dv.TenHC, dv.STT, dv.SoTT, vp1.LyDo, dv.SoQD, dv.MaQD, TenDV = (Bien.MaBV == "12001" || _CQCQ == "12001") ? ((dv.TenRG != null && dv.TenRG.Trim() != "") ? dv.TenRG : (dv.TenDV + " " + dv.HamLuong)) : (Bien.MaBV == "12122" ? dv.TenDV + " " + dv.HamLuong : dv.TenDV), vpct.DonVi, vpct.DonGia, vpct.SoLuong, vpct.ThanhTien, vpct.TienBH, vpct.TienBN, vpct.TBNCTT, vpct.TBNTT, vpct.TrongBH, dv.TrongDM }).Where(p => p.SoLuong != 0).OrderBy(p => p.SoTT).ToList();

                                                #region tính tổng số thang thuốc đông y
                                                if (Bien.MaBV == "27021" || Bien.MaBV == "27022" || Bien.MaBV == "27023")
                                                {
                                                    //var qdt = (from dt in _dataContext.DThuocs.Where(p => p.MaBNhan == _mabn && p.PLDV == 1)
                                                    //           join dtct in _dataContext.DThuoccts.Where(p => p.TrongBH == 1) on dt.IDDon equals dtct.IDDon
                                                    //           join dv in _dataContext.DichVus.Where(p=>p.TenDV == "Sắc thuốc thang") on dtct.MaDV equals dv.MaDV
                                                    //           group new{ dt, dtct} by new { dv.TenDV } into kq
                                                    //           select new { kq.Key.TenDV, SoLuong = kq.Sum(p=>p.dtct.SoLuong) }).ToList();
                                                    var qdt = (from bk in bk02.Where(p => p.TenDV == "Sắc thuốc thang")
                                                               group bk by new { TenDV = bk.TenDV } into kq
                                                               select new { kq.Key.TenDV, SoLuong = kq.Sum(p => p.SoLuong) }).ToList();

                                                    if (qdt.Count > 0)
                                                    {
                                                        rep02.lblSoThang.Text = "Tổng số thang: " + qdt.First().SoLuong.ToString();
                                                    }
                                                }
                                                #endregion
                                                double _tongtien = Math.Round(bk02.Where(p => p.TrongBH == 1).Sum(p => p.ThanhTien), 3);
                                                if (par02.First().Tuyen != null)
                                                {
                                                    dungtuyen = int.Parse(par02.First().Tuyen.ToString());
                                                }
                                                if (dungtuyen == 1)
                                                {
                                                    if (capcuu != 1)
                                                        rep02.DungTuyen.Value = "X";
                                                    if (m == 0)
                                                        rep02.mucHuong.Value = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                    else
                                                        rep02.mucHuong.Value = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "% (XHH)";
                                                }
                                                else if (dungtuyen == 2)
                                                {
                                                    if (capcuu != 1)
                                                        rep02.TraiTuyen.Value = "X";

                                                    string kvuc = "";
                                                    if (par.First().KhuVuc != null)
                                                        kvuc = par.First().KhuVuc;
                                                    string muchuong = "";
                                                    switch (_hangbv)
                                                    {
                                                        case 1:
                                                            muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.4 + "%";
                                                            break;

                                                        case 2:
                                                            if (Bien.MaBV == "01830")
                                                                muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.7 + "%";
                                                            else
                                                                muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.6 + "%";
                                                            break;

                                                        case 3:
                                                            if (Bien.MaBV == "08204" || _tongtien < Bien.GHanTT100)
                                                            {
                                                                if (kvuc.ToLower().Contains("k"))
                                                                    muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                                else
                                                                    muchuong = "Mức hưởng: " + "70" + "%";
                                                            }
                                                            else
                                                            {
                                                                if (kvuc.ToLower().Contains("k"))
                                                                    muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                                else
                                                                    muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.7 + "%";
                                                            }
                                                            break;

                                                        case 4:
                                                            muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                            break;
                                                    }
                                                    if (m == 0)
                                                        rep02.mucHuong.Value = muchuong;
                                                    else
                                                        rep02.mucHuong.Value = muchuong + " (XHH)";
                                                }
                                                // hiện thị thông báo số tiền thu thêm hoặc trả lại
                                                double sotien = 0, T_BNTT = 0, T_BNCTT = 0;
                                                //sotien = bk02.Sum(p => p.TienBN);
                                                T_BNTT = bk02.Sum(p => p.TBNTT);
                                                T_BNCTT = bk02.Sum(p => p.TBNCTT);
                                                sotien = bk02.Sum(p => p.TienBN);
                                                rep02.TienBN.Value = sotien;
                                                rep02.TienBH.Value = bk02.Sum(p => p.TienBH);
                                                rep02.Tongtien.Value = _tongtien;
                                                rep02.TienBnctt.Value = T_BNCTT;
                                                rep02.Tienbntt.Value = T_BNTT;
                                                double tienCL = 0;
                                                tienCL = sotien - _tienTThu;
                                                if (Bien.MaBV != "01071" && Bien.MaBV != "01049" && Bien.MaBV != "12345" && Bien.MaBV != "24297" && Bien.MaBV != "56789")
                                                {
                                                    if (tienCL > 0)
                                                    {
                                                        MessageBox.Show("Số tiền bệnh nhân phải nộp thêm: " + tienCL.ToString("##,###"));
                                                    }
                                                    else
                                                    {
                                                        if (tienCL < 0)
                                                        {
                                                            tienCL *= -1;
                                                            MessageBox.Show(string.Format("Số tiền trả lại cho bệnh nhân: " + tienCL.ToString("##,###")));
                                                        }
                                                    }
                                                }
                                                if (bk02.Count > 0)
                                                {
                                                    rep02.DataSource = bk02.ToList();
                                                    rep02.BindingData();
                                                    rep02.CreateDocument();
                                                    // rep02.DataMember = "Table";
                                                    frm.prcIN.PrintingSystem = rep02.PrintingSystem;
                                                    frm.ShowDialog();
                                                }
                                            }// ket thuc BN BHYT
                                            else
                                            {
                                                var bk02 = (from vp1 in tt
                                                            join vpct in _lvpct.Where(p => p.TrongBH == 1 || p.TrongBH == 0).Where(p => m == 0 ? (p.XHH == 0) : (p.XHH > 0)) on vp1.idVPhi equals vpct.idVPhi
                                                            join dv in dichvu on vpct.MaDV equals dv.MaDV
                                                            where vpct.ThanhToan == 0
                                                            select new { dv.MaDV, dv.TenNhom, dv.TenHC, dv.HamLuong, dv.STT, TenDV = (Bien.MaBV == "12001" || _CQCQ == "12001") ? ((dv.TenRG != null && dv.TenRG.Trim() != "") ? dv.TenRG : (dv.TenDV + " " + dv.HamLuong)) : (Bien.MaBV == "12122" ? (dv.TenDV + " " + dv.HamLuong) : dv.TenDV), dv.MaQD, dv.SoQD, vpct.DonVi, vpct.DonGia, vpct.SoLuong, vpct.ThanhTien, TienBN = vpct.TienBN, vpct.TienBH }).Where(p => p.SoLuong != 0).ToList();
                                                rep02.Tongtien.Value = bk02.Sum(p => p.ThanhTien);
                                                rep02.TienBN.Value = bk02.Sum(p => p.TienBN);
                                                var tamthu = _dataContext.TamUngs.Where(p => p.MaBNhan == _mabn).ToList();
                                                rep02.TamThu.Value = tamthu.Where(p => p.PhanLoai == 0).Sum(p => p.SoTien).Value - tamthu.Where(p => p.PhanLoai == 4).Sum(p => p.SoTien).Value;

                                                if (tamthu.Where(p => p.PhanLoai == 3).Sum(p => p.SoTien) != null)
                                                    rep02.ThuTT.Value = tamthu.Where(p => p.PhanLoai == 3).Sum(p => p.SoTien).Value;
                                                else
                                                    rep02.ThuTT.Value = 0;
                                                #region tính tổng số thang thuốc đông y
                                                if (Bien.MaBV == "27021" || Bien.MaBV == "27022" || Bien.MaBV == "27023")
                                                {
                                                    var qdt = (from bk in bk02.Where(p => p.TenDV == "Sắc thuốc thang")
                                                               group bk by new { TenDV = bk.TenDV } into kq
                                                               select new { kq.Key.TenDV, SoLuong = kq.Sum(p => p.SoLuong) }).ToList();

                                                    if (qdt.Count > 0)
                                                    {
                                                        rep02.lblSoThang.Text = "Tổng số thang: " + qdt.First().SoLuong.ToString();
                                                    }
                                                }
                                                #endregion
                                                if (bk02.Count > 0)
                                                {
                                                    rep02.DataSource = bk02.ToList();
                                                    rep02.BindingData();
                                                    rep02.CreateDocument();
                                                    //rep02.DataMember = "Table";
                                                    frm.prcIN.PrintingSystem = rep02.PrintingSystem;
                                                    frm.ShowDialog();
                                                }
                                            }

                                            // kết thúc
                                        }
                                        #endregion
                                    }
                                }
                                break;

                            case 2:
                                #region case 2
                                var kp03 = (from bns in _dataContext.BNKBs.Where(p => p.MaBNhan == _mabn).OrderBy(p => p.IDKB) join kps in _dataContext.KPhongs on bns.MaKP equals kps.MaKP select kps.TenKP).ToList();

                                BaoCao.repBangKe03bv rep03 = new BaoCao.repBangKe03bv();
                                rep03.tenBN.Value = _tenbn;
                                rep03.MaBNhan.Value = _mabn;

                                if (kp03.Count > 0)
                                {
                                    rep03.KhoaPhong.Value = kp03.Last();
                                }
                                var par03 = (from bn in _dataContext.BenhNhans
                                             where bn.MaBNhan == _mabn
                                             select bn).ToList();
                                if (par03.Count > 0)
                                {
                                    rep03.KhuVuc.Value = par03.First().KhuVuc;
                                    rep03.DiaChi.Value = par03.First().DChi;
                                    int gioiTinh = int.Parse(par03.First().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep03.Nam.Value = "X";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep03.Nu.Value = "X";
                                    }
                                    _DTuong = (par03.First().DTuong).ToString();
                                    //var ravien = _dataContext.RaViens.Where(p => p.MaBNhan == _mabn).ToList();
                                    if (Rvien.Count > 0)
                                    {
                                        //rep03.MaICD.Value = Rvien.First().MaICD;
                                        int _makp = 0;
                                        if (Rvien.Count > 0)
                                            _makp = Rvien.First().MaKP;
                                        var kphong = _dataContext.KPhongs.Where(p => p.MaKP == (_makp)).ToList();
                                        if (kphong.Count > 0)
                                            rep03.KhoaPhong.Value = kphong.First().TenKP;
                                        DateTime _dt2 = System.DateTime.Now;
                                        if (Rvien.First().NgayRa != null)
                                        {
                                            _dt2 = Rvien.First().NgayRa.Value;
                                            rep03.NgayRa.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);//
                                        }
                                        if (Rvien.First().SoNgaydt != null)
                                            rep03.TongNgay.Value = Rvien.First().SoNgaydt.ToString() + " ngày";
                                        string _mabvchuyenden = "";
                                        if (Bien.MaBV == "20001")
                                        {
                                            if (Rvien.First().MaBVC != null)
                                            {
                                                _mabvchuyenden = Rvien.First().MaBVC;
                                            }
                                            else
                                            {
                                                if (!string.IsNullOrEmpty(par.First().MaBV))
                                                    _mabvchuyenden = par.First().MaBV;
                                            }
                                        }
                                        else
                                        {
                                            if (!string.IsNullOrEmpty(par.First().MaBV))
                                                _mabvchuyenden = par.First().MaBV;
                                            else
                                            {
                                                if (!string.IsNullOrEmpty(Rvien.First().MaBVC))
                                                    _mabvchuyenden = Rvien.First().MaBVC;
                                                //if (Bien.MaBV == "12122")
                                                //rep02.xrLabel66.Text = "Nơi chuyển đi";
                                            }
                                        }
                                        DateTime _dt3 = System.DateTime.Now;
                                        if (Rvien.First().NgayVao != null)
                                            _dt3 = Rvien.First().NgayVao.Value;
                                        rep03.NgayVao.Value = DungChung.Ham.NgaySangChu(_dt3, Bien.FormatDate);
                                        var bv = _dataContext.BenhViens.Where(p => p.MaBV == (_mabvchuyenden)).ToList();
                                        if (bv.Count > 0)
                                            rep03.NoiChuyenDen.Value = bv.First().TenBV;
                                    }
                                    var vaovien = _dataContext.VaoViens.Where(p => p.MaBNhan == _mabn).ToList();
                                    if (vaovien.Count > 0)
                                    {
                                        DateTime _dt2 = System.DateTime.Now;
                                        if (vaovien.First().NgayVao != null)
                                            _dt2 = vaovien.First().NgayVao.Value;
                                        rep03.NgayVao.Value = DungChung.Ham.NgaySangChu(_dt2, Bien.FormatDate);
                                        if (vaovien.First().SoBA != null)
                                            rep03.SoBA.Value = vaovien.First().SoBA;
                                    }
                                    int dungtuyen = 0, capcuu = 0;
                                    if (_HTTT == 1)//  if (_DTuong.Contains("BHYT"))
                                    {
                                        rep03.SoThe.Value = par03.First().SThe;
                                        rep03.coBH.Value = "X";
                                        //if (par03.First().SThe != null && par03.First().SThe.ToString() != "" && par03.First().SThe.Length > 10)
                                        //    _muc = par03.First().SThe.Substring(2, 1);
                                        rep03.HanBHTu.Value = par03.First().HanBHTu;
                                        rep03.HanBHDen.Value = par03.First().HanBHDen;
                                        string macs = "";
                                        if (par03.First().MaCS != null)
                                        {
                                            macs = par03.First().MaCS;
                                            rep03.MaCS.Value = macs.Substring(0, 2) + "-" + macs.Substring(2, 3);
                                        }
                                        var csdkbd = _dataContext.BenhViens.Where(p => p.MaBV == macs).ToList();
                                        if (csdkbd.Count > 0)
                                        {
                                            rep03.CSDKKCB.Value = csdkbd.First().TenBV;
                                        }

                                        //var ravien = _dataContext.RaViens.Where(p => p.MaBNhan==_mabn).ToList();
                                        //if (ravien.Count > 0)
                                        //{
                                        //    rep03.NgayRa.Value = ravien.First().NgayRa;//
                                        //    rep03.TongNgay.Value = ravien.First().SoNgaydt;
                                        //}

                                        capcuu = int.Parse(par03.First().CapCuu.ToString());
                                        if (capcuu == 1)
                                        {
                                            rep03.CapCuu.Value = "X";
                                            rep03.DungTuyen.Value = "";
                                            rep03.TraiTuyen.Value = "";
                                        }
                                    }
                                    else
                                    {
                                        if (m == 0)
                                            rep03.mucHuong.Value = "Dành cho đối tượng " + _loaiDT;
                                        else
                                            rep03.mucHuong.Value = "Dành cho đối tượng " + _loaiDT + " (XHH)";
                                        rep03.koBH.Value = "X";
                                        capcuu = int.Parse(par.First().CapCuu.ToString());
                                        if (capcuu == 1)
                                        {
                                            rep03.CapCuu.Value = "X";
                                        }
                                        rep03.HanBHTu.Value = "";
                                    }
                                    rep03.ChanDoan.Value = DungChung.Ham.GetICDstr(Rvien.First().ChanDoan);
                                    rep03.MaICD.Value = DungChung.Ham.GetICDstr(Rvien.First().MaICD);
                                    string _ngaysinh = "";
                                    if (par03.First().NgaySinh != null && par03.First().NgaySinh.ToString() != "")
                                        _ngaysinh = par03.First().NgaySinh.ToString() + "/";
                                    if (par03.First().ThangSinh != null && par03.First().ThangSinh.ToString() != "")
                                        _ngaysinh = _ngaysinh + par03.First().ThangSinh.ToString() + "/";
                                    if (par03.First().NamSinh != null && par03.First().NamSinh.ToString() != "")
                                        _ngaysinh = _ngaysinh + par03.First().NamSinh.ToString();
                                    rep03.NSinh.Value = _ngaysinh;
                                    var ngaytt = _dataContext.VienPhis.Where(p => p.MaBNhan == _mabn).Select(p => p.NgayTT).ToList();
                                    if (ngaytt.Count > 0)
                                    {
                                        int _fmat = Bien.FormatDate;
                                        if (Bien.MaBV == "30002")
                                            _fmat = 1;
                                        rep03.NgayTT.Value = DungChung.Ham.NgaySangChu(ngaytt.First().Value, _fmat);
                                        if (Bien.MaBV == "08204" || Bien.MaBV == "19048" || Bien.MaBV == "27023")
                                            rep03.NgayGD.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, 0);
                                        else if (Bien.MaBV == "27001" || Bien.MaBV == "30002")
                                            rep03.NgayGD.Value = " Ngày ... tháng... năm......";
                                        else
                                            rep03.NgayGD.Value = DungChung.Ham.NgaySangChu(ngaytt.First().Value, _fmat);
                                    }
                                    //bệnh nhân BHYT
                                    if (_HTTT == 1)//   if (_DTuong == "BHYT")
                                    {
                                        var bk02 = (from vp1 in tt
                                                    join vpct in _lvpct.Where(p => p.TrongBH == 1).Where(p => m == 0 ? (p.XHH == 0) : (p.XHH > 0)) on vp1.idVPhi equals vpct.idVPhi
                                                    join dv in dichvu on vpct.MaDV equals dv.MaDV
                                                    select new { dv.TenNhom, dv.STT, dv.SoTT, TenDV = (Bien.MaBV == "12001" || _CQCQ == "12001") ? ((dv.TenRG != null && dv.TenRG.Trim() != "") ? dv.TenRG : (dv.TenDV + " " + dv.HamLuong)) : (Bien.MaBV == "12122" ? (dv.TenDV + " " + dv.HamLuong) : dv.TenDV), vpct.DonVi, vpct.DonGia, vpct.SoLuong, vpct.ThanhTien, vpct.TienBH, vpct.TienBN, vpct.TrongBH, dv.TrongDM }).Where(p => p.SoLuong != 0).OrderBy(p => p.SoTT).ToList();
                                        double _tongtien = Math.Round(bk02.Where(p => p.TrongBH == 1).Sum(p => p.ThanhTien), 3);
                                        if (par03.First().Tuyen != null)
                                        {
                                            dungtuyen = int.Parse(par03.First().Tuyen.ToString());
                                        }
                                        if (dungtuyen == 1)
                                        {
                                            if (capcuu != 1)
                                                rep03.DungTuyen.Value = "X";
                                            if (m == 0)
                                                rep03.mucHuong.Value = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                            else
                                                rep03.mucHuong.Value = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "% (XHH)";
                                        }
                                        else if (dungtuyen == 2)
                                        {
                                            if (capcuu != 1)
                                                rep03.TraiTuyen.Value = "X";
                                            string kvuc = "";
                                            if (par.First().KhuVuc != null)
                                                kvuc = par.First().KhuVuc;
                                            string muchuong = "";
                                            switch (_hangbv)
                                            {
                                                case 1:
                                                    muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.4 + "%";
                                                    break;

                                                case 2:
                                                    if (Bien.MaBV == "01830")
                                                        muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.7 + "%";
                                                    else
                                                        muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.6 + "%";
                                                    break;

                                                case 3:
                                                    if (Bien.MaBV == "08204" || _tongtien < Bien.GHanTT100)
                                                    {
                                                        if (kvuc.ToLower().Contains("k"))
                                                            muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                        else
                                                            muchuong = "Mức hưởng: " + "70" + "%";
                                                    }
                                                    else
                                                    {
                                                        if (kvuc.ToLower().Contains("k"))
                                                            muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                        else
                                                            muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) * 0.7 + "%";
                                                    }
                                                    break;

                                                case 4:
                                                    muchuong = "Mức hưởng: " + DungChung.Ham._PtramTT(_dataContext, _muc) + "%";
                                                    break;
                                            }
                                            if (m == 0)
                                                rep03.mucHuong.Value = muchuong;
                                            else
                                                rep03.mucHuong.Value = muchuong + "( XHH)";
                                        }
                                        // hiện thị thông báo số tiền thu thêm hoặc trả lại

                                        double sotien = 0;
                                        sotien = bk02.Sum(p => p.TienBN);
                                        rep03.TienBN.Value = sotien;
                                        rep03.TienBH.Value = bk02.Sum(p => p.TienBH);
                                        rep03.Tongtien.Value = _tongtien;
                                        double tienCL = 0;
                                        tienCL = sotien - _tienTThu;
                                        if (Bien.MaBV != "01071" && Bien.MaBV != "01049" && Bien.MaBV != "12345" && Bien.MaBV != "24297" && Bien.MaBV != "56789")
                                        {
                                            if (tienCL > 0)
                                            {
                                                MessageBox.Show("Số tiền bệnh nhân phải nộp thêm: " + tienCL.ToString("##,###"));
                                            }
                                            else
                                            {
                                                if (tienCL < 0)
                                                {
                                                    tienCL *= -1;
                                                    MessageBox.Show(string.Format("Số tiền trả lại cho bệnh nhân: " + tienCL.ToString("##,###")));
                                                }
                                            }
                                        }
                                        rep03.DataSource = bk02.ToList();
                                        rep03.BindingData();
                                        rep03.CreateDocument();
                                        // rep03.DataMember = "Table";
                                        frm.prcIN.PrintingSystem = rep03.PrintingSystem;
                                        frm.ShowDialog();
                                    }// ket thuc BN BHYT
                                    else
                                    {
                                        var bk02 = (from vp1 in tt
                                                    join vpct in _lvpct.Where(p => p.TrongBH == 1 || p.TrongBH == 0).Where(p => m == 0 ? (p.XHH == 0) : (p.XHH > 0)) on vp1.idVPhi equals vpct.idVPhi
                                                    join dv in dichvu on vpct.MaDV equals dv.MaDV
                                                    where vpct.ThanhToan == 0
                                                    select new { dv.TenNhom, dv.STT, TenDV = (Bien.MaBV == "12001" || _CQCQ == "12001") ? ((dv.TenRG != null && dv.TenRG.Trim() != "") ? dv.TenRG : (dv.TenDV + " " + dv.HamLuong)) : (Bien.MaBV == "12122" ? (dv.TenDV + " " + dv.HamLuong) : dv.TenDV), vpct.DonVi, vpct.DonGia, vpct.SoLuong, vpct.ThanhTien, TienBN = vpct.TienBN, vpct.TienBH }).Where(p => p.SoLuong != 0).ToList();
                                        rep03.Tongtien.Value = bk02.Sum(p => p.ThanhTien);
                                        rep03.TienBN.Value = bk02.Sum(p => p.TienBN);
                                        var tamthu = _dataContext.TamUngs.Where(p => p.MaBNhan == _mabn).ToList();
                                        rep03.TamThu.Value = tamthu.Where(p => p.PhanLoai == 0).Sum(p => p.SoTien).Value - tamthu.Where(p => p.PhanLoai == 4).Sum(p => p.SoTien).Value;

                                        if (tamthu.Where(p => p.PhanLoai == 3).Sum(p => p.SoTien) != null)
                                            rep03.ThuTT.Value = tamthu.Where(p => p.PhanLoai == 3).Sum(p => p.SoTien).Value;
                                        else
                                            rep03.ThuTT.Value = 0;
                                        if (bk02.Count > 0)
                                        {
                                            rep03.DataSource = bk02.ToList();
                                            rep03.BindingData();
                                            rep03.CreateDocument();
                                            //rep03.DataMember = "Table";
                                            frm.prcIN.PrintingSystem = rep03.PrintingSystem;
                                            frm.ShowDialog();
                                        }
                                    }

                                    // kết thúc
                                }
                                break;
                                #endregion
                        }
                        #region in mẫu bảng kê cho BN BHYT có chi phí ngoài danh mục BHYT
                        // in mẫu bảng kê cho BN BHYT có chi phí ngoài danh mục BHYT
                        if (_lvpct.Where(p => p.ThanhToan == 2).ToList().Count > 0)
                        {
                            var bk00 = (from vp1 in tt
                                        join vpct in _lvpct.Where(p => p.TrongBH == 0 && p.ThanhToan == 2).Where(p => m == 0 ? (p.XHH == 0) : (p.XHH > 0)) on vp1.idVPhi equals vpct.idVPhi
                                        join dv in dichvu on vpct.MaDV equals dv.MaDV
                                        select new { vp1.MaKP, dv.TenNhom, dv.STT, vpct.idVPhict, TenDV = (Bien.MaBV == "12001" || _CQCQ == "12001") ? ((dv.TenRG != null && dv.TenRG.Trim() != "") ? dv.TenRG : (dv.TenDV + " " + dv.HamLuong)) : dv.TenDV, vpct.DonVi, vpct.DonGia, vpct.SoLuong, vpct.ThanhTien, vpct.TienBH, vpct.TienBN, vpct.TrongBH, dv.TrongDM }).Where(p => p.SoLuong != 0).OrderBy(p => p.idVPhict).ToList();
                            var bk01 = (from a in bk00
                                        select new { a.MaKP, TenNhom = (Bien.MaBV != "01071" && Bien.MaBV != "01049" && Bien.MaBV != "12345" && Bien.MaBV != "24297" && Bien.MaBV != "56789") ? a.TenNhom : (a.TenNhom.Replace("trong danh mục BHYT", "")), a.STT, a.idVPhict, a.TenDV, a.DonVi, a.DonGia, a.SoLuong, a.ThanhTien, a.TienBH, a.TienBN, a.TrongBH, a.TrongDM }).Where(p => p.SoLuong != 0).OrderBy(p => p.idVPhict).ToList();
                            if (bk01.Count > 0)
                            {
                                BaoCao.repBangKeCPNgoaiBH_A4 rep = new BaoCao.repBangKeCPNgoaiBH_A4();
                                rep.tenBN.Value = Bien.MaBV == "20001" ? _tenbn.ToUpper() : _tenbn;
                                rep.MaBNhan.Value = _mabn;
                                rep.TieuDe.Value = "BẢNG KÊ CHI PHÍ KHÁM BỆNH, CHỮA BỆNH";

                                //if (kp.Count > 0)
                                //{
                                //    rep.KhoaPhong.Value = kp.First().TenKP;
                                //}

                                if (par.Count > 0)
                                {
                                    rep.DiaChi.Value = par.First().DChi;
                                    int gioiTinh = int.Parse(par.First().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep.Nam.Value = "X";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep.Nu.Value = "X";
                                    }
                                    try
                                    {
                                        var mk = _dataContext.BenhNhans.Where(p => p.MaBNhan == _mabn).Max(p => p.SoKB);
                                        if (mk > 0)
                                        {
                                            rep.SoKB.Value = mk;
                                        }
                                    }
                                    catch (Exception)
                                    {
                                        rep.SoKB.Value = "";
                                    }
                                    if (_ngaykham.Count > 0 && _ngaykham.First().NgayKham != null)
                                        rep.NgayKham.Value = DungChung.Ham.NgaySangChu(_ngaykham.First().NgayKham.Value, 3);

                                    if (Rvien.Count > 0)
                                        rep.NgayKT.Value = Rvien.First().NgayRa;
                                    _DTuong = (par.First().DTuong).ToString();
                                    if (_DTuong.Contains("BHYT"))
                                    {
                                        rep.SoThe.Value = par.First().SThe;
                                        rep.coBH.Value = "X";
                                        rep.HanBHTu.Value = par.First().HanBHTu;
                                        rep.HanBHDen.Value = par.First().HanBHDen;
                                        string macs = "";
                                        if (par.First().MaCS != null)
                                        {
                                            macs = par.First().MaCS;
                                            rep.MaCS.Value = macs.Substring(0, 2) + "-" + macs.Substring(2, 3);
                                        }
                                        var csdkbd = _dataContext.BenhViens.Where(p => p.MaBV == macs).ToList();
                                        if (csdkbd.Count > 0)
                                        {
                                            rep.CSDKKCB.Value = csdkbd.First().TenBV;
                                        }

                                        int dungtuyen = 0;
                                        if (par.First().Tuyen != null)
                                        {
                                            dungtuyen = int.Parse(par.First().Tuyen.ToString());
                                        }
                                        if (dungtuyen == 1)
                                        {
                                            rep.DungTuyen.Value = "X";
                                            if (m == 0)
                                                rep.mucHuong.Value = "NGOÀI DANH MỤC BHYT";
                                            else
                                                rep.mucHuong.Value = "NGOÀI DANH MỤC BHYT (XHH)";
                                        }
                                        else if (dungtuyen == 2)
                                        {
                                            rep.TraiTuyen.Value = "X";
                                            if (m == 0)
                                                rep.mucHuong.Value = "NGOÀI DANH MỤC BHYT";
                                            else
                                                rep.mucHuong.Value = "NGOÀI DANH MỤC BHYT (XHH)";
                                        }
                                        int capcuu = int.Parse(par.First().CapCuu.ToString());
                                        if (capcuu == 1)
                                        {
                                            rep.CapCuu.Value = "X";
                                            rep.TraiTuyen.Value = "";
                                            rep.DungTuyen.Value = "";
                                        }
                                    }
                                    if (tt.Count > 0)
                                    {
                                        int _fmat = Bien.FormatDate;
                                        if (Bien.MaBV == "30002")
                                            _fmat = 1;
                                        rep.NgayTT.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, _fmat);
                                    }

                                    if (Rvien.Count > 0)
                                    {
                                        int _makp = 0;
                                        if (Rvien.Count > 0)
                                            _makp = Rvien.First().MaKP;
                                        var kphong = _dataContext.KPhongs.Where(p => p.MaKP == (_makp)).ToList();
                                        if (kphong.Count > 0)
                                            rep.KhoaPhong.Value = kphong.First().TenKP;
                                        rep.ChanDoan.Value = DungChung.Ham.GetICDstr(Rvien.First().ChanDoan);
                                        rep.MaICD.Value = DungChung.Ham.GetICDstr(Rvien.First().MaICD);
                                        if (Rvien.First().SoNgaydt != null)
                                            rep.TongNgay.Value = Rvien.First().SoNgaydt.ToString() + " ngày";
                                    }
                                    string _ngaysinh = "";
                                    if (par.First().NgaySinh != null && par.First().NgaySinh.ToString() != "")
                                        _ngaysinh = par.First().NgaySinh.ToString() + "/";
                                    if (par.First().ThangSinh != null && par.First().ThangSinh.ToString() != "")
                                        _ngaysinh = _ngaysinh + par.First().ThangSinh.ToString() + "/";
                                    if (par.First().NamSinh != null && par.First().NamSinh.ToString() != "")
                                        _ngaysinh = _ngaysinh + par.First().NamSinh.ToString();
                                    rep.NSinh.Value = _ngaysinh;

                                    rep.Tongtien.Value = bk01.Where(p => p.TrongBH == 0).Sum(p => p.ThanhTien);
                                    rep.DataSource = bk01.ToList();
                                    rep.BindingData();
                                    rep.CreateDocument();
                                    // rep.DataMember = "Table";
                                    frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                    frm.ShowDialog();
                                }
                            }
                        }
                        if (_lvpct.Where(p => p.ThanhToan == 1).ToList().Count > 0)
                        {
                            var bk00 = (from vp1 in tt
                                        join vpct in _lvpct.Where(p => p.ThanhToan == 1).Where(p => m == 0 ? (p.XHH == 0) : (p.XHH > 0)) on vp1.idVPhi equals vpct.idVPhi
                                        join dv in dichvu.Where(p => p.MaDV != (Bien.MaBV == "30010" ? 12867 : 0)) on vpct.MaDV equals dv.MaDV
                                        select new { vp1.MaKP, dv.TenNhom, dv.STT, vpct.idVPhict, TenDV = (Bien.MaBV == "12001" || _CQCQ == "12001") ? ((dv.TenRG != null && dv.TenRG.Trim() != "") ? dv.TenRG : (dv.TenDV + " " + dv.HamLuong)) : (Bien.MaBV == "12122" ? (dv.TenDV + " " + dv.HamLuong) : dv.TenDV), vpct.DonVi, vpct.DonGia, vpct.SoLuong, vpct.ThanhTien, vpct.TienBH, vpct.TienBN, vpct.TrongBH, dv.TrongDM }).Where(p => p.SoLuong != 0).OrderBy(p => p.idVPhict).ToList();
                            var bk01 = (from a in bk00
                                        select new
                                        {
                                            a.MaKP,
                                            TenNhom = (Bien.MaBV != "01071" && Bien.MaBV != "01049" && Bien.MaBV != "12345" && Bien.MaBV != "24297" && Bien.MaBV != "56789") ? a.TenNhom : (a.TenNhom.Replace("trong danh mục BHYT", "")),
                                            a.STT,
                                            a.idVPhict,
                                            a.TenDV,
                                            a.DonVi,
                                            a.DonGia,
                                            a.SoLuong,
                                            a.ThanhTien,
                                            a.TienBH,
                                            a.TienBN,
                                            a.TrongBH,
                                            a.TrongDM
                                        }).Where(p => p.SoLuong != 0).OrderBy(p => p.idVPhict).ToList();
                            if (bk01.Count > 0)
                            {
                                BaoCao.repBangKeCPNgoaiBH_A4 rep = new BaoCao.repBangKeCPNgoaiBH_A4();
                                rep.tenBN.Value = Bien.MaBV == "20001" ? _tenbn.ToUpper() : _tenbn;
                                rep.MaBNhan.Value = _mabn;
                                rep.TieuDe.Value = "BẢNG KÊ CHI PHÍ KHÁM BỆNH, CHỮA BỆNH";

                                //if (kp.Count > 0)
                                //{
                                //    rep.KhoaPhong.Value = kp.First().TenKP;
                                //}

                                if (par.Count > 0)
                                {
                                    rep.DiaChi.Value = par.First().DChi;
                                    int gioiTinh = int.Parse(par.First().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep.Nam.Value = "X";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep.Nu.Value = "X";
                                    }
                                    try
                                    {
                                        var mk = _dataContext.BenhNhans.Where(p => p.MaBNhan == _mabn).Max(p => p.SoKB);
                                        if (mk > 0)
                                        {
                                            rep.SoKB.Value = mk;
                                        }
                                    }
                                    catch (Exception)
                                    {
                                        rep.SoKB.Value = "";
                                    }
                                    if (_ngaykham.Count > 0 && _ngaykham.First().NgayKham != null)
                                        rep.NgayKham.Value = DungChung.Ham.NgaySangChu(_ngaykham.First().NgayKham.Value, 3);

                                    if (Rvien.Count > 0)
                                        rep.NgayKT.Value = Rvien.First().NgayRa;
                                    _DTuong = (par.First().DTuong).ToString();
                                    if (_DTuong.Contains("BHYT"))
                                    {
                                        rep.SoThe.Value = par.First().SThe;
                                        rep.coBH.Value = "X";
                                        rep.HanBHTu.Value = par.First().HanBHTu;
                                        rep.HanBHDen.Value = par.First().HanBHDen;
                                        string macs = "";
                                        if (par.First().MaCS != null)
                                        {
                                            macs = par.First().MaCS;
                                            rep.MaCS.Value = macs.Substring(0, 2) + "-" + macs.Substring(2, 3);
                                        }
                                        var csdkbd = _dataContext.BenhViens.Where(p => p.MaBV == macs).ToList();
                                        if (csdkbd.Count > 0)
                                        {
                                            rep.CSDKKCB.Value = csdkbd.First().TenBV;
                                        }

                                        int dungtuyen = 0;
                                        if (par.First().Tuyen != null)
                                        {
                                            dungtuyen = int.Parse(par.First().Tuyen.ToString());
                                        }

                                        // rep.mucHuong.Value = "CÁC DỊCH VỤ ĐÃ THU TRỰC TIẾP";
                                        int capcuu = int.Parse(par.First().CapCuu.ToString());
                                        if (capcuu == 1)
                                        {
                                            rep.CapCuu.Value = "X";
                                            rep.TraiTuyen.Value = "";
                                            rep.DungTuyen.Value = "";
                                        }
                                    }
                                    rep.mucHuong.Value = "CÁC DỊCH VỤ ĐÃ THU TRỰC TIẾP";
                                    if (tt.Count > 0)
                                    {
                                        int _fmat = Bien.FormatDate;
                                        if (Bien.MaBV == "30002")
                                            _fmat = 1;
                                        rep.NgayTT.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, _fmat);
                                    }

                                    if (Rvien.Count > 0)
                                    {
                                        int _makp = 0;
                                        if (Rvien.Count > 0)
                                            _makp = Rvien.First().MaKP;
                                        var kphong = _dataContext.KPhongs.Where(p => p.MaKP == (_makp)).ToList();
                                        if (kphong.Count > 0)
                                            rep.KhoaPhong.Value = kphong.First().TenKP;
                                        rep.ChanDoan.Value = DungChung.Ham.GetICDstr(Rvien.First().ChanDoan);
                                        rep.MaICD.Value = DungChung.Ham.GetICDstr(Rvien.First().MaICD);
                                        if (Rvien.First().SoNgaydt != null)
                                            rep.TongNgay.Value = Rvien.First().SoNgaydt.ToString() + " ngày";
                                    }
                                    string _ngaysinh = "";
                                    if (par.First().NgaySinh != null && par.First().NgaySinh.ToString() != "")
                                        _ngaysinh = par.First().NgaySinh.ToString() + "/";
                                    if (par.First().ThangSinh != null && par.First().ThangSinh.ToString() != "")
                                        _ngaysinh = _ngaysinh + par.First().ThangSinh.ToString() + "/";
                                    if (par.First().NamSinh != null && par.First().NamSinh.ToString() != "")
                                        _ngaysinh = _ngaysinh + par.First().NamSinh.ToString();
                                    rep.NSinh.Value = _ngaysinh;

                                    rep.Tongtien.Value = bk01.Sum(p => p.ThanhTien);
                                    rep.DataSource = bk01.ToList();
                                    rep.BindingData();
                                    rep.CreateDocument();
                                    // rep.DataMember = "Table";
                                    frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                    frm.ShowDialog();
                                }
                            }
                        }
                        if (_HTTT == 1)//  if (_DTuong == "BHYT")
                        {
                            #region _DTuong == "BHYT"
                            //var kp = (from bns in _dataContext.BNKBs.Where(p=>p.MaBNhan== (txtMaBNhan.Text)) join kps in _dataContext.KPhongs on bns.MaKP equals kps.MaKP select new { kps.TenKP,bns.IDKB }).OrderByDescending(p=>p.IDKB).ToList();
                            var bk00 = (from vp1 in tt
                                        join vpct in _lvpct.Where(p => (p.TrongBH == 0 || p.TrongBH == 3) && p.ThanhToan == 0).Where(p => m == 0 ? (p.XHH == 0) : (p.XHH > 0)) on vp1.idVPhi equals vpct.idVPhi
                                        join dv in dichvu on vpct.MaDV equals dv.MaDV
                                        select new { vp1.MaKP, dv.TenNhom, dv.STT, vpct.idVPhict, TenDV = (Bien.MaBV == "12001" || _CQCQ == "12001") ? ((dv.TenRG != null && dv.TenRG.Trim() != "") ? dv.TenRG : (dv.TenDV + " " + dv.HamLuong)) : dv.TenDV, vpct.DonVi, vpct.DonGia, vpct.SoLuong, vpct.ThanhTien, vpct.TienBH, vpct.TienBN, vpct.TrongBH, dv.TrongDM }).Where(p => p.SoLuong != 0).OrderBy(p => p.idVPhict).ToList();
                            var bk01 = (from a in bk00
                                        select new
                                        {
                                            a.MaKP,
                                            TenNhom = (Bien.MaBV != "01071" && Bien.MaBV != "01049" && Bien.MaBV != "12345" && Bien.MaBV != "24297" && Bien.MaBV != "56789") ? a.TenNhom : (a.TenNhom.Replace("trong danh mục BHYT", "")),
                                            a.STT,
                                            a.idVPhict,
                                            a.TenDV,
                                            a.DonVi,
                                            a.DonGia,
                                            a.SoLuong,
                                            a.ThanhTien,
                                            a.TienBH,
                                            a.TienBN,
                                            a.TrongBH,
                                            a.TrongDM
                                        }).Where(p => p.SoLuong != 0).OrderBy(p => p.idVPhict).ToList();

                            if (bk01.Count > 0)
                            {
                                BaoCao.repBangKeCPNgoaiBH_A4 rep = new BaoCao.repBangKeCPNgoaiBH_A4();
                                rep.tenBN.Value = Bien.MaBV == "20001" ? _tenbn.ToUpper() : _tenbn;
                                rep.MaBNhan.Value = _mabn;
                                rep.TieuDe.Value = "BẢNG KÊ CHI PHÍ KHÁM BỆNH, CHỮA BỆNH";

                                //if (kp.Count > 0)
                                //{
                                //    rep.KhoaPhong.Value = kp.First().TenKP;
                                //}

                                if (par.Count > 0)
                                {
                                    rep.DiaChi.Value = par.First().DChi;
                                    int gioiTinh = int.Parse(par.First().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep.Nam.Value = "X";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep.Nu.Value = "X";
                                    }
                                    try
                                    {
                                        var mk = _dataContext.BenhNhans.Where(p => p.MaBNhan == _mabn).Max(p => p.SoKB);
                                        if (mk > 0)
                                        {
                                            rep.SoKB.Value = mk;
                                        }
                                    }
                                    catch (Exception)
                                    {
                                        rep.SoKB.Value = "";
                                    }
                                    if (_ngaykham.Count > 0 && _ngaykham.First().NgayKham != null)
                                        rep.NgayKham.Value = DungChung.Ham.NgaySangChu(_ngaykham.First().NgayKham.Value, 3);

                                    if (Rvien.Count > 0)
                                        rep.NgayKT.Value = Rvien.First().NgayRa;
                                    _DTuong = (par.First().DTuong).ToString();
                                    if (_DTuong.Contains("BHYT"))
                                    {
                                        rep.SoThe.Value = par.First().SThe;
                                        rep.coBH.Value = "X";
                                        rep.HanBHTu.Value = par.First().HanBHTu;
                                        rep.HanBHDen.Value = par.First().HanBHDen;
                                        string macs = "";
                                        if (par.First().MaCS != null)
                                        {
                                            macs = par.First().MaCS;
                                            rep.MaCS.Value = macs.Substring(0, 2) + "-" + macs.Substring(2, 3);
                                        }
                                        var csdkbd = _dataContext.BenhViens.Where(p => p.MaBV == macs).ToList();
                                        if (csdkbd.Count > 0)
                                        {
                                            rep.CSDKKCB.Value = csdkbd.First().TenBV;
                                        }

                                        int dungtuyen = 0;
                                        if (par.First().Tuyen != null)
                                        {
                                            dungtuyen = int.Parse(par.First().Tuyen.ToString());
                                        }
                                        if (dungtuyen == 1)
                                        {
                                            rep.DungTuyen.Value = "X";
                                            if (m == 0)
                                                rep.mucHuong.Value = "NGOÀI DANH MỤC BHYT";
                                            else
                                                rep.mucHuong.Value = "NGOÀI DANH MỤC BHYT (XHH)";
                                        }
                                        else if (dungtuyen == 2)
                                        {
                                            rep.TraiTuyen.Value = "X";
                                            if (m == 0)
                                                rep.mucHuong.Value = "NGOÀI DANH MỤC BHYT";
                                            else
                                                rep.mucHuong.Value = "NGOÀI DANH MỤC BHYT (XHH)";
                                        }
                                        int capcuu = int.Parse(par.First().CapCuu.ToString());
                                        if (capcuu == 1)
                                        {
                                            rep.CapCuu.Value = "X";
                                            rep.TraiTuyen.Value = "";
                                            rep.DungTuyen.Value = "";
                                        }
                                    }
                                    if (tt.Count > 0)
                                    {
                                        int _fmat = Bien.FormatDate;
                                        if (Bien.MaBV == "30002")
                                            _fmat = 1;
                                        rep.NgayTT.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, _fmat);
                                    }

                                    if (Rvien.Count > 0)
                                    {
                                        int _makp = 0;
                                        if (Rvien.Count > 0)
                                            _makp = Rvien.First().MaKP;
                                        var kphong = _dataContext.KPhongs.Where(p => p.MaKP == (_makp)).ToList();
                                        if (kphong.Count > 0)
                                            rep.KhoaPhong.Value = kphong.First().TenKP;
                                        rep.ChanDoan.Value = DungChung.Ham.GetICDstr(Rvien.First().ChanDoan);
                                        rep.MaICD.Value = DungChung.Ham.GetICDstr(Rvien.First().MaICD);
                                        if (Rvien.First().SoNgaydt != null)
                                            rep.TongNgay.Value = Rvien.First().SoNgaydt.ToString() + " ngày";
                                    }
                                    string _ngaysinh = "";
                                    if (par.First().NgaySinh != null && par.First().NgaySinh.ToString() != "")
                                        _ngaysinh = par.First().NgaySinh.ToString() + "/";
                                    if (par.First().ThangSinh != null && par.First().ThangSinh.ToString() != "")
                                        _ngaysinh = _ngaysinh + par.First().ThangSinh.ToString() + "/";
                                    if (par.First().NamSinh != null && par.First().NamSinh.ToString() != "")
                                        _ngaysinh = _ngaysinh + par.First().NamSinh.ToString();
                                    rep.NSinh.Value = _ngaysinh;

                                    rep.Tongtien.Value = bk01.Where(p => p.TrongBH == 0).Sum(p => p.ThanhTien);
                                    rep.DataSource = bk01.ToList();
                                    rep.BindingData();
                                    rep.CreateDocument();
                                    // rep.DataMember = "Table";
                                    frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                    frm.ShowDialog();
                                }
                            }
                            #region Bỏ in bảng kê phụ thu, in chung với bk ngoài danh mục
                            //var bk01_03 = (from vp1 in tt
                            //               join vpct in _lvpct.Where(p => p.TrongBH == 3) on vp1.idVPhi equals vpct.idVPhi
                            //               join dv in dichvu on vpct.MaDV equals dv.MaDV
                            //               select new { vp1.MaKP, dv.TenNhom, dv.STT, vpct.idVPhict, TenDV = (Bien.MaBV == "12001" || _CQCQ == "12001") ? ((dv.TenRG != null && dv.TenRG.Trim() != "") ? dv.TenRG : (dv.TenDV + " " + dv.HamLuong)) : dv.TenDV, vpct.DonVi, vpct.DonGia, vpct.SoLuong, vpct.ThanhTien, vpct.TienBH, vpct.TienBN, vpct.TrongBH, dv.TrongDM }).Where(p => p.SoLuong != 0).OrderBy(p => p.idVPhict).ToList();
                            //if(bk01_03.Count>0)
                            //{
                            //    BaoCao.repBangKeCPNgoaiBH_A4 rep = new BaoCao.repBangKeCPNgoaiBH_A4();
                            //    rep.tenBN.Value = Bien.MaBV == "20001" ? _tenbn.ToUpper() : _tenbn;
                            //    rep.MaBNhan.Value = _mabn;
                            //    rep.TieuDe.Value = "BẢNG KÊ CHI PHÍ KHÁM BỆNH, CHỮA BỆNH";

                            //    //if (kp.Count > 0)
                            //    //{
                            //    //    rep.KhoaPhong.Value = kp.First().TenKP;
                            //    //}

                            //    if (par.Count > 0)
                            //    {
                            //        rep.DiaChi.Value = par.First().DChi;
                            //        int gioiTinh = int.Parse(par.First().GTinh.ToString());
                            //        if (gioiTinh == 1)
                            //        {
                            //            rep.Nam.Value = "X";
                            //        }
                            //        else if (gioiTinh == 0)
                            //        {
                            //            rep.Nu.Value = "X";
                            //        }
                            //        try
                            //        {
                            //            var mk = _dataContext.BenhNhans.Where(p => p.MaBNhan == _mabn).Max(p => p.SoKB);
                            //            if (mk > 0)
                            //            {
                            //                rep.SoKB.Value = mk;

                            //            }
                            //        }
                            //        catch (Exception)
                            //        {
                            //            rep.SoKB.Value = "";
                            //        }
                            //        if (_ngaykham.Count > 0 && _ngaykham.First().NgayKham != null)
                            //            rep.NgayKham.Value = DungChung.Ham.NgaySangChu(_ngaykham.First().NgayKham.Value, 3);

                            //        if (Rvien.Count > 0)
                            //            rep.NgayKT.Value = Rvien.First().NgayRa;
                            //        _DTuong = (par.First().DTuong).ToString();
                            //        if (_DTuong.Contains("BHYT"))
                            //        {
                            //            rep.SoThe.Value = par.First().SThe;
                            //            rep.coBH.Value = "X";
                            //            rep.HanBHTu.Value = par.First().HanBHTu;
                            //            rep.HanBHDen.Value = par.First().HanBHDen;
                            //            string macs = "";
                            //            if (par.First().MaCS != null)
                            //            {
                            //                macs = par.First().MaCS;
                            //                rep.MaCS.Value = macs.Substring(0, 2) + "-" + macs.Substring(2, 3);
                            //            }
                            //            var csdkbd = _dataContext.BenhViens.Where(p => p.MaBV == macs).ToList();
                            //            if (csdkbd.Count > 0)
                            //            {
                            //                rep.CSDKKCB.Value = csdkbd.First().TenBV;
                            //            }

                            //            int dungtuyen = 0;
                            //            if (par.First().Tuyen != null)
                            //            {
                            //                dungtuyen = int.Parse(par.First().Tuyen.ToString());

                            //            }
                            //            rep.mucHuong.Value = "Chi phí phụ thu";
                            //            //if (dungtuyen == 1)
                            //            //{
                            //            //    rep.DungTuyen.Value = "X";
                            //            //    if (m == 0)
                            //            //        rep.mucHuong.Value = "NGOÀI DANH MỤC BHYT";
                            //            //    else
                            //            //        rep.mucHuong.Value = "NGOÀI DANH MỤC BHYT (XHH)";

                            //            //}
                            //            //else if (dungtuyen == 2)
                            //            //{
                            //            //    rep.TraiTuyen.Value = "X";
                            //            //    if (m == 0)
                            //            //        rep.mucHuong.Value = "NGOÀI DANH MỤC BHYT";
                            //            //    else
                            //            //        rep.mucHuong.Value = "NGOÀI DANH MỤC BHYT (XHH)";
                            //            //}
                            //            int capcuu = int.Parse(par.First().CapCuu.ToString());
                            //            if (capcuu == 1)
                            //            {
                            //                rep.CapCuu.Value = "X";
                            //                rep.TraiTuyen.Value = "";
                            //                rep.DungTuyen.Value = "";
                            //            }
                            //        }
                            //        if (tt.Count > 0)
                            //        {
                            //            int _fmat = Bien.FormatDate;
                            //            if (Bien.MaBV == "30002")
                            //                _fmat = 1;
                            //            rep.NgayTT.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, _fmat);
                            //        }

                            //        if (Rvien.Count > 0)
                            //        {
                            //            int _makp = 0;
                            //            if (Rvien.Count > 0 )
                            //                _makp = Rvien.First().MaKP;
                            //            var kphong = _dataContext.KPhongs.Where(p => p.MaKP == (_makp)).ToList();
                            //            if (kphong.Count > 0)
                            //                rep.KhoaPhong.Value = kphong.First().TenKP;
                            //            rep.ChanDoan.Value = DungChung.Ham.GetICDstr(Rvien.First().ChanDoan);
                            //            rep.MaICD.Value = DungChung.Ham.GetICDstr(Rvien.First().MaICD);
                            //            if (Rvien.First().SoNgaydt != null)
                            //                rep.TongNgay.Value = Rvien.First().SoNgaydt.ToString() + " ngày";
                            //        }
                            //        string _ngaysinh = "";
                            //        if (par.First().NgaySinh != null && par.First().NgaySinh.ToString() != "")
                            //            _ngaysinh = par.First().NgaySinh.ToString() + "/";
                            //        if (par.First().ThangSinh != null && par.First().ThangSinh.ToString() != "")
                            //            _ngaysinh = _ngaysinh + par.First().ThangSinh.ToString() + "/";
                            //        if (par.First().NamSinh != null && par.First().NamSinh.ToString() != "")
                            //            _ngaysinh = _ngaysinh + par.First().NamSinh.ToString();
                            //        rep.NSinh.Value = _ngaysinh;

                            //        rep.Tongtien.Value = bk01_03.Sum(p => p.ThanhTien);
                            //        rep.DataSource = bk01_03.ToList();
                            //        rep.BindingData();
                            //        rep.CreateDocument();
                            //        // rep.DataMember = "Table";
                            //        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                            //        frm.ShowDialog();

                            //    }
                            //}
                            #endregion
                            var bk00_02 = (from vp1 in tt
                                           join vpct in _lvpct.Where(p => p.TrongBH == 2).Where(p => m == 0 ? (p.XHH == 0) : (p.XHH > 0)) on vp1.idVPhi equals vpct.idVPhi
                                           join dv in dichvu on vpct.MaDV equals dv.MaDV
                                           select new { vp1.MaKP, dv.TenNhom, dv.STT, vpct.idVPhict, TenDV = (Bien.MaBV == "12001" || _CQCQ == "12001") ? ((dv.TenRG != null && dv.TenRG.Trim() != "") ? dv.TenRG : (dv.TenDV + " " + dv.HamLuong)) : dv.TenDV, vpct.DonVi, vpct.DonGia, vpct.SoLuong, vpct.ThanhTien, vpct.TienBH, vpct.TienBN, vpct.TrongBH, dv.TrongDM }).Where(p => p.SoLuong != 0).OrderBy(p => p.idVPhict).ToList();
                            var bk01_02 = (from a in bk00_02
                                           select new
                                           {
                                               a.MaKP,
                                               TenNhom = (Bien.MaBV != "01071" && Bien.MaBV != "01049" && Bien.MaBV != "12345" && Bien.MaBV != "24297" && Bien.MaBV != "56789") ? a.TenNhom : (a.TenNhom.Replace("trong danh mục BHYT", "")),
                                               a.STT,
                                               a.idVPhict,
                                               a.TenDV,
                                               a.DonVi,
                                               a.DonGia,
                                               a.SoLuong,
                                               a.ThanhTien,
                                               a.TienBH,
                                               a.TienBN,
                                               a.TrongBH,
                                               a.TrongDM
                                           }).Where(p => p.SoLuong != 0).OrderBy(p => p.idVPhict).ToList();

                            if (bk01_02.Count > 0)
                            {
                                BaoCao.repBangKeCPNgoaiBH_A4 rep = new BaoCao.repBangKeCPNgoaiBH_A4();
                                rep.tenBN.Value = Bien.MaBV == "20001" ? _tenbn.ToUpper() : _tenbn;
                                rep.MaBNhan.Value = _mabn;
                                rep.TieuDe.Value = "BẢNG KÊ CHI PHÍ KHÁM BỆNH, CHỮA BỆNH";

                                //if (kp.Count > 0)
                                //{
                                //    rep.KhoaPhong.Value = kp.First().TenKP;
                                //}

                                if (par.Count > 0)
                                {
                                    rep.DiaChi.Value = par.First().DChi;
                                    int gioiTinh = int.Parse(par.First().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep.Nam.Value = "X";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep.Nu.Value = "X";
                                    }
                                    if (par.First().SoKB != null)
                                        rep.SoKB.Value = par.First().SoKB;
                                    if (_ngaykham.Count > 0 && _ngaykham.First().NgayKham != null)
                                        rep.NgayKham.Value = DungChung.Ham.NgaySangChu(_ngaykham.First().NgayKham.Value, 3);

                                    if (Rvien.Count > 0)
                                        rep.NgayKT.Value = Rvien.First().NgayRa;
                                    _DTuong = (par.First().DTuong).ToString();
                                    if (_DTuong.Contains("BHYT"))
                                    {
                                        rep.SoThe.Value = par.First().SThe;
                                        rep.coBH.Value = "X";
                                        //  string muc = txtSoThe.Text.Substring(2, 1);

                                        rep.HanBHTu.Value = par.First().HanBHTu;
                                        rep.HanBHDen.Value = par.First().HanBHDen;
                                        string macs = "";
                                        if (par.First().MaCS != null)
                                        {
                                            macs = par.First().MaCS;
                                            rep.MaCS.Value = macs.Substring(0, 2) + "-" + macs.Substring(2, 3);
                                        }
                                        var csdkbd = _dataContext.BenhViens.Where(p => p.MaBV == macs).ToList();
                                        if (csdkbd.Count > 0)
                                        {
                                            rep.CSDKKCB.Value = csdkbd.First().TenBV;
                                        }

                                        int dungtuyen = 0;
                                        if (par.First().Tuyen != null)
                                        {
                                            dungtuyen = int.Parse(par.First().Tuyen.ToString());
                                        }
                                        if (dungtuyen == 1)
                                        {
                                            rep.DungTuyen.Value = "X";
                                            if (m == 0)
                                                if (Bien.MaBV == "30009" && par.First().MaKP == 145)
                                                {
                                                    rep.mucHuong.Value = "NGUỒN KHÁC".ToUpper();
                                                }
                                                else
                                                    rep.mucHuong.Value = "Không phải thanh toán".ToUpper();
                                            else
                                                rep.mucHuong.Value = "Không phải thanh toán (xhh)".ToUpper();
                                        }
                                        else if (dungtuyen == 2)
                                        {
                                            rep.TraiTuyen.Value = "X";
                                            if (m == 0)
                                                rep.mucHuong.Value = "Không phải thanh toán".ToUpper();
                                            else
                                                rep.mucHuong.Value = "Không phải thanh toán (xhh)".ToUpper();
                                        }
                                        int capcuu = int.Parse(par.First().CapCuu.ToString());
                                        if (capcuu == 1)
                                        {
                                            rep.CapCuu.Value = "X";
                                            rep.TraiTuyen.Value = "";
                                            rep.DungTuyen.Value = "";
                                        }
                                    }
                                    if (tt.Count > 0)
                                    {
                                        int _fmat = Bien.FormatDate;
                                        if (Bien.MaBV == "30002")
                                            _fmat = 1;
                                        rep.NgayTT.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, _fmat);
                                    }

                                    if (Rvien.Count > 0)
                                    {
                                        int _makp = 0;
                                        if (Rvien.Count > 0)
                                            _makp = Rvien.First().MaKP;
                                        var kphong = _dataContext.KPhongs.Where(p => p.MaKP == (_makp)).ToList();
                                        if (kphong.Count > 0)
                                            rep.KhoaPhong.Value = kphong.First().TenKP;
                                        rep.ChanDoan.Value = DungChung.Ham.GetICDstr(Rvien.First().ChanDoan);
                                        rep.MaICD.Value = DungChung.Ham.GetICDstr(Rvien.First().MaICD);
                                        if (Rvien.First().SoNgaydt != null)
                                            rep.TongNgay.Value = Rvien.First().SoNgaydt.ToString() + " ngày";
                                    }
                                    string _ngaysinh = "";
                                    if (par.First().NgaySinh != null && par.First().NgaySinh.ToString() != "")
                                        _ngaysinh = par.First().NgaySinh.ToString() + "/";
                                    if (par.First().ThangSinh != null && par.First().ThangSinh.ToString() != "")
                                        _ngaysinh = _ngaysinh + par.First().ThangSinh.ToString() + "/";
                                    if (par.First().NamSinh != null && par.First().NamSinh.ToString() != "")
                                        _ngaysinh = _ngaysinh + par.First().NamSinh.ToString();
                                    rep.NSinh.Value = _ngaysinh;

                                    rep.Tongtien.Value = bk01_02.Sum(p => p.ThanhTien);
                                    if (bk01_02.Count > 0)
                                    {
                                        if (Bien.MaBV == "30009" && par.First().MaKP == 145)
                                        {
                                            rep.mucHuong.Value = "Nguồn khác".ToUpper();
                                        }
                                        rep.DataSource = bk01_02.ToList();
                                        rep.BindingData();
                                        rep.CreateDocument();
                                        // rep.DataMember = "Table";
                                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                        frm.ShowDialog();
                                    }
                                }
                            }

                            #endregion
                        }
                        else
                        {
                            #region _HTTT != 1
                            var bk00_02 = (from vp1 in tt
                                           join vpct in _lvpct.Where(p => p.TrongBH == 2).Where(p => m == 0 ? (p.XHH == 0) : (p.XHH > 0)) on vp1.idVPhi equals vpct.idVPhi
                                           join dv in dichvu on vpct.MaDV equals dv.MaDV
                                           select new { vp1.MaKP, dv.TenNhom, dv.STT, vpct.idVPhict, TenDV = (Bien.MaBV == "12001" || _CQCQ == "12001") ? ((dv.TenRG != null && dv.TenRG.Trim() != "") ? dv.TenRG : (dv.TenDV + " " + dv.HamLuong)) : (Bien.MaBV == "12122" ? (dv.TenDV + " " + dv.HamLuong) : dv.TenDV), vpct.DonVi, vpct.DonGia, vpct.SoLuong, vpct.ThanhTien, vpct.TienBH, vpct.TienBN, vpct.TrongBH, dv.TrongDM }).Where(p => p.SoLuong != 0).OrderBy(p => p.idVPhict).ToList();
                            var bk01_02 = (from a in bk00_02
                                           select new
                                           {
                                               a.MaKP,
                                               TenNhom = (Bien.MaBV != "01071" && Bien.MaBV != "01049" && Bien.MaBV != "12345" && Bien.MaBV != "24297" && Bien.MaBV != "56789") ? a.TenNhom : (a.TenNhom.Replace("trong danh mục BHYT", "")),
                                               a.STT,
                                               a.idVPhict,
                                               a.TenDV,
                                               a.DonVi,
                                               a.DonGia,
                                               a.SoLuong,
                                               a.ThanhTien,
                                               a.TienBH,
                                               a.TienBN,
                                               a.TrongBH,
                                               a.TrongDM
                                           }).Where(p => p.SoLuong != 0).OrderBy(p => p.idVPhict).ToList();
                            if (bk01_02.Count > 0)
                            {
                                BaoCao.repBangKeCPNgoaiBH_A4 rep = new BaoCao.repBangKeCPNgoaiBH_A4();
                                rep.tenBN.Value = Bien.MaBV == "20001" ? _tenbn.ToUpper() : _tenbn;
                                rep.MaBNhan.Value = _mabn;
                                rep.TieuDe.Value = "BẢNG KÊ CHI PHÍ KHÁM BỆNH, CHỮA BỆNH";

                                if (m == 0)
                                    rep.mucHuong.Value = "Không phải thanh toán".ToUpper();
                                else
                                    rep.mucHuong.Value = "Không phải thanh toán (xhh)".ToUpper();
                                //if (kp.Count > 0)
                                //{
                                //    rep.KhoaPhong.Value = kp.First().TenKP;
                                //}

                                if (par.Count > 0)
                                {
                                    rep.DiaChi.Value = par.First().DChi;
                                    int gioiTinh = int.Parse(par.First().GTinh.ToString());
                                    if (gioiTinh == 1)
                                    {
                                        rep.Nam.Value = "X";
                                    }
                                    else if (gioiTinh == 0)
                                    {
                                        rep.Nu.Value = "X";
                                    }
                                    if (par.First().SoKB != null)
                                        rep.SoKB.Value = par.First().SoKB;
                                    if (_ngaykham.Count > 0 && _ngaykham.First().NgayKham != null)
                                        rep.NgayKham.Value = DungChung.Ham.NgaySangChu(_ngaykham.First().NgayKham.Value, Bien.FormatDate);

                                    if (Rvien.Count > 0)
                                        rep.NgayKT.Value = Rvien.First().NgayRa;
                                    _DTuong = (par.First().DTuong).ToString();

                                    if (tt.Count > 0)
                                    {
                                        int _fmat = Bien.FormatDate;
                                        if (Bien.MaBV == "30002")
                                            _fmat = 1;
                                        rep.NgayTT.Value = DungChung.Ham.NgaySangChu(tt.First().NgayTT.Value, _fmat);
                                    }

                                    if (Rvien.Count > 0)
                                    {
                                        rep.ChanDoan.Value = DungChung.Ham.GetICDstr(Rvien.First().ChanDoan);
                                        rep.MaICD.Value = DungChung.Ham.GetICDstr(Rvien.First().MaICD);
                                        if (Rvien.First().SoNgaydt != null)
                                            rep.TongNgay.Value = Rvien.First().SoNgaydt.ToString() + " ngày";
                                    }
                                    string _ngaysinh = "";
                                    if (par.First().NgaySinh != null && par.First().NgaySinh.ToString() != "")
                                        _ngaysinh = par.First().NgaySinh.ToString() + "/";
                                    if (par.First().ThangSinh != null && par.First().ThangSinh.ToString() != "")
                                        _ngaysinh = _ngaysinh + par.First().ThangSinh.ToString() + "/";
                                    if (par.First().NamSinh != null && par.First().NamSinh.ToString() != "")
                                        _ngaysinh = _ngaysinh + par.First().NamSinh.ToString();
                                    rep.NSinh.Value = _ngaysinh;
                                    int _makp = 0;
                                    if (bk01_02.Count > 0 && bk01_02.First().MaKP != null)
                                        _makp = bk01_02.First().MaKP.Value;
                                    var kphong = _dataContext.KPhongs.Where(p => p.MaKP == (_makp)).ToList();
                                    if (kphong.Count > 0)
                                        rep.KhoaPhong.Value = kphong.First().TenKP;
                                    rep.Tongtien.Value = bk01_02.Sum(p => p.ThanhTien);
                                    if (bk01_02.Count > 0)
                                    {
                                        rep.DataSource = bk01_02.ToList();
                                        rep.BindingData();
                                        rep.CreateDocument();
                                        // rep.DataMember = "Table";
                                        frm.prcIN.PrintingSystem = rep.PrintingSystem;
                                        frm.ShowDialog();
                                    }
                                }
                            }
                            #endregion
                        }
                        #endregion
                        //
                    }
                }
                //ket thuc bang ke 02
            }//123
            else
            {
                MessageBox.Show("Bệnh nhân chưa được thanh toán!");
            }
            //ket thuc bang ke 01
            //}
            //catch (Exception ex)
            //{
            //    MessageBox.Show("Lỗi xem bảng kê " + ex.Message);
            //}
        }

        #endregion
        #endregion
        #region tinhmuc thanh toan

        /// <summary>
        /// Trả về giá trị mức hưởng  bảo hiểm y tế thanh toán
        /// </summary>
        /// <param name="muc">Lấy giá trị trong bảng MucTT (PTTT) tương ứng với mã Mức (Mã mức là ký tự thứ 3 trên thẻ BHYT </param>
        /// <param name="hangBV">trong bảng Bệnh viện. Khi nhập trên form sẽ nhập là hạng A, B,C,D tương ứng với hạng 1,2,3,4</param>
        /// <param name="tuyen">đúng tuyến hay trái tuyến (1: Đúng tuyến; 2: Trái tuyến</param>
        ///  /// <param name="noingoaitru">nội ngoại trú : 0: ngoại trú; 1= Nội trú</param>
        /// <returns></returns>
        public static double _getmuc(List<MucTT> _qmuc, int hangBV, string mathe, int tuyen, int noingoaitru, DateTime ngayTT)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(Bien.StrCon);
            double _muctt = 0;
            string mamuc = "";

            if (mathe.Length > 2 && ngayTT != null)
            {
                mamuc = mathe.Substring(2, 1);
                var qmuc = _qmuc.Where(p => p.MaMuc == mamuc).ToList();
                if (qmuc.Count > 0 && qmuc.First().PTTT != null)
                {
                    // var q = data.MucTTs.(p => p.MaMuc == mamuc).PTTT;
                    if (tuyen == 1) // đúng tuyến
                    {
                        _muctt = Convert.ToDouble(qmuc.First().PTTT.ToString());
                    }
                    else // trái tuyến
                    {
                        double tylevuottuyen = 0;

                        if (noingoaitru == 0)
                        {
                            if (ngayTT >= new DateTime(2015, 1, 1) && ngayTT < new DateTime(2016, 1, 1))
                                switch (hangBV)
                                {
                                    case 3:
                                        tylevuottuyen = 0.7;
                                        break;
                                }
                            else if (ngayTT >= new DateTime(2016, 1, 1))
                            {
                                if (hangBV == 4 || hangBV == 3)
                                    tylevuottuyen = 1;
                            }
                        }
                        else if (noingoaitru == 1) // nội trú
                        {
                            if (ngayTT >= new DateTime(2015, 1, 1) && ngayTT < new DateTime(2016, 1, 1))
                                switch (hangBV)
                                {
                                    case 3:
                                        tylevuottuyen = 0.7;
                                        break;

                                    case 2:
                                        tylevuottuyen = 0.6;
                                        break;

                                    case 1:
                                        tylevuottuyen = 0.4;
                                        break;
                                }
                            else if (ngayTT >= new DateTime(2016, 1, 1) && ngayTT < new DateTime(2021, 1, 1))
                                switch (hangBV)
                                {
                                    case 4:
                                        tylevuottuyen = 1;
                                        break;

                                    case 3:
                                        tylevuottuyen = 1;
                                        break;

                                    case 2:
                                        tylevuottuyen = 0.6;
                                        break;

                                    case 1:
                                        tylevuottuyen = 0.4;
                                        break;
                                }
                            else if (ngayTT >= new DateTime(2021, 1, 1))
                            {
                                switch (hangBV)
                                {
                                    case 4:
                                        tylevuottuyen = 1;
                                        break;

                                    case 3:
                                        tylevuottuyen = 1;
                                        break;

                                    case 2:
                                        tylevuottuyen = 1;
                                        break;

                                    case 1:
                                        tylevuottuyen = 0.4;
                                        break;
                                }
                            }
                        }
                        _muctt = Convert.ToDouble(qmuc.First().PTTT) * tylevuottuyen;
                    }
                }
            }
            return _muctt;
        }

        #endregion

        #region Indon

        /// <summary>
        ///
        /// </summary>
        /// <param name="_IDDon"></param>
        /// <param name="_IDBN"></param>
        /// <param name="maKP"></param>
        /// <param name="nhomduoc">"Thuốc thường", Hóa chất", "Vật tư y tế", "Thuốc gây nghiện", "Thuốc hướng tâm thần", "Thuốc trẻ em", "Thuốc đông y"</param>
        public static void InDon(int _IDDon, int _IDBN, int maKP, int id, bool printCongKham = true, int index = 0, bool DonTra24012 = false)//In công khám 30010
        {
            int _int_maBN = 0;
            string _maCQCQ = "";
            frmIn frm = new frmIn();
            QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(Bien.StrCon);
            var qMaChuQuan = _data.BenhViens.Where(p => p.MaBV == Bien.MaBV).FirstOrDefault();
            if (qMaChuQuan != null)
                _maCQCQ = qMaChuQuan.MaChuQuan;
            DThuoc dthuoc = _data.DThuocs.Where(p => p.IDDon == _IDDon).FirstOrDefault();
            if (maKP == 0 && dthuoc != null)
                maKP = dthuoc.MaKP ?? 0;
            KPhong kph = _data.KPhongs.Where(p => p.MaKP == maKP).FirstOrDefault();
            //if (dthuoc != null)
            _int_maBN = _IDBN;
            var ktkd = (from dt in _data.DThuocs.Where(p => p.MaBNhan == _int_maBN).Where(p => (Bien.MaBV == "27001") ? true : p.IDDon == _IDDon).Where(p => p.PLDV == 1)
                        join dtct in _data.DThuoccts.Where(o => o.IsMuaNgoai == null || o.IsMuaNgoai == false).Where(p => (Bien.MaBV == "27023" || Bien.MaBV == "20001" || Bien.MaBV == "30005" || Bien.MaBV == "24009" || _maCQCQ == "24009" || Bien.MaBV == "30010") ? true : (p.TrongBH != 2)).Where(p => Bien.MaBV == "27001" ? p.MaKP == maKP : true) on dt.IDDon equals dtct.IDDon
                        join cb in _data.CanBoes on dt.MaCB equals cb.MaCB
                        join kp in _data.KPhongs on dt.MaKP equals kp.MaKP
                        select new { dt.GhiChu, dt.IDDon, cb.CapBac, dt.KieuDon, dt.LoaiDuoc, dt.MaBNhan, dt.NgayKe, dt.PLDV, cb.TenCB, cb.SoDT, kp.TenKP, dtct.MaDV, dtct.TrongBH }).ToList();
            var test = (from a in ktkd
                        join dv in _data.DichVus on a.MaDV equals dv.MaDV
                        join _tn in _data.TieuNhomDVs.Where(p => p.TenRG == Bien.st_TieuNhomRG_ChuyenKhoa.ThucPhamChucNang) on dv.IdTieuNhom equals _tn.IdTieuNhom
                        select new { dv }).ToList();
            bool ktraInCongKham = false;
            if (ktkd.Count == 0 && printCongKham)
                ktraInCongKham = true;
            else
            {
                if (Bien.MaBV == "24009" || _maCQCQ == "24009")
                {
                    var qdtBH = ktkd.Where(p => p.TrongBH == 1).ToList();
                    if (qdtBH.Count == 0)
                        ktraInCongKham = true;
                }
            }
            #region
            // else // trường hợp không có đơn nhưng vẫn in don có công khám
            if (ktraInCongKham)
            {
                #region đơn cũ
                //if (Bien.MaBV == "04011" || Bien.MaBV == "02005" || Bien.MaBV == "08204" || Bien.MaBV == "04008" || Bien.MaBV == "04006" || Bien.MaBV == "06007" || Bien.MaBV == "24009" || Bien.MaBV == "04013" || Bien.MaBV.ToString().Substring(0, 2) == "04")
                //{
                //    BaoCao.repDThuoc_HoaAn rep_ha = new BaoCao.repDThuoc_HoaAn();

                //    rep_ha._idDon.Value = null;
                //    rep_ha.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _IDBN, Bien.formatAge);
                //    var tt_ha = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _IDBN)
                //                 join kb in _data.BNKBs on bn.MaBNhan equals kb.MaBNhan
                //                 select new { kb.MaCB, bn.MaCS, bn.TenBNhan, kb.MaICD, bn.GTinh, kb.ChanDoan, bn.NoiTru, kb.BenhKhac, kb.IDKB, bn.SThe, bn.DChi, kb.PhuongAn }).OrderByDescending(p => p.IDKB).ToList();
                //    if (tt_ha.Count > 0)
                //    {
                //        rep_ha._TenBNhan.Value = tt_ha.First().TenBNhan;
                //        switch (tt_ha.First().GTinh)
                //        {
                //            case 1:
                //                rep_ha.GTinh.Value = "Nam";
                //                break;
                //            case 0:
                //                rep_ha.GTinh.Value = "Nữ";
                //                break;
                //        }
                //        rep_ha.ChuyenVien.Value = tt_ha.First().PhuongAn;
                //        if (tt_ha.First().NoiTru == 2)
                //        {
                //            var chuyenv = (from cv in _data.RaViens.Where(p => p.Status == 1).Where(p => p.MaBNhan == _IDBN)
                //                           join bv in _data.BenhViens on cv.MaBVC equals bv.MaBV
                //                           select bv.TenBV).ToList();
                //            if (chuyenv.Count > 0)
                //            {
                //                rep_ha.NoiChuyen.Value = "Nơi chuyển đến: " + chuyenv.First();
                //            }
                //        }
                //        rep_ha.MaCS.Value = tt_ha.First().MaCS;
                //        rep_ha.SThe.Value = tt_ha.First().SThe;
                //        rep_ha.DiaChi.Value = tt_ha.First().DChi;
                //        rep_ha._MaBNhan.Value = _IDBN.ToString();
                //        try
                //        {
                //            string[] cd = DungChung.Ham.getMaICDarr(_data, _IDBN, Bien.GetICD);
                //            rep_ha.ICD.Value = cd[0];

                //            rep_ha.ChanDoan.Value = cd[1];
                //            string macb = tt_ha.First().MaCB;
                //            int makp = Convert.ToInt16(cd[2]);
                //            var cb = _data.CanBoes.Where(p => p.MaCB == macb).Select(p => p.TenCB).ToList();
                //            if (cb.Count > 0)
                //                rep_ha.TenCB.Value = cb.First();
                //            var kp = _data.KPhongs.Where(p => p.MaKP == makp).Select(p => p.TenKP).ToList();
                //            if (kp.Count > 0)
                //                rep_ha.TenKP.Value = kp.First();

                //            if (cd[3].Length > 4)
                //                rep_ha.ngayke.Value = DungChung.Ham.NgaySangChu(Convert.ToDateTime(cd[3]));
                //        }
                //        catch { }
                //    }
                //    var q = (from dv in _data.DichVus
                //             join dtct in _data.DThuoccts on dv.MaDV equals dtct.MaDV
                //             join dt in _data.DThuocs.Where(p => p.MaBNhan == _IDBN) on dtct.IDDon equals dt.IDDon
                //             join nhom in _data.NhomDVs.Where(p => p.TenNhomCT.Contains("Khám bệnh")) on dv.IDNhom equals nhom.IDNhom
                //             select new { dv.TenDV, dtct.SoLuong, dtct.DonGia, dtct.DonVi, dtct.ThanhTien }).ToList();
                //    rep_ha.DataSource = q.ToList();
                //    rep_ha.BindData();
                //    rep_ha.CreateDocument();
                //    frm.prcIN.PrintingSystem = rep_ha.PrintingSystem;

                //    frm.ShowDialog();
                //}
                //else
                //{
                #endregion
                #region 30002
                if (Bien.MaBV == "30002")
                {
                    BaoCao.rep_PhieuKCBNgoaiT rep = new BaoCao.rep_PhieuKCBNgoaiT();

                    //rep._idDon.Value = ktkd.First().IDDon;

                    var tt = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _IDBN)
                              join kb in _data.BNKBs on bn.MaBNhan equals kb.MaBNhan
                              join ttbx in _data.TTboXungs on bn.MaBNhan equals ttbx.MaBNhan
                              select new { bn.GTinh, ttbx.NThan, bn.TenBNhan, bn.NamSinh, bn.HanBHDen, bn.HanBHTu, bn.NgaySinh, bn.ThangSinh, bn.NNhap, kb.MaICD, kb.ChanDoan, kb.BenhKhac, kb.IDKB, bn.SThe, bn.DChi }).OrderByDescending(p => p.IDKB).ToList();
                    if (tt.Count > 0)
                    {
                        rep._TenBNhan.Value = tt.First().TenBNhan;
                        rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _IDBN, Bien.formatAge);
                        switch (tt.First().GTinh)
                        {
                            case 1:
                                rep.GTinh.Value = "Nam";
                                break;

                            case 0:
                                rep.GTinh.Value = "Nữ";
                                break;
                        }

                        if (tt.First().HanBHDen != null && tt.First().HanBHDen.Value.Day > 0)
                            rep.HanDen.Value = tt.First().HanBHDen.ToString().Substring(0, 10);
                        if (tt.First().HanBHTu != null && tt.First().HanBHTu.Value.Day > 0)
                            rep.HanTu.Value = tt.First().HanBHTu.ToString().Substring(0, 10);
                        rep.ICD.Value = DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _IDBN, Bien.GetICD, 0)[0]);
                        rep.SThe.Value = tt.First().SThe;
                        rep.ChanDoan.Value = DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _IDBN, Bien.GetICD, 0)[1]);
                        // lấy khoa phòng
                        var laykp = (from bnkb in _data.BNKBs.Where(p => p.MaBNhan == _IDBN)
                                     join kp in _data.KPhongs on bnkb.MaKP equals kp.MaKP
                                     join cb in _data.CanBoes on bnkb.MaCB equals cb.MaCB
                                     select new { kp.TenKP, cb.TenCB, bnkb.IDKB, bnkb.NgayKham }).OrderBy(p => p.IDKB).ToList();
                        if (laykp.Count > 0)
                        {
                            rep.TenCB.Value = laykp.First().TenCB;//
                            rep.TenKP.Value = laykp.First().TenKP;//
                            rep.Ngaykham.Value = laykp.First().NgayKham.ToString().Substring(0, 10);
                            rep.ngayke.Value = DungChung.Ham.NgaySangChu(laykp.First().NgayKham.Value);
                        }
                        rep.DiaChi.Value = tt.First().DChi;
                        rep._MaBNhan.Value = _IDBN.ToString();

                        // lấy mã KCB ban đầu
                        var madkkcb = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _IDBN)
                                       join bv in _data.BenhViens on bn.MaCS equals bv.MaBV
                                       select new { bv.TenBV }).ToList();
                        if (madkkcb.Count > 0)
                            rep.dkkcbbd.Value = madkkcb.First().TenBV;
                    }
                    //int id = ktkd.First().IDDon;
                    var q = (from dv in _data.DichVus
                             join dtct in _data.DThuoccts on dv.MaDV equals dtct.MaDV
                             join dt in _data.DThuocs.Where(p => p.MaBNhan == _IDBN) on dtct.IDDon equals dt.IDDon
                             join nhomdv in _data.NhomDVs on dv.IDNhom equals nhomdv.IDNhom
                             //where (dtct.IDDon == id)
                             group new { dv, dtct, nhomdv } by new { nhomdv.TenNhom, nhomdv.STT, dv.TenDV, dv.MaDV, dv.DonVi, dtct.DonGia } into kq
                             select new { kq.Key.TenNhom, kq.Key.STT, kq.Key.TenDV, kq.Key.MaDV, kq.Key.DonVi, kq.Key.DonGia, SoLuong = kq.Sum(p => p.dtct.SoLuong), ThanhTien = kq.Sum(p => p.dtct.ThanhTien) }).OrderBy(p => p.STT).OrderBy(p => p.TenDV).ToList();
                    //HuongDan = dtct.DuongD + dtct.SoLan + dtct.MoiLan + dtct.DviUong
                    //var q = (from dv in _data.DichVus
                    //         join dtct in _data.DThuoccts on dv.MaDV equals dtct.MaDV
                    //         where (dtct.IDDon == id)
                    //         group new { dv, dtct } by new { dv.TenDV, dv.MaDV, dtct.DonVi } into kq
                    //         select new { kq.Key.TenDV, kq.Key.MaDV, kq.Key.DonVi, SoLuong = kq.Sum(p => p.dtct.SoLuong) }).ToList();
                    if (q.Count > 0)
                        rep.DataSource = q.ToList();
                    //rep.ShowPreviewDialog();
                    //rep.DataMember = "Table";
                    rep.BindData();
                    rep.CreateDocument();
                    frm.prcIN.PrintingSystem = rep.PrintingSystem;

                    frm.ShowDialog();
                }
                #endregion
                else
                {
                    //đơn mới dùng cho tất cả các đơn vị a.quý y/c 02-03
                    var nkt = _data.BenhNhans.Where(p => p.MaBNhan == _int_maBN).ToList();
                    if (nkt.Count > 0)// && (Bien.MaBV == "30007" || Bien.MaBV == "12122"||Bien.MaBV=="12128")
                    {
                        #region 30007 - 12122
                        int x = 1;
                        BaoCao.repDonThuoc_TT18 repd = new BaoCao.repDonThuoc_TT18();
                        var ttd = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _IDBN)
                                   join kb in _data.BNKBs on bn.MaBNhan equals kb.MaBNhan
                                   join ttbx in _data.TTboXungs on bn.MaBNhan equals ttbx.MaBNhan
                                   select new { bn.GTinh, bn.TenBNhan, ttbx.CanNang_ChieuCao, ttbx.NThan, bn.NamSinh, bn.NgaySinh, bn.ThangSinh, bn.NNhap, kb.MaICD, kb.ChanDoan, kb.BenhKhac, kb.IDKB, bn.SThe, bn.DChi, kb.GhiChu, bn.NoiTru, bn.DTNT, kb.MaICD2 }).OrderByDescending(p => p.IDKB).ToList();
                        if (ttd.Count > 0)
                        {
                            if (ttd.First().NoiTru == 0 && ttd.First().DTNT == false)
                                x = 0;
                            if (DungChung.Bien.MaBV == "24272")
                            {
                                repd._TenBNhan.Value = ttd.First().TenBNhan.ToUpper();
                            }
                            else
                            {
                                repd._TenBNhan.Value = ttd.First().TenBNhan;
                            }
                            repd.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _IDBN, Bien.formatAge);
                            repd.lblTuoi.Text = "Tuổi:";
                            //  repd.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _IDBN, Bien.formatAge);
                            //Lời dặn, họ tên người thân
                            string Tuoi = "";
                            Tuoi = DungChung.Ham.TuoitheoThang(_data, _int_maBN, "72-00");
                            repd.Tuoi.Value = Bien.MaBV == "14018" ? DungChung.Ham.CalculateAge(ttd.First().NgaySinh, ttd.First().ThangSinh, ttd.First().NamSinh, " tháng.") : Tuoi;
                            repd.lblTuoi.Text = "Tuổi:";
                            if (ttd.First().CanNang_ChieuCao != null && ttd.First().CanNang_ChieuCao.Contains(";"))
                            {
                                repd.CanNang.Value = ttd.First().CanNang_ChieuCao.Split(';')[0];
                            }
                            else
                                repd.CanNang.Value = ttd.First().CanNang_ChieuCao;
                            if (Tuoi.Length > 2)
                            {
                                if (!string.IsNullOrEmpty(ttd.First().NThan) && ttd.First().NThan.Contains(";"))
                                {
                                    string[] arrnt = ttd.First().NThan.Split(';');
                                    repd.paraHoTenNguoiThan.Value = "- Tên bố hoặc mẹ của trẻ hoặc người đưa trẻ đến khám bệnh, chữa bệnh: " + arrnt[0];
                                    repd.CMTND.Value = arrnt[1];
                                }
                                else
                                {
                                    repd.paraHoTenNguoiThan.Value = "- Tên bố hoặc mẹ của trẻ hoặc người đưa trẻ đến khám bệnh, chữa bệnh: " + ttd.First().NThan;
                                }
                            }

                            //Năm sinh HIS 1328
                            if (Bien.MaBV == "24012")
                            {
                                repd.Tuoi.Value = ttd.First().NamSinh + " (" + Tuoi + " tuổi)";
                            }

                            //if (ar.Length > 1)
                            //    repd.paraLoDanBS.Value = ar[1];

                            // KT
                            if (Bien.MaBV == "24012" || Bien.MaBV == "24389")
                            {
                                switch (ttd.First().GTinh)
                                {
                                    case 1:
                                        repd.xrLabel11.Text = "Nam/Nữ: Nam";
                                        break;

                                    case 0:
                                        repd.xrLabel11.Text = "Nam/Nữ: Nữ";
                                        break;
                                }
                            }
                            else
                            {
                                switch (ttd.First().GTinh)
                                {
                                    case 1:
                                        repd.GTinh.Value = "Nam";
                                        repd.Nu.Value = "/";
                                        break;

                                    case 0:
                                        repd.GTinh.Value = "Nữ";
                                        repd.Nam.Value = "/";
                                        break;
                                }
                            }
                            repd.ICD.Value = DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _IDBN, Bien.GetICD, 0)[0]);
                            repd.SThe.Value = ttd.First().SThe;
                            if (Bien.MaBV == "20001")
                            {
                                string cdyhct = DungChung.Ham.GetMaYHCT(DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, 0)[0]), _data.ICD10.ToList())[1];
                                repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, id)[1]), cdyhct); //cdyhct + "[" + DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, id)[1]) + "]";
                            }
                            else if (Bien.MaBV == "24297")
                            {
                                string cdyhct = DungChung.Ham.GetYHCT_24297(DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, 0)[0]), _data.ICD10.ToList())[1];
                                repd.ChanDoan.Value = "Chẩn đoán: " + cdyhct.ToString();
                            }
                            //else if (Bien.MaBV == "24012" || Bien.MaBV == "24389")
                            //{
                            //    var a = ttd.First().BenhKhac.Split(';');
                            //    var b = ttd.First().MaICD2.Split(';');
                            //    repd.ChanDoan.Value = "Chẩn đoán: "+ ttd.First().MaICD + "-  " + ttd.First().ChanDoan + ";  "
                            //        + b[0] + "-  " + a[0]
                            //        +";  " + b[1] + "-  " + a[1]
                            //        + ";  " + b[2] + "-  " + a[2];
                            //}
                            else
                                repd.ChanDoan.Value = Bien.MaBV == "14018" ? "Chẩn đoán: " + "-  " + ttd.First().MaICD + DungChung.Ham.GetChanDoanKB(_data, _int_maBN) : "Chẩn đoán: " + ttd.First().MaICD + "-  " + DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _IDBN, Bien.GetICD, id)[1]);
                            repd.MaBN.Value = "Mã BN: " + _int_maBN.ToString();
                            repd.DiaChi.Value = "Địa chỉ: " + ttd.First().DChi;
                            repd._MaBNhan.Value = _IDBN.ToString();
                        }
                        int iddon = 0;

                        var qd1 = (from dt in _data.DThuocs.Where(p => p.MaBNhan == _IDBN)
                                   join dtct in _data.DThuoccts.Where(p => Bien.MaBV == "27023" ? true : p.TrongBH != 2) on dt.IDDon equals dtct.IDDon
                                   join dv in _data.DichVus on dtct.MaDV equals dv.MaDV
                                   join nhom in _data.NhomDVs.Where(p => p.TenNhomCT.Contains("Khám bệnh")) on dv.IDNhom equals nhom.IDNhom
                                   select new { dt.IDDon, dv.TenDV, dv.MaDV, dv.DonVi, dtct.SoLuong, dtct.IDDonct, HuongDan = dtct.DuongD + dtct.SoLan + dtct.MoiLan + dtct.Luong + dtct.DviUong }).OrderBy(p => p.IDDonct).ToList();
                        if (qd1.Count > 0)
                            iddon = qd1.First().IDDon;
                        repd._idDon.Value = iddon;
                        var ktkd2 = (from dt in _data.DThuocs.Where(p => p.IDDon == iddon)
                                     join cb in _data.CanBoes on dt.MaCB equals cb.MaCB
                                     join kp in _data.KPhongs on dt.MaKP equals kp.MaKP
                                     select new { dt.GhiChu, dt.IDDon, cb.CapBac, dt.KieuDon, dt.LoaiDuoc, dt.MaBNhan, dt.NgayKe, dt.PLDV, cb.TenCB, kp.TenKP, cb.SoDT }).ToList();
                        if (ktkd2.Count > 0 && ktkd2.First().GhiChu != null)
                            repd.LoiDanBS.Value = ktkd2.First().GhiChu;
                        repd.LoiDanBS.Value += Bien.MaBV == "24012" ? "\n\n\n" : "";
                        if (ktkd2.Count > 0)
                        {
                            if (ktkd2.First().NgayKe.Value.Day > 0)
                                repd.ngayke.Value = DungChung.Ham.NgaySangChu(ktkd2.First().NgayKe.Value);

                            if (Bien.MaBV == "30007")//in theo id khám bệnh của kp in đơn
                            {
                                var bnkb1 = _data.BNKBs.Where(p => p.IDKB == id).FirstOrDefault();
                                if (bnkb1 != null)
                                {
                                    string macb = bnkb1.MaCB;
                                    var ttcb = _data.CanBoes.Where(p => p.MaCB == macb).FirstOrDefault();
                                    if (ttcb != null)
                                    {
                                        repd.TenCB.Value = ttcb.CapBac + ": " + ttcb.TenCB;
                                    }
                                    int makp1 = bnkb1.MaKP ?? 0;
                                    var ttkp = _data.KPhongs.Where(p => p.MaKP == makp1).FirstOrDefault();
                                    if (ttkp != null)
                                    {
                                        repd.TenKP.Value = ttkp.TenKP;
                                    }
                                }
                            }
                            else
                            {
                                repd.TenCB.Value = ktkd2.First().CapBac + ": " + ktkd2.First().TenCB;
                                repd.SDTBS.Value = Bien.MaBV == "01830" ? ((ktkd2.First().SoDT != null && ktkd2.First().SoDT != "") ? ("SĐT:" + ktkd2.First().SoDT) : "") : "";
                                repd.TenKP.Value = ktkd2.Count > 0 ? ktkd2.First().TenKP : "";
                            }
                        }
                        repd.DataSource = qd1.ToList();
                        repd.ThuKho.Value = Bien.ThuKho;
                        repd.BindData();
                        repd.CreateDocument();

                        frm = new frmIn(repd);
                        frm.prcIN.PrintingSystem = repd.PrintingSystem;
                        frm.ShowDialog();
                        #endregion
                    }
                }
            }
            #endregion
            #region kiểm tra có đơn thuốc hay chưa ktkd.Count > 0
            if (ktkd.Count > 0)// kiểm tra có đơn thuốc hay chưa
            {
                // int _int_maBN = ktkd.First().MaBNhan ?? 0;
                string matinh = Bien.MaBV.Substring(0, 2);

                switch (matinh)
                {
                    #region case 99
                    case "99": //bỏ (chưa dùng)
                        BaoCao.rep_PhieuKCBNgoaiT rep = new BaoCao.rep_PhieuKCBNgoaiT();
                        rep._idDon.Value = ktkd.First().IDDon;
                        var tt = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _int_maBN)
                                  join kb in _data.BNKBs on bn.MaBNhan equals kb.MaBNhan
                                  select new { bn.GTinh, bn.TenBNhan, bn.NamSinh, bn.HanBHDen, bn.HanBHTu, bn.NgaySinh, bn.ThangSinh, bn.NNhap, kb.MaICD, kb.ChanDoan, kb.BenhKhac, kb.IDKB, bn.SThe, bn.DChi }).OrderByDescending(p => p.IDKB).ToList();
                        if (tt.Count > 0)
                        {
                            rep._TenBNhan.Value = tt.First().TenBNhan;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _int_maBN, Bien.formatAge);
                            switch (tt.First().GTinh)
                            {
                                case 1:
                                    rep.GTinh.Value = "Nam";
                                    break;

                                case 0:
                                    rep.GTinh.Value = "Nữ";
                                    break;
                            }
                            if (tt.First().HanBHDen != null && tt.First().HanBHDen.Value.Day > 0)
                                rep.HanDen.Value = tt.First().HanBHDen.ToString().Substring(0, 10);
                            if (tt.First().HanBHTu != null && tt.First().HanBHTu.Value.Day > 0)
                                rep.HanTu.Value = tt.First().HanBHTu.ToString().Substring(0, 10);
                            rep.ICD.Value = DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, 0)[0]);
                            rep.SThe.Value = tt.First().SThe;
                            rep.ChanDoan.Value = DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, 0)[1]);
                            rep.TenCB.Value = ktkd.First().TenCB;
                            rep.TenKP.Value = ktkd.First().TenKP;
                            rep.DiaChi.Value = tt.First().DChi;
                            rep._MaBNhan.Value = _int_maBN.ToString();
                            if (ktkd.First().NgayKe.Value.Day > 0)
                            {
                                rep.Ngaykham.Value = ktkd.First().NgayKe.ToString().Substring(0, 10);
                                rep.ngayke.Value = DungChung.Ham.NgaySangChu(ktkd.First().NgayKe.Value);
                            }
                            // lấy mã KCB ban đầu
                            var madkkcb = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _int_maBN)
                                           join bv in _data.BenhViens on bn.MaCS equals bv.MaBV
                                           select new { bv.TenBV }).ToList();
                            if (madkkcb.Count > 0)
                                rep.dkkcbbd.Value = madkkcb.First().TenBV;
                        }
                        //int id = ktkd.First().IDDon;
                        var q = (from dv in _data.DichVus
                                 join dtct in _data.DThuoccts.Where(p => p.TrongBH != 2) on dv.MaDV equals dtct.MaDV
                                 join dt in _data.DThuocs.Where(p => p.MaBNhan == _int_maBN) on dtct.IDDon equals dt.IDDon
                                 join nhomdv in _data.NhomDVs on dv.IDNhom equals nhomdv.IDNhom
                                 //where (dtct.IDDon == id)
                                 group new { dv, dtct, nhomdv } by new { nhomdv.TenNhom, nhomdv.STT, dv.TenDV, dv.MaDV, dv.DonVi, dtct.DonGia } into kq
                                 select new { kq.Key.TenNhom, kq.Key.STT, kq.Key.TenDV, kq.Key.MaDV, kq.Key.DonVi, kq.Key.DonGia, SoLuong = kq.Sum(p => p.dtct.SoLuong), ThanhTien = kq.Sum(p => p.dtct.ThanhTien) }).OrderBy(p => p.STT).OrderBy(p => p.TenDV).ToList();
                        //HuongDan = dtct.DuongD + dtct.SoLan + dtct.MoiLan + dtct.DviUong
                        //var q = (from dv in _data.DichVus
                        //         join dtct in _data.DThuoccts on dv.MaDV equals dtct.MaDV
                        //         where (dtct.IDDon == id)
                        //         group new { dv, dtct } by new { dv.TenDV, dv.MaDV, dtct.DonVi } into kq
                        //         select new { kq.Key.TenDV, kq.Key.MaDV, kq.Key.DonVi, SoLuong = kq.Sum(p => p.dtct.SoLuong) }).ToList();
                        if (q.Count > 0)
                            rep.DataSource = q.ToList();
                        //rep.ShowPreviewDialog();
                        //rep.DataMember = "Table";
                        rep.BindData();
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;

                        frm.ShowDialog();
                        break;
                    #endregion
                    #region default
                    default:
                        #region (DateTime.Now.Date >= Convert.ToDateTime("01/05/2016"))
                        if (DateTime.Now.Date >= Convert.ToDateTime("01/05/2016"))
                        {
                            #region 30340
                            if (Bien.MaBV == "30340") //( a.hùng y/c thêm cho bv 30350)
                            {
                                for (int i = 1; i < 3; i++)
                                {
                                    BaoCao.repDonThuoc_TT05_A4 repd = new BaoCao.repDonThuoc_TT05_A4();
                                    repd._idDon.Value = ktkd.First().IDDon;
                                    var ttd = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _int_maBN)
                                               join kb in _data.BNKBs on bn.MaBNhan equals kb.MaBNhan
                                               select new { bn.GTinh, bn.TenBNhan, bn.NamSinh, bn.NgaySinh, bn.ThangSinh, bn.NNhap, kb.MaICD, kb.ChanDoan, kb.BenhKhac, kb.IDKB, bn.SThe, bn.DChi, kb.GhiChu }).OrderByDescending(p => p.IDKB).ToList();
                                    if (ttd.Count > 0)
                                    {
                                        repd._TenBNhan.Value = ttd.First().TenBNhan;

                                        repd.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _int_maBN, Bien.formatAge);
                                        repd.lblTuoi.Text = "Tuổi:";

                                        //Lời dặn, họ tên người thân
                                        string _ghichu = ttd.First().GhiChu ?? "";
                                        string[] ar = _ghichu.Split(';');
                                        if (ar.Length > 0)
                                            repd.paraHoTenNguoiThan.Value = ar[0];
                                        if (ar.Length > 1)
                                            repd.paraLoDanBS.Value = ar[1];

                                        // KT
                                        switch (ttd.First().GTinh)
                                        {
                                            case 1:
                                                repd.GTinh.Value = "Nam";
                                                repd.Nu.Value = "/";
                                                break;

                                            case 0:
                                                repd.GTinh.Value = "Nữ";
                                                repd.Nam.Value = "/";
                                                break;
                                        }
                                        repd.ICD.Value = DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, 0)[0]);
                                        repd.SThe.Value = ttd.First().SThe;
                                        repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, 0)[1]);
                                        repd.TenCB.Value = ktkd.First().CapBac + ": " + ktkd.First().TenCB;

                                        repd.TenKP.Value = ktkd.First().TenKP;
                                        repd.DiaChi.Value = ttd.First().DChi;
                                        repd._MaBNhan.Value = _int_maBN.ToString();
                                        if (ktkd.First().NgayKe.Value.Day > 0)
                                            repd.ngayke.Value = DungChung.Ham.NgaySangChu(ktkd.First().NgayKe.Value);
                                        var qd1 = (from dt in _data.DThuocs.Where(p => p.MaBNhan == _int_maBN).Where(p => Bien.MaBV == "27001" ? true : dthuoc.IDDon == _IDDon).Where(p => p.PLDV == 1)
                                                   join dtct in _data.DThuoccts.Where(p => Bien.MaBV == "27001" ? p.MaKP == maKP : true) on dt.IDDon equals dtct.IDDon
                                                   join dv in _data.DichVus on dtct.MaDV equals dv.MaDV
                                                   join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                                   where tn.TenRG != "Thuốc gây nghiện" && tn.TenRG != "Thuốc hướng tâm thần"
                                                   select new { TenDV = Bien.MaBV == "30012" ? (dv.TenHC + " (" + dv.TenDV + ")") : ((Bien.MaBV == "30007") ? (dv.TenHC + ": " + dv.HamLuong + " (" + dv.TenDV + ") ") : dv.TenDV), dv.TenHC, dv.HamLuong, dv.MaDV, dv.DonVi, dtct.SoLuong, dtct.IDDonct, dtct.GhiChu, HuongDan = "", DuongD = dtct.DuongD ?? "", SoLan = dtct.SoLan ?? "", MoiLan = dtct.MoiLan ?? "", Luong = dtct.Luong ?? "", DviUong = dtct.DviUong ?? "", dtct.TrongBH }).OrderBy(p => p.IDDonct).ToList();

                                        var qd2 = (from dv in qd1
                                                   group dv by new { dv.TenDV, dv.MaDV, dv.DonVi, dv.TrongBH, dv.HamLuong } into kq
                                                   select new { TenDV = kq.Key.TenDV, kq.Key.HamLuong, kq.Key.MaDV, kq.Key.DonVi, SoLuong = kq.Sum(p => p.SoLuong), kq.Key.TrongBH, HuongDan = kq.First().DuongD + kq.First().SoLan + kq.First().MoiLan + kq.First().Luong + kq.First().DviUong + kq.First().GhiChu }).ToList();//Bien.MaBV == "08602" ? dv.TenHC + "(" + dv.TenDV + ")" + " " + dv.HamLuong :
                                        repd.ThuKho.Value = Bien.ThuKho;
                                        if (qd2.Where(p => p.TrongBH == 1).Count() > 0 && i == 1)
                                        {
                                            repd.DataSource = qd2.Where(p => p.TrongBH == 1).ToList();
                                            repd.celTrongNgoaiDM.Text = "(Thuốc trong danh mục BHYT)";
                                            repd.BindData();
                                            repd.CreateDocument();
                                            frm.prcIN.PrintingSystem = repd.PrintingSystem;
                                            frm.ShowDialog();
                                        }
                                        else if (i == 2 && qd2.Where(p => p.TrongBH == 0).Count() > 0)
                                        {
                                            repd.DataSource = qd2.Where(p => p.TrongBH == 0).ToList();
                                            repd.celTrongNgoaiDM.Text = "(Thuốc ngoài danh mục BHYT)";
                                            repd.BindData();
                                            repd.CreateDocument();
                                            frm.prcIN.PrintingSystem = repd.PrintingSystem;
                                            frm.ShowDialog();
                                        }
                                    }
                                }
                            }
                            #endregion
                            #region default
                            else
                            {
                                //if (DateTime.Now < Convert.ToDateTime("30/01/2017"))
                                //{
                                var qdtct = (from dt in _data.DThuocs.Where(p => p.MaBNhan == _int_maBN).Where(p => p.PLDV == 1)
                                             join dtct in _data.DThuoccts on dt.IDDon equals dtct.IDDon
                                             select dtct).ToList();
                                foreach (var t in qdtct)
                                {
                                    t.ThanhTien = t.SoLuong * t.DonGia * t.TyLeTT / 100;
                                    _data.SaveChanges();
                                }

                                var nkt = _data.BenhNhans.Where(p => p.MaBNhan == _int_maBN).ToList();
                                if (nkt.Count > 0)
                                {
                                    #region

                                    if (Bien.MaBV != "12048" && Bien.MaBV != "30350")
                                    {
                                        if (Bien.MaBV == "24009" || _maCQCQ == "24009")
                                        {
                                            var qd1 = (from dt in _data.DThuocs.Where(p => p.MaBNhan == _int_maBN).Where(p => p.IDDon == _IDDon).Where(p => p.PLDV == 1)
                                                       join dtct in _data.DThuoccts on dt.IDDon equals dtct.IDDon
                                                       join dv in _data.DichVus on dtct.MaDV equals dv.MaDV
                                                       join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                                                       where tn.TenRG != "Thuốc gây nghiện" && tn.TenRG != "Thuốc hướng tâm thần"
                                                       select new { TenTNRG = tn.TenRG, dv.TenRG, TenDV = _maCQCQ == "00000" ? dv.TenHC + " " + dv.HamLuong : ((Bien.MaBV == "12345" || Bien.MaBV == "24297") ? ((dv.TenDV ?? "") + " (" + (dv.TenHC ?? "") + ") " + (dv.HamLuong ?? "")) : ((dv.TenHC.Contains(",") || dv.TenHC.Contains("+") || dv.TenHC.Contains(";")) ? dv.TenDV : (dv.TenHC + " (" + dv.TenDV + ") " + dv.HamLuong))), dv.TenHC, dv.HamLuong, dv.MaDV, dv.DonVi, dtct.SoLuong, dtct.IDDonct, dtct.GhiChu, HuongDan = "", DuongD = dtct.DuongD ?? "", SoLan = dtct.SoLan ?? "", MoiLan = dtct.MoiLan ?? "", Luong = dtct.Luong ?? "", DviUong = dtct.DviUong ?? "", LoiDan = dt.GhiChu, dtct.TrongBH }).OrderBy(p => p.IDDonct).ToList();
                                            //(Bien.MaBV == "27023" || Bien.MaBV == "08602" || (Bien.MaBV == "12001" && dv.TenTNRG != Bien.st_TieuNhomRG_ChuyenKhoa.ThuocThuong_CPYHCT)) ? (dv.TenHC + "(" + dv.TenDV + ")" + " " + dv.HamLuong) : ((Bien.MaBV == "04011" || Bien.MaBV == "24009" || _maCQCQ == "24009") ? dv.TenRG : (Bien.MaTinh == "12" ? dv.TenDV + "( " + dv.HamLuong + " )" : dv.TenDV))
                                            var qd2 = (from dv in qd1.Where(p => Bien.MaBV == "27022" ? p.TenTNRG != Bien.st_TieuNhomRG_ChuyenKhoa.ThucPhamChucNang : true)
                                                       group dv by new { dv.TenDV, dv.MaDV, dv.DonVi, dv.HamLuong, dv.TenRG, dv.TrongBH } into kq
                                                       select new { TenDV = (Bien.MaBV == "24009" || _maCQCQ == "24009") ? kq.Key.TenRG : kq.Key.TenDV, kq.Key.HamLuong, kq.Key.MaDV, kq.Key.DonVi, SoLuong = kq.Sum(p => p.SoLuong), HuongDan = kq.First().DuongD + " " + kq.First().SoLan + " " + kq.First().MoiLan + " " + kq.First().Luong + " " + kq.First().DviUong + " " + kq.First().GhiChu, kq.Key.TrongBH }).ToList();
                                            var _arrTrongBH = (from a in qd2
                                                               select new
                                                               {
                                                                   a.TrongBH,
                                                                   STT = a.TrongBH == 0 ? 2 : (a.TrongBH == 2 ? 3 : 1)
                                                               }).Distinct().OrderBy(p => p.STT).ToList();
                                            var ttd = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _int_maBN)
                                                       join ttbx in _data.TTboXungs on bn.MaBNhan equals ttbx.MaBNhan
                                                       join kb in _data.BNKBs on bn.MaBNhan equals kb.MaBNhan
                                                       select new { bn.GTinh, ttbx.CanNang_ChieuCao, bn.TenBNhan, bn.NamSinh, bn.NgaySinh, bn.ThangSinh, bn.NNhap, kb.MaICD, kb.ChanDoan, kb.BenhKhac, kb.IDKB, bn.SThe, bn.DChi, kb.GhiChu, bn.NoiTru, bn.DTNT, ttbx.NThan }).OrderByDescending(p => p.IDKB).ToList();
                                            foreach (var item in _arrTrongBH)
                                            {
                                                BaoCao.repDonThuoc_TT18 repd = new BaoCao.repDonThuoc_TT18();
                                                int x = 1;

                                                repd._idDon.Value = ktkd.First().IDDon;
                                                if (item.TrongBH == 2)
                                                {
                                                    repd.LoaiDon.Value = "(Không thanh toán)";
                                                }
                                                else if (item.TrongBH == 0)
                                                {
                                                    repd.LoaiDon.Value = "(Ngoài danh mục)";
                                                }
                                                if (ttd.Count > 0)
                                                {
                                                    if (ttd.First().NoiTru == 0 && ttd.First().DTNT == false)
                                                        x = 0;
                                                    repd._TenBNhan.Value = ttd.First().TenBNhan;
                                                    string Tuoi = "";
                                                    Tuoi = DungChung.Ham.TuoitheoThang(_data, _int_maBN, "72-00");
                                                    repd.Tuoi.Value = Tuoi;
                                                    repd.lblTuoi.Text = "Tuổi:";
                                                    if (ttd.First().CanNang_ChieuCao != null && ttd.First().CanNang_ChieuCao.Contains(";"))
                                                    {
                                                        repd.CanNang.Value = ttd.First().CanNang_ChieuCao.Split(';')[0];
                                                    }
                                                    else
                                                        repd.CanNang.Value = ttd.First().CanNang_ChieuCao;
                                                    if (Tuoi.Length > 2)
                                                    {
                                                        if (!string.IsNullOrEmpty(ttd.First().NThan) && ttd.First().NThan.Contains(";"))
                                                        {
                                                            string[] arrnt = ttd.First().NThan.Split(';');
                                                            repd.paraHoTenNguoiThan.Value = "- Tên bố hoặc mẹ của trẻ hoặc người đưa trẻ đến khám bệnh, chữa bệnh: " + arrnt[0];
                                                            repd.CMTND.Value = arrnt[1];
                                                        }
                                                        else
                                                        {
                                                            repd.paraHoTenNguoiThan.Value = "- Tên bố hoặc mẹ của trẻ hoặc người đưa trẻ đến khám bệnh, chữa bệnh: " + ttd.First().NThan;
                                                        }
                                                    }
                                                    switch (ttd.First().GTinh)
                                                    {
                                                        case 1:
                                                            repd.GTinh.Value = "Nam";
                                                            repd.Nu.Value = "/";
                                                            break;

                                                        case 0:
                                                            repd.GTinh.Value = "Nữ";
                                                            repd.Nam.Value = "/";
                                                            break;
                                                    }
                                                    var bnkb1 = _data.BNKBs.Where(p => p.IDKB == id).FirstOrDefault();
                                                    if (Bien.MaBV == "12345" || Bien.MaBV == "24297")
                                                    {
                                                        if (bnkb1 != null)
                                                        {
                                                            if (!string.IsNullOrEmpty(bnkb1.MaICD))
                                                            {
                                                                repd.ICD.Value = bnkb1.MaICD;
                                                                repd.ChanDoan.Value = "Chẩn đoán: " + bnkb1.ChanDoan;
                                                            }
                                                            else
                                                            {
                                                                repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham.FreshString(bnkb1.BenhKhac);
                                                            }
                                                        }
                                                    }
                                                    else
                                                    {
                                                        repd.ICD.Value = DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, 0)[0]);
                                                        repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, id)[1]);
                                                    }

                                                    repd.SThe.Value = ttd.First().SThe;

                                                    if (Bien.MaBV == "30007")//in theo id khám bệnh của kp in đơn
                                                    {
                                                        if (bnkb1 != null)
                                                        {
                                                            string macb = bnkb1.MaCB;
                                                            var ttcb = _data.CanBoes.Where(p => p.MaCB == macb).FirstOrDefault();
                                                            if (ttcb != null)
                                                            {
                                                                repd.TenCB.Value = ttcb.CapBac + ": " + ttcb.TenCB;
                                                            }
                                                            int makp1 = bnkb1.MaKP ?? 0;
                                                            var ttkp = _data.KPhongs.Where(p => p.MaKP == makp1).FirstOrDefault();
                                                            if (ttkp != null)
                                                            {
                                                                repd.TenKP.Value = ttkp.TenKP;
                                                            }
                                                        }
                                                    }
                                                    else
                                                    {
                                                        repd.TenCB.Value = ktkd.First().CapBac + ": " + ktkd.First().TenCB;
                                                        repd.SDTBS.Value = Bien.MaBV == "01830" ? ((ktkd.First().SoDT != null && ktkd.First().SoDT != "") ? ("SĐT:" + ktkd.First().SoDT) : "") : "";
                                                        repd.TenKP.Value = ktkd.First().TenKP;
                                                    }
                                                    repd.DiaChi.Value = ttd.First().DChi;

                                                    repd._MaBNhan.Value = _int_maBN.ToString();
                                                    if (Bien.MaBV != "20001")
                                                        repd.MaBN.Value = "Mã BN: " + _int_maBN.ToString();
                                                    if (ktkd.First().NgayKe.Value.Day > 0)
                                                        repd.ngayke.Value = DungChung.Ham.NgaySangChu(ktkd.First().NgayKe.Value);
                                                }

                                                repd.LoiDanBS.Value = qd1.Count > 0 ? qd1.First().LoiDan : "";
                                                repd.LoiDanBS.Value += Bien.MaBV == "24012" ? "\n\n\n" : "";
                                                repd.DataSource = qd2.Where(p => p.TrongBH == item.TrongBH).ToList();
                                                repd.ThuKho.Value = Bien.ThuKho;
                                                repd.BindData();
                                                repd.CreateDocument();
                                                frm.prcIN.PrintingSystem = repd.PrintingSystem;
                                                frm.ShowDialog();
                                            }
                                        }
                                        else
                                        {
                                            BaoCao.repDonThuoc_TT18 repd = new BaoCao.repDonThuoc_TT18(DonTra24012);
                                            int x = 1;
                                            if (index == 1)
                                            {
                                                repd.txtTieuDe.Text = "PHIẾU XUẤT KHO";
                                            }
                                            repd._idDon.Value = ktkd.First().IDDon;
                                            var ttd = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _int_maBN)
                                                       join ttbx in _data.TTboXungs on bn.MaBNhan equals ttbx.MaBNhan
                                                       join kb in _data.BNKBs on bn.MaBNhan equals kb.MaBNhan
                                                       select new { bn.GTinh, ttbx.CanNang_ChieuCao, bn.TenBNhan, bn.NamSinh, bn.NgaySinh, bn.ThangSinh, bn.NNhap, kb.MaICD, kb.ChanDoan, kb.BenhKhac, kb.IDKB, bn.SThe, bn.DChi, kb.GhiChu, bn.NoiTru, bn.DTNT, kb.MaICD2, ttbx.NThan }).OrderByDescending(p => p.IDKB).ToList();
                                            if (ttd.Count > 0)
                                            {
                                                if (ttd.First().NoiTru == 0 && ttd.First().DTNT == false)
                                                    x = 0;
                                                if (DungChung.Bien.MaBV == "24272")
                                                {
                                                    repd._TenBNhan.Value = ttd.First().TenBNhan.ToUpper();
                                                }
                                                else
                                                {
                                                    repd._TenBNhan.Value = ttd.First().TenBNhan;
                                                }
                                                repd.MaBN_Barcode.Value = _int_maBN.ToString();
                                                string Tuoi = "";
                                                Tuoi = Bien.MaBV == "14018" ? DungChung.Ham.TinhTuoiBenhNhan(_data, _int_maBN) : DungChung.Ham.TuoitheoThang(_data, _int_maBN, "72-00");
                                                repd.Tuoi.Value = Bien.MaBV == "24012" ? ttd.First().NamSinh + " (" + Tuoi + " tuổi)" : Tuoi;
                                                repd.lblTuoi.Text = "Tuổi:";
                                                if (ttd.First().CanNang_ChieuCao != null && ttd.First().CanNang_ChieuCao.Contains(";"))
                                                {
                                                    repd.CanNang.Value = ttd.First().CanNang_ChieuCao.Split(';')[0];
                                                }
                                                else
                                                    repd.CanNang.Value = ttd.First().CanNang_ChieuCao;

                                                if (Tuoi.Length > 2)
                                                {
                                                    if (!string.IsNullOrEmpty(ttd.First().NThan) && ttd.First().NThan.Contains(";"))
                                                    {
                                                        string[] arrnt = ttd.First().NThan.Split(';');
                                                        repd.paraHoTenNguoiThan.Value = "- Tên bố hoặc mẹ của trẻ hoặc người đưa trẻ đến khám bệnh, chữa bệnh: " + arrnt[0];
                                                        repd.CMTND.Value = arrnt[1];
                                                    }
                                                    else
                                                    {
                                                        repd.paraHoTenNguoiThan.Value = "- Tên bố hoặc mẹ của trẻ hoặc người đưa trẻ đến khám bệnh, chữa bệnh: " + ttd.First().NThan;
                                                    }
                                                }
                                                if (Bien.MaBV == "24012" || Bien.MaBV == "24389")
                                                {
                                                    switch (ttd.First().GTinh)
                                                    {
                                                        case 1:
                                                            repd.xrLabel11.Text = "Nam/Nữ: Nam";
                                                            break;

                                                        case 0:
                                                            repd.xrLabel11.Text = "Nam/Nữ: Nữ";
                                                            break;
                                                    }
                                                }
                                                else
                                                {
                                                    switch (ttd.First().GTinh)
                                                    {
                                                        case 1:
                                                            repd.Nam.Value = "/";
                                                            break;
                                                        case 0:
                                                            repd.Nam.Value = "/";
                                                            break;
                                                    }
                                                }
                                                var bnkb1 = _data.BNKBs.Where(p => p.IDKB == id).FirstOrDefault();
                                                if (Bien.MaBV == "12345")
                                                {
                                                    if (bnkb1 != null)
                                                    {
                                                        if (!string.IsNullOrEmpty(bnkb1.MaICD))
                                                        {
                                                            repd.ICD.Value = bnkb1.MaICD;
                                                            repd.ChanDoan.Value = "Chẩn đoán: " + bnkb1.ChanDoan;
                                                        }
                                                        else
                                                        {
                                                            repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham.FreshString(bnkb1.BenhKhac);
                                                        }
                                                    }
                                                }
                                                else if (Bien.MaBV == "24297")
                                                {
                                                    if (bnkb1 != null)
                                                    {
                                                        var kp = _data.KPhongs.FirstOrDefault(p => p.MaKP == bnkb1.MaKP);
                                                        if (kp != null)
                                                        {
                                                            if (kp.IsDongY == true)
                                                            {
                                                                repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham.GetChanDoanKB_ByKP(_data, _int_maBN, kp.MaKP);
                                                                //if (!string.IsNullOrEmpty(bnkb1.MaICD))
                                                                //{
                                                                //    repd.ICD.Value = bnkb1.MaICD;
                                                                //    string icds = bnkb1.MaICD + ";" + bnkb1.MaICD2;
                                                                //    var icd = _data.ICD10.Where(o => true).ToList();
                                                                //    //repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham.GhepChuoiChanDoanYHCT(icd, "", icds);

                                                                //}
                                                            }
                                                            else

                                                                repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham.FreshString(bnkb1.ChanDoan) + ";" + DungChung.Ham.FreshString(bnkb1.BenhKhac);
                                                        }
                                                    }
                                                }
                                                else if (Bien.MaBV == "14018")
                                                {
                                                    repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham.GetChanDoanKB(_data, _int_maBN);
                                                }
                                                else if (Bien.MaBV == "14017" || Bien.MaBV == "24012" || Bien.MaBV == "24389")
                                                {
                                                    string[] _MaICDarr = DungChung.Ham.getMaICDarrFull_SL(_data, _int_maBN, Bien.GetICD, id);
                                                    string[] icd = _MaICDarr[0].Split(';');
                                                    string[] tenicd = _MaICDarr[1].Split(';');
                                                    string lydo = "";
                                                    if (icd.Length <= tenicd.Length)
                                                    {
                                                        for (int i = 0; i < icd.Length; i++)
                                                        {
                                                            if (icd[i] != "")
                                                            {
                                                                lydo += icd[i] + " - " + tenicd[i] + "; ";//minhvd
                                                            }
                                                            else
                                                            {
                                                                lydo += tenicd[i] + "; ";
                                                            }
                                                        }
                                                        if (icd.Length < tenicd.Length)
                                                        {
                                                            int cut1 = tenicd.Length - icd.Length;
                                                            int cut = tenicd.Length - cut1;
                                                            string mab1k = DungChung.Ham.FreshString(string.Join("; ", tenicd.Skip(cut)));
                                                            lydo += mab1k + "; ";
                                                        }
                                                    }
                                                    else
                                                    {
                                                        for (int i = 0; i < tenicd.Length; i++)
                                                        {
                                                            lydo += icd[i] + " - " + tenicd[i] + "; ";
                                                        }
                                                    }
                                                    if (Bien.MaBV == "24012" || Bien.MaBV == "24389")
                                                    {
                                                        var a = ttd.First().BenhKhac.Split(';');
                                                        var b = ttd.First().MaICD2.Split(';');

                                                        repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham.FreshString(lydo);
                                                        //repd.ChanDoan.Value += ";  " + b[0] + "-" + a[0] + ";  " + b[1] + "-" + a[1] + ";  " + b[2] + "-" + a[2]; ;
                                                    }
                                                    else
                                                    {
                                                        repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham.FreshString(lydo);
                                                    }
                                                }
                                                else
                                                {
                                                    repd.ICD.Value = DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, 0)[0]);
                                                    if (Bien.MaBV == "20001")
                                                    {
                                                        string cdyhct = DungChung.Ham.GetMaYHCT(DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, 0)[0]), _data.ICD10.ToList())[1];
                                                        repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, id)[1]), cdyhct); //cdyhct + "[" + DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, id)[1]) + "]";
                                                    }
                                                    else
                                                        repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, id)[1]);
                                                }

                                                repd.SThe.Value = ttd.First().SThe;

                                                if (Bien.MaBV == "30007")//in theo id khám bệnh của kp in đơn
                                                {
                                                    if (bnkb1 != null)
                                                    {
                                                        string macb = bnkb1.MaCB;
                                                        var ttcb = _data.CanBoes.Where(p => p.MaCB == macb).FirstOrDefault();
                                                        if (ttcb != null)
                                                        {
                                                            repd.TenCB.Value = ttcb.CapBac + ": " + ttcb.TenCB;
                                                        }
                                                        int makp1 = bnkb1.MaKP ?? 0;
                                                        var ttkp = _data.KPhongs.Where(p => p.MaKP == makp1).FirstOrDefault();
                                                        if (ttkp != null)
                                                        {
                                                            repd.TenKP.Value = ttkp.TenKP;
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    repd.TenCB.Value = ktkd.First().CapBac + ": " + ktkd.First().TenCB;
                                                    repd.SDTCB.Value = Bien.MaBV == "27001" ? "SĐT:" + ktkd.First().SoDT : "";
                                                    repd.SDTBS.Value = Bien.MaBV == "01830" ? ((ktkd.First().SoDT != null && ktkd.First().SoDT != "") ? ("SĐT:" + ktkd.First().SoDT) : "") : "";
                                                    repd.TenKP.Value = ktkd.First().TenKP;
                                                }
                                                repd.DiaChi.Value = "Địa chỉ liên hệ: " + ttd.First().DChi;

                                                repd._MaBNhan.Value = _int_maBN.ToString();
                                                if (Bien.MaBV != "20001")
                                                    repd.MaBN.Value = "Mã BN: " + _int_maBN.ToString();
                                                if (ktkd.First().NgayKe.Value.Day > 0)
                                                    repd.ngayke.Value = DungChung.Ham.NgaySangChu(ktkd.First().NgayKe.Value);
                                            }
                                            if (Bien.MaBV == "24012" || Bien.MaBV == "24389")
                                            {
                                                var qd1 = (from dt in _data.DThuocs.Where(p => p.MaBNhan == _int_maBN).Where(p => p.IDDon == _IDDon).Where(p => p.PLDV == 1)
                                                           join dtct in _data.DThuoccts.Where(p => (Bien.MaBV == "24012" || Bien.MaBV == "24389") ? true : (p.TrongBH != 2)) on dt.IDDon equals dtct.IDDon
                                                           join dv in _data.DichVus.Where(o => (Bien.MaBV == "30010" && !printCongKham) ? o.IDNhom != 13 : true) on dtct.MaDV equals dv.MaDV
                                                           join tn in _data.TieuNhomDVs.Where(p => Bien.MaBV == "12122" ? p.IDNhom == 4 : true) on dv.IdTieuNhom equals tn.IdTieuNhom
                                                           where tn.TenRG != "Thuốc gây nghiện" && tn.TenRG != "Thuốc hướng tâm thần"
                                                           select new { MaTam = dv.MaTam, TenTNRG = tn.TenRG, dv.TenRG, TenDV = _maCQCQ == "00000" ? dv.TenHC + " " + dv.HamLuong : ((Bien.MaBV == "12345" || Bien.MaBV == "24297") ? ((dv.TenDV ?? "") + " (" + (dv.TenHC ?? "") + ") " + (dv.HamLuong ?? "")) : ((dv.TenHC.Contains(",") || dv.TenHC.Contains("+") || dv.TenHC.Contains(";")) ? dv.TenDV : (dv.TenDV + " (" + dv.TenHC + ") " + dv.HamLuong))), dv.TenHC, dv.HamLuong, dv.MaDV, dv.DonVi, dtct.SoLuong, dtct.IDDonct, dtct.GhiChu, HuongDan = "", DuongD = dtct.DuongD ?? "", SoLan = dtct.SoLan ?? "", MoiLan = dtct.MoiLan ?? "", Luong = dtct.Luong ?? "", DviUong = dtct.DviUong ?? "", LoiDan = dt.GhiChu, TenDVMain = dv.TenDV }).OrderBy(p => p.IDDonct).ToList();

                                                var qd2 = (from dv in qd1.Where(p => Bien.MaBV == "27022" ? p.TenTNRG != Bien.st_TieuNhomRG_ChuyenKhoa.ThucPhamChucNang : true)
                                                           group dv by new { dv.TenDV, dv.MaDV, dv.DonVi, dv.HamLuong, dv.TenRG, dv.MaTam, dv.IDDonct } into kq
                                                           select new InDonClass { TenDV = (Bien.MaBV == "24009" || _maCQCQ == "24009") ? kq.Key.TenRG : kq.Key.TenDV, HamLuong = kq.Key.HamLuong, MaDV = kq.Key.MaDV, DonVi = kq.Key.DonVi, SoLuong = kq.Sum(p => p.SoLuong), HuongDan = kq.First().DuongD + " " + kq.First().SoLan + " " + kq.First().MoiLan + " " + kq.First().Luong + " " + kq.First().DviUong + " " + "; " + kq.First().GhiChu, TenHC = kq.First().TenHC, TenDVMain = kq.First().TenDVMain, IDDonct = kq.Key.IDDonct, MaTam = kq.Key.MaTam }).OrderBy(p => p.IDDonct).ToList();
                                                if (qd2 != null && qd2.Count > 0 && (Bien.MaBV == "27183" || Bien.MaBV == "27023"))
                                                {
                                                    foreach (var item in qd2)
                                                    {
                                                        item.TenDV = !string.IsNullOrEmpty(item.TenHC) ? ((item.TenHC.Contains(".") || item.TenHC.Contains(",") || item.TenHC.Contains("+") || item.TenHC.Contains(";")) ? (item.TenDVMain + " (" + item.HamLuong) + ")" : item.TenDV) : item.TenDV;
                                                    }
                                                }
                                                if (qd2 != null && qd2.Count > 0 && (Bien.MaBV == "24012"))
                                                {
                                                    foreach (var item in qd2)
                                                    {
                                                        //item.TenDV = !string.IsNullOrEmpty(item.TenHC) ? ((item.TenHC.Contains(".") || item.TenHC.Contains(",") || item.TenHC.Contains("+") || item.TenHC.Contains(";")) ? (item.TenDV + " (" + item.TenHC) + ")" : item.HamLuong) : item.TenDV;
                                                        item.TenDV = item.TenDVMain + " (" + item.TenHC + ") " + item.HamLuong;
                                                    }
                                                }

                                                repd.LoiDanBS.Value = qd1.Count > 0 ? qd1.First().LoiDan : "";
                                                repd.LoiDanBS.Value += Bien.MaBV == "24012" ? "\n\n\n" : "";

                                                if (Bien.MaBV == "24012")
                                                {
                                                    var arr = qd2.ToList();
                                                    var d1 = (from a in arr
                                                              group a by a.MaDV into kq
                                                              let count = kq.Count()
                                                              where count > 1
                                                              select kq.Key);
                                                    List<InDonClass> arrNew = new List<InDonClass>();
                                                    if (d1.Count() > 0)
                                                    {
                                                        foreach (var item in d1)
                                                        {
                                                            var qd21 = qd2.Where(p => p.MaDV == item).ToList();
                                                            InDonClass newDon = new InDonClass();
                                                            newDon.TenDV = qd21.First().TenDV;
                                                            newDon.HamLuong = qd21.First().HamLuong;
                                                            newDon.MaDV = qd21.First().MaDV;
                                                            newDon.DonVi = qd21.First().DonVi;
                                                            newDon.HuongDan = qd21.First().HuongDan;
                                                            newDon.TenHC = qd21.First().TenHC;
                                                            newDon.TenDVMain = qd21.First().TenDVMain;
                                                            newDon.IDDonct = qd21.First().IDDonct;
                                                            newDon.MaTam = qd21.First().MaTam;
                                                            newDon.SoLuong = qd21.Sum(p => p.SoLuong);
                                                            arrNew.Add(newDon);
                                                        }
                                                    }
                                                    var qd22 = qd2.Where(p => !d1.Contains(p.MaDV)).ToList();
                                                    foreach (var a in qd22)
                                                    {
                                                        InDonClass newDon = new InDonClass();
                                                        newDon.TenDV = a.TenDV;
                                                        newDon.HamLuong = a.HamLuong;
                                                        newDon.MaDV = a.MaDV;
                                                        newDon.DonVi = a.DonVi;
                                                        newDon.HuongDan = a.HuongDan;
                                                        newDon.TenHC = a.TenHC;
                                                        newDon.TenDVMain = a.TenDVMain;
                                                        newDon.IDDonct = a.IDDonct;
                                                        newDon.MaTam = a.MaTam;
                                                        newDon.SoLuong = a.SoLuong;
                                                        arrNew.Add(newDon);
                                                    }
                                                    repd.DataSource = arrNew.OrderBy(p => p.IDDonct);
                                                }
                                                else
                                                    repd.DataSource = qd2.ToList();
                                                repd.ThuKho.Value = Bien.ThuKho;
                                                repd.BindData();
                                                repd.CreateDocument();
                                                frm.prcIN.PrintingSystem = repd.PrintingSystem;
                                                frm.ShowDialog();
                                                //TenDV =  ((dv.TenHC.Contains(",") || dv.TenHC.Contains("+") || dv.TenHC.Contains(";")) ? dv.TenDV : (dv.TenHC + " (" + dv.TenDV + ") " + dv.HamLuong))
                                            }
                                            else
                                            {
                                                var qd1 = (from dt in _data.DThuocs.Where(p => p.MaBNhan == _int_maBN).Where(p => p.IDDon == _IDDon).Where(p => p.PLDV == 1)
                                                           join dtct in _data.DThuoccts.Where(p => (Bien.MaBV == "27023" || Bien.MaBV == "20001" || Bien.MaBV == "30005" || Bien.MaBV == "30010") ? true : (p.TrongBH != 2)) on dt.IDDon equals dtct.IDDon
                                                           join dv in _data.DichVus.Where(o => (Bien.MaBV == "30010" && !printCongKham) ? o.IDNhom != 13 : true) on dtct.MaDV equals dv.MaDV
                                                           join tn in _data.TieuNhomDVs.Where(p => Bien.MaBV == "12122" ? p.IDNhom == 4 : true) on dv.IdTieuNhom equals tn.IdTieuNhom
                                                           where tn.TenRG != "Thuốc gây nghiện" && tn.TenRG != "Thuốc hướng tâm thần"
                                                           select new { dt.KieuDon, MaTam = dv.MaTam, TenTNRG = tn.TenRG, dv.TenRG, TenDV = _maCQCQ == "00000" ? dv.TenHC + " " + dv.HamLuong : ((Bien.MaBV == "12345" || Bien.MaBV == "24297" || Bien.MaBV == "27194") ? ((dv.TenDV ?? "") + " (" + (dv.TenHC ?? "") + ") " + (dv.HamLuong ?? "")) : ((dv.TenHC.Contains(",") || dv.TenHC.Contains("+") || dv.TenHC.Contains(";")) ? dv.TenDV : (dv.TenHC + " (" + dv.TenDV + ") " + dv.HamLuong))), dv.TenHC, dv.HamLuong, dv.MaDV, dv.DongY, dv.DonVi, dtct.SoLuong, dtct.IDDonct, dtct.GhiChu, HuongDan = "", DuongD = dtct.DuongD ?? "", SoLan = dtct.SoLan ?? "", MoiLan = dtct.MoiLan ?? "", Luong = dtct.Luong ?? "", DviUong = dtct.DviUong ?? "", LoiDan = dt.GhiChu, TenDVMain = dv.TenDV }).OrderBy(p => p.IDDonct).ToList();
                                                //(Bien.MaBV == "27023" || Bien.MaBV == "08602" || (Bien.MaBV == "12001" && dv.TenTNRG != Bien.st_TieuNhomRG_ChuyenKhoa.ThuocThuong_CPYHCT)) ? (dv.TenHC + "(" + dv.TenDV + ")" + " " + dv.HamLuong) : ((Bien.MaBV == "04011" || Bien.MaBV == "24009" || _maCQCQ == "24009") ? dv.TenRG : (Bien.MaTinh == "12" ? dv.TenDV + "( " + dv.HamLuong + " )" : dv.TenDV))
                                                var qd2 = (from dv in qd1.Where(p => Bien.MaBV == "27022" ? p.TenTNRG != Bien.st_TieuNhomRG_ChuyenKhoa.ThucPhamChucNang : true)
                                                           group dv by new { dv.TenDV, dv.MaDV, dv.DonVi, dv.HamLuong, dv.TenRG, dv.MaTam, dv.IDDonct } into kq
                                                           select new InDonClass { TenDV = (Bien.MaBV == "24009" || _maCQCQ == "24009") ? kq.Key.TenRG : kq.Key.TenDV, HamLuong = kq.Key.HamLuong, MaDV = kq.Key.MaDV, DonVi = kq.Key.DonVi, SoLuong = kq.Sum(p => p.SoLuong), HuongDan = kq.First().DuongD + " " + kq.First().SoLan + " " + kq.First().MoiLan + " " + kq.First().Luong + " " + kq.First().DviUong + " " + "; " + kq.First().GhiChu, TenHC = kq.First().TenHC, TenDVMain = kq.First().TenDVMain, IDDonct = kq.Key.IDDonct, MaTam = kq.Key.MaTam }).OrderBy(p => p.IDDonct).ToList();
                                                if (qd1.First().DongY == 1 && DungChung.Bien.MaBV == "24272")
                                                {
                                                    qd2 = (from dv in qd1.Where(p => Bien.MaBV == "27022" ? p.TenTNRG != Bien.st_TieuNhomRG_ChuyenKhoa.ThucPhamChucNang : true)
                                                           group dv by new { dv.TenDV, dv.MaDV, dv.DonVi, dv.HamLuong, dv.TenRG, dv.MaTam, dv.IDDonct } into kq
                                                           select new InDonClass { TenDV = (Bien.MaBV == "24009" || _maCQCQ == "24009") ? kq.Key.TenRG : kq.Key.TenDV, HamLuong = kq.Key.HamLuong, MaDV = kq.Key.MaDV, DonVi = kq.Key.DonVi, SoLuong = kq.Sum(p => p.SoLuong), HuongDan = kq.First().GhiChu, TenHC = kq.First().TenHC, TenDVMain = kq.First().TenDVMain, IDDonct = kq.Key.IDDonct, MaTam = kq.Key.MaTam }).OrderBy(p => p.IDDonct).ToList();
                                                }
                                                if (DungChung.Bien.MaBV == "30372")
                                                {
                                                    if (qd1.First().KieuDon == 6)
                                                    {
                                                        repd.Parameters["TieuDe_30372"].Value = "ĐƠN THUỐC DỊCH VỤ";
                                                    }
                                                    else
                                                    {
                                                        repd.Parameters["TieuDe_30372"].Value = "ĐƠN THUỐC";
                                                    }
                                                }
                                                if (qd2 != null && qd2.Count > 0 && (Bien.MaBV == "27183" || Bien.MaBV == "27023"))
                                                {
                                                    foreach (var item in qd2)
                                                    {
                                                        item.TenDV = !string.IsNullOrEmpty(item.TenHC) ? ((item.TenHC.Contains(".") || item.TenHC.Contains(",") || item.TenHC.Contains("+") || item.TenHC.Contains(";")) ? (item.TenDVMain + " (" + item.HamLuong) + ")" : item.TenDV) : item.TenDV;
                                                    }
                                                }
                                                if (qd2 != null && qd2.Count > 0 && Bien.MaBV == "24272")
                                                {
                                                    foreach (var item in qd2)
                                                    {
                                                        item.TenDV = item.TenDVMain + (item.TenHC.Contains(",") || item.TenHC.Contains("+") || item.TenHC.Contains(";") ? "" : (" (" + item.TenHC + ") ")) + (item.HamLuong.Contains("+") || item.HamLuong.Contains(";") ? "" : item.HamLuong);
                                                    }
                                                }
                                                if (DungChung.Bien.MaBV == "24272")
                                                {
                                                    repd.SubBand1.Visible = false;
                                                    repd.SubBand5.Visible = false;
                                                    repd.SubBand3.Visible = false;
                                                    repd.SubBand4.Visible = false;
                                                    repd.SB_Header_TraThuocNgoaiTru.Visible = false;
                                                    repd.SubBand8.Visible = false;
                                                    repd.SubBand6.Visible = false;
                                                    repd.sub_24272.Visible = true;
                                                    repd.sub_24272_1.Visible = true;
                                                    repd.sub_24272_1_2.Visible = true;
                                                    //repd.sub_24272_2.Visible = true;
                                                    repd.sub_24272_3.Visible = true;
                                                    if (qd1.Count > 0)
                                                    {
                                                        foreach (var a in qd1)
                                                        {
                                                            if (qd1.First().DongY == 1)
                                                            {
                                                                if (ttd.First().GTinh == 1)
                                                                {
                                                                    repd.Nam.Value = "Nam";
                                                                }
                                                                else if (ttd.First().GTinh == 0)
                                                                {
                                                                    repd.Nam.Value = "Nữ";
                                                                }
                                                                repd.Parameters["TieuDe"].Value = "ĐƠN THUỐC THANG NGOẠI TRÚ";
                                                                repd.Parameters["CQ"].Value = DungChung.Bien.TenCQ;
                                                                repd.Parameters["DiaChiCQ"].Value = DungChung.Bien.DiaChi;
                                                                repd.Parameters["DTCQ"].Value = DungChung.Bien.SDTCQ;
                                                                repd.xrLabel141.Font = new DevExpress.Drawing.DXFont("Times New Roman", 9.75F);
                                                                repd.xrLabel142.Font = new DevExpress.Drawing.DXFont("Times New Roman", 9.75F);
                                                                if (qd1.First().LoiDan == null)
                                                                {
                                                                    repd.Parameters["SoLuong1"].Value = "";
                                                                    repd.Parameters["TuNgay"].Value = "";
                                                                    repd.Parameters["DenNgay"].Value = "";
                                                                }
                                                                else
                                                                {
                                                                    string[] loiDan = qd1.First().LoiDan.Split(';');
                                                                    if (loiDan.Count() == 1)
                                                                    {
                                                                        repd.Parameters["SoLuong1"].Value = qd1.First().LoiDan.Split(';')[0];
                                                                        repd.Parameters["TuNgay"].Value = "";
                                                                        repd.Parameters["DenNgay"].Value = "";
                                                                    }
                                                                    else if (loiDan.Count() == 2)
                                                                    {
                                                                        repd.Parameters["SoLuong1"].Value = qd1.First().LoiDan.Split(';')[0];
                                                                        repd.Parameters["TuNgay"].Value = qd1.First().LoiDan.Split(';')[1];
                                                                        repd.Parameters["DenNgay"].Value = "";
                                                                    }
                                                                    else if (loiDan.Count() > 2)
                                                                    {
                                                                        repd.Parameters["SoLuong1"].Value = qd1.First().LoiDan.Split(';')[0];
                                                                        repd.Parameters["TuNgay"].Value = qd1.First().LoiDan.Split(';')[1];
                                                                        repd.Parameters["DenNgay"].Value = qd1.First().LoiDan.Split(';')[2];
                                                                        if (Convert.ToDateTime(qd1.First().LoiDan.Split(';')[1]) > Convert.ToDateTime(qd1.First().LoiDan.Split(';')[2]))
                                                                        {
                                                                            repd.Parameters["TuNgay"].Value = qd1.First().LoiDan.Split(';')[1];
                                                                            repd.Parameters["DenNgay"].Value = qd1.First().LoiDan.Split(';')[1];
                                                                        }
                                                                        repd.LoiDanBS.Value = "";
                                                                        if (loiDan.Count() == 4)
                                                                        {
                                                                            repd.LoiDanBS.Value = qd1.First().LoiDan.Split(';')[3];
                                                                        }
                                                                        else if (loiDan.Count() == 5)
                                                                        {
                                                                            repd.LoiDanBS.Value = qd1.First().LoiDan.Split(';')[3] + ", " + qd1.First().LoiDan.Split(';')[4];
                                                                        }
                                                                        else if (loiDan.Count() == 6)
                                                                        {
                                                                            repd.LoiDanBS.Value = qd1.First().LoiDan.Split(';')[3] + ", " + qd1.First().LoiDan.Split(';')[4] + ", " + qd1.First().LoiDan.Split(';')[5];
                                                                        }
                                                                    }
                                                                }

                                                            }
                                                            else
                                                            {
                                                                repd.SubBand5.Visible = false;
                                                                repd.SubBand3.Visible = true;
                                                                repd.SubBand4.Visible = false;
                                                                repd.SubBand8.Visible = false;
                                                                repd.SubBand6.Visible = true;
                                                                repd.Parameters["TieuDe"].Value = "ĐƠN THUỐC";
                                                                repd.Parameters["CQ"].Value = DungChung.Bien.TenCQ;
                                                                repd.Parameters["DiaChiCQ"].Value = DungChung.Bien.DiaChi;
                                                                repd.Parameters["DTCQ"].Value = DungChung.Bien.SDTCQ;
                                                                if (qd1.First().LoiDan == null)
                                                                {
                                                                    repd.Parameters["SoLuong1"].Value = "";
                                                                    repd.Parameters["TuNgay"].Value = "";
                                                                    repd.Parameters["DenNgay"].Value = "";
                                                                }
                                                                else
                                                                {
                                                                    string[] loiDan = qd1.First().LoiDan.Split(';');
                                                                    if (loiDan.Count() == 1)
                                                                    {
                                                                        repd.Parameters["SoLuong1"].Value = qd1.First().LoiDan.Split(';')[0];
                                                                        repd.Parameters["TuNgay"].Value = "";
                                                                        repd.Parameters["DenNgay"].Value = "";
                                                                    }
                                                                    else if (loiDan.Count() == 2)
                                                                    {
                                                                        repd.Parameters["SoLuong1"].Value = qd1.First().LoiDan.Split(';')[0];
                                                                        repd.Parameters["TuNgay"].Value = qd1.First().LoiDan.Split(';')[1];
                                                                        repd.Parameters["DenNgay"].Value = "";
                                                                    }
                                                                    else
                                                                    {
                                                                        repd.Parameters["SoLuong1"].Value = qd1.First().LoiDan.Split(';')[0];
                                                                        repd.Parameters["TuNgay"].Value = qd1.First().LoiDan.Split(';')[1];
                                                                        repd.Parameters["DenNgay"].Value = qd1.First().LoiDan.Split(';')[2];
                                                                        if (Convert.ToDateTime(qd1.First().LoiDan.Split(';')[1]) > Convert.ToDateTime(qd1.First().LoiDan.Split(';')[2]))
                                                                        {
                                                                            repd.Parameters["TuNgay"].Value = qd1.First().LoiDan.Split(';')[1];
                                                                            repd.Parameters["DenNgay"].Value = qd1.First().LoiDan.Split(';')[1];
                                                                        }
                                                                        repd.LoiDanBS.Value = "";
                                                                        if (loiDan.Count() == 4)
                                                                        {
                                                                            repd.LoiDanBS.Value = qd1.First().LoiDan.Split(';')[3];
                                                                        }
                                                                        else if (loiDan.Count() == 5)
                                                                        {
                                                                            repd.LoiDanBS.Value = qd1.First().LoiDan.Split(';')[3] + ", " + qd1.First().LoiDan.Split(';')[4];
                                                                        }
                                                                        else if (loiDan.Count() == 6)
                                                                        {
                                                                            repd.LoiDanBS.Value = qd1.First().LoiDan.Split(';')[3] + ", " + qd1.First().LoiDan.Split(';')[4] + ", " + qd1.First().LoiDan.Split(';')[5];
                                                                        }
                                                                    }

                                                                }
                                                            }
                                                        }
                                                    }


                                                }
                                                else
                                                {
                                                    repd.LoiDanBS.Value = qd1.Count > 0 ? qd1.First().LoiDan : "";
                                                }
                                                if (DungChung.Bien.MaBV == "24272")
                                                {
                                                    if (qd1.First().DongY == 1)
                                                    {
                                                        repd.sub_24272_3.Visible = false;
                                                        repd.sub_24272_1_2.Visible = false;
                                                        repd.sub_24272_DY.Visible = true;
                                                        //repd.xrPanel7.Visible = true;
                                                    }
                                                    else
                                                    {
                                                        repd.sub_24272.Visible = false;
                                                        repd.sub_24272_1.Visible = false;
                                                        repd.sub_24272_2.Visible = true;
                                                    }
                                                }
                                                repd.DataSource = qd2.ToList();
                                                repd.ThuKho.Value = Bien.ThuKho;
                                                repd.BindData();
                                                repd.CreateDocument();
                                                frm.prcIN.PrintingSystem = repd.PrintingSystem;
                                                frm.ShowDialog();
                                                //TenDV =  ((dv.TenHC.Contains(",") || dv.TenHC.Contains("+") || dv.TenHC.Contains(";")) ? dv.TenDV : (dv.TenHC + " (" + dv.TenDV + ") " + dv.HamLuong))
                                            }
                                        }
                                    }
                                    #endregion
                                    #region 30350
                                    else if (Bien.MaBV == "30350")
                                    {
                                        BaoCao.repDonThuoc_TT05_A4_30350 repd = new BaoCao.repDonThuoc_TT05_A4_30350();
                                        int x = 1;
                                        repd._idDon.Value = ktkd.First().IDDon;
                                        var ttd = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _int_maBN)
                                                   join ttbx in _data.TTboXungs on bn.MaBNhan equals ttbx.MaBNhan
                                                   join kb in _data.BNKBs on bn.MaBNhan equals kb.MaBNhan
                                                   select new { bn.GTinh, ttbx.CanNang_ChieuCao, bn.TenBNhan, bn.NamSinh, bn.NgaySinh, bn.ThangSinh, bn.NNhap, kb.MaICD, kb.ChanDoan, kb.BenhKhac, kb.IDKB, bn.SThe, bn.DChi, kb.GhiChu, bn.NoiTru, bn.DTNT, ttbx.NThan }).OrderByDescending(p => p.IDKB).ToList();
                                        if (ttd.Count > 0)
                                        {
                                            if (ttd.First().NoiTru == 0 && ttd.First().DTNT == false)
                                                x = 0;
                                            repd._TenBNhan.Value = ttd.First().TenBNhan;
                                            string Tuoi = "";
                                            Tuoi = DungChung.Ham.TuoitheoThang(_data, _int_maBN, "72-00");
                                            repd.Tuoi.Value = Tuoi;
                                            repd.lblTuoi.Text = "Tuổi:";

                                            if (Tuoi.Length > 2)
                                            {
                                                if (!string.IsNullOrEmpty(ttd.First().NThan) && ttd.First().NThan.Contains(";"))
                                                {
                                                    string[] arrnt = ttd.First().NThan.Split(';');
                                                    repd.paraHoTenNguoiThan.Value = arrnt[0];
                                                    repd.CMTND.Value = arrnt[1];
                                                }
                                                else
                                                {
                                                    repd.paraHoTenNguoiThan.Value = ttd.First().NThan;
                                                }
                                            }
                                            switch (ttd.First().GTinh)
                                            {
                                                case 1:
                                                    repd.GTinh.Value = "Nam";
                                                    repd.Nu.Value = "/";
                                                    break;

                                                case 0:
                                                    repd.GTinh.Value = "Nữ";
                                                    repd.Nam.Value = "/";
                                                    break;
                                            }
                                            repd.ICD.Value = DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, 0)[0]);
                                            repd.SThe.Value = ttd.First().SThe;
                                            repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, id)[1]);
                                            repd.TenCB.Value = ktkd.First().CapBac + ": " + ktkd.First().TenCB;
                                            //repd.SDTBS.Value = (ktkd.First().SoDT != null && ktkd.First().SoDT != "") ? ("SĐT:" + ktkd.First().SoDT) : "";
                                            repd.TenKP.Value = ktkd.First().TenKP;
                                            repd.DiaChi.Value = ttd.First().DChi;

                                            repd._MaBNhan.Value = _int_maBN.ToString();
                                            if (Bien.MaBV != "20001")
                                                repd.MaBN.Value = "Mã BN: " + _int_maBN.ToString();
                                            if (ktkd.First().NgayKe.Value.Day > 0)
                                                repd.ngayke.Value = DungChung.Ham.NgaySangChu(ktkd.First().NgayKe.Value);
                                        }

                                        var qd1 = (from dt in _data.DThuocs.Where(p => p.MaBNhan == _int_maBN).Where(p => p.IDDon == _IDDon).Where(p => p.PLDV == 1)
                                                   join dtct in _data.DThuoccts.Where(p => Bien.MaBV == "12122" ? true : p.TrongBH != 2) on dt.IDDon equals dtct.IDDon
                                                   join dv in _data.DichVus on dtct.MaDV equals dv.MaDV
                                                   join tn in _data.TieuNhomDVs.Where(p => Bien.MaBV == "12122" ? p.IDNhom == 4 : true) on dv.IdTieuNhom equals tn.IdTieuNhom
                                                   where tn.TenRG != "Thuốc gây nghiện" && tn.TenRG != "Thuốc hướng tâm thần"
                                                   select new { TenTNRG = tn.TenRG, dv.TenRG, TenDV = _maCQCQ == "00000" ? dv.TenHC + " " + dv.HamLuong : ((dv.TenHC.Contains(",") || dv.TenHC.Contains("+") || dv.TenHC.Contains(";")) ? dv.TenDV : (dv.TenHC + " (" + dv.TenDV + ") " + dv.HamLuong)), dv.TenHC, dv.HamLuong, dv.MaDV, dv.DonVi, dtct.SoLuong, dtct.IDDonct, dtct.GhiChu, HuongDan = "", DuongD = dtct.DuongD ?? "", SoLan = dtct.SoLan ?? "", MoiLan = dtct.MoiLan ?? "", Luong = dtct.Luong ?? "", DviUong = dtct.DviUong ?? "", LoiDan = dt.GhiChu }).OrderBy(p => p.IDDonct).ToList();
                                        //(Bien.MaBV == "27023" || Bien.MaBV == "08602" || (Bien.MaBV == "12001" && dv.TenTNRG != Bien.st_TieuNhomRG_ChuyenKhoa.ThuocThuong_CPYHCT)) ? (dv.TenHC + "(" + dv.TenDV + ")" + " " + dv.HamLuong) : ((Bien.MaBV == "04011" || Bien.MaBV == "24009" || _maCQCQ == "24009") ? dv.TenRG : (Bien.MaTinh == "12" ? dv.TenDV + "( " + dv.HamLuong + " )" : dv.TenDV))
                                        var qd2 = (from dv in qd1
                                                   group dv by new { dv.TenDV, dv.MaDV, dv.DonVi, dv.HamLuong } into kq
                                                   select new { TenDV = kq.Key.TenDV, kq.Key.HamLuong, kq.Key.MaDV, kq.Key.DonVi, SoLuong = kq.Sum(p => p.SoLuong), HuongDan = kq.First().DuongD + " " + kq.First().SoLan + " " + kq.First().MoiLan + " " + kq.First().Luong + " " + kq.First().DviUong + ";" + kq.First().GhiChu }).ToList();
                                        repd.paraLoDanBS.Value = qd1.Count > 0 ? qd1.First().LoiDan : "";
                                        repd.DataSource = qd2.ToList();
                                        repd.ThuKho.Value = Bien.ThuKho;
                                        repd.BindData();
                                        repd.CreateDocument();
                                        frm.prcIN.PrintingSystem = repd.PrintingSystem;
                                        frm.ShowDialog();
                                    }
                                    #endregion
                                    else
                                    {
                                        #region chung
                                        BaoCao.repDonThuoc_TT05_12048 repd = new BaoCao.repDonThuoc_TT05_12048();
                                        int x = 1;
                                        repd._idDon.Value = ktkd.First().IDDon;
                                        var ttd = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _int_maBN)
                                                   join ttbx in _data.TTboXungs on bn.MaBNhan equals ttbx.MaBNhan
                                                   join kb in _data.BNKBs on bn.MaBNhan equals kb.MaBNhan
                                                   select new { bn.GTinh, bn.TenBNhan, bn.NamSinh, bn.NgaySinh, bn.ThangSinh, bn.NNhap, kb.MaICD, kb.ChanDoan, kb.BenhKhac, kb.IDKB, bn.SThe, bn.DChi, kb.GhiChu, bn.NoiTru, bn.DTNT, ttbx.NThan }).OrderByDescending(p => p.IDKB).ToList();
                                        if (ttd.Count > 0)
                                        {
                                            if (ttd.First().NoiTru == 0 && ttd.First().DTNT == false)
                                                x = 0;
                                            repd._TenBNhan.Value = ttd.First().TenBNhan;
                                            string Tuoi = "";
                                            Tuoi = DungChung.Ham.TuoitheoThang(_data, _int_maBN, "72-00");
                                            repd.Tuoi.Value = Tuoi;
                                            repd.lblTuoi.Text = "Tuổi:";
                                            if (Tuoi.Length > 2)
                                            {
                                                if (!string.IsNullOrEmpty(ttd.First().NThan) && ttd.First().NThan.Contains(";"))
                                                {
                                                    string[] arrnt = ttd.First().NThan.Split(';');
                                                    repd.paraHoTenNguoiThan.Value = arrnt[0];
                                                    repd.CMTND.Value = arrnt[1];
                                                }
                                                else
                                                {
                                                    repd.paraHoTenNguoiThan.Value = ttd.First().NThan;
                                                }
                                            }
                                            switch (ttd.First().GTinh)
                                            {
                                                case 1:
                                                    repd.GTinh.Value = "Nam";
                                                    repd.Nu.Value = "/";
                                                    break;

                                                case 0:
                                                    repd.GTinh.Value = "Nữ";
                                                    repd.Nam.Value = "/";
                                                    break;
                                            }
                                            repd.ICD.Value = DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, 0)[0]);
                                            repd.SThe.Value = ttd.First().SThe;
                                            if (Bien.MaBV == "20001")
                                            {
                                                string cdyhct = DungChung.Ham.GetMaYHCT(DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, 0)[0]), _data.ICD10.ToList())[1];
                                                repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, id)[1]), cdyhct); //cdyhct + "[" + DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, id)[1]) + "]";
                                            }
                                            else
                                                repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, id)[1]);
                                            repd.TenCB.Value = ktkd.First().CapBac + ": " + ktkd.First().TenCB;
                                            //repd.SDTBS.Value = (ktkd.First().SoDT != null && ktkd.First().SoDT != "") ? ("SĐT:" + ktkd.First().SoDT) : "";
                                            repd.TenKP.Value = ktkd.First().TenKP;
                                            repd.DiaChi.Value = ttd.First().DChi;
                                            repd._MaBNhan.Value = _int_maBN.ToString();
                                            repd.MaBN.Value = "Mã BN: " + _int_maBN.ToString();
                                            if (ktkd.First().NgayKe.Value.Day > 0)
                                                repd.ngayke.Value = DungChung.Ham.NgaySangChu(ktkd.First().NgayKe.Value);
                                        }

                                        var qd1 = (from dt in _data.DThuocs.Where(p => p.MaBNhan == _int_maBN).Where(p => p.IDDon == _IDDon).Where(p => p.PLDV == 1)
                                                   join dtct in _data.DThuoccts.Where(p => Bien.MaBV == "12122" ? true : p.TrongBH != 2) on dt.IDDon equals dtct.IDDon
                                                   join dv in _data.DichVus on dtct.MaDV equals dv.MaDV
                                                   join tn in _data.TieuNhomDVs.Where(p => Bien.MaBV == "12122" ? p.IDNhom == 4 : true) on dv.IdTieuNhom equals tn.IdTieuNhom
                                                   where tn.TenRG != "Thuốc gây nghiện" && tn.TenRG != "Thuốc hướng tâm thần"
                                                   select new { TenTNRG = tn.TenRG, dv.TenRG, TenDV = dv.TenDV, dv.TenHC, dv.HamLuong, dv.MaDV, dv.DonVi, dtct.SoLuong, dtct.IDDonct, dtct.GhiChu, HuongDan = "", DuongD = dtct.DuongD ?? "", SoLan = dtct.SoLan ?? "", MoiLan = dtct.MoiLan ?? "", Luong = dtct.Luong ?? "", DviUong = dtct.DviUong ?? "", LoiDan = dt.GhiChu }).OrderBy(p => p.IDDonct).ToList();
                                        //(Bien.MaBV == "27023" || Bien.MaBV == "08602" || (Bien.MaBV == "12001" && dv.TenTNRG != Bien.st_TieuNhomRG_ChuyenKhoa.ThuocThuong_CPYHCT)) ? (dv.TenHC + "(" + dv.TenDV + ")" + " " + dv.HamLuong) : ((Bien.MaBV == "04011" || Bien.MaBV == "24009" || _maCQCQ == "24009") ? dv.TenRG : (Bien.MaTinh == "12" ? dv.TenDV + "( " + dv.HamLuong + " )" : dv.TenDV))
                                        var qd2 = (from dv in qd1
                                                   select new { TenDV = _maCQCQ == "00000" ? dv.TenHC + " " + dv.HamLuong : ((dv.TenHC.Contains(",") || dv.TenHC.Contains("+") || dv.TenHC.Contains(";")) ? dv.TenDV : (dv.TenHC + " (" + dv.TenDV + ") " + dv.HamLuong)), dv.HamLuong, dv.MaDV, dv.DonVi, dv.SoLuong, dv.IDDonct, HuongDan = dv.DuongD + dv.SoLan + dv.MoiLan + dv.Luong + dv.DviUong + dv.GhiChu, dv.LoiDan }).ToList();
                                        if (qd2.Count > 0 && qd2.First().LoiDan != null)
                                            repd.paraLoDanBS.Value = qd2.First().LoiDan;
                                        repd.DataSource = qd2.OrderBy(p => p.IDDonct).ToList();
                                        repd.ThuKho.Value = Bien.ThuKho;
                                        repd.BindData();
                                        repd.CreateDocument();
                                        frm.prcIN.PrintingSystem = repd.PrintingSystem;
                                        frm.ShowDialog();
                                        #endregion
                                    }
                                }
                            }
                            #endregion
                            #region (Bien.MaBV == "27022" && test.Count > 0)
                            if (Bien.MaBV == "27022" && test.Count > 0)
                            {
                                QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(Bien.StrCon);
                                BaoCao.rep_DThuoc_TuVan rep1 = new BaoCao.rep_DThuoc_TuVan();
                                var qbn = (from bn in data.BenhNhans.Where(p => p.MaBNhan == _int_maBN)
                                           join bnkb in data.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                                           join ttbx in data.TTboXungs on bn.MaBNhan equals ttbx.MaBNhan
                                           select new
                                           {
                                               bn.MaBNhan,
                                               bn.TenBNhan,
                                               bn.Tuoi,
                                               GTinh = bn.GTinh == 1 ? "Nam" : "Nữ",
                                               bn.DChi,
                                               bn.DTuong,
                                               bn.SThe,
                                               bn.HanBHTu,
                                               bn.HanBHDen,
                                               bnkb.ChanDoan,
                                               bnkb.BenhKhac,
                                               ttbx.NThan
                                           }).ToList();

                                if (qbn.Count > 0)
                                {
                                    rep1.lblTuoi.Text = DungChung.Ham.TuoitheoThang(data, _int_maBN, "72-00");//Bien.formatAge);
                                    if (rep1.lblTuoi.Text.Contains("tháng") || rep1.lblTuoi.Text.Contains("ngày"))
                                    {
                                        string[] arr = qbn.FirstOrDefault().NThan.Split(';');
                                        rep1.lblTenBN.Text = arr[0];
                                        rep1.xrLabel2.Text = "Họ tên bố mẹ:";
                                    }
                                    else
                                        rep1.lblTenBN.Text = qbn.FirstOrDefault().TenBNhan.ToUpper();
                                    rep1.lblGTinh.Text = qbn.FirstOrDefault().GTinh;
                                    rep1.lblDChi.Text = qbn.FirstOrDefault().DChi;
                                    rep1.lblChanDoan.Text = DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(data, _IDBN, Bien.GetICD, 0)[1]);
                                }
                                var qdthuoc = (from dt in data.DThuocs.Where(p => p.MaBNhan == _int_maBN)
                                               join cb in data.CanBoes on dt.MaCB equals cb.MaCB
                                               join dtct in data.DThuoccts.Where(p => p.IDDon == _IDDon) on dt.IDDon equals dtct.IDDon
                                               join dv in data.DichVus on dtct.MaDV equals dv.MaDV
                                               join _tn in data.TieuNhomDVs.Where(p => p.TenRG == Bien.st_TieuNhomRG_ChuyenKhoa.ThucPhamChucNang) on dv.IdTieuNhom equals _tn.IdTieuNhom
                                               select new
                                               {
                                                   TenThuoc = dv.TenDV,
                                                   dtct.SoLuong,
                                                   dv.DonVi,
                                                   dtct.DuongD,
                                                   dtct.SoLan,
                                                   dtct.MoiLan,
                                                   dtct.Luong,
                                                   dtct.DviUong,
                                                   dtct.GhiChu,
                                                   CachDung = (dtct.DuongD ?? "") + " " + (dtct.SoLan ?? "") + " " + (dtct.MoiLan ?? "") + " " + (dtct.Luong ?? "") + " " + (dtct.DviUong ?? "") + ", " + dtct.GhiChu,
                                                   cb.TenCB,
                                                   dt.NgayKe
                                               }).ToList();

                                if (qdthuoc.Count > 0)
                                {
                                    rep1.celBS.Text = qdthuoc.FirstOrDefault().TenCB;
                                    DateTime ngayke = Convert.ToDateTime(qdthuoc.First().NgayKe);
                                    rep1.celNgay.Text = "Ngày " + ngayke.Day + " tháng " + ngayke.Month + " năm " + ngayke.Year;
                                    frmIn frm1 = new frmIn();
                                    rep1.DataSource = qdthuoc.ToList();
                                    rep1.BindingData();
                                    rep1.CreateDocument();
                                    frm1.prcIN.PrintingSystem = rep1.PrintingSystem;
                                    frm1.ShowDialog();
                                }
                            }
                            #endregion
                        }
                        #endregion
                        #region (DateTime.Now.Date < Convert.ToDateTime("01/05/2016"))
                        else
                        {
                            BaoCao.repDonThuoc repd = new BaoCao.repDonThuoc();
                            repd._idDon.Value = ktkd.First().IDDon;
                            int _idDon = ktkd.First().IDDon;
                            var ttd = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _int_maBN)
                                       join kb in _data.BNKBs on bn.MaBNhan equals kb.MaBNhan
                                       select new { bn.GTinh, bn.TenBNhan, bn.NamSinh, bn.NgaySinh, bn.ThangSinh, bn.NNhap, kb.MaICD, kb.ChanDoan, kb.BenhKhac, kb.IDKB, bn.SThe, bn.DChi }).OrderByDescending(p => p.IDKB).ToList();
                            if (ttd.Count > 0)
                            {
                                repd._TenBNhan.Value = ttd.First().TenBNhan;
                                repd.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _int_maBN, Bien.formatAge);
                                // KT
                                switch (ttd.First().GTinh)
                                {
                                    case 1:
                                        repd.GTinh.Value = "Nam";
                                        break;

                                    case 0:
                                        repd.GTinh.Value = "Nữ";
                                        break;
                                }

                                repd.ICD.Value = DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, 0)[0]);
                                repd.SThe.Value = ttd.First().SThe;
                                repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, id)[1]);

                                repd.TenCB.Value = ktkd.First().CapBac + ": " + ktkd.First().TenCB;
                                repd.TenKP.Value = ktkd.First().TenKP;
                                repd.DiaChi.Value = ttd.First().DChi;
                                repd._MaBNhan.Value = _int_maBN.ToString();
                                if (ktkd.First().NgayKe.Value.Day > 0)
                                    repd.ngayke.Value = DungChung.Ham.NgaySangChu(ktkd.First().NgayKe.Value);
                            }
                            var qd1 = (from tn in _data.TieuNhomDVs
                                       join dv in _data.DichVus on tn.IdTieuNhom equals dv.IdTieuNhom
                                       join dtct in _data.DThuoccts on dv.MaDV equals dtct.MaDV
                                       where (dtct.IDDon == _IDDon)

                                       select new { dtct.TrongBH, TenDV = Bien.MaBV == "27023" ? (dv.TenHC + " (" + dv.TenDV + ")") : dv.TenDV, dv.MaDV, dv.DonVi, dtct.SoLuong, dtct.IDDonct, HuongDan = dtct.DuongD + dtct.SoLan + dtct.MoiLan + dtct.Luong + dtct.DviUong }).OrderBy(p => p.IDDonct).ToList();

                            if (Bien.MaBV == "24009")
                                repd.CongKhoan.Value = "Cộng: " + qd1.Count + " khoản";
                            else
                                repd.CongKhoan.Value = "Cộng: ............... khoản";
                            if (qd1.Count > 0)
                                repd.DataSource = qd1.Where(p => Bien.MaBV == "30340" ? p.TrongBH == 1 : true).ToList();

                            //rep.ShowPreviewDialog();
                            //rep.DataMember = "Table";
                            repd.ThuKho.Value = Bien.ThuKho;
                            repd.BindData();
                            repd.CreateDocument();
                            frm.prcIN.PrintingSystem = repd.PrintingSystem;

                            frm.ShowDialog();
                            if (Bien.MaBV == "12122")
                            {
                                List<DThuocct> _ldthuocct = _data.DThuoccts.Where(p => p.IDDon == _idDon).Where(p => p.Status != -1).ToList();
                                foreach (DThuocct dtct in _ldthuocct)
                                {
                                    dtct.SoPL = -1;
                                }
                                _data.SaveChanges();
                            }
                        }
                        #endregion
                        break;
                        #endregion
                }//ket thuc switch
            }
            #endregion
        }

        public static void InDonThuocTDuong(int mabn, int iddon)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(Bien.StrCon);
            BaoCao.rep_DThuoc_12001 rep = new BaoCao.rep_DThuoc_12001();
            var qbn = (from bn in data.BenhNhans.Where(p => p.MaBNhan == mabn)
                       join bnkb in data.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                       select new
                       {
                           bn.MaBNhan,
                           bn.TenBNhan,
                           bn.Tuoi,
                           GTinh = bn.GTinh == 1 ? "Nam" : "Nữ",
                           bn.DChi,
                           bn.DTuong,
                           bn.SThe,
                           bn.HanBHTu,
                           bn.HanBHDen,
                           bnkb.ChanDoan,
                           bnkb.BenhKhac
                       }).ToList();

            if (qbn.Count > 0)
            {
                rep.lblMaBN.Text = qbn.FirstOrDefault().MaBNhan.ToString();
                rep.lblTenBN.Text = qbn.FirstOrDefault().TenBNhan.ToUpper();
                rep.lblTuoi.Text = DungChung.Ham.TuoitheoThang(data, mabn, "60-00");//Bien.formatAge);
                rep.lblGTinh.Text = qbn.FirstOrDefault().GTinh;
                rep.lblDChi.Text = qbn.FirstOrDefault().DChi;
                rep.lblDTuong.Text = qbn.FirstOrDefault().DTuong;
                if (qbn.FirstOrDefault().DTuong.Equals("BHYT"))
                {
                    rep.lblSThe.Text = qbn.FirstOrDefault().SThe;
                    rep.lblGiaTriTu.Text = String.Format("{0:dd/MM/yyyy}", qbn.FirstOrDefault().HanBHTu);
                    rep.lblGiaTriDen.Text = String.Format("{0:dd/MM/yyyy}", qbn.FirstOrDefault().HanBHDen);
                }
                int _IDBN = Convert.ToInt32(qbn.FirstOrDefault().MaBNhan.ToString());
                rep.lblMaBenhICD.Text = DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(data, _IDBN, Bien.GetICD, 0)[0]);
                rep.lblChanDoan.Text = DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(data, _IDBN, Bien.GetICD, 0)[1]);
                //string benhkhac = "";
                //if(qbn.LastOrDefault().BenhKhac != null)
                //{
                //    string[] strbenhkhac = qbn.LastOrDefault().BenhKhac.ToString().Split(';');
                //    foreach(var a in strbenhkhac)
                //    {
                //        if (!string.IsNullOrEmpty(a))
                //            benhkhac = benhkhac + ";";
                //    }

                //}
                //rep.lblChanDoan.Text = qbn.LastOrDefault().ChanDoan + benhkhac;//"; " + qbn.LastOrDefault().BenhKhac;
                rep.celTenBN.Text = qbn.FirstOrDefault().TenBNhan;
            }
            var qdthuoc = (from dt in data.DThuocs.Where(p => p.MaBNhan == mabn)
                           join cb in data.CanBoes on dt.MaCB equals cb.MaCB
                           join dtct in data.DThuoccts.Where(p => p.IDDon == iddon) on dt.IDDon equals dtct.IDDon
                           join dv in data.DichVus on dtct.MaDV equals dv.MaDV
                           select new
                           {
                               TenThuoc = dv.TenHC + "," + dv.TenDV + ";" + dv.HamLuong,
                               dtct.SoLuong,
                               dv.DonVi,
                               CachDung = dtct.DuongD + " " + dtct.SoLan + " " + dtct.MoiLan + " " + dtct.Luong + " " + dtct.DviUong,
                               cb.TenCB,
                               dt.NgayKe
                           }).ToList();

            if (qdthuoc.Count > 0)
            {
                rep.celBS.Text = qdthuoc.FirstOrDefault().TenCB;
                rep.lblCong.Text = qdthuoc.Count().ToString();
                DateTime ngayke = Convert.ToDateTime(qdthuoc.First().NgayKe);
                rep.celNgay.Text = "Ngày " + ngayke.Day + " tháng " + ngayke.Month + " năm " + ngayke.Year;
                frmIn frm = new frmIn();
                rep.DataSource = qdthuoc.ToList();
                rep.BindingData();
                rep.CreateDocument();
                frm.prcIN.PrintingSystem = rep.PrintingSystem;
                frm.ShowDialog();
            }
        }

        #endregion

        public static void InDon_TT04(int _IDDon, int _IDBN, int maKP, int id, bool printCongKham = true, int index = 0)
        {
            int _int_maBN = 0;
            string _maCQCQ = "";
            frmIn frm = new frmIn();
            QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(Bien.StrCon);
            var qMaChuQuan = _data.BenhViens.Where(p => p.MaBV == Bien.MaBV).FirstOrDefault();
            if (qMaChuQuan != null)
                _maCQCQ = qMaChuQuan.MaChuQuan;
            DThuoc dthuoc = _data.DThuocs.Where(p => p.IDDon == _IDDon).FirstOrDefault();
            if (maKP == 0 && dthuoc != null)
                maKP = dthuoc.MaKP ?? 0;
            KPhong kph = _data.KPhongs.Where(p => p.MaKP == maKP).FirstOrDefault();
            //svar dThuoc = new DonThuoc();
            //cdThuoc = dThuoc.
            //if (dthuoc != null)
            _int_maBN = _IDBN;
            var ktkd = (from dt in _data.DThuocs.Where(p => p.MaBNhan == _int_maBN).Where(p => (Bien.MaBV == "27001") ? true : p.IDDon == _IDDon).Where(p => p.PLDV == 1)
                        join dtct in _data.DThuoccts.Where(o => o.IsMuaNgoai == null || o.IsMuaNgoai == false).Where(p => (Bien.MaBV == "27023" || Bien.MaBV == "20001" || Bien.MaBV == "30005" || Bien.MaBV == "24009" || _maCQCQ == "24009" || Bien.MaBV == "30010") ? true : (p.TrongBH != 2)).Where(p => Bien.MaBV == "27001" ? p.MaKP == maKP : true) on dt.IDDon equals dtct.IDDon
                        join cb in _data.CanBoes on dt.MaCB equals cb.MaCB
                        join kp in _data.KPhongs on dt.MaKP equals kp.MaKP
                        select new { dt.MaDTQG, dt.GhiChu, dt.IDDon, cb.CapBac, dt.KieuDon, dt.LoaiDuoc, dt.MaBNhan, dt.NgayKe, dt.PLDV, cb.SoDT, cb.MaCB, cb.TenCB, kp.TenKP, dtct.MaDV, dtct.TrongBH }).ToList();
            var test = (from a in ktkd
                        join dv in _data.DichVus on a.MaDV equals dv.MaDV
                        join _tn in _data.TieuNhomDVs.Where(p => p.TenRG == Bien.st_TieuNhomRG_ChuyenKhoa.ThucPhamChucNang) on dv.IdTieuNhom equals _tn.IdTieuNhom
                        select new { dv }).ToList();
            bool ktraInCongKham = false;
            if (ktkd.Count == 0 && printCongKham)
                ktraInCongKham = true;
            else
            {
                if (Bien.MaBV == "24009" || _maCQCQ == "24009")
                {
                    var qdtBH = ktkd.Where(p => p.TrongBH == 1).ToList();
                    if (qdtBH.Count == 0)
                        ktraInCongKham = true;
                }
            }
            Phieu.repDonThuoc_TT04 repd = new Phieu.repDonThuoc_TT04();
            int x = 1;
            if (index == 1)
            {
                //repd.txtTieuDe.Text = "PHIẾU XUẤT KHO";
            }
            var ttd = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _int_maBN)
                       join ttbx in _data.TTboXungs on bn.MaBNhan equals ttbx.MaBNhan
                       join kb in _data.BNKBs on bn.MaBNhan equals kb.MaBNhan
                       select new { bn.GTinh, ttbx.CanNang_ChieuCao, bn.MaBNhan, bn.TenBNhan, bn.NamSinh, bn.NgaySinh, bn.ThangSinh, bn.NNhap, kb.MaICD, kb.ChanDoan, kb.BenhKhac, kb.IDKB, bn.SThe, bn.DChi, kb.GhiChu, bn.NoiTru, bn.DTNT, kb.MaICD2, ttbx.NThan, ttbx.DThoaiNT, ttbx.DThoai }).OrderByDescending(p => p.IDKB).ToList();
            if (ttd.Count > 0)
            {
                if (ttd.First().NoiTru == 0 && ttd.First().DTNT == false)
                    x = 0;
                if (DungChung.Bien.MaBV == "24272")
                {
                    repd._TenBNhan.Value = ttd.First().TenBNhan.ToUpper();
                }
                else
                {
                    repd._TenBNhan.Value = ttd.First().TenBNhan;
                }
                //repd.MaBN_Barcode.Value = _int_maBN.ToString();
                repd._MaBNhan.Value = "Mã BN: " + ttd.First().MaBNhan;
                string Tuoi = "";
                Tuoi = Bien.MaBV == "14018" || Bien.MaBV == "24272" ? DungChung.Ham.TinhTuoiBenhNhan(_data, _int_maBN) : DungChung.Ham.TuoitheoThang(_data, _int_maBN, "72-00");
                //repd.Tuoi.Value = Bien.MaBV == "24012" ? ttd.First().NamSinh + " (" + Tuoi + " tuổi)" : Tuoi;
                //repd.lblTuoi.Text = "Tuổi:";
                repd.NSinh.Value = ttd.First().NgaySinh + "/" + ttd.First().ThangSinh + "/" + ttd.First().NamSinh;
                if (ttd.First().CanNang_ChieuCao != null && ttd.First().CanNang_ChieuCao.Contains(";"))
                {
                    repd.CanNang.Value = ttd.First().CanNang_ChieuCao.Split(';')[0];
                }
                else
                    repd.CanNang.Value = ttd.First().CanNang_ChieuCao;
                if (Tuoi.Length > 2)
                {
                    if (!string.IsNullOrEmpty(ttd.First().NThan) && ttd.First().NThan.Contains(";"))
                    {
                        string[] arrnt = ttd.First().NThan.Split(';');
                        repd.HoTenNguoiThan.Value = arrnt[0];
                        //repd.CMTND.Value = arrnt[1];
                    }
                    else
                    {
                        repd.HoTenNguoiThan.Value = ttd.First().NThan;
                    }
                }
                switch (ttd.First().GTinh)
                {
                    case 1:
                        repd.Nam.Value = "x";
                        break;

                    case 0:
                        repd.Nu.Value = "x";
                        break;
                }
                repd.STheBH.Value = ttd.First().SThe;
                var bnkb1 = _data.BNKBs.Where(p => p.IDKB == id).FirstOrDefault();
                if (Bien.MaBV == "12345")
                {
                    if (bnkb1 != null)
                    {
                        if (!string.IsNullOrEmpty(bnkb1.MaICD))
                        {
                            repd.ICD.Value = bnkb1.MaICD;
                            repd.ChanDoan.Value = bnkb1.ChanDoan;
                        }
                        else
                        {
                            repd.ChanDoan.Value = DungChung.Ham.FreshString(bnkb1.BenhKhac);
                        }
                    }
                }
                else if (Bien.MaBV == "24297")
                {
                    if (bnkb1 != null)
                    {
                        var kp = _data.KPhongs.FirstOrDefault(p => p.MaKP == bnkb1.MaKP);
                        if (kp != null)
                        {
                            if (kp.IsDongY == true)
                            {
                                repd.ChanDoan.Value = DungChung.Ham.GetChanDoanKB_ByKP(_data, _int_maBN, kp.MaKP);
                                //if (!string.IsNullOrEmpty(bnkb1.MaICD))
                                //{
                                //    repd.ICD.Value = bnkb1.MaICD;
                                //    string icds = bnkb1.MaICD + ";" + bnkb1.MaICD2;
                                //    var icd = _data.ICD10.Where(o => true).ToList();
                                //    //repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham.GhepChuoiChanDoanYHCT(icd, "", icds);

                                //}
                            }
                            else

                                repd.ChanDoan.Value = DungChung.Ham.FreshString(bnkb1.ChanDoan) + ";" + DungChung.Ham.FreshString(bnkb1.BenhKhac);
                        }
                    }
                }
                else if (Bien.MaBV == "14018")
                {
                    repd.ChanDoan.Value = DungChung.Ham.GetChanDoanKB(_data, _int_maBN);
                }
                else if (Bien.MaBV == "14017" || Bien.MaBV == "24012" || Bien.MaBV == "24389")
                {
                    string[] _MaICDarr = DungChung.Ham.getMaICDarrFull_SL(_data, _int_maBN, Bien.GetICD, id);
                    string[] icd = _MaICDarr[0].Split(';');
                    string[] tenicd = _MaICDarr[1].Split(';');
                    string lydo = "";
                    if (icd.Length <= tenicd.Length)
                    {
                        for (int i = 0; i < icd.Length; i++)
                        {
                            if (icd[i] != "")
                            {
                                lydo += icd[i] + " - " + tenicd[i] + "; ";//minhvd
                            }
                            else
                            {
                                lydo += tenicd[i] + "; ";
                            }
                        }
                        if (icd.Length < tenicd.Length)
                        {
                            int cut1 = tenicd.Length - icd.Length;
                            int cut = tenicd.Length - cut1;
                            string mab1k = DungChung.Ham.FreshString(string.Join("; ", tenicd.Skip(cut)));
                            lydo += mab1k + "; ";
                        }
                    }
                    else
                    {
                        for (int i = 0; i < tenicd.Length; i++)
                        {
                            lydo += icd[i] + " - " + tenicd[i] + "; ";
                        }
                    }
                    if (Bien.MaBV == "24012" || Bien.MaBV == "24389")
                    {
                        var a = ttd.First().BenhKhac.Split(';');
                        var b = ttd.First().MaICD2.Split(';');

                        repd.ChanDoan.Value = DungChung.Ham.FreshString(lydo);
                        //repd.ChanDoan.Value += ";  " + b[0] + "-" + a[0] + ";  " + b[1] + "-" + a[1] + ";  " + b[2] + "-" + a[2]; ;
                    }
                    else
                    {
                        repd.ChanDoan.Value = DungChung.Ham.FreshString(lydo);
                    }
                }
                else
                {
                    repd.ICD.Value = DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, 0)[0]);
                    if (Bien.MaBV == "20001")
                    {
                        string cdyhct = DungChung.Ham.GetMaYHCT(DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, 0)[0]), _data.ICD10.ToList())[1];
                        repd.ChanDoan.Value = DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, id)[1]), cdyhct); //cdyhct + "[" + DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, id)[1]) + "]";
                    }
                    else
                        repd.ChanDoan.Value = DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, id)[1]);
                }

                repd.STheBH.Value = ttd.First().SThe;
                if (ktkd.Count > 0)
                {
                    repd.MaDonThuoc.Value = ktkd.First().MaDTQG;
                    string ngay = ktkd.FirstOrDefault().NgayKe.Value.Day > 9 ? ktkd.FirstOrDefault().NgayKe.Value.Day.ToString() : "0" + ktkd.FirstOrDefault().NgayKe.Value.Day.ToString();
                    string thang = ktkd.First().NgayKe.Value.Month > 9 ? ktkd.FirstOrDefault().NgayKe.Value.Month.ToString() : "0" + ktkd.FirstOrDefault().NgayKe.Value.Month.ToString();
                    string nam = ktkd.FirstOrDefault().NgayKe.Value.Year.ToString();

                    repd.Today.Value = "Ngày " + ngay + " tháng " + thang + " năm " + nam;

                    if (Bien.MaBV == "30007")//in theo id khám bệnh của kp in đơn
                    {
                        if (bnkb1 != null)
                        {
                            string macb = bnkb1.MaCB;
                            var ttcb = _data.CanBoes.Where(p => p.MaCB == macb).FirstOrDefault();
                            if (ttcb != null)
                            {
                                repd.TenCB.Value = ttcb.CapBac + ": " + ttcb.TenCB;
                            }
                            int makp1 = bnkb1.MaKP ?? 0;
                            var ttkp = _data.KPhongs.Where(p => p.MaKP == makp1).FirstOrDefault();
                            if (ttkp != null)
                            {
                                repd.TenKP.Value = ttkp.TenKP;
                            }
                        }
                    }
                    else
                    {
                        repd.TenCB.Value = ktkd.First().CapBac + ": " + ktkd.First().TenCB;
                        repd.SdtCB.Value = "Điện thoại: " + DungChung.Ham.GetSDTBV();
                        repd.SdtBS.Value = "SĐT: " + ktkd.First().SoDT;
                        repd.Parameters["SoDTBoMe"].Value = ttd.First().DThoai + ";" + ttd.First().DThoaiNT;
                        if (Tuoi.Contains("tháng"))
                        {
                            repd.panel_ThongTinBoMe.Visible = true;
                            repd.Parameters["TenBoMe"].Value = ttd.First().NThan;
                        }
                        repd.TenKP.Value = ktkd.First().TenKP;
                    }
                    repd.DiaChi.Value = ttd.First().DChi;

                    repd._MaBNhan.Value = "Mã BN: " + _int_maBN.ToString();
                    if (Bien.MaBV != "20001")
                        repd._MaBNhan.Value = "Mã BN: " + _int_maBN.ToString();
                    if (ktkd.First().NgayKe.Value.Day > 0)
                        repd.ngayke.Value = DungChung.Ham.NgaySangChu(ktkd.First().NgayKe.Value);
                }
            }

            var qd1 = (from dt in _data.DThuocs.Where(p => p.MaBNhan == _int_maBN).Where(p => p.IDDon == _IDDon).Where(p => p.PLDV == 1)
                       join dtct in _data.DThuoccts on dt.IDDon equals dtct.IDDon
                       join dv in _data.DichVus.Where(o => (!printCongKham) ? o.IDNhom != 13 : true) on dtct.MaDV equals dv.MaDV
                       join tn in _data.TieuNhomDVs.Where(p => Bien.MaBV == "12122" ? p.IDNhom == 4 : true) on dv.IdTieuNhom equals tn.IdTieuNhom
                       where tn.TenRG != "Thuốc gây nghiện" && tn.TenRG != "Thuốc hướng tâm thần"
                       select new 
                       { 
                           MaTam = dv.MaTam, 
                           TenTNRG = tn.TenRG,
                           dv.TenRG, 
                           TenDV = dv.TenDV,//thay đổi set tên dv ở dưới _maCQCQ == "00000" ? dv.TenHC + " " + dv.HamLuong : ((Bien.MaBV == "12345" || Bien.MaBV == "24297") ? ((dv.TenDV ?? "") + " (" + (dv.TenHC ?? "") + ") " + (dv.HamLuong ?? "")) : ((dv.TenHC.Contains(",") || dv.TenHC.Contains("+") || dv.TenHC.Contains(";")) ? dv.TenDV : (dv.TenDV + " (" + dv.TenHC + ") " + dv.HamLuong))), 
                           dv.TenHC, 
                           dv.HamLuong, 
                           dv.MaDV, 
                           dv.DonVi,
                           dtct.SoLuong, 
                           dtct.IDDonct, 
                           dtct.GhiChu, 
                           HuongDan = "", 
                           DuongD = dtct.DuongD ?? "", SoLan = dtct.SoLan ?? "", 
                           MoiLan = dtct.MoiLan ?? "", Luong = dtct.Luong ?? "", 
                           DviUong = dtct.DviUong ?? "", 
                           LoiDan = dt.GhiChu, 
                           TenDVMain = dv.TenDV 
                       }).OrderBy(p => p.IDDonct).ToList();

            var qd2 = (from dv in qd1
                       group dv by new { dv.TenDV, dv.MaDV, dv.DonVi, dv.HamLuong, dv.TenRG, dv.MaTam, dv.IDDonct } into kq
                       select new InDonClass { TenDV = (Bien.MaBV == "24009" || _maCQCQ == "24009") ? kq.Key.TenRG : kq.Key.TenDV, HamLuong = kq.Key.HamLuong, MaDV = kq.Key.MaDV, DonVi = kq.Key.DonVi, SoLuong = kq.Sum(p => p.SoLuong), HuongDan = kq.First().DuongD + " " + kq.First().SoLan + " " + kq.First().MoiLan + " " + kq.First().Luong + " " + kq.First().DviUong + " " + "; " + kq.First().GhiChu, TenHC = kq.First().TenHC, TenDVMain = kq.First().TenDVMain, IDDonct = kq.Key.IDDonct, MaTam = kq.Key.MaTam }).OrderBy(p => p.IDDonct).ToList();
            if (qd2 != null && qd2.Count > 0)
            {
                if (Bien.MaBV == "24012")
                {
                    foreach (var item in qd2)
                    {
                        //item.TenDV = !string.IsNullOrEmpty(item.TenHC) ? ((item.TenHC.Contains(".") || item.TenHC.Contains(",") || item.TenHC.Contains("+") || item.TenHC.Contains(";")) ? (item.TenDV + " (" + item.TenHC) + ")" : item.HamLuong) : item.TenDV;
                        item.TenDV = item.TenDVMain + " (" + item.TenHC + ") " + item.HamLuong;
                    }
                }
                else if (Bien.MaBV == "24272")
                {
                    foreach (var item in qd2)
                    {
                        item.TenDV = item.TenDVMain +  (item.TenHC.Contains(",") || item.TenHC.Contains("+") || item.TenHC.Contains(";") ? "" : (" (" + item.TenHC + ") "))  + (item.HamLuong.Contains("+") || item.HamLuong.Contains(";") ? "" : item.HamLuong);
                    }
                }
                else
                {
                    foreach (var item in qd2)
                    {
                        item.TenDV = !string.IsNullOrEmpty(item.TenHC) ? ((item.TenHC.Contains(".") || item.TenHC.Contains(",") || item.TenHC.Contains("+") || item.TenHC.Contains(";")) ? (item.TenDVMain + " (" + item.HamLuong) + ")" : item.TenDV) : item.TenDV;
                    }
                }
            }

            if (!string.IsNullOrEmpty(ttd.First().NThan) && ttd.First().NThan.Contains(";"))
            {
                string[] arrnt = ttd.First().NThan.Split(';');
                repd.HoTenNguoiThan.Value = arrnt[0];
            }
            else
            {
                repd.HoTenNguoiThan.Value = ttd.First().NThan;
            }

            repd.LoiDanBS.Value = qd1.Count > 0 ? qd1.First().LoiDan : "";
            repd.LoiDanBS.Value += Bien.MaBV == "24012" ? "\n\n\n" : "";
            //repd.SDTLienHeBNhan =

            if (Bien.MaBV == "24012")
            {
                var arr = qd2.ToList();
                var d1 = (from a in arr
                          group a by a.MaDV into kq
                          let count = kq.Count()
                          where count > 1
                          select kq.Key);
                List<InDonClass> arrNew = new List<InDonClass>();
                if (d1.Count() > 0)
                {
                    foreach (var item in d1)
                    {
                        var qd21 = qd2.Where(p => p.MaDV == item).ToList();
                        InDonClass newDon = new InDonClass();
                        newDon.TenDV = qd21.First().TenDV;
                        newDon.HamLuong = qd21.First().HamLuong;
                        newDon.MaDV = qd21.First().MaDV;
                        newDon.DonVi = qd21.First().DonVi;
                        newDon.HuongDan = qd21.First().HuongDan;
                        newDon.TenHC = qd21.First().TenHC;
                        newDon.TenDVMain = qd21.First().TenDVMain;
                        newDon.IDDonct = qd21.First().IDDonct;
                        newDon.MaTam = qd21.First().MaTam;
                        newDon.SoLuong = qd21.Sum(p => p.SoLuong);
                        arrNew.Add(newDon);
                    }
                }
                var qd22 = qd2.Where(p => !d1.Contains(p.MaDV)).ToList();
                foreach (var a in qd22)
                {
                    InDonClass newDon = new InDonClass();
                    newDon.TenDV = a.TenDV;
                    newDon.HamLuong = a.HamLuong;
                    newDon.MaDV = a.MaDV;
                    newDon.DonVi = a.DonVi;
                    newDon.HuongDan = a.HuongDan;
                    newDon.TenHC = a.TenHC;
                    newDon.TenDVMain = a.TenDVMain;
                    newDon.IDDonct = a.IDDonct;
                    newDon.MaTam = a.MaTam;
                    newDon.SoLuong = a.SoLuong;
                    arrNew.Add(newDon);
                }
                repd.DataSource = arrNew.OrderBy(p => p.IDDonct);
            }
            else
                repd.DataSource = qd2.ToList();
            repd.ThuKho.Value = Bien.ThuKho;
            repd.BindData();
            repd.CreateDocument();
            frm.prcIN.PrintingSystem = repd.PrintingSystem;
            frm.ShowDialog();
        }

        #region 27002

        public static void InDon_27022(int _IDDon, int _IDBN, int maKP, int id, bool ghichu, bool printCongKham = true, int index = 0)//In công khám 30010
        {
            int _int_maBN = 0;
            string _maCQCQ = "";
            frmIn frm = new frmIn();
            QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(Bien.StrCon);
            var qMaChuQuan = _data.BenhViens.Where(p => p.MaBV == Bien.MaBV).FirstOrDefault();
            if (qMaChuQuan != null)
                _maCQCQ = qMaChuQuan.MaChuQuan;
            DThuoc dthuoc = _data.DThuocs.Where(p => p.IDDon == _IDDon).FirstOrDefault();
            if (maKP == 0 && dthuoc != null)
                maKP = dthuoc.MaKP ?? 0;
            KPhong kph = _data.KPhongs.Where(p => p.MaKP == maKP).FirstOrDefault();
            //if (dthuoc != null)
            _int_maBN = _IDBN;
            var ktkd = (from dt in _data.DThuocs.Where(p => p.MaBNhan == _int_maBN).Where(p => (Bien.MaBV == "27001") ? true : p.IDDon == _IDDon).Where(p => p.PLDV == 1)
                        join dtct in _data.DThuoccts.Where(o => o.IsMuaNgoai == null || o.IsMuaNgoai == false).Where(p => (Bien.MaBV == "27023" || Bien.MaBV == "20001" || Bien.MaBV == "30005" || Bien.MaBV == "24009" || _maCQCQ == "24009" || Bien.MaBV == "30010") ? true : (p.TrongBH != 2)).Where(p => Bien.MaBV == "27001" ? p.MaKP == maKP : true) on dt.IDDon equals dtct.IDDon
                        join cb in _data.CanBoes on dt.MaCB equals cb.MaCB
                        join kp in _data.KPhongs on dt.MaKP equals kp.MaKP
                        select new { dt.GhiChu, dt.IDDon, cb.CapBac, dt.KieuDon, dt.LoaiDuoc, dt.MaBNhan, dt.NgayKe, dt.PLDV, cb.TenCB, cb.SoDT, kp.TenKP, dtct.MaDV, dtct.TrongBH }).ToList();
            var test = (from a in ktkd
                        join dv in _data.DichVus on a.MaDV equals dv.MaDV
                        join _tn in _data.TieuNhomDVs.Where(p => p.TenRG == Bien.st_TieuNhomRG_ChuyenKhoa.ThucPhamChucNang) on dv.IdTieuNhom equals _tn.IdTieuNhom
                        select new { dv }).ToList();
            bool ktraInCongKham = false;
            if (ktkd.Count == 0 && printCongKham)
                ktraInCongKham = true;
            else
            {
                if (Bien.MaBV == "24009" || _maCQCQ == "24009")
                {
                    var qdtBH = ktkd.Where(p => p.TrongBH == 1).ToList();
                    if (qdtBH.Count == 0)
                        ktraInCongKham = true;
                }
            }
            #region
            // else // trường hợp không có đơn nhưng vẫn in don có công khám
            if (ktraInCongKham)
            {
                //đơn mới dùng cho tất cả các đơn vị a.quý y/c 02-03
                var nkt = _data.BenhNhans.Where(p => p.MaBNhan == _int_maBN).ToList();
                if (nkt.Count > 0)// && (Bien.MaBV == "30007" || Bien.MaBV == "12122"||Bien.MaBV=="12128")
                {
                    #region 30007 - 12122
                    int x = 1;
                    BaoCao.repDonThuoc_TT18 repd = new BaoCao.repDonThuoc_TT18();
                    var ttd = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _IDBN)
                               join kb in _data.BNKBs on bn.MaBNhan equals kb.MaBNhan
                               join ttbx in _data.TTboXungs on bn.MaBNhan equals ttbx.MaBNhan
                               select new { bn.GTinh, bn.TenBNhan, ttbx.CanNang_ChieuCao, ttbx.NThan, bn.NamSinh, bn.NgaySinh, bn.ThangSinh, bn.NNhap, kb.MaICD, kb.ChanDoan, kb.BenhKhac, kb.IDKB, bn.SThe, bn.DChi, kb.GhiChu, bn.NoiTru, bn.DTNT }).OrderByDescending(p => p.IDKB).ToList();
                    if (ttd.Count > 0)
                    {
                        if (ttd.First().NoiTru == 0 && ttd.First().DTNT == false)
                            x = 0;
                        repd._TenBNhan.Value = ttd.First().TenBNhan;
                        repd.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _IDBN, Bien.formatAge);
                        repd.lblTuoi.Text = "Tuổi:";
                        //  repd.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _IDBN, Bien.formatAge);
                        //Lời dặn, họ tên người thân
                        string Tuoi = "";
                        Tuoi = DungChung.Ham.TuoitheoThang(_data, _int_maBN, "72-00");
                        repd.Tuoi.Value = Bien.MaBV == "14018" ? DungChung.Ham.CalculateAge(ttd.First().NgaySinh, ttd.First().ThangSinh, ttd.First().NamSinh, " tháng.") : Tuoi;
                        repd.lblTuoi.Text = "Tuổi:";
                        if (ttd.First().CanNang_ChieuCao != null && ttd.First().CanNang_ChieuCao.Contains(";"))
                        {
                            repd.CanNang.Value = ttd.First().CanNang_ChieuCao.Split(';')[0];
                        }
                        else
                            repd.CanNang.Value = ttd.First().CanNang_ChieuCao;
                        if (Tuoi.Length > 2)
                        {
                            if (!string.IsNullOrEmpty(ttd.First().NThan) && ttd.First().NThan.Contains(";"))
                            {
                                string[] arrnt = ttd.First().NThan.Split(';');
                                repd.paraHoTenNguoiThan.Value = "- Tên bố hoặc mẹ của trẻ hoặc người đưa trẻ đến khám bệnh, chữa bệnh: " + arrnt[0];
                                repd.CMTND.Value = arrnt[1];
                            }
                            else
                            {
                                repd.paraHoTenNguoiThan.Value = "- Tên bố hoặc mẹ của trẻ hoặc người đưa trẻ đến khám bệnh, chữa bệnh: " + ttd.First().NThan;
                            }
                        }

                        //if (ar.Length > 1)
                        //    repd.paraLoDanBS.Value = ar[1];

                        // KT
                        switch (ttd.First().GTinh)
                        {
                            case 1:
                                repd.GTinh.Value = "Nam";
                                repd.Nu.Value = "/";
                                break;

                            case 0:
                                repd.GTinh.Value = "Nữ";
                                repd.Nam.Value = "/";
                                break;
                        }
                        repd.ICD.Value = DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _IDBN, Bien.GetICD, 0)[0]);
                        repd.SThe.Value = ttd.First().SThe;
                        if (Bien.MaBV == "20001")
                        {
                            string cdyhct = DungChung.Ham.GetMaYHCT(DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, 0)[0]), _data.ICD10.ToList())[1];
                            repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, id)[1]), cdyhct); //cdyhct + "[" + DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, id)[1]) + "]";
                        }
                        else if (Bien.MaBV == "24297")
                        {
                            string cdyhct = DungChung.Ham.GetYHCT_24297(DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, 0)[0]), _data.ICD10.ToList())[1];
                            repd.ChanDoan.Value = "Chẩn đoán: " + cdyhct.ToString();
                        }
                        else
                            repd.ChanDoan.Value = "Chẩn đoán: " + Bien.MaBV == "14018" ? DungChung.Ham.GetChanDoanKB(_data, _int_maBN) : DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _IDBN, Bien.GetICD, id)[1]);
                        repd.MaBN.Value = "Mã BN: " + _int_maBN.ToString();
                        repd.DiaChi.Value = ttd.First().DChi;
                        repd._MaBNhan.Value = _IDBN.ToString();
                    }
                    int iddon = 0;

                    var qd1 = (from dt in _data.DThuocs.Where(p => p.MaBNhan == _IDBN)
                               join dtct in _data.DThuoccts.Where(p => Bien.MaBV == "27023" ? true : p.TrongBH != 2) on dt.IDDon equals dtct.IDDon
                               join dv in _data.DichVus on dtct.MaDV equals dv.MaDV
                               join nhom in _data.NhomDVs.Where(p => p.TenNhomCT.Contains("Khám bệnh")) on dv.IDNhom equals nhom.IDNhom
                               select new { dt.IDDon, TenDV = dv.TenDV, dv.MaDV, dv.DonVi, dtct.SoLuong, dtct.IDDonct, HuongDan = dtct.DuongD + dtct.SoLan + dtct.MoiLan + dtct.Luong + dtct.DviUong }).OrderBy(p => p.IDDonct).ToList();
                    if (qd1.Count > 0)
                        iddon = qd1.First().IDDon;
                    repd._idDon.Value = iddon;
                    var ktkd2 = (from dt in _data.DThuocs.Where(p => p.IDDon == iddon)
                                 join cb in _data.CanBoes on dt.MaCB equals cb.MaCB
                                 join kp in _data.KPhongs on dt.MaKP equals kp.MaKP
                                 select new { dt.GhiChu, dt.IDDon, cb.CapBac, dt.KieuDon, dt.LoaiDuoc, dt.MaBNhan, dt.NgayKe, dt.PLDV, cb.TenCB, kp.TenKP, cb.SoDT }).ToList();
                    if (ktkd2.Count > 0 && ktkd2.First().GhiChu != null)
                        repd.LoiDanBS.Value = ktkd2.First().GhiChu;
                    repd.LoiDanBS.Value += Bien.MaBV == "24012" ? "\n\n\n" : "";
                    if (ktkd2.Count > 0)
                    {
                        if (ktkd2.First().NgayKe.Value.Day > 0)
                            repd.ngayke.Value = DungChung.Ham.NgaySangChu(ktkd2.First().NgayKe.Value);

                        if (Bien.MaBV == "30007")//in theo id khám bệnh của kp in đơn
                        {
                            var bnkb1 = _data.BNKBs.Where(p => p.IDKB == id).FirstOrDefault();
                            if (bnkb1 != null)
                            {
                                string macb = bnkb1.MaCB;
                                var ttcb = _data.CanBoes.Where(p => p.MaCB == macb).FirstOrDefault();
                                if (ttcb != null)
                                {
                                    repd.TenCB.Value = ttcb.CapBac + ": " + ttcb.TenCB;
                                }
                                int makp1 = bnkb1.MaKP ?? 0;
                                var ttkp = _data.KPhongs.Where(p => p.MaKP == makp1).FirstOrDefault();
                                if (ttkp != null)
                                {
                                    repd.TenKP.Value = ttkp.TenKP;
                                }
                            }
                        }
                        else
                        {
                            repd.TenCB.Value = ktkd2.First().CapBac + ": " + ktkd2.First().TenCB;
                            repd.SDTBS.Value = Bien.MaBV == "01830" ? ((ktkd2.First().SoDT != null && ktkd2.First().SoDT != "") ? ("SĐT:" + ktkd2.First().SoDT) : "") : "";
                            repd.TenKP.Value = ktkd2.Count > 0 ? ktkd2.First().TenKP : "";
                        }
                    }
                    repd.DataSource = qd1.ToList();
                    repd.ThuKho.Value = Bien.ThuKho;
                    repd.BindData();
                    repd.CreateDocument();
                    frm.prcIN.PrintingSystem = repd.PrintingSystem;
                    frm.ShowDialog();
                    #endregion
                }
            }
            #endregion
            #region kiểm tra có đơn thuốc hay chưa ktkd.Count > 0
            if (ktkd.Count > 0)// kiểm tra có đơn thuốc hay chưa
            {
                // int _int_maBN = ktkd.First().MaBNhan ?? 0;
                string matinh = Bien.MaBV.Substring(0, 2);

                switch (matinh)
                {
                    #region case 99
                    case "99": //bỏ (chưa dùng)
                        BaoCao.rep_PhieuKCBNgoaiT rep = new BaoCao.rep_PhieuKCBNgoaiT();
                        rep._idDon.Value = ktkd.First().IDDon;
                        var tt = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _int_maBN)
                                  join kb in _data.BNKBs on bn.MaBNhan equals kb.MaBNhan
                                  select new { bn.GTinh, bn.TenBNhan, bn.NamSinh, bn.HanBHDen, bn.HanBHTu, bn.NgaySinh, bn.ThangSinh, bn.NNhap, kb.MaICD, kb.ChanDoan, kb.BenhKhac, kb.IDKB, bn.SThe, bn.DChi }).OrderByDescending(p => p.IDKB).ToList();
                        if (tt.Count > 0)
                        {
                            rep._TenBNhan.Value = tt.First().TenBNhan;
                            rep.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _int_maBN, Bien.formatAge);
                            switch (tt.First().GTinh)
                            {
                                case 1:
                                    rep.GTinh.Value = "Nam";
                                    break;

                                case 0:
                                    rep.GTinh.Value = "Nữ";
                                    break;
                            }
                            if (tt.First().HanBHDen != null && tt.First().HanBHDen.Value.Day > 0)
                                rep.HanDen.Value = tt.First().HanBHDen.ToString().Substring(0, 10);
                            if (tt.First().HanBHTu != null && tt.First().HanBHTu.Value.Day > 0)
                                rep.HanTu.Value = tt.First().HanBHTu.ToString().Substring(0, 10);
                            rep.ICD.Value = DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, 0)[0]);
                            rep.SThe.Value = tt.First().SThe;
                            rep.ChanDoan.Value = DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, 0)[1]);
                            rep.TenCB.Value = ktkd.First().TenCB;
                            rep.TenKP.Value = ktkd.First().TenKP;
                            rep.DiaChi.Value = tt.First().DChi;
                            rep._MaBNhan.Value = _int_maBN.ToString();
                            if (ktkd.First().NgayKe.Value.Day > 0)
                            {
                                rep.Ngaykham.Value = ktkd.First().NgayKe.ToString().Substring(0, 10);
                                rep.ngayke.Value = DungChung.Ham.NgaySangChu(ktkd.First().NgayKe.Value);
                            }
                            // lấy mã KCB ban đầu
                            var madkkcb = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _int_maBN)
                                           join bv in _data.BenhViens on bn.MaCS equals bv.MaBV
                                           select new { bv.TenBV }).ToList();
                            if (madkkcb.Count > 0)
                                rep.dkkcbbd.Value = madkkcb.First().TenBV;
                        }
                        //int id = ktkd.First().IDDon;
                        var q = (from dv in _data.DichVus
                                 join dtct in _data.DThuoccts.Where(p => p.TrongBH != 2) on dv.MaDV equals dtct.MaDV
                                 join dt in _data.DThuocs.Where(p => p.MaBNhan == _int_maBN) on dtct.IDDon equals dt.IDDon
                                 join nhomdv in _data.NhomDVs on dv.IDNhom equals nhomdv.IDNhom
                                 //where (dtct.IDDon == id)
                                 group new { dv, dtct, nhomdv } by new { nhomdv.TenNhom, nhomdv.STT, dv.TenDV, dv.MaDV, dv.DonVi, dtct.DonGia } into kq
                                 select new { kq.Key.TenNhom, kq.Key.STT, kq.Key.TenDV, kq.Key.MaDV, kq.Key.DonVi, kq.Key.DonGia, SoLuong = kq.Sum(p => p.dtct.SoLuong), ThanhTien = kq.Sum(p => p.dtct.ThanhTien) }).OrderBy(p => p.STT).OrderBy(p => p.TenDV).ToList();
                        //HuongDan = dtct.DuongD + dtct.SoLan + dtct.MoiLan + dtct.DviUong
                        //var q = (from dv in _data.DichVus
                        //         join dtct in _data.DThuoccts on dv.MaDV equals dtct.MaDV
                        //         where (dtct.IDDon == id)
                        //         group new { dv, dtct } by new { dv.TenDV, dv.MaDV, dtct.DonVi } into kq
                        //         select new { kq.Key.TenDV, kq.Key.MaDV, kq.Key.DonVi, SoLuong = kq.Sum(p => p.dtct.SoLuong) }).ToList();
                        if (q.Count > 0)
                            rep.DataSource = q.ToList();
                        //rep.ShowPreviewDialog();
                        //rep.DataMember = "Table";
                        rep.BindData();
                        rep.CreateDocument();
                        frm.prcIN.PrintingSystem = rep.PrintingSystem;

                        frm.ShowDialog();
                        break;
                    #endregion
                    #region default
                    default:
                        #region (DateTime.Now.Date >= Convert.ToDateTime("01/05/2016"))
                        if (DateTime.Now.Date >= Convert.ToDateTime("01/05/2016"))
                        {
                            var qdtct = (from dt in _data.DThuocs.Where(p => p.MaBNhan == _int_maBN).Where(p => p.PLDV == 1)
                                         join dtct in _data.DThuoccts on dt.IDDon equals dtct.IDDon
                                         select dtct).ToList();
                            foreach (var t in qdtct)
                            {
                                t.ThanhTien = t.SoLuong * t.DonGia * t.TyLeTT / 100;
                                _data.SaveChanges();
                            }

                            var nkt = _data.BenhNhans.Where(p => p.MaBNhan == _int_maBN).ToList();
                            if (nkt.Count > 0)
                            {
                                #region

                                if (Bien.MaBV != "12048" && Bien.MaBV != "30350")
                                {
                                    BaoCao.repDonThuoc_TT18 repd = new BaoCao.repDonThuoc_TT18();
                                    int x = 1;
                                    repd.xrTable12.Visible = true;
                                    if (index == 1)
                                    {
                                        repd.txtTieuDe.Text = "PHIẾU XUẤT KHO";
                                    }
                                    repd._idDon.Value = ktkd.First().IDDon;
                                    var ttd = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _int_maBN)
                                               join ttbx in _data.TTboXungs on bn.MaBNhan equals ttbx.MaBNhan
                                               join kb in _data.BNKBs on bn.MaBNhan equals kb.MaBNhan
                                               select new { bn.GTinh, ttbx.CanNang_ChieuCao, bn.TenBNhan, bn.NamSinh, bn.NgaySinh, bn.ThangSinh, bn.NNhap, kb.MaICD, kb.ChanDoan, kb.BenhKhac, kb.IDKB, bn.SThe, bn.DChi, kb.GhiChu, bn.NoiTru, bn.DTNT, ttbx.NThan }).OrderByDescending(p => p.IDKB).ToList();
                                    if (ttd.Count > 0)
                                    {
                                        if (ttd.First().NoiTru == 0 && ttd.First().DTNT == false)
                                            x = 0;
                                        repd._TenBNhan.Value = ttd.First().TenBNhan;
                                        string Tuoi = "";
                                        Tuoi = Bien.MaBV == "14018" ? DungChung.Ham.TinhTuoiBenhNhan(_data, _int_maBN) : DungChung.Ham.TuoitheoThang(_data, _int_maBN, "72-00");
                                        repd.Tuoi.Value = Tuoi;
                                        repd.lblTuoi.Text = "Tuổi:";
                                        if (ttd.First().CanNang_ChieuCao != null && ttd.First().CanNang_ChieuCao.Contains(";"))
                                        {
                                            repd.CanNang.Value = ttd.First().CanNang_ChieuCao.Split(';')[0];
                                        }
                                        else
                                            repd.CanNang.Value = ttd.First().CanNang_ChieuCao;
                                        if (Tuoi.Length > 2)
                                        {
                                            if (!string.IsNullOrEmpty(ttd.First().NThan) && ttd.First().NThan.Contains(";"))
                                            {
                                                string[] arrnt = ttd.First().NThan.Split(';');
                                                repd.paraHoTenNguoiThan.Value = "- Tên bố hoặc mẹ của trẻ hoặc người đưa trẻ đến khám bệnh, chữa bệnh: " + arrnt[0];
                                                repd.CMTND.Value = arrnt[1];
                                            }
                                            else
                                            {
                                                repd.paraHoTenNguoiThan.Value = "- Tên bố hoặc mẹ của trẻ hoặc người đưa trẻ đến khám bệnh, chữa bệnh: " + ttd.First().NThan;
                                            }
                                        }
                                        switch (ttd.First().GTinh)
                                        {
                                            case 1:
                                                repd.GTinh.Value = "Nam";
                                                repd.Nu.Value = "/";
                                                break;

                                            case 0:
                                                repd.GTinh.Value = "Nữ";
                                                repd.Nam.Value = "/";
                                                break;
                                        }
                                        var bnkb1 = _data.BNKBs.Where(p => p.IDKB == id).FirstOrDefault();
                                        if (Bien.MaBV == "12345")
                                        {
                                            if (bnkb1 != null)
                                            {
                                                if (!string.IsNullOrEmpty(bnkb1.MaICD))
                                                {
                                                    repd.ICD.Value = bnkb1.MaICD;
                                                    repd.ChanDoan.Value = "Chẩn đoán: " + bnkb1.ChanDoan;
                                                }
                                                else
                                                {
                                                    repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham.FreshString(bnkb1.BenhKhac);
                                                }
                                            }
                                        }
                                        else if (Bien.MaBV == "24297")
                                        {
                                            if (bnkb1 != null)
                                            {
                                                var kp = _data.KPhongs.FirstOrDefault(p => p.MaKP == bnkb1.MaKP);
                                                if (kp != null)
                                                {
                                                    if (kp.IsDongY == true)
                                                    {
                                                        repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham.GetChanDoanKB_ByKP(_data, _int_maBN, kp.MaKP);
                                                        //if (!string.IsNullOrEmpty(bnkb1.MaICD))
                                                        //{
                                                        //    repd.ICD.Value = bnkb1.MaICD;
                                                        //    string icds = bnkb1.MaICD + ";" + bnkb1.MaICD2;
                                                        //    var icd = _data.ICD10.Where(o => true).ToList();
                                                        //    //repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham.GhepChuoiChanDoanYHCT(icd, "", icds);

                                                        //}
                                                    }
                                                    else

                                                        repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham.FreshString(bnkb1.ChanDoan) + ";" + DungChung.Ham.FreshString(bnkb1.BenhKhac);
                                                }
                                            }
                                        }
                                        else if (Bien.MaBV == "14018")
                                        {
                                            repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham.GetChanDoanKB(_data, _int_maBN);
                                        }
                                        else if (Bien.MaBV == "14017")
                                        {
                                            string[] _MaICDarr = DungChung.Ham.getMaICDarrFull_SL(_data, _int_maBN, Bien.GetICD, id);
                                            string[] icd = _MaICDarr[0].Split(';');
                                            string[] tenicd = _MaICDarr[1].Split(';');
                                            string lydo = "";
                                            if (icd.Length <= tenicd.Length)
                                            {
                                                for (int i = 0; i < icd.Length; i++)
                                                {
                                                    lydo += " " + icd[i] + "-" + tenicd[i] + ";";
                                                }
                                                if (icd.Length < tenicd.Length)
                                                {
                                                    int cut1 = tenicd.Length - icd.Length;
                                                    int cut = tenicd.Length - cut1;
                                                    string mab1k = DungChung.Ham.FreshString(string.Join(";  ", tenicd.Skip(cut)));
                                                    lydo += " " + mab1k + ";";
                                                }
                                            }
                                            else
                                            {
                                                for (int i = 0; i < tenicd.Length; i++)
                                                {
                                                    lydo += " " + icd[i] + "-" + tenicd[i] + ";";
                                                }
                                            }

                                            repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham.FreshString(lydo);
                                        }
                                        else
                                        {
                                            repd.ICD.Value = DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, 0)[0]);
                                            if (Bien.MaBV == "20001")
                                            {
                                                string cdyhct = DungChung.Ham.GetMaYHCT(DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, 0)[0]), _data.ICD10.ToList())[1];
                                                repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham._GetCHuoiChanDoanYHCT(DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, id)[1]), cdyhct); //cdyhct + "[" + DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, id)[1]) + "]";
                                            }
                                            else
                                                repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, id)[1]);
                                        }

                                        repd.SThe.Value = ttd.First().SThe;

                                        if (Bien.MaBV == "30007")//in theo id khám bệnh của kp in đơn
                                        {
                                            if (bnkb1 != null)
                                            {
                                                string macb = bnkb1.MaCB;
                                                var ttcb = _data.CanBoes.Where(p => p.MaCB == macb).FirstOrDefault();
                                                if (ttcb != null)
                                                {
                                                    repd.TenCB.Value = ttcb.CapBac + ": " + ttcb.TenCB;
                                                }
                                                int makp1 = bnkb1.MaKP ?? 0;
                                                var ttkp = _data.KPhongs.Where(p => p.MaKP == makp1).FirstOrDefault();
                                                if (ttkp != null)
                                                {
                                                    repd.TenKP.Value = ttkp.TenKP;
                                                }
                                            }
                                        }
                                        else
                                        {
                                            repd.TenCB.Value = ktkd.First().CapBac + ": " + ktkd.First().TenCB;
                                            repd.SDTCB.Value = Bien.MaBV == "27001" ? "SĐT:" + ktkd.First().SoDT : "";
                                            repd.SDTBS.Value = Bien.MaBV == "01830" ? ((ktkd.First().SoDT != null && ktkd.First().SoDT != "") ? ("SĐT:" + ktkd.First().SoDT) : "") : "";
                                            repd.TenKP.Value = ktkd.First().TenKP;
                                        }
                                        repd.DiaChi.Value = "Địa chỉ liên hệ: " + ttd.First().DChi;

                                        repd._MaBNhan.Value = _int_maBN.ToString();
                                        if (Bien.MaBV != "20001")
                                            repd.MaBN.Value = "Mã BN: " + _int_maBN.ToString();
                                        if (ktkd.First().NgayKe.Value.Day > 0)
                                            repd.ngayke.Value = DungChung.Ham.NgaySangChu(ktkd.First().NgayKe.Value);
                                    }

                                    var qd1 = (from dt in _data.DThuocs.Where(p => p.MaBNhan == _int_maBN).Where(p => p.IDDon == _IDDon).Where(p => p.PLDV == 1)
                                               join dtct in _data.DThuoccts.Where(p => (Bien.MaBV == "27023" || Bien.MaBV == "20001" || Bien.MaBV == "30005" || Bien.MaBV == "30010") ? true : (p.TrongBH != 2)) on dt.IDDon equals dtct.IDDon
                                               join dv in _data.DichVus.Where(o => (Bien.MaBV == "30010" && !printCongKham) ? o.IDNhom != 13 : true) on dtct.MaDV equals dv.MaDV
                                               join tn in _data.TieuNhomDVs.Where(p => Bien.MaBV == "12122" ? p.IDNhom == 4 : true) on dv.IdTieuNhom equals tn.IdTieuNhom
                                               where tn.TenRG != "Thuốc gây nghiện" && tn.TenRG != "Thuốc hướng tâm thần"
                                               select new { MaTam = dv.MaTam, TenTNRG = tn.TenRG, dv.TenRG, TenDV = _maCQCQ == "00000" ? dv.TenHC + " " + dv.HamLuong : ((Bien.MaBV == "12345" || Bien.MaBV == "24297") ? ((dv.TenDV ?? "") + " (" + (dv.TenHC ?? "") + ") " + (dv.HamLuong ?? "")) : ((dv.TenHC.Contains(",") || dv.TenHC.Contains("+") || dv.TenHC.Contains(";")) ? dv.TenDV : (dv.TenHC + " (" + dv.TenDV + ") " + dv.HamLuong))), dv.TenHC, dv.HamLuong, dv.MaDV, dv.DonVi, dtct.SoLuong, dtct.IDDonct, dtct.GhiChu, HuongDan = "", DuongD = dtct.DuongD ?? "", SoLan = dtct.SoLan ?? "", MoiLan = dtct.MoiLan ?? "", Luong = dtct.Luong ?? "", DviUong = dtct.DviUong ?? "", LoiDan = dt.GhiChu, TenDVMain = dv.TenDV }).OrderBy(p => p.IDDonct).ToList();
                                    //(Bien.MaBV == "27023" || Bien.MaBV == "08602" || (Bien.MaBV == "12001" && dv.TenTNRG != Bien.st_TieuNhomRG_ChuyenKhoa.ThuocThuong_CPYHCT)) ? (dv.TenHC + "(" + dv.TenDV + ")" + " " + dv.HamLuong) : ((Bien.MaBV == "04011" || Bien.MaBV == "24009" || _maCQCQ == "24009") ? dv.TenRG : (Bien.MaTinh == "12" ? dv.TenDV + "( " + dv.HamLuong + " )" : dv.TenDV))
                                    var qd2 = (from dv in qd1.Where(p => Bien.MaBV == "27022" ? p.TenTNRG != Bien.st_TieuNhomRG_ChuyenKhoa.ThucPhamChucNang : true)
                                               group dv by new { dv.TenDV, dv.MaDV, dv.DonVi, dv.HamLuong, dv.TenRG, dv.MaTam, dv.IDDonct } into kq
                                               select new InDonClass { TenDV = (Bien.MaBV == "24009" || _maCQCQ == "24009") ? kq.Key.TenRG : kq.Key.TenDV, HamLuong = kq.Key.HamLuong, MaDV = kq.Key.MaDV, DonVi = kq.Key.DonVi, SoLuong = kq.Sum(p => p.SoLuong), HuongDan = kq.First().DuongD + " " + kq.First().SoLan + " " + kq.First().MoiLan + " " + kq.First().Luong + " " + kq.First().DviUong + " " + "; " + kq.First().GhiChu, TenHC = kq.First().TenHC, TenDVMain = kq.First().TenDVMain, IDDonct = kq.Key.IDDonct, MaTam = kq.Key.MaTam }).OrderBy(p => p.IDDonct).ToList();

                                    if (qd2 != null && qd2.Count > 0 && (Bien.MaBV == "27183" || Bien.MaBV == "27023"))
                                    {
                                        foreach (var item in qd2)
                                        {
                                            item.TenDV = !string.IsNullOrEmpty(item.TenHC) ? ((item.TenHC.Contains(".") || item.TenHC.Contains(",") || item.TenHC.Contains("+") || item.TenHC.Contains(";")) ? (item.TenDVMain + " (" + item.HamLuong) + ")" : item.TenDV) : item.TenDV;
                                        }
                                    }

                                    repd.LoiDanBS.Value = qd1.Count > 0 ? qd1.First().LoiDan : "";
                                    repd.LoiDanBS.Value += Bien.MaBV == "24012" ? "\n\n\n" : "";
                                    repd.DataSource = qd2.ToList();
                                    repd.ThuKho.Value = Bien.ThuKho;
                                    repd.BindData();
                                    repd.CreateDocument();
                                    frm.prcIN.PrintingSystem = repd.PrintingSystem;
                                    frm.ShowDialog();
                                }
                                #endregion
                            }
                            #endregion
                            #region (Bien.MaBV == "27022" && test.Count > 0)
                            if (Bien.MaBV == "27022" && test.Count > 0)
                            {
                                QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(Bien.StrCon);
                                BaoCao.rep_DThuoc_TuVan rep1 = new BaoCao.rep_DThuoc_TuVan();
                                var qbn = (from bn in data.BenhNhans.Where(p => p.MaBNhan == _int_maBN)
                                           join bnkb in data.BNKBs on bn.MaBNhan equals bnkb.MaBNhan
                                           join ttbx in data.TTboXungs on bn.MaBNhan equals ttbx.MaBNhan
                                           select new
                                           {
                                               bn.MaBNhan,
                                               bn.TenBNhan,
                                               bn.Tuoi,
                                               GTinh = bn.GTinh == 1 ? "Nam" : "Nữ",
                                               bn.DChi,
                                               bn.DTuong,
                                               bn.SThe,
                                               bn.HanBHTu,
                                               bn.HanBHDen,
                                               bnkb.ChanDoan,
                                               bnkb.BenhKhac,
                                               ttbx.NThan
                                           }).ToList();

                                if (qbn.Count > 0)
                                {
                                    rep1.lblTuoi.Text = DungChung.Ham.TuoitheoThang(data, _int_maBN, "72-00");//Bien.formatAge);
                                    if (rep1.lblTuoi.Text.Contains("tháng") || rep1.lblTuoi.Text.Contains("ngày"))
                                    {
                                        string[] arr = qbn.FirstOrDefault().NThan.Split(';');
                                        rep1.lblTenBN.Text = arr[0];
                                        rep1.xrLabel2.Text = "Họ tên bố mẹ:";
                                    }
                                    else
                                        rep1.lblTenBN.Text = qbn.FirstOrDefault().TenBNhan.ToUpper();
                                    rep1.lblGTinh.Text = qbn.FirstOrDefault().GTinh;
                                    rep1.lblDChi.Text = qbn.FirstOrDefault().DChi;
                                    rep1.lblChanDoan.Text = DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(data, _IDBN, Bien.GetICD, 0)[1]);
                                }
                                var qdthuoc = (from dt in data.DThuocs.Where(p => p.MaBNhan == _int_maBN)
                                               join cb in data.CanBoes on dt.MaCB equals cb.MaCB
                                               join dtct in data.DThuoccts.Where(p => p.IDDon == _IDDon) on dt.IDDon equals dtct.IDDon
                                               join dv in data.DichVus on dtct.MaDV equals dv.MaDV
                                               join _tn in data.TieuNhomDVs.Where(p => p.TenRG == Bien.st_TieuNhomRG_ChuyenKhoa.ThucPhamChucNang) on dv.IdTieuNhom equals _tn.IdTieuNhom
                                               select new
                                               {
                                                   TenThuoc = dv.TenDV,
                                                   dtct.SoLuong,
                                                   dv.DonVi,
                                                   dtct.DuongD,
                                                   dtct.SoLan,
                                                   dtct.MoiLan,
                                                   dtct.Luong,
                                                   dtct.DviUong,
                                                   dtct.GhiChu,
                                                   CachDung = (dtct.DuongD ?? "") + " " + (dtct.SoLan ?? "") + " " + (dtct.MoiLan ?? "") + " " + (dtct.Luong ?? "") + " " + (dtct.DviUong ?? "") + ", " + dtct.GhiChu,
                                                   cb.TenCB,
                                                   dt.NgayKe
                                               }).ToList();

                                if (qdthuoc.Count > 0)
                                {
                                    rep1.celBS.Text = qdthuoc.FirstOrDefault().TenCB;
                                    DateTime ngayke = Convert.ToDateTime(qdthuoc.First().NgayKe);
                                    rep1.celNgay.Text = "Ngày " + ngayke.Day + " tháng " + ngayke.Month + " năm " + ngayke.Year;
                                    frmIn frm1 = new frmIn();
                                    rep1.DataSource = qdthuoc.ToList();
                                    rep1.BindingData();
                                    rep1.CreateDocument();
                                    frm1.prcIN.PrintingSystem = rep1.PrintingSystem;
                                    frm1.ShowDialog();
                                }
                            }
                            #endregion
                        }
                        #endregion
                        #region (DateTime.Now.Date < Convert.ToDateTime("01/05/2016"))
                        else
                        {
                            BaoCao.repDonThuoc repd = new BaoCao.repDonThuoc();
                            repd._idDon.Value = ktkd.First().IDDon;
                            int _idDon = ktkd.First().IDDon;
                            var ttd = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _int_maBN)
                                       join kb in _data.BNKBs on bn.MaBNhan equals kb.MaBNhan
                                       select new { bn.GTinh, bn.TenBNhan, bn.NamSinh, bn.NgaySinh, bn.ThangSinh, bn.NNhap, kb.MaICD, kb.ChanDoan, kb.BenhKhac, kb.IDKB, bn.SThe, bn.DChi }).OrderByDescending(p => p.IDKB).ToList();
                            if (ttd.Count > 0)
                            {
                                repd._TenBNhan.Value = ttd.First().TenBNhan;
                                repd.Tuoi.Value = DungChung.Ham.TuoitheoThang(_data, _int_maBN, Bien.formatAge);
                                // KT
                                switch (ttd.First().GTinh)
                                {
                                    case 1:
                                        repd.GTinh.Value = "Nam";
                                        break;

                                    case 0:
                                        repd.GTinh.Value = "Nữ";
                                        break;
                                }

                                repd.ICD.Value = DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, 0)[0]);
                                repd.SThe.Value = ttd.First().SThe;
                                repd.ChanDoan.Value = "Chẩn đoán: " + DungChung.Ham.FreshString(DungChung.Ham.getMaICDarr(_data, _int_maBN, Bien.GetICD, id)[1]);

                                repd.TenCB.Value = ktkd.First().CapBac + ": " + ktkd.First().TenCB;
                                repd.TenKP.Value = ktkd.First().TenKP;
                                repd.DiaChi.Value = ttd.First().DChi;
                                repd._MaBNhan.Value = _int_maBN.ToString();
                                if (ktkd.First().NgayKe.Value.Day > 0)
                                    repd.ngayke.Value = DungChung.Ham.NgaySangChu(ktkd.First().NgayKe.Value);
                            }
                            var qd1 = (from tn in _data.TieuNhomDVs
                                       join dv in _data.DichVus on tn.IdTieuNhom equals dv.IdTieuNhom
                                       join dtct in _data.DThuoccts on dv.MaDV equals dtct.MaDV
                                       where (dtct.IDDon == _IDDon)

                                       select new { dtct.TrongBH, TenDV = Bien.MaBV == "27023" ? (dv.TenHC + " (" + dv.TenDV + ")") : dv.TenDV, dv.MaDV, dv.DonVi, dtct.SoLuong, dtct.IDDonct, HuongDan = dtct.DuongD + dtct.SoLan + dtct.MoiLan + dtct.Luong + dtct.DviUong }).OrderBy(p => p.IDDonct).ToList();

                            if (Bien.MaBV == "24009")
                                repd.CongKhoan.Value = "Cộng: " + qd1.Count + " khoản";
                            else
                                repd.CongKhoan.Value = "Cộng: ............... khoản";
                            if (qd1.Count > 0)
                                repd.DataSource = qd1.Where(p => Bien.MaBV == "30340" ? p.TrongBH == 1 : true).ToList();

                            //rep.ShowPreviewDialog();
                            //rep.DataMember = "Table";
                            repd.ThuKho.Value = Bien.ThuKho;
                            repd.BindData();
                            repd.CreateDocument();
                            frm.prcIN.PrintingSystem = repd.PrintingSystem;

                            frm.ShowDialog();
                            if (Bien.MaBV == "12122")
                            {
                                List<DThuocct> _ldthuocct = _data.DThuoccts.Where(p => p.IDDon == _idDon).Where(p => p.Status != -1).ToList();
                                foreach (DThuocct dtct in _ldthuocct)
                                {
                                    dtct.SoPL = -1;
                                }
                                _data.SaveChanges();
                            }
                        }
                        #endregion
                        break;
                        #endregion
                }//ket thuc switch
            }
        }

        #endregion

        #region kiểm tra đối tượng BHYT

        public static void _set_dtBHYT()
        {
            QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(Bien.StrCon);
            var dt = _data.DTBNs.Where(p => p.HTTT == 1).ToList();
            if (dt.Count > 0)
            {
                Bien._idDTBHYT = dt.First().IDDTBN;
            }
            else
                Bien._idDTBHYT = -1;
        }

        #endregion

        #region thêm tiền phụ thu vào DThuocct

        public static bool _InsertPhuThu(QLBV_Database.QLBVEntities _data, int _IDDThuoct, double _GiaPhuThu)
        {
            var _ldtct = _data.DThuoccts.Where(p => p.IDDonct == _IDDThuoct).FirstOrDefault();
            if (_ldtct == null)
                return false;
            DThuocct a = new DThuocct();
            a.IDDon = _ldtct.IDDon;
            a.MaDV = _ldtct.MaDV;
            a.DonVi = _ldtct.DonVi;
            a.SoLuong = _ldtct.SoLuong;
            a.DonGia = _GiaPhuThu;
            a.ThanhTien = _ldtct.SoLuong * _GiaPhuThu;
            a.TienBN = _ldtct.SoLuong * _GiaPhuThu;
            a.TrongBH = 3;
            a.NgayNhap = _ldtct.NgayNhap;
            a.IDCD = _ldtct.IDCD;
            a.MaCB = _ldtct.MaCB;
            a.MaKP = _ldtct.MaKP;
            a.IDKB = _ldtct.IDKB;
            a.Loai = _ldtct.Loai;
            a.ThanhToan = _ldtct.ThanhToan;
            a.MaKPtk = _ldtct.MaKPtk;
            a.TyLeTT = 100;
            a.LoaiDV = _ldtct.LoaiDV;
            a.Status = _ldtct.Status;
            _data.DThuoccts.Add(a);
            _data.SaveChanges();
            return true;
        }

        #endregion
        #region Update_Delete_CongKham

        public static string maCKham_CKhoa(int mack)
        {
            try
            {
                var a = Bien._lChuyenKhoa.Where(p => p.MaCK == mack).Select(p => p.MaCK_QD).FirstOrDefault();
                string mack_qd = a.ToString("D2");
                return mack_qd + "." + Bien.mack_theoHangBV[DungChung.Ham.hangBVCK(Bien.MaBV)];
            }
            catch
            {
                return "";
            }
        }

        /// <summary>
        /// Kiểm tra xem công khám có được thiết lập đúng hay ko
        /// </summary>
        /// <param name="loai">Trường loại trong bảng dịch vụ: ID đối tượng bệnh nhân</param>
        /// <param name="boolTheoChuyenKhoa">true: Công khám được set theo chuyên khoa ; false: Công khám không set theo chuyên khoa mà do bệnh viện tự thiết lập theo từng khoa phòng</param>

        /// <param name="MaQD">Mã QD trong danh mục dịch vụ</param>
        /// <param name="MaCK">Mã chuyên khoa</param>
        /// <returns></returns>
        public static bool Checkin = false;

        public static bool checkCongKham(int? loai, bool boolTheoChuyenKhoa, string MaQD, int MaCK)
        {
            if (boolTheoChuyenKhoa)
            {
                #region Công khám được set theo chuyên khoa
                var a = Bien._lChuyenKhoa.Where(p => p.MaCK == MaCK).Select(p => p.MaCK_QD).FirstOrDefault();
                string mack_qd = a.ToString("D2");
                string maCongKham = mack_qd + "." + Bien.mack_theoHangBV[DungChung.Ham.hangBVCK(Bien.MaBV)];
                if (maCongKham == MaQD)
                    return true;
                else
                    return false;

                #endregion
            }
            else
            {
                #region Công khám không được set theo chuyên khoa (được set theo khoa phòng)

                string maCongKham = (loai == null ? "" : loai.ToString()) + "." + Bien.mack_theoHangBV[DungChung.Ham.hangBVCK(Bien.MaBV)];
                if (maCongKham == MaQD)
                    return true;
                else
                    return false;
                #endregion
            }
        }

        public static bool CheckCuoiTuan(DateTime dt)
        {
            var thu1 = dt.DayOfWeek;
            int thu = Convert.ToInt32(thu1);
            if (thu == 0)
                return true;
            if (thu == 6)
                return true;
            return false;
        }

        /// <summary>
        /// Lấy mã công khám tự động được thiết lập
        /// </summary>
        /// <param name="_maBN"></param>
        /// <param name="idkb">id khám bệnh</param>
        /// <param name="thoigiantaoCK">Thời gian tạo công khám</param>
        /// <returns></returns>
        public static int GetMackham_ck(int _maBN, int idkb, DateTime thoigiantaoCK)
        {
            int maDV = 0;
            int _idDTBN = -1;
            string _makpsd = ";";
            int _makp = 0;
            bool ngoaigio = false;
            QLBV_Database.QLBVEntities DaTaContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
            #region kiểm tra lần đến khám
            var qbenhnhan = DaTaContext.BenhNhans.Single(p => p.MaBNhan == _maBN);
            DateTime tungaykham = DungChung.Ham.NgayTu(qbenhnhan.NNhap.Value);
            DateTime denngaykham = DungChung.Ham.NgayDen(qbenhnhan.NNhap.Value);
            var bndakham = DaTaContext.BenhNhans.Where(p => qbenhnhan.IDPerson > 0 && p.IDPerson == qbenhnhan.IDPerson && p.NNhap >= tungaykham && p.NNhap <= denngaykham).ToList();

            #endregion
            var bnhan = DaTaContext.BenhNhans.Where(p => p.MaBNhan == _maBN).FirstOrDefault();
            int _mack = -1;
            int dtbn = -1;
            if (bnhan != null)
            {
                _idDTBN = bnhan.IDDTBN;
                if (_makp == 0)
                    _makp = bnhan.MaKP ?? 0;
                _makpsd = ";" + bnhan.MaKP + ";";
                var qchuyenkhoa = (from kp in DaTaContext.KPhongs.Where(p => p.MaKP == _makp) select kp).FirstOrDefault();
                if (qchuyenkhoa != null)
                    _mack = qchuyenkhoa.MaCK;

                dtbn = DaTaContext.DTBNs.Where(p => p.IDDTBN == _idDTBN).Select(p => p.HTTT).FirstOrDefault();
            }

            var bnkbT = DaTaContext.BNKBs.Where(p => p.MaBNhan == _maBN).ToList();
            var bnkb = bnkbT.Where(p => p.IDKB == idkb).ToList();
            if (bnkb.Count > 0)
            {
                _mack = bnkb.First().MaCK;
                _makpsd = ";" + bnkb.First().MaKP + ";";
                _makp = bnkb.First().MaKP == null ? 0 : bnkb.First().MaKP.Value;
            }

            if (Bien.MaBV == "01071" || Bien.MaBV == "01049" || Bien.MaBV == "12345" || Bien.MaBV == "24297")
            {
                if (CheckCuoiTuan(thoigiantaoCK) || CheckNGioHC(thoigiantaoCK))
                    ngoaigio = true;
            }
            string mackham_ck = maCKham_CKhoa(_mack);
            var ckham2 = (from nhom in DaTaContext.NhomDVs.Where(p => p.TenNhomCT.Contains("Khám bệnh"))
                          join dvu in DaTaContext.DichVus.Where(p => p.PLoai == 2 && p.Status == 1 && p.Loai == _idDTBN) on nhom.IDNhom equals dvu.IDNhom
                          select new { dvu.MaKPsd, dvu.DonGia, dvu.DonGia2, dvu.DonGiaDV2, dvu.DonGiaBHYT, dvu.MaDV, dvu.DonVi, dvu.TrongDM, dvu.MaQD }).OrderByDescending(p => p.DonGia).ToList();

            #region xác định có khai báo công khám theo chuyên khoa
            List<string> lck = new List<string>();
            for (int i = 1; i < 18; i++)
            {
                lck.Add(i.ToString("D2") + ".1895");
                lck.Add(i.ToString("D2") + ".1896");
                lck.Add(i.ToString("D2") + ".1897");
                lck.Add(i.ToString("D2") + ".1898");
                lck.Add(i.ToString("D2") + ".1899");
            }
            var qCheckChuyenKhoa = ckham2.Where(p => lck.Contains(p.MaQD)).ToList();
            bool boolTheoChuyenKhoa = false;
            if (qCheckChuyenKhoa.Count > 0)
                boolTheoChuyenKhoa = true;
            #endregion
            var ckham = (from dv in ckham2
                         where (dv.MaKPsd != null && dv.MaKPsd.Contains(_makpsd))
                         select new { dv.DonGia, dv.DonGiaBHYT, dv.DonGia2, dv.DonGiaDV2, dv.MaDV, dv.DonVi, dv.TrongDM, dv.MaQD }).OrderByDescending(p => p.DonGia).ToList();
            if (bnhan != null)
            {
                if (Bien.MaBV == "01071" || Bien.MaBV == "01049" || Bien.MaBV == "12345" || Bien.MaBV == "24297")
                {
                    if (bnhan != null && dtbn != 1)
                    {
                        if (bnhan.CapCuu == 1)// nếu bệnh nhân cấp cứu (bệnh nhân dịch vụ lấy công khám theo chuyên khoa cấp cứu)
                            mackham_ck = maCKham_CKhoa(47);
                        else if (ngoaigio) // nếu là bệnh nhân ngoài giờ (đang áp dụng cho bv 01071 )
                        {
                            mackham_ck = _idDTBN + "." + Bien.mack_theoHangBV[DungChung.Ham.hangBVCK(Bien.MaBV)] + ".NG";
                        }
                    }
                }
                if (dtbn != 1 && !boolTheoChuyenKhoa && !ngoaigio && (bnhan.CapCuu != 1 || Bien.MaBV == "01017"))
                    mackham_ck = _idDTBN.ToString() + "." + Bien.mack_theoHangBV[DungChung.Ham.hangBVCK(Bien.MaBV)];

                //bn dịch vụ đã thiết lập công khám theo chuyên khoa khám thì lấy theo mã đó, còn nếu không lấy theo mã dv chung
                if (dtbn != 1 && ckham.Where(p => p.MaQD == mackham_ck).Count() == 0)
                    mackham_ck = _idDTBN.ToString() + "." + Bien.mack_theoHangBV[DungChung.Ham.hangBVCK(Bien.MaBV)];
            }

            var qkq = ckham.Where(p => p.MaQD == mackham_ck).FirstOrDefault();
            if (qkq != null)
                maDV = qkq.MaDV;
            return maDV;
        }

        /// <summary>
        ///
        /// </summary>
        /// <param name="_maBN"></param>
        /// <param name="idkb"></param>
        /// <param name="update">1: update, 0:delete</param>
        /// <returns></returns>
        public static bool Update_Delete_CongKham(int _maBN, int idkb, bool update, DateTime ngaychidinh, bool isKhamChuyenGia = false)
        {
            int _idDTBN = -1;
            int _madvCK = -1;
            int maxid = -1;
            double _tyleTT = 1, _Dongia = 0;
            string BNBHYT = "";
            string _makpsd = ";";
            int _makp = 0;
            bool ngoaigio = false;

            bool landenkham = false; //kiểm tra bệnh nhân đến khám lần thứ mấy trong ngày : false: lần đầu tiên; true: các lần sau
            QLBV_Database.QLBVEntities DaTaContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
            #region kiểm tra lần đến khám
            var qbenhnhan = DaTaContext.BenhNhans.Where(p => p.MaBNhan == _maBN).FirstOrDefault();
            if (qbenhnhan != null)
            {
                DateTime tungaykham = DungChung.Ham.NgayTu(qbenhnhan.NNhap.Value);
                DateTime denngaykham = DungChung.Ham.NgayDen(qbenhnhan.NNhap.Value);
                var bndakham = DaTaContext.BenhNhans.Where(p => qbenhnhan.IDPerson > 0 && p.IDPerson == qbenhnhan.IDPerson && p.NNhap >= tungaykham && p.NNhap <= denngaykham).ToList();
                if (bndakham.Where(o => !string.IsNullOrWhiteSpace(o.SThe)).Count() > 1)
                    landenkham = true;
                else
                {
                    if (Bien.MaBV == "01049" || Bien.MaBV == "01071")
                    {
                        var donThuoc = (from dt in DaTaContext.DThuocs.Where(o => o.MaBNhan == _maBN)
                                        join dtct in DaTaContext.DThuoccts on dt.IDDon equals dtct.IDDon
                                        join dv in DaTaContext.DichVus.Where(o => o.IDNhom == 13) on dtct.MaDV equals dv.MaDV
                                        select dtct).ToList();
                        landenkham = (donThuoc != null && donThuoc.Count >= 1);
                    }
                    else
                        landenkham = false;
                }
            }

            #endregion
            var bnhan = DaTaContext.BenhNhans.Where(p => p.MaBNhan == _maBN).FirstOrDefault();
            int _mack = -1;
            int dtbn = -1;
            bool KSK = false;
            bool rs = false;
            if (bnhan != null)
            {
                if (bnhan.IDDTBN == 3)
                    KSK = true;
                _idDTBN = bnhan.IDDTBN;
                if (_makp == 0)
                    _makp = bnhan.MaKP ?? 0;
                _makpsd = ";" + bnhan.MaKP + ";";
                var qchuyenkhoa = (from kp in DaTaContext.KPhongs.Where(p => p.MaKP == _makp) select kp).FirstOrDefault();
                if (qchuyenkhoa != null)
                    _mack = qchuyenkhoa.MaCK;

                dtbn = DaTaContext.DTBNs.Where(p => p.IDDTBN == _idDTBN).Select(p => p.HTTT).FirstOrDefault();
            }

            var bnkbT = DaTaContext.BNKBs.Where(p => p.MaBNhan == _maBN).ToList();
            var bnkb = bnkbT.Where(p => p.IDKB == idkb).ToList();
            if (bnkb.Count > 0)
            {
                _mack = bnkb.First().MaCK;
                _makpsd = ";" + bnkb.First().MaKP + ";";
                _makp = bnkb.First().MaKP == null ? 0 : bnkb.First().MaKP.Value;
                if (Bien.MaBV == "01071" || Bien.MaBV == "01049" || Bien.MaBV == "12345" || Bien.MaBV == "24297")
                {
                    if (CheckCuoiTuan(bnkb.First().NgayKham.Value) || CheckNGioHC(bnkb.First().NgayKham.Value))
                        ngoaigio = true;
                }
            }
            else if (bnhan != null)
            {
                if (Bien.MaBV == "01071" || Bien.MaBV == "01049" || Bien.MaBV == "12345" || Bien.MaBV == "24297")
                {
                    if (CheckCuoiTuan(bnhan.NNhap.Value) || CheckNGioHC(bnhan.NNhap.Value))
                        ngoaigio = true;
                }
            }

            string mackham_ck = maCKham_CKhoa(_mack);
            string mackham_yc = "";

            int idDTBN_BHYT = 1;
            if (Bien.MaBV == "30009")
            {
                var qdtbn = DaTaContext.DTBNs.Where(p => p.DTBN1 == "BHYT").FirstOrDefault();
                if (qdtbn != null)
                    idDTBN_BHYT = qdtbn.IDDTBN;
            }

            var ckham2 = (from nhom in DaTaContext.NhomDVs.Where(p => p.TenNhomCT.Contains("Khám bệnh"))
                          join dvu in DaTaContext.DichVus.Where(p => p.PLoai == 2 && p.Status == 1 && (Bien.MaBV == "30009" ? (p.Loai == idDTBN_BHYT) : (Bien.MaBV == "12345" || Bien.MaBV == "24297") ? (update ? (isKhamChuyenGia ? p.Loai == -1 : p.Loai == _idDTBN) : true) : p.Loai == _idDTBN)) on nhom.IDNhom equals dvu.IDNhom
                          select new { dvu.MaKPsd, dvu.DonGia, dvu.DonGia2, dvu.DonGiaDV2, dvu.DonGiaBHYT, dvu.DonGiaTT15, dvu.DonGiaTT39, dvu.MaDV, dvu.DonVi, dvu.TrongDM, dvu.MaQD }).OrderByDescending(p => p.DonGia).ToList();

            #region xác định có khai báo công khám theo chuyên khoa
            List<string> lck = new List<string>();
            for (int i = 1; i < 18; i++)
            {
                lck.Add(i.ToString("D2") + ".1895");
                lck.Add(i.ToString("D2") + ".1896");
                lck.Add(i.ToString("D2") + ".1897");
                lck.Add(i.ToString("D2") + ".1898");
                lck.Add(i.ToString("D2") + ".1899");
            }
            lck.Add("TYT.1899");//MaQD cho trạm y tế
            var qCheckChuyenKhoa = ckham2.Where(p => lck.Contains(p.MaQD)).ToList();
            bool boolTheoChuyenKhoa = false;
            if (qCheckChuyenKhoa.Count > 0)
                boolTheoChuyenKhoa = true;
            #endregion
            int TrongDm = 0;
            var ckham = (from dv in ckham2
                         where (dv.MaKPsd != null && dv.MaKPsd.Contains(_makpsd))
                         select new { dv.DonGia, dv.DonGiaBHYT, dv.DonGia2, dv.DonGiaDV2, dv.DonGiaTT15, dv.DonGiaTT39, dv.MaDV, dv.DonVi, dv.TrongDM, dv.MaQD }).OrderByDescending(p => p.DonGia).ToList();
            if (bnhan != null)
            {
                BNBHYT = bnhan.DTuong;

                if (bnhan.DTuong == "BHYT")
                    TrongDm = 1;
                if (Bien.MaBV == "01071" || Bien.MaBV == "01049" || Bien.MaBV == "12345" || Bien.MaBV == "24297")
                {
                    if (bnhan != null && dtbn != 1)
                    {
                        if (bnhan.CapCuu == 1)// nếu bệnh nhân cấp cứu (bệnh nhân dịch vụ lấy công khám theo chuyên khoa cấp cứu)
                            mackham_ck = maCKham_CKhoa(47);
                        else if (ngoaigio) // nếu là bệnh nhân ngoài giờ (đang áp dụng cho bv 01071 )
                        {
                            mackham_ck = _idDTBN + "." + Bien.mack_theoHangBV[DungChung.Ham.hangBVCK(Bien.MaBV)] + ".NG";
                        }
                    }
                }
                if (dtbn != 1 && !boolTheoChuyenKhoa && !ngoaigio && (bnhan.CapCuu != 1 || Bien.MaBV == "01017"))
                    mackham_ck = _idDTBN.ToString() + "." + Bien.mack_theoHangBV[DungChung.Ham.hangBVCK(Bien.MaBV)];

                if (DungChung.Ham.hangBVCK(Bien.MaBV) == 4 && (Bien.MaBV != "27001" && Bien.MaBV != "30340" && Bien.MaBV != "27183" && Bien.MaBV != "27194" && Bien.MaBV != "26062" && Bien.MaBV != "30280" && Bien.MaBV != "30303" && Bien.MaBV != "30372" && Bien.MaBV != "24272"))
                {
                    mackham_ck = "TYT.1899";
                }
                //bn dịch vụ đã thiết lập công khám theo chuyên khoa khám thì lấy theo mã đó, còn nếu không lấy theo mã dv chung
                if (dtbn != 1 && ckham.Where(p => p.MaQD == mackham_ck).Count() == 0)
                    mackham_ck = _idDTBN.ToString() + "." + Bien.mack_theoHangBV[DungChung.Ham.hangBVCK(Bien.MaBV)];

                if (Bien.MaBV == "34019" && bnhan.PLKham == 1)
                    mackham_ck = "TV.34019";
                if (Bien.MaBV == "34019" && bnhan.PLKham == 2)
                {
                    mackham_yc = "YC.34019";//thêm công khám theo YC;
                }
            }

            List<int> _lmack = new List<int>();
            if (Bien.MaBV == "24272")
            {
                foreach (var i in ckham2)
                {
                    if (i.MaQD != "YC.34019")
                        _lmack.Add(i.MaDV);
                }
            }
            else
            {
                foreach (var i in ckham)
                {
                    if (i.MaQD != "YC.34019")
                        _lmack.Add(i.MaDV);
                }
            }

            bool kttontaick = false;
            //bool giacu = DungChung.Ham.GiaCu(_maBN, TrongDm, ngaychidinh);
            int giacu = DungChung.Ham.GiaCu(_maBN, TrongDm);
            if (landenkham)
            {
                _tyleTT = 0.3;
            }

            #region tính công khám bệnh nhân
            int a = 0;
            foreach (var item in ckham)
            {
                if ((item.MaQD == mackham_ck && (mackham_yc == "" || bnhan.DTuong == "BHYT")) || (item.MaQD == mackham_yc && Bien.MaBV == "34019"))
                {
                    // if ( item.MaQD == mackham_ck || (item.MaQD == mackham_yc && Bien.MaBV == "34019"))
                    kttontaick = true;
                    _madvCK = item.MaDV;

                    //   _Dongia = item.TrongDM == 1 ? (giacu ? item.DonGia : item.DonGiaBHYT) : (giacu ? item.DonGia : item.DonGiaDV2);

                    _Dongia = (lck.Contains(item.MaQD) && bnhan.DTuong == "BHYT") ? (giacu == 15 ? item.DonGiaTT15 : (giacu == 39 ? item.DonGiaTT39 : item.DonGiaBHYT)) : ((giacu == 0) ? item.DonGia2 : item.DonGiaDV2);
                    //_Dongia = (lck.Contains(item.MaQD) && bnhan.DTuong == "BHYT") ? (giacu ? item.DonGia : item.DonGiaBHYT) : (giacu ? item.DonGia2 : item.DonGiaDV2);
                    var kt = DaTaContext.DThuocs.Where(p => p.PLDV == 2).Where(p => p.MaBNhan == _maBN).ToList();
                    var ktck2 = (from dt in DaTaContext.DThuocs.Where(p => p.MaBNhan == _maBN)
                                 join dtct1 in DaTaContext.DThuoccts on dt.IDDon equals dtct1.IDDon
                                 select dtct1).ToList();

                    var ktck = (from dt in ktck2
                                join b in _lmack on dt.MaDV equals b
                                select dt).ToList();
                    if (update) // thêm công khám
                    {
                        if (ktck.Select(o => o.MaDV).Contains(item.MaDV))
                            continue;
                        // kiểm tra công khám có chuyên khoa rồi thì không thêm
                        var ktckhoa = bnkbT.Where(p => p.MaCK == _mack).ToList();
                        if (ktckhoa.Count > 1)
                            continue;

                        //có công khám theo y/c rồi thì ko thêm nữa
                        if (item.MaQD == "YC.34019")
                        {
                            var ktckyv = (from dt in ktck2
                                          join b in ckham2 on dt.MaDV equals b.MaDV
                                          select dt).ToList();
                            if (ktckyv.Count > 0)
                                continue;
                        }
                        if (item.MaQD == "TV.34019")
                        {
                            var ktckyv = (from dt in ktck2
                                          join b in ckham2 on dt.MaDV equals b.MaDV
                                          select dt).ToList();
                            if (ktckyv.Count > 0)
                                continue;
                        }

                        //
                        // kiểm tra kp lâm sàng không thêm công khám
                        var ktpl = DaTaContext.KPhongs.Where(p => p.PLoai == "Lâm sàng" && p.MaKP == _makp).ToList();
                        if (ktpl.Count > 0)
                            continue;

                        // kiểm tra tiền công khám đã thu trực tiếp
                        var kttu = (from tu in DaTaContext.TamUngs
                                    join tuuct in DaTaContext.TamUngcts on tu.IDTamUng equals tuuct.IDTamUng
                                    where tu.MaBNhan == _maBN && tuuct.MaDV == _madvCK
                                    select tu).ToList();
                        var kttt12345 = DaTaContext.TamUngs.Where(p => p.MaBNhan == _maBN && p.IDGoiDV != null && p.IDGoiDV > 0).ToList();//12345 đã thu trực tiếp gói dv nào thì công khám mặc định đã thanh toán
                        if (kt.Count <= 0)
                        {
                            DThuoc dthuoccd = new DThuoc();
                            if (bnkb.Count > 0 && bnkb.First().NgayKham != null)
                                dthuoccd.NgayKe = bnkb.First().NgayKham;
                            else
                                dthuoccd.NgayKe = bnhan.NNhap;
                            dthuoccd.MaBNhan = _maBN;
                            dthuoccd.KieuDon = -1;
                            dthuoccd.PLDV = 2;
                            if (bnkb.Count > 0 && bnkb.First().MaCB != null)
                                dthuoccd.MaCB = bnkb.First().MaCB;
                            if (bnkb.Count > 0 && bnkb.First().MaKP != null)
                                dthuoccd.MaKP = bnkb.First().MaKP;
                            else
                                dthuoccd.MaKP = _makp;

                            DaTaContext.DThuocs.Add(dthuoccd);
                            if (DaTaContext.SaveChanges() >= 0)
                            {
                                maxid = DaTaContext.DThuocs.Where(p => p.MaBNhan == _maBN).ToList().Max(p => p.IDDon);
                            }
                        }
                        else
                        {
                            if (ktck.Count <= 0)
                                maxid = kt.First().IDDon;
                            else
                            {
                                maxid = kt.First().IDDon;
                                if (ktck.Count < 4)
                                    _tyleTT = 0.3;
                                else
                                    if (ktck.Count == 4)
                                    _tyleTT = 0.1;
                                else
                                    _tyleTT = 0;
                            }
                        }
                        if (_tyleTT > 0 && (_tyleTT == 1 || (_tyleTT < 1 && BNBHYT == "BHYT")))
                        {
                            DThuocct dtct = new DThuocct();
                            if (bnkb.Count > 0 && bnkb.First().MaCB != null)
                                dtct.MaCB = bnkb.First().MaCB;
                            else
                                dtct.MaCB = Bien.MaCB;
                            dtct.MaKP = _makp;
                            dtct.IDDon = maxid;
                            dtct.IDKB = idkb;
                            dtct.MaDV = item.MaDV;
                            dtct.SoLuong = 1;
                            if (bnkb.Count > 0 && bnkb.First().NgayKham != null)
                                dtct.NgayNhap = bnkb.First().NgayKham;
                            else
                                dtct.NgayNhap = bnhan.NNhap;
                            dtct.DonVi = item.DonVi;
                            dtct.DonGia = _Dongia;
                            dtct.ThanhTien = _Dongia * _tyleTT;
                            dtct.TrongBH = item.MaQD == "YC.34019" ? 0 : ((lck.Contains(item.MaQD) && dtbn == 1) ? 1 : 0); //item.TrongDM == null ? 0 : item.TrongDM.Value;
                            if ((Bien.MaBV == "12345" || Bien.MaBV == "24297") && KSK && kttt12345.Count() > 0)
                            {
                                dtct.ThanhToan = 1;
                            }
                            else if (kttu.Count > 0)
                                dtct.ThanhToan = 1;
                            dtct.TyLeTT = _tyleTT * 100;
                            DaTaContext.DThuoccts.Add(dtct);
                            DaTaContext.SaveChanges();
                            rs = true;
                        }
                    }
                    else
                    {
                        var ckXoa = (from dt in ktck2
                                     join b in ckham on dt.MaDV equals b.MaDV
                                     select dt).ToList();
                        if (ckXoa.Count > 0)
                        {
                            List<DThuocct> _lxoa = (from dt in DaTaContext.DThuocs.Where(p => p.MaBNhan == _maBN)
                                                    join dtct1 in DaTaContext.DThuoccts.Where(p => p.MaDV == _madvCK && p.IDKB == idkb) on dt.IDDon equals dtct1.IDDon
                                                    select dtct1).ToList();
                            foreach (var b in _lxoa)
                            {
                                DaTaContext.DThuoccts.Remove(b);
                                DaTaContext.SaveChanges();
                            }
                            a++;
                            if (Bien.MaBV == "34019" && bnhan.PLKham == 2)
                            {
                                if (bnhan.DTuong == "BHYT")
                                {
                                    if (a == 2)
                                    {
                                        rs = true;
                                        continue;
                                    }
                                }
                                else
                                {
                                    rs = true;
                                    continue;
                                }
                            }
                            else
                            {
                                rs = true;
                                continue;
                            }
                        }
                    }
                }
            }

            if (rs)
            {
                //Vào viện đẩy công khám thành ngoài danh mục
                if (Bien.MaBV == "20001" && bnhan != null && !string.IsNullOrWhiteSpace(bnhan.SThe) && bnhan.KhuVuc != null && bnhan.KhuVuc.ToLower().Contains("k") && bnhan.Tuyen == 2)
                {
                    var updateCongKham = (from dt in DaTaContext.DThuocs.Where(p => p.MaBNhan == _maBN)
                                          join dtct1 in DaTaContext.DThuoccts on dt.IDDon equals dtct1.IDDon
                                          join dv in DaTaContext.DichVus.Where(o => o.IDNhom == 13) on dtct1.MaDV equals dv.MaDV
                                          select dtct1).ToList();
                    foreach (var item in updateCongKham)
                    {
                        var ud = DaTaContext.DThuoccts.FirstOrDefault(o => o.IDDonct == item.IDDonct);
                        if (ud != null)
                        {
                            ud.TrongBH = 0;
                            DaTaContext.SaveChanges();
                        }
                    }
                }
                //Update công khám thành không thanh toán với đối tượng là khám miễn phí
                if (Bien.MaBV == "20001" && bnhan != null && bnhan.DTuong == "Khám miễn phí")
                {
                    var updateCongKham = (from dt in DaTaContext.DThuocs.Where(p => p.MaBNhan == _maBN)
                                          join dtct1 in DaTaContext.DThuoccts on dt.IDDon equals dtct1.IDDon
                                          join dv in DaTaContext.DichVus.Where(o => o.IDNhom == 13) on dtct1.MaDV equals dv.MaDV
                                          select dtct1).ToList();
                    foreach (var item in updateCongKham)
                    {
                        var ud = DaTaContext.DThuoccts.FirstOrDefault(o => o.IDDonct == item.IDDonct);
                        if (ud != null)
                        {
                            ud.TrongBH = 2;
                            DaTaContext.SaveChanges();
                        }
                    }
                }
                return rs;
            }
            #endregion

            if (kttontaick == false)
            {
                if (ckham2.Count > 0)
                {
                    if (lck.Contains(mackham_ck))
                    {
                        if (bnhan.DTuong == "BHYT" && ckham2.Where(p => p.MaQD == mackham_ck).Count() == 0)
                            MessageBox.Show("Công khám trong danh mục có mã QĐ: " + mackham_ck + "chưa được chọn sử dụng cho phòng khám của bạn");
                        else if (ckham2.Where(p => p.MaQD == mackham_ck).Count() == 0)
                            MessageBox.Show("Công khám trong danh mục có mã QĐ: YC.34019 chưa được chọn sử dụng cho phòng khám của bạn");
                    }
                    else
                        MessageBox.Show("Công khám trong danh mục có mã QĐ: " + mackham_ck + "chưa được chọn sử dụng cho phòng khám của bạn");
                }
                //if (ckham2.Where(p => p.MaQD == mackham_ck || (p.MaQD == mackham_yc && mackham_yc == "YC.34019")).ToList().Count > 0)
                //{
                //    if (mackham_yc == "YC.34019")
                //        MessageBox.Show("Công khám trong danh mục có mã QĐ: YC.34019 chưa được chọn sử dụng cho phòng khám của bạn");
                //    else
                //        MessageBox.Show("Công khám trong danh mục có mã QĐ: " + mackham_ck + "chưa được chọn sử dụng cho phòng khám của bạn");

                //}
                else if (lck.Contains(mackham_ck))
                {
                    if (bnhan.DTuong == "BHYT")
                    {
                        MessageBox.Show("Bạn chưa thiết lập dịch vụ tiền công khám trong danh mục có mã QĐ: YC.34019, " + mackham_ck);
                    }
                    else
                    {
                        MessageBox.Show("Bạn chưa thiết lập dịch vụ tiền công khám trong danh mục có mã QĐ: YC.34019");
                    }
                }
                else
                    MessageBox.Show("Bạn chưa thiết lập dịch vụ tiền công khám trong danh mục có mã QĐ: " + mackham_ck);
            }
            return false;
        }

        #endregion
        #region Nâng cấp giao diện

        public static bool updateGiaoDien()
        {
            string _duongdan = System.IO.Directory.GetCurrentDirectory();
            return true;
            //if (!string.IsNullOrEmpty(_duongdan))
            //{
            //    //int a = _DS.Count();
            // string   taikhoan = "abc";
            // string MK = "abc";
            //   ftp.Frm_Upload.ftp ftpClient = new Frm_Upload.ftp(@"ftp://118.70.117.247/", taikhoan, MK);

            //    string _duongdan = txtDuongdan.Text;
            //    bool a = true;
            //    foreach (var b in _DS)
            //    {
            //        if (b.Chon && b.SoTT != 0)
            //        {
            //            string _ten = b.Tenfile;
            //            string localFile = _duongdan + "/" + _ten;
            //            string remoteFile = _fileroot + "/" + _ten;
            //            try
            //            {
            //                ftpClient.download(remoteFile, localFile);
            //            }
            //            catch (Exception ex)
            //            {
            //                MessageBox.Show("Lỗi tải về");
            //                a = false;
            //            }
            //        }
            //    }
            //    if (a)
            //    { MessageBox.Show("Tải về thành công"); }

            //}
            //else
            //{ MessageBox.Show("Bạn cần chọn đường dẫn  lưu file!"); }
        }

        #endregion
        #region đóng ứng dụng

        public static void _closeApp(string namefile)
        {
            try
            {
                foreach (System.Diagnostics.Process item in System.Diagnostics.Process.GetProcessesByName(namefile))//nameProcess
                {
                    try
                    {
                        item.Kill();
                        item.WaitForExit();
                    }
                    catch (Win32Exception ex) { }
                    catch (InvalidOperationException ex1) { }
                }
            }
            catch
            {
            }
        }

        #endregion
        #region mở ứng dụng

        public static void _openApp(string filepath, string filename)
        {
            try
            {
                DirectoryInfo di = new DirectoryInfo("C:\\Program Files\\");
                FileInfo[] fi = di.GetFiles(filename, SearchOption.AllDirectories);
                if (fi.Count() <= 0)
                {
                    di = new DirectoryInfo("C:\\Program Files (x86)\\");
                    fi = di.GetFiles(filename, SearchOption.AllDirectories);
                }
                string path = "";

                foreach (FileInfo file in fi)
                {
                    path = file.DirectoryName + "\\" + filename;
                }
                if (!string.IsNullOrEmpty(path))
                {
                    System.Diagnostics.Process.Start(path);
                }
                return;
            }
            catch (Exception)
            {
                // MessageBox.Show("lỗi");
            }
        }

        #endregion
        #region get % BHYT thanh toán

        public static double BHTT(int madv)
        {
            double a = 1;
            QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(Bien.StrCon);
            var dv = _data.DichVus.Where(p => p.MaDV == madv).Select(p => p.BHTT).FirstOrDefault();
            if (dv.Value != null)
                a = dv.Value / 100;
            return a;
        }

        #endregion
        /// <summary>
        /// Trả về thông báo bệnh nhân đã khám trong ngày hoặc trong tháng
        /// </summary>
        /// <param name="mabnhan">Mã bệnh nhân</param>
        ///

        public static List<giaSoLoHSD> _getDSGia(QLBV_Database.QLBVEntities data, int maDV, int makho, bool keGia0 = false) //
        {
            List<giaSoLoHSD> dsach = new List<giaSoLoHSD>();
            int ppxuat = 0;

            var kp = data.KPhongs.Where(p => p.MaKP == makho).Select(p => p.PPXuat).ToList();
            if (kp.Count > 0 && kp.First() != null)
                ppxuat = kp.First().Value;

            var abc = (from nhapct in data.NhapDcts.Where(p => p.MaDV == maDV)
                       join nhap in data.NhapDs.Where(p => p.MaKP == makho) on nhapct.IDNhap equals nhap.IDNhap
                       select new
                       {
                           nhap.NgayNhap,
                           nhapct.SoLuongN,
                           nhapct.SoLo,
                           nhapct.HanDung,
                           nhapct.SoLuongX,
                           nhapct.DonGia,
                           nhapct.MaDV,
                           nhap.PLoai
                       }).ToList();

            //var _gia2 = (from nhap in abc
            //             group new { nhap } by new { MaDV = nhap.MaDV, nhap.DonGia } into kq
            //             select new
            //             {
            //                 kq.Key.DonGia,
            //                 soluongN = kq.Where(p => p.nhap.PLoai == 1).Sum(p => p.nhap.SoLuongN),
            //                 soLuongX = kq.Where(p => p.nhap.PLoai == 2 || p.nhap.PLoai == 3).Sum(p => p.nhap.SoLuongX),
            //                 ngay = kq.Min(p => p.nhap.NgayNhap)
            //             }).ToList();

            //var _gia = (from nhap in _gia2
            //            select new
            //            {
            //                nhap.DonGia,
            //                soluong = nhap.soluongN - nhap.soLuongX,
            //                ngay = nhap.ngay
            //            }).OrderBy(p => p.ngay).ToList();

            var _gia = (from nhap in abc
                        group new { nhap } by new
                        {
                            MaDV = nhap.MaDV,
                            nhap.DonGia
                        } into kq
                        select new
                        {
                            kq.Key.DonGia,
                            soluong = kq.Where(p => p.nhap.PLoai == 1).Sum(p => p.nhap.SoLuongN) - kq.Where(p => p.nhap.PLoai == 2 || p.nhap.PLoai == 3).Sum(p => p.nhap.SoLuongX),
                            ngay = kq.Min(p => p.nhap.NgayNhap)
                        }).ToList();

            Bien.SoLuongTon = 0;

            var q = data.DichVus.Where(p => p.MaDV == maDV).ToList();
            switch (ppxuat)
            {
                case 0://
                    {
                        if (q.Count > 0)
                        {
                            if (q.First().DonGia > 0)
                            {
                                giaSoLoHSD moi = new giaSoLoHSD();
                                moi.Gia = q.First().DonGia;
                                dsach.Add(moi);
                            }
                        }
                    }
                    break;

                case 1: // nhập trước xuất trước
                    {
                        bool _dongy = false;
                        if (q.Count > 0 && q.First().DongY != null && q.First().DongY == 1)
                            _dongy = true;

                        double _soluongDYHH = 0;
                        double _soLuongDYHH_KD = 0;

                        var kttutruc = data.KPhongs.Where(p => p.MaKP == makho).Where(p => p.PLoai.Contains("Tủ trực")).ToList();
                        #region tủ trực
                        if (kttutruc.Count > 0)// kiểm tra tủ trực
                        {
                            var _giatt0 = (from nhapct in data.NhapDcts.Where(p => p.MaDV == maDV)
                                           join nhap in data.NhapDs.Where(p => p.MaKPnx == makho) on nhapct.IDNhap equals nhap.IDNhap
                                           select new
                                           {
                                               DonGia = nhapct.DonGia,
                                               SoLuongX = nhapct.SoLuongX,
                                               SoLuongN = nhapct.SoLuongN,
                                               PLoai = nhap.PLoai ?? 0,
                                               KieuDon = nhap.KieuDon ?? 0,
                                               MaDV = nhapct.MaDV ?? 0,
                                               nhap.NgayNhap,
                                               nhapct.SoLo
                                           }).ToList();

                            var _giatt = (from nd in _giatt0
                                          group nd by new { nd.MaDV, nd.DonGia } into kq
                                          select new
                                          {
                                              kq.Key.DonGia,
                                              soluong = kq == null ? 0 : kq.Sum(p => p.SoLuongX) - kq.Where(p => p.PLoai == 1 && p.KieuDon == 2).Sum(p => p.SoLuongN),
                                              ngay = kq == null ? null : kq.Min(p => p.NgayNhap)
                                          }).ToList(); //.OrderBy(p => p.ngay).ToList();

                            if (_giatt.Count > 0)
                            {
                                Double[] dsgia = new Double[_giatt.Count];
                                foreach (var i in _giatt)
                                {
                                    var slkd0 = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.Status == null || p.Status == 0 || p.Status == 1)
                                                 join kd in data.DThuocs on sl.IDDon equals kd.IDDon
                                                 where (kd.MaKXuat == makho || (kd.MaKP == makho && kd.KieuDon == 4))
                                                 select new
                                                 {
                                                     sl.MaDV,
                                                     sl.DonGia,
                                                     sl.IDDonct,
                                                     sl.SoLuong,
                                                     sl.Status,
                                                     kd.MaKXuat,
                                                     kd.KieuDon,
                                                     kd.MaKP
                                                     //SLKD = (sl.MaKXuat == makho && (sl.SoLuong > 0 || (sl.SoLuong < 0 && kd.KieuDon == 2))) ? sl.SoLuong : 0,
                                                     //SLTra = (kd.MaKP == makho && sl.Status == 0 && kd.KieuDon == 4) ? sl.SoLuong : 0// Đơn treo lĩnh HC VTYT (chỉ đơn trả dược mới trừ, đơn lĩnh thì không tính thêm : Ví dụ: tủ trực còn 50 viên, kê đơn trả cho kho tổng 30 viên (nhưng chưa lĩnh) cũng chỉ kê đơn cho bệnh nhân hoặc trả dược trong vòng 20 viên còn lại; Trường hợp kê đơn lĩnh thêm 40 viên, không được tính=> chỉ được tính khi nào đã lĩnh dược về khoa
                                                 });//.ToList();

                                    var slkd1 = (from sl in slkd0
                                                 select new
                                                 {
                                                     sl.MaDV,
                                                     sl.DonGia,
                                                     sl.IDDonct,
                                                     sl.SoLuong,
                                                     sl.MaKXuat,
                                                     sl.KieuDon,
                                                     sl.Status,
                                                     SLKD = (sl.MaKXuat == makho && (sl.SoLuong > 0 || (sl.SoLuong < 0 && sl.KieuDon == 2))) ? sl.SoLuong : 0, // (sl.MaKXuat == makho && (sl.SoLuong > 0 || (sl.SoLuong < 0 && kd.KieuDon == 2))) ? sl.SoLuong : 0,
                                                     SLTra = (sl.MaKP == makho && sl.Status == 0 && sl.KieuDon == 4) ? sl.SoLuong : 0// Đơn treo lĩnh HC VTYT (chỉ đơn trả dược mới trừ, đơn lĩnh thì không tính thêm : Ví dụ: tủ trực còn 50 viên, kê đơn trả cho kho tổng 30 viên (nhưng chưa lĩnh) cũng chỉ kê đơn cho bệnh nhân hoặc trả dược trong vòng 20 viên còn lại; Trường hợp kê đơn lĩnh thêm 40 viên, không được tính=> chỉ được tính khi nào đã lĩnh dược về khoa
                                                 });//.ToList();

                                    var slkd = (from sl in slkd1
                                                group new { sl } by sl.DonGia into kq
                                                select new
                                                {
                                                    kq.Key,
                                                    soluong = kq.Sum(p => p.sl.SLKD) - kq.Sum(p => p.sl.SLTra)
                                                }).ToList();

                                    double _slkd = 0;
                                    giaSoLoHSD moi = new giaSoLoHSD();

                                    if (slkd.Count > 0)
                                    {
                                        _slkd = slkd.First().soluong;
                                    }

                                    if (i.soluong > 0)
                                    {
                                        moi.SoLuong = Math.Round(i.soluong - _slkd, 5);
                                        moi.Gia = i.DonGia;
                                    }

                                    dsach.Add(moi);
                                }

                                if (dsach.Sum(p => p.SoLuong) > 0)
                                    Bien.SoLuongTon = dsach.Sum(p => p.SoLuong);
                                else
                                    Bien.SoLuongTon = 0;
                            }
                            else
                                Bien.SoLuongTon = 0;
                        }
                        #endregion
                        else
                        {
                            var kt = data.GiaUTs.Where(p => p.MaDV == maDV).Where(p => p.MaKP == makho).ToList();

                            giaSoLoHSD moi = new giaSoLoHSD();
                            #region có giá ưu tiên
                            if (kt.Count > 0)
                            {
                                moi.Gia = kt.First().DonGia.Value;

                                // so lương ĐY hao hụt
                                if (_dongy)
                                {
                                    var qkp = data.KPhongs.Where(p => p.MaKP == makho && (p.PPHHDY == 1 || p.PPHHDY == 2)).ToList();
                                    if (qkp.Count == 0)
                                    {
                                        var dongySL = (from nhapct in data.NhapDcts.Where(p => p.MaDV == maDV && p.SoLuongDY != null && p.DonGia == moi.Gia)
                                                       join nhap in data.NhapDs.Where(p => p.MaKP == makho).Where(p => p.PLoai == 2) on nhapct.IDNhap equals nhap.IDNhap
                                                       group new { nhapct } by new { nhapct.MaDV } into kq
                                                       select new
                                                       {
                                                           soluong = kq.Sum(p => p.nhapct.SoLuongDY)
                                                       }).ToList();

                                        if (dongySL.Count > 0)
                                            _soluongDYHH = Math.Round(dongySL.First().soluong, 5);
                                    }
                                }
                                //
                                var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == moi.Gia).Where(p => p.Status == null || p.Status == 0)
                                            join kd in data.DThuocs.Where(p => p.MaKXuat == makho).Where(p => p.KieuDon != 2 && p.KieuDon != 4) on sl.IDDon equals kd.IDDon
                                            group sl by sl.DonGia into kq
                                            select new
                                            {
                                                kq.Key,
                                                soluong = kq.Sum(p => p.SoLuong)
                                            }).ToList();

                                double _slkd = 0;

                                if (slkd.Count > 0)
                                {
                                    _slkd = slkd.First().soluong;
                                }

                                //so lượng ĐY HH KD
                                if (_dongy)
                                    _soLuongDYHH_KD = DungChung.Ham._getSL_DongY(data, maDV, _slkd, makho);

                                //
                                if (_gia.Where(p => p.DonGia == moi.Gia).ToList().Count > 0 && _gia.Where(p => p.DonGia == moi.Gia).First().soluong > 0)
                                {
                                    moi.SoLuong = Math.Round(_gia.Where(p => p.DonGia == moi.Gia).First().soluong - _slkd - _soluongDYHH - _soLuongDYHH_KD, 5);
                                }

                                // soluong = soluong - DungChung.Ham._getSL_DongY(data, maDV, soluong);
                                if (moi.SoLuong > 0)
                                {
                                    Bien.SoLuongTon = moi.SoLuong;
                                }
                                else
                                {
                                    moi.SoLuong = 0;
                                    if (_gia.Count > 0)
                                    {
                                        Double[] dsgia = new Double[_gia.Count];
                                        foreach (var i in _gia)
                                        {
                                            // tạo một biến soluongkd = i.soluong- soluongkd
                                            var slkd1 = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.Status == null || p.Status == 0)
                                                         join kd in data.DThuocs.Where(p => p.MaKXuat == makho).Where(p => p.KieuDon != 2 && p.KieuDon != 4) on sl.IDDon equals kd.IDDon
                                                         group sl by sl.DonGia into kq
                                                         select new
                                                         {
                                                             kq.Key,
                                                             soluong = kq.Sum(p => p.SoLuong),
                                                         }).ToList();

                                            double _slkd1 = 0;
                                            if (slkd1.Count > 0)
                                            {
                                                _slkd1 = slkd1.First().soluong;
                                            }
                                            // dông y

                                            _soLuongDYHH_KD = 0;
                                            // so lương ĐY hao hụt
                                            if (_dongy)
                                            {
                                                var qkp = data.KPhongs.Where(p => p.MaKP == makho && (p.PPHHDY == 1 || p.PPHHDY == 2)).ToList();
                                                if (qkp.Count == 0)
                                                {
                                                    var dongySL = (from nhapct in data.NhapDcts.Where(p => p.MaDV == maDV && p.SoLuongDY != null && p.DonGia == i.DonGia)
                                                                   join nhap in data.NhapDs.Where(p => p.MaKP == makho).Where(p => p.PLoai == 2) on nhapct.IDNhap equals nhap.IDNhap
                                                                   group new { nhapct } by new { nhapct.MaDV } into kq
                                                                   select new
                                                                   {
                                                                       soluong = kq.Sum(p => p.nhapct.SoLuongDY)
                                                                   }).ToList();

                                                    if (dongySL.Count > 0)
                                                        _soluongDYHH = dongySL.First().soluong;

                                                    _soLuongDYHH_KD = DungChung.Ham._getSL_DongY(data, maDV, _slkd1, makho);
                                                }
                                            }

                                            //
                                            if (i.soluong > 0)
                                            {
                                                moi.SoLuong = Math.Round(i.soluong - _slkd1 - _soluongDYHH - _soLuongDYHH_KD, 5);
                                                moi.Gia = i.DonGia;
                                            }
                                        }
                                    }
                                }

                                dsach.Add(moi);
                            }
                            #endregion
                            #region không có giá UT
                            else if (_gia.Count > 0)
                            {
                                Double[] dsgia = new Double[_gia.Count];
                                Bien.SoLuongTon = 0;

                                foreach (var i in _gia)
                                {
                                    // tạo một biến soluongkd = i.soluong- soluongkd
                                    giaSoLoHSD moi2 = new giaSoLoHSD();
                                    var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.Status == null || p.Status == 0)
                                                join kd in data.DThuocs.Where(p => p.MaKXuat == makho).Where(p => p.KieuDon != 2 && p.KieuDon != 4) on sl.IDDon equals kd.IDDon
                                                group sl by sl.DonGia into kq
                                                select new
                                                {
                                                    DonGia = kq.Key,
                                                    soluong = kq.Sum(p => p.SoLuong)
                                                }).Where(p => p.DonGia == i.DonGia).ToList();

                                    double _slkd = 0;
                                    if (slkd.Count() > 0)
                                    {
                                        _slkd = slkd.First().soluong;
                                    }
                                    // dông y

                                    _soLuongDYHH_KD = 0;
                                    _soluongDYHH = 0;
                                    // so lương ĐY hao hụt
                                    if (_dongy)
                                    {
                                        var qkp = data.KPhongs.Where(p => p.MaKP == makho && (p.PPHHDY == 1 || p.PPHHDY == 2)).ToList();
                                        if (qkp.Count == 0)
                                        {
                                            var dongySL = (from nhapct in data.NhapDcts.Where(p => p.MaDV == maDV && p.SoLuongDY != null && p.DonGia == i.DonGia)
                                                           join nhap in data.NhapDs.Where(p => p.MaKP == makho).Where(p => p.PLoai == 2) on nhapct.IDNhap equals nhap.IDNhap
                                                           group new { nhapct } by new { nhapct.MaDV } into kq
                                                           select new
                                                           {
                                                               soluong = kq.Sum(p => p.nhapct.SoLuongDY)
                                                           }).ToList();

                                            if (dongySL.Count > 0)
                                                _soluongDYHH = dongySL.First().soluong;

                                            _soLuongDYHH_KD = _getSL_DongY(data, maDV, _slkd, makho);
                                        }
                                    }
                                    //

                                    if (i.soluong > 0)
                                    {
                                        moi2.SoLuong = Math.Round(i.soluong - _slkd - _soluongDYHH - _soLuongDYHH_KD, 5);
                                        moi2.Gia = i.DonGia;
                                    }

                                    if (moi.Gia <= 0)
                                        dsach.Add(moi2);
                                    else
                                    {
                                        if (i.DonGia != moi.Gia)
                                            dsach.Add(moi2);
                                    }
                                }
                            }
                            #endregion
                            if (dsach.Sum(p => p.SoLuong) > 0)
                                Bien.SoLuongTon = dsach.Sum(p => p.SoLuong);
                        }
                    }
                    break;

                case 2:
                    #region// xuất theo hạn sử dụng - chua hoan thien
                    var kt2 = data.GiaUTs.Where(p => p.MaDV == maDV).Where(p => p.Status == 1).ToList();
                    giaSoLoHSD giamoi = new giaSoLoHSD();
                    if (kt2.Count > 0)
                    {
                        giamoi.Gia = kt2.First().DonGia.Value;
                    }
                    else
                    {
                        if (_gia.Count > 0)
                            giamoi.Gia = _gia.First().DonGia;
                    }
                    dsach.Add(giamoi);

                    break;
                #endregion
                case 3:
                    // Thuóc đông y không có số lô nên khi tinh theo số lô không trừ đi số lượng hư hao
                    var _gia3 = (from nhap in abc
                                 where (nhap.SoLo != null && nhap.SoLo != "")
                                 group new { nhap } by new { nhap.MaDV, nhap.DonGia, nhap.SoLo } into kq
                                 select new
                                 {
                                     kq.Key.MaDV,
                                     kq.Key.DonGia,
                                     SoLo = kq.Key.SoLo ?? "",
                                     soluong = (kq.Sum(p => p.nhap.SoLuongN) - kq.Sum(p => p.nhap.SoLuongX)),
                                     ngay = kq.Min(p => p.nhap.NgayNhap)
                                 }).ToList();//.OrderBy(p => p.ngay).ToList();

                    string _solo = null;
                    DateTime? _handung;
                    var kttutruc3 = data.KPhongs.Where(p => p.MaKP == makho).Where(p => p.PLoai.Contains("Tủ trực")).ToList();
                    #region tủ trực
                    if (kttutruc3.Count > 0)// kiểm tra tủ trực
                    {
                        Bien.SoLuongTon = 0;
                        var _giatt = (from nhap in data.NhapDs.Where(p => p.MaKPnx == makho)
                                      join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV) on nhap.IDNhap equals nhapct.IDNhap
                                      group new { nhapct, nhap } by new { nhapct.MaDV, nhapct.DonGia, nhapct.SoLo, nhapct.HanDung } into kq
                                      select new
                                      {
                                          kq.Key.MaDV,
                                          kq.Key.DonGia,
                                          HanDung = kq.Key.HanDung,
                                          SoLo = kq.Key.SoLo ?? "",
                                          soluong = (kq.Sum(p => p.nhapct.SoLuongX)),
                                          ngay = kq.Min(p => p.nhap.NgayNhap)
                                      }).ToList();//.OrderBy(p => p.ngay).ToList();

                        if (_giatt.Count > 0)
                        {
                            Double[] dsgia = new Double[_giatt.Count];
                            foreach (var i in _giatt)
                            {
                                _solo = i.SoLo;
                                // tạo một biến soluongkd = i.soluong- soluongkd
                                var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.SoLo == (_solo)).Where(p => p.Status != 2)
                                            join kd in data.DThuocs.Where(p => p.MaKXuat == makho) on sl.IDDon equals kd.IDDon
                                            group sl by new { sl.DonGia, sl.SoLo } into kq
                                            select new
                                            {
                                                kq.Key.DonGia,
                                                SoLo = kq.Key.SoLo ?? "",
                                                soluong = kq.Sum(p => p.SoLuong)
                                            }).ToList();

                                double _slkd = 0;
                                if (slkd.Count > 0)
                                {
                                    _slkd = slkd.First().soluong;
                                }

                                giaSoLoHSD moi = new giaSoLoHSD();
                                if (i.soluong > 0)
                                {
                                    moi.SoLuong = Math.Round(i.soluong - _slkd, 5);
                                    moi.Gia = i.DonGia;
                                    moi.SoLo = i.SoLo;
                                    //var handung = (from nd in abc.Where(p => p.PLoai == 1) select nd).ToList();
                                    //var qhd = handung.Where(p => p.MaDV == i.MaDV && p.SoLo == i.SoLo && p.HanDung != null).FirstOrDefault();
                                    //if (qhd != null)
                                    //moi.HanDung = qhd.HanDung;
                                    moi.HanDung = i.HanDung;
                                }
                                dsach.Add(moi);
                            }
                            if (dsach.Sum(p => p.SoLuong) > 0)
                                Bien.SoLuongTon = dsach.Sum(p => p.SoLuong);
                        }
                    }
                    #endregion
                    #region không phải tủ trực
                    else
                    {
                        var kt = data.GiaUTs.Where(p => p.MaDV == maDV).Where(p => p.MaKP == makho).ToList();
                        Bien.SoLuongTon = 0;
                        #region giá UT
                        if (kt.Count > 0)
                        {
                            //gia = kt.First().DonGia.Value;
                            // _macc = kt.First().m // thêm mã cc vào giá ưu tiên
                            giaSoLoHSD moi2 = new giaSoLoHSD();
                            moi2.Gia = kt.First().DonGia.Value;
                            moi2.SoLo = kt.First().SoLo;
                            var handung = (from nd in abc.Where(p => p.PLoai == 1) select nd).ToList();
                            var qhd = handung.Where(p => p.MaDV == kt.First().MaDV && p.SoLo == kt.First().SoLo && p.HanDung != null).FirstOrDefault();

                            if (qhd != null)
                                moi2.HanDung = qhd.HanDung;

                            var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == moi2.Gia && p.SoLo == moi2.SoLo).Where(p => p.Status == 0)
                                        join kd in data.DThuocs.Where(p => p.MaKXuat == makho).Where(p => p.KieuDon != 2 && p.KieuDon != 4) on sl.IDDon equals kd.IDDon
                                        group sl by new { sl.DonGia, sl.SoLo } into kq
                                        select new
                                        {
                                            kq.Key,
                                            SoLo = kq.Key.SoLo ?? "",
                                            soluong = kq.Sum(p => p.SoLuong)
                                        }).ToList();

                            double _slkd = 0;
                            if (slkd.Count > 0)
                            {
                                _slkd = slkd.First().soluong;
                            }
                            if (_gia3.Where(p => p.DonGia == moi2.Gia && p.SoLo == moi2.SoLo).ToList().Count > 0 && _gia3.Where(p => p.DonGia == moi2.Gia && p.SoLo == moi2.SoLo).First().soluong > 0)
                            {
                                moi2.SoLuong = Math.Round(_gia3.Where(p => p.DonGia == moi2.Gia && p.SoLo == moi2.SoLo).First().soluong - _slkd, 5);
                            }
                            if (moi2.SoLuong <= 0)
                            {
                                moi2.SoLuong = 0;
                                if (_gia.Count > 0)
                                {
                                    Double[] dsgia = new Double[_gia.Count];
                                    foreach (var i in _gia3.Where(p => p.SoLo != moi2.SoLo))
                                    {
                                        // tạo một biến soluongkd = i.soluong- soluongkd
                                        _solo = i.SoLo;
                                        var slkd1 = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.SoLo == (_solo)).Where(p => p.Status == null || p.Status == 0)
                                                     join kd in data.DThuocs.Where(p => p.MaKXuat == makho).Where(p => p.KieuDon != 2 && p.KieuDon != 4) on sl.IDDon equals kd.IDDon
                                                     group sl by sl.DonGia into kq
                                                     select new
                                                     {
                                                         kq.Key,
                                                         soluong = kq.Sum(p => p.SoLuong)
                                                     }).ToList();

                                        double _slkd1 = 0;
                                        if (slkd1.Count > 0)
                                        {
                                            _slkd1 = slkd1.First().soluong;
                                        }
                                        if (i.soluong > 0)
                                        {
                                            moi2.SoLuong = Math.Round(i.soluong - _slkd1, 5);
                                            moi2.Gia = i.DonGia;
                                            moi2.SoLo = i.SoLo;
                                            var qhd1 = handung.Where(p => p.MaDV == i.MaDV && p.SoLo == i.SoLo && p.HanDung != null).FirstOrDefault();
                                            if (qhd1 != null)
                                            {
                                                moi2.HanDung = qhd1.HanDung;
                                            }
                                        }
                                    }
                                }
                            }
                            dsach.Add(moi2);
                            Bien.SoLuongTon = moi2.SoLuong;
                        }
                        #endregion
                        #region không có giá UT
                        else
                        {
                            Bien.SoLuongTon = 0;
                            if (_gia.Count > 0)
                            {
                                if (Bien.MaBV == "24012")
                                {
                                    var _gia24012 = (from nhap in abc
                                                     where (nhap.SoLo != null && nhap.SoLo != "")
                                                     group new { nhap } by new { nhap.MaDV, nhap.DonGia, nhap.SoLo, nhap.HanDung } into kq
                                                     select new
                                                     {
                                                         kq.Key.MaDV,
                                                         kq.Key.DonGia,
                                                         SoLo = kq.Key.SoLo ?? "",
                                                         soluong = (kq.Sum(p => p.nhap.SoLuongN) - kq.Sum(p => p.nhap.SoLuongX)),
                                                         ngay = kq.Min(p => p.nhap.NgayNhap),
                                                         kq.Key.HanDung
                                                     }).ToList();//.OrderBy(p => p.ngay).ToList();

                                    Double[] dsgia = new Double[_gia.Count];
                                    foreach (var i in _gia24012)
                                    {
                                        // tạo một biến soluongkd = i.soluong- soluongkd
                                        giaSoLoHSD moi3 = new giaSoLoHSD();
                                        _solo = i.SoLo;
                                        _handung = i.HanDung;
                                        var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.SoLo == (_solo) && p.HanDung == _handung).Where(p => p.Status == null || p.Status == 0)
                                                    join kd in data.DThuocs.Where(p => p.MaKXuat == makho).Where(p => p.KieuDon != 2 && p.KieuDon != 4) on sl.IDDon equals kd.IDDon
                                                    group sl by sl.DonGia into kq
                                                    select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
                                        //double _slkd = 0;
                                        //var slkd = (from dt in data.DThuocs.Where(p => p.Status != 1)
                                        //              join dtct in data.DThuoccts.Where(p => p.MaDV == maDV) on dt.IDDon equals dtct.IDDon
                                        //              select new { dtct.SoLuong }).ToList();
                                        var SumMuon = slkd.Sum(p => p.soluong);
                                        //if (slkd.Count > 0)
                                        //{
                                        //    _slkd = slkd.First().soluong;
                                        //}
                                        if (i.soluong > 0)
                                        {
                                            moi3.SoLuong = Math.Round(i.soluong - SumMuon, 5);
                                            moi3.Gia = i.DonGia;
                                            moi3.SoLo = i.SoLo;
                                            var handung = (from nd in abc.Where(p => p.PLoai == 1) select nd).ToList();
                                            var qhd = handung.Where(p => p.MaDV == i.MaDV && p.SoLo == i.SoLo && p.HanDung != null).ToList();
                                            List<DateTime?> lstConTon = new List<DateTime?>();
                                            if (qhd.Count() > 0)
                                            {
                                                foreach (var a in qhd)
                                                {
                                                    double SoTon = DungChung.Ham._checkTon_KD1(data, maDV, makho, i.DonGia, 0, i.SoLo, a.HanDung);
                                                    if (SoTon > 0)
                                                    {
                                                        lstConTon.Add(a.HanDung);
                                                    }
                                                }
                                                //var hd = (from a in data.NhapDcts
                                                //          join b in data.NhapDs on a.IDNhap equals b.IDNhap
                                                //          join c in lstConTon on a.HanDung equals c.Value
                                                //          where a.MaDV == maDV && a.SoLo == i.SoLo
                                                //          select a).FirstOrDefault();
                                                moi3.HanDung = i.HanDung;
                                            }
                                        }
                                        dsach.Add(moi3);
                                    }
                                    //Bien.SoLuongTon = DungChung.Ham._checkTon_KD1(data, maDV, makho, dongia, 0, i.SoLo, hd);
                                }
                                else
                                {
                                    Double[] dsgia = new Double[_gia.Count];
                                    foreach (var i in _gia3)
                                    {
                                        // tạo một biến soluongkd = i.soluong- soluongkd
                                        giaSoLoHSD moi3 = new giaSoLoHSD();
                                        _solo = i.SoLo;
                                        //var slkd = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV).Where(p => p.DonGia == i.DonGia).Where(p => p.SoLo == (_solo)).Where(p => p.Status == null || p.Status == 0)
                                        //            join kd in data.DThuocs.Where(p => p.MaKXuat == makho).Where(p => p.KieuDon != 2 && p.KieuDon != 4) on sl.IDDon equals kd.IDDon
                                        //            group sl by sl.DonGia into kq
                                        //            select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
                                        //double _slkd = 0;
                                        var slkd = (from dt in data.DThuocs.Where(p => p.Status != 1)
                                                    join dtct in data.DThuoccts.Where(p => p.MaDV == maDV) on dt.IDDon equals dtct.IDDon
                                                    select new { dtct.SoLuong }).ToList();
                                        var SumMuon = slkd.Sum(p => p.SoLuong);
                                        //if (slkd.Count > 0)
                                        //{
                                        //    _slkd = slkd.First().soluong;
                                        //}
                                        if (i.soluong > 0)
                                        {
                                            moi3.SoLuong = Math.Round(i.soluong - SumMuon, 5);
                                            moi3.Gia = i.DonGia;
                                            moi3.SoLo = i.SoLo;
                                            var handung = (from nd in abc.Where(p => p.PLoai == 1) select nd).ToList();
                                            var qhd = handung.Where(p => p.MaDV == i.MaDV && p.SoLo == i.SoLo && p.HanDung != null).FirstOrDefault();
                                            if (qhd != null)
                                                moi3.HanDung = qhd.HanDung;
                                        }
                                        dsach.Add(moi3);
                                    }
                                    if (dsach.Sum(p => p.SoLuong) > 0)
                                        Bien.SoLuongTon = dsach.Sum(p => p.SoLuong);
                                }
                            }
                        }
                    }
                    #endregion
                    #endregion
                    break;
            }
            return dsach.Where(p => p.SoLuong != 0).ToList();
        }

        private string checkSoLanKham(int mabnhan)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(Bien.StrCon);
            BenhNhan bnhan = data.BenhNhans.Where(p => p.MaBNhan == mabnhan).FirstOrDefault();
            if (bnhan != null && !String.IsNullOrEmpty(bnhan.SThe))// là bệnh nhân bảo hiểm
            {
                DateTime ngaynhap = bnhan.NNhap.Value.Date;
                var qlbn = (from bn in data.BenhNhans.Where(p => p.SThe == bnhan.SThe).Where(p => p.MaBNhan != bnhan.MaBNhan)
                            join rv in data.RaViens on bn.MaBNhan equals rv.MaBNhan
                            select new { bn.MaBNhan, rv.NgayRa }).ToList();
                VaoVien vvien = data.VaoViens.Where(p => p.MaBNhan == mabnhan).FirstOrDefault();
                if (vvien != null && vvien.NgayVao != null)
                {
                    foreach (var a in qlbn)
                    {
                        if (a.NgayRa.Value.Date == vvien.NgayVao.Value.Date)
                            return "Bệnh nhân đã ra viện trong ngày";
                    }
                }

                foreach (var a in qlbn)
                {
                    if (a.NgayRa.Value.Date == ngaynhap)
                        return "Bệnh nhân đã ra viện trong ngày";
                }
                foreach (var a in qlbn)
                {
                    if ((ngaynhap - a.NgayRa.Value.Date.AddMonths(1)).Days <= 0)
                        return "Bệnh nhân đã khám trong tháng";
                }
            }
            return "";
        }

        /// <summary>
        /// trả về chuổi đã bỏ đi các dấu ";" thừa; VD: 25; abc;;56 => 25; abc;56
        /// </summary>
        /// <param name="chuoi"></param>
        /// <returns></returns>
        public static string FreshString(string chuoi)
        {
            string rs = "";
            if (chuoi != null)
            {
                List<string> list = chuoi.Split(';').Where(p => !string.IsNullOrEmpty(p)).ToList();
                int num = 0;
                foreach (string a in list)
                {
                    num++;
                    if (num != list.Count)
                        rs = rs + a + ";";
                    else
                        rs = rs + a;
                }
            }
            return rs;
        }

        /// <summary>
        /// Ghép chẩn đoán với mã icd
        /// </summary>
        /// <param name="chandoan"></param>
        /// <param name="maIcd"></param>
        /// <returns></returns>
        public static string FreshString_WithCode(string chandoan, string maIcd)
        {
            string rs = "";
            if (!string.IsNullOrWhiteSpace(chandoan) && !string.IsNullOrWhiteSpace(maIcd))
            {
                List<string> listCd = chandoan.Split(';').Where(p => !string.IsNullOrEmpty(p)).ToList();
                List<string> listMa = maIcd.Split(';').Where(p => !string.IsNullOrEmpty(p)).ToList();
                int num = 0;
                if (listCd.Count > listMa.Count)
                {
                    foreach (string a in listMa)
                    {
                        var cd = listCd[num];
                        num++;
                        if (num != listMa.Count)
                        {
                            rs = rs + cd + "(" + a + "); ";
                        }
                        else
                        {
                            rs = rs + cd + "(" + a + ")";
                        }
                    }
                    if (Bien.MaBV == "01071" || Bien.MaBV == "01049" || Bien.MaBV == "30003") // his 171 26052021
                    {
                        for (int i = num; i < listCd.Count(); i++)
                        {
                            rs = rs + "; " + listCd[i];
                        }
                    }
                }
                else
                {
                    foreach (string a in listCd)
                    {
                        var ma = listMa[num];
                        num++;
                        if (num != listCd.Count)
                        {
                            rs = rs + a + "(" + ma + "); ";
                        }
                        else
                        {
                            rs = rs + a + "(" + ma + ")";
                        }
                    }
                }
            }
            return rs;
        }

        /// <summary>
        /// lấy chẩn đoán IDKB lớn nhất
        /// </summary>
        /// <param name="data"></param>
        /// <param name="mabn"></param>
        /// <returns></returns>
        public static string GetChanDoanKB(QLBV_Database.QLBVEntities data, int mabn)
        {
            string a = "";
            var bnkb = data.BNKBs.Where(p => p.MaBNhan == mabn).ToList();
            if (bnkb != null)
            {
                int idkb = bnkb.Max(o => o.IDKB);
                string chandoan = data.BNKBs.Where(p => p.IDKB == idkb).First().ChanDoan;
                chandoan += ";" + data.BNKBs.Where(p => p.IDKB == idkb).First().BenhKhac;

                string maidcd = data.BNKBs.Where(p => p.IDKB == idkb).First().MaICD;
                maidcd += ";" + data.BNKBs.Where(p => p.IDKB == idkb).First().MaICD2;
                a = FreshString_WithCode(chandoan, maidcd);
            }
            return a;
        }

        public static string GetChanDoanKB_24297(QLBV_Database.QLBVEntities data, int mabn)
        {
            string a = "";
            string b = "";
            var getcdpk = data.BNKBs.Where(p => p.MaBNhan == mabn).OrderByDescending(p => p.IDKB).ToList();
            if (getcdpk.First().ChanDoanBD != null)
            {
                b = getcdpk.First().ChanDoanBD;
            }
            string chandoanFull = "";
            var tenkp = data.BNKBs.Where(p => p.MaBNhan == mabn).Where(p => p.PhuongAn == 1).OrderByDescending(p => p.IDKB).ToList();
            var icd = data.ICD10.Where(o => true).ToList();
            string ic = getcdpk.First().MaICD + ";" + getcdpk.First().MaICD2;
            if (!string.IsNullOrEmpty(getcdpk.First().MaICD))
            {
                chandoanFull += DungChung.Ham.GhepChuoiChanDoanYHCT(icd, "", getcdpk.First().MaICD);
            }
            var icdBenhkhac = getcdpk.First().MaICD2.Split(';');
            var tenBenhkhac = getcdpk.First().BenhKhac.Split(';');
            string benhkocoICD = "";
            string benhcoICD = "";
            if (icdBenhkhac.Count() > 0)
            {
                int flag = 1;
                for (int i = 0; i < icdBenhkhac.Count(); i++)
                {
                    if (!string.IsNullOrEmpty(icdBenhkhac[i]))
                    {
                        flag += 1;
                    }
                }
                if (flag == 1)
                {
                    chandoanFull += ";" + getcdpk.First().BenhKhac;
                }
                else
                {
                    if (tenBenhkhac.Count() > flag)
                    {
                        for (int i = flag - 1; i < tenBenhkhac.Count(); i++)
                        {
                            benhkocoICD += tenBenhkhac[i];
                        }
                        benhkocoICD += benhcoICD;
                    }
                    benhcoICD += DungChung.Ham.GhepChuoiChanDoanYHCT(icd, "", getcdpk.First().MaICD2);
                    chandoanFull += benhcoICD;
                }
            }
            var kq = (chandoanFull).Split(';');
            string cd = "";
            for (int i = 0; i < kq.Count(); i++)
            {
                if (!string.IsNullOrEmpty(kq[i]) && !string.IsNullOrWhiteSpace(kq[i]))
                {
                    cd += kq[i] + ";";
                }
            }
            return a = cd + benhkocoICD;
        }

        public static string GetChanDoanKB_ByKP(QLBV_Database.QLBVEntities data, int mabn, int mkp)
        {
            string a = "";
            string b = "";
            var getcdpk = data.BNKBs.Where(p => p.MaBNhan == mabn && p.MaKP == mkp).OrderByDescending(p => p.IDKB).ToList();
            if (getcdpk.First().ChanDoanBD != null)
            {
                b = getcdpk.First().ChanDoanBD;
            }
            string chandoanFull = "";
            var tenkp = data.BNKBs.Where(p => p.MaBNhan == mabn).Where(p => p.PhuongAn == 1).OrderByDescending(p => p.IDKB).ToList();
            var icd = data.ICD10.Where(o => true).ToList();
            string ic = getcdpk.First().MaICD + ";" + getcdpk.First().MaICD2;
            if (!string.IsNullOrEmpty(getcdpk.First().MaICD))
            {
                chandoanFull += DungChung.Ham.GhepChuoiChanDoanYHCT(icd, "", getcdpk.First().MaICD);
            }
            var icdBenhkhac = getcdpk.First().MaICD2.Split(';');
            var tenBenhkhac = getcdpk.First().BenhKhac.Split(';');
            string benhkocoICD = "";
            string benhcoICD = "";
            if (icdBenhkhac.Count() > 0)
            {
                int flag = 1;
                for (int i = 0; i < icdBenhkhac.Count(); i++)
                {
                    if (!string.IsNullOrEmpty(icdBenhkhac[i]))
                    {
                        flag += 1;
                    }
                }
                if (flag == 1)
                {
                    chandoanFull += ";" + getcdpk.First().BenhKhac;
                }
                else
                {
                    if (tenBenhkhac.Count() > flag)
                    {
                        for (int i = flag - 1; i < tenBenhkhac.Count(); i++)
                        {
                            benhkocoICD += tenBenhkhac[i];
                        }
                        benhkocoICD += benhcoICD;
                    }
                    benhcoICD += DungChung.Ham.GhepChuoiChanDoanYHCT(icd, "", getcdpk.First().MaICD2);
                    chandoanFull += benhcoICD;
                }
            }
            var kq = (chandoanFull).Split(';');
            string cd = "";
            for (int i = 0; i < kq.Count(); i++)
            {
                if (!string.IsNullOrEmpty(kq[i]) && !string.IsNullOrWhiteSpace(kq[i]))
                {
                    cd += kq[i] + ";";
                }
            }
            return a = cd + benhkocoICD;
        }

        //public static string GetCanDoanYHCT(QLBV_Database.QLBVEntities _data, int _mabn)
        /// <summary>
        /// Lay gia mac dinh trong bang DonGiaDV
        /// </summary>
        /// <param name="DaTaContext"></param>
        /// <param name="madv"></param>
        /// <param name="nhapxuat"> 1: nhaapj; 2 xuaats</param>
        /// <returns></returns>
        internal static double _getGiaSD(QLBV_Database.QLBVEntities data, int madv, double dongiaSD, int trongBH, int nhapxuat, int maKP, DateTime ngayke)
        {
            double rs = 0;
            DateTime ngayht = DungChung.Ham.NgayDen(ngayke);
            if (nhapxuat == 1)
            {
                rs = dongiaSD;
                var qdongia = data.DonGiaDVs.Where(p => p.NgayHieuLuc == null ? (true) : (p.NgayHieuLuc.Value <= ngayht)).Where(p => p.MaDV == madv && p.Status == true).Where(p => (trongBH == 1 && p.DonGiaX_BH == dongiaSD) || (trongBH == 0 && p.DonGiaX_DV == dongiaSD)).OrderByDescending(p => p.NgayHieuLuc).Select(p => p.DonGiaN).FirstOrDefault();
                if (qdongia != null)
                {
                    rs = qdongia;
                }
            }
            else // lấy giá xuất
            {
                var qdongia = data.DonGiaDVs.Where(p => p.NgayHieuLuc == null ? (true) : (p.NgayHieuLuc.Value <= ngayht)).Where(p => p.MaDV == madv && p.Status == true).OrderByDescending(p => p.NgayHieuLuc).Select(p => new { DonGiaX = trongBH == 1 ? p.DonGiaX_BH : p.DonGiaX_DV, p.DonGiaN }).FirstOrDefault();
                if (qdongia != null)
                {
                    rs = qdongia.DonGiaX;

                    var kttutruc = data.KPhongs.Where(p => p.MaKP == maKP).Where(p => p.PLoai.Contains("Tủ trực")).ToList();
                    #region tủ trực
                    if (kttutruc.Count > 0)// kiểm tra tủ trực
                    {
                        var qnd = (from nhapct in data.NhapDcts.Where(p => p.MaDV == madv && p.DonGia == qdongia.DonGiaN)
                                   join nhap in data.NhapDs.Where(p => p.MaKP == maKP) on nhapct.IDNhap equals nhap.IDNhap
                                   group new { nhapct, nhap } by new { nhapct.MaDV, nhapct.DonGia } into kq
                                   select new { kq.Key.DonGia, SoLuong = kq.Sum(p => p.nhapct.SoLuongX) }).ToList();
                        var slkd0 = (from sl in data.DThuoccts.Where(p => p.MaDV == madv)//.Where(p => p.DonGia == qdongia.DonGiaN)
                                         .Where(p => p.Status == null || p.Status == 0 || p.Status == 1)
                                     join kd in data.DThuocs.Where(p => p.MaKXuat == maKP || p.MaKP == maKP) on sl.IDDon equals kd.IDDon

                                     select new
                                     {
                                         kd.NgayKe,
                                         sl.MaDV,
                                         sl.DonGia,
                                         sl.TrongBH,
                                         SLKD = (sl.MaKXuat == maKP && (sl.SoLuong > 0 || (sl.SoLuong < 0 && kd.KieuDon == 2))) ? sl.SoLuong : 0,
                                         SLTra = (kd.MaKP == maKP && sl.Status == 0 && kd.KieuDon == 4) ? sl.SoLuong : 0// Đơn treo lĩnh HC VTYT (chỉ đơn trả dược mới trừ, đơn lĩnh thì không tính thêm : Ví dụ: tủ trực còn 50 viên, kê đơn trả cho kho tổng 30 viên (nhưng chưa lĩnh) cũng chỉ kê đơn cho bệnh nhân hoặc trả dược trong vòng 20 viên còn lại; Trường hợp kê đơn lĩnh thêm 40 viên, không được tính=> chỉ được tính khi nào đã lĩnh dược về khoa
                                     }).ToList();

                        var slkd1 = (from kd in slkd0
                                     select new
                                     {
                                         kd.MaDV,
                                         kd.SLKD,
                                         kd.SLTra,
                                         DonGia = _getGiaSD(data, kd.MaDV ?? 0, kd.DonGia, kd.TrongBH, 1, maKP, kd.NgayKe.Value)
                                     }).Where(p => p.DonGia == qdongia.DonGiaN).ToList();
                        var slkd = (from sl in slkd1
                                    group new { sl } by sl.DonGia into kq
                                    select new
                                    {
                                        kq.Key,
                                        soluong = kq.Sum(p => p.sl.SLKD) - kq.Sum(p => p.sl.SLTra)
                                    }).ToList();
                        double _slkd = 0;

                        if (slkd.Count > 0)
                        {
                            _slkd = slkd.First().soluong;
                            double soluongDY = DungChung.Ham._getSL_DongY(data, madv, _slkd, maKP);
                            _slkd = _slkd + soluongDY;
                        }
                        if (qnd.Count > 0)
                            Bien.SoLuongTon = qnd.First().SoLuong - _slkd;
                        else
                            Bien.SoLuongTon = 0;
                        if (Bien.SoLuongTon <= 0)
                            Bien.SoLuongTon = 0;
                    }
                    #endregion
                    else
                    {
                        var qnd = (from nhapct in data.NhapDcts.Where(p => p.MaDV == madv && p.DonGia == qdongia.DonGiaN)
                                   join nhap in data.NhapDs.Where(p => p.MaKP == maKP) on nhapct.IDNhap equals nhap.IDNhap
                                   group new { nhapct, nhap } by new { nhapct.MaDV, nhapct.DonGia } into kq
                                   select new { kq.Key.DonGia, SoLuong = (kq.Sum(p => p.nhapct.SoLuongN) - kq.Sum(p => p.nhapct.SoLuongX)) }).ToList();
                        var slkd0 = (from sl in data.DThuoccts.Where(p => p.MaDV == madv)//.Where(p => p.DonGia == qdongia.DonGiaN)
                                         .Where(p => p.Status == null || p.Status == 0)
                                     join kd in data.DThuocs.Where(p => p.MaKXuat == maKP).Where(p => p.KieuDon != 2) on sl.IDDon equals kd.IDDon

                                     select new { sl.TrongBH, sl.MaDV, sl.DonGia, sl.SoLuong, kd.NgayKe }).ToList();
                        var slkd1 = (from sl in slkd0
                                     select new
                                     {
                                         sl.TrongBH,
                                         sl.MaDV,
                                         sl.SoLuong,
                                         DonGia = _getGiaSD(data, sl.MaDV ?? 0, sl.DonGia, sl.TrongBH, 1, maKP, sl.NgayKe.Value)
                                     }).Where(p => p.DonGia == qdongia.DonGiaN).ToList();

                        var slkd = (from sl in slkd1
                                    group sl by sl.DonGia into kq
                                    select new { kq.Key, soluong = kq.Sum(p => p.SoLuong) }).ToList();
                        double _slkd = 0;

                        if (slkd.Count > 0)
                        {
                            _slkd = slkd.First().soluong;
                            double soluongDY = DungChung.Ham._getSL_DongY(data, madv, _slkd, maKP);
                            _slkd = _slkd + soluongDY;
                        }

                        if (qnd.Count > 0)
                            Bien.SoLuongTon = qnd.First().SoLuong - _slkd;
                        else
                            Bien.SoLuongTon = 0;
                        if (Bien.SoLuongTon <= 0)
                            Bien.SoLuongTon = 0;
                    }
                }
            }
            return rs;
        }

        internal static List<DonGiaDV> _getGiaSD(QLBV_Database.QLBVEntities data, int madv)
        {
            try
            {
                double rs = 0;
                var qdongia = data.DonGiaDVs.Where(p => p.MaDV == madv && p.Status == true).ToList();
                return qdongia;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.InnerException.ToString());
                return new List<DonGiaDV>();
            }
        }

        #region lấy số PL

        /// <summary>
        ///
        /// </summary>
        /// <param name="ploai"></param>
        /// <param name="maKP"></param>
        /// <param name="noiNgoaiTru"></param>
        /// <returns></returns>
        public static int GetSoPL(int ploai, int maKP, int noiNgoaiTru)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(Bien.StrCon);
            int soPL = 1;
            DateTime Ngaynhap = DateTime.Now;
            try
            {
                var sopl = data.SoPLs
                    .Where(p => maKP == 0 ? true : p.MaKP == maKP)
                    .Where(p => p.PhanLoai == ploai)
                    .Where(p => p.NoiTru == noiNgoaiTru)
                    .Where(p => p.NgayNhap != null)
                    .Select(p => new { p.SoPL1, p.NgayNhap }).OrderByDescending(p => p.SoPL1).ToList();
                if (sopl.Count > 0)
                {
                    //reset số vào viện và số bệnh án theo năm
                    if (Bien.MaBV == "30012")
                    {
                        if (ploai == 2 || ploai == 4)
                        {
                            var listSo = (from a in sopl where a.NgayNhap.Value.Year == Ngaynhap.Year select a.SoPL1).ToList();
                            if (listSo.Count > 0)
                            {
                                soPL += listSo.Max();
                            }
                        }
                        else
                            soPL += sopl.First().SoPL1;
                    }
                    else
                        if (Bien.MaBV == "30009")
                    {
                        if (ploai == 7)
                        {
                            var listSo = (from a in sopl where a.NgayNhap.Value.Year == Ngaynhap.Year select a.SoPL1).ToList();
                            if (listSo.Count > 0)
                            {
                                soPL += listSo.Max();
                            }
                        }
                        else
                            soPL += sopl.First().SoPL1;
                    }
                    else
                    {
                        soPL += sopl.First().SoPL1;
                    }
                }
            }
            catch (Exception e)
            {
                MessageBox.Show(e.ToString());
            }
            return soPL;
        }

        #endregion

        /// <summary>
        ///
        /// </summary>
        /// <param name="maKP"></param>
        /// <param name="_soPL"></param>
        /// <param name="ploai"></param>
        /// <param name="noiNgoaiTru">-1: Không setl 0: set theo ngoại trú: 1: set theo nội trú</param>
        /// <returns></returns>
        public static bool SetSoPL(int maKP, int _soPL, int ploai, int noiNgoaiTru)
        {
            try
            {
                QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(Bien.StrCon);
                int soht = _soPL - 1;
                var qvv = data.SoPLs.Where(p => p.MaKP == maKP && p.PhanLoai == ploai && p.SoPL1 == soht).Where(p => p.NoiTru == noiNgoaiTru).ToList();// thiếu set theo nội ngoại trú
                DateTime NgayNhap = DateTime.Now;
                if (qvv.Count > 0 && qvv.First().NgayNhap != null)
                    NgayNhap = Convert.ToDateTime(qvv.First().NgayNhap);
                foreach (var a in qvv)
                {
                    data.SoPLs.Remove(a);
                }
                data.SaveChanges();
                SoPL soPLMoi = new SoPL();
                soPLMoi.MaKP = maKP;
                soPLMoi.SoPL1 = _soPL;
                soPLMoi.Status = 1;
                soPLMoi.PhanLoai = ploai;
                soPLMoi.NgayNhap = NgayNhap;
                soPLMoi.NoiTru = noiNgoaiTru;
                data.SoPLs.Add(soPLMoi);
                data.SaveChanges();
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }

        // khi xóa
        public static bool SoPLDeleteChuyenVien(int maKP, int _soPL, int ploai, int noiNgoaiTru)
        {
            try
            {
                bool success = false;
                QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(Bien.StrCon);
                int soht = _soPL;
                var qvv = data.SoPLs.Where(p => p.MaKP == maKP && p.PhanLoai == ploai && p.SoPL1 == soht).Where(p => p.NoiTru == noiNgoaiTru).ToList();// thiếu set theo nội ngoại trú
                DateTime NgayNhap = DateTime.Now;
                if (qvv.Count > 0 && qvv.First().NgayNhap != null)
                    NgayNhap = Convert.ToDateTime(qvv.First().NgayNhap);
                if (qvv.Count > 0)
                {
                    foreach (var a in qvv)
                    {
                        data.SoPLs.Remove(a);
                    }

                    data.SaveChanges();
                    SoPL soPLMoi = new SoPL();
                    soPLMoi.MaKP = maKP;
                    soPLMoi.SoPL1 = _soPL - 1;
                    soPLMoi.Status = 1;
                    soPLMoi.PhanLoai = ploai;
                    soPLMoi.NgayNhap = NgayNhap;
                    soPLMoi.NoiTru = noiNgoaiTru;
                    data.SoPLs.Add(soPLMoi);
                    data.SaveChanges();
                    success = true;
                }
                return success;
            }
            catch (Exception ex)
            {
                return false;
            }
        }

        public static bool checkSoPL(int maKP, int _soPL, int ploai, int noiNgoaiTru)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(Bien.StrCon);
            var check = data.SoPLs.Where(p => p.MaKP == maKP && p.SoPL1 == _soPL && p.PhanLoai == ploai).Where(p => p.NoiTru == noiNgoaiTru && p.NgayNhap != null).FirstOrDefault();
            if (check != null)
                return true;
            return false;
        }

        /// <summary>
        /// Lấy giá nhập cho bệnh viện 30340 khi biết giá xuất, trong BH
        /// </summary>
        /// <param name="maDV"></param>
        /// <param name="DonGiaX">đơn giá xuất</param>
        /// <returns></returns>
        internal static double getGiaNhapByGiaXuat(int? maDV, double DonGiaX, int trongBH)
        {
            if (maDV == null)
                return DonGiaX;
            else
            {
                QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(Bien.StrCon);
                var qdg = data.DonGiaDVs.Where(p => p.MaDV == maDV && (trongBH == 1 ? p.DonGiaX_BH == DonGiaX : p.DonGiaX_DV == DonGiaX)).Where(p => p.Status == true).FirstOrDefault();
                if (qdg != null)
                    return qdg.DonGiaN;
                else
                {
                    var qdg1 = data.DonGiaDVs.Where(p => p.MaDV == maDV && (trongBH == 1 ? p.DonGiaX_BH == DonGiaX : p.DonGiaX_DV == DonGiaX)).FirstOrDefault();
                    if (qdg1 != null)
                        return qdg1.DonGiaN;
                    else
                        return DonGiaX;
                }
            }
        }

        //số phiếu theo y/c 27183
        public static string _idphieutheokp(int _Ploai, int _MaKP)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(Bien.StrCon);
            string Idmoi = "";
            var tenkp = data.KPhongs.Where(p => p.MaKP == _MaKP).Select(p => p.TenKP).FirstOrDefault();
            string[] q = tenkp.Split(' ');
            int w = q.Length;
            for (int i = 0; i < w; i++)
            {
                if (q[i] != "")
                    Idmoi += q[i].Substring(0, 1);
            }
            List<string> sophieu = data.NhapDs.Where(p => p.MaKP == _MaKP && p.PLoai == _Ploai && p.SoPhieu != null).Select(p => p.SoPhieu).ToList();
            List<int> newsophieu = new List<int>();
            foreach (var item in sophieu)
            {
                string[] arr = item.Split('_');
                if (arr.Length > 1)
                    newsophieu.Add(Convert.ToInt32(arr[1]));
            }
            int spmax = 0;
            if (newsophieu.Count() > 0)
                spmax = newsophieu.Select(p => p).Max();
            if (_Ploai == 1)
            {
                Idmoi += "N_" + (spmax + 1).ToString();
            }
            else
            {
                Idmoi += "X_" + (spmax + 1).ToString();
            }

            return Idmoi.ToUpper();
        }

        /// <summary>
        /// insert vào bảng HSHuy khi hủy các số vào viện, ssos bệnh án,, số PL...
        /// </summary>
        /// <param name="makpvv"></param>
        /// <param name="so"></param>
        /// <param name="ploai">1: số PL; 2: số vào viện; 3: số khám bệnh; 4: số bệnh án; 5: số chuyển viện; 6: Số TT trong ngày (270001); 7: số lưu trữ (số hồ sơ); 8: Mã y tế; 9: Số ra viện</param>
        /// <param name="noingoaitru">-1:  ko set; 0: ngoại trú trú; 1: nội trú</param>
        internal static void UpdateHSHuy(int mabn, int makpvv, string so, int ploai, int noingoaitru)
        {
            QLBV_Database.QLBVEntities data = new QLBV_Database.QLBVEntities(Bien.StrCon);
            HSHuy moi = new HSHuy();
            moi.MaBN = mabn;
            moi.MaKP = makpvv;
            moi.NgayHuy = DateTime.Now;
            moi.MaCB = Bien.MaCB;
            moi.PLoai = ploai;
            moi.SoHuy = so;
            moi.NoiTru = noingoaitru;
            data.HSHuys.Add(moi);
            data.SaveChanges();
        }

        #region Tong tien bn phair tra

        public static double SoTienCanThu(int _MaBn)
        {
            QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(Bien.StrCon);
            double KetQua = 0;
            int PTMucH = 0;
            int _tyle = 0;
            int _HangBV = 0;
            int noitru = 0, _tuyen = 0, _VC = 0;
            string DTuong = "", KhuVuc = "", _dt = "", _SoThe = "";

            var TTBN = (from bn in _data.BenhNhans.Where(p => p.MaBNhan == _MaBn)
                        select new
                        {
                            bn.MucHuong,
                            bn.Tuyen,
                            bn.DTuong,
                            bn.KhuVuc,
                            bn.NoiTru,
                            bn.SThe,
                            bn.LuongCS
                        }).FirstOrDefault();
            decimal _luongCS = 0;
            if (TTBN != null)
            {
                noitru = TTBN.NoiTru.Value;
                if (TTBN.LuongCS != null)
                    _luongCS = TTBN.LuongCS.Value;
                if (TTBN.MucHuong != null && TTBN.MucHuong > 0)
                {
                    string _a = TTBN.MucHuong.ToString();
                    PTMucH = DungChung.Ham._PtramTT(_data, _a);
                }
                if (TTBN.Tuyen != null)
                    _tuyen = TTBN.Tuyen.Value;
                if (TTBN.KhuVuc != null)
                    if (TTBN.KhuVuc.ToString().Contains("K"))
                        KhuVuc = TTBN.KhuVuc;
                if (TTBN.DTuong != "KSK" && TTBN.DTuong.Trim() != "")
                    DTuong = TTBN.DTuong;
                if (TTBN.SThe != null)
                    _SoThe = TTBN.SThe;
            }
            if (!string.IsNullOrEmpty(_SoThe) && _SoThe.Length > 2)
                _dt = _SoThe.Substring(2, 1);
            var KTVanC = _data.MucTTs.Where(p => p.MaMuc.Contains(_dt)).Select(p => p.VanChuyen).ToList();
            if (KTVanC.Count > 0)
                _VC = KTVanC.First().Value;
            _HangBV = DungChung.Ham.hangBV(Bien.MaBV);

            switch (_HangBV)
            {
                case 1:
                    if (noitru == 0)
                        _tyle = 0;
                    else
                        _tyle = 40;
                    break;

                case 2:
                    if (DateTime.Now.Date >= DateTime.Parse("01/01/2021") && noitru == 1)
                        _tyle = 100;
                    else
                    {
                        if (Bien.MaBV == "01830")
                            _tyle = 70;
                        else
                        {
                            if (noitru == 0)
                                _tyle = 0;
                            else
                                _tyle = 60;
                        }
                    }
                    break;

                case 3:

                    _tyle = 70;
                    break;

                case 4:
                    _tyle = 100;
                    PTMucH = 100;
                    break;
            }
            var _ldtct = (from dt in _data.DThuocs.Where(p => p.MaBNhan == _MaBn)
                          join dtct in _data.DThuoccts.Where(p => p.ThanhToan != 1).OrderBy(p => p.IDDonct) on dt.IDDon equals dtct.IDDon
                          group dtct by new { dtct.MaDV, dtct.TrongBH } into kq
                          select new
                          {
                              kq.Key.MaDV,
                              kq.Key.TrongBH,
                              ThanhTien = kq.Sum(p => p.ThanhTien)
                          }).ToList();
            var _ldvVC = (from dv in _data.DichVus
                          join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                          join n in _data.NhomDVs.Where(p => p.TenNhomCT.Contains("Vận chuyển")) on tn.IDNhom equals n.IDNhom
                          select new { dv.MaDV }).ToList();
            if (DTuong == "Dịch Vụ")
            {
                if (_ldtct.Count() > 0)
                    KetQua = _ldtct.Sum(p => p.ThanhTien);
            }
            else
            {
                var _ldvdm = _ldtct.Where(p => p.TrongBH == 1).ToList();
                double _TIENVC = 0, _TIENBN2 = 0, _TIENKOCHITRA = 0, _TIENNGOADM = 0, _TONGTIEN = 0;
                foreach (var item in _ldvdm)
                {
                    if (_tuyen == 1) //đúng tuyến
                    {
                        var _ktvc = _ldvVC.Where(p => p.MaDV == item.MaDV).ToList(); //kiểm tra tiền vận chuyển
                        if (_ktvc.Count() > 0)
                        {
                            if (_VC == 1)
                                _TIENVC += item.ThanhTien;
                        }
                        else
                        {
                            _TIENBN2 += (item.ThanhTien * (100 - PTMucH)) / 100;
                        }
                    }
                    else //trái tuyến
                    {
                        var _ktvc = _ldvVC.Where(p => p.MaDV == item.MaDV).ToList(); //kiểm tra tiền vận chuyển
                        if (_ktvc.Count() > 0)
                        {
                            _TIENVC += item.ThanhTien; //bệnh nhân trái tuyến chi trả 100% tiền VC
                        }
                        else
                        {
                            _TIENBN2 += item.ThanhTien - ((item.ThanhTien * PTMucH * _tyle) / (100 * 100));
                        }
                    }
                }
                _TONGTIEN = _ldtct.Where(P => P.TrongBH == 2 || P.TrongBH == 1).Sum(p => p.ThanhTien);
                _TIENKOCHITRA = _ldtct.Where(P => P.TrongBH == 2).Sum(p => p.ThanhTien);
                _TIENNGOADM = _ldtct.Where(P => P.TrongBH == 0).Sum(p => p.ThanhTien);
                if (_tuyen == 1)
                {
                    if ((_TIENVC + _TONGTIEN) >= Bien.GHanTT100 && _luongCS != 1)
                    {
                        KetQua = _TIENVC + _TIENBN2 + _TIENKOCHITRA + _TIENNGOADM;
                    }
                    else
                    {
                        KetQua = _TIENNGOADM;
                    }
                }
                else
                {
                    if (!string.IsNullOrEmpty(KhuVuc)) // BN có khu vực ưu tiên tính theo đúng tuyến
                    {
                        if ((_TIENVC + _TONGTIEN) >= Bien.GHanTT100 && _luongCS != 1)
                        {
                            KetQua = _TIENVC + _TIENBN2 + _TIENKOCHITRA + _TIENNGOADM;
                        }
                        else
                        {
                            KetQua = _TIENNGOADM;
                        }
                    }
                    else
                    {
                        KetQua = _TIENNGOADM + _TIENBN2;
                    }
                }
            }
            return KetQua;
        }

        #endregion

        public static double TienBNTraThem(QLBV_Database.QLBVEntities _data, int _MaBN)
        {
            double KQ = 0;
            double TienTU = 0, TienBN = 0;
            TienTU = DungChung.Ham.TongTienTU(_data, _MaBN);
            TienBN = DungChung.Ham.SoTienCanThu(_MaBN);
            KQ = TienBN - TienTU;
            return KQ;
        }

        public static double TongTienTU(QLBV_Database.QLBVEntities _data, int _MaBN)
        {
            double KQ = 0;
            var TU = (from tu in _data.TamUngs.Where(p => p.MaBNhan == _MaBN).Where(p => p.PhanLoai == 0)
                      group tu by new { tu.MaBNhan } into kq
                      select new { Tong = kq.Sum(p => p.SoTien) }).FirstOrDefault();
            if (TU != null)
            {
                KQ = TU.Tong.Value;
            }
            return KQ;
        }

        public static bool _CheckThucHienDVDaTamThu(QLBV_Database.QLBVEntities _data, int _MaBN, int _IDTamUngct)
        {
            bool KetQua = true;
            int _IDTamUng = 0, _MaDV = 0;
            var IDTamUng = (from tuct in _data.TamUngcts.Where(p => p.IDTamUngct == _IDTamUngct)
                            select new { tuct.IDTamUng, tuct.MaDV }).FirstOrDefault();
            if (IDTamUng != null)
            {
                _IDTamUng = IDTamUng.IDTamUng;
                _MaDV = IDTamUng.MaDV;
                var _lCD = (from cls in _data.CLS.Where(p => p.MaBNhan == _MaBN)
                            join cd in _data.ChiDinhs.Where(p => p.MaDV == _MaDV).Where(p => p.SoPhieu == _IDTamUng) on cls.IdCLS equals cd.IdCLS
                            select new { cd.Status, cd.IDCD }).ToList();
                if (_lCD.Count() > 0)
                {
                    if (_lCD.First().Status == 1)
                    {
                        KetQua = false;
                    }
                    else
                        KetQua = true;
                }
            }
            return KetQua;
        }

        public static string _KiemTraThoiGianCDCLS(QLBV_Database.QLBVEntities _data, int _MaBN)
        {
            string _lTenDV = "";
            DateTime _NgayHienTai = System.DateTime.Now, _NgayCD = System.DateTime.Now;
            var _lDichVu = (from dv in _data.DichVus.Where(p => p.PLoai == 2)
                            join tn in _data.TieuNhomDVs on dv.IdTieuNhom equals tn.IdTieuNhom
                            select new { dv.MaDV, tn.TenTN, dv.TenDV, tn.TenRG }).ToList();
            var _lChiDinh = (from cls in _data.CLS.Where(p => p.MaBNhan == _MaBN)
                             join cd in _data.ChiDinhs.Where(p => p.Status == 0) on cls.IdCLS equals cd.IdCLS
                             select new { cd.IDCD, cls.NgayThang, cd.MaDV }).ToList();
            var _lKetQua = (from a in _lChiDinh
                            join b in _lDichVu on a.MaDV equals b.MaDV
                            select new { a.MaDV, a.NgayThang, a.IDCD, b.TenDV, b.TenRG, b.TenTN }).ToList();
            foreach (var item in _lKetQua)
            {
                if (item.NgayThang != null)
                {
                    _NgayCD = Convert.ToDateTime(item.NgayThang);
                    TimeSpan Test = _NgayHienTai - _NgayCD;
                    if (Test.Days >= 1)
                    {
                        _lTenDV += item.TenDV + ":\n";
                    }
                    else
                    {
                        if (Test.Hours >= 4)
                        {
                            _lTenDV += item.TenDV + ":\n";
                        }
                    }
                }
            }
            return _lTenDV;
        }

        //check công khám
        public static Boolean KtraCongKham(QLBV_Database.QLBVEntities data, int mabn, int _makp)//thêm khoa kb để chỉ kiểm tra dịch vụ của kp đó
        {
            var _lcongkham = (from dv in data.DichVus
                              join tn in data.TieuNhomDVs.Where(p => p.IDNhom == 13) on dv.IdTieuNhom equals tn.IdTieuNhom
                              select dv).ToList();
            var _ldthuocct = (from dt in data.DThuocs.Where(p => p.MaBNhan == mabn)
                              join dtct in data.DThuoccts.Where(p => p.MaKP == _makp) on dt.IDDon equals dtct.IDDon
                              select dtct.MaDV).Distinct().ToList();
            foreach (var item1 in _ldthuocct)
            {
                var kt = _lcongkham.Where(p => p.MaDV == item1).FirstOrDefault();
                if (kt == null)
                    return false;
            }
            return true;
        }

        public static List<int> _getKPHD(QLBV_Database.QLBVEntities _data, string _maCB)
        {
            List<int> KetQua = new List<int>();
            var makphd = _data.CanBoes.Where(p => p.MaCB == _maCB).Select(p => p.MaKPsd).FirstOrDefault();
            if (makphd != null && makphd.Contains(";"))
            {
                string[] dskp = makphd.Split(';');
                for (int i = 0; i < dskp.Length - 1; i++)
                {
                    if (!string.IsNullOrEmpty(dskp[i]))
                        KetQua.Add(Convert.ToInt32(dskp[i]));
                }
            }

            DateTime NgayTruc = DateTime.Now;
            var _TTNgayTruc = _data.LichTrucs.Where(p => p.ThoiGianTu <= NgayTruc && p.ThoiGianDen >= NgayTruc).ToList();
            foreach (var item in _TTNgayTruc)
            {
                if (item.ListMaCB.Contains(_maCB))
                {
                    KetQua.Add(item.MaKP);
                }
            }
            return KetQua.Distinct().ToList();
        }

        public static bool KTraCBNhap(QLBV_Database.QLBVEntities _data, int _mabn, string _macb)
        {
            var bn = _data.BenhNhans.Where(p => p.MaBNhan == _mabn).FirstOrDefault();
            if (bn != null)
            {
                string cb = bn.MaCB;

                if (!string.IsNullOrEmpty(cb))
                {
                    var cb1 = (from a in _data.CanBoes.Where(p => p.MaCB == _macb)
                               join b in _data.KPhongs.Where(p => p.PLoai == "Admin") on a.MaKP equals b.MaKP
                               select new { a.MaKP, a.MaCB }).ToList();
                    if (bn.MaCB == _macb || cb1.Count > 0)
                        return true;
                    else
                    {
                        var tencb = _data.CanBoes.Where(p => p.MaCB == cb).Select(p => p.TenCB).FirstOrDefault();
                        MessageBox.Show("Cán bộ nhập: " + tencb.ToString() + ", mã: " + cb + "\nBạn không thể sửa!");
                        return false;
                    }
                }
            }
            return true;
        }

        public static int KTQuaSoLanKB(QLBV_Database.QLBVEntities _data, string _macb, int _ghan, DateTime NgayKham)
        {
            DateTime _tungay = DungChung.Ham.NgayTu(NgayKham);
            DateTime _denngay = DungChung.Ham.NgayDen(NgayKham);
            int kq = 0;
            var cb = _data.CanBoes.Where(p => p.MaCB == _macb).Select(p => p.MaCCHN).FirstOrDefault();
            if (!string.IsNullOrEmpty(cb))
            {
                //var _lcb = _data.CanBoes.Where(p => p.MaCCHN == cb).ToList();
                var bnkb = (from b in _data.BNKBs.Where(p => p.NgayKham >= _tungay && p.NgayKham <= _denngay)
                            join bn in _data.BenhNhans on b.MaBNhan equals bn.MaBNhan
                            join c in _data.CanBoes.Where(p => p.MaCCHN == cb) on b.MaCB equals c.MaCB
                            select new { b.MaBNhan }).Distinct().ToList();
                if (DungChung.Bien.MaBV == "27001")
                {
                    bnkb = (from b in _data.BNKBs.Where(p => p.NgayKham >= _tungay && p.NgayKham <= _denngay)
                            join bn in _data.BenhNhans.Where(p => p.DTuong == "BHYT") on b.MaBNhan equals bn.MaBNhan
                            join c in _data.CanBoes.Where(p => p.MaCCHN == cb) on b.MaCB equals c.MaCB
                            select new { b.MaBNhan }).Distinct().ToList();
                }
                if (bnkb.Count() >= _ghan)
                {
                    //return false;
                    kq = 2;
                }
                else
                {
                    kq = 1;
                }
            }
            return kq;
        }

        public static string DocSoThanhChu(string number)
        {
            if (number == "")
            {
                string result1 = "Không đồng chẵn";
                return result1;
            }
            string strReturn = "";
            string s = number;
            while (s.Length > 0 && s.Substring(0, 1) == "0")
            {
                s = s.Substring(1);
            }
            string[] so = new string[] { "không", "một", "hai", "ba", "bốn", "năm", "sáu", "bảy", "tám", "chín" };
            string[] hang = new string[] { "", "nghìn", "triệu", "tỷ" };
            int i, j, donvi, chuc, tram;

            bool booAm = false;
            decimal decS = 0;

            try
            {
                decS = Convert.ToDecimal(s.ToString());
            }
            catch { }

            if (decS < 0)
            {
                decS = -decS;
                booAm = true;
            }
            i = s.Length;
            if (i == 0)
                strReturn = so[0] + strReturn;
            else
            {
                j = 0;
                while (i > 0)
                {
                    donvi = Convert.ToInt32(s.Substring(i - 1, 1));
                    i--;
                    if (i > 0)
                        chuc = Convert.ToInt32(s.Substring(i - 1, 1));
                    else
                        chuc = -1;
                    i--;
                    if (i > 0)
                        tram = Convert.ToInt32(s.Substring(i - 1, 1));
                    else
                        tram = -1;
                    i--;
                    if ((donvi > 0) || (chuc > 0) || (tram > 0) || (j == 3))
                        strReturn = hang[j] + strReturn;
                    j++;
                    if (j > 3) j = 1;   //Tránh lỗi, nếu dưới 13 số thì không có vấn đề.
                    //Hàm này chỉ dùng để đọc đến 9 số nên không phải bận tâm
                    if ((donvi == 1) && (chuc > 1))
                        strReturn = "mốt " + strReturn;
                    else
                    {
                        if ((donvi == 5) && (chuc > 0))
                            strReturn = "lăm " + strReturn;
                        else if (donvi > 0)
                            strReturn = so[donvi] + " " + strReturn;
                    }
                    if (chuc < 0) break;//Hết số
                    else
                    {
                        if ((chuc == 0) && (donvi > 0)) strReturn = "linh " + strReturn;
                        if (chuc == 1) strReturn = "mười " + strReturn;
                        if (chuc > 1) strReturn = so[chuc] + " mươi " + strReturn;
                    }
                    if (tram < 0) break;//Hết số
                    else
                    {
                        if ((tram > 0) || (chuc > 0) || (donvi > 0)) strReturn = so[tram] + " trăm " + strReturn;
                    }
                    strReturn = " " + strReturn;
                }
            }
            if (booAm) strReturn = "Âm " + strReturn;
            string result = strReturn.Trim().Substring(0, 1).ToUpper() + strReturn.Trim().Substring(1) + " đồng chẵn";
            return result;
        }

        public static string LogIn_v2(string userPass, string url)
        {
            string _request = "";
            try
            {
                string apiLink = url + @"/auth/login"; //ConfigurationManager.AppSettings["APILink"].ToString() + @"/InvoiceAPI/InvoiceWS/createInvoice/" + codeTax;
                string[] TKMK = userPass.Split(':');
                string contentType = "application/json";

                _request = webRequest_login(apiLink, TKMK[0], TKMK[1], "POST", contentType);

                //var user = userPass.Split(':').ToList();
                //var pargramLogin = new UserLoginInvoice()
                //{
                //    username = user?.FirstOrDefault(),
                //    password = user?.LastOrDefault()
                //};
                //var ss = QLBV.Utilities.Commons.AppApi.PostAsync<object, object>(url, @"/auth/login", pargramLogin);
            }
            catch (Exception ex)
            {
                _request = "Lỗi tạo hóa đơn: " + ex.Message;
            }

            return _request;
        }

        public static string CreateInvoice_v1(string UserPass, string _codeTax, string url, Bien.InvoiceInfo _objInvoice, Bien.BuyerInfo _BuyerInfo, Bien.SellerInfo _SellerInfo, List<Bien.ItemInfo> _lstItem, Bien.SummarizeInfo _SummarizeInfo)//codeTax: Mã số thuế,UserPass: tài khoản, mật khẩu dạng: tk:mk
        {
            string _request = "";
            try
            {
                string userPass = UserPass;//ConfigurationManager.AppSettings["UserPass"].ToString();
                string codeTax = _codeTax;//ConfigurationManager.AppSettings["CodeTax"].ToString();
                string apiLink = url + @"/InvoiceAPI/InvoiceWS/createInvoice/" + codeTax;//ConfigurationManager.AppSettings["APILink"].ToString() + @"/InvoiceAPI/InvoiceWS/createInvoice/" + codeTax;
                string autStr = Base64Encode(userPass);
                string contentType = "application/json";

                Bien.InvoiceInfo objInvoice = new Bien.InvoiceInfo();//1)	Thông tin chung hóa đơn
                objInvoice.transactionUuid = System.Guid.NewGuid().ToString();
                objInvoice.invoiceType = _objInvoice.invoiceType;//"02GTTT"; //Mã loại hóa đơn chỉ nhận các giá trị sau: 01GTKT, 02GTTT, 07KPTQ, 03XKNB, 04HGDL. tuân thủ theo quy định ký hiệu loại hóa đơn của Thông tư hướng dẫn thi hành nghị định số 51/2010/NĐ-CP
                objInvoice.templateCode = _objInvoice.templateCode;//"02GTTT0/001";//Mã mẫu hóa đơn, tuân thủ theo quy định ký hiệu mẫu hóa đơn của Thông tư hướng dẫn thi hành nghị định số 51/2010/NĐ-CP
                objInvoice.invoiceSeries = _objInvoice.invoiceSeries;//"AA/18E";//Là “Ký hiệu hóa đơn” tuân thủ theo quy tắc tạo ký hiệu hóa đơn của Thông tư hướng
                //dẫn thi hành nghị định số 51/2010/NĐ-CP.
                //Ví dụ AA/16E.
                //Chú ý: Nếu trường hợp nhập invoiceSeries thì hệ thống sẽ lấy theo dữ liệu truyền vào, nếu không nhập invoiceSeries thì hệ thống sẽ lấy ký hiệu hóa đơn đang được phát hành theo mẫu hóa đơn. Đối với hóa đơn có nhiều dải thì dữ liệu invoiceSeries là yêu cầu bắt buộc

                objInvoice.invoiceIssuedDate = _objInvoice.invoiceIssuedDate;//((Int64)(DateTime.UtcNow.Subtract(new DateTime(1970, 1, 1))).TotalMilliseconds).ToString();//Ngày lập hóa đơn quy đổi ra số (time in miliseconds) được thiết lập theo Nghị định 51/2010/NĐ-CP.
                //Hoặc 1 số định dạng như sau:
                //"yyyy-MM-dd'T'HH:mm:ss.SSSZ", "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'", "EEE, dd MMM yyyy HH:mm:ss zzz", "yyyy-MM-dd")

                objInvoice.currencyCode = _objInvoice.currencyCode;// "VND";
                objInvoice.adjustmentType = "1";// "1";//Trạng thái điều chỉnh hóa đơn: 1: Hóa đơn gốc 3: Hóa đơn thay thế 5: Hóa đơn điều chỉnh
                objInvoice.paymentStatus = _objInvoice.paymentStatus;//"true";//True: Đã thanh toán
                objInvoice.paymentType = _objInvoice.paymentType;// "TM";//Loại hình thức thanh toán: Bao gồm:
                //CK – Chuyển khoản
                //DTCN – Đối trừ công nợ
                //TM – tiền mặt
                //TM/CK – Tiền mặt/ Chuyển khoản
                //Nếu paymentStatus = true  thì bắt buộc phải truyền

                objInvoice.paymentTypeName = _objInvoice.paymentTypeName;//"TM";//Tên phương thức thanh toán
                //CK – Chuyển khoản
                //DTCN – Đối trừ công nợ
                //TM – tiền mặt
                //TM/CK – Tiền mặt/ Chuyển khoản
                //Nếu paymentStatus = true  thì bắt buộc phải truyền

                objInvoice.cusGetInvoiceRight = _objInvoice.cusGetInvoiceRight;//"true";//Mặc định true
                objInvoice.buyerIdNo = _objInvoice.buyerIdNo; //"123456789";//Số giấy tờ của khách hàng
                objInvoice.buyerIdType = _objInvoice.buyerIdType;// "1";//Loại giấy tờ của khách hàng:
                //-	1: Số CMND
                //-	3: Giấy phép kinh doanh
                //-	2: Hộ chiếu

                Bien.BuyerInfo objBuyer = new Bien.BuyerInfo();//2)	Thông tin bên mua
                objBuyer.buyerAddressLine = _BuyerInfo.buyerAddressLine;//"HN VN";//Địa chỉ bưu điện người mua
                objBuyer.buyerIdNo = objInvoice.buyerIdNo;//Số giấy tờ của khách hàng
                objBuyer.buyerIdType = objInvoice.buyerIdType;//Loại giấy tờ của khách hàng:
                //-	1: Số CMND
                //-	3: Giấy phép kinh doanh
                //-	2: Hộ chiếu
                objBuyer.buyerName = _BuyerInfo.buyerName;//"Đặng thị thanh tâm";
                objBuyer.buyerPhoneNumber = _BuyerInfo.buyerPhoneNumber;//"098999990000";
                objBuyer.buyerEmail = _BuyerInfo.buyerEmail;
                objBuyer.buyerLegalName = _BuyerInfo.buyerLegalName;
                objBuyer.buyerTaxCode = _BuyerInfo.buyerTaxCode;
                objBuyer.buyerBankAccount = _BuyerInfo.buyerBankAccount;//Tài khoản ngân hàng
                objBuyer.buyerBankName = _BuyerInfo.buyerBankName;//Tên ngân hàng
                Bien.SellerInfo objSeller = new Bien.SellerInfo();//	Thông tin bên bán
                objSeller.sellerAddressLine = _SellerInfo.sellerAddressLine;//"HN VN";//Địa chỉ bưu điện người bán
                objSeller.sellerBankAccount = _SellerInfo.sellerBankAccount;//"2345";//Tài khoản ngân hàng của người bán
                objSeller.sellerBankName = _SellerInfo.sellerBankName;//"TPB";
                objSeller.sellerEmail = _SellerInfo.sellerEmail;//"sinvoice@viettel.vn";
                objSeller.sellerLegalName = _SellerInfo.sellerLegalName;//"Bên bán";//Tên (đăng ký kinh doanh trong trường hợp là doanh nghiệp) của người bán
                objSeller.sellerPhoneNumber = _SellerInfo.sellerPhoneNumber;//"180099999";
                objSeller.sellerTaxCode = codeTax;//Mã số thuế người bán được cấp bởi TCT Việt Nam. Mẫu 1: 0312770607 Mẫu 2: 0312770607-001
                objSeller.sellerWebsite = _SellerInfo.sellerWebsite;//Website;
                objSeller.sellerFaxNumber = _SellerInfo.sellerFaxNumber;//Số fax

                string paymentMethodName = _objInvoice.paymentTypeName;//"TM";//Tên phương thức thanh toán: Bao gồm
                //CK – Chuyển khoản
                //DTCN – Đối trừ công nợ
                //TM – tiền mặt
                //TM/CK – Tiền mặt/ Chuyển khoản

                List<Bien.ItemInfo> lstItem = new List<Bien.ItemInfo>();
                foreach (var i in _lstItem)
                {
                    Bien.ItemInfo item = new Bien.ItemInfo();//	Thông tin hàng hóa
                    item.discount = i.discount;//"0.0";//giảm giá
                    item.itemCode = i.itemCode;//"SP1";//Mã hàng hóa, dịch vụ
                    item.itemDiscount = i.itemDiscount;//"5000.0";
                    item.itemName = i.itemName;//"SP1";
                    item.itemTotalAmountWithoutTax = i.itemTotalAmountWithoutTax;//"250000";
                    item.lineNumber = i.lineNumber;//"1";
                    item.quantity = i.quantity;//"10";//Số lượng
                    item.taxAmount = i.taxAmount;//"0.0";//Tổng tiền thuế
                    item.taxPercentage = i.taxPercentage;//"10.0";//Thuế suất của hàng hóa, dịch vụ
                    item.unitName = i.unitName;//"kg";
                    item.unitPrice = i.unitPrice;//"25000";
                    lstItem.Add(item);
                }
                Bien.SummarizeInfo objSummary = new Bien.SummarizeInfo();//	Thông tin tiền hàng trên hóa đơn
                objSummary.discountAmount = _SummarizeInfo.discountAmount;//"0";//Tổng tiền chiết khấu thương mại trên toàn hóa đơn trước khi tính thuế. Chú ý: Khi tính chiết khấu, toàn hóa đơn chỉ sử dụng một mức thuế
                objSummary.settlementDiscountAmount = _SummarizeInfo.settlementDiscountAmount;//_"0";//Tổng tiền chiết khấu thanh toán trên toàn hóa đơn sau khi tính thuế. Chú ý: Khi tính chiết khấu, toàn hóa đơn chỉ sử dụng một mức thuế.
                objSummary.sumOfTotalLineAmountWithoutTax = _SummarizeInfo.sumOfTotalLineAmountWithoutTax;//"250000";//Tổng thành tiền cộng gộp của tất cả các dòng hóa đơn chưa bao gồm VAT.
                //-	Hóa đơn thường: Tổng tiền HHDV trên các dòng HĐ.
                //-	Hóa đơn điều chỉnh: Tổng tiền điều chỉnh của các dòng HĐ.

                objSummary.taxPercentage = _SummarizeInfo.taxPercentage;//"10";//Mức thuế: khai báo giá trị như sau
                //-	0%: 0
                //-	5%: 5
                //-	10%: 10
                //-	không phải kê khai và tính thuế GTGT: -1
                //-	Không chịu thuế:  -2

                objSummary.totalAmountWithoutTax = _SummarizeInfo.totalAmountWithoutTax;//"250000";//Tổng tiền hóa đơn chưa bao gồm VAT.
                //-	Hóa đơn thường: Tổng tiền HHDV trên các dòng HĐ và các khoản tăng/giảm khác trên toàn HĐ.
                //-	Hóa đơn điều chỉnh: Tổng tiền điều chỉnh của các dòng HĐ và các khoản tăng/giảm khác trên toàn HĐ.

                objSummary.totalAmountWithTax = _SummarizeInfo.totalAmountWithTax;//"275000";//Tổng tiền trên hóa đơn đã bao gồm VAT.
                //-	Hóa đơn thường: Tổng tiền HHDV trên các dòng HĐ và các khoản tăng/giảm khác trên toàn HĐ đã bao gồm cả VAT.
                //-	Hóa đơn điều chỉnh: Tổng tiền điều chỉnh của các dòng HĐ và các khoản tăng/giảm khác trên toàn HĐ đã bao gồm cả VAT

                objSummary.totalAmountWithTaxInWords = DocSoThanhChu(objSummary.totalAmountWithTax.ToString());//Số tiền hóa đơn bao gồm VAT viết bằng chữ
                objSummary.totalTaxAmount = _SummarizeInfo.totalTaxAmount;//"25000";//Tổng tiền thuế trên toàn hóa đơn.
                //-	Hóa đơn thường: Tổng tiền VAT trên các dòng HĐ và các khoản thuế khác trên toàn HĐ.
                //-	Hóa đơn điều chỉnh: Tổng tiền VAT điều chỉnh của các dòng HĐ và các khoản tăng/giảm VAT khác trên toàn HĐ.

                string request = @"{    ""generalInvoiceInfo"": " +
                    @"{       ""invoiceType"":""" + objInvoice.invoiceType +
                    @""",       ""templateCode"":""" + objInvoice.templateCode +
                    @""", 	""invoiceSeries"":""" + objInvoice.invoiceSeries +
                    @""",       ""transactionUuid"": """ + objInvoice.transactionUuid +
                    @""",       ""invoiceIssuedDate"":" + objInvoice.invoiceIssuedDate +
                    @",       ""currencyCode"":""" + objInvoice.currencyCode + @""",
                    ""adjustmentType"":""" + objInvoice.adjustmentType + @""",
                    ""paymentStatus"":" + objInvoice.paymentStatus + @",
                    ""paymentType"":""" + objInvoice.paymentType + @""",
                    ""paymentTypeName"":""" + objInvoice.paymentTypeName + @""",
                    ""cusGetInvoiceRight"":" + objInvoice.cusGetInvoiceRight + @",
                    ""buyerIdNo"":""" + objInvoice.buyerIdNo + @""",
                    ""buyerIdType"":""" + objInvoice.buyerIdType + @"""    },
                    ""buyerInfo"":{
                    ""buyerName"":""" + objBuyer.buyerName + @""",
                    ""buyerLegalName"":""" + objBuyer.buyerLegalName + @""",
                    ""buyerTaxCode"":""" + objBuyer.buyerTaxCode + @""",
                    ""buyerBankAccount"":""" + objBuyer.buyerBankAccount + @""",
                    ""buyerBankName"":""" + objBuyer.buyerBankName + @""",
                    ""buyerAddressLine"":""" + objBuyer.buyerAddressLine + @""",
                    ""buyerPhoneNumber"":""" + objBuyer.buyerPhoneNumber + @""",
                    ""buyerEmail"":""" + objBuyer.buyerEmail + @""",
                    ""buyerIdNo"":""" + objBuyer.buyerIdNo + @""",
                    ""buyerIdType"":""" + objBuyer.buyerIdType + @"""    },
                    ""sellerInfo"":{
                    ""sellerLegalName"":""" + objSeller.sellerLegalName + @""",
                    ""sellerTaxCode"":""" + objSeller.sellerTaxCode + @""",
                    ""sellerFaxNumber"":""" + objSeller.sellerFaxNumber + @""",
                    ""sellerWebsite"":""" + objSeller.sellerWebsite + @""",
                    ""sellerAddressLine"":""" + objSeller.sellerAddressLine + @""",
                    ""sellerPhoneNumber"":""" + objSeller.sellerPhoneNumber + @""",
                    ""sellerEmail"":""" + objSeller.sellerEmail + @""",
                    ""sellerBankName"":""" + objSeller.sellerBankName + @""",
                    ""sellerBankAccount"":""" + objSeller.sellerBankAccount + @"""   },
                    ""extAttribute"":[     ],
                    ""payments"":[       {
                    ""paymentMethodName"":""" + paymentMethodName + @"""    }    ],
                    ""deliveryInfo"":{     },
                    ""itemInfo"":[       ";
                int indexItem = 1;
                foreach (var itemInfo in lstItem)
                {
                    request += @"{""lineNumber"":" + itemInfo.lineNumber + @",
                    ""itemCode"":""" + itemInfo.itemCode + @""",
                    ""itemName"":""" + itemInfo.itemName + @""",
                    ""unitName"":""" + itemInfo.unitName + @""",
                    ""unitPrice"":" + itemInfo.unitPrice + @",
                    ""quantity"":" + itemInfo.quantity + @",
                    ""itemTotalAmountWithoutTax"":" + itemInfo.itemTotalAmountWithoutTax + @",
                    ""taxPercentage"":" + itemInfo.taxPercentage + @",
                    ""taxAmount"":" + itemInfo.taxAmount + @",
                    ""discount"":" + itemInfo.discount + @",
                    ""itemDiscount"":" + itemInfo.itemDiscount + @"     }";
                    if (lstItem.Count > 1 && indexItem != lstItem.Count)
                        request += " , ";
                    indexItem++;
                }
                request += @"],
                    ""discountItemInfo"":[     ],
                    ""meterReading"": [{
                    ""previousIndex"": ""5454"",
                    ""currentIndex"": ""244"",
                    ""factor"": ""22"",
                    ""amount"": ""2""           },
                    {             ""previousIndex"": ""44"",
                    ""currentIndex"": ""44"",
                    ""factor"": ""33"",
                    ""amount"": ""3""           }],
                    ""summarizeInfo"":{
                    ""sumOfTotalLineAmountWithoutTax"":" + objSummary.sumOfTotalLineAmountWithoutTax + @",
                    ""totalAmountWithoutTax"":" + objSummary.totalAmountWithoutTax + @",
                    ""totalTaxAmount"":" + objSummary.totalTaxAmount + @",
                    ""totalAmountWithTax"":" + objSummary.totalAmountWithTax + @",
                    ""totalAmountWithTaxInWords"":""" + objSummary.totalAmountWithTaxInWords + @""",
                    ""discountAmount"":" + objSummary.discountAmount + @",
                    ""settlementDiscountAmount"":" + objSummary.settlementDiscountAmount + @",
                    ""taxPercentage"":" + objSummary.taxPercentage + @"  },
                    ""taxBreakdowns"":[       {
                    ""taxPercentage"":" + objSummary.taxPercentage + @",
                    ""taxableAmount"":" + objSummary.totalTaxAmount + @",
                    ""taxAmount"":" + objSummary.totalTaxAmount + @"       }    ] } ";

                request = request.Replace("True", "true");

                string result = webRequest(apiLink, request, autStr, "POST", contentType);
                _request = result;
                //MessageBox.Show("OK " + result);
            }
            catch (Exception ex)
            {
                _request = "Lỗi tạo hóa đơn: " + ex.Message;
                //MessageBox.Show("NOK " + ex.Message);
            }
            return _request;
        }

        public static string CreateInvoice_v2(string UserPass, string _codeTax, string url, Bien.InvoiceInfo _objInvoice, Bien.BuyerInfo _BuyerInfo, Bien.SellerInfo _SellerInfo, List<Bien.ItemInfo> _lstItem, Bien.SummarizeInfo _SummarizeInfo, int id)//codeTax: Mã số thuế,UserPass: tài khoản, mật khẩu dạng: token
        {
            string _request = "";
            string strtoken = "";
            try
            {
                var user = UserPass.Split(':').ToList();
                var pargramLogin = new UserLoginInvoice()
                {
                    username = user?.FirstOrDefault(),
                    password = user?.LastOrDefault()
                };

                var loginResult = QLBV.Utilities.Commons.AppApi.PostAsync<TokenResult, object>(url, @"/auth/login", pargramLogin);
                if (loginResult.Result == null)
                {
                    MessageBox.Show("Lỗi tạo hóa đơn");
                }
                else
                {
                    //var objtoken = JsonConvert.DeserializeObject<TokenResult>(test);

                    strtoken = loginResult.Result.access_token;
                    //string[] a = test.Split(',');
                    string userPass = UserPass;//ConfigurationManager.AppSettings["UserPass"].ToString();
                    string codeTax = _codeTax;//ConfigurationManager.AppSettings["CodeTax"].ToString();
                    string apiLink = url + @"/services/einvoiceapplication/api/InvoiceAPI/InvoiceWS/createInvoice/" + codeTax;//ConfigurationManager.AppSettings["APILink"].ToString() + @"/InvoiceAPI/InvoiceWS/createInvoice/" + codeTax;
                    string autStr = strtoken;
                    //string autStr = a[0];
                    string contentType = "application/json";

                    Bien.InvoiceInfo objInvoice = new Bien.InvoiceInfo();//1)	Thông tin chung hóa đơn
                    objInvoice.transactionUuid = System.Guid.NewGuid().ToString();
                    objInvoice.invoiceType = _objInvoice.invoiceType;//"02GTTT"; //Mã loại hóa đơn chỉ nhận các giá trị sau: 01GTKT, 02GTTT, 07KPTQ, 03XKNB, 04HGDL. tuân thủ theo quy định ký hiệu loại hóa đơn của Thông tư hướng dẫn thi hành nghị định số 51/2010/NĐ-CP
                    objInvoice.templateCode = _objInvoice.templateCode;//"02GTTT0/001";//Mã mẫu hóa đơn, tuân thủ theo quy định ký hiệu mẫu hóa đơn của Thông tư hướng dẫn thi hành nghị định số 51/2010/NĐ-CP
                    objInvoice.invoiceSeries = _objInvoice.invoiceSeries;//"AA/18E";//Là “Ký hiệu hóa đơn” tuân thủ theo quy tắc tạo ký hiệu hóa đơn của Thông tư hướng
                                                                         //dẫn thi hành nghị định số 51/2010/NĐ-CP.
                                                                         //Ví dụ AA/16E.
                                                                         //Chú ý: Nếu trường hợp nhập invoiceSeries thì hệ thống sẽ lấy theo dữ liệu truyền vào, nếu không nhập invoiceSeries thì hệ thống sẽ lấy ký hiệu hóa đơn đang được phát hành theo mẫu hóa đơn. Đối với hóa đơn có nhiều dải thì dữ liệu invoiceSeries là yêu cầu bắt buộc

                    objInvoice.invoiceIssuedDate = _objInvoice.invoiceIssuedDate;//((Int64)(DateTime.UtcNow.Subtract(new DateTime(1970, 1, 1))).TotalMilliseconds).ToString();//Ngày lập hóa đơn quy đổi ra số (time in miliseconds) được thiết lập theo Nghị định 51/2010/NĐ-CP.
                                                                                 //Hoặc 1 số định dạng như sau:
                                                                                 //"yyyy-MM-dd'T'HH:mm:ss.SSSZ", "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'", "EEE, dd MMM yyyy HH:mm:ss zzz", "yyyy-MM-dd")

                    objInvoice.currencyCode = _objInvoice.currencyCode;// "VND";
                    objInvoice.adjustmentType = "1";// "1";//Trạng thái điều chỉnh hóa đơn: 1: Hóa đơn gốc 3: Hóa đơn thay thế 5: Hóa đơn điều chỉnh
                    objInvoice.paymentStatus = _objInvoice.paymentStatus;//"true";//True: Đã thanh toán
                    objInvoice.paymentType = _objInvoice.paymentType;// "TM";//Loại hình thức thanh toán: Bao gồm:
                                                                     //CK – Chuyển khoản
                                                                     //DTCN – Đối trừ công nợ
                                                                     //TM – tiền mặt
                                                                     //TM/CK – Tiền mặt/ Chuyển khoản
                                                                     //Nếu paymentStatus = true  thì bắt buộc phải truyền

                    objInvoice.paymentTypeName = _objInvoice.paymentTypeName;//"TM";//Tên phương thức thanh toán
                                                                             //CK – Chuyển khoản
                                                                             //DTCN – Đối trừ công nợ
                                                                             //TM – tiền mặt
                                                                             //TM/CK – Tiền mặt/ Chuyển khoản
                                                                             //Nếu paymentStatus = true  thì bắt buộc phải truyền

                    objInvoice.cusGetInvoiceRight = _objInvoice.cusGetInvoiceRight;//"true";//Mặc định true
                    objInvoice.buyerIdNo = _objInvoice.buyerIdNo; //"123456789";//Số giấy tờ của khách hàng
                    objInvoice.buyerIdType = _objInvoice.buyerIdType;// "1";//Loại giấy tờ của khách hàng:
                                                                     //-	1: Số CMND
                                                                     //-	3: Giấy phép kinh doanh
                                                                     //-	2: Hộ chiếu

                    Bien.BuyerInfo objBuyer = new Bien.BuyerInfo();//2)	Thông tin bên mua
                    objBuyer.buyerAddressLine = _BuyerInfo.buyerAddressLine;//"HN VN";//Địa chỉ bưu điện người mua
                    objBuyer.buyerIdNo = objInvoice.buyerIdNo;//Số giấy tờ của khách hàng
                    objBuyer.buyerIdType = objInvoice.buyerIdType;//Loại giấy tờ của khách hàng:
                                                                  //-	1: Số CMND
                                                                  //-	3: Giấy phép kinh doanh
                                                                  //-	2: Hộ chiếu
                    objBuyer.buyerName = _BuyerInfo.buyerName;//"Đặng thị thanh tâm";
                    objBuyer.buyerPhoneNumber = _BuyerInfo.buyerPhoneNumber;//"098999990000";
                    objBuyer.buyerEmail = _BuyerInfo.buyerEmail;
                    objBuyer.buyerLegalName = _BuyerInfo.buyerLegalName;
                    objBuyer.buyerTaxCode = _BuyerInfo.buyerTaxCode;
                    objBuyer.buyerBankAccount = _BuyerInfo.buyerBankAccount;//Tài khoản ngân hàng
                    objBuyer.buyerBankName = _BuyerInfo.buyerBankName;//Tên ngân hàng
                    Bien.SellerInfo objSeller = new Bien.SellerInfo();//	Thông tin bên bán
                    objSeller.sellerAddressLine = _SellerInfo.sellerAddressLine;//"HN VN";//Địa chỉ bưu điện người bán
                    objSeller.sellerBankAccount = _SellerInfo.sellerBankAccount;//"2345";//Tài khoản ngân hàng của người bán
                    objSeller.sellerBankName = _SellerInfo.sellerBankName;//"TPB";
                    objSeller.sellerEmail = _SellerInfo.sellerEmail;//"sinvoice@viettel.vn";
                    objSeller.sellerLegalName = _SellerInfo.sellerLegalName;//"Bên bán";//Tên (đăng ký kinh doanh trong trường hợp là doanh nghiệp) của người bán
                    objSeller.sellerPhoneNumber = _SellerInfo.sellerPhoneNumber;//"180099999";
                    objSeller.sellerTaxCode = codeTax;//Mã số thuế người bán được cấp bởi TCT Việt Nam. Mẫu 1: 0312770607 Mẫu 2: 0312770607-001
                    objSeller.sellerWebsite = _SellerInfo.sellerWebsite;//Website;
                    objSeller.sellerFaxNumber = _SellerInfo.sellerFaxNumber;//Số fax

                    string paymentMethodName = _objInvoice.paymentTypeName;//"TM";//Tên phương thức thanh toán: Bao gồm
                                                                           //CK – Chuyển khoản
                                                                           //DTCN – Đối trừ công nợ
                                                                           //TM – tiền mặt
                                                                           //TM/CK – Tiền mặt/ Chuyển khoản

                    List<Bien.ItemInfo> lstItem = new List<Bien.ItemInfo>();
                    foreach (var i in _lstItem)
                    {
                        Bien.ItemInfo item = new Bien.ItemInfo();//	Thông tin hàng hóa
                        item.discount = i.discount;//"0.0";//giảm giá
                        item.itemCode = i.itemCode;//"SP1";//Mã hàng hóa, dịch vụ
                        item.itemDiscount = i.itemDiscount;//"5000.0";
                        item.itemName = i.itemName;//"SP1";
                        item.itemTotalAmountWithoutTax = i.itemTotalAmountWithoutTax;//"250000";
                        item.lineNumber = i.lineNumber;//"1";
                        item.quantity = i.quantity;//"10";//Số lượng
                        item.taxAmount = i.taxAmount;//"0.0";//Tổng tiền thuế
                        item.taxPercentage = i.taxPercentage;//"10.0";//Thuế suất của hàng hóa, dịch vụ
                        item.unitName = i.unitName;//"kg";
                        item.unitPrice = i.unitPrice;//"25000";
                        lstItem.Add(item);
                    }
                    Bien.SummarizeInfo objSummary = new Bien.SummarizeInfo();//	Thông tin tiền hàng trên hóa đơn
                    objSummary.discountAmount = _SummarizeInfo.discountAmount;//"0";//Tổng tiền chiết khấu thương mại trên toàn hóa đơn trước khi tính thuế. Chú ý: Khi tính chiết khấu, toàn hóa đơn chỉ sử dụng một mức thuế
                    objSummary.settlementDiscountAmount = _SummarizeInfo.settlementDiscountAmount;//_"0";//Tổng tiền chiết khấu thanh toán trên toàn hóa đơn sau khi tính thuế. Chú ý: Khi tính chiết khấu, toàn hóa đơn chỉ sử dụng một mức thuế.
                    objSummary.sumOfTotalLineAmountWithoutTax = _SummarizeInfo.sumOfTotalLineAmountWithoutTax;//"250000";//Tổng thành tiền cộng gộp của tất cả các dòng hóa đơn chưa bao gồm VAT.
                                                                                                              //-	Hóa đơn thường: Tổng tiền HHDV trên các dòng HĐ.
                                                                                                              //-	Hóa đơn điều chỉnh: Tổng tiền điều chỉnh của các dòng HĐ.

                    objSummary.taxPercentage = _SummarizeInfo.taxPercentage;//"10";//Mức thuế: khai báo giá trị như sau
                                                                            //-	0%: 0
                                                                            //-	5%: 5
                                                                            //-	10%: 10
                                                                            //-	không phải kê khai và tính thuế GTGT: -1
                                                                            //-	Không chịu thuế:  -2

                    objSummary.totalAmountWithoutTax = _SummarizeInfo.totalAmountWithoutTax;//"250000";//Tổng tiền hóa đơn chưa bao gồm VAT.
                                                                                            //-	Hóa đơn thường: Tổng tiền HHDV trên các dòng HĐ và các khoản tăng/giảm khác trên toàn HĐ.
                                                                                            //-	Hóa đơn điều chỉnh: Tổng tiền điều chỉnh của các dòng HĐ và các khoản tăng/giảm khác trên toàn HĐ.

                    objSummary.totalAmountWithTax = _SummarizeInfo.totalAmountWithTax;//"275000";//Tổng tiền trên hóa đơn đã bao gồm VAT.
                                                                                      //-	Hóa đơn thường: Tổng tiền HHDV trên các dòng HĐ và các khoản tăng/giảm khác trên toàn HĐ đã bao gồm cả VAT.
                                                                                      //-	Hóa đơn điều chỉnh: Tổng tiền điều chỉnh của các dòng HĐ và các khoản tăng/giảm khác trên toàn HĐ đã bao gồm cả VAT

                    objSummary.totalAmountWithTaxInWords = DocSoThanhChu(objSummary.totalAmountWithTax.ToString());//Số tiền hóa đơn bao gồm VAT viết bằng chữ
                    objSummary.totalTaxAmount = _SummarizeInfo.totalTaxAmount;//"25000";//Tổng tiền thuế trên toàn hóa đơn.
                                                                              //-	Hóa đơn thường: Tổng tiền VAT trên các dòng HĐ và các khoản thuế khác trên toàn HĐ.
                                                                              //-	Hóa đơn điều chỉnh: Tổng tiền VAT điều chỉnh của các dòng HĐ và các khoản tăng/giảm VAT khác trên toàn HĐ.

                    var invoiceInfo = new Bien.Invoice()
                    {
                        generalInvoiceInfo = objInvoice,
                        buyerInfo = objBuyer,
                        sellerInfo = objSeller,
                        extAttribute = new List<Bien.ExtAttribute>(),
                        payments = new List<Bien.Payment>()
                        {
                            new Bien.Payment()
                            {
                                paymentMethodName = paymentMethodName,
                            }
                        },
                        deliveryInfo = new Bien.DeliveryInfo(),
                        itemInfo = lstItem,
                        discountItemInfo = new List<Bien.DiscountItemInfo>(),
                        meterReading = new List<Bien.MeterReading>()
                        {
                            new Bien.MeterReading()
                            {
                                previousIndex = "5454",
                                currentIndex = "244",
                                factor = "22",
                                amount = "2"
                            },
                            new Bien.MeterReading()
                            {
                                previousIndex = "44",
                                currentIndex = "44",
                                factor = "33",
                                amount = "3"
                            }
                        },
                        summarizeInfo = objSummary,
                        taxBreakdowns = new List<Bien.TaxBreakdowns>()
                        {
                            new Bien.TaxBreakdowns()
                            {
                                taxPercentage = objSummary.taxPercentage,
                                taxableAmount = objSummary.totalTaxAmount,
                                taxAmount = objSummary.totalTaxAmount,
                            }
                        }
                    };

                    //string result = webRequest_v2(apiLink, request, autStr, "POST", contentType);

                    _request = webRequest_v2_Ex(apiLink, invoiceInfo, autStr, "POST", contentType, _codeTax);
                }
            }
            catch (Exception ex)
            {
                _request = "Lỗi tạo hóa đơn: " + ex.Message;
            }
            return _request;
        }

        public static string ViewHoaDon_v2(string _userPass, string _codeTax, string _apiLink, string invoiceNo, string pattern, string transactionID, string pathSave)
        {
            try
            {
                string strtoken = "";
                string test = DungChung.Ham.LogIn_v2(_userPass, _apiLink);
                if (test.Contains("Lỗi tạo hóa đơn"))
                {
                    MessageBox.Show(test);
                    return test;
                }
                else
                {
                    var objtoken = JsonConvert.DeserializeObject<TokenResult>(test);
                    strtoken = objtoken.access_token;
                    string userPass = _userPass;
                    string codeTax = _codeTax;
                    string apiLink = _apiLink + @"/services/einvoiceapplication/api/InvoiceAPI/InvoiceUtilsWS/getInvoiceRepresentationFile";

                    Bien.GetFileRequest objGetFile = new Bien.GetFileRequest();
                    objGetFile.invoiceNo = invoiceNo;
                    objGetFile.pattern = pattern;
                    objGetFile.fileType = "pdf";
                    objGetFile.transactionID = "";

                    var objSetFile = new Bien.SetFileRequest()
                    {
                        supplierTaxCode = _codeTax,
                        invoiceNo = invoiceNo,
                        templateCode = pattern,
                        transactionID = transactionID,
                        fileType = "pdf",
                    };
                    string autStr = strtoken;
                    string contentType = "application/json";

                    var result = webRequest_v2_Vx(apiLink, objSetFile, autStr, "POST", contentType);
                    var _result = JsonConvert.DeserializeObject<Bien.PDFFileResponse>(result);
                    string errorCode = _result.errorCode;
                    string description = _result.description;
                    string fileName = _result.fileName;
                    byte[] fileToBytes = _result.fileToBytes;

                    //int startIndex = result.IndexOf(@"fileName"":""") + ((@"""fileName"":""").Length);
                    //int length = result.IndexOf(@""",""fileToBytes") - startIndex;
                    //string fileName = result.Substring(startIndex, length);

                    Bien.PDFFileResponse objFile = JsonConvert.DeserializeObject<Bien.PDFFileResponse>(result);
                    string path = pathSave + "\\" + fileName + ".pdf";
                    File.WriteAllBytes(path, objFile.fileToBytes);

                    return path;
                }
                //MessageBox.Show("File in " + path);
            }
            catch (Exception ex)
            {
                MessageBox.Show("NOK " + ex.Message);
                return "";
            }
        }

        public static string ViewHoaDon(string _userPass, string _codeTax, string _apiLink, string invoiceNo, string pattern, string pathSave)
        {
            try
            {
                string userPass = _userPass;
                string codeTax = _codeTax;
                string apiLink = _apiLink + @"/services/einvoiceapplication/api/InvoiceAPI/InvoiceUtilsWS/getInvoiceRepresentationFile";

                Bien.GetFileRequest objGetFile = new Bien.GetFileRequest();

                string request = @"{
                        ""supplierTaxCode"":""" + codeTax + @""",
                        ""invoiceNo"":""" + objGetFile.invoiceNo + @""",
                        ""pattern"":""" + objGetFile.pattern + @""",
                        ""transactionUuid"":""" + objGetFile.transactionUuid + @""",
                        ""fileType"":""" + objGetFile.fileType + @"""
                        }";
                string autStr = _userPass;//Base64Encode(userPass);
                string contentType = "application/json";

                string result = webRequest(apiLink, request, autStr, "POST", contentType);
                int startIndex = result.IndexOf(@"fileName"":""") + ((@"""fileName"":""").Length);
                int length = result.IndexOf(@""",""fileToBytes") - startIndex;
                string fileName = result.Substring(startIndex, length);

                Bien.PDFFileResponse objFile = JsonConvert.DeserializeObject<Bien.PDFFileResponse>(result);
                string path = pathSave + "\\" + fileName + ".pdf";
                File.WriteAllBytes(path, objFile.fileToBytes);
                return path;

                //MessageBox.Show("File in " + path);
            }
            catch (Exception ex)
            {
                MessageBox.Show("NOK " + ex.Message);
                return "";
            }
        }

        public static string ViewHoaDonChuyenDoi(string _userPass, string _codeTax, string _apiLink, string invoiceNo, string templateCode, string ngayTaoHD, string tenCB, string pathSave)
        {
            try
            {
                string strtoken = "";
                string test = DungChung.Ham.LogIn_v2(_userPass, _apiLink);
                if (test.Contains("Lỗi tạo hóa đơn"))
                {
                    MessageBox.Show(test);
                    return test;
                }
                else
                {
                    var objtoken = JsonConvert.DeserializeObject<TokenResult>(test);
                    strtoken = objtoken.access_token;
                    string userPass = _userPass;
                    string codeTax = _codeTax;
                    string apiLink = _apiLink + @"/services/einvoiceapplication/api/InvoiceAPI/InvoiceWS/createExchangeInvoiceFile?supplierTaxCode={0}&invoiceNo={1}&strIssueDate={2}&exchangeUser={3}";
                    var request = string.Format(apiLink, _codeTax, invoiceNo, ngayTaoHD, tenCB);

                    string autStr = strtoken;
                    string contentType = "application/x-www-form-urlencoded";

                    string result = webRequestGet(request, autStr, contentType);

                    var _result = JsonConvert.DeserializeObject<Bien.PDFFileResponse>(result);
                    string errorCode = _result.errorCode;
                    string description = _result.description;
                    string fileName = _result.fileName;
                    byte[] fileToBytes = _result.fileToBytes;

                    Bien.PDFFileResponse objFile = JsonConvert.DeserializeObject<Bien.PDFFileResponse>(result);
                    string path = pathSave + "\\" + fileName + ".pdf";
                    File.WriteAllBytes(path, objFile.fileToBytes);

                    //int startIndex = result.IndexOf(@"fileName"":""") + ((@"""fileName"":""").Length);
                    //int length = result.IndexOf(@""",""fileToBytes") - startIndex;
                    //string fileName = result.Substring(startIndex, length);

                    //Bien.PDFFileResponse objFile = JsonConvert.DeserializeObject<Bien.PDFFileResponse>(result);
                    //string path = pathSave + "\\" + fileName + ".pdf";
                    //File.WriteAllBytes(path, objFile.fileToBytes);

                    return path;
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Mã lỗi: " + ex.Message);
                return "";
            }
        }

        public static string webRequest(string pzUrl, string pzData, string pzAuthorization, string pzMethod, string pzContentType)
        {
            var httpWebRequest = (HttpWebRequest)WebRequest.Create(pzUrl);
            httpWebRequest.ContentType = pzContentType;
            httpWebRequest.Method = pzMethod;
            httpWebRequest.Headers.Add("Authorization", "Basic " + pzAuthorization);
            httpWebRequest.Proxy = new WebProxy();//no proxy

            if (!string.IsNullOrEmpty(pzData))
            {
                using (var streamWriter = new StreamWriter(httpWebRequest.GetRequestStream()))
                {
                    string json = pzData;

                    streamWriter.Write(json);
                    streamWriter.Flush();
                    streamWriter.Close();
                }
            }
            InitiateSSLTrust();//bypass SSL
            var httpResponse = (HttpWebResponse)httpWebRequest.GetResponse();
            var result = string.Empty;
            using (var streamReader = new StreamReader(httpResponse.GetResponseStream()))
            {
                result = streamReader.ReadToEnd();
            }
            return result;
        }

        public static string webRequest_v2_Ex(string pzUrl, Bien.Invoice pzData, string pzAuthorization, string pzMethod, string pzContentType, string _codeTax)
        {
            var result = string.Empty;
            try
            {
                if (Bien.MaBV == "01071" || Bien.MaBV == "01049" || Bien.MaBV == "24009" || Bien.MaBV == "30009")
                {
                    result = AppApi.Post<string, Bien.Invoice>(@"services/einvoiceapplication/api/InvoiceAPI/InvoiceWS/createInvoice/" + _codeTax, pzData, pzAuthorization);
                }
            }
            catch (Exception ex)
            {
                result = "Lỗi tạo hóa đơn: " + ex.Message;
            }

            return result;
        }

        public static string webRequest_v2_Vx(string pzUrl, Bien.SetFileRequest pzData, string pzAuthorization, string pzMethod, string pzContentType)
        {
            var result = string.Empty;
            try
            {
                if (Bien.MaBV == "01071" || Bien.MaBV == "01049" || Bien.MaBV == "24009" || Bien.MaBV == "30009")
                {
                    result = AppApi.Post<string, Bien.SetFileRequest>(@"services/einvoiceapplication/api/InvoiceAPI/InvoiceUtilsWS/getInvoiceRepresentationFile", pzData, pzAuthorization);
                }
            }
            catch (Exception ex)
            {
                result = "Lỗi tạo hóa đơn: " + ex.Message;
            }

            return result;
        }

        public class TokenResult
        {
            public string access_token { get; set; }
            public string token_type { get; set; }
            public string refresh_token { get; set; }
        }

        private TokenResult strToken_v2 = new TokenResult();

        public static string webRequest_login(string pzUrl, string user, string pass, string pzMethod, string pzContentType)
        {
            try
            {
                ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12 | SecurityProtocolType.Tls11 | SecurityProtocolType.Tls;

                var pargramLogin = new UserLoginInvoice()
                {
                    username = user,
                    password = pass
                };

                var httpWebRequest = WebRequest.Create(pzUrl) as HttpWebRequest;
                httpWebRequest.ContentType = pzContentType;
                httpWebRequest.Method = pzMethod;

                string jsonPara = Newtonsoft.Json.JsonConvert.SerializeObject(pargramLogin);

                byte[] bodyParam = System.Text.Encoding.UTF8.GetBytes(jsonPara);
                //httpWebRequest.Proxy = new WebProxy();//no proxy

                var stream = httpWebRequest.GetRequestStream();
                stream.Write(bodyParam, 0, bodyParam.Length);
                stream.Close();
                stream.Dispose();

                //InitiateSSLTrust();//bypass SSL
                var httpResponse = httpWebRequest.GetResponse() as HttpWebResponse;
                var result = string.Empty;

                stream = httpResponse.GetResponseStream();

                var streamReader = new StreamReader(stream);

                result = streamReader.ReadToEnd();

                return result;
            }
            catch (Exception ex)
            {
            }

            return null;
        }

        public static string webRequestGet(string pzUrl, string pzAuthorization, string pzContentType)
        {
            var httpWebRequest = (HttpWebRequest)WebRequest.Create(pzUrl);
            httpWebRequest.ContentType = pzContentType;
            httpWebRequest.Method = "POST";
            httpWebRequest.Headers.Add("Authorization", "Bearer " + pzAuthorization);
            httpWebRequest.Proxy = new WebProxy();//no proxy

            InitiateSSLTrust();//bypass SSL
            var httpResponse = (HttpWebResponse)httpWebRequest.GetResponse();
            var result = string.Empty;
            using (var streamReader = new StreamReader(httpResponse.GetResponseStream()))
            {
                result = streamReader.ReadToEnd();
            }
            return result;
        }

        public static void InitiateSSLTrust()
        {
            try
            {
                ServicePointManager.ServerCertificateValidationCallback =
                   new RemoteCertificateValidationCallback(
                        delegate
                        { return true; }
                    );
            }
            catch (Exception ex)
            {
            }
        }

        public static string Base64Encode(string plainText)
        {
            var plainTextBytes = System.Text.Encoding.UTF8.GetBytes(plainText);
            return System.Convert.ToBase64String(plainTextBytes);
        }

        public static string Base64Decode(string base64EncodedData)
        {
            var base64EncodedBytes = System.Convert.FromBase64String(base64EncodedData);
            return System.Text.Encoding.UTF8.GetString(base64EncodedBytes);
        }

        public static void XoaTamUngct(QLBV_Database.QLBVEntities _data, int _MaBn, int _IDTamUngct)
        {
            int _IDTamUng = 0, _MaDV = 0, Iddtct = 0, idDon = 0;
            bool KtraNoiTru = false;
            var _lCongKham = (from nhom in _data.NhomDVs.Where(p => p.IDNhom == 13)
                              join tn in _data.TieuNhomDVs on nhom.IDNhom equals tn.IDNhom
                              join dv in _data.DichVus on tn.IdTieuNhom equals dv.IdTieuNhom
                              select new { dv.MaDV }).Distinct().ToList();
            var _Bn = _data.BenhNhans.Where(p => p.MaBNhan == _MaBn).ToList();
            if (_Bn.Count > 0)
                KtraNoiTru = true;
            var _lTUct = _data.TamUngcts.Where(p => p.IDTamUngct == _IDTamUngct).FirstOrDefault();
            if (_lTUct != null)
            {
                _IDTamUng = _lTUct.IDTamUng;
                _MaDV = _lTUct.MaDV;
                _lTUct.Status = 1;
                _data.SaveChanges();

                var _lTU = _data.TamUngs.Where(p => p.IDTamUng == _IDTamUng).FirstOrDefault();
                if (_lTU != null)
                {
                    _lTU.SoTien = _lTU.SoTien - _lTUct.SoTien;
                    _lTU.TienChenh = _lTU.TienChenh - _lTUct.SoTien;
                    _data.SaveChanges();
                }
                var _CheckCK = _lCongKham.Where(p => p.MaDV == _MaDV).ToList();
                if (_CheckCK.Count > 0)
                {
                    var dthuoct = (from dt in _data.DThuocs.Where(p => p.MaBNhan == _MaBn)
                                   join dtct in _data.DThuoccts.Where(p => p.MaDV == _MaDV).Where(p => p.ThanhToan == 1) on dt.IDDon equals dtct.IDDon
                                   select dtct).ToList();
                    foreach (var a in dthuoct)
                    {
                        if (!KtraNoiTru)
                        {
                            idDon = a.IDDon ?? 0;
                            _data.DThuoccts.Remove(a);
                            _data.SaveChanges();
                            if (_data.DThuoccts.Where(p => p.IDDon == idDon).Count() == 0)
                            {
                                var qdthuoc = _data.DThuocs.Where(p => p.IDDon == idDon).FirstOrDefault();
                                if (qdthuoc != null)
                                {
                                    _data.DThuocs.Remove(qdthuoc);
                                    _data.SaveChanges();
                                }
                            }
                        }
                        else
                        {
                            a.ThanhToan = 0;
                            a.IDCD = 0;
                            _data.SaveChanges();
                        }
                    }
                }
                else
                {
                    var _lChiDinh = _data.ChiDinhs.Where(p => p.MaDV == _MaDV).Where(p => p.SoPhieu == _IDTamUng).FirstOrDefault();
                    if (_lChiDinh != null)
                    {
                        _lChiDinh.SoPhieu = null;
                        if(DungChung.Bien.MaBV == "30372")
                        {
                            _lChiDinh.TamThu = null;
                        }    
                        _data.SaveChanges();
                    }

                    if (_lTUct.IDDonct != null && _lTUct.IDDonct != 0)
                    {
                        var dtct = _data.DThuoccts.Where(p => p.IDDonct == _lTUct.IDDonct).FirstOrDefault();
                        if (dtct != null)
                        {
                            dtct.ThanhToan = 0;
                            _lTUct.IDDonct = null;
                            _data.SaveChanges();
                        }
                    }
                }
            }
        }

        /// <summary>
        /// hddt  thông tư 78
        /// </summary>
        /// <param name="ttbn"></param>
        /// <param name="ttbx"></param>
        /// <param name="tttu"></param>
        /// <returns></returns>
        ///
        public static string getDemoInvPublishData_TT78(BenhNhan ttbn, TTboXung ttbx, TamUng tttu)
        {
            QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(Bien.StrCon);

            DungChung.vCommon com = new DungChung.vCommon();

            StringBuilder BillData = new StringBuilder();

            BillData.AppendLine("<DSHDon>");

            /// Nội dung của 1 hóa đơn

            //string tel = "01235556666";
            var tthethong = _data.HTHONGs.Where(p => p.MaBV == Bien.MaBV).FirstOrDefault();
            double _sotien = Math.Round(tttu.SoTien ?? 0, 0, MidpointRounding.AwayFromZero);
            StringBuilder sb = new StringBuilder("<HDon><key>");
            string fkey = DateTime.Now.ToString("yyyyMMddHHmmss"); /// Có thể quy định khác sao cho nó unique
            sb.Append(fkey);
            sb.Append("</key>");

            #region DLHDon
            sb.Append("<DLHDon>");

            #region TTChung
            sb.Append("<TTChung>");

            string soHD = "";
            sb.Append("<SHDon>");
            sb.Append(soHD);
            sb.Append("</SHDon>");

            string MHSo = "";
            sb.Append("<MHSo>");
            sb.Append(MHSo);
            sb.Append("</MHSo>");

            string sobangKe = "";
            sb.Append("<SBKe>");
            sb.Append(sobangKe);
            sb.Append("</SBKe>");

            string nBangKe = "";
            sb.Append("<NBKe>");
            sb.Append(nBangKe);
            sb.Append("</NBKe>");

            sb.Append("<DVTTe>");
            sb.Append("VND");
            sb.Append("</DVTTe>");

            sb.Append("<TGia>");
            sb.Append("");
            sb.Append("</TGia>");

            sb.Append("<HTTToan>");
            sb.Append("");
            sb.Append("</HTTToan>");

            sb.Append("</TTChung>");
            #endregion

            #region NDHDon
            #region NBan
            sb.Append("<NBan>");
            //
            sb.Append("<Ten>");
            sb.Append(com.convertSpecialCharacter(Bien.TenCQ));
            sb.Append("</Ten>");
            //
            //
            sb.Append("<MST>");
            sb.Append(Bien.xmlFilePath_LIS[17]);
            sb.Append("</MST>");
            //
            //
            sb.Append("<DChi>");
            sb.Append(com.convertSpecialCharacter(tthethong.DiaChi));
            sb.Append("</DChi>");
            //
            //
            sb.Append("<SDThoai>");
            sb.Append("");
            sb.Append("</SDThoai>");
            //
            //
            sb.Append("<DCTDTu>");
            sb.Append("");
            sb.Append("</DCTDTu>");
            //
            //
            sb.Append("<STKNHang>");
            sb.Append("");
            sb.Append("</STKNHang>");
            //
            //
            sb.Append("<TNHang>");
            sb.Append("");
            sb.Append("</TNHang>");
            //
            //
            sb.Append("<Fax>");
            sb.Append("");
            sb.Append("</Fax>");
            //
            //
            sb.Append("<LDDNBo>");
            sb.Append("");
            sb.Append("</LDDNBo>");
            //
            //
            sb.Append("<HDSo>");
            sb.Append("");
            sb.Append("</HDSo>");
            //
            //
            sb.Append("<HVTNXHang>");
            sb.Append("");
            sb.Append("</HVTNXHang>");
            //
            //
            sb.Append("<FaxTNVChuyen>");
            sb.Append("");
            sb.Append("</FaxTNVChuyen>");
            //
            //
            sb.Append("<PTVChuyen>");
            sb.Append("");
            sb.Append("</PTVChuyen>");
            //
            //
            sb.Append("<HDKTSo>");
            sb.Append("");
            sb.Append("</HDKTSo>");
            //
            //
            sb.Append("<HDKTNgay>");
            sb.Append("");
            sb.Append("</HDKTNgay>");
            //
            sb.Append("</NBan>");

            #endregion

            #region NMua
            sb.Append("<NMua>");
            //
            sb.Append("<Ten>");
            sb.Append(com.convertSpecialCharacter(ttbn.TenBNhan));
            sb.Append("</Ten>");
            //
            //
            sb.Append("<MST>");
            sb.Append("");
            sb.Append("</MST>");
            //
            //
            sb.Append("<DChi>");
            sb.Append(com.convertSpecialCharacter(ttbn.DChi));
            sb.Append("</DChi>");
            //
            //
            sb.Append("<MKHang>");
            sb.Append(ttbn.MaBNhan);
            sb.Append("</MKHang>");
            //
            //
            sb.Append("<SDThoai>");
            sb.Append("");
            sb.Append("</SDThoai>");
            //
            //
            sb.Append("<DCTDTu>");
            sb.Append("");
            sb.Append("</DCTDTu>");
            //
            sb.Append("<HVTNMHang>");
            sb.Append(com.convertSpecialCharacter(ttbn.TenBNhan));
            sb.Append("</HVTNMHang>");
            //
            sb.Append("<STKNHang>");
            sb.Append("");
            sb.Append("</STKNHang>");
            //
            //
            sb.Append("<TNHang>");
            sb.Append("");
            sb.Append("</TNHang>");
            //
            //
            sb.Append("<HVTNNHang>");
            sb.Append("");
            sb.Append("</HVTNNHang>");
            //
            sb.Append("</NMua>");
            #endregion

            #region DSHHDVu
            sb.Append("<DSHHDVu>");
            sb.Append("<HHDVu>");
            //
            //sb.Append("<TChat>");
            //sb.Append(0);
            //sb.Append("</TChat>");
            //
            //
            string proname1 = tttu.LyDo;//"Tiền viện phí";
            sb.Append("<THHDVu>");
            sb.Append(com.convertSpecialCharacter(proname1));
            sb.Append("</THHDVu>");
            //
            //
            string prounit1 = "Lần";
            sb.Append("<THHDVu>");
            sb.Append(com.convertSpecialCharacter(prounit1));
            sb.Append("</THHDVu>");
            //
            //
            string proqua1 = "1";

            sb.Append("<SLuong>");
            sb.Append(proqua1);
            sb.Append("</SLuong>");
            //
            //
            string proprice1 = _sotien.ToString();

            sb.Append("<DGia>");
            sb.Append(proprice1);
            sb.Append("</DGia>");
            //

            //
            sb.Append("<TSThue>");
            sb.Append(proprice1);
            sb.Append("</TSThue>");
            //

            sb.Append("</HHDVu>");

            sb.Append("</DSHHDVu>");
            sb.Append("<TToan>");
            //
            string prototal = _sotien.ToString();
            sb.Append("<TgTCThue>");
            sb.Append(prototal);
            sb.Append("</TgTCThue>");
            //
            sb.Append("<TgTThue></TgTThue>");
            //
            sb.Append("<TgTTTBSo>");
            sb.Append(_sotien.ToString());
            sb.Append("</TgTTTBSo>");
            sb.Append("<TgTTTBChu>");
            sb.Append(com.DocSoTien(long.Parse(_sotien.ToString()), ""));
            sb.Append("</TgTTTBChu>");

            sb.Append("</TToan>");
            #endregion

            //

            #endregion

            sb.Append("</DLHDon>");
            #endregion
            sb.Append("</HDon>");

            BillData.AppendLine(sb.ToString());

            ///Kết thúc nội dung của 1 hóa đơn
            ///Nếu phát hành nhiều hóa đơn 1 lúc thì làm tương tự, xem cấu trúc trong tài liệu

            BillData.AppendLine("</DSHDon>");

            return BillData.ToString();
        }

        public static string getDemoInvPublishData(BenhNhan ttbn, TTboXung ttbx, TamUng tttu)
        {
            QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(Bien.StrCon);

            DungChung.vCommon com = new DungChung.vCommon();

            StringBuilder BillData = new StringBuilder();

            BillData.AppendLine("<Invoices>");

            /// Nội dung của 1 hóa đơn

            //string tel = "01235556666";
            double _sotien = Math.Round(tttu.SoTien ?? 0, 0, MidpointRounding.AwayFromZero);
            StringBuilder sb = new StringBuilder("<Inv><key>");
            string fkey = DateTime.Now.ToString("yyyyMMddHHmmss"); /// Có thể quy định khác sao cho nó unique
            sb.Append(fkey);
            sb.Append("</key><Invoice>");

            ///Mã khách hàng nếu có, trường hợp này đặt = số điện thoại, không được để trống
            string cuscode = ttbn.MaBNhan.ToString();

            sb.Append("<CusCode>");
            sb.Append(cuscode);
            sb.Append("</CusCode>");

            if (Bien.MaBV == "30007")
            {
                string buyer = "";

                sb.Append("<Buyer>");
                sb.Append(com.convertSpecialCharacter(buyer));
                sb.Append("</Buyer>");

                string cusname = ttbn.TenBNhan + "     SN " + ttbn.NamSinh;
                sb.Append("<CusName>");
                sb.Append(com.convertSpecialCharacter(cusname));
                sb.Append("</CusName>");

                string dtoc = "Kinh";
                if (!string.IsNullOrEmpty(ttbx.MaDT))
                {
                    var dt = _data.DanTocs.Where(p => p.MaDT == ttbx.MaDT).FirstOrDefault();
                    if (dt != null)
                    {
                        dtoc = dt.TenDT;
                    }
                }
                sb.Append("<DanToc>");
                sb.Append(com.convertSpecialCharacter(dtoc));
                sb.Append("</DanToc>");

                string gtinh = ttbn.GTinh == 1 ? "Nam" : "Nữ";

                sb.Append("<GioiTinh>");
                sb.Append(com.convertSpecialCharacter(gtinh));
                sb.Append("</GioiTinh>");

                string khoadt = "";
                var kp = _data.KPhongs.Where(p => p.MaKP == ttbn.MaKP).FirstOrDefault();
                if (kp != null)
                {
                    khoadt = kp.TenKP;
                }
                sb.Append("<KhoaDieuTri>");
                sb.Append(com.convertSpecialCharacter(khoadt));
                sb.Append("</KhoaDieuTri>");
            }
            else
            {
                string buyer = ttbn.TenBNhan;

                sb.Append("<Buyer>");
                sb.Append(com.convertSpecialCharacter(buyer));
                sb.Append("</Buyer>");

                string cusname = "";

                sb.Append("<CusName>");
                sb.Append(com.convertSpecialCharacter(cusname));
                sb.Append("</CusName>");
            }

            string address = ttbn.DChi;

            sb.Append("<CusAddress>");
            sb.Append(com.convertSpecialCharacter(address));
            sb.Append("</CusAddress>");

            string tel = ttbx.DThoai;

            sb.Append("<CusPhone>");
            sb.Append(tel);
            sb.Append("</CusPhone>");

            string taxcode = "";

            sb.Append("<CusTaxCode>");
            sb.Append(taxcode);
            sb.Append("</CusTaxCode>");

            string payment = "TM";

            sb.Append("<PaymentMethod>");
            sb.Append(com.convertSpecialCharacter(payment));
            sb.Append("</PaymentMethod>");

            sb.Append("<Products>");

            /// Sản phẩm 1 trong hóa đơn
            sb.Append("<Product>");

            string proname1 = tttu.LyDo;//"Tiền viện phí";

            sb.Append("<ProdName>");
            sb.Append(com.convertSpecialCharacter(proname1));
            sb.Append("</ProdName>");

            string prounit1 = "Lần";

            sb.Append("<ProdUnit>"); //
            sb.Append(com.convertSpecialCharacter(prounit1));
            sb.Append("</ProdUnit>");

            string proqua1 = "1";

            sb.Append("<ProdQuantity>");
            sb.Append(proqua1);
            sb.Append("</ProdQuantity>");

            string proprice1 = _sotien.ToString();

            sb.Append("<ProdPrice>");
            sb.Append(proprice1);
            sb.Append("</ProdPrice>");

            string proamount1 = _sotien.ToString();

            sb.Append("<Amount>");
            sb.Append(proamount1);
            sb.Append("</Amount>");
            sb.Append("<Total>");
            sb.Append(proamount1);
            sb.Append("</Total>");
            sb.Append("<IsSum>");
            sb.Append("0");
            sb.Append("</IsSum>");

            sb.Append("</Product>");
            /// Kết thúc Sản phẩm 1 trong hóa đơn

            sb.Append("</Products>");

            ///Tổng chưa vat
            string prototal = _sotien.ToString();
            string discountamount = "";

            sb.Append("<Total>");
            sb.Append(prototal);
            sb.Append("</Total>");
            sb.Append("<DiscountAmount>");
            sb.Append(discountamount);
            sb.Append("</DiscountAmount>");

            sb.Append("<VATRate>");

            string vatrate = "-1";
            #region

            if (Bien.MaBV == "30007" && ttbn.DTuong == "BHYT")
            {
                QLBV_Database.QLBVEntities _dataContext = new QLBV_Database.QLBVEntities(Bien.StrCon);
                int dungtuyen = ttbn.Tuyen ?? 0;
                int _hangbv = DungChung.Ham.hangBV(Bien.MaBV);
                string muchuong = vatrate, _muc = "", kvuc = "";
                if (ttbn.MucHuong != null)
                    _muc = ttbn.MucHuong.ToString();
                if (ttbn.KhuVuc != null)
                    kvuc = ttbn.KhuVuc.Trim();
                if (dungtuyen == 1)
                {
                    muchuong = DungChung.Ham._PtramTT(_dataContext, _muc).ToString();
                }
                else if (dungtuyen == 2)
                {
                    switch (_hangbv)
                    {
                        case 1:
                            muchuong = (DungChung.Ham._PtramTT(_dataContext, _muc)).ToString();
                            break;

                        case 2:
                            muchuong = (DungChung.Ham._PtramTT(_dataContext, _muc)).ToString();
                            break;

                        case 3:
                            if (kvuc.ToLower().Contains("k"))
                                muchuong = (DungChung.Ham._PtramTT(_dataContext, _muc)).ToString();
                            else
                                muchuong = (DungChung.Ham._PtramTT(_dataContext, _muc)).ToString();
                            break; ;
                        case 4:
                            muchuong = (DungChung.Ham._PtramTT(_dataContext, _muc)).ToString();
                            break;
                    }
                }
                vatrate = muchuong;
            }
            #endregion

            sb.Append(vatrate);
            sb.Append("</VATRate>");
            sb.Append("<VATAmount>");

            string vatamount = "";
            sb.Append(vatamount);
            sb.Append("</VATAmount>");
            sb.Append("<Amount>");

            /// Tổng tính cả Vat
            string amount = _sotien.ToString();
            sb.Append(amount);
            sb.Append("</Amount>");
            sb.Append("<AmountInWords>");
            sb.Append(com.DocSoTien(long.Parse(amount), ""));
            sb.Append("</AmountInWords>");

            string extra = "";

            sb.Append("<Extra>");
            sb.Append(com.convertSpecialCharacter(extra));
            sb.Append("</Extra>");

            sb.Append("<ArisingDate>");
            sb.Append(DateTime.Today.ToString("dd/MM/yyyy"));
            sb.Append("</ArisingDate>");

            /// 0: Chưa thanh toán; 1: Đã thanh toán
            sb.Append("<PaymentStatus>1</PaymentStatus>");

            sb.Append("</Invoice>");
            sb.Append("</Inv>");

            BillData.AppendLine(sb.ToString());

            ///Kết thúc nội dung của 1 hóa đơn
            ///Nếu phát hành nhiều hóa đơn 1 lúc thì làm tương tự, xem cấu trúc trong tài liệu

            BillData.AppendLine("</Invoices>");

            return BillData.ToString();
        }

        //public static double _checkTon_Moi(QLBV_Database.QLBVEntities data, int maDV, int makho, double gia, double soluongke, string solo, DateTime? handung)
        //{
        //    double soluong = 0;
        //    data = new QLBV_Database.QLBVEntities(Bien.StrCon);
        //    if (CheckTuTruc(makho, data))
        //    {
        //        var _giatt0 = (from nhap in data.NhapDs.Where(p => p.PLoai == 2 && p.MaKPnx == makho)
        //                       join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV && p.DonGia == gia && p.SoLo == solo && p.HanDung == handung) on nhap.IDNhap equals nhapct.IDNhap
        //                       select new { nhapct.DonGia, nhapct.SoLuongX, nhap.PLoai, nhap.KieuDon, nhapct.MaDV, nhapct.SoLuongN, nhap.IDNhap, nhapct.SoLo, nhapct.HanDung }).ToList();
        //        var _giatt = (from nd in _giatt0
        //                      group nd by new { nd.MaDV, nd.DonGia, nd.SoLo, nd.HanDung } into kq
        //                      select new
        //                      {
        //                          kq.Key.DonGia,
        //                          kq.Key.SoLo,
        //                          kq.Key.HanDung,
        //                          soluong = (kq.Sum(p => p.SoLuongX) - kq.Where(p => p.PLoai == 1 && p.KieuDon == 2).Sum(p => p.SoLuongN)),
        //                          idnhap = kq.Min(p => p.IDNhap)
        //                      }).OrderBy(p => p.idnhap).ToList();
        //        double slnhap = 0, slnhaptralai = 0; double _slkd = 0;
        //        if (_giatt0.Count > 0)
        //        {
        //            slnhap = _giatt0.Sum(p => p.SoLuongX);
        //            slnhaptralai = (_giatt0.Where(p => p.PLoai == 1 && p.KieuDon == 2).Count() > 0) ? (_giatt0.Where(p => p.PLoai == 1 && p.KieuDon == 2).Sum(p => p.SoLuongN)) : 0;
        //        }

        //        var slkd0 = (from sl in data.DThuoccts.Where(p => p.MaDV == maDV && p.DonGia == gia && p.SoLo == solo && p.HanDung == handung && (p.Status == null || p.Status == 0 || p.Status == 1))
        //                     join kd in data.DThuocs on sl.IDDon equals kd.IDDon
        //                     where (kd.MaKXuat == makho)
        //                     select new
        //                     {
        //                         sl.MaDV,
        //                         sl.DonGia,
        //                         SLKD = (sl.MaKXuat == makho && (sl.SoLuong > 0 || (sl.SoLuong < 0 && kd.KieuDon == 2))) ? sl.SoLuong : 0,

        //                     }).ToList();
        //        if (slkd0.Count > 0)
        //        {
        //            _slkd = (slkd0.Sum(p => p.SLKD) == null ? 0 : slkd0.Sum(p => p.SLKD));
        //        }
        //        if (soluongke > 0)
        //            soluong = slnhap - slnhaptralai - _slkd - soluongke - _getSL_DongY(data, maDV, soluongke, makho);
        //        else
        //            soluong = slnhap - slnhaptralai - _slkd;
        //        Bien.SoLuongTon = soluong;
        //        return soluong;

        //    }
        //    else
        //    {
        //        var _gia2 = (from nhap in data.NhapDs.Where(p => p.MaKP == makho && p.PLoai == 1)
        //                     join nhapct in data.NhapDcts.Where(p => p.MaDV == maDV && p.DonGia == gia && p.SoLo == solo && p.HanDung == handung) on nhap.IDNhap equals nhapct.IDNhap
        //                     where nhapct.SoLuongX > 0
        //                     select nhapct).ToList();
        //        if (_gia2.Count > 0)
        //        {
        //            if (soluongke > 0)
        //                soluong = _gia2.Sum(p => p.SoLuongX) - soluongke - _getSL_DongY(data, maDV, soluongke, makho);
        //            else
        //                soluong = _gia2.Sum(p => p.SoLuongX);
        //        }
        //        Bien.SoLuongTon = soluong;
        //    }
        //    return soluong;

        //}

        /// <summary>
        /// Lấy ra thuốc, vật tư đầu tiên tìm được (theo nhập trước xuất trước)- pp mới
        /// </summary>
        /// <param name="_data"></param>
        /// <param name="madv"></param>
        /// <param name="makho"></param>
        /// <returns></returns>
        //internal static giaSoLoHSD _getGiaSoLo_KD(QLBV_Database.QLBVEntities _data, int madv, int makho)
        //{
        //    _data = new QLBV_Database.QLBVEntities(Bien.StrCon);
        //    giaSoLoHSD dsach = new giaSoLoHSD();
        //    Bien.SoLuongTon = 0;
        //    dsach.Gia = 0;
        //    dsach.SoLo = null;
        //    dsach.SoLuong = 0;
        //    dsach.HanDung = null;

        //    double _soLuongDYHH_KD = 0;

        //    bool ktTuTruc = CheckTuTruc(makho, _data);
        //    var qdongy = _data.DichVus.Where(p => p.MaDV == madv && p.DongY == 1).FirstOrDefault();

        //    if (ktTuTruc)
        //    {
        //        var _giatt0 = (from nhap in _data.NhapDs.Where(p => p.MaKPnx == makho)
        //                       join nhapct in _data.NhapDcts.Where(p => p.MaDV == madv) on nhap.IDNhap equals nhapct.IDNhap
        //                       select new { nhapct.DonGia, nhapct.SoLuongX, nhap.PLoai, nhap.KieuDon, nhapct.MaDV, nhapct.SoLuongN, nhap.IDNhap, nhapct.SoLo, nhapct.HanDung }).ToList();
        //        var _giatt = (from nd in _giatt0
        //                      group nd by new { nd.MaDV, nd.DonGia, nd.SoLo, nd.HanDung } into kq
        //                      select new
        //                      {
        //                          kq.Key.DonGia,
        //                          kq.Key.SoLo,
        //                          kq.Key.HanDung,
        //                          soluong = (kq.Sum(p => p.SoLuongX) - kq.Where(p => p.PLoai == 1 && p.KieuDon == 2).Sum(p => p.SoLuongN)),
        //                          idnhap = kq.Min(p => p.IDNhap)
        //                      }).OrderBy(p => p.idnhap).ToList();
        //        if (_giatt.Count > 0)
        //        {
        //            Double[] dsgia = new Double[_giatt.Count];
        //            foreach (var i in _giatt)
        //            {
        //                var slkd0 = (from sl in _data.DThuoccts.Where(p => p.MaDV == madv && p.DonGia == i.DonGia && p.SoLo == i.SoLo && p.HanDung == i.HanDung && (p.Status == null || p.Status == 0 || p.Status == 1))
        //                             join kd in _data.DThuocs on sl.IDDon equals kd.IDDon
        //                             where (kd.MaKXuat == makho || (kd.MaKP == makho && sl.Status == 0 && kd.KieuDon == 4))
        //                             select new
        //                             {
        //                                 sl.MaDV,
        //                                 sl.DonGia,
        //                                 SLKD = (sl.MaKXuat == makho && (sl.SoLuong > 0 || (sl.SoLuong < 0 && kd.KieuDon == 2))) ? sl.SoLuong : 0,
        //                                 SLTra = (kd.MaKP == makho) ? sl.SoLuong : 0// Đơn treo lĩnh HC VTYT (chỉ đơn trả dược mới trừ, đơn lĩnh thì không tính thêm : Ví dụ: tủ trực còn 50 viên, kê đơn trả cho kho tổng 30 viên (nhưng chưa lĩnh) cũng chỉ kê đơn cho bệnh nhân hoặc trả dược trong vòng 20 viên còn lại; Trường hợp kê đơn lĩnh thêm 40 viên, không được tính=> chỉ được tính khi nào đã lĩnh dược về khoa
        //                             }).ToList();

        //                double _slkd = 0;
        //                if (slkd0.Count > 0)
        //                {
        //                    _slkd = (slkd0.Sum(p => p.SLKD) == null ? 0 : slkd0.Sum(p => p.SLKD)) - (slkd0.Sum(p => p.SLTra) == null ? 0 : slkd0.Sum(p => p.SLTra));
        //                }
        //                if (i.soluong > 0)
        //                {
        //                    dsach.SoLuong = i.soluong - _slkd;
        //                    dsach.Gia = i.DonGia;
        //                    dsach.SoLo = i.SoLo;
        //                    dsach.HanDung = i.HanDung;
        //                }
        //                if (dsach.SoLuong > 0)
        //                {
        //                    Bien.SoLuongTon = dsach.SoLuong;
        //                    break;
        //                }
        //                else
        //                {
        //                    Bien.SoLuongTon = 0;
        //                }
        //            }
        //        }

        //        return dsach;
        //    }
        //    else
        //    {
        //        #region không phải tủ trực

        //        // danh sách giá, tồn của thuốc vật tư nhập
        //        var abc = (from nhap in _data.NhapDs.Where(p => p.MaKP == makho && p.PLoai == 1)
        //                   join nhapct in _data.NhapDcts.Where(p => p.MaDV == madv && p.SoLuongX > 0) on nhap.IDNhap equals nhapct.IDNhap
        //                   orderby nhapct.IDNhapct
        //                   select nhapct).ToList();
        //        if (abc.Count > 0)
        //        {
        //            //group danh sách giá nhập
        //            List<giaSoLoHSD> qdsgiaNhap = (from nd in abc
        //                                           group nd by new { nd.MaDV, nd.DonGia, nd.SoLo, nd.HanDung } into kq
        //                                           select new giaSoLoHSD
        //                                           {
        //                                               Gia = kq.Key.DonGia,
        //                                               SoLo = kq.Key.SoLo,
        //                                               HanDung = kq.Key.HanDung,
        //                                               SoLuong = kq.Sum(p => p.SoLuongX)
        //                                           }).ToList();

        //            #region qdsgiaNhap trừ số lượng kê đơn => đẩy vào qdsgia
        //            List<giaSoLoHSD> qdsgia = new List<giaSoLoHSD>();// danh sách thuốc còn tồn (đã trừ kê đơn)
        //            foreach (giaSoLoHSD a in qdsgiaNhap)
        //            {
        //                // danh sách giá, số lượng kê của thuốc vật tư kê đơn chưa xuất
        //                var qslkd = (from dtct in _data.DThuoccts.Where(p => p.MaDV == madv && (p.Status == null || p.Status == 0) && p.DonGia == a.Gia && p.SoLo == a.SoLo && p.HanDung == a.HanDung)
        //                             join dt in _data.DThuocs.Where(p => p.MaKXuat == makho).Where(p => p.KieuDon != 2 && p.KieuDon != 4) on dtct.IDDon equals dt.IDDon
        //                             select dtct).ToList();
        //                double kd = 0;
        //                if (qslkd.Count > 0)
        //                {
        //                    kd = qslkd.Sum(p => p.SoLuong);
        //                }
        //                if (qdongy != null && kd != 0)
        //                    _soLuongDYHH_KD = DungChung.Ham._getSL_DongY(_data, madv, kd, makho);
        //                if (a.SoLuong > kd + _soLuongDYHH_KD)
        //                {
        //                    giaSoLoHSD moi = new giaSoLoHSD();
        //                    moi.Gia = a.Gia;
        //                    moi.SoLo = a.SoLo;
        //                    moi.HanDung = a.HanDung;
        //                    moi.SoLuong = a.SoLuong - kd - _soLuongDYHH_KD;
        //                    qdsgia.Add(moi);
        //                }

        //            }
        //            #endregion
        //            #region lấy giá đầu tiên còn tồn
        //            if (qdsgia.Count == 0)
        //            {
        //                dsach.Gia = abc.First().DonGia;
        //                dsach.SoLo = abc.First().SoLo;
        //                dsach.HanDung = abc.First().HanDung;
        //                dsach.SoLuong = 0;//abc.Where(p => p.DonGia == dsach.Gia && p.SoLo == dsach.SoLo && p.HanDung == dsach.HanDung).Sum(p => p.SoLuongX);
        //                Bien.SoLuongTon = 0;
        //                return dsach;
        //            }
        //            else
        //            {
        //                foreach (NhapDct ndct in abc)
        //                {
        //                    var q1 = qdsgia.Where(p => p.Gia == ndct.DonGia && p.SoLo == ndct.SoLo && p.HanDung == ndct.HanDung).FirstOrDefault();
        //                    if (q1 != null)
        //                    {
        //                        Bien.SoLuongTon = q1.SoLuong;
        //                        dsach.Gia = ndct.DonGia;
        //                        dsach.SoLo = ndct.SoLo;
        //                        dsach.SoLuong = q1.SoLuong;
        //                        dsach.HanDung = ndct.HanDung;
        //                        return dsach;
        //                    }
        //                }
        //            }
        //            #endregion
        //        }
        //        return dsach;
        //        #endregion
        //    }

        //}

        /// <summary>
        /// Lấy giá, tồn khi đang kê đơn
        /// </summary>
        /// <param name="_data"></param>
        /// <param name="madv"></param>
        /// <param name="makho"></param>
        /// <param name="dsKeMoi">danh sách dịch vụ đó đang được kê trên đơn</param>
        /// <param name="iddon"> Đơn đang sửa</param>
        /// <param name="giaDangKe"> giá đang kê </param>
        /// <returns></returns>
        //internal static giaSoLoHSD _getGiaSoLo_KD(QLBV_Database.QLBVEntities _data, int madv, int makho, List<giaSoLoHSD> dsKeMoi, int iddon, giaSoLoHSD giaDangKe)
        //{
        //    _data = new QLBV_Database.QLBVEntities(Bien.StrCon);
        //    giaSoLoHSD dsach = new giaSoLoHSD();
        //    Bien.SoLuongTon = 0;
        //    dsach.Gia = 0;
        //    dsach.SoLo = null;
        //    dsach.SoLuong = 0;
        //    dsach.HanDung = null;

        //    double _soLuongDYHH_KD = 0;

        //    bool ktTuTruc = CheckTuTruc(makho, _data);
        //    var qdongy = _data.DichVus.Where(p => p.MaDV == madv && p.DongY == 1).FirstOrDefault();

        //    if (ktTuTruc)
        //    {
        //        #region tủ trực
        //        var _giatt0 = (from nhap in _data.NhapDs.Where(p => p.MaKPnx == makho)
        //                       join nhapct in _data.NhapDcts.Where(p => p.MaDV == madv) on nhap.IDNhap equals nhapct.IDNhap
        //                       select new { nhapct.DonGia, nhapct.SoLuongX, nhap.PLoai, nhap.KieuDon, nhapct.MaDV, nhapct.SoLuongN, nhap.IDNhap, nhapct.SoLo, nhapct.HanDung }).ToList();
        //        var _giatt = (from nd in _giatt0
        //                      group nd by new { nd.MaDV, nd.DonGia, nd.SoLo, nd.HanDung } into kq
        //                      select new
        //                      {
        //                          kq.Key.DonGia,
        //                          kq.Key.SoLo,
        //                          kq.Key.HanDung,
        //                          soluong = (kq.Sum(p => p.SoLuongX) - kq.Where(p => p.PLoai == 1 && p.KieuDon == 2).Sum(p => p.SoLuongN)),
        //                          idnhap = kq.Min(p => p.IDNhap)
        //                      }).OrderBy(p => p.idnhap).ToList();
        //        if (_giatt.Count > 0)
        //        {
        //            Double[] dsgia = new Double[_giatt.Count];
        //            foreach (var i in _giatt)
        //            {
        //                var slkd0 = (from sl in _data.DThuoccts.Where(p => p.MaDV == madv && p.DonGia == i.DonGia && p.SoLo == i.SoLo && p.HanDung == i.HanDung && (p.Status == null || p.Status == 0 || p.Status == 1))
        //                             join kd in _data.DThuocs on sl.IDDon equals kd.IDDon
        //                             where (kd.MaKXuat == makho || (kd.MaKP == makho && sl.Status == 0 && kd.KieuDon == 4))
        //                             select new
        //                             {
        //                                 sl.MaDV,
        //                                 sl.DonGia,
        //                                 SLKD = (sl.MaKXuat == makho && (sl.SoLuong > 0 || (sl.SoLuong < 0 && kd.KieuDon == 2))) ? sl.SoLuong : 0,
        //                                 SLTra = (kd.MaKP == makho) ? sl.SoLuong : 0// Đơn treo lĩnh HC VTYT (chỉ đơn trả dược mới trừ, đơn lĩnh thì không tính thêm : Ví dụ: tủ trực còn 50 viên, kê đơn trả cho kho tổng 30 viên (nhưng chưa lĩnh) cũng chỉ kê đơn cho bệnh nhân hoặc trả dược trong vòng 20 viên còn lại; Trường hợp kê đơn lĩnh thêm 40 viên, không được tính=> chỉ được tính khi nào đã lĩnh dược về khoa
        //                             }).ToList();

        //                double _slkd = 0;
        //                if (slkd0.Count > 0)
        //                {
        //                    _slkd = (slkd0.Sum(p => p.SLKD) == null ? 0 : slkd0.Sum(p => p.SLKD)) - (slkd0.Sum(p => p.SLTra) == null ? 0 : slkd0.Sum(p => p.SLTra));
        //                }
        //                if (i.soluong > 0)
        //                {
        //                    dsach.SoLuong = i.soluong - _slkd;
        //                    dsach.Gia = i.DonGia;
        //                    dsach.SoLo = i.SoLo;
        //                    dsach.HanDung = i.HanDung;
        //                }
        //                if (dsach.SoLuong > 0)
        //                {
        //                    Bien.SoLuongTon = dsach.SoLuong;
        //                    break;
        //                }
        //                else
        //                {
        //                    Bien.SoLuongTon = 0;
        //                }
        //            }
        //        }

        //        return dsach;
        //        #endregion
        //    }
        //    else
        //    {
        //        #region không phải tủ trực

        //        // danh sách giá, tồn của thuốc vật tư nhập
        //        var abc = (from nhap in _data.NhapDs.Where(p => p.MaKP == makho && p.PLoai == 1)
        //                   join nhapct in _data.NhapDcts.Where(p => p.MaDV == madv && p.SoLuongX > 0) on nhap.IDNhap equals nhapct.IDNhap
        //                   orderby nhapct.IDNhapct
        //                   select nhapct).ToList();
        //        if (abc.Count > 0)
        //        {
        //            //group danh sách giá nhập
        //            List<giaSoLoHSD> qdsgiaNhap = (from nd in abc
        //                                           group nd by new { nd.MaDV, nd.DonGia, nd.SoLo, nd.HanDung } into kq
        //                                           select new giaSoLoHSD
        //                                           {
        //                                               Gia = kq.Key.DonGia,
        //                                               SoLo = kq.Key.SoLo,
        //                                               HanDung = kq.Key.HanDung,
        //                                               SoLuong = kq.Sum(p => p.SoLuongX)
        //                                           }).ToList();

        //            #region qdsgiaNhap trừ số lượng kê đơn (không tính đơn hiện tại đang sửa) => đẩy vào qdsgia
        //            List<giaSoLoHSD> qdsgia = new List<giaSoLoHSD>();// danh sách thuốc còn tồn (đã trừ kê đơn)
        //            foreach (giaSoLoHSD a in qdsgiaNhap)
        //            {
        //                // danh sách giá, số lượng kê của thuốc vật tư kê đơn chưa xuất
        //                var qslkd = (from dtct in _data.DThuoccts.Where(p => p.MaDV == madv && (p.Status == null || p.Status == 0) && p.DonGia == a.Gia && p.SoLo == a.SoLo && p.HanDung == a.HanDung)
        //                             join dt in _data.DThuocs.Where(p => p.IDDon != iddon).Where(p => p.MaKXuat == makho).Where(p => p.KieuDon != 2 && p.KieuDon != 4) on dtct.IDDon equals dt.IDDon
        //                             select dtct).ToList();
        //                double kd = 0;
        //                if (qslkd.Count > 0)
        //                {
        //                    kd = qslkd.Sum(p => p.SoLuong);
        //                }
        //                if (qdongy != null && kd != 0)
        //                    _soLuongDYHH_KD = DungChung.Ham._getSL_DongY(_data, madv, kd, makho);
        //                if (a.SoLuong > kd + _soLuongDYHH_KD)
        //                {
        //                    giaSoLoHSD moi = new giaSoLoHSD();
        //                    moi.Gia = a.Gia;
        //                    moi.SoLo = a.SoLo;
        //                    moi.HanDung = a.HanDung;
        //                    moi.SoLuong = a.SoLuong - kd - _soLuongDYHH_KD;
        //                    qdsgia.Add(moi);
        //                }
        //            }
        //            #endregion
        //            #region trừ đi ds thuốc đã kê trên đơn hiện tại
        //            if (dsKeMoi.Count > 0)
        //            {
        //                foreach (giaSoLoHSD a in dsKeMoi)
        //                {
        //                    // _soLuongDYHH_KD = DungChung.Ham._getSL_DongY(_data, madv, a.SoLuong, makho);// tạm bỏ
        //                    double slke = a.SoLuong;
        //                    foreach (giaSoLoHSD b in qdsgia)
        //                    {
        //                        if (a.Gia == b.Gia && a.SoLo == b.SoLo && a.HanDung == b.HanDung)
        //                        {
        //                            if (b.SoLuong >= slke)
        //                            {
        //                                b.SoLuong = b.SoLuong - slke;
        //                                slke = 0;
        //                                break;
        //                            }
        //                            else
        //                            {
        //                                slke = slke - b.SoLuong;
        //                                b.SoLuong = 0;

        //                            }
        //                        }
        //                    }
        //                }
        //                qdsgia = qdsgia.Where(p => p.SoLuong > 0).ToList();
        //            }

        //            #endregion
        //            #region lấy giá đầu tiên còn tồn
        //            if (qdsgia.Count == 0)
        //            {
        //                dsach.Gia = abc.First().DonGia;
        //                dsach.SoLo = abc.First().SoLo;
        //                dsach.HanDung = abc.First().HanDung;
        //                dsach.SoLuong = 0;//abc.Where(p => p.DonGia == dsach.Gia && p.SoLo == dsach.SoLo && p.HanDung == dsach.HanDung).Sum(p => p.SoLuongX);
        //                Bien.SoLuongTon = 0;
        //                return dsach;
        //            }
        //            else
        //            {
        //                if (giaDangKe != null && giaDangKe.Gia > 0)
        //                {
        //                    var q1 = qdsgia.Where(p => p.Gia == giaDangKe.Gia && p.SoLo == giaDangKe.SoLo && p.HanDung == giaDangKe.HanDung).FirstOrDefault();
        //                    if (q1 != null)
        //                    {
        //                        Bien.SoLuongTon = q1.SoLuong;
        //                        dsach.Gia = giaDangKe.Gia;
        //                        dsach.SoLo = giaDangKe.SoLo;
        //                        dsach.SoLuong = q1.SoLuong;
        //                        dsach.HanDung = giaDangKe.HanDung;
        //                        return dsach;
        //                    }
        //                }
        //                else
        //                {
        //                    foreach (NhapDct ndct in abc)
        //                    {
        //                        var q1 = qdsgia.Where(p => p.Gia == ndct.DonGia && p.SoLo == ndct.SoLo && p.HanDung == ndct.HanDung).FirstOrDefault();
        //                        if (q1 != null)
        //                        {
        //                            Bien.SoLuongTon = q1.SoLuong;
        //                            dsach.Gia = ndct.DonGia;
        //                            dsach.SoLo = ndct.SoLo;
        //                            dsach.SoLuong = q1.SoLuong;
        //                            dsach.HanDung = ndct.HanDung;
        //                            return dsach;
        //                        }
        //                    }
        //                }
        //            }
        //            #endregion
        //        }
        //        return dsach;
        //        #endregion
        //    }

        //}

        internal static bool CheckTuTruc(int maKP, QLBV_Database.QLBVEntities data)
        {
            var qkp = data.KPhongs.Where(p => p.MaKP == maKP && p.PLoai == Bien.st_PhanLoaiKP.TuTruc).FirstOrDefault();
            if (qkp == null)
                return false;
            else
                return true;
        }

        public class InDonClass
        {
            public string TenDV { get; set; }
            public string HamLuong { get; set; }
            public int MaDV { get; set; }
            public int IDDonct { get; set; }
            public string DonVi { get; set; }
            public double SoLuong { get; set; }
            public string HuongDan { get; set; }
            public string TenHC { get; set; }
            public string TenDVMain { get; set; }
            public string MaTam { set; get; }
        }

        public class InternetConnection
        {
            [DllImport("wininet.dll")]
            private static extern bool InternetGetConnectedState(out int Description, int ReservedValue);

            public static bool IsConnectedToInternet()
            {
                bool returnValue = false;
                try
                {
                    int Desc;
                    returnValue = InternetGetConnectedState(out Desc, 0);
                }
                catch
                {
                    returnValue = false;
                }
                return returnValue;
            }

            public static bool CheckConnectionTimeOut()
            {
                Ping myPing = new Ping();
                String host = "google.com.vn";
                byte[] buffer = new byte[32];
                int timeout = 1000;
                PingOptions pingOptions = new PingOptions();
                try
                {
                    PingReply reply = myPing.Send(host, timeout, buffer, pingOptions);
                    if (reply.Status == IPStatus.Success)
                    {
                        return true;
                    }
                    else
                    {
                        return false;
                    }
                }
                catch (Exception ex)
                {
                    WriteLog.Info("Time out Connection: " + ex.Message);
                    return false;
                }
            }
        }

        public class response
        {
            public string id { get; set; }
            public bool success { get; set; }
            public string message { get; set; }
        }

        public class GetMessage
        {
            public string status { get; set; }
            public string location { get; set; }
        }

        private static bool checkValidate(bool AutoFomat, int lengthColum, int lengthFomat)
        {
            if (!AutoFomat && lengthColum != lengthFomat)
            {
                return false;
            }
            return true;
        }

        public static bool xuatExcel(object[,] mangHaiChieu, string[] arrcolName, int[] arrWidth, string sheetName, string path, bool checkAutoWith)
        {
            try
            {
                bool result = false;
                int length = mangHaiChieu.GetLength(0);
                int num = arrcolName.Length;
                if (checkValidate(checkAutoWith, num, arrWidth.Length))
                {
                    Microsoft.Office.Interop.Excel.Application application = (Microsoft.Office.Interop.Excel.Application)Activator.CreateInstance(Type.GetTypeFromCLSID(new Guid("00024500-0000-0000-C000-000000000046")));
                    Microsoft.Office.Interop.Excel.Workbook workbook = application.Workbooks.Add(Microsoft.Office.Interop.Excel.XlWBATemplate.xlWBATWorksheet);
                    Microsoft.Office.Interop.Excel.Worksheet worksheet = (Microsoft.Office.Interop.Excel.Worksheet)(dynamic)workbook.Worksheets[1];
                    worksheet.Name = sheetName;
                    int num2 = 0;
                    for (int i = 0; i < num; i++)
                    {
                        num2++;
                        ((dynamic)worksheet).Range[(dynamic)worksheet.Cells[1, i + 1], (dynamic)worksheet.Cells[length, i + 1]].NumberFormat = arrcolName[i];
                    }
                    ((dynamic)worksheet).Range[(dynamic)worksheet.Cells[1, 1], (dynamic)worksheet.Cells[length, num + 1]].Value = mangHaiChieu;
                    for (int j = 0; j < arrcolName.Length; j++)
                    {
                        Microsoft.Office.Interop.Excel.Range range = ((dynamic)worksheet).Range[(dynamic)worksheet.Cells[1, j + 1], (dynamic)worksheet.Cells[length, j + 1]];
                        if (checkAutoWith)
                        {
                            range.EntireColumn.AutoFit();
                        }
                        else
                        {
                            range.EntireColumn.ColumnWidth = arrWidth[j];
                            range.WrapText = true;
                        }
                    }
                    application.Visible = true;
                    try
                    {
                        workbook.SaveAs(path, Microsoft.Office.Interop.Excel.XlFileFormat.xlWorkbookNormal, null, null, false, false, Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlExclusive, false, false, false, false, false);
                        result = true;
                    }
                    catch (Exception)
                    {
                        result = false;
                    }
                    finally
                    {
                        Marshal.ReleaseComObject(workbook);
                        Marshal.ReleaseComObject(application);
                    }
                }
                else
                {
                    result = false;
                }
                return result;
            }
            catch (Exception)
            {
                return false;
            }
        }

        /// <summary>
        /// Thực thi truy vấn chờ.
        /// hiển thị load cho người dùng.
        /// voidnotpar (hành động không có biến).
        ///Caption tiêu đề chờ.
        ///Descreption nội dung chờ
        /// </summary>
        public static void CallProcessWaitingForm(Action voidnotpar, string Caption = "Đang tải...", string Descreption = "Đang tải dữ liệu vui lòng chờ!")
        {
            try
            {
                SplashScreenManager.ShowForm(typeof(ChucNang.WaitLichSuKCB));
                if (SplashScreenManager.Default != null)
                {
                    SplashScreenManager.Default.SetWaitFormCaption(Caption);
                    SplashScreenManager.Default.SetWaitFormDescription(Descreption);
                    voidnotpar();
                    SplashScreenManager.CloseForm();
                }
                else
                {
                    if (SplashScreenManager.Default != null)
                        SplashScreenManager.CloseForm();
                }
            }
            finally
            {
                if (SplashScreenManager.Default != null)
                    SplashScreenManager.CloseForm();
            }
        }

        public static string StringNgay(string Ngay, int i)
        {
            string valuestringdate = "Ngày.....tháng......Năm......";
            string[] NgayThangNamThoiGian = Ngay.Split(' ');
            string valuetime = NgayThangNamThoiGian[1].ToString();
            string hh = valuetime[0].ToString();
            string ss = valuetime[1].ToString();
            string valueDate = NgayThangNamThoiGian[0].ToString();
            string[] NgayThangNam = valueDate.Split('/');
            string dd = NgayThangNam[0].ToString();
            string MM = NgayThangNam[1].ToString();
            string yyyy = NgayThangNam[2].ToString();

            switch (i)
            {
                case 1:
                    valuestringdate = " Ngày " + dd + " tháng " + MM + " năm " + yyyy + ".";
                    break;

                case 2:
                    valuestringdate = "Giờ " + hh + " phút " + ss + " Ngày " + dd + " tháng " + MM + " năm " + yyyy + ".";
                    break;
            }
            return valuestringdate;
        }

        public static bool ResetTheTEKT(DateTime datemax, DateTime dateNhap)
        {
            bool kq = false;
            int value = dateNhap.Year - datemax.Year;
            if (value == 1)
            {
                kq = true;
            }
            return kq;
        }

        public static string DuongDanAnh(string Filelocal, string TenDV)
        {
            string file = "";
            string fileName = string.Empty;
            OpenFileDialog op = new OpenFileDialog();
            op.Multiselect = false;
            op.Filter = "JPEG (*.jpg)|*.jpg|BMP(*.bmp)| *.bmp|PNG (*.png)|*.png";
            if (op.ShowDialog() == System.Windows.Forms.DialogResult.OK)
            {
                fileName = op.FileName;
                file = Bien.DuongDan + fileName;
                file = layTenFileAnh(op.FileName, file);
            }
            return file;
        }

        private static string layTenFileAnh(string fileAnhTMH, string tenfileanh)
        {
            if (!string.IsNullOrEmpty(fileAnhTMH))
            {
                if (!File.Exists(tenfileanh))
                {
                    File.Copy(fileAnhTMH, tenfileanh, true);
                }
                else
                {
                    for (int i = 0; i < 100; i++)
                    {
                        string a = "";
                        string ex = Path.GetExtension(tenfileanh);
                        a = tenfileanh.Replace(ex, i + ex);
                        if (!File.Exists(a))
                        {
                            File.Copy(fileAnhTMH, a, true);
                            tenfileanh = a;
                            break;
                        }
                    }
                }
            }
            return tenfileanh;
        }

        /// <summary>
        /// Đọc file Excell
        /// </summary>
        /// <param name="patd">Đường dẫn</param>
        /// <param name="intColumns">Số cột + 1</param>
        /// <returns></returns>
        public static Object[,] LoadXlsx(string patd, int intColumns, string ViTri = "")
        {
            try
            {
                var package = new OfficeOpenXml.ExcelPackage(new FileInfo(patd));
                ExcelWorksheet workSheet = package.Workbook.Worksheets["Sheet"];
                Object[,] obj = new Object[workSheet.Dimension.End.Row - 1, intColumns];
                int num = 0;
                for (int i = workSheet.Dimension.Start.Row + 1; i <= workSheet.Dimension.End.Row; i++)
                {
                    if (num != workSheet.Dimension.End.Row - 1)
                    {
                        int k = 0;
                        for (int j = 1; j < intColumns; j++)
                        {
                            obj[num, k] = workSheet.Cells[i, j].Value ?? 0;
                            k++;
                        }
                        num++;
                    }
                }
                return obj;
            }
            catch (Exception ex)
            {
                Utilities.WriteLogError("Import Excel  " + ViTri + " " + ex);
                return null;
            }
        }

        /// <summary>
        /// Đọc file Excell
        /// </summary>
        /// <param name="patd">Đường dẫn</param>
        /// <param name="intColumns">Số cột + 1</param>
        /// <returns></returns>
        public static Object[,] LoadXlsxNhapBN(string patd, int intColumns, string ViTri = "")
        {
            try
            {
                var package = new OfficeOpenXml.ExcelPackage(new FileInfo(patd));
                ExcelWorksheet workSheet = package.Workbook.Worksheets["Sheet"];
                Object[,] obj = new Object[workSheet.Dimension.End.Row - 1, intColumns];
                int num = 0;
                for (int i = workSheet.Dimension.Start.Row; i <= workSheet.Dimension.End.Row; i++)
                {
                    if (num != workSheet.Dimension.End.Row - 1)
                    {
                        int k = 0;
                        for (int j = 1; j < intColumns; j++)
                        {
                            obj[num, k] = workSheet.Cells[i, j].Value ?? 0;
                            k++;
                        }
                        num++;
                    }
                }
                return obj;
            }
            catch (Exception ex)
            {
                Utilities.WriteLogError("Import Excel  " + ViTri + " " + ex);
                return null;
            }
        }

        /// <summary>
        /// Get chữ số la mã
        /// </summary>
        /// <param name="number"></param>
        /// <returns></returns>
        public static string ToRoman(int number)
        {
            if ((number < 0) || (number > 3999)) throw new ArgumentOutOfRangeException("insert value betwheen 1 and 3999");
            if (number < 1) return string.Empty;
            if (number >= 1000) return "M" + ToRoman(number - 1000);
            if (number >= 900) return "CM" + ToRoman(number - 900);
            if (number >= 500) return "D" + ToRoman(number - 500);
            if (number >= 400) return "CD" + ToRoman(number - 400);
            if (number >= 100) return "C" + ToRoman(number - 100);
            if (number >= 90) return "XC" + ToRoman(number - 90);
            if (number >= 50) return "L" + ToRoman(number - 50);
            if (number >= 40) return "XL" + ToRoman(number - 40);
            if (number >= 10) return "X" + ToRoman(number - 10);
            if (number >= 9) return "IX" + ToRoman(number - 9);
            if (number >= 5) return "V" + ToRoman(number - 5);
            if (number >= 4) return "IV" + ToRoman(number - 4);
            if (number >= 1) return "I" + ToRoman(number - 1);
            throw new ArgumentOutOfRangeException("something bad happened");
        }

        private static readonly string[] VietNamChar = new string[]
        {
            "aAeEoOuUiIdDyY",
            "áàạảãâấầậẩẫăắằặẳẵ",
            "ÁÀẠẢÃÂẤẦẬẨẪĂẮẰẶẲẴ",
            "éèẹẻẽêếềệểễ",
            "ÉÈẸẺẼÊẾỀỆỂỄ",
            "óòọỏõôốồộổỗơớờợởỡ",
            "ÓÒỌỎÕÔỐỒỘỔỖƠỚỜỢỞỠ",
            "úùụủũưứừựửữ",
            "ÚÙỤỦŨƯỨỪỰỬỮ",
            "íìịỉĩ",
            "ÍÌỊỈĨ",
            "đ",
            "Đ",
            "ýỳỵỷỹ",
            "ÝỲỴỶỸ"
        };

        /// <summary>
        /// Lọc dấu tiếng việt sang không dấu
        /// </summary>
        public static string LocDauTiengViet(string str) // NhuKT DZ 19/03/2022
        {
            //Thay thế và lọc dấu từng char
            for (int i = 1; i < VietNamChar.Length; i++)
            {
                for (int j = 0; j < VietNamChar[i].Length; j++)
                    str = str.Replace(VietNamChar[i][j], VietNamChar[0][i - 1]);
            }
            return str;
        }

        public static string GetTenTinh(string MaBV)// NhuKT DZ 06/04/2022
        {
            //QLBVEntities _data = new QLBVEntities();
            QLBV_Database.QLBVEntities _data = new QLBV_Database.QLBVEntities(Bien.StrCon);
            string MaTinh = MaBV.Substring(0, 2);
            string TenTinh = "";
            TenTinh = _data.DmTinhs.Where(p => p.MaTinh == MaTinh).FirstOrDefault().TenTinh.ToString();
            if (TenTinh.ToLower().Contains("tỉnh"))
            {
                TenTinh = TenTinh.Substring(4).Trim();
            }
            else if (TenTinh.ToLower().Contains("thành phố"))
            {
                TenTinh = TenTinh.Substring(10).Trim();
            }
            return TenTinh;
        }

        public class Utilities
        {
            public static void WriteLogError(Exception ex)
            {
                StreamWriter sw = null;
                try
                {
                    sw = new StreamWriter(AppDomain.CurrentDomain.BaseDirectory + "\\LogFile.txt", true);
                    sw.WriteLine(DateTime.Now.ToString("g") + ": " + ex.Source + "; " + ex.Message);
                    sw.Flush();
                    sw.Close();
                }
                catch
                {
                    // ignored
                }
            }

            public static void WriteLogError(string message)
            {
                StreamWriter sw = null;
                try
                {
                    sw = new StreamWriter(AppDomain.CurrentDomain.BaseDirectory + "\\LogFile.txt", true);
                    sw.WriteLine(DateTime.Now.ToString("g") + ": " + message);
                    sw.Flush();
                    sw.Close();
                }
                catch
                {
                    // ignored
                }
            }
        }

        public class UserLoginInvoice
        {
            public string username { get; set; }
            public string password { get; set; }
        }

        public class DthuocNew
        {
            public int IDDon { get; set; }
            public string TenDV { get; set; }
            public int MaDV { get; set; }
            public string DonVi { get; set; }
            public double SoLuong { get; set; }
            public int IDDonct { get; set; }
            public string HuongDan { get; set; }
        }

        public static string ToKenYTCS(string client_id, string grant_type, string username, string password)
        {
            var result = "";
            try
            {
                var request = (HttpWebRequest)WebRequest.Create("http://ytcs.ytebacgiang.com/oauth/token");

                var postData = "client_id=" + Uri.EscapeDataString(client_id);
                postData += "&grant_type=" + Uri.EscapeDataString(grant_type);
                postData += "&username=" + Uri.EscapeDataString(username);
                postData += "&password=" + Uri.EscapeDataString(password);
                var data = Encoding.ASCII.GetBytes(postData);

                request.Method = "POST";
                request.ContentType = "application/x-www-form-urlencoded";
                request.ContentLength = data.Length;

                using (var stream = request.GetRequestStream())
                {
                    stream.Write(data, 0, data.Length);
                }

                var response = (HttpWebResponse)request.GetResponse();

                result = new StreamReader(response.GetResponseStream()).ReadToEnd();
                return result;
            }
            catch (Exception)
            {
                MessageBox.Show("Đăng nhập thất bại! Mã lỗi: " + result);
                return result;
            }
        }

        public static string GuiYTCS(string client_id, string grant_type, string username, string password, string input)
        {
            var result = "";
            string strtoken = "";
            string domain = "";
            string url = "";
            string nhom = "";
            try
            {
                var _result = ToKenYTCS(client_id, grant_type, username, password);
                var objtoken = JsonConvert.DeserializeObject<Bien.ThongDiepTL>(_result);
                strtoken = objtoken.access_token;
                domain = objtoken.Domain;
                //input = "đầu vào của bệnh nhân";
                nhom = "nhom02";
                url = "http://ytcs.ytebacgiang.com/api/" + domain + "/lienthongv20/" + nhom;
                var httpWebRequest = (HttpWebRequest)WebRequest.Create(url);
                httpWebRequest.ContentType = "application/json";
                httpWebRequest.Method = "POST";
                httpWebRequest.Headers.Add("Authorization", "Bearer " + strtoken);
                httpWebRequest.Proxy = new WebProxy();//no proxy

                //   string jsonData = JsonConvert.SerializeObject(input);

                if (!string.IsNullOrEmpty(input))
                {
                    using (var streamWriter = new StreamWriter(httpWebRequest.GetRequestStream()))
                    {
                        string json = input;

                        streamWriter.Write(json);
                        streamWriter.Flush();
                        streamWriter.Close();
                    }
                }
                InitiateSSLTrust();//bypass SSL
                var httpResponse = (HttpWebResponse)httpWebRequest.GetResponse();
                result = string.Empty;
                using (var streamReader = new StreamReader(httpResponse.GetResponseStream()))
                {
                    result = streamReader.ReadToEnd();
                }

                return result;
            }
            catch (Exception)
            {
                MessageBox.Show("Đẩy dữ liệu thất bại! Mã lỗi: " + result);
                return result;
            }
        }

        public static string ConvertToUnSign(string input)
        {
            input = input.Trim();
            for (int i = 0x20; i < 0x30; i++)
            {
                input = input.Replace(((char)i).ToString(), " ");
            }
            Regex regex = new Regex(@"\p{IsCombiningDiacriticalMarks}+");
            string str = input.Normalize(NormalizationForm.FormD);
            string str2 = regex.Replace(str, string.Empty).Replace('đ', 'd').Replace('Đ', 'D');
            while (str2.IndexOf("?") >= 0)
            {
                str2 = str2.Remove(str2.IndexOf("?"), 1);
            }
            return str2;
        }

        //public static bool WtireLogToTextFile(string strFilePath, string strFileName, Models.Business.Log.LogModel log)
        //{
        //    try
        //    {
        //        var settings = new System.Xml.XmlWriterSettings
        //        {
        //            OmitXmlDeclaration = true,
        //            Indent = true
        //        };

        //        using (XmlWriter writer = XmlWriter.Create(string.Format("{0}\\{1}", string.IsNullOrEmpty(strFilePath) ? Path.GetTempPath() : strFilePath, strFileName), settings))
        //        {
        //            writer.WriteStartElement("Log");
        //            writer.WriteElementString("MA_CAN_BO", log.MaCB);
        //            writer.WriteElementString("TEN_CAN_BO", log.TenCB);
        //            writer.WriteElementString("THAO_TAC", log.Action);
        //            writer.WriteElementString("THOI_GIAN", log.DateTime.ToString("{0:dd/MM/yyyy HH:mm:ss}"));
        //            writer.WriteEndElement();

        //            return true;
        //        }
        //    }
        //    catch (Exception ex)
        //    {
        //        return false;
        //    }
        //}
    }

    public class Ketqua
    {
        public int maKetQua { get; set; }
        public string maGiaoDich { get; set; }
        public string mss { get; set; }
    }
}